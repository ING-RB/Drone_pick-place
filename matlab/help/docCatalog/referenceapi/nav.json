{"schema":"referenceapi_schema.json","schemaVersion":"1.0","docVersion":"doc25a.2968260.Bdoc25a.2967890.pass.r2025a","productName":"Navigation Toolbox","baseCode":"NV","helpFolder":"nav","helpLocation":"nav",  "refItems" : [{"href":"ref\/accelcal.html","refentity":[{"type":"function","name":"accelcal","fcntype":"simple"}],"refpurpose":"Calibration parameters for accelerometer","introduced":"R2023b","description":"This MATLAB function returns matrix A and vector b used to correct uncalibrated accelerometer measurements based on the calibration data D.","syntaxgroup":[{"title":"","syntax":["[A,b] = accelcal(D)","[A,b] = accelcal(XUP,XDOWN,YUP,YDOWN,ZUP,ZDOWN)","[A,b] = accelcal(___,Gravity=g)"]}],"inputgroup":[{"title":"","inputs":[{"name":"D","purpose":"Measurements at six calibration orientations","htmlid":"mw_424f3588-4ecc-416d-906d-1e671d8deeff","value":["N-by-3 matrix"]},{"name":"XUP","purpose":"Measurements at x-up orientation","htmlid":"mw_0cffb146-7179-400d-a324-ac589806daad","value":["N_{1}-by-3 matrix"]},{"name":"XDOWN","purpose":"Measurements at x-down orientation","htmlid":"mw_3fc9df48-96d5-425e-a096-142665dc28b6","value":["N_{2}-by-3 matrix"]},{"name":"YUP","purpose":"Measurements at y-up orientation","htmlid":"mw_ee197815-98de-4dc1-b33d-327d8b6d9b4d","value":["N_{3}-by-3 matrix"]},{"name":"YDOWN","purpose":"Measurements at y-down orientation","htmlid":"mw_6537fd68-6027-42bf-9b1c-4600a1cd0eef","value":["N_{4}-by-3 matrix"]},{"name":"ZUP","purpose":"Measurements at z-up orientation","htmlid":"mw_cb11bcff-09a1-41d8-858f-24ec98c8754d","value":["N_{5}-by-3 matrix"]},{"name":"ZDOWN","purpose":"Measurements at z-down orientation","htmlid":"mw_48a1f6eb-ce48-4cd2-a716-1acb2e255f46","value":["N_{6}-by-3 matrix"]},{"name":"g","purpose":"Earth gravity constant","htmlid":"mw_de21dbb4-2408-481c-8e1c-7d773d1411d4","value":["positive scalar"]}]}],"outputs":[{"name":"A","purpose":"Calibration matrix","htmlid":"mw_941869f2-ea7d-4df3-8997-1b1162f4d2d1","value":["3-by-3 matrix"]},{"name":"b","purpose":"Calibration offset vector","htmlid":"mw_3de572de-e91a-4b76-8545-b095e0a7049d","value":["1-by-3 vector"]}],"examples":[{"url":"accelcal.html#mw_31646033-35c0-4ceb-85f6-58ccb9f50dc1","open_command":"openExample('shared_positioning\/CalibrateAccelerometerMeasurementsExample')","title":"Calibrate Accelerometer Measurements"}],"seealso":[{"url":"magcal.html","name":"magcal"},{"url":"imusensor-system-object.html","name":"imuSensor"},{"url":"accelparams.html","name":"accelparams"}]},{"href":"ref\/accelparams.html","refentity":[{"type":"object","name":"accelparams"},{"type":"function","name":"accelparams","fcntype":"constructor"}],"refpurpose":"Accelerometer sensor parameters","introduced":"R2018b","description":"The accelparams class creates an accelerometer sensor parameters object.","syntaxgroup":[{"title":"","syntax":["params = accelparams","params = accelparams(Name,Value)"]}],"classpropertygroup":[{"classproperty":[{"name":"MeasurementRange","purpose":"Maximum sensor reading (m\/s^{2})","htmlid":"mw_83be9789-8db4-463e-a48b-389aa3809e2c","value":["inf","real positive scalar"],"defaultvalue":"inf"},{"name":"Resolution","purpose":"Resolution of sensor measurements ((m\/s^{2})\/LSB)","htmlid":"mw_81474f3b-a9b8-4813-9490-9989f5a07fff","value":["0","real nonnegative scalar"],"defaultvalue":"0"},{"name":"ConstantBias","purpose":"Constant sensor offset bias (m\/s^{2})","htmlid":"mw_beb3e433-932e-4c6f-abaa-df772389971d","value":["[0 0 0]","real scalar","real 3-element row vector"],"defaultvalue":"[0 0 0]"},{"name":"AxesMisalignment","purpose":"Sensor axes skew (%)","htmlid":"mw_3c2e7959-f49f-4730-a7da-5cbe4ff3fc58_sep_mw_d6c5e1f2-deb1-431a-8238-c5358b33541a","value":["diag([100 100 100])","scalar","3-element row vector","3-by-3 matrix"],"defaultvalue":"diag([100 100 100])"},{"name":"NoiseDensity","purpose":"Power spectral density of sensor noise (m\/s^{2}\/√Hz)","htmlid":"mw_9514b29c-7c80-4bbc-b0bf-212c2a94ea30","value":["[0 0 0]","real scalar","real 3-element row vector"],"defaultvalue":"[0 0 0]"},{"name":"BiasInstabilityCoefficients","purpose":"Filter coefficients for bias instability noise generation","htmlid":"mw_3c2e7959-f49f-4730-a7da-5cbe4ff3fc58_sep_mw_a80589ac-5aa3-47c2-8b3f-18dd430b1482","value":["fractalcoef","structure"],"defaultvalue":"fractalcoef"},{"name":"BiasInstability","purpose":"Instability of the bias offset (m\/s^{2})","htmlid":"mw_6b195b31-bd3c-400c-8297-2eedead646fb","value":["[0 0 0]","real scalar","real 3-element row vector"],"defaultvalue":"[0 0 0]"},{"name":"RandomWalk","purpose":"Integrated white noise of sensor ((m\/s^{2})*(√Hz))","htmlid":"mw_b814bd98-c9b2-44a2-a970-88dd56e9c318","value":["[0 0 0]","real scalar","real 3-element row vector"],"defaultvalue":"[0 0 0]"},{"name":"NoiseType","purpose":"Type of random noise","htmlid":"mw_3c2e7959-f49f-4730-a7da-5cbe4ff3fc58_sep_mw_889556fa-3b72-4ce7-a9b2-67f64114ce1b","value":["\"double-sided\"","\"single-sided\""],"defaultvalue":"\"double-sided\""},{"name":"TemperatureBias","purpose":"Sensor bias from temperature ((m\/s^{2})\/℃)","htmlid":"mw_cac16126-0f5e-4d4e-b114-3c1d26642519","value":["[0 0 0]","real scalar","real 3-element row vector"],"defaultvalue":"[0 0 0]"},{"name":"TemperatureScaleFactor","purpose":"Scale factor error from temperature (%\/℃)","htmlid":"mw_75912da3-c6e0-4b4c-bae3-8daba6911945","value":["[0 0 0]","real scalar in the range [0,100]","real 3-element row vector in the range [0,100]"],"defaultvalue":"[0 0 0]"}]}],"examples":[{"url":"accelparams.html#mw_17109890-7ecf-409d-8679-65ecb86090f8","open_command":"openExample('shared_positioning\/GenerateAccelerometerDataFromStationaryInputsExample')","title":"Generate Accelerometer Data from Stationary Inputs"}],"seealso":[{"url":"imusensor-system-object.html","name":"imuSensor"},{"url":"gyroparams.html","name":"gyroparams"},{"url":"magparams.html","name":"magparams"}]},{"href":"ref\/ahrs.html","refentity":[{"type":"block","name":"AHRS"}],"refpurpose":"Orientation from accelerometer, gyroscope, and magnetometer readings","introduced":"R2020a","description":"The AHRS Simulink block fuses accelerometer, magnetometer, and gyroscope sensor data to estimate device orientation.","icon":{"fileref":"ref\/ahrsfig.png","alt":"AHRS block"},"libraries":["Navigation Toolbox \/ Multisensor Positioning \/ Navigation Filters","Sensor Fusion and Tracking Toolbox \/ Multisensor Positioning \/ Navigation Filters"],"inputgroup":[{"title":"","inputs":[{"name":"Accel","purpose":"Accelerometer readings in sensor body coordinate system (m\/s^{2})","htmlid":"mw_0e7e9f43-e2aa-415a-9ef7-daf4f5a3d0ef","value":["N-by-3 matrix of real scalar"]},{"name":"Gyro","purpose":"Gyroscope readings in sensor body coordinate system (rad\/s)","htmlid":"mw_c97d8837-68c3-4d7f-890c-0bf0de0119d0","value":["N-by-3 matrix of real scalar"]},{"name":"Mag","purpose":"Magnetometer readings in sensor body coordinate system (µT)","htmlid":"mw_d956116b-0043-4bf1-9004-f80ecd8a657d","value":["N-by-3 matrix of real scalar"]}]}],"outputs":[{"name":"Orientation","purpose":"Orientation of sensor body frame relative to navigation frame","htmlid":"mw_1cded887-30d8-470e-930c-d3da9d9f88b1","value":["M-by-4 array of scalar","3-by-3-by-M-element rotation matrix"]},{"name":"Angular Velocity","purpose":"Angular velocity in sensor body coordinate system (rad\/s)","htmlid":"mw_67336aed-1f82-4699-ad4b-9ad6ee7f613a","value":["M-by-3 array of real scalar"]}],"parameters":[{"name":"Reference frame","purpose":"Navigation reference frame","htmlid":"mw_8a66b4c1-b25c-4f63-90c0-3b1349769070","value":["NED","ENU"],"defaultvalue":"NED"},{"name":"Decimation factor","purpose":"Decimation factor","htmlid":"mw_63da9fe9-a0bc-4fdb-8182-6667678f9457","value":["1","positive integer"],"defaultvalue":"1"},{"name":"Initial process noise","purpose":"Initial process noise","htmlid":"mw_be5299d3-a4a6-4ea4-8e1e-9e1a5f2c54e7","value":["ahrsfilter.defaultProcessNoise","12-by-12 matrix of real scalar"],"defaultvalue":"ahrsfilter.defaultProcessNoise"},{"name":"Orientation format","purpose":"Orientation output format","htmlid":"mw_b6e3ba54-02f3-4dc9-8b81-ec0f324ee2d5","value":["'quaternion'","'Rotation matrix'"],"defaultvalue":"'quaternion'"},{"name":"Simulate using","purpose":"Type of simulation to run","htmlid":"mw_a604f171-54c5-4762-9edd-f887c21066de","value":["Interpreted Execution","Code Generation"],"defaultvalue":"Interpreted Execution"},{"name":"Accelerometer noise ((m\/s2)2)","purpose":"Variance of accelerometer signal noise ((m\/s^{2})^{2})","htmlid":"mw_4626351d-f5e2-4532-b3e9-467c8c8e6e62","value":["0.0001924722","positive real scalar"],"defaultvalue":"0.0001924722"},{"name":"Gyroscope noise ((rad\/s)2)","purpose":"Variance of gyroscope signal noise ((rad\/s)^{2})","htmlid":"mw_433f1c77-232b-4653-85d5-67665deedc64","value":["9.1385e-5","positive real scalar"],"defaultvalue":"9.1385e-5"},{"name":"Magnetometer noise (μT2)","purpose":"Variance of magnetometer signal noise (μT^{2})","htmlid":"mw_fb7e9389-581f-4f5d-8ecb-e5a8323efceb","value":["0.1","positive real scalar"],"defaultvalue":"0.1"},{"name":"Gyroscope drift noise (rad\/s)","purpose":"Variance of gyroscope offset drift ((rad\/s)^{2})","htmlid":"mw_d368fe1e-92c9-406d-ba1f-56c0d4b0b0fb","value":["3.0462e-13","positive real scalar"],"defaultvalue":"3.0462e-13"},{"name":"Linear acceleration noise ((m\/s2)2)","purpose":"Variance of linear acceleration noise (m\/s^{2})^{2}","htmlid":"mw_dc6e801d-e630-49a6-8ab3-d5bd56dee436","value":["0.0096236100000000012","positive real scalar"],"defaultvalue":"0.0096236100000000012"},{"name":"Magnetic disturbance noise (μT2)","purpose":"Variance of magnetic disturbance noise ((μT)^{2})","htmlid":"mw_da6bfae5-88af-4117-87a3-53060fd95548","value":["0.5","real finite positive scalar"],"defaultvalue":"0.5"},{"name":"Linear acceleration decay factor","purpose":"Decay factor for linear acceleration drift","htmlid":"mw_81b8fe02-ce8a-46a1-af8a-154457f10843","value":["0.5","scalar in the range [0,1)"],"defaultvalue":"0.5"},{"name":"Magnetic disturbance decay factor","purpose":"Decay factor for magnetic disturbance","htmlid":"mw_dc2a3620-bee4-4688-9d22-96e8ac9cc9f1","value":["0.5","positive scalar in the range [0,1]"],"defaultvalue":"0.5"},{"name":"Magnetic field strength (μT)","purpose":"Magnetic field strength (μT)","htmlid":"mw_57374c25-9a64-41c5-a327-8a0b1a7c788e","value":["50","real positive scalar"],"defaultvalue":"50"}],"examples":[{"url":"..\/ug\/imu-sensor-fusion-with-simulink.html","open_command":"openExample('shared_positioning\/IMUSensorFusionWithSimulinkExample')","title":"IMU Sensor Fusion with Simulink"}],"seealso":[{"url":"ahrsfilter-system-object.html","name":"ahrsfilter"},{"url":"ecompass.html","name":"ecompass"},{"url":"imufilter-system-object.html","name":"imufilter"},{"url":"imusensor-system-object.html","name":"imuSensor"},{"url":"gpssensor-system-object.html","name":"gpsSensor"}]},{"href":"ref\/ahrs10filter.copy.html","refentity":[{"type":"function","name":"copy","fcntype":"instancemethod"},{"type":"method","name":"ahrs10filter.copy","fcntype":"instancemethod"}],"refpurpose":"Create copy of ahrs10filter","introduced":"R2020b","description":"This MATLAB function returns a copy of the ahrs10filter, filter, with the exactly same property values.","syntaxgroup":[{"title":"","syntax":["newFilter = copy(filter)"]}],"inputgroup":[{"title":"","inputs":[{"name":"filter","purpose":"Filter to be copied","htmlid":"mw_e88ed022-cc44-45ba-b977-596aae21f290","value":["ahrs10filter"]}]}],"outputs":[{"name":"newFilter","purpose":"New copied filter","htmlid":"mw_4a56aa20-d854-40ce-97f0-5427c35c8d4d","value":["ahrs10filter"]}],"examples":[{"url":"ahrs10filter.copy.html#mw_6514b1f3-4572-433b-9628-8dcf9770104a","open_command":"openExample('shared_positioning\/CreateCopyOfAhrs10filterExample')","title":"Create Copy of ahrs10filter"}],"seealso":[{"url":"ahrs10filter.html","name":"ahrs10filter"}]},{"href":"ref\/ahrs10filter.correct.html","refentity":[{"type":"function","name":"correct","fcntype":"instancemethod"},{"type":"method","name":"ahrs10filter.correct","fcntype":"instancemethod"}],"refpurpose":"Correct states using direct state measurements for ahrs10filter","introduced":"R2019a","description":"This MATLAB function corrects the state and state estimation error covariance based on the measurement and measurement covariance.","syntaxgroup":[{"title":"","syntax":["correct(FUSE,idx,measurement,measurementCovariance)"]}],"inputgroup":[{"title":"","inputs":[{"name":"FUSE","purpose":"ahrs10filter object","htmlid":"mw_b4652c8d-5a8c-4afb-892c-64ae5f2c21a7","value":["object"]},{"name":"idx","purpose":"State vector index of measurement to correct","htmlid":"mw_248d6b0b-2560-437f-a777-d224e756cf5a","value":["N-element vector of increasing integers in the range [1,18]"]},{"name":"measurement","purpose":"Direct measurement of state","htmlid":"mw_d1c50dd0-0efc-42ba-ba52-567f13c98164","value":["N-element vector"]},{"name":"measurementCovariance","purpose":"Covariance of measurement","htmlid":"mw_f36daae1-5d4f-47e5-b76a-4a117266e97f","value":["scalar","N-element vector","N-by-N matrix"]}]}],"examples":[{"url":"ahrs10filter.correct.html#mw_48d1279a-63d7-4ab4-9670-f2126b58fcbe","open_command":"openExample('shared_positioning\/CorrectAhrs10filterUsingDirectMeasurementExample')","title":"Correct ahrs10filter Using Direct Measurement"}],"seealso":[{"url":"ahrs10filter.html","name":"ahrs10filter"},{"url":"insfilter.html","name":"insfilter"}]},{"href":"ref\/ahrs10filter.fusealtimeter.html","refentity":[{"type":"function","name":"fusealtimeter","fcntype":"instancemethod"},{"type":"method","name":"ahrs10filter.fusealtimeter","fcntype":"instancemethod"}],"refpurpose":"Correct states using altimeter data for ahrs10filter","introduced":"R2019a","description":"This MATLAB function fuses altimeter data to correct the state estimate.","syntaxgroup":[{"title":"","syntax":["[res,resCov] = fusealtimeter(FUSE,altimeterReadings,altimeterReadingsCovariance)"]}],"inputgroup":[{"title":"","inputs":[{"name":"FUSE","purpose":"ahrs10filter object","htmlid":"mw_c2790ae8-1010-4355-baeb-13df7b23f5b5","value":["object"]}]},{"title":"","inputs":[{"name":"altimeterReadings","purpose":"Altimeter readings (m)","htmlid":"mw_fd047ce0-9607-475f-a961-c0be221f9891","value":["real scalar"]},{"name":"altimeterReadingsCovariance","purpose":"Altimeter readings error covariance (m^{2})","htmlid":"mw_5662266c-84fb-4664-b9d5-65ecb6160a1a","value":["real scalar"]}]}],"outputs":[{"name":"res","purpose":"Measurement residual","htmlid":"mw_eb18cfc7-4fb8-443a-bb39-7e326a1c3278","value":["scalar"]},{"name":"resCov","purpose":"Residual covariance","htmlid":"mw_ebc6e488-21d3-4216-9608-7124f7150503","value":["nonnegative scalar"]}],"examples":[{"url":"ahrs10filter.fusealtimeter.html#mw_04c31af9-8a90-423f-a902-a48331176727","open_command":"openExample('shared_positioning\/FuseAltimeterDataUsingAhrs10filterExample')","title":"Fuse Altimeter Data Using ahrs10filter"}],"seealso":[{"url":"ahrs10filter.html","name":"ahrs10filter"},{"url":"insfilter.html","name":"insfilter"}]},{"href":"ref\/ahrs10filter.fusemag.html","refentity":[{"type":"function","name":"fusemag","fcntype":"instancemethod"},{"type":"method","name":"ahrs10filter.fusemag","fcntype":"instancemethod"}],"refpurpose":"Correct states using magnetometer data for ahrs10filter","introduced":"R2019a","description":"This MATLAB function fuses magnetometer data to correct the state estimate.","syntaxgroup":[{"title":"","syntax":["[res,resCov] = fusemag(FUSE,magReadings,magReadingsCovariance)"]}],"inputgroup":[{"title":"","inputs":[{"name":"FUSE","purpose":"ahrs10filter object","htmlid":"mw_ebde5be1-6c6b-43cc-a964-e2f4bbde874c","value":["object"]}]},{"title":"","inputs":[{"name":"magReadings","purpose":"Magnetometer readings (µT)","htmlid":"mw_4fe8c264-d6d8-4b1d-8daf-d367eeeb7357","value":["3-element row vector"]},{"name":"magReadingsCovariance","purpose":"Magnetometer readings error covariance (µT^{2})","htmlid":"mw_579468c7-f877-4d1a-a2e7-4db4ea47d0cd","value":["scalar","3-element row vector","3-by-3 matrix"]},{"name":"res","purpose":"Residual","htmlid":"mw_66746b40-e998-41f3-a725-ced9cb79f403_sep_mw_679ee21e-0883-446b-883e-4a12028ec138","value":["1-by-3 vector of real values"]},{"name":"resCov","purpose":"Residual covariance","htmlid":"mw_66746b40-e998-41f3-a725-ced9cb79f403_sep_mw_162419d9-8f40-48e3-b6cc-43b42a57829d","value":["3-by-3 matrix of real values"]}]}],"examples":[{"url":"ahrs10filter.fusemag.html#mw_bf23c357-2b13-4b45-8b77-968bf9801a23","open_command":"openExample('shared_positioning\/FuseMagnetometerDataFromAhrs10filterExample')","title":"Fuse Magnetometer Data from ahrs10filter"}],"seealso":[{"url":"ahrs10filter.html","name":"ahrs10filter"},{"url":"insfilter.html","name":"insfilter"}]},{"href":"ref\/ahrs10filter.html","refentity":[{"type":"object","name":"ahrs10filter"},{"type":"function","name":"ahrs10filter","fcntype":"constructor"}],"refpurpose":"Height and orientation from MARG and altimeter readings","introduced":"R2019a","description":"The ahrs10filter object fuses MARG and altimeter sensor data to estimate device height and orientation.","syntaxgroup":[{"title":"","syntax":["FUSE = ahrs10filter","FUSE = ahrs10filter('ReferenceFrame',RF)","FUSE = ahrs10filter(___,Name=Value)"]}],"inputgroup":[{"title":"","inputs":[{"name":"RF","purpose":"Local navigation coordinate system","htmlid":"mw_9a1e277b-f7f9-4945-8845-cf6ad1c6708a_sep_mw_cc120d78-4a41-44b5-901a-e71ecd8fbcb4","value":["'NED'","'ENU'"],"defaultvalue":"'NED'"}]}],"classpropertygroup":[{"classproperty":[{"name":"IMUSampleRate","purpose":"Sample rate of the IMU (Hz)","htmlid":"mw_281f3b84-6ed3-4978-ad09-c07b0a0bd0a2","value":["100","positive scalar"],"defaultvalue":"100"},{"name":"GyroscopeNoise","purpose":"Multiplicative process noise variance from gyroscope ((rad\/s)^{2})","htmlid":"mw_8ae3c89e-4eeb-420c-8651-ae877b78407d","value":["[1e-9,1e-9,1e-9]","scalar","three-element row vector"],"defaultvalue":"[1e-9,1e-9,1e-9]"},{"name":"AccelerometerNoise","purpose":"Multiplicative process noise variance from accelerometer ((m\/s^{2})^{2})","htmlid":"mw_d4e1a609-7269-4e1e-b032-eb53ace64fe2","value":["[1e-4,1e-4,1e-4]","scalar","three-element row vector"],"defaultvalue":"[1e-4,1e-4,1e-4]"},{"name":"GyroscopeBiasNoise","purpose":"Multiplicative process noise variance from gyroscope bias ((rad\/s^{2})^{2})","htmlid":"mw_b7470bc9-22af-40e4-9ef6-a48d7cd3ccb0","value":["[1e-10,1e-10,1e-10]","scalar","three-element row vector"],"defaultvalue":"[1e-10,1e-10,1e-10]"},{"name":"AccelerometerBiasNoise","purpose":"Multiplicative process noise variance from accelerometer bias ((m\/s^{2})^{2})","htmlid":"mw_e70dd46a-5cd4-4e9b-8ae1-d41758ef0635","value":["[1e-4,1e-4,1e-4]","scalar","three-element row vector"],"defaultvalue":"[1e-4,1e-4,1e-4]"},{"name":"GeomagneticVectorNoise","purpose":"Additive process noise for geomagnetic vector (μT^{2})","htmlid":"mw_ba3b32d2-da80-4caf-821f-403fd3709792","value":["[1e-6,1e-6,1e-6]","scalar","three-element row vector"],"defaultvalue":"[1e-6,1e-6,1e-6]"},{"name":"MagnetometerBiasNoise","purpose":"Additive process noise for magnetometer bias (μT^{2})","htmlid":"mw_775139ef-2cdd-4003-8746-566001413392","value":["[0.1,0.1,0.1]","scalar","three-element row vector"],"defaultvalue":"[0.1,0.1,0.1]"},{"name":"State","purpose":"State vector of extended Kalman filter","htmlid":"mw_c02a7937-01ca-4ec5-822f-3e24e37df230","value":["18-element column vector"]},{"name":"StateCovariance","purpose":"State error covariance for extended Kalman filter","htmlid":"mw_382768c7-7051-4434-904b-b0505d94345e","value":["eye(18)*1e-6","18-by-18 matrix"],"defaultvalue":"eye(18)*1e-6"}]}],"objectfunctions":[{"title":"","functions":[{"name":"predict","url":"ahrs10filter.predict.html","description":"Update states using accelerometer and gyroscope data  for\n        ahrs10filter"},{"name":"fusemag","url":"ahrs10filter.fusemag.html","description":"Correct states using magnetometer data  for\n      ahrs10filter"},{"name":"fusealtimeter","url":"ahrs10filter.fusealtimeter.html","description":"Correct states using altimeter data  for\n      ahrs10filter"},{"name":"correct","url":"ahrs10filter.correct.html","description":"Correct states using direct state measurements for\n      ahrs10filter"},{"name":"residual","url":"ahrs10filter.residual.html","description":"Residuals and residual covariances from direct state measurements  for\n        ahrs10filter"},{"name":"residualmag","url":"ahrs10filter.residualmag.html","description":"Residuals and residual covariance from magnetometer measurements  for\n        ahrs10filter"},{"name":"residualaltimeter","url":"ahrs10filter.residualaltimeter.html","description":"Residuals and residual covariance from altimeter measurements  for\n        ahrs10filter"},{"name":"pose","url":"ahrs10filter.pose.html","description":"Current orientation and position estimate  for\n      ahrs10filter"},{"name":"reset","url":"ahrs10filter.reset.html","description":"Reset internal states  for ahrs10filter"},{"name":"stateinfo","url":"ahrs10filter.stateinfo.html","description":"Display state vector information  for ahrs10filter"},{"name":"tune","url":"ahrs10filter.tune.html","description":"Tune ahrs10filter parameters to reduce estimation\n      error"},{"name":"copy","url":"ahrs10filter.copy.html","description":"Create copy of ahrs10filter"}]}],"examples":[{"url":"ahrs10filter.html#mw_9d685799-87c2-4c02-85d2-b2c7cf7f3ce3","open_command":"openExample('shared_positioning\/EstimatePoseOfUAVAhrs10Example')","title":"Estimate Pose of UAV"}],"seealso":[{"url":"ahrsfilter-system-object.html","name":"ahrsfilter"},{"url":"insfilter.html","name":"insfilter"}]},{"href":"ref\/ahrs10filter.pose.html","refentity":[{"type":"function","name":"pose","fcntype":"instancemethod"},{"type":"method","name":"ahrs10filter.pose","fcntype":"instancemethod"}],"refpurpose":"Current orientation and position estimate for ahrs10filter","introduced":"R2019a","description":"This MATLAB function returns the current estimate of the pose.","syntaxgroup":[{"title":"","syntax":["[position, orientation, velocity] = pose(FUSE)","[position, orientation, velocity] = pose(FUSE,format)"]}],"inputgroup":[{"title":"","inputs":[{"name":"FUSE","purpose":"ahrs10filter object","htmlid":"mw_38ec0d41-633a-4dde-bd21-179ac780fae7","value":["object"]},{"name":"format","purpose":"Output orientation format","htmlid":"mw_544a1349-fe8d-4e95-b2b6-37fcb47f9064","value":["'quaternion'","'rotmat'"],"defaultvalue":"'quaternion'"}]}],"outputs":[{"name":"position","purpose":"Position estimate expressed in the local coordinate system (m)","htmlid":"mw_1d384cc0-6661-43d9-8c34-932284306a08","value":["3-element row vector"]},{"name":"orientation","purpose":"Orientation estimate expressed in the local coordinate system","htmlid":"mw_218bc582-99e2-48f7-a797-e704f415b0e5","value":["quaternion","3-by-3 rotation matrix"]},{"name":"velocity","purpose":"Velocity estimate expressed in local coordinate system (m\/s)","htmlid":"mw_d9f5908e-d0c5-43b1-9574-783f75a450f0","value":["3-element row vector"]}],"examples":[{"url":"ahrs10filter.pose.html#mw_da749828-955a-4111-b913-d5d59c19bc61","open_command":"openExample('shared_positioning\/ObtainPoseFromAhrs10filterExample')","title":"Obtain Pose from ahrs10filter"}],"seealso":[{"url":"ahrs10filter.html","name":"ahrs10filter"},{"url":"insfilter.html","name":"insfilter"}]},{"href":"ref\/ahrs10filter.predict.html","refentity":[{"type":"function","name":"predict","fcntype":"instancemethod"},{"type":"method","name":"ahrs10filter.predict","fcntype":"instancemethod"}],"refpurpose":"Update states using accelerometer and gyroscope data for ahrs10filter","introduced":"R2019a","description":"This MATLAB function fuses accelerometer and gyroscope data to update the state estimate.","syntaxgroup":[{"title":"","syntax":["predict(FUSE,accelReadings,gyroReadings)"]}],"inputgroup":[{"title":"","inputs":[{"name":"FUSE","purpose":"ahrs10Filter object","htmlid":"mw_70ca94e0-be3f-4e55-bdfa-e9defb213d07","value":["object"]},{"name":"accelReadings","purpose":"Accelerometer readings in the sensor body coordinate system (m\/s^{2})","htmlid":"mw_3d656ea2-7746-4a5b-8b46-529c872fe1b0","value":["N-by-3 matrix"]},{"name":"gyroReadings","purpose":"Gyroscope readings in the sensor body coordinate system (rad\/s)","htmlid":"mw_7cc9f0c9-3c10-4c85-a874-64ec016bfe66","value":["N-by-3 matrix"]}]}],"examples":[{"url":"ahrs10filter.predict.html#mw_d0004de3-5aba-48bc-975a-9f9acdbf98aa","open_command":"openExample('shared_positioning\/PredictStateUsingAhrs10filterExample')","title":"Predict State Using ahrs10filter"}],"seealso":[{"url":"ahrs10filter.html","name":"ahrs10filter"},{"url":"insfilter.html","name":"insfilter"}]},{"href":"ref\/ahrs10filter.reset.html","refentity":[{"type":"function","name":"reset","fcntype":"instancemethod"},{"type":"method","name":"ahrs10filter.reset","fcntype":"instancemethod"}],"refpurpose":"Reset internal states for ahrs10filter","introduced":"R2019a","description":"This MATLAB function resets the State, StateCovariance, and internal integrators to their default values.","syntaxgroup":[{"title":"","syntax":["reset(FUSE)"]}],"inputgroup":[{"title":"","inputs":[{"name":"FUSE","purpose":"ahrs10filter object","htmlid":"mw_3f48f0e1-fcaf-4c33-ae2b-80b575391e55","value":["object"]}]}],"examples":[{"url":"ahrs10filter.reset.html#mw_5bd54429-ddd8-4165-99b9-5b093bd922b9","open_command":"openExample('shared_positioning\/ResetStateOfAhrs10filterExample')","title":"Reset State of ahrs10filter"}],"seealso":[{"url":"ahrs10filter.html","name":"ahrs10filter"},{"url":"insfilter.html","name":"insfilter"}]},{"href":"ref\/ahrs10filter.residual.html","refentity":[{"type":"function","name":"residual","fcntype":"instancemethod"},{"type":"method","name":"ahrs10filter.residual","fcntype":"instancemethod"}],"refpurpose":"Residuals and residual covariances from direct state measurements for ahrs10filter","introduced":"R2020a","description":"This MATLAB function computes the residual, res, and the residual covariance, resCov, based on the direct state measurement and measurement covariance.","syntaxgroup":[{"title":"","syntax":["[res, resCov]= residual(FUSE,idx,measurement,measurementCovariance)"]}],"inputgroup":[{"title":"","inputs":[{"name":"FUSE","purpose":"ahrs10filter","htmlid":"function_ahrs10filter_sep_residual_sep_mw_ad2d506a-8967-44ec-880f-831a814f3635","value":["ahrs10filter","object"]},{"name":"idx","purpose":"State vector index of measurement to correct","htmlid":"mw_2e5304a1-c791-4e85-b292-413a43410d0d","value":["N-element vector of increasing integers in the range [1,18]"]},{"name":"measurement","purpose":"Direct measurement of state","htmlid":"function_ahrs10filter_sep_residual_sep_mw_00af0ac1-8084-4fb8-8a39-b63f826eeb39","value":["N-element vector"]},{"name":"measurementCovariance","purpose":"Covariance of measurement","htmlid":"function_ahrs10filter_sep_residual_sep_mw_7bb90a10-29fa-4105-bfb5-c281804e2999","value":["N-by-N matrix"]}]}],"outputs":[{"name":"res","purpose":"Measurement residual","htmlid":"function_ahrs10filter_sep_residual_sep_mw_ca471bf6-01fa-415c-98f4-8d547984c8d4","value":["1-by-N vector of real values"]},{"name":"resCov","purpose":"Residual covariance","htmlid":"function_ahrs10filter_sep_residual_sep_mw_b0ca5a82-fd65-474f-b403-4623df71a24c","value":["N-by-N matrix of real values"]}],"examples":[{"url":"ahrs10filter.residual.html#mw_22443e88-f773-4dda-ba0e-1f8fc3c3a148","open_command":"openExample('shared_positioning\/ObtainMeasurementResidualFromAhrs10filterExample')","title":"Obtain Measurement Residual from ahrs10filter"}],"seealso":[{"url":"ahrs10filter.html","name":"ahrs10filter"}]},{"href":"ref\/ahrs10filter.residualaltimeter.html","refentity":[{"type":"function","name":"residualaltimeter","fcntype":"instancemethod"},{"type":"method","name":"ahrs10filter.residualaltimeter","fcntype":"instancemethod"}],"refpurpose":"Residuals and residual covariance from altimeter measurements for ahrs10filter","introduced":"R2020a","description":"This MATLAB function computes the residual, res, and the innovation covariance, resCov, based on the altimeter readings and the corresponding covariance.","syntaxgroup":[{"title":"","syntax":["[res,resCov] = residualaltimeter(FUSE,altimeterReadings,altimeterReadingsCovariance)"]}],"inputgroup":[{"title":"","inputs":[{"name":"FUSE","purpose":"ahrs10filter","htmlid":"function_ahrs10filter_sep_residualaltimeter_sep_mw_ad2d506a-8967-44ec-880f-831a814f3635","value":["ahrs10filter","object"]},{"name":"altimeterReadings","purpose":"Altimeter readings (m)","htmlid":"mw_d7c0d601-112a-44bb-bb73-a2eca7672deb","value":["real scalar"]},{"name":"altimeterReadingsCovariance","purpose":"Altimeter readings error covariance (m^{2})","htmlid":"mw_6f2a932a-c49e-4f7d-82b2-78498b28074d","value":["real scalar"]}]}],"outputs":[{"name":"res","purpose":"Measurement residual","htmlid":"mw_a49c2e3c-86ad-4009-838e-6baa46b7da9e","value":["scalar"]},{"name":"resCov","purpose":"Residual covariance","htmlid":"mw_1ccb89e9-fde9-4d46-b1d3-cc1d97d7d9a0","value":["nonnegative scalar"]}],"examples":[{"url":"ahrs10filter.residualaltimeter.html#mw_44508fbf-e132-4b39-87f5-ef4796245fe5","open_command":"openExample('shared_positioning\/ObtainAltimeterDataResidualFromAhrs10filterExample')","title":"Obtain Altimeter Data Residual from ahrs10filter"}],"seealso":[{"url":"ahrs10filter.html","name":"ahrs10filter"},{"url":"insfilter.html","name":"insfilter"}]},{"href":"ref\/ahrs10filter.residualmag.html","refentity":[{"type":"function","name":"residualmag","fcntype":"instancemethod"},{"type":"method","name":"ahrs10filter.residualmag","fcntype":"instancemethod"}],"refpurpose":"Residuals and residual covariance from magnetometer measurements for ahrs10filter","introduced":"R2020a","description":"This MATLAB function computes the residual, residual, and the residual covariance, resCov, based on the magnetometer readings and the corresponding covariance.","syntaxgroup":[{"title":"","syntax":["[res,resCov] = residualmag(FUSE,magReadings,magReadingsCovariance)"]}],"inputgroup":[{"title":"","inputs":[{"name":"FUSE","purpose":"ahrs10filter","htmlid":"function_ahrs10filter_sep_residualmag_sep_mw_ad2d506a-8967-44ec-880f-831a814f3635","value":["ahrs10filter","object"]},{"name":"magReadings","purpose":"Magnetometer readings (µT)","htmlid":"function_ahrs10filter_sep_residualmag_sep_mw_e330909c-8b76-4267-8585-f30fa9b2290a","value":["3-element row vector"]},{"name":"magReadingsCovariance","purpose":"Magnetometer readings error covariance (µT^{2})","htmlid":"function_ahrs10filter_sep_residualmag_sep_mw_1856750d-b31a-4bb7-a1ff-c2f35a0b140a","value":["scalar","3-element row vector","3-by-3 matrix"]}]}],"outputs":[{"name":"res","purpose":"Residual","htmlid":"function_ahrs10filter_sep_residualmag_sep_mw_679ee21e-0883-446b-883e-4a12028ec138","value":["1-by-3 vector of real values"]},{"name":"resCov","purpose":"Residual covariance","htmlid":"function_ahrs10filter_sep_residualmag_sep_mw_162419d9-8f40-48e3-b6cc-43b42a57829d","value":["3-by-3 matrix of real values"]}],"examples":[{"url":"ahrs10filter.residualmag.html#mw_53f8a0a5-5024-4b7b-8d40-68e6f01bf035","open_command":"openExample('shared_positioning\/ObtainMagnetometerResidualFromAhrs10filterExample')","title":"Obtain Magnetometer Residual from ahrs10filter"}],"seealso":[{"url":"ahrs10filter.html","name":"ahrs10filter"}]},{"href":"ref\/ahrs10filter.stateinfo.html","refentity":[{"type":"function","name":"stateinfo","fcntype":"instancemethod"},{"type":"method","name":"ahrs10filter.stateinfo","fcntype":"instancemethod"}],"refpurpose":"Display state vector information for ahrs10filter","introduced":"R2019a","description":"This MATLAB function displays the meaning of each index of the State property and the associated units.","syntaxgroup":[{"title":"","syntax":["stateinfo(FUSE)","info = stateinfo(FUSE)"]}],"inputgroup":[{"title":"","inputs":[{"name":"FUSE","purpose":"ahrs10filter object","htmlid":"mw_4a381b19-6cb8-4241-886d-65a0829c6076","value":["object"]}]}],"outputs":[{"name":"info","purpose":"State information","htmlid":"mw_b1ea2cd3-3daa-4230-bdd5-80a82ba8ada0_sep_mw_a793f7e0-4b76-4fff-a134-c6e8cb55079e","value":["structure"]}],"examples":[{"url":"ahrs10filter.stateinfo.html#mw_71183f3f-8b70-4f6e-b3da-ef5daa18cc8f","open_command":"openExample('shared_positioning\/StateInformationOfAhrs10filterExample')","title":"State information of ahrs10filter"}],"seealso":[{"url":"ahrs10filter.html","name":"ahrs10filter"},{"url":"insfilter.html","name":"insfilter"}]},{"href":"ref\/ahrs10filter.tune.html","refentity":[{"type":"function","name":"tune","fcntype":"instancemethod"},{"type":"method","name":"ahrs10filter.tune","fcntype":"instancemethod"}],"refpurpose":"Tune ahrs10filter parameters to reduce estimation error","introduced":"R2021a","description":"This MATLAB function adjusts the properties of the ahrs10filter filter object, filter, and measurement noises to reduce the root-mean-squared (RMS) state estimation error between the fused sensor data and the ground truth.","syntaxgroup":[{"title":"","syntax":["tunedMeasureNoise = tune(filter,measureNoise,sensorData,groundTruth)","tunedMeasureNoise = tune(___,config)"]}],"inputgroup":[{"title":"","inputs":[{"name":"filter","purpose":"Filter object","htmlid":"mw_b1d6162f-e749-4566-8ba3-3db659f14e0c","value":["ahrs10filter object"]},{"name":"measureNoise","purpose":"Measurement noise","htmlid":"mw_6a38b377-031c-4f27-b071-275a60b70e6a","value":["structure"]},{"name":"sensorData","purpose":"Sensor data","htmlid":"mw_6b8dacd1-3ae3-45ec-824b-a89fca5b7538","value":["table"]},{"name":"groundTruth","purpose":"Ground truth data","htmlid":"mw_1f275fde-2ce8-48b5-9380-b3a70ab267cd","value":["table"]},{"name":"config","purpose":"Tuner configuration","htmlid":"mw_335201e9-a9d5-4366-a98b-521b0a4ab629","value":["tunerconfig object"]}]}],"outputs":[{"name":"tunedMeasureNoise","purpose":"Tuned measurement noise","htmlid":"mw_d08464ea-485d-4611-a236-0e8c2c552b14","value":["structure"]}],"examples":[{"url":"ahrs10filter.tune.html#mw_5ca83102-d592-4519-a0a2-6fe56f76a8db","open_command":"openExample('shared_positioning\/TuneAhrs10filterToOptimizePoseEstimateExample')","title":"Tune ahrs10filter to Optimize Pose Estimate"}],"seealso":[{"url":"tunerconfig.html","name":"tunerconfig"},{"url":"tunernoise.html","name":"tunernoise"}]},{"href":"ref\/ahrsfilter-system-object.html","refentity":[{"type":"sysobj","name":"ahrsfilter"},{"type":"function","name":"ahrsfilter","fcntype":"constructor"}],"refpurpose":"Orientation from accelerometer, gyroscope, and magnetometer readings","introduced":"R2018b","description":"The ahrsfilter System object fuses accelerometer, magnetometer, and gyroscope sensor data to estimate device orientation.","syntaxgroup":[{"title":"","syntaxtype":"createobject","syntax":["FUSE = ahrsfilter","FUSE = ahrsfilter('ReferenceFrame',RF)","FUSE = ahrsfilter(___,Name=Value)"]},{"title":"","syntaxtype":"usage","syntax":["[orientation,angularVelocity,interData] = FUSE(accelReadings,gyroReadings,magReadings)"]}],"inputgroup":[{"title":"","inputs":[{"name":"RF","purpose":"Local navigation coordinate system","syntaxtype":"createobject","htmlid":"mw_7a7bef63-30df-49d1-bb2f-973b3a8ac8b5_sep_mw_cc120d78-4a41-44b5-901a-e71ecd8fbcb4","value":["'NED'","'ENU'"],"defaultvalue":"'NED'"}]},{"title":"","inputs":[{"name":"accelReadings","purpose":"Accelerometer readings in sensor body coordinate system (m\/s^{2})","syntaxtype":"usage","htmlid":"mw_d0536e09-2a41-4e08-84d2-f4505506ef3f","value":["N-by-3 matrix"]},{"name":"gyroReadings","purpose":"Gyroscope readings in sensor body coordinate system (rad\/s)","syntaxtype":"usage","htmlid":"mw_97b84819-ad41-4f49-a41a-d914bdf97962","value":["N-by-3 matrix"]},{"name":"magReadings","purpose":"Magnetometer readings in sensor body coordinate system (µT)","syntaxtype":"usage","htmlid":"mw_944884ac-9961-4069-88b8-ff305276d672","value":["N-by-3 matrix"]}]}],"outputs":[{"name":"orientation","purpose":"Orientation that rotates quantities from local navigation coordinate system to sensor body coordinate system","syntaxtype":"usage","htmlid":"d126e53788","value":["M-by-1 array of quaternions","3-by-3-by-M array"]},{"name":"angularVelocity","purpose":"Angular velocity in sensor body coordinate system (rad\/s)","syntaxtype":"usage","htmlid":"d126e53861","value":["M-by-3 array"]},{"name":"interData","purpose":"Intermediate data","syntaxtype":"usage","htmlid":"mw_bc39b7e4-59de-4212-848c-56ecbe31f23a","value":["structure"]}],"classpropertygroup":[{"classproperty":[{"name":"SampleRate","purpose":"Input sample rate of sensor data (Hz)","htmlid":"mw_ff9b22a1-354e-4b8c-83e7-eb3706553160","value":["100","positive scalar"],"defaultvalue":"100"},{"name":"DecimationFactor","purpose":"Decimation factor","htmlid":"mw_3100169c-06d5-4aa3-96cf-1824d2b76c3d","value":["1","positive integer"],"defaultvalue":"1"},{"name":"AccelerometerNoise","purpose":"Variance of accelerometer signal noise ((m\/s^{2})^{2})","htmlid":"mw_6e874b07-d7f7-4313-b7c0-e0ae9acf8579","value":["0.00019247","positive real scalar"],"defaultvalue":"0.00019247"},{"name":"MagnetometerNoise","purpose":"Variance of magnetometer signal noise (μT^{2})","htmlid":"mw_53145264-b9c3-4b10-b7b3-2e2184027ab1","value":["0.1","positive real scalar"],"defaultvalue":"0.1"},{"name":"GyroscopeNoise","purpose":"Variance of gyroscope signal noise ((rad\/s)^{2})","htmlid":"mw_00995ce4-7220-4695-9182-d7e5b24a670b","value":["9.1385e-5","positive real scalar"],"defaultvalue":"9.1385e-5"},{"name":"GyroscopeDriftNoise","purpose":"Variance of gyroscope offset drift ((rad\/s)^{2})","htmlid":"mw_da5ef320-6099-4658-8fdf-88cb37779df7","value":["3.0462e-13","positive real scalar"],"defaultvalue":"3.0462e-13"},{"name":"LinearAccelerationNoise","purpose":"Variance of linear acceleration noise (m\/s^{2})^{2}","htmlid":"mw_83d7e5b4-4e2d-44aa-8f47-8987e1b59279","value":["0.0096236","positive real scalar"],"defaultvalue":"0.0096236"},{"name":"LinearAccelerationDecayFactor","purpose":"Decay factor for linear acceleration drift","htmlid":"mw_0e2b0c12-4501-41c2-b038-0e2c79e8c71c","value":["0.5","scalar in the range [0,1)"],"defaultvalue":"0.5"},{"name":"MagneticDisturbanceNoise","purpose":"Variance of magnetic disturbance noise (μT^{2})","htmlid":"mw_c41a5f21-2234-4c45-80bf-a90a27d80095","value":["0.5","real finite positive scalar"],"defaultvalue":"0.5"},{"name":"MagneticDisturbanceDecayFactor","purpose":"Decay factor for magnetic disturbance","htmlid":"mw_cc9267c5-d84a-462f-9ed1-64efc2fe32ce","value":["0.5","positive scalar in the range [0,1]"],"defaultvalue":"0.5"},{"name":"InitialProcessNoise","purpose":"Covariance matrix for process noise","htmlid":"mw_d28f1b1c-7f67-436e-a8bb-cea6876aa601","value":["12-by-12 matrix"]},{"name":"ExpectedMagneticFieldStrength","purpose":"Expected estimate of magnetic field strength (μT)","htmlid":"mw_4f0c98dc-60f9-4fdc-b9c2-e6d2782e62c8","value":["50","real positive scalar"],"defaultvalue":"50"},{"name":"OrientationFormat","purpose":"Output orientation format","htmlid":"mw_e7434a8e-29d1-47fe-8c8e-b1bd3b6e963c","value":["'quaternion'","'Rotation matrix'"],"defaultvalue":"'quaternion'"}]}],"objectfunctions":[{"title":"Specific to ahrsfilter","functions":[{"name":"tune","url":"ahrsfilter.tune.html","description":"Tune ahrsfilter parameters to reduce estimation\n      error"},{"name":"residual","url":"ahrsfilter.residual.html","description":"Compute residual and residual covariance for\n      ahrsfilter"}]},{"title":"Common to All System Objects","functions":[{"name":"step","url":"..\/..\/matlab\/ref\/step.html","description":"Run System object algorithm"},{"name":"release","url":"..\/..\/matlab\/ref\/matlab.system.releasesystemobject.html","description":"Release resources and allow changes to System object property values and input characteristics"},{"name":"reset","url":"..\/..\/matlab\/ref\/resetsystemobject.html","description":"Reset internal states of System object"}]}],"examples":[{"url":"ahrsfilter-system-object.html#mw_ba45a279-f1ad-414e-b613-cf0890391a75","open_command":"openExample('shared_positioning\/EstimateOrientationUsingAhrsfilterSPExample')","title":"Estimate Orientation Using ahrsfilter"},{"url":"ahrsfilter-system-object.html#mw_66c53e3f-6980-4385-ac73-76ff6cf01831","open_command":"openExample('shared_positioning\/SimulateMagneticJammingOnAhrsFilterExample')","title":"Simulate Magnetic Jamming on ahrsFilter"},{"url":"ahrsfilter-system-object.html#mw_21908d3b-f0ca-437f-b2d8-35a6ed3175f2","open_command":"openExample('shared_positioning\/TrackShaking9AxisIMUExample')","title":"Track Shaking 9-Axis IMU"}],"seealso":[{"url":"ecompass.html","name":"ecompass"},{"url":"gpssensor-system-object.html","name":"gpsSensor"},{"url":"imufilter-system-object.html","name":"imufilter"},{"url":"imusensor-system-object.html","name":"imuSensor"}]},{"href":"ref\/ahrsfilter.residual.html","refentity":[{"type":"function","name":"residual","fcntype":"instancemethod"},{"type":"method","name":"ahrsfilter.residual","fcntype":"instancemethod"}],"refpurpose":"Compute residual and residual covariance for ahrsfilter","introduced":"R2024a","description":"This MATLAB function computes the residual, res, and the residual covariance, resCov, from accelerometer, gyroscope, and magnetometer sensor data.","syntaxgroup":[{"title":"","syntax":["[res, resCov]= residual(FUSE,accelData,gyroData,magData)"]}],"inputgroup":[{"title":"","inputs":[{"name":"FUSE","purpose":"Filter object","htmlid":"mw_f07837b5-f0dc-48da-870a-6a89971056ff_sep_mw_bc34be35-95ad-4c26-b913-98697aaf0d8a","value":["ahrsfilter object"]},{"name":"accelData","purpose":"Accelerometer data","htmlid":"mw_f07837b5-f0dc-48da-870a-6a89971056ff_sep_mw_559f6fe7-a459-46d4-9889-e4a50c24f325","value":["N-by-3 matrix"]},{"name":"gyroData","purpose":"Gyroscope data","htmlid":"mw_f07837b5-f0dc-48da-870a-6a89971056ff_sep_mw_f7d345bd-84c0-4772-ab43-935f795aa993","value":["N-by-3 matrix"]},{"name":"magData","purpose":"Magnetometer data","htmlid":"mw_1a3587b0-48cc-407c-b858-4a3da4eb37f0","value":["N-by-3 matrix"]}]}],"outputs":[{"name":"res","purpose":"Measurement residual","htmlid":"mw_f07837b5-f0dc-48da-870a-6a89971056ff_sep_mw_cffa9c28-861a-41a3-bcf4-9bfbb3100bc8","value":["M-by-6 matrix"]},{"name":"resCov","purpose":"Residual covariance","htmlid":"mw_f07837b5-f0dc-48da-870a-6a89971056ff_sep_mw_b69b4247-a1c9-4bb0-8433-595296201bc8","value":["6-by-6-by-M array"]}],"examples":[{"url":"ahrsfilter.residual.html#mw_5647ecc8-edbe-4f92-b844-be192ddce55b","open_command":"openExample('shared_positioning\/ComputeResidualValuesForAhrsfilterExample')","title":"Compute Residual Values for AHRS Filter"}],"seealso":[{"url":"ecompass.html","name":"ecompass"},{"url":"imusensor-system-object.html","name":"imuSensor"},{"url":"ahrsfilter-system-object.html","name":"ahrsfilter"},{"url":"gpssensor-system-object.html","name":"gpsSensor"},{"url":"ahrsfilter.tune.html","name":"tune"}]},{"href":"ref\/ahrsfilter.tune.html","refentity":[{"type":"function","name":"tune","fcntype":"instancemethod"},{"type":"method","name":"ahrsfilter.tune","fcntype":"instancemethod"}],"refpurpose":"Tune ahrsfilter parameters to reduce estimation error","introduced":"R2020b","description":"This MATLAB function adjusts the properties of the ahrsfilter filter object, filter, to reduce the root-mean-squared (RMS) quaternion distance error between the fused sensor data and the ground truth.","syntaxgroup":[{"title":"","syntax":["tune(filter,sensorData,groundTruth)","tune(___,config)"]}],"inputgroup":[{"title":"","inputs":[{"name":"filter","purpose":"Filter object","htmlid":"function_ahrsfilter_sep_tune_sep_mw_bc34be35-95ad-4c26-b913-98697aaf0d8a","value":["ahrsfilter object"]},{"name":"sensorData","purpose":"Sensor data","htmlid":"function_ahrsfilter_sep_tune_sep_mw_559f6fe7-a459-46d4-9889-e4a50c24f325","value":["table"]},{"name":"groundTruth","purpose":"Ground truth data","htmlid":"function_ahrsfilter_sep_tune_sep_mw_f7d345bd-84c0-4772-ab43-935f795aa993","value":["table"]},{"name":"config","purpose":"Tuner configuration","htmlid":"mw_691c2aeb-2396-4145-a3aa-79a5761750df","value":["tunerconfig object"]}]}],"examples":[{"url":"ahrsfilter.tune.html#function_ahrsfilter_sep_tune_sep_mw_faebc0f7-1df6-405c-9cf9-bd0c61caa74d","open_command":"openExample('shared_positioning\/TuneArhsfitlerToImproveOrientationEstimateExample')","title":"Tune ahrsfilter to Improve Orientation Estimate"}]},{"href":"ref\/allanvar.html","refentity":[{"type":"function","name":"allanvar","fcntype":"simple"}],"refpurpose":"Allan variance","introduced":"R2019a","description":"Allan variance is used to measure the frequency stability of oscillation for a sequence of data in the time domain.","syntaxgroup":[{"title":"","syntax":["[avar,tau] = allanvar(Omega)","[avar,tau] = allanvar(Omega,m)","[avar,tau] = allanvar(Omega,ptStr)","[avar,tau] = allanvar(___,fs)"]}],"inputgroup":[{"title":"","inputs":[{"name":"Omega","purpose":"Input data","htmlid":"mw_2dd14f30-8ea7-4a4a-b3e7-b1f7976cbeaa","value":["N-by-1 vector","N-by-M matrix"]},{"name":"m","purpose":"Averaging factor","htmlid":"mw_9c742f31-fb0e-4f6c-8660-30ecddcd35dd","value":["scalar","vector"]},{"name":"ptStr","purpose":"Point specification of m","htmlid":"mw_f118a441-8450-4115-b493-0c851eee0172","value":["'octave'","'decade'"],"defaultvalue":"'octave'"},{"name":"fs","purpose":"Basic frequency of input data in Hz","htmlid":"mw_850799c6-967c-4661-a1e3-5477f2572cc5","value":["scalar"]}]}],"outputs":[{"name":"avar","purpose":"Allan variance of input data","htmlid":"mw_8a9d04ae-9ceb-43d2-a276-68364d385baf","value":["vector","matrix"]},{"name":"tau","purpose":"Averaging time of Allan variance","htmlid":"mw_54eac3ca-0f2f-4a39-b493-727badaf8b6f","value":["vector","matrix"]}],"examples":[{"url":"allanvar.html#mw_5825a20e-8cbd-4d41-9d6e-3059914a1e0f","open_command":"openExample('shared_positioning\/DetermineAllanVarianceOfSingleAxisGyroscopeExample')","title":"Determine Allan Variance of Single Axis Gyroscope"},{"url":"allanvar.html#mw_bf2bf3b5-1c7e-457d-a079-c18c1034c875","open_command":"openExample('shared_positioning\/DetermineAllanDeviationAtSpecificValuesOfAuExample')","title":"Determine Allan Deviation at Specific Values of τ"}],"seealso":[{"url":"gyroparams.html","name":"gyroparams"},{"url":"imusensor-system-object.html","name":"imuSensor"}]},{"href":"ref\/altimetersensor-system-object.html","refentity":[{"type":"sysobj","name":"altimeterSensor"},{"type":"function","name":"altimeterSensor","fcntype":"constructor"}],"refpurpose":"Altimeter simulation model","introduced":"R2019a","description":"The altimeterSensor System object models receiving data from an altimeter sensor.","syntaxgroup":[{"title":"","syntaxtype":"createobject","syntax":["altimeter = altimeterSensor","altimeter = altimeterSensor('ReferenceFrame',RF)","altimeter = altimeterSensor(___,Name,Value)"]},{"title":"","syntaxtype":"usage","syntax":["altimeterReadings = altimeter(position)"]}],"inputgroup":[{"title":"","inputs":[{"name":"position","purpose":"Position of sensor in local navigation coordinate system (m)","syntaxtype":"usage","htmlid":"mw_f1086a27-22f1-4a59-b16d-68a1cde02f23","value":["N-by-3 matrix"]}]}],"outputs":[{"name":"altimeterReadings","purpose":"Altitude of sensor relative to local navigation coordinate system (m)","syntaxtype":"usage","htmlid":"mw_779060c5-f747-4286-a5f6-f65cf4cf9b87","value":["N-element column vector"]}],"classpropertygroup":[{"classproperty":[{"name":"SampleRate","purpose":"Update rate of sensor (Hz)","htmlid":"mw_80ea483e-3b85-4f17-aacd-ba0a7c26c2fa","value":["1","positive scalar"],"defaultvalue":"1"},{"name":"ConstantBias","purpose":"Constant offset bias (m)","htmlid":"mw_d6db3b3c-dc20-4619-a885-66d3b2e72d38","value":["0","scalar"],"defaultvalue":"0"},{"name":"NoiseDensity","purpose":"Power spectral density of sensor noise (m\/√Hz)","htmlid":"mw_70cf6347-b009-40ca-8079-1a1dc230a8f7","value":["0","nonnegative scalar"],"defaultvalue":"0"},{"name":"BiasInstability","purpose":"Instability of bias offset (m)","htmlid":"mw_125a95d2-b2ef-42e2-adf7-90571f8f0e10","value":["0","nonnegative scalar"],"defaultvalue":"0"},{"name":"DecayFactor","purpose":"Bias instability noise decay factor","htmlid":"mw_6441797c-b37e-489a-a29e-bcd3464f4537","value":["0","scalar in the range [0,1]"],"defaultvalue":"0"},{"name":"RandomStream","purpose":"Random number source","htmlid":"mw_dfa22a31-700d-4783-aad0-09dd16dbc9b5","value":["'Global stream'","'mt19937ar with seed'"],"defaultvalue":"'Global stream'"},{"name":"Seed","purpose":"Initial seed","htmlid":"mw_5d8a5872-6787-474b-97b2-de2064dd47c1","value":["67","nonnegative integer scalar"],"defaultvalue":"67"}]}],"objectfunctions":[{"title":"Common to All System Objects","functions":[{"name":"step","url":"..\/..\/matlab\/ref\/step.html","description":"Run System object algorithm"},{"name":"release","url":"..\/..\/matlab\/ref\/matlab.system.releasesystemobject.html","description":"Release resources and allow changes to System object property values and input characteristics"},{"name":"reset","url":"..\/..\/matlab\/ref\/resetsystemobject.html","description":"Reset internal states of System object"}]}],"examples":[{"url":"altimetersensor-system-object.html#mw_7e9490ea-1dd6-449d-af40-6a806dd1efab","open_command":"openExample('shared_positioning\/GenerateNoisyAltimeterReadingsFromStationaryInputExample')","title":"Generate Noisy Altimeter Readings from Stationary Input"}],"seealso":[{"url":"gpssensor-system-object.html","name":"gpsSensor"},{"url":"imusensor-system-object.html","name":"imuSensor"}]},{"href":"ref\/angdiff.html","refentity":[{"type":"function","name":"angdiff","fcntype":"simple"}],"refpurpose":"Difference between two angles","introduced":"R2015a","description":"This MATLAB function calculates the difference between the angles alpha and beta.","syntaxgroup":[{"title":"","syntax":["delta = angdiff(alpha,beta)"]},{"title":"","syntax":["delta = angdiff(alpha)"]}],"inputgroup":[{"title":"","inputs":[{"name":"alpha","purpose":"Angle in radians","htmlid":"buoeg1t-alpha","value":["scalar","vector","matrix","multidimensional array"]},{"name":"beta","purpose":"Angle in radians","htmlid":"buoeg1t-beta","value":["scalar","vector","matrix","multidimensional array"]}]}],"outputs":[{"name":"delta","purpose":"Difference between two angles","htmlid":"buoeg1t-delta","value":["scalar","vector","matrix","multidimensional array"]}],"examples":[{"url":"angdiff.html#bupmwwy-2","open_command":"openExample('nav_robotics\/CalculateDifferenceBetweenTwoAnglesExample')","title":"Calculate Difference Between Two Angles"},{"url":"angdiff.html#bupmwwy-3","open_command":"openExample('nav_robotics\/CalculateDifferenceBetweenTwoAngleArraysExample')","title":"Calculate Difference Between Two Angle Arrays"},{"url":"angdiff.html#bupmwwy-4","open_command":"openExample('nav_robotics\/CalculateAngleDifferencesOfAdjacentElementsExample')","title":"Calculate Angle Differences of Adjacent Elements"}]},{"href":"ref\/asyncmarggpsfuser.correct.html","refentity":[{"type":"function","name":"correct","fcntype":"instancemethod"},{"type":"method","name":"AsyncMARGGPSFuser.correct","fcntype":"instancemethod"}],"refpurpose":"Correct states using direct state measurements for insfilterAsync","introduced":"R2019a","description":"This MATLAB function corrects the state and state estimation error covariance based on the measurement and measurement covariance.","syntaxgroup":[{"title":"","syntax":["correct(FUSE,idx,measurement,measurementCovariance)"]}],"inputgroup":[{"title":"","inputs":[{"name":"FUSE","purpose":"insfilterAsync object","htmlid":"mw_64e782a1-8182-48a4-bb48-8228f885f814","value":["object"]},{"name":"idx","purpose":"State vector index of measurement to correct","htmlid":"mw_3f843a3d-5d61-483d-920c-a99a10bc4340","value":["N-element vector of increasing integers in the range [1, 28]"]},{"name":"measurement","purpose":"Direct measurement of state","htmlid":"mw_cf9cd873-fb39-4e44-8dc7-b8c40f7dc02c","value":["N-element vector"]},{"name":"measurementCovariance","purpose":"Covariance of measurement","htmlid":"mw_e9d0a8bb-caf2-4d8b-8228-79be2901eec2","value":["scalar","N-element vector","N-by-N matrix"]}]}],"examples":[{"url":"asyncmarggpsfuser.correct.html#mw_afd9e6b3-1e31-41b4-891a-3b8544705368","open_command":"openExample('shared_positioning\/CorrectInsfilterAsyncUsingDirectMeasurementExample')","title":"Correct insfilterAsync Using Direct Measurement"}],"seealso":[{"url":"insfilterasync.html","name":"insfilterAsync"},{"url":"insfilter.html","name":"insfilter"}]},{"href":"ref\/asyncmarggpsfuser.fuseaccel.html","refentity":[{"type":"function","name":"fuseaccel","fcntype":"instancemethod"},{"type":"method","name":"AsyncMARGGPSFuser.fuseaccel","fcntype":"instancemethod"}],"refpurpose":"Correct states using accelerometer data for insfilterAsync","introduced":"R2019a","description":"This MATLAB function fuses accelerometer data to correct the state estimate.","syntaxgroup":[{"title":"","syntax":["[res,resCov] = fuseaccel(FUSE,acceleration,accelerationCovariance)"]}],"inputgroup":[{"title":"","inputs":[{"name":"FUSE","purpose":"insfilterAsync object","htmlid":"mw_c58e786d-8224-4ae0-b2c9-19ee1f7e1cec","value":["object"]},{"name":"acceleration","purpose":"Accelerometer readings in local sensor body coordinate system (m\/s^{2})","htmlid":"mw_3174b007-d60b-44d5-bc65-3d3eb81a8c21","value":["3-element row vector"]},{"name":"accelerationCovariance","purpose":"Acceleration error covariance of accelerometer measurement ((m\/s^{2})^{2})","htmlid":"mw_5eeb0a82-4b96-4ecb-b5e9-da7cef473682","value":["scalar","3-element row vector","3-by-3 matrix"]}]}],"outputs":[{"name":"res","purpose":"Residual","htmlid":"mw_20970443-c679-4359-ade8-d9e7f2905280","value":["1-by-3 vector of real values"]},{"name":"resCov","purpose":"Residual covariance","htmlid":"mw_296b35ad-b8a7-45df-9e36-cc4b0a26782f","value":["3-by-3 matrix of real values"]}],"examples":[{"url":"asyncmarggpsfuser.fuseaccel.html#mw_e75e7fe3-e9d9-4412-b481-057d01f798de","open_command":"openExample('shared_positioning\/FuseAccelerometerDataUsingInsfilterAsyncExample')","title":"Fuse Accelerometer Data Using insfilterAsync"}],"seealso":[{"url":"insfilterasync.html","name":"insfilterAsync"},{"url":"insfilter.html","name":"insfilter"}]},{"href":"ref\/asyncmarggpsfuser.fusegps.html","refentity":[{"type":"function","name":"fusegps","fcntype":"instancemethod"},{"type":"method","name":"AsyncMARGGPSFuser.fusegps","fcntype":"instancemethod"}],"refpurpose":"Correct states using GPS data for insfilterAsync","introduced":"R2019a","description":"This MATLAB function fuses GPS position data to correct the state estimate.","syntaxgroup":[{"title":"","syntax":["[res,resCov] = fusegps(FUSE,position,positionCovariance)","[res,resCov] = fusegps(FUSE,position,positionCovariance,velocity,velocityCovariance)"]}],"inputgroup":[{"title":"","inputs":[{"name":"FUSE","purpose":"insfilterAsync object","htmlid":"mw_50410668-89fe-4a74-ae8a-ebd9e67fe9bf","value":["object"]},{"name":"position","purpose":"Position of GPS receiver (LLA)","htmlid":"mw_9b89aa6a-2c70-4349-b2bd-55054cc3f3a2","value":["3-element row vector"]},{"name":"positionCovariance","purpose":"Position measurement covariance of GPS receiver (m^{2})","htmlid":"mw_ea4a0ef2-996b-4dc6-af04-35338917459a","value":["3-by-3 matrix"]},{"name":"velocity","purpose":"Velocity of GPS receiver in local NED coordinate system (m\/s)","htmlid":"mw_ae352032-9292-4c9d-91a5-463f69ae8966","value":["3-element row vector"]},{"name":"velocityCovariance","purpose":"Velocity measurement covariance of GPS receiver (m^{2}\/s^{2})","htmlid":"mw_e7d2f932-41a7-4c9d-8e36-b1419e815756","value":["3-by-3 matrix"]}]}],"outputs":[{"name":"res","purpose":"Position and velocity residual","htmlid":"mw_ec54b392-1619-4cda-aae9-c50678f230e2","value":["1-by-6 vector of real values"]},{"name":"resCov","purpose":"Residual covariance","htmlid":"mw_781a05bd-9f21-4252-a52b-9b100de52b7d","value":["6-by-6 matrix of real values"]}],"examples":[{"url":"asyncmarggpsfuser.fusegps.html#mw_8b8eaf91-b994-475d-acdc-22e996a3894f","open_command":"openExample('shared_positioning\/FuseGPSDataUsingInsfilterAsyncExample')","title":"Fuse GPS Data Using insfilterAsync"}],"seealso":[{"url":"insfilterasync.html","name":"insfilterAsync"},{"url":"insfilter.html","name":"insfilter"},{"url":"insfiltermarg.html","name":"insfilterMARG"}]},{"href":"ref\/asyncmarggpsfuser.fusegyro.html","refentity":[{"type":"function","name":"fusegyro","fcntype":"instancemethod"},{"type":"method","name":"AsyncMARGGPSFuser.fusegyro","fcntype":"instancemethod"}],"refpurpose":"Correct states using gyroscope data for insfilterAsync","introduced":"R2019a","description":"This MATLAB function fuses gyroscope data to correct the state estimate.","syntaxgroup":[{"title":"","syntax":["[res,resCov] = fusegyro(FUSE,gyroReadings,gyroCovariance)"]}],"inputgroup":[{"title":"","inputs":[{"name":"FUSE","purpose":"insfilterAsync object","htmlid":"mw_9fec2fd2-0e65-4896-bbb3-b6d7c3a45f3d","value":["object"]},{"name":"gyroReadings","purpose":"Gyroscope readings in local sensor body coordinate system (rad\/s)","htmlid":"mw_76c047e0-88bc-43cf-8cf8-e80f6422cde4","value":["3-element row vector"]},{"name":"gyroCovariance","purpose":"Covariance of gyroscope measurement error ((rad\/s)^{2})","htmlid":"mw_56e8316c-0af2-45ea-8aa6-9dcbabb0a219","value":["scalar","3-element row vector","3-by-3 matrix"]}]}],"outputs":[{"name":"res","purpose":"Residual","htmlid":"mw_7142e14d-13bc-43b5-8c6a-f435d37351c4","value":["1-by-3 vector of real values"]},{"name":"resCov","purpose":"Residual covariance","htmlid":"mw_23b9d9c9-e0d4-4282-8931-714055c42421","value":["3-by-3 matrix of real values"]}],"examples":[{"url":"asyncmarggpsfuser.fusegyro.html#mw_903254d5-cd10-41f7-bbd5-a4bd8ff78ac1","open_command":"openExample('shared_positioning\/FuseGyroscopeDataUsingInsfilterAsyncExample')","title":"Fuse Gyroscope Data Using insfilterAsync"}],"seealso":[{"url":"insfilterasync.html","name":"insfilterAsync"},{"url":"insfilter.html","name":"insfilter"}]},{"href":"ref\/asyncmarggpsfuser.fusemag.html","refentity":[{"type":"function","name":"fusemag","fcntype":"instancemethod"},{"type":"method","name":"AsyncMARGGPSFuser.fusemag","fcntype":"instancemethod"}],"refpurpose":"Correct states using magnetometer data for insfilterAsync","introduced":"R2019a","description":"This MATLAB function fuses magnetometer data to correct the state estimate.","syntaxgroup":[{"title":"","syntax":["[res,resCov] = fusemag(FUSE,magReadings,magReadingsCovariance)"]}],"inputgroup":[{"title":"","inputs":[{"name":"FUSE","purpose":"insfilterAsync object","htmlid":"mw_331952b8-6f38-4183-9685-f0c08aa215e3","value":["object"]}]},{"title":"","inputs":[{"name":"magReadings","purpose":"Magnetometer readings (µT)","htmlid":"mw_b12efe36-1aa3-43bf-a7b4-a56bff581d2c","value":["3-element row vector"]},{"name":"magReadingsCovariance","purpose":"Magnetometer readings error covariance (µT^{2})","htmlid":"mw_28021145-a0e0-4a71-b5ac-945bb7e70455","value":["scalar","3-element row vector","3-by-3 matrix"]}]}],"outputs":[{"name":"res","purpose":"Residual","htmlid":"mw_7aea6a25-52e4-4688-a823-2c4b89e612b7","value":["1-by-3 vector of real values"]},{"name":"resCov","purpose":"Residual covariance","htmlid":"mw_b297e133-5f73-4a5a-8cdd-722742555a2c","value":["3-by-3 matrix of real values"]}],"examples":[{"url":"asyncmarggpsfuser.fusemag.html#mw_763ba36f-c788-413f-bf48-156d51e79c52","open_command":"openExample('shared_positioning\/FuseMagnetometerDataFromInsfilterAsyncExample')","title":"Fuse Magnetometer Data from insfilterAsync"}],"seealso":[{"url":"insfilterasync.html","name":"insfilterAsync"},{"url":"insfilter.html","name":"insfilter"}]},{"href":"ref\/asyncmarggpsfuser.pose.html","refentity":[{"type":"function","name":"pose","fcntype":"instancemethod"},{"type":"method","name":"AsyncMARGGPSFuser.pose","fcntype":"instancemethod"}],"refpurpose":"Current position, orientation, and velocity estimate for insfilterAsync","introduced":"R2019a","description":"This MATLAB function returns the current estimate of the pose.","syntaxgroup":[{"title":"","syntax":["[position,orientation,velocity] = pose(FUSE)","[position,orientation,velocity] = pose(FUSE,format)"]}],"inputgroup":[{"title":"","inputs":[{"name":"FUSE","purpose":"insfilterAsync object","htmlid":"mw_d1599924-148d-43f2-b44b-45d1756d6488","value":["object"]},{"name":"format","purpose":"Output orientation format","htmlid":"mw_bcdfb2c7-94b9-4214-85c6-99bc284799f2","value":["'quaternion'","'rotmat'"],"defaultvalue":"'quaternion'"}]}],"outputs":[{"name":"position","purpose":"Position estimate expressed in the local coordinate system (m)","htmlid":"mw_76339031-1508-4787-a882-c261b11a1332","value":["3-element row vector"]},{"name":"orientation","purpose":"Orientation estimate expressed in the local coordinate system","htmlid":"mw_c7ce970c-0b3b-44ad-bd6b-e46b630ba3ff","value":["quaternion","3-by-3 rotation matrix"]},{"name":"velocity","purpose":"Velocity estimate expressed in local coordinate system (m\/s)","htmlid":"mw_b54df4c7-e3ba-4408-b0fa-ff653ebcb7d2","value":["3-element row vector"]}],"examples":[{"url":"asyncmarggpsfuser.pose.html#mw_24704a06-acb7-4314-8bee-e3b3a838eda8","open_command":"openExample('shared_positioning\/ObtainPoseFromInsfilterAsyncExample')","title":"Obtain Pose from insfilterAsync"}],"seealso":[{"url":"insfilterasync.html","name":"insfilterAsync"},{"url":"insfilter.html","name":"insfilter"}]},{"href":"ref\/asyncmarggpsfuser.predict.html","refentity":[{"type":"function","name":"predict","fcntype":"instancemethod"},{"type":"method","name":"AsyncMARGGPSFuser.predict","fcntype":"instancemethod"}],"refpurpose":"Update states based on motion model for insfilterAsync","introduced":"R2019a","description":"This MATLAB function updates states based on the motion model.","syntaxgroup":[{"title":"","syntax":["predict(FUSE,dt)"]}],"inputgroup":[{"title":"","inputs":[{"name":"FUSE","purpose":"insfilterAsync object","htmlid":"mw_73e16853-8521-414e-8bd0-e049cab89688","value":["object"]},{"name":"dt","purpose":"Delta time to propagate forward (s)","htmlid":"mw_d55dc586-e7d0-4924-9c15-cebbb7da9c9b","value":["scalar"]}]}],"examples":[{"url":"asyncmarggpsfuser.predict.html#mw_6835a599-3fd3-4833-8e4f-f67e806e7a91","open_command":"openExample('shared_positioning\/PredictStateUsingInsfilterAsyncExample')","title":"Predict State Using insfilterAsync"}],"seealso":[{"url":"insfilterasync.html","name":"insfilterAsync"},{"url":"insfilter.html","name":"insfilter"}]},{"href":"ref\/asyncmarggpsfuser.reset.html","refentity":[{"type":"function","name":"reset","fcntype":"instancemethod"},{"type":"method","name":"AsyncMARGGPSFuser.reset","fcntype":"instancemethod"}],"refpurpose":"Reset internal states for insfilterAsync","introduced":"R2019a","description":"This MATLAB function resets the State and StateCovariance properties of the insfilterAsync object to their default values.","syntaxgroup":[{"title":"","syntax":["reset(FUSE)"]}],"inputgroup":[{"title":"","inputs":[{"name":"FUSE","purpose":"insfilterAsync object","htmlid":"mw_fd19cf29-9775-4b91-b0a2-e26cff6b2472","value":["object"]}]}],"examples":[{"url":"asyncmarggpsfuser.reset.html#mw_f0cb6ff7-6137-4a70-be0d-0398968fdb5b","open_command":"openExample('shared_positioning\/ResetStateOfInsfilterAsyncExample')","title":"Reset State of insfilterAsync"}],"seealso":[{"url":"insfilterasync.html","name":"insfilterAsync"},{"url":"insfilter.html","name":"insfilter"}]},{"href":"ref\/asyncmarggpsfuser.stateinfo.html","refentity":[{"type":"function","name":"stateinfo","fcntype":"instancemethod"},{"type":"method","name":"AsyncMARGGPSFuser.stateinfo","fcntype":"instancemethod"}],"refpurpose":"Display state vector information for insfilterAsync","introduced":"R2019a","description":"This MATLAB function displays the description of each index of the State property of the insfilterAsync object and the associated units.","syntaxgroup":[{"title":"","syntax":["stateinfo(FUSE)","info = stateinfo(FUSE)"]}],"inputgroup":[{"title":"","inputs":[{"name":"FUSE","purpose":"insfilterAsync object","htmlid":"mw_64998b5c-b79f-46b0-ae35-e7d70dd0babb","value":["object"]}]}],"outputs":[{"name":"info","purpose":"State information","htmlid":"mw_7ac1044c-b3a1-4614-a30c-42120fa7babf_sep_mw_a793f7e0-4b76-4fff-a134-c6e8cb55079e","value":["structure"]}],"examples":[{"url":"asyncmarggpsfuser.stateinfo.html#mw_bc5f0246-a72d-4e6d-82bc-8f8a509a5f14","open_command":"openExample('shared_positioning\/StateInformationOfInsfilterAsyncExample')","title":"State Information of insfilterAsync"}],"seealso":[{"url":"insfilterasync.html","name":"insfilterAsync"},{"url":"insfilter.html","name":"insfilter"}]},{"href":"ref\/axang2quat.html","refentity":[{"type":"function","name":"axang2quat","fcntype":"simple"}],"refpurpose":"Convert axis-angle rotation to quaternion","introduced":"R2015a","description":"This MATLAB function converts a rotation given in axis-angle form, axang, to quaternion, quat.","syntaxgroup":[{"title":"","syntax":["quat = axang2quat(axang)"]}],"inputgroup":[{"title":"","inputs":[{"name":"axang","purpose":"Rotation given in axis-angle form","htmlid":"buog46n-1-axang","value":["n-by-4 matrix"]}]}],"outputs":[{"name":"quat","purpose":"Unit quaternion","htmlid":"buog46n-1-quat","value":["n-by-4 matrix"]}],"examples":[{"url":"axang2quat.html#bupmysd-2","open_command":"openExample('nav_robotics\/ConvertAxisAngleRotationToQuaternionExample')","title":"Convert Axis-Angle Rotation to Quaternion"}],"seealso":[{"url":"quat2axang.html","name":"quat2axang"},{"url":"quaternion.html","name":"quaternion"}]},{"href":"ref\/axang2rotm.html","refentity":[{"type":"function","name":"axang2rotm","fcntype":"simple"}],"refpurpose":"Convert axis-angle rotation to rotation matrix","introduced":"R2015a","description":"This MATLAB function converts a rotation given in axis-angle form, axang, to an orthonormal rotation matrix, rotm.","syntaxgroup":[{"title":"","syntax":["rotm = axang2rotm(axang)"]}],"inputgroup":[{"title":"","inputs":[{"name":"axang","purpose":"Rotation given in axis-angle form","htmlid":"buoeg2u-axang","value":["n-by-4 matrix"]}]}],"outputs":[{"name":"rotm","purpose":"Rotation matrix","htmlid":"buoeg2u-rotm","value":["3-by-3-by-n matrix"]}],"examples":[{"url":"axang2rotm.html#buqlpty-2","open_command":"openExample('nav_robotics\/ConvertAxisAngleRotationToRotationMatrixExample')","title":"Convert Axis-Angle Rotation to Rotation Matrix"}],"seealso":[{"url":"rotm2axang.html","name":"rotm2axang"},{"url":"so2.html","name":"so2"},{"url":"so3.html","name":"so3"}]},{"href":"ref\/axang2tform.html","refentity":[{"type":"function","name":"axang2tform","fcntype":"simple"}],"refpurpose":"Convert axis-angle rotation to homogeneous transformation","introduced":"R2015a","description":"This MATLAB function converts a rotation given in axis-angle form, axang, to a homogeneous transformation matrix, tform.","syntaxgroup":[{"title":"","syntax":["tform = axang2tform(axang)"]}],"inputgroup":[{"title":"","inputs":[{"name":"axang","purpose":"Rotation given in axis-angle form","htmlid":"buoeipi-axang","value":["n-by-4 matrix"]}]}],"outputs":[{"name":"tform","purpose":"Homogeneous transformation","htmlid":"buoeipi-tform","value":["4-by-4-by-n matrix"]}],"examples":[{"url":"axang2tform.html#buoejii-1","open_command":"openExample('nav_robotics\/ConvertAxisAngleRotationToHomogeneousTransformationExample')","title":"Convert Axis-Angle Rotation to Homogeneous Transformation"}],"seealso":[{"url":"tform2axang.html","name":"tform2axang"},{"url":"se2.html","name":"se2"},{"url":"se3.html","name":"se3"}]},{"href":"ref\/bicyclekinematics.derivative.html","refentity":[{"type":"function","name":"derivative","fcntype":"instancemethod"},{"type":"method","name":"bicycleKinematics.derivative","fcntype":"instancemethod"}],"refpurpose":"Time derivative of bicycle vehicle model","introduced":"R2021b","description":"This MATLAB function returns the current state derivative, stateDot, as a three-element vector [xDot yDot thetaDot] for a bicycle kinematics vehicle motion model, kinematicModel.","syntaxgroup":[{"title":"","syntax":["stateDot = derivative(kinematicModel,state,cmds)"]}],"inputgroup":[{"title":"","inputs":[{"name":"kinematicModel","purpose":"Bicycle kinematic motion model","htmlid":"mw_362c3870-f0ae-4f5e-b7be-7f055c6514be","value":["bicycleKinematics object"]},{"name":"state","purpose":"Current vehicle state","htmlid":"mw_cb8cbe15-3b23-4519-8240-75cd61bd6ce0","value":["three-element vector","four-element vector"]},{"name":"cmds","purpose":"Input commands to motion model","htmlid":"mw_b11a6a4e-2122-4e47-8872-5eeae971eee2","value":["two-element vector"]}]}],"outputs":[{"name":"stateDot","purpose":"Derivative of current state","htmlid":"mw_1889d67a-ac01-40e8-bb85-17d9599a8b62","value":["three-element vector of form [xDot yDot thetaDot]"]}],"examples":[{"url":"bicyclekinematics.derivative.html#mw_a24acf95-af01-471a-a793-9f29fd814e21","open_command":"openExample('nav\/PlotPathOfBicycleKinematicRobotExample')","title":"Plot Path of Bicycle Kinematic Robot"}],"seealso":[{"url":"bicyclekinematics.html","name":"bicycleKinematics"}]},{"href":"ref\/bicyclekinematics.html","refentity":[{"type":"object","name":"bicycleKinematics"},{"type":"function","name":"bicycleKinematics","fcntype":"constructor"}],"refpurpose":"Bicycle vehicle model","introduced":"R2021b","description":"bicycleKinematics creates a bicycle vehicle model to simulate simplified car-like vehicle dynamics.","syntaxgroup":[{"title":"","syntax":["kinematicModel = bicycleKinematics"]},{"title":"","syntax":["kinematicModel = bicycleKinematics(Name,Value)"]}],"classpropertygroup":[{"classproperty":[{"name":"WheelBase","purpose":"Distance between front and rear axles","htmlid":"mw_303ee7fa-c91d-46bb-b63b-5c7dfa4c3c90","value":["1","positive numeric scalar"],"defaultvalue":"1"},{"name":"VehicleSpeedRange","purpose":"Range of vehicle speeds","htmlid":"mw_0da32e09-3b83-424d-8868-cf0f128b0214","value":["[-Inf Inf]","positive numeric scalar"],"defaultvalue":"[-Inf Inf]"},{"name":"MaxSteeringAngle","purpose":"Maximum steering angle","htmlid":"mw_45754a1a-8501-4290-8af4-d8e81ca35d1c","value":["pi\/4","numeric scalar"],"defaultvalue":"pi\/4"},{"name":"MinimumTurningRadius","purpose":"Minimum vehicle turning radius","htmlid":"mw_7d03a1f4-54a5-4c86-8811-7c65226493df","value":["1.0000","numeric scalar"],"defaultvalue":"1.0000"},{"name":"VehicleInputs","purpose":"Type of motion inputs for vehicle","htmlid":"mw_7bf2275b-da0a-4b37-9446-607bf4e0ffa5","value":["\"VehicleSpeedSteeringAngle\"","character vector","string scalar"],"defaultvalue":"\"VehicleSpeedSteeringAngle\""}]}],"objectfunctions":[{"title":"","functions":[{"name":"derivative","url":"bicyclekinematics.derivative.html","description":"Time derivative of bicycle vehicle model"}]}],"examples":[{"url":"bicyclekinematics.html#mw_ea88b533-6093-4804-9e6c-20097570296f","open_command":"openExample('nav\/PlotPathOfBicycleKinematicRobotExample')","title":"Plot Path of Bicycle Kinematic Robot"}]},{"href":"ref\/bilevelmeasurementsconfiguration.html","refentity":[{"type":"object","name":"BilevelMeasurementsConfiguration"},{"type":"function","name":"BilevelMeasurementsConfiguration","fcntype":"constructor"}],"refpurpose":"Measure transitions, aberrations, and cycles of bilevel signals","introduced":"R2022a","description":"Use the BilevelMeasurementsConfiguration object to measure transitions, aberrations, and cycles of bilevel signals.","syntaxgroup":[{"title":"","syntax":["bilevelMeas = BilevelMeasurementsConfiguration()"]}],"classpropertygroup":[{"classproperty":[{"name":"AutoStateLevel","purpose":"Automatic detection of high- and low-state levels","htmlid":"mw_7ec412bf-f904-407f-93d9-e9aad55cb519","value":["true","false"],"defaultvalue":"true"},{"name":"HighStateLevel","purpose":"High-state level","htmlid":"mw_e8f461ff-5060-4962-9dc9-8c599203e98e","value":["2.3","nonnegative scalar"],"defaultvalue":"2.3"},{"name":"LowStateLevel","purpose":"Low-state level","htmlid":"mw_e9885307-3d40-42e7-84bc-53f30c4f545f","value":["0","nonnegative scalar"],"defaultvalue":"0"},{"name":"StateLevelTolerance","purpose":"Tolerance level of state","htmlid":"mw_e0b8b23d-22e7-47e3-8609-d2b0e520eb0b","value":["2","positive scalar in the range (0 100)"],"defaultvalue":"2"},{"name":"UpperReferenceLevel","purpose":"Upper-reference level","htmlid":"mw_5ed5c08b-5906-4a0b-980f-370546a62ac6","value":["90","positive scalar in the range (0 100)"],"defaultvalue":"90"},{"name":"MidReferenceLevel","purpose":"Mid-reference level","htmlid":"mw_47d8c975-f38a-4fae-82b1-58a0f43cc3ff","value":["50","positive scalar in the range (0 100)"],"defaultvalue":"50"},{"name":"LowerReferenceLevel","purpose":"Lower-reference level","htmlid":"mw_17dcdd77-e172-41d2-a5e2-9e3ad8091ed9","value":["10","positive scalar in the range (0 100)"],"defaultvalue":"10"},{"name":"SettleSeek","purpose":"Time duration over which to search for a settling time","htmlid":"mw_0295087f-c46c-45dc-89eb-22665750df5e","value":["0.02","positive scalar"],"defaultvalue":"0.02"},{"name":"ShowTransitions","purpose":"Enable transition measurements","htmlid":"mw_58de8a9f-30b6-49ef-89ca-5456ea9ae183","value":["false","true"],"defaultvalue":"false"},{"name":"ShowAberrations","purpose":"Enable aberration measurements","htmlid":"mw_b3dbabcf-5b7a-42b0-a708-2747876da587","value":["false","true"],"defaultvalue":"false"},{"name":"ShowCycles","purpose":"Enable cycle measurements","htmlid":"mw_7ab7a449-de1e-402c-96c3-294ad028a19b","value":["false","true"],"defaultvalue":"false"}]}],"examples":[{"url":"bilevelmeasurementsconfiguration.html#mw_5effa422-d45a-45fb-9de3-f016f5ce85e5","open_command":"openExample('dsp_nav_fusion\/ObtainBilevelMeasProgramUsingTimeScopeMATLABObjectExample')","title":"Configure Bilevel Measurements Programmatically in Time Scope MATLAB Object"}],"seealso":[{"url":"timescope.html","name":"timescope"}]},{"href":"ref\/binaryoccupancymap.checkoccupancy.html","refentity":[{"type":"function","name":"checkOccupancy","fcntype":"instancemethod"},{"type":"method","name":"binaryOccupancyMap.checkOccupancy","fcntype":"instancemethod"}],"refpurpose":"Check if locations are free or occupied","introduced":"R2019b","description":"The checkOccupancy function returns the occupancy statuses of specified locations in the binary occupancy map.","syntaxgroup":[{"title":"","syntax":["occStatus = checkOccupancy(map,xy)","occStatus = checkOccupancy(map,xy,\"local\")","occStatus = checkOccupancy(map,ij,\"grid\")","[occStatus,validPts] = checkOccupancy(___)"]},{"title":"","syntax":["occStatusMatrix = checkOccupancy(map)","occStatusMatrix = checkOccupancy(map,bottomLeft,matSize)","occStatusMatrix = checkOccupancy(map,bottomLeft,matSize,\"local\")","occStatusMatrix = checkOccupancy(map,topLeft,matSize,\"grid\")"]}],"inputgroup":[{"title":"","inputs":[{"name":"map","purpose":"Map representation","htmlid":"mw_31b7006a-5255-4eae-b367-d5f9f7433ae1_sep_bvaw665-1-map","value":["binaryOccupancyMap object"]},{"name":"xy","purpose":"Coordinates in the map","htmlid":"mw_31b7006a-5255-4eae-b367-d5f9f7433ae1_sep_bvaw665-1-xy","value":["n-by-2 matrix"]},{"name":"ij","purpose":"Grid locations in the map","htmlid":"mw_2254f2d2-7d1c-4930-9d37-2852ea08e810","value":["n-by-2 matrix"]},{"name":"bottomLeft","purpose":"Location of output matrix in world or local","htmlid":"mw_31b7006a-5255-4eae-b367-d5f9f7433ae1_sep_bvaw665-1-ij","value":["two-element vector","[xCoord yCoord]"]},{"name":"matSize","purpose":"Output matrix size","htmlid":"mw_09aba0e5-ae14-41bd-9873-fb5f991dd2eb","value":["two-element vector","[xLength yLength]","[gridRow gridCol]"]},{"name":"topLeft","purpose":"Location of grid","htmlid":"mw_c1c8a263-06be-4732-b45b-3add1c64a06b","value":["two-element vector","[iCoord jCoord]"]}]}],"outputs":[{"name":"occStatus","purpose":"Occupancy status","htmlid":"mw_31b7006a-5255-4eae-b367-d5f9f7433ae1_sep_bvaw665-1-iOccval","value":["n-by-1 column vector"]},{"name":"validPts","purpose":"Valid map locations","htmlid":"mw_31088985-4ad3-4431-820f-9ae6f78f0145","value":["n-by-1 column vector"]},{"name":"occStatusMatrix","purpose":"Matrix of occupancy statuses","htmlid":"mw_f57e5298-1232-4776-95bf-7f249418ce17","value":["matrix"]}],"examples":[{"url":"binaryoccupancymap.checkoccupancy.html#mw_31b7006a-5255-4eae-b367-d5f9f7433ae1_sep_mw_0cef219f-ea26-4a3a-b04e-29269a0793d0","open_command":"openExample('nav_robotics\/GetOccupancyValuesAndCheckOccupancyStatusExample')","title":"Get Occupancy Values and Check Occupancy Status"}],"seealso":[{"url":"binaryoccupancymap.html","name":"binaryOccupancyMap"},{"url":"binaryoccupancymap.getoccupancy.html","name":"getOccupancy"},{"url":"occupancymap.html","name":"occupancyMap"}]},{"href":"ref\/binaryoccupancymap.copy.html","refentity":[{"type":"function","name":"copy","fcntype":"instancemethod"},{"type":"method","name":"binaryOccupancyMap.copy","fcntype":"instancemethod"}],"refpurpose":"Create copy of binary occupancy map","introduced":"R2015a","description":"This MATLAB function creates a deep copy of the binaryOccupancyMap object with the same properties.","syntaxgroup":[{"title":"","syntax":["copyMap = copy(map)"]}],"inputgroup":[{"title":"","inputs":[{"name":"map","purpose":"Map representation","htmlid":"mw_c6444d83-5ead-4ba8-8a76-39d7bcd3600e","value":["binaryOccupancyMap object"]}]}],"outputs":[{"name":"copyMap","purpose":"Copied map representation","htmlid":"mw_b6c4a1af-56df-49b2-91ab-918b0b59a863","value":["binaryOccupancyMap object"]}],"examples":[{"url":"binaryoccupancymap.copy.html#mw_c4f98025-e758-4d48-87e7-0ea32406139e","open_command":"openExample('nav_robotics\/CopyBinaryOccupancyGridMapExample')","title":"Copy Binary Occupancy Grid Map"}],"seealso":[{"url":"binaryoccupancymap.html","name":"binaryOccupancyMap"},{"url":"occupancymap.html","name":"occupancyMap"}]},{"href":"ref\/binaryoccupancymap.getoccupancy.html","refentity":[{"type":"function","name":"getOccupancy","fcntype":"instancemethod"},{"type":"method","name":"binaryOccupancyMap.getOccupancy","fcntype":"instancemethod"}],"refpurpose":"Get occupancy value of locations","introduced":"R2015a","description":"The getOccupancy function gets the occupancy values of specified locations in the binary occupancy map.","syntaxgroup":[{"title":"","syntax":["occVal = getOccupancy(map,xy)","occVal = getOccupancy(map,xy,\"local\")","occVal = getOccupancy(map,ij,\"grid\")","[occVal,validPts] = getOccupancy(___)"]},{"title":"","syntax":["occMatrix = getOccupancy(map)","occMatrix = getOccupancy(map,bottomLeft,matSize)","occMatrix = getOccupancy(map,bottomLeft,matSize,\"local\")","occMatrix = getOccupancy(map,topLeft,matSize,\"grid\")"]}],"inputgroup":[{"title":"","inputs":[{"name":"map","purpose":"Map representation","htmlid":"mw_df05acd0-c0b8-4e52-ba16-5f10dd7e9757","value":["binaryOccupancyMap object"]},{"name":"xy","purpose":"Coordinates in the map","htmlid":"mw_2ce11fb4-1450-4202-b0ac-191cd1457afa","value":["n-by-2 matrix"]},{"name":"ij","purpose":"Grid locations in the map","htmlid":"mw_963a91d5-f9b4-4a39-b75e-2fbf46dc5e5f","value":["n-by-2 matrix"]},{"name":"bottomLeft","purpose":"Location of output matrix in world or local","htmlid":"mw_c0d6b512-e6db-491e-b670-a4c5626d531a","value":["two-element vector","[xCoord yCoord]"]},{"name":"matSize","purpose":"Output matrix size","htmlid":"mw_de64f8ee-df0a-4d4a-b8da-c9da8e869813","value":["two-element vector","[xLength yLength]","[gridRow gridCol]"]},{"name":"topLeft","purpose":"Location of grid","htmlid":"mw_d7e16d3f-315d-4ff4-9848-b204426e8584","value":["two-element vector","[iCoord jCoord]"]}]}],"outputs":[{"name":"occVal","purpose":"Occupancy values","htmlid":"mw_281b9e66-0884-4537-a2eb-1235584e6ddc","value":["n-by-1 column vector"]},{"name":"validPts","purpose":"Valid map locations","htmlid":"mw_f695d0ba-fdad-4d84-8d4e-bc88179fe6de","value":["n-by-1 column vector"]},{"name":"occMatrix","purpose":"Matrix of occupancy values","htmlid":"mw_fd307312-0c66-40a5-9bd2-f8737b5ee4c3","value":["matrix"]}],"examples":[{"url":"binaryoccupancymap.getoccupancy.html#mw_9b2cdd46-01f9-438f-b3df-ff3befc7b2f0","open_command":"openExample('nav_robotics\/InsertLaserScansIntoOccupancyMapExample')","title":"Insert Laser Scans into Binary Occupancy Map"},{"url":"binaryoccupancymap.getoccupancy.html#mw_53731436-29b9-4dc6-8b1c-77a769ab814b","open_command":"openExample('nav_robotics\/GetOccupancyValuesAndCheckOccupancyStatusExample')","title":"Get Occupancy Values and Check Occupancy Status"}],"seealso":[{"url":"binaryoccupancymap.html","name":"binaryOccupancyMap"},{"url":"binaryoccupancymap.setoccupancy.html","name":"setOccupancy"}]},{"href":"ref\/binaryoccupancymap.grid2local.html","refentity":[{"type":"function","name":"grid2local","fcntype":"instancemethod"},{"type":"method","name":"binaryOccupancyMap.grid2local","fcntype":"instancemethod"}],"refpurpose":"Convert grid indices to local coordinates","introduced":"R2019b","description":"This MATLAB function converts a [row col] array of grid indices, ij, to an array of local coordinates, xy.","syntaxgroup":[{"title":"","syntax":["xy = grid2local(map,ij)"]}],"inputgroup":[{"title":"","inputs":[{"name":"map","purpose":"Map representation","htmlid":"mw_761fcd87-5ed5-4ddc-9e40-79bff97782bd_sep_buoogfm-1-map","value":["binaryOccupancyMap object"]},{"name":"ij","purpose":"Grid positions","htmlid":"mw_761fcd87-5ed5-4ddc-9e40-79bff97782bd_sep_buoogfm-1-ij","value":["n-by-2 vertical array"]}]}],"outputs":[{"name":"xy","purpose":"Local coordinates","htmlid":"mw_761fcd87-5ed5-4ddc-9e40-79bff97782bd_sep_buoogfm-1-xy","value":["n-by-2 vertical array"]}],"examples":[{"url":"binaryoccupancymap.grid2local.html#mw_972a8575-62e8-4516-b8b8-b353eda091db","open_command":"openExample('nav_robotics\/ConvertGridIndicesInBinaryOccupancyMapToLocalCoordinatesExample')","title":"Convert Grid Indices in Binary Occupancy Map to Local Coordinates"}],"seealso":[{"url":"binaryoccupancymap.html","name":"binaryOccupancyMap"},{"url":"binaryoccupancymap.world2grid.html","name":"world2grid"}]},{"href":"ref\/binaryoccupancymap.grid2world.html","refentity":[{"type":"function","name":"grid2world","fcntype":"instancemethod"},{"type":"method","name":"binaryOccupancyMap.grid2world","fcntype":"instancemethod"}],"refpurpose":"Convert grid indices to world coordinates","introduced":"R2015a","description":"This MATLAB function converts a [row col] array of grid indices, ij, to an array of world coordinates, xy.","syntaxgroup":[{"title":"","syntax":["xy = grid2world(map,ij)"]}],"inputgroup":[{"title":"","inputs":[{"name":"map","purpose":"Map representation","htmlid":"buoogfm-1_sep_buoogfm-1-map","value":["binaryOccupancyMap object"]},{"name":"ij","purpose":"Grid positions","htmlid":"buoogfm-1_sep_buoogfm-1-ij","value":["n-by-2 vertical array"]}]}],"outputs":[{"name":"xy","purpose":"World coordinates","htmlid":"buoogfm-1_sep_buoogfm-1-xy","value":["n-by-2 vertical array"]}],"examples":[{"url":"binaryoccupancymap.grid2world.html#mw_f602cead-a47b-45db-bb7a-67ae4aa3721c","open_command":"openExample('nav_robotics\/ConvertGridIndicesInBinaryOccupancyMapToWorldCoordinatesExample')","title":"Convert Grid Indices in Binary Occupancy Map to World Coordinates"}],"seealso":[{"url":"binaryoccupancymap.html","name":"binaryOccupancyMap"},{"url":"binaryoccupancymap.world2grid.html","name":"world2grid"},{"url":"binaryoccupancymap.grid2local.html","name":"grid2local"}]},{"href":"ref\/binaryoccupancymap.inflate.html","refentity":[{"type":"function","name":"inflate","fcntype":"instancemethod"},{"type":"method","name":"binaryOccupancyMap.inflate","fcntype":"instancemethod"}],"refpurpose":"Inflate each occupied location","introduced":"R2015a","description":"This MATLAB function inflates each occupied location of the map by the radius given in meters.","syntaxgroup":[{"title":"","syntax":["inflate(map,radius)","inflate(map,radius,\"grid\")"]}],"inputgroup":[{"title":"","inputs":[{"name":"map","purpose":"Map representation","htmlid":"buoog0l-1-map","value":["binaryOccupancyMap object"]}]},{"title":"","inputs":[{"name":"radius","purpose":"Dimension that defines how much to inflate occupied locations","htmlid":"buoog0l-1-radius","value":["scalar"]}]}],"examples":[{"url":"binaryoccupancymap.inflate.html#mw_e1e2f205-ec4d-43c3-a248-a2842d85f659","open_command":"openExample('nav_robotics\/CreateAndModifyBinaryOccupancyGridExample')","title":"Create and Modify Binary Occupancy Grid"}],"seealso":[{"url":"binaryoccupancymap.html","name":"binaryOccupancyMap"},{"url":"binaryoccupancymap.setoccupancy.html","name":"setOccupancy"}]},{"href":"ref\/binaryoccupancymap.insertray.html","refentity":[{"type":"function","name":"insertRay","fcntype":"instancemethod"},{"type":"method","name":"binaryOccupancyMap.insertRay","fcntype":"instancemethod"}],"refpurpose":"Insert ray from laser scan observation","introduced":"R2019b","description":"This MATLAB function inserts one or more lidar scan sensor observations in the occupancy grid, map, using the input lidarScan object, scan, to get ray endpoints.","syntaxgroup":[{"title":"","syntax":["insertRay(map,pose,scan,maxrange)","insertRay(map,pose,ranges,angles,maxrange)","insertRay(map,startpt,endpoints)"]}],"inputgroup":[{"title":"","inputs":[{"name":"map","purpose":"Map representation","htmlid":"mw_a8423a7e-6210-4406-9f27-11b08e000bf0","value":["binaryOccupancyMap object"]},{"name":"pose","purpose":"Position and orientation of sensor","htmlid":"mw_6aad2bef-15f2-45cb-b5a7-8d0684ed5e02_sep_mw_4cbc369e-d695-4e46-be76-fc95ba40df39","value":["three-element vector"]}]},{"title":"","inputs":[{"name":"scan","purpose":"Lidar scan readings","htmlid":"mw_24b3f4d5-5923-4f5a-824d-373981e92f5e","value":["lidarScan object"]}]},{"title":"","inputs":[{"name":"ranges","purpose":"Range values from scan data","htmlid":"mw_6aad2bef-15f2-45cb-b5a7-8d0684ed5e02_sep_bvaw7o8-1-ranges","value":["vector"]},{"name":"angles","purpose":"Angle values from scan data","htmlid":"mw_6aad2bef-15f2-45cb-b5a7-8d0684ed5e02_sep_bvaw7o8-1-angles","value":["vector"]},{"name":"maxrange","purpose":"Maximum range of sensor","htmlid":"mw_6aad2bef-15f2-45cb-b5a7-8d0684ed5e02_sep_bvaw7o8-1-maxrange","value":["scalar"]},{"name":"startpt","purpose":"Start point for rays","htmlid":"mw_6aad2bef-15f2-45cb-b5a7-8d0684ed5e02_sep_bvaw7o8-1-startpt","value":["two-element vector"]},{"name":"endpoints","purpose":"Endpoints for rays","htmlid":"mw_6aad2bef-15f2-45cb-b5a7-8d0684ed5e02_sep_bvaw7o8-1-endpoints","value":["n-by-2 matrix"]}]}],"examples":[{"url":"binaryoccupancymap.insertray.html#mw_6aad2bef-15f2-45cb-b5a7-8d0684ed5e02_sep_mw_e47daa63-9aa9-42b3-b8e6-65c827a12f32","open_command":"openExample('nav_robotics\/InsertLaserScansIntoOccupancyMapExample')","title":"Insert Laser Scans into Binary Occupancy Map"}],"seealso":[{"url":"occupancymap.html","name":"occupancyMap"},{"url":"binaryoccupancymap.html","name":"binaryOccupancyMap"},{"url":"lidarscan.html","name":"lidarScan"}]},{"href":"ref\/binaryoccupancymap.html","refentity":[{"type":"object","name":"binaryOccupancyMap"},{"type":"function","name":"binaryOccupancyMap","fcntype":"constructor"}],"refpurpose":"Create occupancy grid with binary values","introduced":"R2015a","description":"The binaryOccupancyMap creates a 2-D occupancy map object, which you can use to represent and visualize a robot workspace, including obstacles.","syntaxgroup":[{"title":"","syntax":["map = binaryOccupancyMap","map = binaryOccupancyMap(width,height)","map = binaryOccupancyMap(width,height,resolution)"]},{"title":"","syntax":["map = binaryOccupancyMap(rows,cols,resolution,\"grid\")"]},{"title":"","syntax":["map = binaryOccupancyMap(p)","map = binaryOccupancyMap(p,resolution)"]},{"title":"","syntax":["map = binaryOccupancyMap(sourcemap)","map = binaryOccupancyMap(sourcemap,resolution)"]},{"title":"","syntax":["map = binaryOccupancyMap(___,Name=Value)"]}],"inputgroup":[{"title":"","inputs":[{"name":"width","purpose":"Map width","htmlid":"mw_9f15a2e0-b1a9-4d23-9090-29c961f36701","value":["positive scalar"]},{"name":"height","purpose":"Map height","htmlid":"mw_593e1229-75db-48ed-9ca4-4a71d469f629","value":["positive scalar"]},{"name":"p","purpose":"Map grid values","htmlid":"mw_70d54208-7361-4bec-8477-d956e69430fe","value":["matrix"]},{"name":"sourcemap","purpose":"Occupancy map object","htmlid":"mw_db39d36b-42f1-4bf5-b512-625358611fc6","value":["binaryOccupancyMap object"]}]}],"classpropertygroup":[{"classproperty":[{"name":"GridSize","readonly":true,"purpose":"Number of rows and columns in grid","htmlid":"bunq527-GridSize","value":["two-element vector of form [rows cols]"]},{"name":"Resolution","readonly":true,"purpose":"Grid resolution","htmlid":"bunq527-Resolution","value":["1","scalar"],"defaultvalue":"1"},{"name":"XLocalLimits","readonly":true,"purpose":"Minimum and maximum values of x-coordinates in local frame","htmlid":"mw_6bb603f0-ee8a-44ef-99a4-c2b76789d126","value":["two-element vector of form [min max]"]},{"name":"YLocalLimits","readonly":true,"purpose":"Minimum and maximum values of y-coordinates in local frame","htmlid":"mw_278a0c27-8d54-4597-a2e5-a10465a6f619","value":["two-element vector of form [min max]"]},{"name":"XWorldLimits","readonly":true,"purpose":"Minimum and maximum values of x-coordinates in world frame","htmlid":"mw_d0e3a01a-07c7-4428-addd-8dee1c160c7f","value":["two-element vector of form [min max]"]},{"name":"YWorldLimits","readonly":true,"purpose":"Minimum and maximum values of y-coordinates","htmlid":"bunq527-YWorldLimits","value":["two-element vector of form [min max]"]},{"name":"GridLocationInWorld","purpose":"Location of the grid in world coordinates","htmlid":"bunq527-GridLocationInWorld","value":["[0 0]","two-element vector","[xGrid yGrid]"],"defaultvalue":"[0 0]"},{"name":"LocalOriginInWorld","purpose":"Location of the local frame in world coordinates","htmlid":"mw_abe3e26b-4bf6-4afa-a32a-a50f80ab8147","value":["[0 0]","two-element vector","[xWorld yWorld]"],"defaultvalue":"[0 0]"},{"name":"GridOriginInLocal","purpose":"Location of the grid in local coordinates","htmlid":"mw_5aa21f76-0e7c-446a-b186-afe9a33e270d","value":["[0 0]","two-element vector","[xLocal yLocal]"],"defaultvalue":"[0 0]"},{"name":"DefaultValue","purpose":"Default value for unspecified map locations","htmlid":"mw_7758d158-5485-42e5-a6f7-e0099f507937","value":["0","1"],"defaultvalue":"0"}]}],"objectfunctions":[{"title":"","functions":[{"name":"copy","url":"binaryoccupancymap.copy.html","description":"Create copy of binary occupancy map"},{"name":"checkOccupancy","url":"binaryoccupancymap.checkoccupancy.html","description":"Check if locations are free or occupied"},{"name":"getOccupancy","url":"binaryoccupancymap.getoccupancy.html","description":"Get occupancy value of locations"},{"name":"grid2local","url":"binaryoccupancymap.grid2local.html","description":"Convert grid indices to local coordinates"},{"name":"grid2world","url":"binaryoccupancymap.grid2world.html","description":"Convert grid indices to world coordinates"},{"name":"inflate","url":"binaryoccupancymap.inflate.html","description":"Inflate each occupied location"},{"name":"insertRay","url":"binaryoccupancymap.insertray.html","description":"Insert ray from laser scan observation"},{"name":"local2grid","url":"binaryoccupancymap.local2grid.html","description":"Convert local coordinates to grid indices"},{"name":"local2world","url":"binaryoccupancymap.local2world.html","description":"Convert local coordinates to world coordinates"},{"name":"move","url":"binaryoccupancymap.move.html","description":"Move map in world frame"},{"name":"occupancyMatrix","url":"binaryoccupancymap.occupancymatrix.html","description":"Convert occupancy grid to matrix"},{"name":"raycast","url":"binaryoccupancymap.raycast.html","description":"Compute cell indices along a ray"},{"name":"rayIntersection","url":"binaryoccupancymap.rayintersection.html","description":"Find intersection points of rays and occupied map cells"},{"name":"setOccupancy","url":"binaryoccupancymap.setoccupancy.html","description":"Set occupancy value of locations"},{"name":"show","url":"binaryoccupancymap.show.html","description":"Display binary occupancy map"},{"name":"syncWith","url":"binaryoccupancymap.syncwith.html","description":"Sync map with overlapping map"},{"name":"world2grid","url":"binaryoccupancymap.world2grid.html","description":"Convert world coordinates to grid indices"},{"name":"world2local","url":"binaryoccupancymap.world2local.html","description":"Convert world coordinates to local coordinates"}]}],"examples":[{"url":"binaryoccupancymap.html#buratr8","open_command":"openExample('nav_robotics\/CreateAndModifyBinaryOccupancyGridExample')","title":"Create and Modify Binary Occupancy Grid"},{"url":"binaryoccupancymap.html#buvr49e","open_command":"openExample('nav_robotics\/ImageToBinaryOccupancyGridExampleExample')","title":"Image to Binary Occupancy Grid Example"},{"url":"binaryoccupancymap.html#bu7tg3u","open_command":"openExample('nav_robotics\/ConvertPGMImageToMapExample')","title":"Convert PGM Image to Map"}],"seealso":[{"url":"controllerpurepursuit-system-object.html","name":"controllerPurePursuit"}]},{"href":"ref\/binaryoccupancymap.local2grid.html","refentity":[{"type":"function","name":"local2grid","fcntype":"instancemethod"},{"type":"method","name":"binaryOccupancyMap.local2grid","fcntype":"instancemethod"}],"refpurpose":"Convert local coordinates to grid indices","introduced":"R2019b","description":"This MATLAB function converts an array of local coordinates, xy, to an array of grid indices, ij in [row col] format.","syntaxgroup":[{"title":"","syntax":["ij = local2grid(map,xy)"]}],"inputgroup":[{"title":"","inputs":[{"name":"map","purpose":"Map representation","htmlid":"mw_064f957c-cc6d-4597-b5ad-a87b9d783c11","value":["binaryOccupancyMap object"]},{"name":"xy","purpose":"Local coordinates","htmlid":"mw_6060e75b-a424-4b59-8251-eb345f5ad58c_sep_bvaw7vo-1-xy","value":["n-by-2 matrix"]}]}],"outputs":[{"name":"ij","purpose":"Grid positions","htmlid":"mw_6060e75b-a424-4b59-8251-eb345f5ad58c_sep_bvaw7vo-1-ij","value":["n-by-2 matrix"]}],"examples":[{"url":"binaryoccupancymap.local2grid.html#mw_67de728d-553f-431c-9e1f-490a8e8dbaaa","open_command":"openExample('nav_robotics\/ConvertLocalCoordinatesInBinaryOccupancyMapToGridIndicesExample')","title":"Convert Local Coordinates in Binary Occupancy Map to Grid Indices"}],"seealso":[{"url":"binaryoccupancymap.html","name":"binaryOccupancyMap"},{"url":"occupancymap.html","name":"occupancyMap"},{"url":"binaryoccupancymap.grid2world.html","name":"grid2world"}]},{"href":"ref\/binaryoccupancymap.local2world.html","refentity":[{"type":"function","name":"local2world","fcntype":"instancemethod"},{"type":"method","name":"binaryOccupancyMap.local2world","fcntype":"instancemethod"}],"refpurpose":"Convert local coordinates to world coordinates","introduced":"R2019b","description":"This MATLAB function converts an array of local coordinates to world coordinates.","syntaxgroup":[{"title":"","syntax":["xyWorld = local2world(map,xy)"]}],"inputgroup":[{"title":"","inputs":[{"name":"map","purpose":"Map representation","htmlid":"mw_bc58f5a4-bf65-42c1-85f6-d2866d04e1c7","value":["binaryOccupancyMap object"]},{"name":"xy","purpose":"Local coordinates","htmlid":"bvaw7vo-1_sep_bvaw7vo-1-xy","value":["n-by-2 matrix"]}]}],"outputs":[{"name":"xyWorld","purpose":"World coordinates","htmlid":"mw_d946b9f2-bc2f-4b41-aadb-2ef1f4b8df03","value":["n-by-2 matrix"]}],"examples":[{"url":"binaryoccupancymap.local2world.html#mw_cf93bb92-53e7-48c9-b9e2-5cf11dc2ab8f","open_command":"openExample('nav_robotics\/ConvertLocalCoordinatesInBinaryOccuMapToWorldCoordinatesExample')","title":"Convert Local Coordinates in Binary Occupancy Map to World Coordinates"}],"seealso":[{"url":"binaryoccupancymap.html","name":"binaryOccupancyMap"},{"url":"occupancymap.grid2world.html","name":"grid2world"},{"url":"binaryoccupancymap.world2local.html","name":"world2local"},{"url":"occupancymap.html","name":"occupancyMap"}]},{"href":"ref\/binaryoccupancymap.move.html","refentity":[{"type":"function","name":"move","fcntype":"instancemethod"},{"type":"method","name":"binaryOccupancyMap.move","fcntype":"instancemethod"}],"refpurpose":"Move map in world frame","introduced":"R2019b","description":"The move function moves the local origin of the binary occupancy map to a location in the world frame and updates the map limits.","syntaxgroup":[{"title":"","syntax":["move(map,moveValue)","move(map,moveValue,Name,Value)"]}],"inputgroup":[{"title":"","inputs":[{"name":"map","purpose":"Map representation","htmlid":"mw_692158aa-b0eb-4183-a2ba-606d79e16bf1","value":["binaryOccupancyMap object"]},{"name":"moveValue","purpose":"Local map origin move value","htmlid":"mw_b7cfb9cc-1a23-48e8-bdd3-b37fc18d4c29","value":["[x y] vector"]}]},{"namevaluepairs":[{"title":"","inputs":[{"name":"MoveType","purpose":"Type of move","htmlid":"mw_b1f6b9a1-51f2-4e6b-ab7b-a7c9f4758c50","value":["'absolute'","'relative'"],"defaultvalue":"'absolute'"},{"name":"FillValue","purpose":"Fill value for revealed locations","htmlid":"mw_de707509-39a1-44ef-be59-b9d7ce2bc217","value":["0","1"],"defaultvalue":"0"},{"name":"SyncWith","purpose":"Secondary map to sync with","htmlid":"mw_8448d12c-8fe2-4c78-a49e-cad44a5267e1","value":["binaryOccupancyMap object"]}]}]}],"examples":[{"url":"binaryoccupancymap.move.html#mw_e1201994-c6d2-47a5-bfa1-61c6d720f5e8","open_command":"openExample('nav_robotics\/MoveLocalMapAndSyncWithWorldMapExample')","title":"Move Local Map and Sync with World Map"}],"seealso":[{"url":"binaryoccupancymap.html","name":"binaryOccupancyMap"},{"url":"occupancymap.html","name":"occupancyMap"},{"url":"binaryoccupancymap.occupancymatrix.html","name":"occupancyMatrix"}]},{"href":"ref\/binaryoccupancymap.occupancymatrix.html","refentity":[{"type":"function","name":"occupancyMatrix","fcntype":"instancemethod"},{"type":"method","name":"binaryOccupancyMap.occupancyMatrix","fcntype":"instancemethod"}],"refpurpose":"Convert occupancy grid to matrix","introduced":"R2016b","description":"This MATLAB function returns occupancy values stored in the occupancy grid object as a matrix.","syntaxgroup":[{"title":"","syntax":["mat = occupancyMatrix(map)"]}],"inputgroup":[{"title":"","inputs":[{"name":"map","purpose":"Map representation","htmlid":"mw_9cb89f42-567f-4f01-b2e7-25001806c3b1","value":["binaryOccupancyMap object"]}]}],"outputs":[{"name":"mat","purpose":"Occupancy values","htmlid":"bvaw7px-1-mat","value":["matrix"]}],"examples":[{"url":"binaryoccupancymap.occupancymatrix.html#mw_28f1cdc3-c020-4115-a8f1-ff316b5aa40c","open_command":"openExample('nav_robotics\/ConvertBinaryOccupancyMapToMatrixExample')","title":"Convert Binary Occupancy Map to Matrix"}],"seealso":[{"url":"binaryoccupancymap.html","name":"binaryOccupancyMap"},{"url":"occupancymap.html","name":"occupancyMap"}]},{"href":"ref\/binaryoccupancymap.raycast.html","refentity":[{"type":"function","name":"raycast","fcntype":"instancemethod"},{"type":"method","name":"binaryOccupancyMap.raycast","fcntype":"instancemethod"}],"refpurpose":"Compute cell indices along a ray","introduced":"R2019b","description":"This MATLAB function returns cell indices of the specified map for all cells traversed by a ray originating from the specified pose at the specified angle and range values.","syntaxgroup":[{"title":"","syntax":["[endpoints,midpoints] = raycast(map,pose,range,angle)","[endpoints,midpoints] = raycast(map,p1,p2)"]}],"inputgroup":[{"title":"","inputs":[{"name":"map","purpose":"Map representation","htmlid":"mw_0f7ec4ca-4e18-443e-bc6a-e25f93499857","value":["binaryOccupancyMap object"]},{"name":"pose","purpose":"Position and orientation of sensor","htmlid":"bvaw7qw-1_sep_bvaw7qw-1-pose","value":["three-element vector"]},{"name":"range","purpose":"Range of ray","htmlid":"bvaw7qw-1_sep_bvaw7qw-1-range","value":["scalar"]},{"name":"angle","purpose":"Angle of ray","htmlid":"bvaw7qw-1_sep_bvaw7qw-1-angle","value":["scalar"]},{"name":"p1","purpose":"Starting point of ray","htmlid":"bvaw7qw-1_sep_bvaw7qw-1-p1","value":["two-element vector"]},{"name":"p2","purpose":"Endpoint of ray","htmlid":"bvaw7qw-1_sep_bvaw7qw-1-p2","value":["two-element vector"]}]}],"outputs":[{"name":"endpoints","purpose":"Endpoint grid indices","htmlid":"bvaw7qw-1_sep_bvaw7qw-1-endpoints","value":["n-by-2 matrix"]},{"name":"midpoints","purpose":"Midpoint grid indices","htmlid":"bvaw7qw-1_sep_bvaw7qw-1-midpoints","value":["n-by-2 matrix"]}],"examples":[{"url":"binaryoccupancymap.raycast.html#mw_98e02112-2760-40b8-a329-e2a898586dd1","open_command":"openExample('nav_robotics\/ComputeGridCellIndicesAlongARayExample')","title":"Compute Grid Cell Indices Along a Ray"}],"seealso":[{"url":"binaryoccupancymap.html","name":"binaryOccupancyMap"},{"url":"binaryoccupancymap.insertray.html","name":"insertRay"},{"url":"occupancymap.html","name":"occupancyMap"}]},{"href":"ref\/binaryoccupancymap.rayintersection.html","refentity":[{"type":"function","name":"rayIntersection","fcntype":"instancemethod"},{"type":"method","name":"binaryOccupancyMap.rayIntersection","fcntype":"instancemethod"}],"refpurpose":"Find intersection points of rays and occupied map cells","introduced":"R2019b","description":"This MATLAB function returns intersection points of rays and occupied cells in the specified map.","syntaxgroup":[{"title":"","syntax":["intersectionPts = rayIntersection(map,pose,angles,maxrange)"]}],"inputgroup":[{"title":"","inputs":[{"name":"map","purpose":"Map representation","htmlid":"mw_f4528379-d837-48fe-870c-c7308f97043d","value":["binaryOccupancyMap object"]},{"name":"pose","purpose":"Position and orientation of sensor","htmlid":"bvaw7rt-1_sep_mw_31fac152-9bfe-4191-bc0b-d7e46f12a515","value":["three-element vector"]},{"name":"angles","purpose":"Ray angles emanating from sensor","htmlid":"bvaw7rt-1_sep_bvaw7rt-1-angles","value":["vector"]},{"name":"maxrange","purpose":"Maximum range of sensor","htmlid":"bvaw7rt-1_sep_bvaw7rt-1-maxrange","value":["scalar"]}]}],"outputs":[{"name":"intersectionPts","purpose":"Intersection points","htmlid":"bvaw7rt-1_sep_bvaw7rt-1-intersectionPts","value":["n-by-2 matrix"]}],"examples":[{"url":"binaryoccupancymap.rayintersection.html#mw_326d8810-485e-401a-a46d-a715fb1a265f","open_command":"openExample('nav_robotics\/GetRayIntersectionPointsOnOccupancyMapExample')","title":"Get Ray Intersection Points on Occupancy Map"}],"seealso":[{"url":"binaryoccupancymap.html","name":"binaryOccupancyMap"},{"url":"occupancymap.html","name":"occupancyMap"}]},{"href":"ref\/binaryoccupancymap.setoccupancy.html","refentity":[{"type":"function","name":"setOccupancy","fcntype":"instancemethod"},{"type":"method","name":"binaryOccupancyMap.setOccupancy","fcntype":"instancemethod"}],"refpurpose":"Set occupancy value of locations","introduced":"R2015a","description":"The setOccupancy function assigns occupancy values of specified locations in the binary occupancy map.","syntaxgroup":[{"title":"","syntax":["setOccupancy(map,xy,occval)","setOccupancy(map,xy,occval,\"local\")","setOccupancy(map,ij,occval,\"grid\")","validPts = setOccupancy(___)"]},{"title":"","syntax":["setOccupancy(map,bottomLeft,inputMatrix)","setOccupancy(map,bottomLeft,inputMatrix,\"local\")","setOccupancy(map,topLeft,inputMatrix,\"grid\")"]}],"inputgroup":[{"title":"","inputs":[{"name":"map","purpose":"Map representation","htmlid":"mw_2698b39d-0468-4615-8ef1-9993c57ac6d5","value":["binaryOccupancyMap object"]},{"name":"xy","purpose":"World coordinates","htmlid":"bun02s3-xy","value":["n-by-2 vertical array"]},{"name":"ij","purpose":"Grid positions","htmlid":"bun02s3-ij","value":["n-by-2 vertical array"]},{"name":"occval","purpose":"Occupancy values","htmlid":"bun02s3-occval","value":["n-by-1 vertical array"]},{"name":"inputMatrix","purpose":"Occupancy values","htmlid":"mw_a7b13304-e098-4ffd-8e3c-c2e24131ec3b","value":["matrix"]},{"name":"bottomLeft","purpose":"Location of output matrix in world or local","htmlid":"mw_74ec49b6-8756-4649-b37f-fb6d4d00bdba","value":["two-element vector","[xCoord yCoord]"]},{"name":"topLeft","purpose":"Location of grid","htmlid":"mw_d3b70a28-5df5-49b5-8c96-a298d5a91d04","value":["two-element vector","[iCoord jCoord]"]}]}],"outputs":[{"name":"validPts","purpose":"Valid map locations","htmlid":"mw_6a744bb4-bc2a-4b11-b3bc-0e80438e3a26","value":["n-by-1 column vector"]}],"examples":[{"url":"binaryoccupancymap.setoccupancy.html#mw_6eade351-3c7e-439f-8f13-51459e8771ad","open_command":"openExample('nav_robotics\/CreateAndModifyBinaryOccupancyGridExample')","title":"Create and Modify Binary Occupancy Grid"}],"seealso":[{"url":"binaryoccupancymap.html","name":"binaryOccupancyMap"},{"url":"binaryoccupancymap.getoccupancy.html","name":"getOccupancy"},{"url":"occupancymap.html","name":"occupancyMap"}]},{"href":"ref\/binaryoccupancymap.show.html","refentity":[{"type":"function","name":"show","fcntype":"instancemethod"},{"type":"method","name":"binaryOccupancyMap.show","fcntype":"instancemethod"}],"refpurpose":"Display binary occupancy map","introduced":"R2015a","description":"This MATLAB function displays the binary occupancy grid map in the current axes.","syntaxgroup":[{"title":"","syntax":["show(map)","show(map,frame)","show(___,Name,Value)","mapImage = show(___)"]}],"inputgroup":[{"title":"","inputs":[{"name":"map","purpose":"Map representation","htmlid":"mw_046d9554-c711-4ebc-a89f-bc3e324b1140","value":["binaryOccupancyMap object"]},{"name":"map","purpose":"Map representation","htmlid":"mw_1761d0df-81a5-46bc-b0bb-7e506cf8564f","value":["binaryOccupancyMap object"]},{"name":"frame","purpose":"Map reference frame","htmlid":"mw_8943d46c-2874-4d63-ac1f-4256035871c6","value":["\"world\"","\"local\"","\"grid\""],"defaultvalue":"\"world\""}]},{"namevaluepairs":[{"title":"","inputs":[{"name":"Parent","purpose":"Axes to plot the map","htmlid":"mw_588b8f56-7997-4618-94b8-633df6ef888e","value":["Axes object","UIAxes object"]},{"name":"FastUpdate","purpose":"Update existing map plot","htmlid":"mw_2ccc1101-07ef-45e3-88a0-d021005c65a4","value":["0","1"],"defaultvalue":"0"}]}]}],"examples":[{"url":"binaryoccupancymap.show.html#mw_e78927ad-b880-41a0-9395-49582f3daaec","open_command":"openExample('nav_robotics\/MoveLocalMapAndSyncWithWorldMapExample')","title":"Move Local Map and Sync with World Map"}],"seealso":[{"url":"binaryoccupancymap.html","name":"binaryOccupancyMap"},{"url":"occupancymap.html","name":"occupancyMap"}]},{"href":"ref\/binaryoccupancymap.syncwith.html","refentity":[{"type":"function","name":"syncWith","fcntype":"instancemethod"},{"type":"method","name":"binaryOccupancyMap.syncWith","fcntype":"instancemethod"}],"refpurpose":"Sync map with overlapping map","introduced":"R2019b","description":"This MATLAB function updates map with data from another binaryOccupancyMap object, sourcemap.","syntaxgroup":[{"title":"","syntax":["mat = syncWith(map,sourcemap)"]}],"inputgroup":[{"title":"","inputs":[{"name":"map","purpose":"Map representation","htmlid":"mw_e676fbb7-c359-4485-87f6-7ca99b4ede62","value":["binaryOccupancyMap object"]},{"name":"sourcemap","purpose":"Map representation","htmlid":"mw_002d6d80-1879-4a5f-9040-197fb749e22a","value":["binaryOccupancyMap object"]}]}],"examples":[{"url":"binaryoccupancymap.syncwith.html#mw_50bbe834-1df8-4e03-a59f-5af7d4fe05e7","open_command":"openExample('robotics\/SyncMapWithAnOverlappingMapExample')","title":"Sync Map with an Overlapping Map"}],"seealso":[{"url":"binaryoccupancymap.html","name":"binaryOccupancyMap"},{"url":"occupancymap.html","name":"occupancyMap"}]},{"href":"ref\/binaryoccupancymap.world2grid.html","refentity":[{"type":"function","name":"world2grid","fcntype":"instancemethod"},{"type":"method","name":"binaryOccupancyMap.world2grid","fcntype":"instancemethod"}],"refpurpose":"Convert world coordinates to grid indices","introduced":"R2015a","description":"This MATLAB function converts an array of world coordinates, xy, to a [rows cols] array of grid indices, ij.","syntaxgroup":[{"title":"","syntax":["ij = world2grid(map,xy)"]}],"inputgroup":[{"title":"","inputs":[{"name":"map","purpose":"Map representation","htmlid":"mw_3adbe654-3f1a-470e-b6f7-5ae71653b00a","value":["binaryOccupancyMap object"]},{"name":"xy","purpose":"World coordinates","htmlid":"buoogpw-1-xy","value":["n-by-2 vertical array"]}]}],"outputs":[{"name":"ij","purpose":"Grid indices","htmlid":"buoogpw-1-ij","value":["n-by-2 vertical array"]}],"examples":[{"url":"binaryoccupancymap.world2grid.html#mw_0ebd6283-d1e8-4c10-b72d-a48a323d115a","open_command":"openExample('nav_robotics\/ConvertWorldCoordinatesInBinaryOccupancyMapToGridIndicesExample')","title":"Convert World Coordinates in Binary Occupancy Map to Grid Indices"},{"url":"binaryoccupancymap.world2grid.html#mw_f8b90c72-89ff-4379-8fa5-3d5aecccebdf","open_command":"openExample('nav_robotics\/CreateAndModifyBinaryOccupancyGridExample')","title":"Create and Modify Binary Occupancy Grid"}],"seealso":[{"url":"binaryoccupancymap.html","name":"binaryOccupancyMap"},{"url":"binaryoccupancymap.grid2world.html","name":"grid2world"}]},{"href":"ref\/binaryoccupancymap.world2local.html","refentity":[{"type":"function","name":"world2local","fcntype":"instancemethod"},{"type":"method","name":"binaryOccupancyMap.world2local","fcntype":"instancemethod"}],"refpurpose":"Convert world coordinates to local coordinates","introduced":"R2019b","description":"This MATLAB function converts an array of world coordinates to local coordinates.","syntaxgroup":[{"title":"","syntax":["xyLocal = world2local(map,xy)"]}],"inputgroup":[{"title":"","inputs":[{"name":"map","purpose":"Map representation","htmlid":"mw_f3598d1b-8c91-4b72-833a-da17e3ed667f","value":["binaryOccupancyMap object"]},{"name":"xy","purpose":"World coordinates","htmlid":"mw_22b4240d-59eb-4a66-a9c9-6fbdd85e94cc","value":["n-by-2 vertical array"]}]}],"outputs":[{"name":"xyLocal","purpose":"Local coordinates","htmlid":"mw_bc2c9df6-abc8-463e-99f8-7f98d4e8c059","value":["n-by-2 vertical array"]}],"examples":[{"url":"binaryoccupancymap.world2local.html#mw_9b88b091-524c-4e74-9832-52b553e31f28","open_command":"openExample('nav_robotics\/ConvertWorldCoordinatesInBinaryOccuMapToLocalCoordinatesExample')","title":"Convert World Coordinates in Binary Occupancy Map to Local Coordinates"}],"seealso":[{"url":"binaryoccupancymap.html","name":"binaryOccupancyMap"},{"url":"binaryoccupancymap.grid2world.html","name":"grid2world"},{"url":"binaryoccupancymap.local2world.html","name":"local2world"}]},{"href":"ref\/boustrophedonoptions.html","refentity":[{"type":"object","name":"boustrophedonOptions"},{"type":"function","name":"boustrophedonOptions","fcntype":"constructor"}],"refpurpose":"Options for boustrophedon polygon decomposition algorithm","introduced":"R2025a","description":"The boustrophedonOptions object defines the behavior of polygon decomposition using the boustrophedon algorithm and enables you to generate a connectivity graph of polygon cells post-decomposition.","syntaxgroup":[{"title":"","syntax":["options = boustrophedonOptions","options = boustrophedonOptions(PropertyName=Value)"]}],"classpropertygroup":[{"classproperty":[{"name":"ReturnConnectivity","purpose":"Decomposition generates and returns connectivity graph","htmlid":"mw_57716b10-2e98-49d1-b6c4-6a12589dbea5","value":["true or 1","false or 0"],"defaultvalue":"true or 1"},{"name":"ReconnectionMethod","purpose":"Method to use to connect unconnected polygon clusters","htmlid":"mw_f71ad9d6-9b84-4bfd-8521-c5da3feb6292","value":["\"none\"","\"nearest\"","\"all\""],"defaultvalue":"\"none\""},{"name":"ConnectedCostFcn","purpose":"Function for computing distance between sets of neighboring polygons","htmlid":"mw_d8fb4b75-03c7-46f0-bca0-1e299dfff8e7","value":["\"boustrophedonOptions.defaultConnectedCostFcn\"","function name"],"defaultvalue":"\"boustrophedonOptions.defaultConnectedCostFcn\""},{"name":"DisconnectedCostFcn","purpose":"Function for computing distance between nonneighboring polygons","htmlid":"mw_50c9a63d-bdb9-4aa8-a43d-c701bfd8f396","value":["\"boustrophedonOptions.defaultDisconnectedCostFcn\"","function name"],"defaultvalue":"\"boustrophedonOptions.defaultDisconnectedCostFcn\""},{"name":"UserData","purpose":"Data for cost functions","htmlid":"mw_a51b871c-40ea-4d94-a611-6998ded29cb5","value":["struct([])","structure"],"defaultvalue":"struct([])"}]}],"examples":[{"url":"boustrophedonoptions.html#mw_49c5adc9-b0db-44a7-bf61-18ad06f04b0a","open_command":"openExample('nav\/SpecifyBoustrophedonOptionsForPolygonDecompositionExample')","title":"Specify Options for Polygon Decomposition"},{"url":"boustrophedonoptions.html#mw_6bb273bb-fc59-4aa3-ba02-55029d543abf","open_command":"openExample('nav\/DefineCustomConnectedCostFunctionAndUserDataExample')","title":"Define Custom Connected Cost Function and User Data"},{"url":"boustrophedonoptions.html#mw_f8fa1567-85db-4ea0-8da4-6feb519941e3","open_command":"openExample('nav\/DefineDisconnectedCostFunctionExample')","title":"Define Disconnected Cost Function"}],"seealso":[{"url":"polygondecomposition.html","name":"polygonDecomposition"},{"url":"navgraph.html","name":"navGraph"}]},{"href":"ref\/bpsencoder.encode.html","refentity":[{"type":"function","name":"encode","fcntype":"instancemethod"},{"type":"method","name":"bpsEncoder.encode","fcntype":"instancemethod"}],"refpurpose":"Encode map environment using basis point set encoder","introduced":"R2024a","description":"This MATLAB function encodes a 2D or 3D environment using basis point sets computed by the bpsEncoder object.","syntaxgroup":[{"title":"","syntax":["encodedValues = encode(bpsObj,environment)","[encodedValues,nearestPoints] = encode(bpsObj,environment)"]}],"inputgroup":[{"title":"","inputs":[{"name":"bpsObj","purpose":"Basis point set encoder","htmlid":"mw_2c058785-0f25-420b-a800-9fbf5d880bf3","value":["bpsEncoder object"]},{"name":"environment","purpose":"Input environment","htmlid":"mw_a5fd5aa1-2cd9-4f66-853f-74f2ae95da64","value":["occupancyMap object","binaryOccupancyMap object","meshtsdf object","4-by-M matrix"]}]}],"outputs":[{"name":"encodedValues","purpose":"Distance from basis points to nearest object points","htmlid":"mw_460c4947-c256-44df-8e52-ea33bdb13d27","value":["N-by-1 vector"]},{"name":"nearestPoints","purpose":"Nearest object points","htmlid":"mw_cb2e8150-ac1e-4faa-b846-088a8a77d9cc","value":["N-by-1 vector"]}],"examples":[{"url":"bpsencoder.encode.html#mw_7a719c29-37a2-4d73-a005-542ae7f7cd43","open_command":"openExample('nav_robotics\/Encode2DMapEnvironmentUsingBasisPointSetsExample')","title":"Encode 2D Map Environment Using Basis Point Sets"},{"url":"bpsencoder.encode.html#mw_51df7c23-2225-44a5-8f50-23e241af6c5e","open_command":"openExample('nav_robotics\/EncodeTSDFMapsUsingBasisPointSetsExample')","title":"Encode TSDF Maps Using Basis Point Sets"},{"url":"bpsencoder.encode.html#mw_cb036358-1641-4f95-a828-a8dda46a8e22","open_command":"openExample('nav_robotics\/EncodeEnvironmentContainingSphericalObstaclesExample')","title":"Encode Environment Containing Spherical Obstacles"}],"seealso":[{"url":"bpsencoder.html","name":"bpsEncoder"},{"url":"mpnetse2.html","name":"mpnetSE2"},{"url":"mpnetpreparedata.html","name":"mpnetPrepareData"},{"url":"..\/..\/robotics\/ref\/dlchomp.html","name":"dlCHOMP"}]},{"href":"ref\/bpsencoder.html","refentity":[{"type":"object","name":"bpsEncoder"},{"type":"function","name":"bpsEncoder","fcntype":"constructor"}],"refpurpose":"Basis point set encoder","introduced":"R2024a","description":"The bpsEncoder object creates an encoder that uses a set of basis points to derive a compact and fixed representation of map environments for motion planning.","syntaxgroup":[{"title":"","syntax":["bpsObj = bpsEncoder","bpsObj = bpsEncoder(arrangement)","bpsObj = bpsEncoder(arrangement,encodingSize)","bpsObj = bpsEncoder(___,Name=Value)"]}],"classpropertygroup":[{"classproperty":[{"name":"Arrangement","readonly":true,"purpose":"Basis point set arrangement","htmlid":"mw_8a155617-2f4f-4368-b009-696b067ee675","value":["\"uniform-ball-3d\"","\"uniform-ball\"","\"rectangular-grid\"","\"rectangular-grid-3d\""],"defaultvalue":"\"uniform-ball-3d\""},{"name":"EncodingSize","readonly":true,"purpose":"Number of basis points to use for encoding","htmlid":"mw_58101503-2b1e-49d1-86b5-b3dfb59ea354","value":["positive integer scalar","1-by-2 vector","1-by-3 vector"]},{"name":"Center","readonly":true,"purpose":"Center of BPS arrangement","htmlid":"mw_e2eef4e5-382f-4f99-bc1e-c436eabaf1e4","value":["2-element vector","3-element vector"]},{"name":"Radius","readonly":true,"purpose":"Radius of uniform ball","htmlid":"mw_4b3eaf5e-1c44-43be-bab3-3789bfd3a6a6","value":["1","positive scalar"],"defaultvalue":"1"},{"name":"Dimensions","readonly":true,"purpose":"Dimensions of the rectangular grid","htmlid":"mw_40214171-0e48-4a0a-941f-2011e5a19e6a","value":["2-element vector","3-element vector"]},{"name":"Points","readonly":true,"purpose":"Basis points for encoding the map","htmlid":"mw_b73ac3dc-c1e0-4da6-a1be-e1280764cd15","value":["N-by-2 matrix","N-by-3 matrix"]}]}],"objectfunctions":[{"title":"","functions":[{"name":"encode","url":"bpsencoder.encode.html","description":"Encode map environment using basis point set encoder"}]}],"examples":[{"url":"bpsencoder.html#mw_6be708e9-e91d-48bc-87ab-e54d7eec38f2","open_command":"openExample('nav_robotics\/Encode2DMapEnvironmentUsingBasisPointSetsExample')","title":"Encode 2D Map Environment Using Basis Point Sets"}],"seealso":[{"url":"mpnetse2.html","name":"mpnetSE2"},{"url":"mpnetpreparedata.html","name":"mpnetPrepareData"},{"url":"..\/..\/robotics\/ref\/dlchomp.html","name":"dlCHOMP"}]},{"href":"ref\/buildmap.html","refentity":[{"type":"function","name":"buildMap","fcntype":"simple"}],"refpurpose":"Build occupancy map from lidar scans","introduced":"R2019b","description":"This MATLAB function creates an occupancyMap map by inserting lidar scans at the given poses.","syntaxgroup":[{"title":"","syntax":["map = buildMap(scans,poses,mapResolution,maxRange)"]}],"inputgroup":[{"title":"","inputs":[{"name":"scans","purpose":"Lidar scans","htmlid":"d126e2084","value":["cell array of lidarScan objects"]},{"name":"poses","purpose":"Poses of lidar scans","htmlid":"d126e2108","value":["n-by-3 matrix"]},{"name":"mapResolution","purpose":"Resolution of occupancy grid","htmlid":"d126e2134","value":["positive integer"]},{"name":"maxRange","purpose":"Maximum range of lidar sensor","htmlid":"d126e2155","value":["positive scalar"]}]},{"namevaluepairs":[{"title":"","inputs":[{"name":"MapWidth","purpose":"Width of occupancy grid","htmlid":"d126e2198","value":["positive scalar"]}]},{"title":"","inputs":[{"name":"MapHeight","purpose":"Height of occupancy grid","htmlid":"d126e2220","value":["positive scalar"]}]}]}],"outputs":[{"name":"map","purpose":"Occupancy Map","htmlid":"d126e2244","value":["occupancyMap object"]}],"examples":[{"url":"buildmap.html#mw_1c338311-dec9-4008-93dd-d5bca65ffdcf","open_command":"openExample('nav\/BuildOccupancyMapFromLidarScansAndPosesExample')","title":"Build Occupancy Map from Lidar Scans and Poses"},{"url":"buildmap.html#d126e2012","open_command":"openExample('nav\/PerformSLAMUsingLidarScansExample')","title":"Perform SLAM Using Lidar Scans"}],"seealso":[{"url":"matchscans.html","name":"matchScans"},{"url":"matchscansgrid.html","name":"matchScansGrid"},{"url":"lidarscan.html","name":"lidarScan"},{"url":"lidarscan.transformscan.html","name":"transformScan"},{"url":"lidarslam.html","name":"lidarSLAM"},{"url":"occupancymap.html","name":"occupancyMap"}]},{"href":"ref\/cameraimucalibrationoptions.html","refentity":[{"type":"object","name":"cameraIMUCalibrationOptions"},{"type":"function","name":"cameraIMUCalibrationOptions","fcntype":"constructor"}],"refpurpose":"Options for calibrating camera and IMU","introduced":"R2024a","description":"The cameraIMUCalibrationOptions object stores options for calibrating a transformation between a camera reference frame to an IMU reference frame for use in the estimateCameraIMUTransform function.","syntaxgroup":[{"title":"","syntax":["options = cameraIMUCalibrationOptions","options = cameraIMUCalibrationOptions(Name=Value)"]}],"classpropertygroup":[{"classproperty":[{"name":"UndistortPoints","purpose":"Undistort image points before calibration","htmlid":"mw_a2d87608-8cee-43c4-998c-cf2bfd435aeb","value":["1 or true","0 or false"],"defaultvalue":"1 or true"},{"name":"InitialTransform","purpose":"Initial transformation from camera frame to the IMU frame","htmlid":"mw_66e2092f-bdb2-4998-9d39-62766fdc1f95","value":["se3()","se3 object","rigidtform3d object"]},{"name":"SolverOptions","purpose":"Solver options for calibration optimization","htmlid":"mw_a29fb099-a1d5-4468-a0ba-57e417500f15","value":["factorGraphSolverOptions()","factorGraphSolverOptions object"],"defaultvalue":"factorGraphSolverOptions()"},{"name":"CameraPoses","purpose":"Camera poses","htmlid":"mw_9cc25d74-008b-4794-8db5-e6b5e82b2ffb","value":["[]","N-by-7 matrix","N-element array of se3 objects or rigidtform3d objects"],"defaultvalue":"[]"},{"name":"CameraInformation","purpose":"Camera information","htmlid":"mw_121cef96-358d-410d-97af-239dca5f3f61","value":["eye(2)","2-by-2 matrix"],"defaultvalue":"eye(2)"},{"name":"ImageTime","purpose":"Image time stamps","htmlid":"mw_d972a4c0-6adb-4287-a58b-bbc8e8541920","value":["datetime.empty()","datetime object"]},{"name":"ImageSampleRate","purpose":"Image sample rate of camera","htmlid":"mw_fb36138f-b1e5-4819-924b-841b8c61759e","value":["[]","positive integer"]},{"name":"ShowProgress","purpose":"Visualize progress in figure","htmlid":"mw_f5db9ffd-d1c7-49a6-820e-5b76c74e56bc","value":["\"all\"","\"undistortion\"","\"camera-poses\"","\"none\""],"defaultvalue":"\"all\""}]}],"seealso":[{"url":"estimatecameraimutransform.html","name":"estimateCameraIMUTransform"},{"url":"cameraimuparameters.html","name":"cameraIMUParameters"}]},{"href":"ref\/cameraimuparameters.html","refentity":[{"type":"object","name":"cameraIMUParameters"},{"type":"function","name":"cameraIMUParameters","fcntype":"constructor"}],"refpurpose":"Object for storing estimated camera-to-IMU parameters","introduced":"R2024a","description":"The cameraIMUParameters object stores the camera-to-IMU parameter estimations from the calibration optimization executed by the estimateCameraIMUTransform function.","syntaxgroup":[{"title":"","syntax":["[tform,camIMUParams] = estimateCameraIMUTransform(___)"]}],"classpropertygroup":[{"classproperty":[{"name":"Transform","readonly":true,"purpose":"SE(3) transformation from camera to IMU","htmlid":"mw_9d753c26-36e4-41da-bdd1-276202dbc49b","value":["se3 object"]},{"name":"ReprojectionErrors","readonly":true,"purpose":"Absolute difference between projected landmark points and image point observations in each frame","htmlid":"mw_dcf9a53b-a19e-4e0d-bb42-71257b8a7139","value":["M-by-2-by-N array of doubles"]},{"name":"TranslationErrors","readonly":true,"purpose":"Error in the IMU translation prediction between consecutive camera frames after calibration","htmlid":"mw_b3998bb9-e7ff-4cac-b679-79006c1d7bf3","value":["(N-1)-by-3 numeric array"]},{"name":"RotationErrors","readonly":true,"purpose":"Error in IMU rotation prediction between successive camera poses after calibration","htmlid":"mw_9b9e9417-7a9a-47f8-a17d-c141e05517e9","value":["(N-1)-by-3 numeric array"]},{"name":"CameraPoses","readonly":true,"purpose":"Camera pose estimates from calibration","htmlid":"mw_d57c3396-f785-40cd-8cd5-9c414cae2b46","value":["N-element array of se3 objects"]},{"name":"ImagesUsed","readonly":true,"purpose":"Indices of images used for calibration","htmlid":"mw_270f3649-b675-46f1-a2a2-3a650b7173a9","value":["M-by-1 array of positive integers"]},{"name":"GravityRotation","readonly":true,"purpose":"Gravity rotation","htmlid":"mw_5e87638c-c13d-4c0a-851a-5bb9b5f87328","value":["se3 object"]},{"name":"AccelerometerBias","readonly":true,"purpose":"Estimated accelerometer bias values at image sampling times","htmlid":"mw_fedacecc-bcad-45cd-81f7-7bf6a3b65320","value":["M-by-3 matrix"]},{"name":"GyroscopeBias","readonly":true,"purpose":"Estimated gyroscope bias values at sampling times","htmlid":"mw_9a9abbd4-3860-457c-9942-b7d22e16a135","value":["M-by-3 matrix"]},{"name":"Velocity","readonly":true,"purpose":"IMU velocities","htmlid":"mw_18f07a8e-e072-4f06-b85d-04a399687cca","value":["M-by-3 matrix"]},{"name":"SolutionInfo","readonly":true,"purpose":"Results of calibration optimization","htmlid":"mw_203cb645-c368-4e2e-b819-d066cb6d7f9a","value":["structure"]}]}],"objectfunctions":[{"title":"","functions":[{"name":"showIMUBiasEstimates","url":"cameraimuparameters.showimubiasestimates.html","description":"Visualize IMU accelerometer and gyroscope bias estimates"},{"name":"showIMUPredictionErrors","url":"cameraimuparameters.showimupredictionerrors.html","description":"Visualizes absolute values of IMU prediction errors"},{"name":"showReprojectionErrors","url":"cameraimuparameters.showreprojectionerrors.html","description":"Visualize means reprojection error for images as bar graph"},{"name":"showTransform","url":"showtransform.html","description":"Visualize estimated camera-to-IMU transformation"},{"name":"validate","url":"cameraimuparameters.validate.html","description":"Validate camera-IMU calibration"}]}],"seealso":[{"url":"estimatecameraimutransform.html","name":"estimateCameraIMUTransform"}]},{"href":"ref\/cameraimuparameters.showimubiasestimates.html","refentity":[{"type":"function","name":"showIMUBiasEstimates","fcntype":"instancemethod"},{"type":"method","name":"cameraIMUParameters.showIMUBiasEstimates","fcntype":"instancemethod"}],"refpurpose":"Visualize IMU accelerometer and gyroscope bias estimates","introduced":"R2024a","description":"This MATLAB function visualizes the IMU accelerometer and gyroscope bias estimates in the camera-to-IMU calibration parameters against expected bounds.","syntaxgroup":[{"title":"","syntax":["showIMUBiasEstimates(params)","showIMUBiasEstimates(___,Parent=parent)","ax = showIMUBiasEstimates(___)"]}],"inputgroup":[{"title":"","inputs":[{"name":"params","purpose":"Estimated camera-to-IMU calibration parameters","htmlid":"mw_d62de958-ada9-4180-a233-a4b2b32ec63d_sep_mw_3e23a0f5-2bf5-4156-abf2-6deabb0159f6","value":["cameraIMUParameters object"]},{"name":"parent","purpose":"Parent axes","htmlid":"mw_481c35b7-6517-4e89-abc9-065b0185cf69","value":["Axes object"]}]}],"outputs":[{"name":"ax","purpose":"Axes graphic handle","htmlid":"mw_d62de958-ada9-4180-a233-a4b2b32ec63d_sep_mw_a4370c33-215f-48a2-8a6a-f9980570517c","value":["Axes object"]}],"seealso":[{"url":"estimatecameraimutransform.html","name":"estimateCameraIMUTransform"},{"url":"cameraimuparameters.html","name":"cameraIMUParameters"},{"url":"cameraimuparameters.showimupredictionerrors.html","name":"showIMUPredictionErrors"},{"url":"cameraimuparameters.showreprojectionerrors.html","name":"showReprojectionErrors"},{"url":"showtransform.html","name":"showTransform"}]},{"href":"ref\/cameraimuparameters.showimupredictionerrors.html","refentity":[{"type":"function","name":"showIMUPredictionErrors","fcntype":"instancemethod"},{"type":"method","name":"cameraIMUParameters.showIMUPredictionErrors","fcntype":"instancemethod"}],"refpurpose":"Visualizes absolute values of IMU prediction errors","introduced":"R2024a","description":"This MATLAB function visualizes the absolute values of prediction errors for the camera-IMU calibration parameters.","syntaxgroup":[{"title":"","syntax":["showIMUPredictionErrors(params)","showIMUPredictionErrors(params,Name=Value)","ax = showIMUPredictionErrors(___)"]}],"inputgroup":[{"title":"","inputs":[{"name":"params","purpose":"Estimated camera-to-IMU calibration parameters","htmlid":"mw_8cb597f3-2a27-4f2c-8990-3e6984c44c03_sep_mw_3e23a0f5-2bf5-4156-abf2-6deabb0159f6","value":["cameraIMUParameters object"]}]},{"namevaluepairs":[{"title":"","inputs":[{"name":"Parent","purpose":"Parent axes","htmlid":"mw_b1c52aed-195b-404d-bcbf-c0a927d93919","value":["gca","Axes object"],"defaultvalue":"gca"},{"name":"Mode","purpose":"Prediction error value mode","htmlid":"mw_b917a51a-508a-496d-9757-92e0eebe08a4","value":["\"absolute\"","\"percentage\""],"defaultvalue":"\"absolute\""},{"name":"Threshold","purpose":"Plotted IMU prediction error threshold value","htmlid":"mw_b083b46a-fd09-4e66-b91b-b56ea0365d99","value":["six-element vector","two-element vector"]}]}]}],"outputs":[{"name":"ax","purpose":"Axes graphic handle","htmlid":"mw_8cb597f3-2a27-4f2c-8990-3e6984c44c03_sep_mw_a4370c33-215f-48a2-8a6a-f9980570517c","value":["Axes object"]}],"seealso":[{"url":"estimatecameraimutransform.html","name":"estimateCameraIMUTransform"},{"url":"cameraimuparameters.html","name":"cameraIMUParameters"},{"url":"cameraimuparameters.showimubiasestimates.html","name":"showIMUBiasEstimates"},{"url":"cameraimuparameters.showreprojectionerrors.html","name":"showReprojectionErrors"},{"url":"showtransform.html","name":"showTransform"}]},{"href":"ref\/cameraimuparameters.showreprojectionerrors.html","refentity":[{"type":"function","name":"showReprojectionErrors","fcntype":"instancemethod"},{"type":"method","name":"cameraIMUParameters.showReprojectionErrors","fcntype":"instancemethod"}],"refpurpose":"Visualize means reprojection error for images as bar graph","introduced":"R2024a","description":"This MATLAB function visualizes the mean reprojection error for each calibration image as a bar graph for the camera-IMU calibration parameters.","syntaxgroup":[{"title":"","syntax":["showReprojectionErrors(params)","showReprojectionErrors(params,Name=Value)","ax = showReprojectionErrors(___)"]}],"inputgroup":[{"title":"","inputs":[{"name":"params","purpose":"Estimated camera-to-IMU calibration parameters","htmlid":"mw_8ffd9a9f-7090-41a8-870f-04901217f198_sep_mw_3e23a0f5-2bf5-4156-abf2-6deabb0159f6","value":["cameraIMUParameters object"]}]},{"namevaluepairs":[{"title":"","inputs":[{"name":"Parent","purpose":"Parent axes","htmlid":"mw_c8f73e02-0262-4eda-9afe-b1726c4a1844","value":["gca","Axes object"],"defaultvalue":"gca"},{"name":"Threshold","purpose":"Plotted reprojection error threshold value","htmlid":"mw_746f2551-52fc-4686-b83f-0a8e50ea2423","value":["nonnegative numeric scalar"]}]}]}],"outputs":[{"name":"ax","purpose":"Axes graphic handle","htmlid":"mw_8ffd9a9f-7090-41a8-870f-04901217f198_sep_mw_a4370c33-215f-48a2-8a6a-f9980570517c","value":["Axes object"]}],"seealso":[{"url":"estimatecameraimutransform.html","name":"estimateCameraIMUTransform"},{"url":"cameraimuparameters.html","name":"cameraIMUParameters"},{"url":"cameraimuparameters.showimubiasestimates.html","name":"showIMUBiasEstimates"},{"url":"cameraimuparameters.showimupredictionerrors.html","name":"showIMUPredictionErrors"},{"url":"showtransform.html","name":"showTransform"}]},{"href":"ref\/cameraimuparameters.validate.html","refentity":[{"type":"function","name":"validate","fcntype":"instancemethod"},{"type":"method","name":"cameraIMUParameters.validate","fcntype":"instancemethod"}],"refpurpose":"Validate camera-IMU calibration","introduced":"R2024a","description":"This MATLAB function validates the camera-IMU calibration parameters by checking that the pattern point re-projection errors are below the specified reprojection threshold and that the IMU prediction errors are below the specified prediction threshold.","syntaxgroup":[{"title":"","syntax":["[status,info] = validate(params,reprojectionThreshold,predictionThreshold)","___ = validate(___,Name=Value)"]}],"inputgroup":[{"title":"","inputs":[{"name":"params","purpose":"Estimated camera-to-IMU calibration parameters","htmlid":"mw_f947c59c-33cf-48e8-b5b3-6c2ba75ccdf2_sep_mw_3e23a0f5-2bf5-4156-abf2-6deabb0159f6","value":["cameraIMUParameters object"]},{"name":"reprojectionThreshold","purpose":"Threshold for pattern point reprojection errors","htmlid":"mw_005ee4af-d098-4213-b9a7-41bcc05ad389","value":["positive numeric scalar"]},{"name":"predictionThreshold","purpose":"Threshold for IMU prediction errors","htmlid":"mw_e12ed2eb-0e49-4668-8487-5cfb7b2d1132","value":["positive numeric scalar","M-element vector of positive numeric scalars"]}]},{"namevaluepairs":[{"title":"","inputs":[{"name":"ReprojectionErrorMode","purpose":"Reprojection error mode","htmlid":"mw_46c63398-5484-4dc8-9522-211bfa62bdb1","value":["\"mean\"","\"all\""],"defaultvalue":"\"mean\""},{"name":"IMUPredictionErrorMode","purpose":"IMU prediction error mode","htmlid":"mw_e7dbd05d-35ef-4094-ba39-8b1475df534e","value":["\"percentage\"","\"absolute\""],"defaultvalue":"\"percentage\""}]}]}],"outputs":[{"name":"status","purpose":"Calibration validation status","htmlid":"mw_2600bf21-e9cc-451d-a75a-6ff11cae5f48","value":["integer in the range [0, 6]"]},{"name":"info","purpose":"Parameter validation information","htmlid":"mw_7220cd87-d1c2-474c-9fa0-3394292d7fb9","value":["structure"]}],"seealso":[{"url":"cameraimuparameters.html","name":"cameraIMUParameters"},{"url":"estimatecameraimutransform.html","name":"estimateCameraIMUTransform"}]},{"href":"ref\/cart2hom.html","refentity":[{"type":"function","name":"cart2hom","fcntype":"simple"}],"refpurpose":"Convert Cartesian coordinates to homogeneous coordinates","introduced":"R2015a","description":"This MATLAB function converts a set of points in Cartesian coordinates to homogeneous coordinates.","syntaxgroup":[{"title":"","syntax":["hom = cart2hom(cart)"]}],"inputgroup":[{"title":"","inputs":[{"name":"cart","purpose":"Cartesian coordinates","htmlid":"buog6gz-cart","value":["n-by-k matrix"]}]}],"outputs":[{"name":"hom","purpose":"Homogeneous points","htmlid":"buog6gz-hom","value":["n-by-(k+1) matrix"]}],"examples":[{"url":"cart2hom.html#buog6or-2","open_command":"openExample('nav_robotics\/Convert3DCartesianPointsToHomogeneousCoordinatesExample')","title":"Convert 3-D Cartesian Points to Homogeneous Coordinates"}],"seealso":[{"url":"hom2cart.html","name":"hom2cart"}]},{"href":"ref\/checkmapcollision.html","refentity":[{"type":"function","name":"checkMapCollision","fcntype":"simple"}],"refpurpose":"Check for collision between 3-D occupancy map and geometry","introduced":"R2022b","description":"Check for collision between a 3-D occupancy map and a convex collision geometry.","syntaxgroup":[{"title":"","syntax":["collisionStatus = checkMapCollision(map,geometry)","[collisionStatus,details] = checkMapCollision(map,geometry,options)"]}],"inputgroup":[{"title":"","inputs":[{"name":"map","purpose":"3-D occupancy map","htmlid":"mw_d4584d98-1099-4293-8ab8-ccb88bb069fe","value":["occupancyMap3D object"]},{"name":"geometry","purpose":"Collision geometry","htmlid":"mw_2f2754be-96db-4d39-aed2-a2d839153786","value":["collision geometry object"]},{"name":"options","purpose":"Collision-checking options","htmlid":"mw_1325d91a-6480-445d-b21b-90a4fbeea2a7","value":["occupancyMap3DCollisionOptions object"]}]}],"outputs":[{"name":"collisionStatus","purpose":"Collision status","htmlid":"mw_f6daf737-2a27-4ba8-8fff-b4f7623dca2d","value":["0","1"]},{"name":"details","purpose":"Collision details","htmlid":"mw_b8432f79-0b32-4d99-bd2b-631c9d659726","value":["structure"]}],"examples":[{"url":"checkmapcollision.html#mw_e72d6d94-b70e-45ea-bdc7-c3b6d535317c","open_command":"openExample('nav\/CheckCollisionBetween3DMapAndCollisionGeometriesExample')","title":"Check Collision Between 3-D Map and Collision Geometries"}],"seealso":[{"url":"occupancymap3d.html","name":"occupancyMap3D"},{"url":"occupancymap3dcollisionoptions.html","name":"occupancyMap3DCollisionOptions"}]},{"href":"ref\/collisionbox.checkcollision.html","refentity":[{"type":"function","name":"checkCollision","fcntype":"instancemethod"},{"type":"method","name":"collisionBox.checkCollision","fcntype":"instancemethod"},{"type":"method","name":"collisionCapsule.checkCollision","fcntype":"instancemethod"},{"type":"method","name":"collisionCylinder.checkCollision","fcntype":"instancemethod"},{"type":"method","name":"collisionMesh.checkCollision","fcntype":"instancemethod"},{"type":"method","name":"collisionSphere.checkCollision","fcntype":"instancemethod"}],"refpurpose":"Check if two geometries are in collision","introduced":"R2019b","description":"This MATLAB function returns the collision status between the two convex geometries geom1 and geom2.","syntaxgroup":[{"title":"","syntax":["collisionStatus = checkCollision(geom1,geom2)","[collisionStatus,sepdist,witnesspts] = checkCollision(geom1,geom2)"]}],"inputgroup":[{"title":"","inputs":[{"name":"geom1","purpose":"First collision geometry","htmlid":"mw_36dc8d70-16ac-43c8-a016-51de38d22612","value":["collision geometry object"]},{"name":"geom2","purpose":"Second collision geometry","htmlid":"mw_8fb92da0-22c2-466e-9f5f-b03a2bbb66c7","value":["collision geometry object"]}]}],"outputs":[{"name":"collisionStatus","purpose":"Collision status","htmlid":"mw_650615a6-673d-42c6-9ece-e12092bbf872","value":["0","1"]},{"name":"sepdist","purpose":"Minimal distance between collision geometries","htmlid":"mw_d30a4af2-24f1-42b9-a7dd-90e18e8c286b","value":["real number"]},{"name":"witnesspts","purpose":"Witness points on each geometry","htmlid":"mw_4edbbc38-d51a-4356-94c6-68be8bb54566","value":["3-by-2 matrix"]}],"examples":[{"url":"collisionbox.checkcollision.html#mw_016ea00d-1e74-4439-8f8e-186503257b2c","open_command":"openExample('nav_robotics\/CheckGeometryCollisionStatusExample')","title":"Check Geometry Collision Status"},{"url":"collisionbox.checkcollision.html#mw_4bb13623-b7d1-4498-8ace-efe0065421cc","open_command":"openExample('nav_robotics\/CheckCollisionBetweenCollisionCapsulesExample')","title":"Check Collision Between Collision Capsules"}],"seealso":[{"url":"collisionbox.html","name":"collisionBox"},{"url":"collisioncapsule.html","name":"collisionCapsule"},{"url":"collisioncylinder.html","name":"collisionCylinder"},{"url":"collisionmesh.html","name":"collisionMesh"},{"url":"collisionsphere.html","name":"collisionSphere"}]},{"href":"ref\/collisionbox.converttocollisionmesh.html","refentity":[{"type":"function","name":"convertToCollisionMesh","fcntype":"instancemethod"},{"type":"method","name":"collisionBox.convertToCollisionMesh","fcntype":"instancemethod"},{"type":"method","name":"collisionCylinder.convertToCollisionMesh","fcntype":"instancemethod"},{"type":"method","name":"collisionSphere.convertToCollisionMesh","fcntype":"instancemethod"},{"type":"method","name":"collisionCapsule.convertToCollisionMesh","fcntype":"instancemethod"}],"refpurpose":"Convert collision primitive geometry into collision mesh geometry","introduced":"R2022a","description":"This MATLAB function converts a collision primitive geometry, collisionObj, to a convex mesh collision geometry, collisionMesh, which retains the pose of collisionObj.","syntaxgroup":[{"title":"","syntax":["collisionMesh = convertToCollisionMesh(collisionObj)"]}],"inputgroup":[{"title":"","inputs":[{"name":"collisionObj","purpose":"Collision geometry object","htmlid":"mw_d01f9751-c636-4008-aea9-75df5005abbc","value":["collisionBox object","collisionSphere object","collisionCylinder object","collisionCapsule object"]}]}],"outputs":[{"name":"collisionMesh","purpose":"Collision mesh","htmlid":"mw_4cee15ef-5c8f-492b-8b40-0d94a8949936","value":["collisionMesh object"]}],"examples":[{"url":"collisionbox.converttocollisionmesh.html#mw_8ed0befc-47a3-4724-bf64-a83df26eaa72","open_command":"openExample('nav_robotics\/ConvertCollisionGeometryToCollisionMeshExample')","title":"Convert Collision Geometry to Collision Mesh"}],"seealso":[{"url":"collisionmesh.html","name":"collisionMesh"},{"url":"collisionbox.html","name":"collisionBox"},{"url":"collisionsphere.html","name":"collisionSphere"},{"url":"collisioncylinder.html","name":"collisionCylinder"},{"url":"collisioncapsule.html","name":"collisionCapsule"}]},{"href":"ref\/collisionbox.fitcollisioncapsule.html","refentity":[{"type":"function","name":"fitCollisionCapsule","fcntype":"instancemethod"},{"type":"method","name":"collisionBox.fitCollisionCapsule","fcntype":"instancemethod"},{"type":"method","name":"collisionCylinder.fitCollisionCapsule","fcntype":"instancemethod"},{"type":"method","name":"collisionMesh.fitCollisionCapsule","fcntype":"instancemethod"},{"type":"method","name":"collisionSphere.fitCollisionCapsule","fcntype":"instancemethod"}],"refpurpose":"Fit collision capsule around collision geometry","introduced":"R2022b","description":"This MATLAB function fits a collision capsule collCapsule around a collision geometry geom.","syntaxgroup":[{"title":"","syntax":["[collCapsule,fitInfo] = fitCollisionCapsule(geom)"]}],"inputgroup":[{"title":"","inputs":[{"name":"geom","purpose":"Collision geometry","htmlid":"mw_228fbddb-6b27-4d46-b4b5-10c7f512933c","value":["collisionBox object","collisionCylinder object","collisionSphere object","collisionMesh object"]}]}],"outputs":[{"name":"collCapsule","purpose":"Collision capsule of the collision geometry","htmlid":"mw_3dafad4f-f8a4-44ea-a54f-fc223edfd6b0","value":["collisionCapsule object"]},{"name":"fitInfo","purpose":"Fit information of collision capsule","htmlid":"mw_a55c38f9-3502-4c26-949c-d6c7646386e9","value":["structure"]}],"examples":[{"url":"collisionbox.fitcollisioncapsule.html#mw_e094888d-45c7-4101-9813-b1bfbcc7f770","open_command":"openExample('nav_robotics\/FitCollisionCapsuleAroundCollisionBoxExample')","title":"Fit Collision Capsule Around Collision Box"}],"seealso":[{"url":"collisionbox.html","name":"collisionBox"},{"url":"collisionsphere.html","name":"collisionSphere"},{"url":"collisioncylinder.html","name":"collisionCylinder"},{"url":"collisionmesh.html","name":"collisionMesh"},{"url":"collisioncapsule.html","name":"collisionCapsule"},{"url":"collisionbox.converttocollisionmesh.html","name":"convertToCollisionMesh"},{"url":"collisionbox.show.html","name":"show"},{"url":"collisionbox.checkcollision.html","name":"checkCollision"},{"url":"collisioncapsule.genspheres.html","name":"genspheres"}]},{"href":"ref\/collisionbox.html","refentity":[{"type":"object","name":"collisionBox"},{"type":"function","name":"collisionBox","fcntype":"constructor"}],"refpurpose":"Create box collision geometry","introduced":"R2019b","description":"Use collisionBox to create a box collision geometry that is axis-aligned with its body-fixed frame and has the origin of the body-fixed frame at the center of the box.","syntaxgroup":[{"title":"","syntax":["BOX = collisionBox(X,Y,Z)","BOX = collisionBox(___,Pose=pose)"]}],"classpropertygroup":[{"classproperty":[{"name":"X","purpose":"Side length of box geometry","htmlid":"mw_52211853-3ace-47b5-8df4-3d385af85960","value":["positive scalar"]},{"name":"Y","purpose":"Side length of box geometry","htmlid":"mw_f4039651-1093-42e3-9d12-143756117625","value":["positive scalar"]},{"name":"Z","purpose":"Side length of box geometry","htmlid":"mw_a9ddc116-8b10-4c97-9469-20c8de32f40e","value":["positive scalar"]},{"name":"Pose","purpose":"Pose","htmlid":"mw_411d3056-25fd-44dc-ac40-5a5980207e1e_sep_mw_d873f8ac-d0e3-4d46-a765-59b3cd44901f","value":["eye(4)","real-valued 4-by-4 matrix","se3 object"],"defaultvalue":"eye(4)"}]}],"objectfunctions":[{"title":"","functions":[{"name":"checkCollision","url":"collisionbox.checkcollision.html","description":"Check if two geometries are in collision"},{"name":"convertToCollisionMesh","url":"collisionbox.converttocollisionmesh.html","description":"Convert collision primitive geometry into collision mesh geometry"},{"name":"fitCollisionCapsule","url":"collisionbox.fitcollisioncapsule.html","description":"Fit collision capsule around collision geometry"},{"name":"show","url":"collisionbox.show.html","description":"Show collision geometry"}]}],"examples":[{"url":"collisionbox.html#mw_6ccc61c1-f136-422c-a061-0d8517c9ce66","open_command":"openExample('nav_robotics\/CreateAndVisualizeBoxCollisionGeometryExample')","title":"Create and Visualize Box Collision Geometry"}],"seealso":[{"url":"collisioncylinder.html","name":"collisionCylinder"},{"url":"collisionmesh.html","name":"collisionMesh"},{"url":"collisionsphere.html","name":"collisionSphere"},{"url":"collisioncapsule.html","name":"collisionCapsule"},{"url":"collisionbox.checkcollision.html","name":"checkCollision"},{"url":"collisionbox.fitcollisioncapsule.html","name":"fitCollisionCapsule"},{"url":"..\/..\/robotics\/ref\/showcollisionarray.html","name":"showCollisionArray"}]},{"href":"ref\/collisionbox.show.html","refentity":[{"type":"function","name":"show","fcntype":"instancemethod"},{"type":"method","name":"collisionBox.show","fcntype":"instancemethod"},{"type":"method","name":"collisionCylinder.show","fcntype":"instancemethod"},{"type":"method","name":"collisionMesh.show","fcntype":"instancemethod"},{"type":"method","name":"collisionSphere.show","fcntype":"instancemethod"},{"type":"method","name":"collisionCapsule.show","fcntype":"instancemethod"}],"refpurpose":"Show collision geometry","introduced":"R2019b","description":"This MATLAB function shows the collision geometry in the current figure at its current pose.","syntaxgroup":[{"title":"","syntax":["show(geom)","show(geom,\"Parent\",AX)"]},{"title":"","syntax":["ax = show(___)","[ax,patchobj] = show(___)"]}],"inputgroup":[{"title":"","inputs":[{"name":"geom","purpose":"Collision geometry","htmlid":"mw_fd7c0000-d7cf-4a41-a496-95be6bb2edc7","value":["collisionBox object","collisionCapsule object","collisionCylinder object","collisionMesh object","collisionSphere object"]},{"name":"AX","purpose":"Axes on which to plot collision geometry","htmlid":"mw_eb738416-5a54-4ed7-a4f4-2c3ea081333f","value":["Axes object"]}]}],"outputs":[{"name":"ax","purpose":"Axes displaying collision geometry","htmlid":"mw_63466572-4683-48de-b757-449b59c7a662","value":["Axes object"]},{"name":"patchobj","purpose":"Graphic object","htmlid":"mw_f0ba80bf-55dd-438b-afb8-909b715aec87","value":["Patch object"]}],"examples":[{"url":"collisionbox.show.html#mw_85f1865f-63e5-4a31-85d3-3de23ef220b7","open_command":"openExample('nav_robotics\/ShowCollisionGeometryExample')","title":"Show Collision Geometry"}],"seealso":[{"url":"collisionbox.html","name":"collisionBox"},{"url":"collisioncylinder.html","name":"collisionCylinder"},{"url":"collisionmesh.html","name":"collisionMesh"},{"url":"collisionsphere.html","name":"collisionSphere"},{"url":"collisioncapsule.html","name":"collisionCapsule"},{"url":"showcollisionarray.html","name":"showCollisionArray"}]},{"href":"ref\/collisioncapsule.genspheres.html","refentity":[{"type":"function","name":"genspheres","fcntype":"instancemethod"},{"type":"method","name":"collisionCapsule.genspheres","fcntype":"instancemethod"}],"refpurpose":"Generate spheres along central line segment of capsule","introduced":"R2022b","description":"This MATLAB function generates spheres along the central line segment of the collision capsule capsule at the specified normalized positions ratio of the line segment.","syntaxgroup":[{"title":"","syntax":["spheres = genspheres(capsule,ratio)"]}],"inputgroup":[{"title":"","inputs":[{"name":"capsule","purpose":"Collision capsule","htmlid":"mw_8f0c1333-c1fc-47e1-88d3-2198218e3fd0","value":["collisionCapsule object"]},{"name":"ratio","purpose":"Normalized positions along central line segment of collision capsule","htmlid":"mw_ba0378f7-a0ae-4eda-bc1e-81bd8f8d458a","value":["N-element row vector of values in range [0, 1]"]}]}],"outputs":[{"name":"spheres","purpose":"Collision spheres","htmlid":"mw_159f4575-05a8-4df5-ad8e-9405d0dbc61f","value":["N-element cell array"]}],"examples":[{"url":"collisioncapsule.genspheres.html#mw_0f6d6f28-c390-4bd6-bba7-f00987ded167","open_command":"openExample('nav_robotics\/GenerateCollisionSpheresInsideCollisionCapsuleExample')","title":"Generate Collision Spheres Inside Collision Capsule"}],"seealso":[{"url":"collisioncapsule.html","name":"collisionCapsule"},{"url":"collisionbox.converttocollisionmesh.html","name":"convertToCollisionMesh"},{"url":"collisionbox.show.html","name":"show"},{"url":"collisionbox.checkcollision.html","name":"checkCollision"}]},{"href":"ref\/collisioncapsule.html","refentity":[{"type":"object","name":"collisionCapsule"},{"type":"function","name":"collisionCapsule","fcntype":"constructor"}],"refpurpose":"Capsule primitive collision geometry","introduced":"R2022b","description":"The collisionCapsule object is a capsule primitive collision geometry defined by a radius and length, with the central line segment of the capsule aligning with its z-axis and the origin of the body-fixed frame located at the midpoint of the central line segment.","syntaxgroup":[{"title":"","syntax":["CAPS = collisionCapsule(radius,length)","CAPS = collisionCapsule(___,Pose=pose)"]}],"classpropertygroup":[{"classproperty":[{"name":"Radius","purpose":"Radius of spherical ends of capsule","htmlid":"mw_3eb6c664-82e9-47e6-ad64-6676b9554e19","value":["positive scalar"]},{"name":"Length","purpose":"Length of central line segment of capsule","htmlid":"mw_9bca1b38-f01d-4383-8a02-6b347d9d98f7","value":["nonnegative scalar"]},{"name":"Pose","purpose":"Pose of capsule","htmlid":"mw_bc65c105-f83f-403a-a183-89400d0acce7","value":["eye(4)","4-by-4 matrix","se3 object"],"defaultvalue":"eye(4)"}]}],"objectfunctions":[{"title":"","functions":[{"name":"checkCollision","url":"collisionbox.checkcollision.html","description":"Check if two geometries are in collision"},{"name":"genspheres","url":"collisioncapsule.genspheres.html","description":"Generate spheres along central line segment of capsule"},{"name":"convertToCollisionMesh","url":"collisionbox.converttocollisionmesh.html","description":"Convert collision primitive geometry into collision mesh geometry"},{"name":"show","url":"collisionbox.show.html","description":"Show collision geometry"}]}],"examples":[{"url":"collisioncapsule.html#mw_a772cba6-c9c4-46c2-abae-2ad112cd9c23","open_command":"openExample('nav_robotics\/GenerateCollisionSpheresInsideCollisionCapsuleExample')","title":"Generate Collision Spheres Inside Collision Capsule"}],"seealso":[{"url":"collisionbox.html","name":"collisionBox"},{"url":"collisioncylinder.html","name":"collisionCylinder"},{"url":"collisionsphere.html","name":"collisionSphere"},{"url":"collisionmesh.html","name":"collisionMesh"},{"url":"collisionbox.checkcollision.html","name":"checkCollision"},{"url":"collisionbox.fitcollisioncapsule.html","name":"fitCollisionCapsule"},{"url":"..\/..\/robotics\/ref\/showcollisionarray.html","name":"showCollisionArray"}]},{"href":"ref\/collisioncylinder.html","refentity":[{"type":"object","name":"collisionCylinder"},{"type":"function","name":"collisionCylinder","fcntype":"constructor"}],"refpurpose":"Create collision cylinder geometry","introduced":"R2019b","description":"Use collisionCylinder to create a cylinder collision geometry that is axis-aligned with the z-axis of its body-fixed frame and has the origin of the body-fixed frame at the center of the cylinder.","syntaxgroup":[{"title":"","syntax":["CYL = collisionCylinder(Radius,Length)","CYL = collisionCylinder(___,Pose=pose)"]}],"classpropertygroup":[{"classproperty":[{"name":"Radius","purpose":"Radius","htmlid":"mw_80a3e634-1d40-4053-b2a0-c5575d2c060a","value":["positive scalar"]},{"name":"Length","purpose":"Length","htmlid":"mw_edda50d5-daea-4620-8866-ee27fcb3f2fa","value":["nonnegative scalar"]},{"name":"Pose","purpose":"Pose","htmlid":"mw_ceec9b5d-5cdc-47db-9ab5-acab86452e52_sep_mw_d873f8ac-d0e3-4d46-a765-59b3cd44901f","value":["eye(4)","real-valued 4-by-4 matrix","se3 object"],"defaultvalue":"eye(4)"}]}],"objectfunctions":[{"title":"","functions":[{"name":"checkCollision","url":"collisionbox.checkcollision.html","description":"Check if two geometries are in collision"},{"name":"convertToCollisionMesh","url":"collisionbox.converttocollisionmesh.html","description":"Convert collision primitive geometry into collision mesh geometry"},{"name":"fitCollisionCapsule","url":"collisionbox.fitcollisioncapsule.html","description":"Fit collision capsule around collision geometry"},{"name":"show","url":"collisionbox.show.html","description":"Show collision geometry"}]}],"examples":[{"url":"collisioncylinder.html#mw_a9658ca8-3c1f-4a83-892f-a9fbe8af5392","open_command":"openExample('nav_robotics\/CreateAndVisualizeCylinderCollisionGeometryExample')","title":"Create and Visualize Cylinder Collision Geometry"}],"seealso":[{"url":"collisionbox.html","name":"collisionBox"},{"url":"collisionmesh.html","name":"collisionMesh"},{"url":"collisionsphere.html","name":"collisionSphere"},{"url":"collisioncapsule.html","name":"collisionCapsule"},{"url":"collisionbox.checkcollision.html","name":"checkCollision"},{"url":"collisionbox.fitcollisioncapsule.html","name":"fitCollisionCapsule"},{"url":"..\/..\/robotics\/ref\/showcollisionarray.html","name":"showCollisionArray"}]},{"href":"ref\/collisionmesh.html","refentity":[{"type":"object","name":"collisionMesh"},{"type":"function","name":"collisionMesh","fcntype":"constructor"}],"refpurpose":"Create convex mesh collision geometry","introduced":"R2019b","description":"Use collisionMesh to create a collision geometry as a convex mesh using a list of 3-D vertices relative to a frame of choice.","syntaxgroup":[{"title":"","syntax":["MSH = collisionMesh(Vertices)","MSH = collisionMesh(___,Pose=pose)"]}],"classpropertygroup":[{"classproperty":[{"name":"Vertices","purpose":"Vertices","htmlid":"mw_683aa245-3331-441e-8551-4ea010b7d89d","value":["N-by-3 matrix"]},{"name":"Pose","purpose":"Pose","htmlid":"mw_a620e54b-94a8-41ef-9388-db6daf941221_sep_mw_d873f8ac-d0e3-4d46-a765-59b3cd44901f","value":["eye(4)","real-valued 4-by-4 matrix","se3 object"],"defaultvalue":"eye(4)"}]}],"objectfunctions":[{"title":"","functions":[{"name":"checkCollision","url":"collisionbox.checkcollision.html","description":"Check if two geometries are in collision"},{"name":"fitCollisionCapsule","url":"collisionbox.fitcollisioncapsule.html","description":"Fit collision capsule around collision geometry"},{"name":"show","url":"collisionbox.show.html","description":"Show collision geometry"}]}],"examples":[{"url":"collisionmesh.html#mw_ece7543b-9abb-45bb-ae75-c17c2efc649e","open_command":"openExample('nav_robotics\/CreateAndVisualizeMeshCollisionGeometryExample')","title":"Create and Visualize Mesh Collision Geometry"}],"seealso":[{"url":"collisionbox.html","name":"collisionBox"},{"url":"collisioncylinder.html","name":"collisionCylinder"},{"url":"collisionsphere.html","name":"collisionSphere"},{"url":"collisioncapsule.html","name":"collisionCapsule"},{"url":"collisionbox.checkcollision.html","name":"checkCollision"},{"url":"collisionbox.fitcollisioncapsule.html","name":"fitCollisionCapsule"},{"url":"..\/..\/robotics\/ref\/showcollisionarray.html","name":"showCollisionArray"},{"url":"..\/..\/robotics\/ref\/collisionvhacd.html","name":"collisionVHACD"}]},{"href":"ref\/collisionsphere.html","refentity":[{"type":"object","name":"collisionSphere"},{"type":"function","name":"collisionSphere","fcntype":"constructor"}],"refpurpose":"Create sphere collision geometry","introduced":"R2019b","description":"Use collisionSphere to create a sphere collision geometry with the origin of the geometry-fixed frame at the center of the sphere.","syntaxgroup":[{"title":"","syntax":["SPH = collisionSphere(Radius)","SPH = collisionSphere(___,Pose=pose)"]}],"classpropertygroup":[{"classproperty":[{"name":"Radius","purpose":"Radius","htmlid":"mw_99366946-7e2c-4b74-b73b-cc86006e24b8","value":["positive scalar"]},{"name":"Pose","purpose":"Pose","htmlid":"mw_95c07ea8-f085-4d6e-9b71-0aef8c5e3a14_sep_mw_d873f8ac-d0e3-4d46-a765-59b3cd44901f","value":["eye(4)","real-valued 4-by-4 matrix","se3 object"],"defaultvalue":"eye(4)"}]}],"objectfunctions":[{"title":"","functions":[{"name":"checkCollision","url":"collisionbox.checkcollision.html","description":"Check if two geometries are in collision"},{"name":"convertToCollisionMesh","url":"collisionbox.converttocollisionmesh.html","description":"Convert collision primitive geometry into collision mesh geometry"},{"name":"fitCollisionCapsule","url":"collisionbox.fitcollisioncapsule.html","description":"Fit collision capsule around collision geometry"},{"name":"show","url":"collisionbox.show.html","description":"Show collision geometry"}]}],"examples":[{"url":"collisionsphere.html#mw_42ddccfa-caea-42db-9636-5f50ed728fb4","open_command":"openExample('nav_robotics\/CreateAndVisualizeSphereCollisionGeometryExample')","title":"Create and Visualize Sphere Collision Geometry"}],"seealso":[{"url":"collisionbox.html","name":"collisionBox"},{"url":"collisioncylinder.html","name":"collisionCylinder"},{"url":"collisionmesh.html","name":"collisionMesh"},{"url":"collisioncapsule.html","name":"collisionCapsule"},{"url":"collisionbox.checkcollision.html","name":"checkCollision"},{"url":"collisionbox.fitcollisioncapsule.html","name":"fitCollisionCapsule"},{"url":"..\/..\/robotics\/ref\/showcollisionarray.html","name":"showCollisionArray"}]},{"href":"ref\/collisionvhacd.html","refentity":[{"type":"function","name":"collisionVHACD","fcntype":"simple"}],"refpurpose":"Decompose mesh into convex collision meshes using V-HACD","introduced":"R2023b","description":"This MATLAB function decomposes a triangulation mesh into convex collision meshes using a voxelized hierarchical approximate convex decomposition (V-HACD) solver.","syntaxgroup":[{"title":"","syntax":["convexCollMeshes = collisionVHACD(sourceMesh)","convexCollMeshes = collisionVHACD(sourceMesh,options)","[convexCollMeshes,info] = collisionVHACD(___)"]}],"inputgroup":[{"title":"","inputs":[{"name":"sourceMesh","purpose":"Triangulation of mesh geometry to decompose","htmlid":"mw_132cd535-7c0b-4668-99e0-99737768ee32","value":["triangulation object"]},{"name":"options","purpose":"V-HACD solver options","htmlid":"mw_38909583-6eec-46bc-97ad-36233c93ee6c","value":["vhacdOptions object"]}]}],"outputs":[{"name":"convexCollMeshes","purpose":"Convex collision meshes","htmlid":"mw_793ac49b-e803-4c3d-8022-97dfce3ab5fa","value":["N-element cell array of collisionMesh objects"]},{"name":"info","purpose":"Decomposition solution information","htmlid":"mw_ada116f3-4d7b-47ee-825f-6ac966f4ad4b","value":["structure"]}],"examples":[{"url":"collisionvhacd.html#mw_f9b9733c-adeb-420f-85e4-2abe2d55c3db","open_command":"openExample('nav_robotics\/DecomposeConcaveMeshesForCollisionCheckingExample')","title":"Decompose Non-Convex Meshes for Collision Checking"},{"url":"collisionvhacd.html#mw_5e0cddce-b18d-4cfd-9253-2afdacccfd62","open_command":"openExample('robotics\/ReplaceRigidBodyCollisionMeshesWithVisualMeshesExample')","title":"Replace Rigid Body Collision Meshes with Decompositions of Visual Meshes"}],"seealso":[{"url":"vhacdoptions.html","name":"vhacdOptions"},{"url":"showcollisionarray.html","name":"showCollisionArray"},{"url":"collisionmesh.html","name":"collisionMesh"},{"url":"..\/..\/matlab\/ref\/trisurf.html","name":"trisurf"}]},{"href":"ref\/compassangle.html","refentity":[{"type":"function","name":"compassAngle","fcntype":"simple"}],"refpurpose":"Navigational heading relative to north","introduced":"R2023b","description":"This MATLAB function returns the compass angles in the north-east-down (NED) reference frame based on the orientations.","syntaxgroup":[{"title":"","syntax":["C = compassAngle(orientations)","C = compassAngle(orientations,RF)"]}],"inputgroup":[{"title":"","inputs":[{"name":"orientations","purpose":"Orientations","htmlid":"mw_9b59c964-afd2-49b5-9f3e-10c26ac1b691","value":["N-by-1 vector of quaternion objects","3-by-3-by-N array of rotation matrices"]},{"name":"RF","purpose":"Reference frame","htmlid":"mw_b5dc4a74-f3c6-4ac2-9574-9cc2a1c10a88","value":["\"NED\"","\"ENU\""]}]}],"outputs":[{"name":"C","purpose":"Compass angles","htmlid":"mw_82c9fa11-f92b-4073-ac03-de46651a3650","value":["N-by-3 matrix of scalars in range [0, 2*pi)"]}],"examples":[{"url":"compassangle.html#mw_2f9376eb-1b3b-4be2-b0bd-a55e5ba139ec","open_command":"openExample('shared_positioning\/GetCompassAnglesFromOrientationsExample')","title":"Get Compass Angles from Orientations"}],"seealso":[{"url":"gravitydir.html","name":"gravitydir"},{"url":"tilt.html","name":"tilt"},{"url":"linaccel.html","name":"linaccel"}]},{"href":"ref\/complementaryfilter-system-object.html","refentity":[{"type":"sysobj","name":"complementaryFilter"},{"type":"function","name":"complementaryFilter","fcntype":"constructor"}],"refpurpose":"Estimate orientation using complementary filter","introduced":"R2019b","description":"The complementaryFilter System object fuses accelerometer, gyroscope, and magnetometer sensor data to estimate device orientation and angular velocity.","syntaxgroup":[{"title":"","syntaxtype":"createobject","syntax":["FUSE = complementaryFilter","FUSE = complementaryFilter('ReferenceFrame',RF)","FUSE = complementaryFilter(___,Name=Value)"]},{"title":"","syntaxtype":"usage","syntax":["[orientation,angularVelocity] = FUSE(accelReadings,gyroReadings,magReadings)","[orientation,angularVelocity] = FUSE(accelReadings,gyroReadings)"]}],"inputgroup":[{"title":"","inputs":[{"name":"RF","purpose":"Local navigation coordinate system","syntaxtype":"createobject","htmlid":"sysobj_complementaryFilter_sep_mw_cc120d78-4a41-44b5-901a-e71ecd8fbcb4","value":["'NED'","'ENU'"],"defaultvalue":"'NED'"}]},{"title":"","inputs":[{"name":"accelReadings","purpose":"Accelerometer readings in sensor body coordinate system (m\/s^{2})","syntaxtype":"usage","htmlid":"mw_d165b9d4-fe91-407d-9465-07a8a9030bd8","value":["N-by-3 matrix"]},{"name":"gyroReadings","purpose":"Gyroscope readings in sensor body coordinate system (rad\/s)","syntaxtype":"usage","htmlid":"mw_c2fe9a2e-869c-47e5-9b69-ac18709b72c5","value":["N-by-3 matrix"]},{"name":"magReadings","purpose":"Magnetometer readings in sensor body coordinate system (µT)","syntaxtype":"usage","htmlid":"mw_55ea7bd3-5bc8-4338-9e2e-0e9e397368d0","value":["N-by-3 matrix"]}]}],"outputs":[{"name":"orientation","purpose":"Orientation that rotates quantities from local navigation coordinate system to sensor body coordinate system","syntaxtype":"usage","htmlid":"mw_868babbb-a984-4d0f-9bfd-aafbc9499892","value":["N-by-1 array of quaternions","3-by-3-by-N array"]},{"name":"angularVelocity","purpose":"Angular velocity in sensor body coordinate system (rad\/s)","syntaxtype":"usage","htmlid":"mw_4130f89c-7908-4dd5-bc6c-e381c9cfa790","value":["N-by-3 array"]}],"classpropertygroup":[{"classproperty":[{"name":"SampleRate","purpose":"Input sample rate of sensor data (Hz)","htmlid":"mw_323f08e7-64ee-4fe4-9f16-5e840fe131f4","value":["100","positive scalar"],"defaultvalue":"100"},{"name":"AccelerometerGain","purpose":"Accelerometer gain","htmlid":"mw_d5f8be73-b46e-45eb-9448-6e2072e48ee2","value":["0.01","real scar in [0, 1]"],"defaultvalue":"0.01"},{"name":"MagnetometerGain","purpose":"Magnetometer gain","htmlid":"mw_0041a83a-8c0e-4d09-a1bc-5b6e72faaac9","value":["0.01","real scar in [0, 1]"],"defaultvalue":"0.01"},{"name":"HasMagnetometer","purpose":"Enable magnetometer input","htmlid":"mw_4fb6ddcf-828d-4e21-b56d-01e581a23d77","value":["true","false"],"defaultvalue":"true"},{"name":"OrientationFormat","purpose":"Output orientation format","htmlid":"mw_7be64609-fe90-497e-bf77-7a00fd065d62","value":["'quaternion'","'Rotation matrix'"],"defaultvalue":"'quaternion'"}]}],"objectfunctions":[{"title":"Common to All System Objects","functions":[{"name":"step","url":"..\/..\/matlab\/ref\/step.html","description":"Run System object algorithm"},{"name":"release","url":"..\/..\/matlab\/ref\/matlab.system.releasesystemobject.html","description":"Release resources and allow changes to System object property values and input characteristics"},{"name":"reset","url":"..\/..\/matlab\/ref\/resetsystemobject.html","description":"Reset internal states of System object"},{"name":"clone","url":"..\/..\/matlab\/ref\/matlab.system.clone.html","description":"Create duplicate System object"},{"name":"isLocked","url":"..\/..\/matlab\/ref\/matlab.system.islocked.html","description":"Determine if System object is in use"}]}],"examples":[{"url":"complementaryfilter-system-object.html#mw_c430723c-3f72-4dd7-aa5a-dc0c85f1348e","open_command":"openExample('shared_positioning\/EstimateOrientationFromRecordedIMUDataExample')","title":"Estimate Orientation from Recorded IMU Data"}],"seealso":[{"url":"ahrsfilter-system-object.html","name":"ahrsfilter"},{"url":"imufilter-system-object.html","name":"imufilter"}]},{"href":"ref\/complementaryfilter.html","refentity":[{"type":"block","name":"Complementary Filter"}],"refpurpose":"Estimate orientation using complementary filter","introduced":"R2023a","description":"The Complementary Filter Simulink block fuses accelerometer, magnetometer, and gyroscope sensor data to estimate device orientation.","icon":{"fileref":"ref\/complementaryfiltericon.png","alt":"Complementary Filter block"},"libraries":["Sensor Fusion and Tracking Toolbox \/ Multisensor Positioning \/ Navigation Filters","Navigation Toolbox \/ Multisensor Positioning \/ Navigation Filters"],"inputgroup":[{"title":"","inputs":[{"name":"Accel","purpose":"Accelerometer readings in sensor body coordinate system (m\/s^{2})","htmlid":"mw_367cf2cb-f967-4de9-a5c1-e62c60268192","value":["matrix"]},{"name":"Gyro","purpose":"Gyroscope readings in sensor body coordinate system (rad\/s)","htmlid":"mw_4ebdbdbc-d046-42bf-8f15-e579690e80d3","value":["matrix"]},{"name":"Mag","purpose":"Magnetometer readings in sensor body coordinate system (µT)","htmlid":"mw_62e1009a-f4ce-4894-9d5a-e7aee14e72aa","value":["matrix"]}]}],"outputs":[{"name":"Orientation","purpose":"Orientation of sensor body frame relative to navigation frame","htmlid":"mw_c17a626e-ef10-40d1-ab50-b2a8b2d18c38","value":["matrix","array"]},{"name":"Angular Velocity","purpose":"Angular velocity in sensor body coordinate system (rad\/s)","htmlid":"mw_1a75f159-4550-485a-ba62-321bbb66c6b8","value":["matrix"]}],"parameters":[{"name":"Reference frame","purpose":"Navigation reference frame","htmlid":"mw_58ba2753-2de3-45f9-bbb6-b7129ffb7b35","value":["NED","ENU"],"defaultvalue":"NED"},{"name":"Orientation format","purpose":"Orientation output format","htmlid":"mw_4c498e4c-4b7e-4f58-858e-65c93f606ad7","value":["quaternion","Rotation matrix"],"defaultvalue":"quaternion"},{"name":"Accelerometer gain","purpose":"Accelerometer gain","htmlid":"mw_d07b501c-6111-4cf3-a3e9-1112956f5dfe","value":["0.01","real scalar in range [0, 1]"],"defaultvalue":"0.01"},{"name":"Enable Magnetometer input","purpose":"Accept magnetometer readings input","htmlid":"mw_bcdabdfe-5823-4574-9c1c-530009cf6390","value":["on","off"],"defaultvalue":"on"},{"name":"Magnetometer gain","purpose":"Magnetometer gain","htmlid":"mw_95d94933-69a4-416f-bb20-1c28ff378d27","value":["0.01","real scalar in range [0, 1]"],"defaultvalue":"0.01"},{"name":"Simulate using","purpose":"Type of simulation to run","htmlid":"mw_265ee0ef-bfac-4c32-9741-30a18b6ecfe6","value":["Interpreted Execution","Code Generation"],"defaultvalue":"Interpreted Execution"}],"seealso":[{"url":"complementaryfilter-system-object.html","name":"complementaryFilter"},{"url":"ahrs.html","name":"AHRS"}]},{"href":"ref\/controllerpurepursuit-system-object.html","refentity":[{"type":"sysobj","name":"controllerPurePursuit"},{"type":"function","name":"controllerPurePursuit","fcntype":"constructor"}],"refpurpose":"Create controller to follow set of waypoints","introduced":"R2019b","description":"The controllerPurePursuit System object creates a controller object used to make a differential-drive vehicle follow a set of waypoints.","syntaxgroup":[{"title":"","syntaxtype":"usage","syntax":["[vel,angvel] = controller(pose)","[vel,angvel,lookaheadpoint] = controller(pose)"]},{"title":"","syntaxtype":"createobject","syntax":["controller = controllerPurePursuit"]},{"title":"","syntaxtype":"createobject","syntax":["controller = controllerPurePursuit(Name,Value)"]}],"inputgroup":[{"title":"","inputs":[{"name":"pose","purpose":"Position and orientation of vehicle","syntaxtype":"usage","htmlid":"d126e71968","value":["3-by-1 vector in the form [x y theta]"]}]}],"outputs":[{"name":"vel","purpose":"Linear velocity","syntaxtype":"usage","htmlid":"d126e72000","value":["scalar in meters per second"]},{"name":"angvel","purpose":"Angular velocity","syntaxtype":"usage","htmlid":"d126e72022","value":["scalar in radians per second"]},{"name":"lookaheadpoint","purpose":"Look-ahead point on path","syntaxtype":"usage","htmlid":"d126e72044","value":["[x y] vector"]}],"classpropertygroup":[{"classproperty":[{"name":"DesiredLinearVelocity","purpose":"Desired constant linear velocity","htmlid":"d126e71803","value":["0.1","scalar in meters per second"],"defaultvalue":"0.1"},{"name":"LookaheadDistance","purpose":"Look-ahead distance","htmlid":"d126e71828","value":["1.0","scalar in meters"],"defaultvalue":"1.0"},{"name":"MaxAngularVelocity","purpose":"Maximum angular velocity","htmlid":"d126e71853","value":["1.0","scalar in radians per second"],"defaultvalue":"1.0"},{"name":"Waypoints","purpose":"Waypoints","htmlid":"d126e71878","value":["[ ]","n-by-2 array"],"defaultvalue":"[ ]"}]}],"objectfunctions":[{"title":"Specific to controllerPurePursuit","functions":[{"name":"info","url":"controllerpurepursuit.info.html","description":"Characteristic information about controllerPurePursuit\n            object"}]},{"title":"Common to All System Objects","functions":[{"name":"step","url":"..\/..\/matlab\/ref\/step.html","description":"Run System object algorithm"},{"name":"release","url":"..\/..\/matlab\/ref\/matlab.system.releasesystemobject.html","description":"Release resources and allow changes to System object property values and input characteristics"},{"name":"reset","url":"..\/..\/matlab\/ref\/resetsystemobject.html","description":"Reset internal states of System object"}]}],"examples":[{"url":"controllerpurepursuit-system-object.html#mw_d0506ebf-b6ac-4bdb-9ebf-913510d4a7cb","open_command":"openExample('nav_robotics\/GetAdditionalPurePursuitObjectInformationExample')","title":"Get Additional Pure Pursuit Object Information"}],"seealso":[{"url":"..\/..\/robotics\/ref\/binaryoccupancymap.html","name":"binaryOccupancyMap"},{"url":"occupancymap.html","name":"occupancyMap"},{"url":"binaryoccupancymap.html","name":"binaryOccupancyMap"},{"url":"occupancymap.html","name":"occupancyMap"},{"url":"controllervfh-system-object.html","name":"controllerVFH"}]},{"href":"ref\/controllerpurepursuit.info.html","refentity":[{"type":"function","name":"info","fcntype":"instancemethod"},{"type":"method","name":"controllerPurePursuit.info","fcntype":"instancemethod"}],"refpurpose":"Characteristic information about controllerPurePursuit object","introduced":"R2019b","description":"This MATLAB function returns a structure, controllerInfo, with additional information about the status of the controllerPurePursuit object, controller.","syntaxgroup":[{"title":"","syntax":["controllerInfo = info(controller)"]}],"inputgroup":[{"title":"","inputs":[{"name":"controller","purpose":"Pure pursuit controller","htmlid":"d126e72257","value":["controllerPurePursuit object"]}]}],"outputs":[{"name":"controllerInfo","purpose":"Information on the controllerPurePursuit object","htmlid":"d126e72279","value":["structure"]}],"examples":[{"url":"controllerpurepursuit.info.html#mw_6d04949f-307e-4852-b8f4-1e23561d6d50","open_command":"openExample('nav_robotics\/GetAdditionalPurePursuitObjectInformationExample')","title":"Get Additional Pure Pursuit Object Information"}],"seealso":[{"url":"controllerpurepursuit-system-object.html","name":"controllerPurePursuit"}]},{"href":"ref\/controllerteb.clone.html","refentity":[{"type":"function","name":"clone","fcntype":"instancemethod"},{"type":"method","name":"controllerTEB.clone","fcntype":"instancemethod"}],"refpurpose":"Create deep clone of controllerTEB object","introduced":"R2023a","description":"This MATLAB function creates a deep clone of the controllerTEB object controller1.","syntaxgroup":[{"title":"","syntax":["controller2 = clone(controller1)"]}],"inputgroup":[{"title":"","inputs":[{"name":"controller1","purpose":"TEB controller","htmlid":"mw_9d857872-e275-4548-9c65-ef9c267557b1","value":["controllerTEB object"]}]}],"outputs":[{"name":"controller2","purpose":"Clone of TEB controller","htmlid":"mw_4de06020-2a5e-4b14-a998-8f4c7c1de838","value":["controllerTEB object"]}],"examples":[{"url":"controllerteb.clone.html#mw_4641062b-2c45-4142-a2ac-b8d80b3ee399","open_command":"openExample('nav\/ComputeVelocityCmdsAndOptimalTrajUsingTEBAlgorithmExample')","title":"Compute Velocity Commands and Optimal Trajectory for Differential-Drive Robot Using Timed Elastic Band Algorithm"}],"seealso":[{"url":"controllerteb.html","name":"controllerTEB"},{"url":"controllerteb.step.html","name":"step"}]},{"href":"ref\/controllerteb.html","refentity":[{"type":"object","name":"controllerTEB"},{"type":"function","name":"controllerTEB","fcntype":"constructor"}],"refpurpose":"Avoid unseen obstacles with time-optimal trajectories","introduced":"R2023a","description":"The controllerTEB object creates a controller (local planner) using the Timed Elastic Band (TEB) algorithm.","syntaxgroup":[{"title":"","syntax":["controller = controllerTEB(refpath)","controller = controllerTEB(refpath,map)","controller = controllerTEB(___,PropertyName=Value)"]}],"classpropertygroup":[{"classproperty":[{"name":"ReferencePath","purpose":"Reference path to follow","htmlid":"mw_042f8cd3-0a6f-4ba8-b370-7eb2afc697db","value":["N-by-2 matrix","N-by-3 matrix","navPath object with SE(2) state space"]},{"name":"Map","purpose":"Occupancy map representing environment","htmlid":"mw_956aed3a-dd9c-40a4-9d88-09ef3711687f","value":["binaryOccupancyMap()","binaryOccupancyMap object","occupancyMap object"],"defaultvalue":"binaryOccupancyMap()"},{"name":"CostWeights","purpose":"Weights for cost function optimization","htmlid":"mw_7f39270b-baa9-42a0-aed4-0951201fd6f0","value":["struct(\"Time\",10,\"Smoothness\",1000,\"Obstacle\",50)","structure"],"defaultvalue":"struct(\"Time\",10,\"Smoothness\",1000,\"Obstacle\",50)"},{"name":"RobotInformation","purpose":"Robot geometry information for collision checking","htmlid":"mw_1a13feaa-0c89-49a8-8055-3880c121d746","value":["struct(\"Dimension\",[1 0.67],\"Shape\",\"Rectangle\",\"FixedTransform\",[1 0.5 0.5])","structure"],"defaultvalue":"struct(\"Dimension\",[1 0.67],\"Shape\",\"Rectangle\",\"FixedTransform\",[1 0.5 0.5])"},{"name":"MinTurningRadius","purpose":"Minimum turning radius for vehicle on optimized path","htmlid":"mw_b4c9277f-8f27-467b-93a7-20d5b9f9823c","value":["0","nonnegative scalar"],"defaultvalue":"0"},{"name":"ObstacleSafetyMargin","purpose":"Safe distance between robot and obstacles","htmlid":"mw_1fa0860c-9ca9-4e14-b6b8-102d004bf3df","value":["0.5","positive scalar"],"defaultvalue":"0.5"},{"name":"NumIteration","purpose":"Number of iterations to optimize trajectory","htmlid":"mw_d00ec7e7-c5eb-4997-b524-af54c73ab77f","value":["2","positive integer"],"defaultvalue":"2"},{"name":"MaxVelocity","purpose":"Maximum limits of linear and angular velocity","htmlid":"mw_0ff9eedd-6e55-4abd-bffe-c933d7e3562e","value":["[0.8 1.6]","two-element positive vector"],"defaultvalue":"[0.8 1.6]"},{"name":"MaxReverseVelocity","purpose":"Maximum velocity for reverse motion","htmlid":"mw_87a52ff7-86ee-46bf-a4a9-48c751011b7b","value":["NaN","positive scalar"],"defaultvalue":"NaN"},{"name":"MaxAcceleration","purpose":"Maximum limits of linear and angular acceleration","htmlid":"mw_11ec9c71-70ac-47d9-b78e-6cd181c4514a","value":["[2.4 4.8]","two-element positive vector"],"defaultvalue":"[2.4 4.8]"},{"name":"ReferenceDeltaTime","purpose":"Reference travel time between consecutive poses","htmlid":"mw_6da4b9f0-6f57-4c11-93a2-6b58b1867fd4","value":["0.3","positive scalar"],"defaultvalue":"0.3"},{"name":"LookAheadTime","purpose":"Look-ahead time","htmlid":"mw_cd2437c1-decb-4378-9581-58cb25711d8b","value":["5","positive scalar"],"defaultvalue":"5"},{"name":"GoalTolerance","purpose":"Tolerance around goal pose","htmlid":"mw_769eb620-da59-49a8-a5c5-290396b0d61f","value":["[0.1 0.1 0.1]","three-element vector"],"defaultvalue":"[0.1 0.1 0.1]"}]}],"objectfunctions":[{"title":"","functions":[{"name":"step","url":"controllerteb.step.html","description":"Compute velocity commands and optimal trajectory for subsequent time\n      steps"},{"name":"clone","url":"controllerteb.clone.html","description":"Create deep clone of controllerTEB object"}]}],"examples":[{"url":"controllerteb.html#mw_68f4ff2d-e010-4b85-9c5f-a1e7c11b40c8","open_command":"openExample('nav\/ComputeVelocityCmdsAndOptimalTrajUsingTEBAlgorithmExample')","title":"Compute Velocity Commands and Optimal Trajectory for Differential-Drive Robot Using Timed Elastic Band Algorithm"}],"seealso":[{"url":"timedelasticband.html","name":"Timed Elastic Band"},{"url":"controllerpurepursuit-system-object.html","name":"controllerPurePursuit"},{"url":"plannerastargrid.html","name":"plannerAStarGrid"},{"url":"controllerteb.step.html","name":"step"},{"url":"controllerteb.clone.html","name":"clone"},{"url":"headingfromxy.html","name":"headingFromXY"},{"url":"velocitycommand.html","name":"velocityCommand"}]},{"href":"ref\/controllerteb.step.html","refentity":[{"type":"function","name":"step","fcntype":"instancemethod"},{"type":"method","name":"controllerTEB.step","fcntype":"instancemethod"}],"refpurpose":"Compute velocity commands and optimal trajectory for subsequent time steps","introduced":"R2023a","description":"This MATLAB function computes the linear and angular velocity commands velcmds, with their corresponding timestamps and corresponding optimized path optPath, for the specified current pose curState and current velocity curVel of a robot.","syntaxgroup":[{"title":"","syntax":["[velcmds,timestamps,optPath] = step(controller,curState,curVel)","[___,extraInfo] = step(___)"]}],"inputgroup":[{"title":"","inputs":[{"name":"controller","purpose":"TEB controller","htmlid":"mw_c7241ef5-65e8-48e1-ba18-ecc5baf0d40f","value":["controllerTEB object"]},{"name":"curState","purpose":"Current pose of robot","htmlid":"mw_65b8a7e2-5022-4653-a517-9df792f413e4","value":["three-element vector of form [x y theta]"]},{"name":"curVel","purpose":"Current velocity of robot","htmlid":"mw_8e58c1ef-49f3-4a95-a913-8453a9da061a","value":["two-element vector of form [v w]"]}]}],"outputs":[{"name":"velcmds","purpose":"Velocity commands","htmlid":"mw_5abffe28-f598-4e79-af22-b888d4aa2932","value":["N-by-2 matrix"]},{"name":"timestamps","purpose":"Timestamps corresponding to velocity commands","htmlid":"mw_5f66646a-9922-4c14-a3bc-e86df0dd9ee4","value":["N-element column vector"]},{"name":"optPath","purpose":"Optimized path","htmlid":"mw_5298d93f-e911-4f55-9df1-0b4a05a04d13","value":["N-by-3 matrix"]},{"name":"extraInfo","purpose":"Extra information","htmlid":"mw_c72a7811-d5fe-4349-acbb-9dfe9a2dcb5c","value":["structure"]}],"examples":[{"url":"controllerteb.step.html#mw_6ba595a8-e98f-4a3d-8f8b-04092a4603b4","open_command":"openExample('nav\/ComputeVelocityCmdsAndOptimalTrajUsingTEBAlgorithmExample')","title":"Compute Velocity Commands and Optimal Trajectory for Differential-Drive Robot Using Timed Elastic Band Algorithm"}],"seealso":[{"url":"controllerteb.html","name":"controllerTEB"},{"url":"controllerteb.clone.html","name":"clone"}]},{"href":"ref\/controllervfh-system-object.html","refentity":[{"type":"sysobj","name":"controllerVFH"},{"type":"function","name":"controllerVFH","fcntype":"constructor"}],"refpurpose":"Avoid obstacles using vector field histogram","introduced":"R2019b","description":"The controllerVFH System object enables your vehicle to avoid obstacles based on range sensor data using vector field histograms (VFH).","syntaxgroup":[{"title":"","syntaxtype":"createobject","syntax":["VFH = controllerVFH","VFH = controllerVFH(Name,Value)"]},{"title":"","syntaxtype":"usage","syntax":["steeringDir = vfh(scan,targetDir)","steeringDir = vfh(ranges,angles,targetDir)"]}],"inputgroup":[{"title":"","inputs":[{"name":"scan","purpose":"Lidar scan readings","syntaxtype":"usage","htmlid":"d126e71173","value":["lidarScan object"]}]},{"title":"","inputs":[{"name":"ranges","purpose":"Range values from scan data","syntaxtype":"usage","htmlid":"d126e71211","value":["vector"]},{"name":"angles","purpose":"Angle values from scan data","syntaxtype":"usage","htmlid":"d126e71233","value":["vector"]},{"name":"targetDir","purpose":"Target direction for vehicle","syntaxtype":"usage","htmlid":"d126e71255","value":["scalar"]}]}],"outputs":[{"name":"steeringDir","purpose":"Steering direction for vehicle","syntaxtype":"usage","htmlid":"d126e71276","value":["scalar"]}],"classpropertygroup":[{"classproperty":[{"name":"NumAngularSectors","purpose":"Number of angular sectors in histogram","htmlid":"d126e70889","value":["180","positive integer"],"defaultvalue":"180"},{"name":"DistanceLimits","purpose":"Limits for range readings","htmlid":"d126e70909","value":["2-element vector","[0.05 2]"],"defaultvalue":"[0.05 2]"},{"name":"RobotRadius","purpose":"Radius of vehicle","htmlid":"d126e70929","value":["scalar","0.1"],"defaultvalue":"0.1"},{"name":"SafetyDistance","purpose":"Safety distance around vehicle","htmlid":"d126e70949","value":["scalar","0.1"],"defaultvalue":"0.1"},{"name":"MinTurningRadius","purpose":"Minimum turning radius at current speed","htmlid":"d126e70972","value":["scalar","0.1"],"defaultvalue":"0.1"},{"name":"TargetDirectionWeight","purpose":"Cost function weight for target direction","htmlid":"d126e70993","value":["scalar","5"],"defaultvalue":"5"},{"name":"CurrentDirectionWeight","purpose":"Cost function weight for current direction","htmlid":"d126e71018","value":["scalar","2"],"defaultvalue":"2"},{"name":"PreviousDirectionWeight","purpose":"Cost function weight for previous direction","htmlid":"d126e71038","value":["scalar","2"],"defaultvalue":"2"},{"name":"HistogramThresholds","purpose":"Thresholds for binary histogram computation","htmlid":"d126e71058","value":["2-element vector","[3 10]"],"defaultvalue":"[3 10]"},{"name":"UseLidarScan","purpose":"Use lidarScan object as scan input","htmlid":"d126e71078","value":["false","true"],"defaultvalue":"false"}]}],"objectfunctions":[{"title":"Specific to controllerVFH","functions":[{"name":"show","url":"controllervfh.show.html","description":"Display VectorFieldHistogram information in figure\n            window"}]},{"title":"Common to All System Objects","functions":[{"name":"step","url":"..\/..\/matlab\/ref\/step.html","description":"Run System object algorithm"},{"name":"release","url":"..\/..\/matlab\/ref\/matlab.system.releasesystemobject.html","description":"Release resources and allow changes to System object property values and input characteristics"},{"name":"reset","url":"..\/..\/matlab\/ref\/resetsystemobject.html","description":"Reset internal states of System object"}]}],"examples":[{"url":"controllervfh-system-object.html#mw_11eec1ac-d28c-4753-b0ed-564b5bab2643","open_command":"openExample('nav\/CreateAVectorFieldHistogramObjectExample')","title":"Create a Vector Field Histogram Object and Visualize Data"}],"seealso":[{"url":"lidarscan.html","name":"lidarScan"},{"url":"controllervfh.show.html","name":"show"}]},{"href":"ref\/controllervfh.show.html","refentity":[{"type":"function","name":"show","fcntype":"instancemethod"},{"type":"method","name":"controllerVFH.show","fcntype":"instancemethod"}],"refpurpose":"Display VectorFieldHistogram information in figure window","introduced":"R2019b","description":"This MATLAB function shows histograms calculated by the VFH+ algorithm in a figure window.","syntaxgroup":[{"title":"","syntax":["show(vfh)"]},{"title":"","syntax":["show(vfh,'Parent',parent)"]},{"title":"","syntax":["h = show(___)"]}],"inputgroup":[{"title":"","inputs":[{"name":"vfh","purpose":"Vector field histogram algorithm","htmlid":"d126e71595","value":["controllerVFH object"]},{"name":"parent","purpose":"Polar axes properties","htmlid":"d126e71613","value":["PolarAxes handle"]}]}],"outputs":[{"name":"h","purpose":"Polar axes handles for VFH algorithm display","htmlid":"d126e71643","value":["array of PolarAxes handles"]}],"examples":[{"url":"controllervfh.show.html#mw_4177f687-1bb3-414b-a9d4-229210c1bc57","open_command":"openExample('nav\/CreateAVectorFieldHistogramObjectExample')","title":"Create a Vector Field Histogram Object and Visualize Data"}],"seealso":[{"url":"controllervfh-system-object.html","name":"controllerVFH"}]},{"href":"ref\/coordinatetransformationconversion.html","refentity":[{"type":"block","name":"Coordinate Transformation Conversion"}],"refpurpose":"Convert to a specified coordinate transformation representation","introduced":"R2017b","description":"The Coordinate Transformation Conversion block converts a coordinate transformation from the input representation to a specified output representation.","icon":{"fileref":"ref\/coord_trans_conv_block.png","alt":"Coordinate Transformation Conversion block"},"libraries":["Robotics System Toolbox \/ Utilities","Navigation Toolbox \/ Utilities","ROS Toolbox \/ Utilities","UAV Toolbox \/ Utilities"],"inputgroup":[{"title":"","inputs":[{"name":"Input transformation","purpose":"Coordinate transformation","htmlid":"d126e277187","value":["column vector","3-by-3 matrix","4-by-4 matrix"]},{"name":"TrVec","purpose":"Translation vector","htmlid":"d126e277265","value":["3-element column vector"]}]}],"outputs":[{"name":"Output transformation","purpose":"Coordinate transformation","htmlid":"d126e277311","value":["column vector","3-by-3 matrix","4-by-4 matrix"]},{"name":"TrVec","purpose":"Translation vector","htmlid":"d126e277385","value":["three-element column vector"]}],"parameters":[{"name":"Representation","purpose":"Input representation","htmlid":"mw_636cec16-6d78-476c-a0ad-a57eb80fde28","value":["Axis-Angle","Euler Angles","Homogeneous Transformation","Quaternion","Rotation Matrix","Translation Vector"]},{"name":"Axis rotation sequence","purpose":"Order of Euler angle axis rotations","htmlid":"mw_c77b883a-a873-4c82-a827-c9bd6a85ec84","value":["ZYX","ZYZ","XYZ"],"defaultvalue":"ZYX"},{"name":"Show TrVec input port","purpose":"Toggle TrVec port","htmlid":"mw_aa2ad329-7560-4f04-893b-02d5c88c9c1e","value":["off","on"],"defaultvalue":"off"},{"name":"Representation","purpose":"Output representation","htmlid":"mw_7b5e0e5b-bf61-41cf-a5ef-dbac1b20212b","value":["Axis-Angle","Euler Angles","Homogeneous Transformation","Quaternion","Rotation Matrix","Translation Vector"]},{"name":"Axis rotation sequence","purpose":"Order of Euler angle axis rotations","htmlid":"mw_cdb63128-71b8-4dd6-894f-84707227c5df","value":["ZYX","ZYZ","XYZ"],"defaultvalue":"ZYX"},{"name":"Show TrVec output port","purpose":"Toggle TrVec port","htmlid":"mw_36c7ad2f-f0df-4d7a-be64-5e69c5c1d8d4","value":["off","on"],"defaultvalue":"off"},{"name":"Simulate using","purpose":"Type of simulation to run","htmlid":"mw_af1b6aa7-d957-4c0c-84b3-de8b6e848333","value":["Interpreted execution","Code generation"],"defaultvalue":"Interpreted execution"}],"examples":[{"url":"..\/ug\/convert-coordinate-system-transformations.html","open_command":"openExample('nav_robotics\/ConvertCoordinateSystemTransformationsExample')","title":"Convert Coordinate System Transformations"}],"seealso":[{"url":"axang2quat.html","name":"axang2quat"},{"url":"eul2tform.html","name":"eul2tform"},{"url":"trvec2tform.html","name":"trvec2tform"}]},{"href":"ref\/createplanningtemplate.html","refentity":[{"type":"function","name":"createPlanningTemplate","fcntype":"simple"}],"refpurpose":"Create sample implementation for path planning interface","introduced":"R2019b","description":"This MATLAB function creates a planning template for a subclass of the nav.StateSpace class.","syntaxgroup":[{"title":"","syntax":["createPlanningTemplate","createPlanningTemplate(\"StateValidator\")","createPlanningTemplate(\"StateSampler\")"]}],"examples":[{"url":"createplanningtemplate.html#mw_351352e4-75b3-4ae8-80db-25e01827bb00","open_command":"openExample('nav\/CreateCustomStateSpaceSamplerForPathPlanningExample')","title":"Create Custom State Space for Path Planning"},{"url":"createplanningtemplate.html#mw_5b706c4b-04c7-443b-83be-8ceced15d152","open_command":"openExample('nav\/CreateCustomStateSpaceValidatorForPathPlanningExample')","title":"Create Custom State Space Validator for Path Planning"},{"url":"createplanningtemplate.html#mw_0119790d-e729-4f5e-ad4a-ee6b42dd6c59","open_command":"openExample('nav\/CreateClassForImplementingCustomStateSamplerExample')","title":"Create Class for Implementing Custom State Sampler"}],"seealso":[{"url":"nav.statespace-class.html","name":"nav.StateSpace"},{"url":"nav.statevalidator-class.html","name":"nav.StateValidator"},{"url":"nav.statesampler-class.html","name":"nav.StateSampler"},{"url":"statespacese2.html","name":"stateSpaceSE2"},{"url":"validatoroccupancymap.html","name":"validatorOccupancyMap"},{"url":"statesampleruniform.html","name":"stateSamplerUniform"}]},{"href":"ref\/cursormeasurementsconfiguration.html","refentity":[{"type":"object","name":"CursorMeasurementsConfiguration"},{"type":"function","name":"CursorMeasurementsConfiguration","fcntype":"constructor"}],"refpurpose":"Measure signal values using vertical waveform cursors that track along the signal","introduced":"R2022a","description":"Use the CursorMeasurementsConfiguration object to enable waveform cursors.","syntaxgroup":[{"title":"","syntax":["cursormeas = CursorMeasurementsConfiguration()"]}],"classpropertygroup":[{"classproperty":[{"name":"XLocation","purpose":"x-coordinates of the cursors","htmlid":"mw_57591622-2504-419f-9ce5-a2f1d037513d","value":["[2 8]","two-element vector"],"defaultvalue":"[2 8]"},{"name":"SnapToData","purpose":"Position cursors on signal data points","htmlid":"mw_07067d85-10a5-47b1-9449-bdaa9bbca732","value":["false","true"],"defaultvalue":"false"},{"name":"LockSpacing","purpose":"Lock spacing between cursors","htmlid":"mw_5c56d059-bc07-435b-b219-c8919f6f5946","value":["false","true"],"defaultvalue":"false"},{"name":"Enabled","purpose":"Enable cursor measurements","htmlid":"mw_d288ed02-3ea1-4eb9-bf5b-cc450827a52c","value":["false","true"],"defaultvalue":"false"}]}],"examples":[{"url":"cursormeasurementsconfiguration.html#mw_95539313-32c9-4912-96ce-2a8b79385d20","open_command":"openExample('dsp_nav_fusion\/ObtainCursorMeasurementsProgramUsingTSMATLABObjectExample')","title":"Configure Cursor Measurements Programmatically in Time Scope MATLAB Object"}],"seealso":[{"url":"timescope.html","name":"timescope"}]},{"href":"ref\/dubinsconnection.connect.html","refentity":[{"type":"function","name":"connect","fcntype":"instancemethod"},{"type":"method","name":"dubinsConnection.connect","fcntype":"instancemethod"},{"type":"method","name":"reedsSheppConnection.connect","fcntype":"instancemethod"}],"refpurpose":"Connect poses for given connection type","introduced":"R2019b","description":"This MATLAB function connects the start and goal poses using the specified dubinsConnection object.","syntaxgroup":[{"title":"","syntax":["[pathSegments,pathCosts] = connect(connectionObj,start,goal)","[pathSegments,pathCosts] = connect(connectionObj,start,goal,'PathSegments','all')"]}],"inputgroup":[{"title":"","inputs":[{"name":"connectionObj","purpose":"Path connection type","htmlid":"mw_9fdc87c4-35e9-47a4-98f4-95e0749ac92c","value":["dubinsPathSegment object","reedsSheppPathSegment object"]},{"name":"start","readonly":true,"purpose":"Initial pose of robot","htmlid":"mw_b8e38cc6-7e26-4e76-854c-766f81683604","value":["[x, y, Θ] vector or matrix"]},{"name":"goal","readonly":true,"purpose":"Goal pose of robot","htmlid":"mw_09916881-547a-4541-9c54-0b9271d7172f","value":["[x, y, Θ] vector or matrix"]}]}],"outputs":[{"name":"pathSegments","purpose":"Path segments","htmlid":"mw_9c9d5102-f28d-4ebf-ba1e-0427b460b2de","value":["cell array of objects"]},{"name":"pathCosts","purpose":"Cost of path segment","htmlid":"mw_84221653-f3aa-4fd6-b9be-a1aac9e5b09a","value":["positive numeric scalar","positive numeric vector","positive numeric matrix"]}],"examples":[{"url":"dubinsconnection.connect.html#mw_c341cf31-52c3-41c0-b9a3-8e80be8e8a01","open_command":"openExample('nav\/ConnectPosesUsingDubinsConnectionPathExample')","title":"Connect Poses Using Dubins Connection Path"},{"url":"dubinsconnection.connect.html#mw_6b11dc1d-01b0-4d9e-97a6-e53784940364","open_command":"openExample('nav\/ConnectPosesUsingReedsSheppConnectionPathExample')","title":"Connect Poses Using ReedsShepp Connection Path"}],"seealso":[{"url":"dubinspathsegment.interpolate.html","name":"interpolate"},{"url":"dubinspathsegment.show.html","name":"show"},{"url":"dubinsconnection.html","name":"dubinsConnection"},{"url":"dubinspathsegment.html","name":"dubinsPathSegment"},{"url":"reedssheppconnection.html","name":"reedsSheppConnection"},{"url":"reedsshepppathsegment.html","name":"reedsSheppPathSegment"}]},{"href":"ref\/dubinsconnection.html","refentity":[{"type":"object","name":"dubinsConnection"},{"type":"function","name":"dubinsConnection","fcntype":"constructor"}],"refpurpose":"Dubins path connection type","introduced":"R2019b","description":"The dubinsConnection object holds information for computing a dubinsPathSegment path segment to connect between poses.","syntaxgroup":[{"title":"","syntax":["dubConnObj = dubinsConnection","dubConnObj = dubinsConnection(Name,Value)"]}],"classpropertygroup":[{"classproperty":[{"name":"MinTurningRadius","purpose":"Minimum turning radius of the vehicle","htmlid":"mw_7b040462-2449-4019-96bc-6f0e2b29f5ba","value":["1","positive scalar in meters"],"defaultvalue":"1"},{"name":"DisabledPathTypes","purpose":"Path types to disable","htmlid":"mw_fc1c2d83-c580-4efa-8e70-d79006a6a6b5","value":["{}","cell array of three-element character vectors","vector of three-element string scalars"],"defaultvalue":"{}"},{"name":"AllPathTypes","readonly":true,"purpose":"All possible path types","htmlid":"mw_1bc60126-9dd0-4297-8e68-aa110df8e9a0","value":["cell array of character vectors"]}]}],"objectfunctions":[{"title":"","functions":[{"name":"connect","url":"dubinsconnection.connect.html","description":"Connect poses for given connection type"}]}],"examples":[{"url":"dubinsconnection.html#mw_4f9fe596-2847-40f3-8cf1-d07e83e50220","open_command":"openExample('nav\/ConnectPosesUsingDubinsConnectionPathExample')","title":"Connect Poses Using Dubins Connection Path"},{"url":"dubinsconnection.html#mw_186eaedc-8f5b-49f1-84ad-3aac9c580fbb","open_command":"openExample('nav\/ModifyConnectionTypesForDubinsPathExample')","title":"Modify Connection Types for Dubins Path"}],"seealso":[{"url":"dubinspathsegment.html","name":"dubinsPathSegment"},{"url":"reedssheppconnection.html","name":"reedsSheppConnection"},{"url":"reedsshepppathsegment.html","name":"reedsSheppPathSegment"},{"url":"dubinsconnection.connect.html","name":"connect"},{"url":"dubinspathsegment.interpolate.html","name":"interpolate"},{"url":"dubinspathsegment.show.html","name":"show"}]},{"href":"ref\/dubinspathsegment.interpolate.html","refentity":[{"type":"function","name":"interpolate","fcntype":"instancemethod"},{"type":"method","name":"dubinsPathSegment.interpolate","fcntype":"instancemethod"},{"type":"method","name":"reedsSheppPathSegment.interpolate","fcntype":"instancemethod"}],"refpurpose":"Interpolate poses along path segment","introduced":"R2019b","description":"This MATLAB function interpolates along the path segment at the transitions between motion types.","syntaxgroup":[{"title":"","syntax":["poses = interpolate(pathSeg)","poses = interpolate(pathSeg,lengths)","[poses,directions] = interpolate(___)"]}],"inputgroup":[{"title":"","inputs":[{"name":"pathSeg","purpose":"Path segment","htmlid":"mw_fb0c1bf7-616f-4a7d-8fbd-36720cb63fa3","value":["dubinsPathSegment object","reedsSheppPathSegment object"]},{"name":"lengths","purpose":"Lengths along path to interpolate at","htmlid":"mw_22102393-983a-4b3d-a2f1-0851818a2db5","value":["positive numeric vector"]}]}],"outputs":[{"name":"poses","readonly":true,"purpose":"Interpolated poses","htmlid":"mw_4f7a59e6-b342-4f2b-952f-7947d626c112","value":["[x, y, Θ] matrix"]},{"name":"directions","purpose":"Directions of motion","htmlid":"mw_ed44ebc1-dba9-4a24-b0d0-b6bc046d43e8","value":["vector of 1s (forward) and –1s (reverse)"]}],"examples":[{"url":"dubinspathsegment.interpolate.html#mw_e0d0cfd8-13ad-4139-92e2-8efe8ba5596c","open_command":"openExample('nav\/InterpolatePosesForDubinsPathExample')","title":"Interpolate Poses for Dubins Path"}],"seealso":[{"url":"dubinsconnection.connect.html","name":"connect"},{"url":"dubinspathsegment.show.html","name":"show"},{"url":"dubinsconnection.html","name":"dubinsConnection"},{"url":"dubinspathsegment.html","name":"dubinsPathSegment"},{"url":"reedssheppconnection.html","name":"reedsSheppConnection"},{"url":"reedsshepppathsegment.html","name":"reedsSheppPathSegment"}]},{"href":"ref\/dubinspathsegment.html","refentity":[{"type":"object","name":"dubinsPathSegment"}],"refpurpose":"Dubins path segment connecting two poses","introduced":"R2019b","description":"The dubinsPathSegment object holds information for a Dubins path segment that connects two poses as a sequence of three motions.","syntaxgroup":[{"title":"","syntax":["dubPathSeg = connect(connectionObj,start,goal)","dubPathSeg = dubinsPathSegment(connectionObj,start,goal,motionLengths,motionTypes)"]}],"classpropertygroup":[{"classproperty":[{"name":"MinTurningRadius","readonly":true,"purpose":"Minimum turning radius of vehicle","htmlid":"mw_a444fdb4-a2a7-4714-9304-c43a858f2d1b","value":["positive scalar"]},{"name":"StartPose","readonly":true,"purpose":"Initial pose of the vehicle","htmlid":"mw_93750449-bb69-4b47-a221-8680ff7d5116","value":["[x, y, Θ] vector"]},{"name":"GoalPose","readonly":true,"purpose":"Goal pose of the vehicle","htmlid":"mw_bf64b473-f856-4a00-bcff-905b773f346a","value":["[x, y, Θ] vector"]},{"name":"MotionLengths","readonly":true,"purpose":"Length of each motion","htmlid":"mw_de94a229-8825-4a41-9d10-22f884331e7a","value":["three-element numeric vector"]},{"name":"MotionTypes","readonly":true,"purpose":"Type of each motion","htmlid":"mw_807f300d-cf90-48b1-95b6-639d0a22ffb4","value":["three-element string cell array"]},{"name":"Length","readonly":true,"purpose":"Length of path segment","htmlid":"mw_9fa8ca7e-23b7-4078-b4b7-2d2ebc835e65","value":["positive scalar"]}]}],"objectfunctions":[{"title":"","functions":[{"name":"interpolate","url":"dubinspathsegment.interpolate.html","description":"Interpolate poses along path segment"},{"name":"show","url":"dubinspathsegment.show.html","description":"Visualize path segment"}]}],"examples":[{"url":"dubinspathsegment.html#mw_30d1241f-6222-49d3-820a-0b85b160b383","open_command":"openExample('nav\/ConnectPosesUsingDubinsConnectionPathExample')","title":"Connect Poses Using Dubins Connection Path"}],"seealso":[{"url":"dubinsconnection.html","name":"dubinsConnection"},{"url":"reedssheppconnection.html","name":"reedsSheppConnection"},{"url":"reedsshepppathsegment.html","name":"reedsSheppPathSegment"},{"url":"dubinsconnection.connect.html","name":"connect"},{"url":"dubinspathsegment.interpolate.html","name":"interpolate"},{"url":"dubinspathsegment.show.html","name":"show"}]},{"href":"ref\/dubinspathsegment.show.html","refentity":[{"type":"function","name":"show","fcntype":"instancemethod"},{"type":"method","name":"dubinsPathSegment.show","fcntype":"instancemethod"},{"type":"method","name":"reedsSheppPathSegment.show","fcntype":"instancemethod"}],"refpurpose":"Visualize path segment","introduced":"R2019b","description":"This MATLAB function plots the path segment with start and goal positions and their headings.","syntaxgroup":[{"title":"","syntax":["show(pathSeg)","show(pathSeg,Name,Value)"]}],"inputgroup":[{"title":"","inputs":[{"name":"pathSeg","purpose":"Path segment","htmlid":"mw_a1fbeccb-a9ea-459e-86ed-692ebe74c7c0","value":["dubinsPathSegment object","reedsSheppPathSegment object"]}]},{"namevaluepairs":[{"title":"","inputs":[{"name":"Parent","purpose":"Axes to plot path onto","htmlid":"mw_27809198-b14a-4007-add2-3422defdff0a","value":["Axes handle"]},{"name":"Headings","purpose":"Heading angles to display","htmlid":"mw_53f2ea9b-a31c-48eb-b7a7-c1a4a310820c","value":["cell array of character vector or string scalars"]},{"name":"Positions","purpose":"Positions to display","htmlid":"mw_c697c8f5-91f6-482e-80eb-3f4c06af0832","value":["'both'","'start'","'goal'","'none'"],"defaultvalue":"'both'"},{"name":"HeadingLength","purpose":"Length of heading","htmlid":"mw_bee3ed57-a6f7-4ca0-b578-7bb61f94920e","value":["positive numeric scalar"]}]}]}],"examples":[{"url":"dubinspathsegment.show.html#mw_0978b119-36a6-4abc-ad54-21c09cd34e89","open_command":"openExample('nav\/ConnectPosesUsingDubinsConnectionPathExample')","title":"Connect Poses Using Dubins Connection Path"},{"url":"dubinspathsegment.show.html#mw_d6897fc6-410c-4864-bd03-dba8889cc9c2","open_command":"openExample('nav\/ModifyConnectionTypesForReedsSheppPathExample')","title":"Modify Connection Types for Reeds-Shepp Path"},{"url":"dubinspathsegment.show.html#mw_77c55a37-85db-45cc-af3c-d4b1549f5f22","open_command":"openExample('nav\/InterpolatePosesForDubinsPathExample')","title":"Interpolate Poses for Dubins Path"}],"seealso":[{"url":"dubinspathsegment.interpolate.html","name":"interpolate"},{"url":"dubinsconnection.connect.html","name":"connect"},{"url":"dubinsconnection.html","name":"dubinsConnection"},{"url":"dubinspathsegment.html","name":"dubinsPathSegment"},{"url":"reedssheppconnection.html","name":"reedsSheppConnection"},{"url":"reedsshepppathsegment.html","name":"reedsSheppPathSegment"}]},{"href":"ref\/dynamiccapsulelist.addego.html","refentity":[{"type":"function","name":"addEgo","fcntype":"instancemethod"},{"type":"method","name":"dynamicCapsuleList.addEgo","fcntype":"instancemethod"}],"refpurpose":"Add ego bodies to capsule list","introduced":"R2020b","description":"This MATLAB function adds one or more ego bodies to the 2-D dynamic capsule list with the specified ID, state, and geometry values given in egoStruct.","syntaxgroup":[{"title":"","syntax":["addEgo(capsuleListObj,egoStruct)","status = addEgo(capsuleListObj,egoStruct)"]}],"inputgroup":[{"title":"","inputs":[{"name":"capsuleListObj","purpose":"Dynamic capsule list","htmlid":"mw_3f72e945-0e7b-4134-b3d1-31dd1ad43d71","value":["dynamicCapsuleList object"]},{"name":"egoStruct","purpose":"Ego body parameters","htmlid":"mw_05ec4765-b765-486f-b34b-cace985ba461","value":["structure","N-element structure array"]}]}],"outputs":[{"name":"status","purpose":"Result of adding ego bodies","htmlid":"mw_b29e1f97-1b4e-4567-adec-b5de13d775f1","value":["N-element column vector"]}],"examples":[{"url":"dynamiccapsulelist.addego.html#mw_a4a469d8-6f70-44c9-ae32-5f2a3e81f35c","open_command":"openExample('nav\/BuildEgoBodyPathsAndCheckCollisionsExample')","title":"Build Ego Body Paths and Check for Collisions with Obstacles"}],"seealso":[{"url":"dynamiccapsulelist.html","name":"dynamicCapsuleList"},{"url":"dynamiccapsulelist3d.html","name":"dynamicCapsuleList3D"},{"url":"dynamiccapsulelist.addobstacle.html","name":"addObstacle"},{"url":"dynamiccapsulelist.checkcollision.html","name":"checkCollision"},{"url":"dynamiccapsulelist.egogeometry.html","name":"egoGeometry"},{"url":"dynamiccapsulelist.egopose.html","name":"egoPose"},{"url":"dynamiccapsulelist.obstaclegeometry.html","name":"obstacleGeometry"},{"url":"dynamiccapsulelist.obstaclepose.html","name":"obstaclePose"},{"url":"dynamiccapsulelist.removeego.html","name":"removeEgo"},{"url":"dynamiccapsulelist.removeobstacle.html","name":"removeObstacle"},{"url":"dynamiccapsulelist.show.html","name":"show"},{"url":"dynamiccapsulelist.updateegogeometry.html","name":"updateEgoGeometry"},{"url":"dynamiccapsulelist.updateegopose.html","name":"updateEgoPose"},{"url":"dynamiccapsulelist.updateobstaclegeometry.html","name":"updateObstacleGeometry"},{"url":"dynamiccapsulelist.updateobstaclepose.html","name":"updateObstaclePose"}]},{"href":"ref\/dynamiccapsulelist.addobstacle.html","refentity":[{"type":"function","name":"addObstacle","fcntype":"instancemethod"},{"type":"method","name":"dynamicCapsuleList.addObstacle","fcntype":"instancemethod"}],"refpurpose":"Add obstacles to 2-D capsule list","introduced":"R2020b","description":"This MATLAB function adds one or more obstacles to the 2-D dynamic capsule list with the specified ID, state, and geometry values given in obstacleStruct.","syntaxgroup":[{"title":"","syntax":["addObstacle(capsuleListObj,obstacleStruct)","status = addObstacle(capsuleListObj,obstacleStruct)"]}],"inputgroup":[{"title":"","inputs":[{"name":"capsuleListObj","purpose":"Dynamic capsule list","htmlid":"mw_69d05da6-fe12-42e5-b07e-f17e02307737","value":["dynamicCapsuleList object"]},{"name":"obstacleStruct","purpose":"Obstacle parameters","htmlid":"mw_dc9585a7-e910-4a98-8529-9d6d6d1f3bca","value":["structure","N-element structure array"]}]}],"outputs":[{"name":"status","purpose":"Result of adding obstacles","htmlid":"mw_b05a9048-6bd7-4083-983d-8bbb19e13a8c","value":["N-element column vector"]}],"examples":[{"url":"dynamiccapsulelist.addobstacle.html#mw_fdc261ea-d826-4381-984f-730e1ef99957_sep_mw_3891115b-5a63-4721-beff-cc5e81099d0d","open_command":"openExample('nav\/BuildEgoBodyPathsAndCheckCollisionsExample')","title":"Build Ego Body Paths and Check for Collisions with Obstacles"}],"seealso":[{"url":"dynamiccapsulelist.html","name":"dynamicCapsuleList"},{"url":"dynamiccapsulelist3d.html","name":"dynamicCapsuleList3D"},{"url":"dynamiccapsulelist.addego.html","name":"addEgo"},{"url":"dynamiccapsulelist.checkcollision.html","name":"checkCollision"},{"url":"dynamiccapsulelist.egogeometry.html","name":"egoGeometry"},{"url":"dynamiccapsulelist.egopose.html","name":"egoPose"},{"url":"dynamiccapsulelist.obstaclegeometry.html","name":"obstacleGeometry"},{"url":"dynamiccapsulelist.obstaclepose.html","name":"obstaclePose"},{"url":"dynamiccapsulelist.removeego.html","name":"removeEgo"},{"url":"dynamiccapsulelist.removeobstacle.html","name":"removeObstacle"},{"url":"dynamiccapsulelist.show.html","name":"show"},{"url":"dynamiccapsulelist.updateegogeometry.html","name":"updateEgoGeometry"},{"url":"dynamiccapsulelist.updateegopose.html","name":"updateEgoPose"},{"url":"dynamiccapsulelist.updateobstaclegeometry.html","name":"updateObstacleGeometry"},{"url":"dynamiccapsulelist.updateobstaclepose.html","name":"updateObstaclePose"}]},{"href":"ref\/dynamiccapsulelist.checkcollision.html","refentity":[{"type":"function","name":"checkCollision","fcntype":"instancemethod"},{"type":"method","name":"dynamicCapsuleList.checkCollision","fcntype":"instancemethod"},{"type":"method","name":"dynamicCapsuleList3D.checkCollision","fcntype":"instancemethod"}],"refpurpose":"Check for collisions between ego bodies and obstacles","introduced":"R2020b","description":"This MATLAB function checks each ego body for collisions with obstacles in the environment.","syntaxgroup":[{"title":"","syntax":["collisionFound = checkCollision(capsuleListObj)","[fullResults,distance] = checkCollision(capsuleListObj,options)"]}],"inputgroup":[{"title":"","inputs":[{"name":"capsuleListObj","purpose":"Dynamic capsule list","htmlid":"mw_a97efc98-6610-43d6-aa53-f00e60d69c80","value":["dynamicCapsuleList object","dynamicCapsuleList3D object"]},{"name":"options","purpose":"Collision detection options","htmlid":"mw_97c13c75-1110-4da3-ad4f-3bc3215af452","value":["structure"]}]}],"outputs":[{"name":"collisionFound","purpose":"Collision checking results","htmlid":"mw_2e039a1d-88f9-491b-bfc3-13efeaaf5930","value":["n-by-e matrix of logical values"]},{"name":"fullResults","purpose":"Full collision checking results for each obstacle","htmlid":"mw_491b4c74-fa15-4eba-8f8c-b964e5c536d3","value":["n-by-o-by-e array of logical values"]},{"name":"distance","purpose":"Distance from obstacles","htmlid":"mw_a7b31563-2881-4316-a784-c5b5689667fa","value":["n-by-e numeric matrix","n-by-oby-e numeric array"]}],"examples":[{"url":"dynamiccapsulelist.checkcollision.html#mw_6e934d75-069f-4098-8116-4848812cfe0d","open_command":"openExample('nav\/BuildEgoBodyPathsAndCheckCollisionsExample')","title":"Build Ego Body Paths and Check for Collisions with Obstacles"}],"seealso":[{"url":"dynamiccapsulelist.html","name":"dynamicCapsuleList"},{"url":"dynamiccapsulelist3d.html","name":"dynamicCapsuleList3D"},{"url":"dynamiccapsulelist.addego.html","name":"addEgo"},{"url":"dynamiccapsulelist.addobstacle.html","name":"addObstacle"},{"url":"dynamiccapsulelist.egogeometry.html","name":"egoGeometry"},{"url":"dynamiccapsulelist.egopose.html","name":"egoPose"},{"url":"dynamiccapsulelist.obstaclegeometry.html","name":"obstacleGeometry"},{"url":"dynamiccapsulelist.obstaclepose.html","name":"obstaclePose"},{"url":"dynamiccapsulelist.removeego.html","name":"removeEgo"},{"url":"dynamiccapsulelist.removeobstacle.html","name":"removeObstacle"},{"url":"dynamiccapsulelist.show.html","name":"show"},{"url":"dynamiccapsulelist.updateegogeometry.html","name":"updateEgoGeometry"},{"url":"dynamiccapsulelist.updateegopose.html","name":"updateEgoPose"},{"url":"dynamiccapsulelist.updateobstaclegeometry.html","name":"updateObstacleGeometry"},{"url":"dynamiccapsulelist.updateobstaclepose.html","name":"updateObstaclePose"}]},{"href":"ref\/dynamiccapsulelist.egogeometry.html","refentity":[{"type":"function","name":"egoGeometry","fcntype":"instancemethod"},{"type":"method","name":"dynamicCapsuleList.egoGeometry","fcntype":"instancemethod"},{"type":"method","name":"dynamicCapsuleList3D.egoGeometry","fcntype":"instancemethod"}],"refpurpose":"Geometric properties of ego bodies","introduced":"R2020b","description":"This MATLAB function returns the ego ID and the geometry parameters for each ego body in the capsule list.","syntaxgroup":[{"title":"","syntax":["[egoIDs,geomStruct] = egoGeometry(capsuleListObj)","[egoIDs,geomStruct] = egoGeometry(capsuleListObj,selectEgoIDs)","[egoIDs,geomStruct,status] = egoGeometry(capsuleListObj,selectEgoIDs)"]}],"inputgroup":[{"title":"","inputs":[{"name":"capsuleListObj","purpose":"Dynamic capsule list","htmlid":"mw_fcea2763-630a-4751-835a-6816e9e23856","value":["dynamicCapsuleList object","dynamicCapsuleList3D object"]},{"name":"selectEgoIDs","purpose":"Ego body IDs","htmlid":"mw_67b347c5-236c-4e1b-88f9-66e01c082ac1","value":["vector of positive integers"]}]}],"outputs":[{"name":"egoIDs","purpose":"IDs of ego bodies","htmlid":"mw_a7b4f7ce-2f28-4598-8bdd-64c20e436838","value":["vector of positive integers"]},{"name":"geomStruct","purpose":"Geometry parameters for ego bodies","htmlid":"mw_7bf7aeea-87c6-42bc-a289-093103c97259","value":["structure","structure array"]},{"name":"status","purpose":"Indication of ego body existence","htmlid":"mw_ef690282-4322-465b-b125-03d0a27dd126","value":["N-element column vector"]}],"examples":[{"url":"dynamiccapsulelist.egogeometry.html#mw_17844d7d-0809-4679-8266-994db48eccce","open_command":"openExample('nav\/CreateAndModifyCapsuleBasedEgoBodiesExample')","title":"Create and Modify Capsule-Based Ego Bodies"}],"seealso":[{"url":"dynamiccapsulelist.html","name":"dynamicCapsuleList"},{"url":"dynamiccapsulelist3d.html","name":"dynamicCapsuleList3D"},{"url":"dynamiccapsulelist.addego.html","name":"addEgo"},{"url":"dynamiccapsulelist.addobstacle.html","name":"addObstacle"},{"url":"dynamiccapsulelist.checkcollision.html","name":"checkCollision"},{"url":"dynamiccapsulelist.egopose.html","name":"egoPose"},{"url":"dynamiccapsulelist.obstaclegeometry.html","name":"obstacleGeometry"},{"url":"dynamiccapsulelist.obstaclepose.html","name":"obstaclePose"},{"url":"dynamiccapsulelist.removeego.html","name":"removeEgo"},{"url":"dynamiccapsulelist.removeobstacle.html","name":"removeObstacle"},{"url":"dynamiccapsulelist.show.html","name":"show"},{"url":"dynamiccapsulelist.updateegogeometry.html","name":"updateEgoGeometry"},{"url":"dynamiccapsulelist.updateegopose.html","name":"updateEgoPose"},{"url":"dynamiccapsulelist.updateobstaclegeometry.html","name":"updateObstacleGeometry"},{"url":"dynamiccapsulelist.updateobstaclepose.html","name":"updateObstaclePose"}]},{"href":"ref\/dynamiccapsulelist.egopose.html","refentity":[{"type":"function","name":"egoPose","fcntype":"instancemethod"},{"type":"method","name":"dynamicCapsuleList.egoPose","fcntype":"instancemethod"},{"type":"method","name":"dynamicCapsuleList3D.egoPose","fcntype":"instancemethod"}],"refpurpose":"Poses of ego bodies","introduced":"R2020b","description":"This MATLAB function returns the ego ID and the states for each ego body in the specified capsule list.","syntaxgroup":[{"title":"","syntax":["[egoIDs,poseStruct] = egoPose(capsuleListObj)","[egoIDs,poseStruct] = egoPose(capsuleListObj,selectEgoIDs)","[egoIDs,poseStruct,status] = egoPose(capsuleListObj,selectEgoIDs)"]}],"inputgroup":[{"title":"","inputs":[{"name":"capsuleListObj","purpose":"Dynamic capsule list","htmlid":"mw_36e12737-256e-4e11-9fca-4e78ec1bd787","value":["dynamicCapsuleList object","dynamicCapsuleList3D object"]},{"name":"selectEgoIDs","purpose":"Ego body IDs","htmlid":"mw_d12b5e97-c624-46e9-a41e-861bc9913d99","value":["vector of positive integers"]}]}],"outputs":[{"name":"egoIDs","purpose":"IDs of ego bodies","htmlid":"mw_88330806-2af5-4186-96b0-a46184b8aa6f","value":["vector of positive integers"]},{"name":"poseStruct","purpose":"States for ego bodies","htmlid":"mw_8bdfa963-4530-41bd-8430-913e956fec18","value":["structure","structure array"]},{"name":"status","purpose":"Indication of ego body existence","htmlid":"mw_276511e7-802c-43a2-a49d-9d416eaa77cf","value":["N-element column vector"]}],"examples":[{"url":"dynamiccapsulelist.egopose.html#mw_f464eaf5-8529-4e53-be18-4a78a2e351d4","open_command":"openExample('nav\/CreateAndModifyCapsuleBasedEgoBodiesExample')","title":"Create and Modify Capsule-Based Ego Bodies"}],"seealso":[{"url":"dynamiccapsulelist.html","name":"dynamicCapsuleList"},{"url":"dynamiccapsulelist3d.html","name":"dynamicCapsuleList3D"},{"url":"dynamiccapsulelist.addego.html","name":"addEgo"},{"url":"dynamiccapsulelist.addobstacle.html","name":"addObstacle"},{"url":"dynamiccapsulelist.checkcollision.html","name":"checkCollision"},{"url":"dynamiccapsulelist.egogeometry.html","name":"egoGeometry"},{"url":"dynamiccapsulelist.obstaclepose.html","name":"obstaclePose"},{"url":"dynamiccapsulelist.removeego.html","name":"removeEgo"},{"url":"dynamiccapsulelist.removeobstacle.html","name":"removeObstacle"},{"url":"dynamiccapsulelist.show.html","name":"show"},{"url":"dynamiccapsulelist.updateegogeometry.html","name":"updateEgoGeometry"},{"url":"dynamiccapsulelist.updateegopose.html","name":"updateEgoPose"},{"url":"dynamiccapsulelist.updateobstaclegeometry.html","name":"updateObstacleGeometry"},{"url":"dynamiccapsulelist.updateobstaclepose.html","name":"updateObstaclePose"}]},{"href":"ref\/dynamiccapsulelist.html","refentity":[{"type":"object","name":"dynamicCapsuleList"},{"type":"function","name":"dynamicCapsuleList","fcntype":"constructor"}],"refpurpose":"Dynamic capsule-based obstacle list","introduced":"R2020b","description":"The dynamicCapsuleList object manages two lists of capsule-based collision objects in 2-D space.","syntaxgroup":[{"title":"","syntax":["obstacleList = dynamicCapsuleList"]}],"classpropertygroup":[{"classproperty":[{"name":"MaxNumSteps","purpose":"Maximum number of time steps in obstacle list","htmlid":"mw_a7074cf7-86ae-46fe-b2bc-dcc1818f9af8","value":["31","positive integer"],"defaultvalue":"31"},{"name":"EgoIDs","readonly":true,"purpose":"List of IDs for ego bodies","htmlid":"mw_5e439062-3872-4640-b0d1-40476438bbc8","value":["vector of positive integers"]},{"name":"ObstacleIDs","readonly":true,"purpose":"IDs for obstacles","htmlid":"mw_0a9a5716-532a-4cd1-bb4b-23c546255060","value":["vector of positive integers"]},{"name":"NumObstacles","readonly":true,"purpose":"Number of obstacles in list","htmlid":"mw_b71cc5d1-7837-46dd-97a7-e63f59e90fef","value":["integer"]},{"name":"NumEgos","readonly":true,"purpose":"Number of ego bodies in list","htmlid":"mw_ef1dd593-83c9-4894-b296-80980bcc4861","value":["integer"]}]}],"objectfunctions":[{"title":"","functions":[{"name":"addEgo","url":"dynamiccapsulelist.addego.html","description":"Add ego bodies to capsule list"},{"name":"addObstacle","url":"dynamiccapsulelist.addobstacle.html","description":"Add obstacles to 2-D capsule list"},{"name":"checkCollision","url":"dynamiccapsulelist.checkcollision.html","description":"Check for collisions between ego bodies and obstacles"},{"name":"egoGeometry","url":"dynamiccapsulelist.egogeometry.html","description":"Geometric properties of ego bodies"},{"name":"egoPose","url":"dynamiccapsulelist.egopose.html","description":"Poses of ego bodies"},{"name":"obstacleGeometry","url":"dynamiccapsulelist.obstaclegeometry.html","description":"Geometric properties of obstacles"},{"name":"obstaclePose","url":"dynamiccapsulelist.obstaclepose.html","description":"Poses of obstacles"},{"name":"removeEgo","url":"dynamiccapsulelist.removeego.html","description":"Remove ego bodies from capsule list"},{"name":"removeObstacle","url":"dynamiccapsulelist.removeobstacle.html","description":"Remove obstacles from capsule list"},{"name":"show","url":"dynamiccapsulelist.show.html","description":"Display ego bodies and obstacles in environment"},{"name":"updateEgoGeometry","url":"dynamiccapsulelist.updateegogeometry.html","description":"Update geometric properties of ego bodies"},{"name":"updateEgoPose","url":"dynamiccapsulelist.updateegopose.html","description":"Update states of ego bodies"},{"name":"updateObstacleGeometry","url":"dynamiccapsulelist.updateobstaclegeometry.html","description":"Update geometric properties of obstacles"},{"name":"updateObstaclePose","url":"dynamiccapsulelist.updateobstaclepose.html","description":"Update states of obstacles"}]}],"examples":[{"url":"dynamiccapsulelist.html#mw_62d33689-92cb-4f06-aac4-feceb9a4f050","open_command":"openExample('nav\/BuildEgoBodyPathsAndCheckCollisionsExample')","title":"Build Ego Body Paths and Check for Collisions with Obstacles"}],"seealso":[{"url":"dynamiccapsulelist3d.html","name":"dynamicCapsuleList3D"},{"url":"dynamiccapsulelist.addego.html","name":"addEgo"},{"url":"dynamiccapsulelist.addobstacle.html","name":"addObstacle"},{"url":"dynamiccapsulelist.checkcollision.html","name":"checkCollision"},{"url":"dynamiccapsulelist.egogeometry.html","name":"egoGeometry"},{"url":"dynamiccapsulelist.egopose.html","name":"egoPose"},{"url":"dynamiccapsulelist.obstaclegeometry.html","name":"obstacleGeometry"},{"url":"dynamiccapsulelist.obstaclepose.html","name":"obstaclePose"},{"url":"dynamiccapsulelist.removeego.html","name":"removeEgo"},{"url":"dynamiccapsulelist.removeobstacle.html","name":"removeObstacle"},{"url":"dynamiccapsulelist.show.html","name":"show"},{"url":"dynamiccapsulelist.updateegogeometry.html","name":"updateEgoGeometry"},{"url":"dynamiccapsulelist.updateegopose.html","name":"updateEgoPose"},{"url":"dynamiccapsulelist.updateobstaclegeometry.html","name":"updateObstacleGeometry"},{"url":"dynamiccapsulelist.updateobstaclepose.html","name":"updateObstaclePose"}]},{"href":"ref\/dynamiccapsulelist.obstaclegeometry.html","refentity":[{"type":"function","name":"obstacleGeometry","fcntype":"instancemethod"},{"type":"method","name":"dynamicCapsuleList.obstacleGeometry","fcntype":"instancemethod"},{"type":"method","name":"dynamicCapsuleList3D.obstacleGeometry","fcntype":"instancemethod"}],"refpurpose":"Geometric properties of obstacles","introduced":"R2020b","description":"This MATLAB function returns the obstacle ID and the geometry parameters for each obstacle in the capsule list.","syntaxgroup":[{"title":"","syntax":["[obstacleIDs,geomStruct] = obstacleGeometry(capsuleListObj)","[obstacleIDs,geomStruct] = obstacleGeometry(capsuleListObj,selectObstacleIDs)","[obstacleIDs,geomStruct,status] = obstacleGeometry(capsuleListObj,selectObstacleIDs)"]}],"inputgroup":[{"title":"","inputs":[{"name":"capsuleListObj","purpose":"Dynamic capsule list","htmlid":"mw_84cf5d75-9b93-46d8-b417-3c4f13e91dc1","value":["dynamicCapsuleList object","dynamicCapsuleList3D object"]},{"name":"selectObstacleIDs","purpose":"Obstacle IDs","htmlid":"mw_5642d001-4d9b-482d-b31a-733a7c077f89","value":["vector of positive integers"]}]}],"outputs":[{"name":"obstacleIDs","purpose":"IDs of obstacles","htmlid":"mw_b634435d-1810-4279-b3d6-717780a1c15a","value":["vector of positive integers"]},{"name":"geomStruct","purpose":"Geometry parameters for obstacles","htmlid":"mw_bd187984-dc2a-4b26-a704-6311fd4c48d9","value":["structure","structure array"]},{"name":"status","purpose":"Indication of obstacle existence","htmlid":"mw_b5dc5945-b945-46f4-be8f-25675e97e7a1","value":["vector of ones, zeros, and negative ones"]}],"examples":[{"url":"dynamiccapsulelist.obstaclegeometry.html#mw_8efefd0d-065d-41c8-a0c7-6cec3dbf743a","open_command":"openExample('nav\/CreateAndModifyCapsuleBasedObstaclesExample')","title":"Create and Modify Capsule-Based Obstacles"}],"seealso":[{"url":"dynamiccapsulelist.html","name":"dynamicCapsuleList"},{"url":"dynamiccapsulelist3d.html","name":"dynamicCapsuleList3D"},{"url":"dynamiccapsulelist.addego.html","name":"addEgo"},{"url":"dynamiccapsulelist.addobstacle.html","name":"addObstacle"},{"url":"dynamiccapsulelist.checkcollision.html","name":"checkCollision"},{"url":"dynamiccapsulelist.egogeometry.html","name":"egoGeometry"},{"url":"dynamiccapsulelist.egopose.html","name":"egoPose"},{"url":"dynamiccapsulelist.obstaclepose.html","name":"obstaclePose"},{"url":"dynamiccapsulelist.removeego.html","name":"removeEgo"},{"url":"dynamiccapsulelist.removeobstacle.html","name":"removeObstacle"},{"url":"dynamiccapsulelist.show.html","name":"show"},{"url":"dynamiccapsulelist.updateegogeometry.html","name":"updateEgoGeometry"},{"url":"dynamiccapsulelist.updateegopose.html","name":"updateEgoPose"},{"url":"dynamiccapsulelist.updateobstaclegeometry.html","name":"updateObstacleGeometry"},{"url":"dynamiccapsulelist.updateobstaclepose.html","name":"updateObstaclePose"}]},{"href":"ref\/dynamiccapsulelist.obstaclepose.html","refentity":[{"type":"function","name":"obstaclePose","fcntype":"instancemethod"},{"type":"method","name":"dynamicCapsuleList.obstaclePose","fcntype":"instancemethod"},{"type":"method","name":"dynamicCapsuleList3D.obstaclePose","fcntype":"instancemethod"}],"refpurpose":"Poses of obstacles","introduced":"R2020b","description":"This MATLAB function returns the obstacle ID and states for each obstacle in the specified capsule list.","syntaxgroup":[{"title":"","syntax":["[obstacleIDs,poseStruct] = obstaclePose(capsuleListObj)","[obstacleIDs,poseStruct] = obstaclePose(capsuleListObj,selectObstacleIDs)","[obstacleIDs,poseStruct,status] = obstaclePose(capsuleListObj,selectObstacleIDs)"]}],"inputgroup":[{"title":"","inputs":[{"name":"capsuleListObj","purpose":"Dynamic capsule list","htmlid":"mw_91f07859-971f-4de2-a32a-eb8ab7085ccb","value":["dynamicCapsuleList object","dynamicCapsuleList3D object"]},{"name":"selectObstacleIDs","purpose":"Obstacle IDs","htmlid":"mw_3bd3760c-6924-4577-a59e-a4606c53fd36","value":["vector of positive integers"]}]}],"outputs":[{"name":"obstacleIDs","purpose":"IDs of obstacles","htmlid":"mw_3605fe40-08a6-46aa-96bf-9ab478b8dd7d","value":["vector of positive integers"]},{"name":"poseStruct","purpose":"States for ego bodies","htmlid":"mw_adadbef0-fc78-4f96-9eea-8c7b52ffdd43","value":["structure","structure array"]},{"name":"status","purpose":"Indication of obstacle existence","htmlid":"mw_2484796f-528f-43de-9b18-48f65c42ce2d","value":["N-element column vector"]}],"examples":[{"url":"dynamiccapsulelist.obstaclepose.html#mw_71f0ec76-f531-4db5-a994-da8e0bc68016","open_command":"openExample('nav\/CreateAndModifyCapsuleBasedObstaclesExample')","title":"Create and Modify Capsule-Based Obstacles"}],"seealso":[{"url":"dynamiccapsulelist.html","name":"dynamicCapsuleList"},{"url":"dynamiccapsulelist3d.html","name":"dynamicCapsuleList3D"},{"url":"dynamiccapsulelist.addego.html","name":"addEgo"},{"url":"dynamiccapsulelist.addobstacle.html","name":"addObstacle"},{"url":"dynamiccapsulelist.checkcollision.html","name":"checkCollision"},{"url":"dynamiccapsulelist.egogeometry.html","name":"egoGeometry"},{"url":"dynamiccapsulelist.egopose.html","name":"egoPose"},{"url":"dynamiccapsulelist.obstaclegeometry.html","name":"obstacleGeometry"},{"url":"dynamiccapsulelist.removeego.html","name":"removeEgo"},{"url":"dynamiccapsulelist.removeobstacle.html","name":"removeObstacle"},{"url":"dynamiccapsulelist.show.html","name":"show"},{"url":"dynamiccapsulelist.updateegogeometry.html","name":"updateEgoGeometry"},{"url":"dynamiccapsulelist.updateegopose.html","name":"updateEgoPose"},{"url":"dynamiccapsulelist.updateobstaclegeometry.html","name":"updateObstacleGeometry"},{"url":"dynamiccapsulelist.updateobstaclepose.html","name":"updateObstaclePose"}]},{"href":"ref\/dynamiccapsulelist.removeego.html","refentity":[{"type":"function","name":"removeEgo","fcntype":"instancemethod"},{"type":"method","name":"dynamicCapsuleList.removeEgo","fcntype":"instancemethod"},{"type":"method","name":"dynamicCapsuleList3D.removeEgo","fcntype":"instancemethod"}],"refpurpose":"Remove ego bodies from capsule list","introduced":"R2020b","description":"This MATLAB function removes ego bodies with the specified IDs from the dynamic capsule list.","syntaxgroup":[{"title":"","syntax":["removeEgo(capsuleListObj,egoIDs)","status = removeEgo(capsuleListObj,egoIDs)"]}],"inputgroup":[{"title":"","inputs":[{"name":"capsuleListObj","purpose":"Dynamic capsule list","htmlid":"mw_f0d43126-ad8f-4f9d-9f64-3da4f2aed707","value":["dynamicCapsuleList object","dynamicCapsuleList3D object"]},{"name":"egoIDs","purpose":"IDs of ego bodies","htmlid":"mw_18c25b7a-96f2-4b0c-9558-a4f117346336","value":["vector of positive integers"]}]}],"outputs":[{"name":"status","purpose":"Result of removing ego bodies","htmlid":"mw_17f0aef5-1228-4aeb-aa87-ea1dea9eeceb","value":["N-element column vector"]}],"examples":[{"url":"dynamiccapsulelist.removeego.html#mw_08afdf9b-084e-40a3-9614-e0e9f1f151fc","open_command":"openExample('nav\/CreateAndModifyCapsuleBasedEgoBodiesExample')","title":"Create and Modify Capsule-Based Ego Bodies"}],"seealso":[{"url":"dynamiccapsulelist.html","name":"dynamicCapsuleList"},{"url":"dynamiccapsulelist3d.html","name":"dynamicCapsuleList3D"},{"url":"dynamiccapsulelist.addego.html","name":"addEgo"},{"url":"dynamiccapsulelist.addobstacle.html","name":"addObstacle"},{"url":"dynamiccapsulelist.checkcollision.html","name":"checkCollision"},{"url":"dynamiccapsulelist.egogeometry.html","name":"egoGeometry"},{"url":"dynamiccapsulelist.egopose.html","name":"egoPose"},{"url":"dynamiccapsulelist.obstaclegeometry.html","name":"obstacleGeometry"},{"url":"dynamiccapsulelist.obstaclepose.html","name":"obstaclePose"},{"url":"dynamiccapsulelist.removeobstacle.html","name":"removeObstacle"},{"url":"dynamiccapsulelist.show.html","name":"show"},{"url":"dynamiccapsulelist.updateegogeometry.html","name":"updateEgoGeometry"},{"url":"dynamiccapsulelist.updateegopose.html","name":"updateEgoPose"},{"url":"dynamiccapsulelist.updateobstaclegeometry.html","name":"updateObstacleGeometry"},{"url":"dynamiccapsulelist.updateobstaclepose.html","name":"updateObstaclePose"}]},{"href":"ref\/dynamiccapsulelist.removeobstacle.html","refentity":[{"type":"function","name":"removeObstacle","fcntype":"instancemethod"},{"type":"method","name":"dynamicCapsuleList.removeObstacle","fcntype":"instancemethod"},{"type":"method","name":"dynamicCapsuleList3D.removeObstacle","fcntype":"instancemethod"}],"refpurpose":"Remove obstacles from capsule list","introduced":"R2020b","description":"This MATLAB function removes obstacles with the specified IDs from the dynamic capsule list.","syntaxgroup":[{"title":"","syntax":["removeObstacle(capsuleListObj,obstacleIDs)","status = removeObstacle(capsuleListObj,obstacleIDs)"]}],"inputgroup":[{"title":"","inputs":[{"name":"capsuleListObj","purpose":"Dynamic capsule list","htmlid":"mw_485a03ad-dc6c-47e8-b738-9646e02672db","value":["dynamicCapsuleList object","dynamicCapsuleList3D object"]},{"name":"obstacleIDs","purpose":"IDs of obstacles","htmlid":"mw_69627475-d176-4305-aa85-ed86875fc1a1","value":["vector of positive integers"]}]}],"outputs":[{"name":"status","purpose":"Result of removing obstacles","htmlid":"mw_cc8d5ca6-706b-44a8-8b2f-1f8a2d502a90","value":["N-element column vector"]}],"examples":[{"url":"dynamiccapsulelist.removeobstacle.html#mw_38b572f2-95f8-47b3-8014-61bd342324ff","open_command":"openExample('nav\/CreateAndModifyCapsuleBasedObstaclesExample')","title":"Create and Modify Capsule-Based Obstacles"}],"seealso":[{"url":"dynamiccapsulelist.html","name":"dynamicCapsuleList"},{"url":"dynamiccapsulelist3d.html","name":"dynamicCapsuleList3D"},{"url":"dynamiccapsulelist.addego.html","name":"addEgo"},{"url":"dynamiccapsulelist.addobstacle.html","name":"addObstacle"},{"url":"dynamiccapsulelist.checkcollision.html","name":"checkCollision"},{"url":"dynamiccapsulelist.egogeometry.html","name":"egoGeometry"},{"url":"dynamiccapsulelist.egopose.html","name":"egoPose"},{"url":"dynamiccapsulelist.obstaclegeometry.html","name":"obstacleGeometry"},{"url":"dynamiccapsulelist.obstaclepose.html","name":"obstaclePose"},{"url":"dynamiccapsulelist.removeego.html","name":"removeEgo"},{"url":"dynamiccapsulelist.show.html","name":"show"},{"url":"dynamiccapsulelist.updateegogeometry.html","name":"updateEgoGeometry"},{"url":"dynamiccapsulelist.updateegopose.html","name":"updateEgoPose"},{"url":"dynamiccapsulelist.updateobstaclegeometry.html","name":"updateObstacleGeometry"},{"url":"dynamiccapsulelist.updateobstaclepose.html","name":"updateObstaclePose"}]},{"href":"ref\/dynamiccapsulelist.show.html","refentity":[{"type":"function","name":"show","fcntype":"instancemethod"},{"type":"method","name":"dynamicCapsuleList.show","fcntype":"instancemethod"},{"type":"method","name":"dynamicCapsuleList3D.show","fcntype":"instancemethod"}],"refpurpose":"Display ego bodies and obstacles in environment","introduced":"R2020b","description":"This MATLAB function displays the initial state of all ego bodies and obstacles in the specified capsule list, and returns the axes handle of the plot.","syntaxgroup":[{"title":"","syntax":["ax = show(capsuleListObj)","ax = show(capsuleListObj,Name,Value)"]}],"inputgroup":[{"title":"","inputs":[{"name":"capsuleListObj","purpose":"Dynamic capsule list","htmlid":"mw_15e4d07e-3d0e-475c-8250-34798de17959","value":["dynamicCapsuleList object","dynamicCapsuleList3D object"]}]},{"namevaluepairs":[{"title":"","inputs":[{"name":"Parent","purpose":"Parent axes to plot on","htmlid":"mw_00b799f7-3906-4eb3-b039-03da12276a32","value":["gca","Axes handle"],"defaultvalue":"gca"},{"name":"FastUpdate","purpose":"Perform fast update to existing plot","htmlid":"mw_fc1e35b3-8b8b-4b8c-9d3a-99fcb18d35a8","value":["false or 0","true or 1"],"defaultvalue":"false or 0"},{"name":"TimeStep","purpose":"Time steps to display","htmlid":"mw_c322d7ba-7ed3-49af-bb0d-6b696daa962c","value":["1","numeric vector"],"defaultvalue":"1"},{"name":"ShowCollisions","purpose":"Check for and highlight collisions in display","htmlid":"mw_82d7811c-3002-4998-bd72-1695c510e5bb","value":["false or 0","true or 1"],"defaultvalue":"false or 0"},{"name":"EgoIDs","purpose":"Ego IDs to display","htmlid":"mw_9a93355e-af60-4ec1-ba13-2d8d243f3088","value":["vector of positive integers"]},{"name":"ObstacleIDs","purpose":"Obstacle IDs to display","htmlid":"mw_0511c520-c83f-457f-a70a-d97d79e34af9","value":["vector of positive integers"]}]}]}],"outputs":[{"name":"ax","purpose":"Parent axes of dynamic capsule list plot","htmlid":"mw_622bc164-7582-4809-b630-18af1ee3052d","value":["Axes handle"]}],"examples":[{"url":"dynamiccapsulelist.show.html#mw_fe3ed0a0-f263-4844-8e24-1ed083846397","open_command":"openExample('nav\/BuildEgoBodyPathsAndCheckCollisionsExample')","title":"Build Ego Body Paths and Check for Collisions with Obstacles"}],"seealso":[{"url":"dynamiccapsulelist.html","name":"dynamicCapsuleList"},{"url":"dynamiccapsulelist3d.html","name":"dynamicCapsuleList3D"},{"url":"dynamiccapsulelist.addego.html","name":"addEgo"},{"url":"dynamiccapsulelist.addobstacle.html","name":"addObstacle"},{"url":"dynamiccapsulelist.checkcollision.html","name":"checkCollision"},{"url":"dynamiccapsulelist.egogeometry.html","name":"egoGeometry"},{"url":"dynamiccapsulelist.egopose.html","name":"egoPose"},{"url":"dynamiccapsulelist.obstaclegeometry.html","name":"obstacleGeometry"},{"url":"dynamiccapsulelist.obstaclepose.html","name":"obstaclePose"},{"url":"dynamiccapsulelist.removeego.html","name":"removeEgo"},{"url":"dynamiccapsulelist.removeobstacle.html","name":"removeObstacle"},{"url":"dynamiccapsulelist.updateegogeometry.html","name":"updateEgoGeometry"},{"url":"dynamiccapsulelist.updateegopose.html","name":"updateEgoPose"},{"url":"dynamiccapsulelist.updateobstaclegeometry.html","name":"updateObstacleGeometry"},{"url":"dynamiccapsulelist.updateobstaclepose.html","name":"updateObstaclePose"}]},{"href":"ref\/dynamiccapsulelist.updateegogeometry.html","refentity":[{"type":"function","name":"updateEgoGeometry","fcntype":"instancemethod"},{"type":"method","name":"dynamicCapsuleList.updateEgoGeometry","fcntype":"instancemethod"},{"type":"method","name":"dynamicCapsuleList3D.updateEgoGeometry","fcntype":"instancemethod"}],"refpurpose":"Update geometric properties of ego bodies","introduced":"R2020b","description":"This MATLAB function updates geometry parameters for the specified ego bodies in the capsule list.","syntaxgroup":[{"title":"","syntax":["updateEgoGeometry(capsuleListObj,egoIDs,geomStruct)","status = updateEgoGeometry(capsuleListObj,egoIDs,geomStruct)"]}],"inputgroup":[{"title":"","inputs":[{"name":"capsuleListObj","purpose":"Dynamic capsule list","htmlid":"mw_c47ce7e8-947c-4848-828c-84d7427f7769","value":["dynamicCapsuleList object","dynamicCapsuleList3D object"]},{"name":"egoIDs","purpose":"IDs of ego bodies to update","htmlid":"mw_a83b7fd9-7885-434e-b941-d21dbe2df9ae","value":["vector of positive integers"]},{"name":"geomStruct","purpose":"Geometry parameters for ego bodies","htmlid":"mw_e059965b-53e1-4248-aa90-7f83d0349d83","value":["structure","structure array"]}]}],"outputs":[{"name":"status","purpose":"Result of updating ego bodies","htmlid":"mw_90852fcb-7632-43c6-b863-0fe87022473b","value":["N-element column vector"]}],"examples":[{"url":"dynamiccapsulelist.updateegogeometry.html#mw_2454570d-2bcb-47f5-a5cf-5deb8fa5a7d8","open_command":"openExample('nav\/CreateAndModifyCapsuleBasedEgoBodiesExample')","title":"Create and Modify Capsule-Based Ego Bodies"}],"seealso":[{"url":"dynamiccapsulelist.html","name":"dynamicCapsuleList"},{"url":"dynamiccapsulelist3d.html","name":"dynamicCapsuleList3D"},{"url":"dynamiccapsulelist.addego.html","name":"addEgo"},{"url":"dynamiccapsulelist.addobstacle.html","name":"addObstacle"},{"url":"dynamiccapsulelist.checkcollision.html","name":"checkCollision"},{"url":"dynamiccapsulelist.egogeometry.html","name":"egoGeometry"},{"url":"dynamiccapsulelist.egopose.html","name":"egoPose"},{"url":"dynamiccapsulelist.obstaclegeometry.html","name":"obstacleGeometry"},{"url":"dynamiccapsulelist.obstaclepose.html","name":"obstaclePose"},{"url":"dynamiccapsulelist.removeego.html","name":"removeEgo"},{"url":"dynamiccapsulelist.removeobstacle.html","name":"removeObstacle"},{"url":"dynamiccapsulelist.show.html","name":"show"},{"url":"dynamiccapsulelist.updateegopose.html","name":"updateEgoPose"},{"url":"dynamiccapsulelist.updateobstaclegeometry.html","name":"updateObstacleGeometry"},{"url":"dynamiccapsulelist.updateobstaclepose.html","name":"updateObstaclePose"}]},{"href":"ref\/dynamiccapsulelist.updateegopose.html","refentity":[{"type":"function","name":"updateEgoPose","fcntype":"instancemethod"},{"type":"method","name":"dynamicCapsuleList.updateEgoPose","fcntype":"instancemethod"},{"type":"method","name":"dynamicCapsuleList3D.updateEgoPose","fcntype":"instancemethod"}],"refpurpose":"Update states of ego bodies","introduced":"R2020b","description":"This MATLAB function updates the states of the specified ego bodies in the capsule list.","syntaxgroup":[{"title":"","syntax":["updateEgoPose(capsuleListObj,egoIDs,poseStruct)","status = updateEgoPose(capsuleListObj,egoIDs,poseStruct)"]}],"inputgroup":[{"title":"","inputs":[{"name":"capsuleListObj","purpose":"Dynamic capsule list","htmlid":"mw_dc5735eb-25ea-41e0-81e1-4e12140d74c9","value":["dynamicCapsuleList object","dynamicCapsuleList3D object"]},{"name":"egoIDs","purpose":"IDs of ego bodies to update","htmlid":"mw_68f602dc-865f-48c7-a7f8-7d70fcde14f6","value":["vector of positive integers"]},{"name":"poseStruct","purpose":"States for ego bodies","htmlid":"mw_adbb1c7b-594f-49e0-8e97-56facf3b4a2e","value":["structure","structure array"]}]}],"outputs":[{"name":"status","purpose":"Result of updating ego bodies","htmlid":"mw_504d6530-4169-4c45-9b66-118ee417950e","value":["N-element column vector"]}],"examples":[{"url":"dynamiccapsulelist.updateegopose.html#mw_28b27d82-bb56-4aeb-b51c-480c4733c25c","open_command":"openExample('nav\/BuildEgoBodyPathsAndCheckCollisionsExample')","title":"Build Ego Body Paths and Check for Collisions with Obstacles"}],"seealso":[{"url":"dynamiccapsulelist.html","name":"dynamicCapsuleList"},{"url":"dynamiccapsulelist3d.html","name":"dynamicCapsuleList3D"},{"url":"dynamiccapsulelist.addego.html","name":"addEgo"},{"url":"dynamiccapsulelist.addobstacle.html","name":"addObstacle"},{"url":"dynamiccapsulelist.checkcollision.html","name":"checkCollision"},{"url":"dynamiccapsulelist.egogeometry.html","name":"egoGeometry"},{"url":"dynamiccapsulelist.egopose.html","name":"egoPose"},{"url":"dynamiccapsulelist.obstaclegeometry.html","name":"obstacleGeometry"},{"url":"dynamiccapsulelist.obstaclepose.html","name":"obstaclePose"},{"url":"dynamiccapsulelist.removeego.html","name":"removeEgo"},{"url":"dynamiccapsulelist.removeobstacle.html","name":"removeObstacle"},{"url":"dynamiccapsulelist.show.html","name":"show"},{"url":"dynamiccapsulelist.updateegogeometry.html","name":"updateEgoGeometry"},{"url":"dynamiccapsulelist.updateobstaclegeometry.html","name":"updateObstacleGeometry"},{"url":"dynamiccapsulelist.updateobstaclepose.html","name":"updateObstaclePose"}]},{"href":"ref\/dynamiccapsulelist.updateobstaclegeometry.html","refentity":[{"type":"function","name":"updateObstacleGeometry","fcntype":"instancemethod"},{"type":"method","name":"dynamicCapsuleList.updateObstacleGeometry","fcntype":"instancemethod"},{"type":"method","name":"dynamicCapsuleList3D.updateObstacleGeometry","fcntype":"instancemethod"}],"refpurpose":"Update geometric properties of obstacles","introduced":"R2020b","description":"This MATLAB function updates geometry parameters for the specified obstacles in the capsule list.","syntaxgroup":[{"title":"","syntax":["updateObstacleGeometry(capsuleListObj,obstacleIDs,geomStruct)","status = updateObstacleGeometry(capsuleListObj,obstacleIDs,geomStruct)"]}],"inputgroup":[{"title":"","inputs":[{"name":"capsuleListObj","purpose":"Dynamic capsule list","htmlid":"mw_1fdde0c4-3ccb-4d1e-87ac-1dd6bf7b36a6","value":["dynamicCapsuleList object","dynamicCapsuleList3D object"]},{"name":"obstacleIDs","purpose":"IDs of obstacles to update","htmlid":"mw_7f70beee-35d5-4652-ba6e-ff446010799f","value":["vector of positive integers"]},{"name":"geomStruct","purpose":"Geometry parameters for ego bodies","htmlid":"mw_787b1775-5741-4f11-8dde-85dc38c7e3ec","value":["structure","structure array"]}]}],"outputs":[{"name":"status","purpose":"Result of updating obstacles","htmlid":"mw_40a1420e-9171-4bf9-9c88-3f8595aeb565","value":["N-element column vector"]}],"examples":[{"url":"dynamiccapsulelist.updateobstaclegeometry.html#mw_a2d24ae7-94b8-4508-b9fc-309dd3b28979","open_command":"openExample('nav\/BuildEgoBodyPathsAndCheckCollisionsExample')","title":"Build Ego Body Paths and Check for Collisions with Obstacles"}],"seealso":[{"url":"dynamiccapsulelist.html","name":"dynamicCapsuleList"},{"url":"dynamiccapsulelist3d.html","name":"dynamicCapsuleList3D"},{"url":"dynamiccapsulelist.addego.html","name":"addEgo"},{"url":"dynamiccapsulelist.addobstacle.html","name":"addObstacle"},{"url":"dynamiccapsulelist.checkcollision.html","name":"checkCollision"},{"url":"dynamiccapsulelist.egogeometry.html","name":"egoGeometry"},{"url":"dynamiccapsulelist.egopose.html","name":"egoPose"},{"url":"dynamiccapsulelist.obstaclegeometry.html","name":"obstacleGeometry"},{"url":"dynamiccapsulelist.obstaclepose.html","name":"obstaclePose"},{"url":"dynamiccapsulelist.removeego.html","name":"removeEgo"},{"url":"dynamiccapsulelist.removeobstacle.html","name":"removeObstacle"},{"url":"dynamiccapsulelist.show.html","name":"show"},{"url":"dynamiccapsulelist.updateegogeometry.html","name":"updateEgoGeometry"},{"url":"dynamiccapsulelist.updateegopose.html","name":"updateEgoPose"},{"url":"dynamiccapsulelist.updateobstaclepose.html","name":"updateObstaclePose"}]},{"href":"ref\/dynamiccapsulelist.updateobstaclepose.html","refentity":[{"type":"function","name":"updateObstaclePose","fcntype":"instancemethod"},{"type":"method","name":"dynamicCapsuleList.updateObstaclePose","fcntype":"instancemethod"},{"type":"method","name":"dynamicCapsuleList3D.updateObstaclePose","fcntype":"instancemethod"}],"refpurpose":"Update states of obstacles","introduced":"R2020b","description":"This MATLAB function updates the states of the specified obstacles in the capsule list.","syntaxgroup":[{"title":"","syntax":["updateObstaclePose(capsuleListObj,obstacleIDs,poseStruct)","status = updateObstaclePose(capsuleListObj,obstacleIDs,poseStruct)"]}],"inputgroup":[{"title":"","inputs":[{"name":"capsuleListObj","purpose":"Dynamic capsule list","htmlid":"mw_12399eb9-e13a-4de3-88ef-66282cb111d3","value":["dynamicCapsuleList object","dynamicCapsuleList3D object"]},{"name":"obstacleIDs","purpose":"IDs of obstacles to update","htmlid":"mw_118c73eb-2deb-4169-8638-e7ec0a74cf8f","value":["vector of positive integers"]},{"name":"poseStruct","purpose":"States for obstacles","htmlid":"mw_491a9882-e5f0-4ff5-b677-b7637dcbb703","value":["structure","structure array"]}]}],"outputs":[{"name":"status","purpose":"Result of updating obstacles","htmlid":"mw_520bfa91-6ad5-4ca7-8f17-34745e8cc0f9","value":["N-element column vector"]}],"examples":[{"url":"dynamiccapsulelist.updateobstaclepose.html#mw_295257ba-8c2c-48a2-b097-f17356d74e12","open_command":"openExample('nav\/BuildEgoBodyPathsAndCheckCollisionsExample')","title":"Build Ego Body Paths and Check for Collisions with Obstacles"}],"seealso":[{"url":"dynamiccapsulelist.html","name":"dynamicCapsuleList"},{"url":"dynamiccapsulelist3d.html","name":"dynamicCapsuleList3D"},{"url":"dynamiccapsulelist.addego.html","name":"addEgo"},{"url":"dynamiccapsulelist.addobstacle.html","name":"addObstacle"},{"url":"dynamiccapsulelist.checkcollision.html","name":"checkCollision"},{"url":"dynamiccapsulelist.egogeometry.html","name":"egoGeometry"},{"url":"dynamiccapsulelist.egopose.html","name":"egoPose"},{"url":"dynamiccapsulelist.obstaclegeometry.html","name":"obstacleGeometry"},{"url":"dynamiccapsulelist.obstaclepose.html","name":"obstaclePose"},{"url":"dynamiccapsulelist.removeego.html","name":"removeEgo"},{"url":"dynamiccapsulelist.removeobstacle.html","name":"removeObstacle"},{"url":"dynamiccapsulelist.show.html","name":"show"},{"url":"dynamiccapsulelist.updateegogeometry.html","name":"updateEgoGeometry"},{"url":"dynamiccapsulelist.updateegopose.html","name":"updateEgoPose"},{"url":"dynamiccapsulelist.updateobstaclegeometry.html","name":"updateObstacleGeometry"}]},{"href":"ref\/dynamiccapsulelist3d.addego.html","refentity":[{"type":"function","name":"addEgo","fcntype":"instancemethod"},{"type":"method","name":"dynamicCapsuleList3D.addEgo","fcntype":"instancemethod"}],"refpurpose":"Add ego bodies to 3D capsule list","introduced":"R2020b","description":"This MATLAB function adds one or more ego bodies to the 3-D dynamic capsule list with the specified ID, state, and geometry values given in egoStruct.","syntaxgroup":[{"title":"","syntax":["addEgo(capsuleListObj,egoStruct)","status = addEgo(capsuleListObj,egoStruct)"]}],"inputgroup":[{"title":"","inputs":[{"name":"capsuleListObj","purpose":"Dynamic capsule list","htmlid":"mw_b65ac9e7-1159-4db2-b1f6-83ad7aa9e42c","value":["dynamicCapsuleList3D object"]},{"name":"egoStruct","purpose":"Ego body parameters","htmlid":"mw_fa3b54b5-7e79-4455-9b76-9f14be501d4a","value":["structure","structure array"]}]}],"outputs":[{"name":"status","purpose":"Result of adding ego bodies","htmlid":"mw_14edb8c2-3884-4e54-8275-a374f919bb67","value":["N-element column vector"]}],"examples":[{"url":"dynamiccapsulelist3d.addego.html#mw_ed9d2778-eec1-4f6d-9c1e-9e12931611cb","open_command":"openExample('nav\/Build3DEgoBodyPathsAndCheckForCollisionsWith3DObstaclesExample')","title":"Build 3-D Ego Body Paths and Check for Collisions with 3-D Obstacles"}],"seealso":[{"url":"dynamiccapsulelist.html","name":"dynamicCapsuleList"},{"url":"dynamiccapsulelist3d.html","name":"dynamicCapsuleList3D"},{"url":"dynamiccapsulelist3d.addobstacle.html","name":"addObstacle"},{"url":"dynamiccapsulelist.checkcollision.html","name":"checkCollision"},{"url":"dynamiccapsulelist.egogeometry.html","name":"egoGeometry"},{"url":"dynamiccapsulelist.egopose.html","name":"egoPose"},{"url":"dynamiccapsulelist.obstaclegeometry.html","name":"obstacleGeometry"},{"url":"dynamiccapsulelist.obstaclepose.html","name":"obstaclePose"},{"url":"dynamiccapsulelist.removeego.html","name":"removeEgo"},{"url":"dynamiccapsulelist.removeobstacle.html","name":"removeObstacle"},{"url":"dynamiccapsulelist.show.html","name":"show"},{"url":"dynamiccapsulelist.updateegogeometry.html","name":"updateEgoGeometry"},{"url":"dynamiccapsulelist.updateegopose.html","name":"updateEgoPose"},{"url":"dynamiccapsulelist.updateobstaclegeometry.html","name":"updateObstacleGeometry"},{"url":"dynamiccapsulelist.updateobstaclepose.html","name":"updateObstaclePose"}]},{"href":"ref\/dynamiccapsulelist3d.addobstacle.html","refentity":[{"type":"function","name":"addObstacle","fcntype":"instancemethod"},{"type":"method","name":"dynamicCapsuleList3D.addObstacle","fcntype":"instancemethod"}],"refpurpose":"Add obstacles to 3-D capsule list","introduced":"R2020b","description":"This MATLAB function adds one or more obstacles to the 3-D dynamic capsule list with the specified ID, state, and geometry values given in obstacleStruct.","syntaxgroup":[{"title":"","syntax":["addObstacle(capsuleListObj,obstacleStruct)","status = addObstacle(capsuleListObj,obstacleStruct)"]}],"inputgroup":[{"title":"","inputs":[{"name":"capsuleListObj","purpose":"Dynamic capsule-list","htmlid":"mw_d4e82d52-912b-4b94-a8c7-690045d622c9","value":["dynamicCapsuleList3D object"]}]}],"outputs":[{"name":"obstacleStruct","purpose":"Obstacle parameters","htmlid":"mw_13a31c32-9ab1-453c-9d7a-d1bee5867e2f","value":["structure","structure array"]},{"name":"status","purpose":"Result of adding obstacles","htmlid":"mw_9976e962-2adb-4b30-b0be-d19570b69599","value":["N-element column vector"]}],"examples":[{"url":"dynamiccapsulelist3d.addobstacle.html#mw_0afa4fda-fa0e-477f-8e71-94f8e89f7cf7_sep_mw_3891115b-5a63-4721-beff-cc5e81099d0d","open_command":"openExample('nav\/Build3DEgoBodyPathsAndCheckForCollisionsWith3DObstaclesExample')","title":"Build 3-D Ego Body Paths and Check for Collisions with 3-D Obstacles"}],"seealso":[{"url":"dynamiccapsulelist.html","name":"dynamicCapsuleList"},{"url":"dynamiccapsulelist3d.html","name":"dynamicCapsuleList3D"},{"url":"dynamiccapsulelist3d.addego.html","name":"addEgo"},{"url":"dynamiccapsulelist.checkcollision.html","name":"checkCollision"},{"url":"dynamiccapsulelist.egogeometry.html","name":"egoGeometry"},{"url":"dynamiccapsulelist.egopose.html","name":"egoPose"},{"url":"dynamiccapsulelist.obstaclegeometry.html","name":"obstacleGeometry"},{"url":"dynamiccapsulelist.obstaclepose.html","name":"obstaclePose"},{"url":"dynamiccapsulelist.removeego.html","name":"removeEgo"},{"url":"dynamiccapsulelist.removeobstacle.html","name":"removeObstacle"},{"url":"dynamiccapsulelist.show.html","name":"show"},{"url":"dynamiccapsulelist.updateegogeometry.html","name":"updateEgoGeometry"},{"url":"dynamiccapsulelist.updateegopose.html","name":"updateEgoPose"},{"url":"dynamiccapsulelist.updateobstaclegeometry.html","name":"updateObstacleGeometry"},{"url":"dynamiccapsulelist.updateobstaclepose.html","name":"updateObstaclePose"}]},{"href":"ref\/dynamiccapsulelist3d.html","refentity":[{"type":"object","name":"dynamicCapsuleList3D"},{"type":"function","name":"dynamicCapsuleList3D","fcntype":"constructor"}],"refpurpose":"Dynamic capsule-based obstacle list","introduced":"R2020b","description":"The dynamicCapsuleList3D object manages two lists of capsule-based collision objects in 3-D space.","syntaxgroup":[{"title":"","syntax":["obstacleList = dynamicCapsuleList3D"]}],"classpropertygroup":[{"classproperty":[{"name":"MaxNumSteps","purpose":"Maximum number of time steps in obstacle list","htmlid":"mw_d7ea9198-6f25-4304-8e42-bc141e587bda","value":["31","positive integer"],"defaultvalue":"31"},{"name":"EgoIDs","readonly":true,"purpose":"List of IDs for ego bodies","htmlid":"mw_7ac8abad-5c03-4285-88c2-4030607e654a","value":["vector of positive integers"]},{"name":"ObstacleIDs","readonly":true,"purpose":"IDs for obstacles","htmlid":"mw_4275c5d2-a9ca-43ab-a47b-bbc2c3a0b5f7","value":["vector of positive integers"]},{"name":"NumObstacles","readonly":true,"purpose":"Number of obstacles in list","htmlid":"mw_12122010-000a-4ee3-ac54-6908b340866e","value":["integer"]},{"name":"NumEgos","readonly":true,"purpose":"Number of ego bodies in list","htmlid":"mw_d9acd75a-e758-4fc7-b03b-6cd5a6a381e7","value":["integer"]}]}],"objectfunctions":[{"title":"","functions":[{"name":"addEgo","url":"dynamiccapsulelist3d.addego.html","description":"Add ego bodies to 3D capsule list"},{"name":"addObstacle","url":"dynamiccapsulelist3d.addobstacle.html","description":"Add obstacles to 3-D capsule list"},{"name":"checkCollision","url":"dynamiccapsulelist.checkcollision.html","description":"Check for collisions between ego bodies and obstacles"},{"name":"egoGeometry","url":"dynamiccapsulelist.egogeometry.html","description":"Geometric properties of ego bodies"},{"name":"egoPose","url":"dynamiccapsulelist.egopose.html","description":"Poses of ego bodies"},{"name":"obstacleGeometry","url":"dynamiccapsulelist.obstaclegeometry.html","description":"Geometric properties of obstacles"},{"name":"obstaclePose","url":"dynamiccapsulelist.obstaclepose.html","description":"Poses of obstacles"},{"name":"removeEgo","url":"dynamiccapsulelist.removeego.html","description":"Remove ego bodies from capsule list"},{"name":"removeObstacle","url":"dynamiccapsulelist.removeobstacle.html","description":"Remove obstacles from capsule list"},{"name":"show","url":"dynamiccapsulelist.show.html","description":"Display ego bodies and obstacles in environment"},{"name":"updateEgoGeometry","url":"dynamiccapsulelist.updateegogeometry.html","description":"Update geometric properties of ego bodies"},{"name":"updateEgoPose","url":"dynamiccapsulelist.updateegopose.html","description":"Update states of ego bodies"},{"name":"updateObstacleGeometry","url":"dynamiccapsulelist.updateobstaclegeometry.html","description":"Update geometric properties of obstacles"},{"name":"updateObstaclePose","url":"dynamiccapsulelist.updateobstaclepose.html","description":"Update states of obstacles"}]}],"examples":[{"url":"dynamiccapsulelist3d.html#mw_26ebb8ca-f2ac-4135-9162-cd1f9d5026c9","open_command":"openExample('nav\/Build3DEgoBodyPathsAndCheckForCollisionsWith3DObstaclesExample')","title":"Build 3-D Ego Body Paths and Check for Collisions with 3-D Obstacles"}],"seealso":[{"url":"dynamiccapsulelist.html","name":"dynamicCapsuleList"},{"url":"dynamiccapsulelist3d.addego.html","name":"addEgo"},{"url":"dynamiccapsulelist3d.addobstacle.html","name":"addObstacle"},{"url":"dynamiccapsulelist.checkcollision.html","name":"checkCollision"},{"url":"dynamiccapsulelist.egogeometry.html","name":"egoGeometry"},{"url":"dynamiccapsulelist.egopose.html","name":"egoPose"},{"url":"dynamiccapsulelist.obstaclegeometry.html","name":"obstacleGeometry"},{"url":"dynamiccapsulelist.obstaclepose.html","name":"obstaclePose"},{"url":"dynamiccapsulelist.removeego.html","name":"removeEgo"},{"url":"dynamiccapsulelist.removeobstacle.html","name":"removeObstacle"},{"url":"dynamiccapsulelist.show.html","name":"show"},{"url":"dynamiccapsulelist.updateegogeometry.html","name":"updateEgoGeometry"},{"url":"dynamiccapsulelist.updateegopose.html","name":"updateEgoPose"},{"url":"dynamiccapsulelist.updateobstaclegeometry.html","name":"updateObstacleGeometry"},{"url":"dynamiccapsulelist.updateobstaclepose.html","name":"updateObstaclePose"}]},{"href":"ref\/ecompass.html","refentity":[{"type":"function","name":"ecompass","fcntype":"simple"}],"refpurpose":"Orientation from magnetometer and accelerometer readings","introduced":"R2018b","description":"The ecompass function computes the orientation of a sensor using magnetometer and accelerometer readings to rotate quantities from a global coordinate system to a body coordinate system.","syntaxgroup":[{"title":"","syntax":["orientation = ecompass(accelerometerReading,magnetometerReading)","orientation = ecompass(accelerometerReading,magnetometerReading,orientationFormat)","orientation = ecompass(accelerometerReading,magnetometerReading,orientationFormat,'ReferenceFrame',RF)"]}],"inputgroup":[{"title":"","inputs":[{"name":"accelerometerReading","purpose":"Accelerometer readings in sensor body coordinate system (m\/s^{2})","htmlid":"mw_13399783-e8e8-4c5d-b605-f19d01e0a444","value":["N-by-3 matrix"]},{"name":"magnetometerReading","purpose":"Magnetometer readings in sensor body coordinate system (µT)","htmlid":"mw_b0239a26-4776-4b1a-850a-cafecf1d24f7","value":["N-by-3 matrix"]},{"name":"orientationFormat","purpose":"Format used to describe orientation","htmlid":"mw_55a75a75-2bfc-4890-9d2d-42e3258c71e5","value":["'quaternion'","'rotmat'"],"defaultvalue":"'quaternion'"},{"name":"RF","purpose":"Reference frame of the orientation output","htmlid":"mw_0a94bb0f-aab5-450d-bcdb-a1fa3ebeee1f","value":["'NED'","'ENU'"],"defaultvalue":"'NED'"}]}],"outputs":[{"name":"orientation","purpose":"Orientation that rotates quantities from global coordinate system to sensor body coordinate system","htmlid":"mw_300f9b99-ca03-4e15-bc00-e691b253dd08","value":["N-by-1 vector of quaternions","3-by-3-by-N array"]}],"examples":[{"url":"ecompass.html#mw_ddff2280-62f7-4f54-a87b-142762ef8d27","open_command":"openExample('shared_positioning\/DetermineDeclinationOfBostonExample')","title":"Determine Declination of Boston"},{"url":"ecompass.html#mw_05ee0b37-bdcf-4029-a265-903d20334345","open_command":"openExample('shared_positioning\/ReturnRotationMatrixExample')","title":"Return Rotation Matrix"},{"url":"ecompass.html#mw_e48594f5-48b4-4d90-93d7-760514653ab3","open_command":"openExample('shared_positioning\/DetermineGravityVectorExample')","title":"Determine Gravity Vector"},{"url":"ecompass.html#mw_9648b12b-962c-452a-b40f-d74fe083d572","open_command":"openExample('shared_positioning\/TrackSpinningPlatformExample')","title":"Track Spinning Platform"}],"seealso":[{"url":"ahrsfilter-system-object.html","name":"ahrsfilter"},{"url":"imufilter-system-object.html","name":"imufilter"}]},{"href":"ref\/ecompassblock.html","refentity":[{"type":"block","name":"ecompass"}],"refpurpose":"Compute orientation from accelerometer and magnetometer readings","introduced":"R2024a","description":"The ecompass Simulink block computes orientation using accelerometer and magnetometer readings.","icon":{"fileref":"ref\/ecompassfig.png","alt":"ecompass Block"},"libraries":["Sensor Fusion and Tracking Toolbox \/ Multisensor Positioning \/ Navigation Filters","Navigation Toolbox \/ Multisensor Positioning \/ Navigation Filters"],"inputgroup":[{"title":"","inputs":[{"name":"Accel","purpose":"Accelerometer readings","htmlid":"mw_502d3c99-d026-4f0a-ac8a-662fd6801ee1","value":["N-by-3 matrix of real scalar"]},{"name":"Mag","purpose":"Magnetometer readings","htmlid":"mw_33a9476f-2755-4093-956c-c002f470a09a","value":["N-by-3 matrix of real scalar"]}]}],"outputs":[{"name":"Orientation","purpose":"Orientation that rotates quantities from global coordinate system to sensor body coordinate system","htmlid":"mw_e6b6f617-186e-4b5d-a7d2-c3fb5a7d0aa7","value":["N-by-4 matrix of quaternions","3-by-3-by-N array"]}],"parameters":[{"name":"Reference frame","purpose":"Navigation reference frame","htmlid":"mw_4d912b46-97d5-49fe-8beb-fb38e3cc663d","value":["NED","ENU"],"defaultvalue":"NED"},{"name":"Orientation format","purpose":"Format used to describe orientation","htmlid":"mw_e05a7f05-7199-448f-a6fb-45bdcacb24d5","value":["quaternion","Rotation matrix"],"defaultvalue":"quaternion"},{"name":"Simulate using","purpose":"Type of simulation to run","htmlid":"mw_46786fc5-dba6-4e06-ad5b-15d5c0e11fe8","value":["Interpreted execution","Code generation"],"defaultvalue":"Interpreted execution"}],"seealso":[{"url":"ecompass.html","name":"ecompass"},{"url":"imu.html","name":"IMU"},{"url":"ahrs.html","name":"AHRS"},{"url":"complementaryfilter.html","name":"Complementary Filter"},{"url":"imufilter.html","name":"IMU Filter"}]},{"href":"ref\/ekfslam.copy.html","refentity":[{"type":"function","name":"copy","fcntype":"instancemethod"},{"type":"method","name":"ekfSLAM.copy","fcntype":"instancemethod"}],"refpurpose":"Create deep copy of EKF SLAM object","introduced":"R2021b","description":"This MATLAB function creates a deep copy of slamObj with the same properties.","syntaxgroup":[{"title":"","syntax":["newSlamObj = copy(slamObj)"]}],"inputgroup":[{"title":"","inputs":[{"name":"slamObj","purpose":"EKF SLAM object","htmlid":"mw_b49bf765-76fc-4198-86f0-b5c0aa608cb7","value":["ekfSLAM object"]}]}],"outputs":[{"name":"newSlamObj","purpose":"Copy of EKF SLAM object","htmlid":"mw_dd6186f1-f3c3-49e4-9f20-60708d472e26","value":["ekfSLAM object"]}],"examples":[{"url":"ekfslam.copy.html#mw_da2d0789-5b45-4426-9497-686b5e736030","open_command":"openExample('nav\/RemoveLandmarkFromEkfSLAMObjectExample')","title":"Remove Landmark from ekfSLAM Object"}],"seealso":[{"url":"ekfslam.html","name":"ekfSLAM"},{"url":"lidarslam.html","name":"lidarSLAM"},{"url":"ekfslam.correct.html","name":"correct"},{"url":"ekfslam.landmarkinfo.html","name":"landmarkInfo"},{"url":"ekfslam.posehistory.html","name":"poseHistory"},{"url":"ekfslam.predict.html","name":"predict"},{"url":"ekfslam.removelandmark.html","name":"removeLandmark"},{"url":"ekfslam.reset.html","name":"reset"}]},{"href":"ref\/ekfslam.correct.html","refentity":[{"type":"function","name":"correct","fcntype":"instancemethod"},{"type":"method","name":"ekfSLAM.correct","fcntype":"instancemethod"}],"refpurpose":"Correct state and state error covariance","introduced":"R2021b","description":"This MATLAB function corrects the state and its associated state covariance based on the measurement and measurementCovariance at the current time step.","syntaxgroup":[{"title":"","syntax":["[associations,newLandmark] = correct(slamObj,measurement,measurementCovariance)","[associations,newLandmark] = correct(slamObj,measurement,measurementCovariance,varargin)"]}],"inputgroup":[{"title":"","inputs":[{"name":"slamObj","purpose":"EKF SLAM object","htmlid":"mw_4e636a08-277b-4f36-87a0-ab2b8aac6e49","value":["ekfSLAM object"]},{"name":"measurement","purpose":"Measurements of landmarks in environment","htmlid":"mw_cf7dbb80-a63a-4ac6-ad08-783d583c5ae5","value":["N-by-K matrix"]},{"name":"measurementCovariance","purpose":"Covariance of measurements","htmlid":"mw_a570b09b-df85-4670-b08e-bc602b4471f7","value":["K-element vector","N*K-by-N*K matrix"]},{"name":"varargin","purpose":"Variable-length input argument list","htmlid":"mw_dd31d1dc-0667-4070-8264-78ab702f1be8","value":["comma-separated list"]}]}],"outputs":[{"name":"associations","purpose":"List of associations of landmarks to measurements","htmlid":"mw_fc208e0d-6e4f-4fa2-98ed-14847bb998b0","value":["P-by-2 matrix"]},{"name":"newLandmark","purpose":"List of indices of measurements that qualify as new landmarks","htmlid":"mw_a30d53f3-d5be-4ba2-bb7f-b75d05c67938","value":["Q-element vector"]}],"examples":[{"url":"ekfslam.correct.html#mw_a8fda4d1-98a8-4902-8beb-949f5e9103a5","open_command":"openExample('nav\/PerformLandmarkSLAMUsingExtendedKalmanFilterExample')","title":"Perform Landmark SLAM Using Extended Kalman Filter"}],"seealso":[{"url":"ekfslam.html","name":"ekfSLAM"},{"url":"ekfslam.landmarkinfo.html","name":"landmarkInfo"},{"url":"ekfslam.posehistory.html","name":"poseHistory"},{"url":"ekfslam.predict.html","name":"predict"},{"url":"ekfslam.removelandmark.html","name":"removeLandmark"},{"url":"ekfslam.reset.html","name":"reset"}]},{"href":"ref\/ekfslam.html","refentity":[{"type":"object","name":"ekfSLAM"},{"type":"function","name":"ekfSLAM","fcntype":"constructor"}],"refpurpose":"Perform simultaneous localization and mapping using extended Kalman filter","introduced":"R2021b","description":"The ekfSLAM object performs simultaneous localization and mapping (SLAM) using an extended Kalman filter (EKF).","syntaxgroup":[{"title":"","syntax":["slamObj = ekfSLAM","slamObj = ekfSLAM(Name,Value)","slamObj = ekfSLAM('MaxNumLandmark',N,Name,Value)","slamObj = ekfSLAM('MaxNumLandmark',N,'MaxNumPoseStored',M,Name,Value)"]}],"classpropertygroup":[{"classproperty":[{"name":"State","purpose":"State vector","htmlid":"mw_d6645b10-a0d3-4818-9cd8-d85112b57e90","value":["[0; 0; 0]","M-element column vector"],"defaultvalue":"[0; 0; 0]"},{"name":"StateCovariance","purpose":"State estimation error covariance","htmlid":"mw_3fddb8d2-52d6-4608-bb83-192736e33fae","value":["eye(3)","M-by-M matrix"],"defaultvalue":"eye(3)"},{"name":"StateTransitionFcn","purpose":"State transition function","htmlid":"mw_6e69a768-b96e-4297-8f70-b00a4188ea98","value":["nav.algs.velocityMotionModel","function handle"],"defaultvalue":"nav.algs.velocityMotionModel"},{"name":"MeasurementFcn","purpose":"Measurement function","htmlid":"mw_da54e037-4b9e-4b57-bb98-e976b45536f6","value":["nav.algs.rangeBearingMeasurement","function handle"],"defaultvalue":"nav.algs.rangeBearingMeasurement"},{"name":"InverseMeasurementFcn","purpose":"Inverse measurement function","htmlid":"mw_a071fa4f-6dcc-41c3-91a1-5f8a5f3fd091","value":["nav.algs.rangeBearingInverseMeasurement","function handle"],"defaultvalue":"nav.algs.rangeBearingInverseMeasurement"},{"name":"DataAssociationFcn","purpose":"Data association function","htmlid":"mw_d9bd6c3d-21ae-4d22-a39c-faeff0ba1cd9","value":["nav.algs.associateMaxLikelihood","function handle"],"defaultvalue":"nav.algs.associateMaxLikelihood"},{"name":"ProcessNoise","purpose":"Process noise covariance","htmlid":"mw_e10fc186-28d9-4953-827d-5f43d9d785c3","value":["eye(2)","W-by-W matrix"],"defaultvalue":"eye(2)"},{"name":"MaxAssociationRange","purpose":"Maximum range for landmarks to be checked for association","htmlid":"mw_380a3296-abc7-40da-8ecc-c499e9c4110e","value":["inf","positive integer"],"defaultvalue":"inf"},{"name":"MaxNumLandmark","purpose":"Maximum number of landmarks in state vector","htmlid":"mw_a7e3bfbb-1db3-4633-92d5-1341550b4809","value":["inf","positive integer"],"defaultvalue":"inf"},{"name":"MaxNumPoseStored","purpose":"Maximum size of pose history","htmlid":"mw_41295cad-9c82-4089-98cb-2e9845efceac","value":["inf","positive integer"],"defaultvalue":"inf"}]}],"objectfunctions":[{"title":"","functions":[{"name":"copy","url":"ekfslam.copy.html","description":"Create deep copy of EKF SLAM object"},{"name":"correct","url":"ekfslam.correct.html","description":"Correct state and state error covariance"},{"name":"landmarkInfo","url":"ekfslam.landmarkinfo.html","description":"Retrieve landmark information"},{"name":"poseHistory","url":"ekfslam.posehistory.html","description":"Retrieve corrected and predicted pose history"},{"name":"predict","url":"ekfslam.predict.html","description":"Predict state and state error covariance"},{"name":"removeLandmark","url":"ekfslam.removelandmark.html","description":"Remove landmark from state vector"},{"name":"reset","url":"ekfslam.reset.html","description":"Reset state and state estimation error covariance"}]}],"examples":[{"url":"ekfslam.html#mw_352c2229-90d2-4b94-bc3a-f71d5527771e","open_command":"openExample('nav\/PerformLandmarkSLAMUsingExtendedKalmanFilterExample')","title":"Perform Landmark SLAM Using Extended Kalman Filter"}],"seealso":[{"url":"lidarslam.html","name":"lidarSLAM"},{"url":"ekfslam.copy.html","name":"copy"},{"url":"ekfslam.correct.html","name":"correct"},{"url":"ekfslam.landmarkinfo.html","name":"landmarkInfo"},{"url":"ekfslam.posehistory.html","name":"poseHistory"},{"url":"ekfslam.predict.html","name":"predict"},{"url":"ekfslam.removelandmark.html","name":"removeLandmark"},{"url":"ekfslam.reset.html","name":"reset"}]},{"href":"ref\/ekfslam.landmarkinfo.html","refentity":[{"type":"function","name":"landmarkInfo","fcntype":"instancemethod"},{"type":"method","name":"ekfSLAM.landmarkInfo","fcntype":"instancemethod"}],"refpurpose":"Retrieve landmark information","introduced":"R2021b","description":"This MATLAB functionretrieves landmark information from the ekfSLAM object as a table that contains each landmark number along with its position and state index.","syntaxgroup":[{"title":"","syntax":["Info = landmarkInfo(slamObj)","Info = landmarkInfo(slamObj,landmarkIndex)"]}],"inputgroup":[{"title":"","inputs":[{"name":"slamObj","purpose":"EKF SLAM object","htmlid":"mw_0c5e9d3b-c87f-4f3f-8137-addb7eb784ac","value":["ekfSLAM object"]},{"name":"landmarkIndex","purpose":"Indices of landmarks for which to retrieve information","htmlid":"mw_c80ab098-82a4-4ad6-9b87-32579335faa7","value":["N-element column vector","N-by-2 matrix"]}]}],"outputs":[{"name":"Info","purpose":"Landmark information","htmlid":"mw_4bd39157-06aa-4cc2-be55-45211a18ae36","value":["table"]}],"examples":[{"url":"ekfslam.landmarkinfo.html#mw_7f30e746-7e64-4b58-b43b-84fd6bb86f10","open_command":"openExample('nav\/RetrieveAllLandmarkInformationFromEkfSLAMObjectExample')","title":"Retrieve All Landmark Information from ekfSLAM Object"}],"seealso":[{"url":"ekfslam.html","name":"ekfSLAM"},{"url":"ekfslam.correct.html","name":"correct"},{"url":"ekfslam.posehistory.html","name":"poseHistory"},{"url":"ekfslam.predict.html","name":"predict"},{"url":"ekfslam.removelandmark.html","name":"removeLandmark"},{"url":"ekfslam.reset.html","name":"reset"}]},{"href":"ref\/ekfslam.posehistory.html","refentity":[{"type":"function","name":"poseHistory","fcntype":"instancemethod"},{"type":"method","name":"ekfSLAM.poseHistory","fcntype":"instancemethod"}],"refpurpose":"Retrieve corrected and predicted pose history","introduced":"R2021b","description":"This MATLAB function retrieves the corrected and predicted pose history up to the current pose.","syntaxgroup":[{"title":"","syntax":["[correctedPose,predictedPose] = poseHistory(slamObj)"]}],"inputgroup":[{"title":"","inputs":[{"name":"slamObj","purpose":"EKF SLAM object","htmlid":"mw_6e767b7b-cde0-4dcc-8c33-82cef903bcfa","value":["ekfSLAM object"]}]}],"outputs":[{"name":"correctedPose","purpose":"Corrected poses","htmlid":"mw_39b5a748-8903-4ea0-9254-bc3c9c9e02a5","value":["M-by-3 matrix"]},{"name":"predictedPose","purpose":"Predicted poses","htmlid":"mw_40bd5d0f-def2-4f9b-afea-5f8726dde9db","value":["M-by-3 matrix"]}],"examples":[{"url":"ekfslam.posehistory.html#mw_37d49b41-b246-4da9-a8d5-f2f6404dc819","open_command":"openExample('nav\/RetrievePoseHistoryFromEkfSLAMObjectExample')","title":"Retrieve Pose History from ekfSLAM Object"}],"seealso":[{"url":"ekfslam.html","name":"ekfSLAM"},{"url":"ekfslam.correct.html","name":"correct"},{"url":"ekfslam.landmarkinfo.html","name":"landmarkInfo"},{"url":"ekfslam.predict.html","name":"predict"},{"url":"ekfslam.removelandmark.html","name":"removeLandmark"},{"url":"ekfslam.reset.html","name":"reset"}]},{"href":"ref\/ekfslam.predict.html","refentity":[{"type":"function","name":"predict","fcntype":"instancemethod"},{"type":"method","name":"ekfSLAM.predict","fcntype":"instancemethod"}],"refpurpose":"Predict state and state error covariance","introduced":"R2021b","description":"This MATLAB function predicts the state and state error covariance.","syntaxgroup":[{"title":"","syntax":["predict(slamObj,controlInput)","predict(slamObj,controlInput,varargin)"]}],"inputgroup":[{"title":"","inputs":[{"name":"slamObj","purpose":"EKF SLAM object","htmlid":"mw_f929d017-600d-4c8e-9863-c2eec7665771","value":["ekfSLAM object"]},{"name":"controlInput","purpose":"Controller input required to propagate state","htmlid":"mw_b7e33368-c87e-42c2-ac7e-b96b8ddc8bd8","value":["N-element vector"]},{"name":"varargin","purpose":"Variable-length input argument list","htmlid":"mw_0dc9a924-1d2a-46ea-b52d-9a22011dbcb6","value":["comma-separated list"]}]}],"examples":[{"url":"ekfslam.predict.html#mw_ce96d8c2-ef80-4db2-8988-0543af16acd6","open_command":"openExample('nav\/PerformLandmarkSLAMUsingExtendedKalmanFilterExample')","title":"Perform Landmark SLAM Using Extended Kalman Filter"}],"seealso":[{"url":"ekfslam.html","name":"ekfSLAM"},{"url":"ekfslam.correct.html","name":"correct"},{"url":"ekfslam.landmarkinfo.html","name":"landmarkInfo"},{"url":"ekfslam.posehistory.html","name":"poseHistory"},{"url":"ekfslam.removelandmark.html","name":"removeLandmark"},{"url":"ekfslam.reset.html","name":"reset"}]},{"href":"ref\/ekfslam.removelandmark.html","refentity":[{"type":"function","name":"removeLandmark","fcntype":"instancemethod"},{"type":"method","name":"ekfSLAM.removeLandmark","fcntype":"instancemethod"}],"refpurpose":"Remove landmark from state vector","introduced":"R2021b","description":"This MATLAB function removes the landmarks at the specified indices landmarkIndex from the state vector, along with associated covariances from the state covariance matrix.","syntaxgroup":[{"title":"","syntax":["removeLandmark(slamObj,landmarkIndex)"]}],"inputgroup":[{"title":"","inputs":[{"name":"slamObj","purpose":"EKF SLAM object","htmlid":"mw_d3465d4e-c78d-48cd-98a0-38449b87ae25","value":["ekfSLAM object"]},{"name":"landmarkIndex","purpose":"Indices of landmarks to remove","htmlid":"mw_0f750742-6eff-4977-bc99-3a285a6888ee","value":["N-element column vector","N-by-2 matrix"]}]}],"examples":[{"url":"ekfslam.removelandmark.html#mw_3b551d71-546e-4fbd-8fd5-e003a30101fd","open_command":"openExample('nav\/RemoveLandmarkFromEkfSLAMObjectExample')","title":"Remove Landmark from ekfSLAM Object"}],"seealso":[{"url":"ekfslam.html","name":"ekfSLAM"},{"url":"ekfslam.correct.html","name":"correct"},{"url":"ekfslam.landmarkinfo.html","name":"landmarkInfo"},{"url":"ekfslam.posehistory.html","name":"poseHistory"},{"url":"ekfslam.predict.html","name":"predict"},{"url":"ekfslam.reset.html","name":"reset"}]},{"href":"ref\/ekfslam.reset.html","refentity":[{"type":"function","name":"reset","fcntype":"instancemethod"},{"type":"method","name":"ekfSLAM.reset","fcntype":"instancemethod"}],"refpurpose":"Reset state and state estimation error covariance","introduced":"R2021b","description":"This MATLAB function resets the state and state estimation error covariance to their default values, and resets the internal states.","syntaxgroup":[{"title":"","syntax":["reset(slamObj)"]}],"inputgroup":[{"title":"","inputs":[{"name":"slamObj","purpose":"EKF SLAM object","htmlid":"mw_e960680c-2ca8-490c-896a-016ef8776214","value":["ekfSLAM object"]}]}],"examples":[{"url":"ekfslam.reset.html#mw_2c687b8d-7711-4d2e-9767-b30cd7a2f079","open_command":"openExample('nav\/ResetStateAndStateEstimationErrorCovarianceEkfSLAMObjectExample')","title":"Reset State and State Estimation Error Covariance in ekfSLAM Object"}],"seealso":[{"url":"ekfslam.html","name":"ekfSLAM"},{"url":"ekfslam.correct.html","name":"correct"},{"url":"ekfslam.landmarkinfo.html","name":"landmarkInfo"},{"url":"ekfslam.posehistory.html","name":"poseHistory"},{"url":"ekfslam.predict.html","name":"predict"},{"url":"ekfslam.removelandmark.html","name":"removeLandmark"}]},{"href":"ref\/enu2lla.html","refentity":[{"type":"function","name":"enu2lla","fcntype":"simple"}],"refpurpose":"Transform local east-north-up coordinates to geodetic coordinates","introduced":"R2021a","description":"This MATLAB function transforms the local east-north-up (ENU) Cartesian coordinates xyzENU to geodetic coordinates lla.","syntaxgroup":[{"title":"","syntax":["lla = enu2lla(xyzENU,lla0,method)"]}],"inputgroup":[{"title":"","inputs":[{"name":"xyzENU","purpose":"Local ENU Cartesian coordinates","htmlid":"mw_7d278158-3f4f-4e37-b2d2-7af1d39fb5fe","value":["three-element row vector","n-by-3 matrix"]},{"name":"lla0","purpose":"Origin of local ENU system in geodetic coordinates","htmlid":"mw_e97d287d-4eb5-45bf-bbcc-ccdcacd7230c","value":["three-element row vector","n-by-3 matrix"]},{"name":"method","purpose":"Transformation method","htmlid":"mw_ceb0d707-e6d0-418b-aa10-15bf032f307a","value":["'flat'","'ellipsoid'"]}]}],"outputs":[{"name":"lla","purpose":"Geodetic coordinates","htmlid":"mw_99100877-d45e-4549-908e-577921503344","value":["three-element row vector","n-by-3 matrix"]}],"examples":[{"url":"enu2lla.html#mw_7cb7eeab-264f-4727-ac3d-6e4e73c61cfa","open_command":"openExample('shared_trajectories\/TransformENUCoordinatesToGeodeticCoordinatesExample')","title":"Transform ENU Coordinates to Geodetic Coordinates"}],"seealso":[{"url":"lla2enu.html","name":"lla2enu"},{"url":"lla2ned.html","name":"lla2ned"},{"url":"ned2lla.html","name":"ned2lla"}]},{"href":"ref\/errorstateimugpsfuser.correct.html","refentity":[{"type":"function","name":"correct","fcntype":"instancemethod"},{"type":"method","name":"ErrorStateIMUGPSFuser.correct","fcntype":"instancemethod"}],"refpurpose":"Correct states using direct state measurements for insfilterErrorState","introduced":"R2019a","description":"This MATLAB function corrects the state and state estimation error covariance of FUSE, an insfilterErrorState object, based on the measurement and measurement covariance.","syntaxgroup":[{"title":"","syntax":["correct(FUSE,idx,measurement,measurementCovariance)"]}],"inputgroup":[{"title":"","inputs":[{"name":"FUSE","purpose":"INS filter object","htmlid":"mw_34e9b22d-9e24-4ec5-89af-d07407c6cd4f","value":["insfilterErrorState"]},{"name":"idx","purpose":"State vector index of measurements to correct","htmlid":"mw_c325351f-1815-4606-9aea-c1bedfdce4ea","value":["N-element vector of increasing integers in the range [1, 17]"]},{"name":"measurement","purpose":"Direct measurement of state","htmlid":"mw_0ec6a9af-b186-4768-bdff-638c91e10184","value":["N-element vector"]},{"name":"measurementCovariance","purpose":"Covariance of measurement","htmlid":"mw_7a05e0a5-fd21-471a-8fe3-9525e6c3c76e","value":["scalar","M-element vector","M-by-M matrix"]}]}],"examples":[{"url":"errorstateimugpsfuser.correct.html#mw_807b7865-a454-4d2e-8fd5-079aecad7519","open_command":"openExample('shared_positioning\/CorrectInsfilterErrorStateUsingDirectMeasurementExample')","title":"Correct insfilterErrorState Using Direct Measurement"}],"seealso":[{"url":"insfiltererrorstate.html","name":"insfilterErrorState"},{"url":"insfilter.html","name":"insfilter"}]},{"href":"ref\/errorstateimugpsfuser.fusegps.html","refentity":[{"type":"function","name":"fusegps","fcntype":"instancemethod"},{"type":"method","name":"ErrorStateIMUGPSFuser.fusegps","fcntype":"instancemethod"}],"refpurpose":"Correct states using GPS data for insfilterErrorState","introduced":"R2019a","description":"This MATLAB function fuses GPS position data to correct the state estimate.","syntaxgroup":[{"title":"","syntax":["[res,resCov] = fusegps(FUSE,position,positionCovariance)","[res,resCov] = fusegps(FUSE,position,positionCovariance,velocity,velocityCovariance)"]}],"inputgroup":[{"title":"","inputs":[{"name":"FUSE","purpose":"INS filter object","htmlid":"mw_5f17c73e-5efa-49a1-bf83-bd3012c09746","value":["insfilterErrorState"]},{"name":"position","purpose":"Position of GPS receiver (LLA)","htmlid":"mw_81940010-c68b-46b5-afd5-b3ab66e23963","value":["3-element row vector"]},{"name":"positionCovariance","purpose":"Position measurement covariance of GPS receiver (m^{2})","htmlid":"mw_cd81ad67-2269-403e-8dad-f8919e0e3cd6","value":["scalar","3-element row vector","3-by-3 matrix"]},{"name":"velocity","purpose":"Velocity of GPS receiver in local NED coordinate system (m\/s)","htmlid":"mw_4a8d41b1-bf41-4acd-8f41-5ceef35c3e34","value":["3-element row vector"]},{"name":"velocityCovariance","purpose":"Velocity measurement covariance of GPS receiver (m^{2}\/s^{2})","htmlid":"mw_3845b4e3-dd10-485b-a243-90a1f1fc87fd","value":["scalar","3-element row vector","3-by-3 matrix"]}]}],"outputs":[{"name":"res","purpose":"Position and velocity residual","htmlid":"mw_0a2b2027-b91d-43d4-8671-346a8b2e27ca","value":["1-by-6 vector of real values"]},{"name":"resCov","purpose":"Innovation residual","htmlid":"mw_032be53c-0a5f-472e-9a1b-e4c8fc9dbb7d","value":["6-by-6 matrix of real values"]}],"examples":[{"url":"errorstateimugpsfuser.fusegps.html#mw_1424a727-a213-49a9-8b08-345e7a7ac11f","open_command":"openExample('shared_positioning\/FuseGPSDataUsingInsfilterErrorStateExample')","title":"Fuse GPS Data Using insfilterErrorState"}],"seealso":[{"url":"insfiltererrorstate.html","name":"insfilterErrorState"},{"url":"insfilter.html","name":"insfilter"}]},{"href":"ref\/errorstateimugpsfuser.fusemvo.html","refentity":[{"type":"function","name":"fusemvo","fcntype":"instancemethod"},{"type":"method","name":"ErrorStateIMUGPSFuser.fusemvo","fcntype":"instancemethod"}],"refpurpose":"Correct states using monocular visual odometry for insfilterErrorState","introduced":"R2019a","description":"This MATLAB function fuses position and orientation data from monocular visual odometry (MVO) measurements to correct the state and state estimation error covariance.","syntaxgroup":[{"title":"","syntax":["[pResidual,oResidual,resCov] = fusemvo(FUSE,position,positionCovariance,ornt,orntCovariance)"]}],"inputgroup":[{"title":"","inputs":[{"name":"FUSE","purpose":"INS filter object","htmlid":"mw_44e49a4b-a266-4147-93a4-41bd28eeb446","value":["insfilterErrorState"]},{"name":"position","purpose":"Position of camera in local NED coordinate system (m)","htmlid":"mw_64e6d632-1627-41c6-bcee-3742623200fb","value":["3-element row vector"]},{"name":"positionCovariance","purpose":"Position measurement covariance of MVO (m^{2})","htmlid":"mw_4ac4da1a-8aed-4b1b-825e-0715f3313ca6","value":["scalar","3-element vector","3-by-3 matrix"]},{"name":"ornt","purpose":"Orientation of camera with respect to local NED coordinate system","htmlid":"mw_703106a7-a18e-448b-b01e-f9bf8099c1b0","value":["scalar quaternion","rotation matrix"]},{"name":"orntCovariance","purpose":"Orientation measurement covariance of monocular visual odometry (rad^{2})","htmlid":"mw_ff0137d3-0a5c-4360-bcce-bf9a8cf06353","value":["scalar","3-element vector","3-by-3 matrix"]}]}],"outputs":[{"name":"pResidual","purpose":"Position residual","htmlid":"mw_7850b172-9fbf-48e6-ba2c-5756df411b34","value":["1-by-3 vector of real values"]},{"name":"oResidual","purpose":"Rotation vector residual","htmlid":"mw_f71e022e-b7b4-4fcd-a079-3d90549c3b88","value":["1-by-3 vector of real values"]},{"name":"resCov","purpose":"Residual covariance","htmlid":"mw_50e36533-7b72-4659-b289-0281e2361ede","value":["6-by-6 matrix of real values"]}],"examples":[{"url":"errorstateimugpsfuser.fusemvo.html#mw_2bbdd489-5c69-4928-92ca-effd0aad2154","open_command":"openExample('shared_positioning\/FuseMonocularVisualOdometryDataFromInsfilterErrorStateExample')","title":"Fuse Monocular Visual Odometry Data from insfilterErrorState"}],"seealso":[{"url":"insfiltererrorstate.html","name":"insfilterErrorState"},{"url":"insfilter.html","name":"insfilter"}]},{"href":"ref\/errorstateimugpsfuser.pose.html","refentity":[{"type":"function","name":"pose","fcntype":"instancemethod"},{"type":"method","name":"ErrorStateIMUGPSFuser.pose","fcntype":"instancemethod"}],"refpurpose":"Current orientation and position estimate for insfilterErrorState","introduced":"R2019a","description":"This MATLAB function returns the current estimate of the pose of the object tracked by FUSE, an insfilterErrorState object.","syntaxgroup":[{"title":"","syntax":["[position,orientation,velocity] = pose(FUSE)","[position,orientation,velocity] = pose(FUSE,format)"]}],"inputgroup":[{"title":"","inputs":[{"name":"FUSE","purpose":"INS filter object","htmlid":"mw_b801b667-5f53-4071-8e47-5e4764f7aa2e","value":["insfilterErrorState"]},{"name":"format","purpose":"Output orientation format","htmlid":"mw_0eafba9c-1b0f-43b3-ad75-4f47a20e3d39","value":["'quaternion'","'rotmat'"],"defaultvalue":"'quaternion'"}]}],"outputs":[{"name":"position","purpose":"Position estimate expressed in the local coordinate system (m)","htmlid":"mw_cb732bd2-42a9-4f85-996a-2356a6698968","value":["3-element row vector"]},{"name":"orientation","purpose":"Orientation estimate expressed in the local coordinate system","htmlid":"mw_822650af-666d-42b6-a77b-ce7bfa933af4","value":["quaternion","3-by-3 rotation matrix"]},{"name":"velocity","purpose":"Velocity estimate expressed in local coordinate system (m\/s)","htmlid":"mw_0b658c3e-b83d-4ec9-a672-6b0bcdc63901","value":["3-element row vector"]}],"examples":[{"url":"errorstateimugpsfuser.pose.html#mw_4cda9d0a-7362-4f4d-9dac-539004a9f5d5","open_command":"openExample('shared_positioning\/ObtainPoseFromInsfilterErrorStateExample')","title":"Obtain Pose from insfilterErrorState"}],"seealso":[{"url":"insfiltererrorstate.html","name":"insfilterErrorState"},{"url":"insfilter.html","name":"insfilter"}]},{"href":"ref\/errorstateimugpsfuser.predict.html","refentity":[{"type":"function","name":"predict","fcntype":"instancemethod"},{"type":"method","name":"ErrorStateIMUGPSFuser.predict","fcntype":"instancemethod"}],"refpurpose":"Update states using accelerometer and gyroscope data for insfilterErrorState","introduced":"R2019a","description":"This MATLAB function fuses accelerometer and gyroscope data to update the state estimate.","syntaxgroup":[{"title":"","syntax":["predict(FUSE,accelReadings,gyroReadings)"]}],"inputgroup":[{"title":"","inputs":[{"name":"FUSE","purpose":"INS filter object","htmlid":"mw_88f7681c-8630-4a92-b510-4f4babe6c92b","value":["insfilterErrorState"]},{"name":"accelReadings","purpose":"Accelerometer readings in local sensor body coordinate system (m\/s^{2})","htmlid":"mw_ba314760-18ac-40ed-a0ce-f072e94fa758","value":["3-element row vector"]},{"name":"gyroReadings","purpose":"Gyroscope readings in local sensor body coordinate system (rad\/s)","htmlid":"mw_d3bd1a4b-0b15-4a84-8bf3-97e8bbb50353","value":["3-element row vector"]}]}],"examples":[{"url":"errorstateimugpsfuser.predict.html#mw_9e9df2b8-4d22-4060-8dba-eb2261d05e28","open_command":"openExample('shared_positioning\/PredictStateUsingInsfilterErrorStateExample')","title":"Predict State Using insfilterErrorState"}],"seealso":[{"url":"insfiltererrorstate.html","name":"insfilterErrorState"},{"url":"insfilter.html","name":"insfilter"}]},{"href":"ref\/errorstateimugpsfuser.reset.html","refentity":[{"type":"function","name":"reset","fcntype":"instancemethod"},{"type":"method","name":"ErrorStateIMUGPSFuser.reset","fcntype":"instancemethod"}],"refpurpose":"Reset internal states for insfilterErrorState","introduced":"R2019a","description":"This MATLAB function resets the State, StateCovariance, and internal integrators of FUSE, an insfilterErrorState object, to their default values.","syntaxgroup":[{"title":"","syntax":["reset(FUSE)"]}],"inputgroup":[{"title":"","inputs":[{"name":"FUSE","purpose":"INS filter object","htmlid":"mw_935173c9-0bcf-479b-8af7-6c0e35679fb3","value":["insfilterErrorState"]}]}],"examples":[{"url":"errorstateimugpsfuser.reset.html#mw_9aff6d88-f709-4b10-af27-5b54f324c359","open_command":"openExample('shared_positioning\/ResetStateOfInsfilterErrorStateExample')","title":"Reset State of insfilterErrorState"}],"seealso":[{"url":"insfiltererrorstate.html","name":"insfilterErrorState"},{"url":"insfilter.html","name":"insfilter"}]},{"href":"ref\/errorstateimugpsfuser.stateinfo.html","refentity":[{"type":"function","name":"stateinfo","fcntype":"instancemethod"},{"type":"method","name":"ErrorStateIMUGPSFuser.stateinfo","fcntype":"instancemethod"}],"refpurpose":"Display state vector information for insfilterErrorState","introduced":"R2019a","description":"This MATLAB function displays the meaning of each index of the State property of FUSE, an insfilterErrorState object, and the associated units.","syntaxgroup":[{"title":"","syntax":["stateinfo(FUSE)","info = stateinfo(FUSE)"]}],"inputgroup":[{"title":"","inputs":[{"name":"FUSE","purpose":"INS filter object","htmlid":"mw_7941d0f9-c655-463f-b6da-81da7523c65c","value":["insfilterErrorState"]}]}],"outputs":[{"name":"info","purpose":"State information","htmlid":"mw_80234839-fe65-4fd0-8c67-290e2d024353_sep_mw_a793f7e0-4b76-4fff-a134-c6e8cb55079e","value":["structure"]}],"examples":[{"url":"errorstateimugpsfuser.stateinfo.html#mw_38dc3283-1c56-4145-8b36-552467a5f7d4","open_command":"openExample('shared_positioning\/StateInformationOfInsfilterErrorStateExample')","title":"State Information of insfilterErrorState"}],"seealso":[{"url":"insfiltererrorstate.html","name":"insfilterErrorState"},{"url":"insfilter.html","name":"insfilter"}]},{"href":"ref\/estimatecameraimutransform.html","refentity":[{"type":"function","name":"estimateCameraIMUTransform","fcntype":"simple"}],"refpurpose":"Estimate transformation from camera to IMU sensor using calibration data","introduced":"R2024a","description":"This MATLAB function estimates the fixed SE(3) transformation from the camera to the IMU sensor frame using the distorted image point tracks of a calibration target board captured by the camera, the pattern points of the calibration target board in the world frame, the intrinsics of the camera, the IMU measurements corresponding to the calibration images, and the IMU noise model parameters.","syntaxgroup":[{"title":"","syntax":["estimateCameraIMUTransform(imagePoints,patternPoints,imuMeasurements,cameraIntrinsics,imuParams)","[tform,params] = estimateCameraIMUTransform(___)","[___] = estimateCameraIMUTransform(___,options)"]}],"inputgroup":[{"title":"","inputs":[{"name":"imagePoints","purpose":"Target point detections in the calibration image","htmlid":"mw_9325e396-fa0e-4f1c-aa1d-282df38c1bbb","value":["P-by-2-by-N array","timetable object"]},{"name":"patternPoints","purpose":"Calibration target board key pattern points in world frame","htmlid":"mw_2a3ce88b-90ce-4bf6-bc39-33f9d9510103","value":["M-by-2 matrix"]},{"name":"imuMeasurements","purpose":"IMU accelerometer and gyroscope measurements","htmlid":"mw_6c601b39-5d67-4746-8934-d4a240dcff6e","value":["timetable object"]},{"name":"cameraIntrinsics","purpose":"Camera intrinsics","htmlid":"mw_2cea52f4-cd66-4db7-8e04-e85ae73764c4","value":["cameraIntrinsics"]},{"name":"imuParams","purpose":"IMU noise model parameters","htmlid":"mw_c0a8aaf9-9bfd-475c-a4ba-a259748e3021","value":["factorIMUParameters"]},{"name":"options","purpose":"Calibration options","htmlid":"mw_292e1ef5-4b39-457e-a35f-82caad12a690","value":["cameraIMUCalibrationOptions","cameraIMUCalibrationOptions object"],"defaultvalue":"cameraIMUCalibrationOptions"}]}],"outputs":[{"name":"tform","purpose":"SE(3) transformation from camera frame to IMU sensor frame","htmlid":"mw_50384e9b-d5fa-4103-978e-215df3b9d014","value":["se3 object","rigidtform3d object"]},{"name":"params","purpose":"Estimated calibration parameters","htmlid":"mw_54b53590-71a9-49c3-82fc-9b710d1f650f","value":["cameraIMUParameters object"]}],"seealso":[{"url":"cameraimucalibrationoptions.html","name":"cameraIMUCalibrationOptions"},{"url":"cameraimuparameters.html","name":"cameraIMUParameters"},{"url":"factorimu.html","name":"factorIMU"},{"url":"factorcamerase3andpointxyz.html","name":"factorCameraSE3AndPointXYZ"},{"url":"estimategravityrotation.html","name":"estimateGravityRotation"},{"url":"estimategravityrotationandposescale.html","name":"estimateGravityRotationAndPoseScale"}]},{"href":"ref\/estimategravityrotation.html","refentity":[{"type":"function","name":"estimateGravityRotation","fcntype":"simple"}],"refpurpose":"Estimate gravity rotation using factor graph optimization","introduced":"R2023a","description":"This MATLAB function estimates the gravity rotation, using factor graph optimization, that helps transform the input poses to the local navigation reference frame of an inertial measurement unit (IMU).","syntaxgroup":[{"title":"","syntax":["[gRot,info] = estimateGravityRotation(poses,gyroscopeReadings,accelerometerReadings)","[gRot,info] = estimateGravityRotation(___,Name=Value)"]}],"inputgroup":[{"title":"","inputs":[{"name":"poses","purpose":"Camera or lidar poses","htmlid":"mw_2a702c4a-b647-4379-8b81-fad6627d8e53","value":["N-by-7 matrix","array of se3 objects","table","array of rigidtform3d objects"]},{"name":"gyroscopeReadings","purpose":"Gyroscope readings between consecutive camera views or poses","htmlid":"mw_bcfcf908-5343-4529-8159-3974259af082_sep_mw_5f714aa7-8917-45c3-8a24-f02b4ad3142a","value":["(N-1)-element cell array of M-by-3 matrices"]},{"name":"accelerometerReadings","purpose":"Accelerometer readings between consecutive camera views or poses","htmlid":"mw_bcfcf908-5343-4529-8159-3974259af082_sep_mw_33943317-e03a-4455-855a-6fa3b595d7d6","value":["(N-1)-element cell array of M-by-3 matrices"]}]},{"namevaluepairs":[{"title":"","inputs":[{"name":"IMUParameters","purpose":"IMU parameters","htmlid":"mw_d86736d4-0d00-46d7-952b-e2f787e9ec84","value":["factorIMUParameters()","factorIMUParameters object"],"defaultvalue":"factorIMUParameters()"},{"name":"SolverOptions","purpose":"Solver options","htmlid":"mw_ae5cd105-96bc-4df1-850e-df89afedcbd4","value":["factorGraphSolverOptions()","factorGraphSolverOptions object"],"defaultvalue":"factorGraphSolverOptions()"},{"name":"SensorTransform","purpose":"Transformation from input pose reference frame to initial IMU frame","htmlid":"mw_b0d29e9a-8099-4b42-8931-684f6bcec879","value":["se3()","se3 object"],"defaultvalue":"se3()"},{"name":"FixPoses","purpose":"Fixed input poses during estimation","htmlid":"mw_3826432b-2eca-4729-9c3a-a6a95880f771","value":["true","false"],"defaultvalue":"true"},{"name":"InitialVelocity","purpose":"Initial velocity guess for IMU","htmlid":"mw_248de3b2-451c-427e-a2ea-aa3fc28aaa2c","value":["[NaN NaN NaN]","three element row vector"],"defaultvalue":"[NaN NaN NaN]"},{"name":"PredictionThreshold","purpose":"IMU pose prediction threshold","htmlid":"mw_f906747f-5f09-4998-8324-a76567d7188b","value":["[5e-2 5e-2]","two-element row vector"],"defaultvalue":"[5e-2 5e-2]"}]}]}],"outputs":[{"name":"gRot","purpose":"Gravity rotation","htmlid":"mw_adb14c62-11f8-4e77-b48a-9c8a03fa87f0","value":["3-by-3 matrix","se3 object","rigidtform3d object"]},{"name":"info","purpose":"Estimation diagnostics and optimization results","htmlid":"mw_ee35303d-4e5f-4fc4-8ffa-44bc5b897264","value":["structure"]}],"examples":[{"url":"estimategravityrotation.html#mw_5f00b935-e526-45db-8cc5-68a03a436b97","open_command":"openExample('nav\/EstimateGravityDirectionUsingFactorGraphOptimizationExample')","title":"Estimate Gravity Rotation and Direction Using IMU Measurements and Factor Graph Optimization"}],"seealso":[{"url":"factorimu.html","name":"factorIMU"},{"url":"factorimuparameters.html","name":"factorIMUParameters"},{"url":"estimategravityrotationandposescale.html","name":"estimateGravityRotationAndPoseScale"},{"url":"factorgraphsolveroptions.html","name":"factorGraphSolverOptions"},{"url":"factorgraph.html","name":"factorGraph"}]},{"href":"ref\/estimategravityrotationandposescale.html","refentity":[{"type":"function","name":"estimateGravityRotationAndPoseScale","fcntype":"simple"}],"refpurpose":"Estimate gravity rotation and pose scale using factor graph optimization","introduced":"R2023a","description":"This MATLAB function estimates the gravity rotation and pose scale of input poses using factor graph optimization.","syntaxgroup":[{"title":"","syntax":["[gRot,scale,info] = estimateGravityRotationAndPoseScale(poses,gyroscopeReadings,accelerometerReadings)","[gRot,scale,info] = estimateGravityRotationAndPoseScale(___,Name=Value)"]}],"inputgroup":[{"title":"","inputs":[{"name":"poses","purpose":"Camera poses","htmlid":"mw_48ea652b-91b3-47c0-ab48-3c0569b72111","value":["N-by-7 matrix","array of se3 objects","table","array of rigidtform3d objects"]},{"name":"gyroscopeReadings","purpose":"Gyroscope readings between consecutive camera views or poses","htmlid":"mw_b0246bac-ea35-4bbc-82cf-3b2c26d6dae9_sep_mw_5f714aa7-8917-45c3-8a24-f02b4ad3142a","value":["(N-1)-element cell array of M-by-3 matrices"]},{"name":"accelerometerReadings","purpose":"Accelerometer readings between consecutive camera views or poses","htmlid":"mw_b0246bac-ea35-4bbc-82cf-3b2c26d6dae9_sep_mw_33943317-e03a-4455-855a-6fa3b595d7d6","value":["(N-1)-element cell array of M-by-3 matrices"]}]},{"namevaluepairs":[{"title":"","inputs":[{"name":"IMUParameters","purpose":"IMU parameters","htmlid":"mw_d8eba919-b748-4c08-906a-6d8a86c0a095","value":["factorIMUParameters()","factorIMUParameters object"],"defaultvalue":"factorIMUParameters()"},{"name":"SolverOptions","purpose":"Solver options","htmlid":"mw_47094d14-d298-4d8c-9ad3-637bf72a87e6","value":["factorGraphSolverOptions()","factorGraphSolverOptions object"],"defaultvalue":"factorGraphSolverOptions()"},{"name":"SensorTransform","purpose":"Transformation from input pose reference frame to initial IMU frame","htmlid":"mw_a638562c-2bcf-45c4-a030-fb715832e938","value":["se3()","se3 object"],"defaultvalue":"se3()"},{"name":"FixPoses","purpose":"Fixed input poses during estimation","htmlid":"mw_76ff0ad5-c7a6-4957-946d-06dbfdbf58c6","value":["true","false"],"defaultvalue":"true"},{"name":"InitialVelocity","purpose":"Initial velocity guess for IMU","htmlid":"mw_5085ffd1-37b2-4b86-89ce-fdc591f014de","value":["[NaN, NaN, NaN]","three element row vector"],"defaultvalue":"[NaN, NaN, NaN]"},{"name":"ScaleThreshold","purpose":"Minimum valid scale value","htmlid":"mw_dd1461f3-ac0f-4ba4-b07e-6c3acd158c55","value":["1e-03","numeric scalar"],"defaultvalue":"1e-03"},{"name":"PredictionThreshold","purpose":"IMU pose prediction threshold","htmlid":"mw_fe45b966-08cd-4fd0-ac8a-cbbf382723a7","value":["[5e-2,5e-2]","two-element row vector"],"defaultvalue":"[5e-2,5e-2]"}]}]}],"outputs":[{"name":"gRot","purpose":"Gravity rotation","htmlid":"mw_0a4c34eb-2bd1-4369-b95a-d8a9aa5c63ea","value":["3-by-3 matrix","se3 object","rigidtform3d object"]},{"name":"scale","purpose":"Multiplier by which to scale input poses","htmlid":"mw_a2a09e4b-2339-4311-83a7-dec68ebc90be","value":["numeric scalar"]},{"name":"info","purpose":"Estimation diagnostics and optimization results","htmlid":"mw_b5467fdb-904f-4ea5-838c-1c7b4f8758c1","value":["structure"]}],"examples":[{"url":"estimategravityrotationandposescale.html#mw_b853389e-695f-4cfa-85c5-c04ee8185565","open_command":"openExample('nav\/EstimateGravityDirectionPoseScaleFactorGraphOptimizationExample')","title":"Estimate Gravity Rotation and Direction and Pose Scale Using IMU Measurements and Factor Graph Optimization"}],"seealso":[{"url":"factorimu.html","name":"factorIMU"},{"url":"factorimuparameters.html","name":"factorIMUParameters"},{"url":"estimategravityrotation.html","name":"estimateGravityRotation"},{"url":"factorgraphsolveroptions.html","name":"factorGraphSolverOptions"},{"url":"factorgraph.html","name":"factorGraph"}]},{"href":"ref\/eul2quat.html","refentity":[{"type":"function","name":"eul2quat","fcntype":"simple"}],"refpurpose":"Convert Euler angles to quaternion","introduced":"R2015a","description":"This MATLAB function converts a given set of Euler angles, eul, to the corresponding quaternion, quat.","syntaxgroup":[{"title":"","syntax":["quat = eul2quat(eul)","quat = eul2quat(eul,sequence)"]}],"inputgroup":[{"title":"","inputs":[{"name":"eul","purpose":"Euler rotation angles","htmlid":"buoeisl-eul","value":["n-by-3 matrix"]},{"name":"sequence","purpose":"Axis-rotation sequence","htmlid":"buoeisl_sep_mw_e1ec5f45-aa43-4f3a-bcc6-bc10914e150d","value":["\"ZYX\"","\"ZYZ\"","\"ZXY\"","\"ZXZ\"","\"YXY\"","\"YZX\"","\"YXZ\"","\"YZY\"","\"XYX\"","\"XYZ\"","\"XZX\"","\"XZY\""],"defaultvalue":"\"ZYX\""}]}],"outputs":[{"name":"quat","purpose":"Unit quaternion","htmlid":"buoeisl-quat","value":["n-by-4 matrix"]}],"examples":[{"url":"eul2quat.html#buofml0-2","open_command":"openExample('nav_robotics\/ConvertEulerAnglesToQuaternionExample')","title":"Convert Euler Angles to Quaternion"},{"url":"eul2quat.html#buofml0-3","open_command":"openExample('nav_robotics\/ConvertEulerAnglesToQuaternionUsingDefaultZYZAxisOrderExample')","title":"Convert Euler Angles to Quaternion Using Default ZYZ Axis Order"}],"seealso":[{"url":"quat2eul.html","name":"quat2eul"},{"url":"quaternion.html","name":"quaternion"}]},{"href":"ref\/eul2rotm.html","refentity":[{"type":"function","name":"eul2rotm","fcntype":"simple"}],"refpurpose":"Convert Euler angles to rotation matrix","introduced":"R2015a","description":"This MATLAB function converts a set of Euler angles, eul, to the corresponding rotation matrix, rotm.","syntaxgroup":[{"title":"","syntax":["rotm = eul2rotm(eul)","rotm = eul2rotm(eul,sequence)"]}],"inputgroup":[{"title":"","inputs":[{"name":"eul","purpose":"Euler rotation angles","htmlid":"buofuic-eul","value":["n-by-3 matrix"]},{"name":"sequence","purpose":"Axis-rotation sequence","htmlid":"buofuic_sep_mw_e1ec5f45-aa43-4f3a-bcc6-bc10914e150d","value":["\"ZYX\"","\"ZYZ\"","\"ZXY\"","\"ZXZ\"","\"YXY\"","\"YZX\"","\"YXZ\"","\"YZY\"","\"XYX\"","\"XYZ\"","\"XZX\"","\"XZY\""],"defaultvalue":"\"ZYX\""}]}],"outputs":[{"name":"rotm","purpose":"Rotation matrix","htmlid":"buofuic-rotm","value":["3-by-3-by-n matrix"]}],"examples":[{"url":"eul2rotm.html#buofuq_-2","open_command":"openExample('nav_robotics\/ConvertEulerAnglesToRotationMatrixExample')","title":"Convert Euler Angles to Rotation Matrix"},{"url":"eul2rotm.html#buofuq_-3","open_command":"openExample('nav_robotics\/ConvertEulerAnglesToRotationMatrixUsingZYZAxisOrderExample')","title":"Convert Euler Angles to Rotation Matrix Using ZYZ Axis Order"}],"seealso":[{"url":"rotm2eul.html","name":"rotm2eul"},{"url":"so2.html","name":"so2"},{"url":"so3.html","name":"so3"}]},{"href":"ref\/eul2tform.html","refentity":[{"type":"function","name":"eul2tform","fcntype":"simple"}],"refpurpose":"Convert Euler angles to homogeneous transformation","introduced":"R2015a","description":"This MATLAB function converts a set of Euler angles, eul, into a homogeneous transformation matrix, tform.","syntaxgroup":[{"title":"","syntax":["tform = eul2tform(eul)","tform = eul2tform(eul,sequence)"]}],"inputgroup":[{"title":"","inputs":[{"name":"eul","purpose":"Euler rotation angles","htmlid":"buofuz3-eul","value":["n-by-3 matrix"]},{"name":"sequence","purpose":"Axis-rotation sequence","htmlid":"buofuz3_sep_mw_e1ec5f45-aa43-4f3a-bcc6-bc10914e150d","value":["\"ZYX\"","\"ZYZ\"","\"ZXY\"","\"ZXZ\"","\"YXY\"","\"YZX\"","\"YXZ\"","\"YZY\"","\"XYX\"","\"XYZ\"","\"XZX\"","\"XZY\""],"defaultvalue":"\"ZYX\""}]}],"outputs":[{"name":"tform","purpose":"Homogeneous transformation","htmlid":"buofuz3-tform","value":["4-by-4-by-n matrix"]}],"examples":[{"url":"eul2tform.html#buofu7l-2","open_command":"openExample('nav_robotics\/ConvertEulerAnglesToHomogeneousTransformationMatrixExample')","title":"Convert Euler Angles to Homogeneous Transformation Matrix"},{"url":"eul2tform.html#buofu7l-3","open_command":"openExample('nav_robotics\/ConvertEulerAnglesToHomogeneousTransformationMatrixUsingExample')","title":"Convert Euler Angles to Homogeneous Transformation Matrix Using ZYZ Axis Order"}],"seealso":[{"url":"tform2eul.html","name":"tform2eul"},{"url":"se2.html","name":"se2"},{"url":"se3.html","name":"se3"}]},{"href":"ref\/exportoccupancymap3d.html","refentity":[{"type":"function","name":"exportOccupancyMap3D","fcntype":"simple"}],"refpurpose":"Export 3-D occupancy map as octree or binary tree file","introduced":"R2020a","description":"This MATLAB function exports the 3-D occupancy map, map3D, into either an octree file (.ot) that contains all the occupancy data, or a binary tree file (.bt) that contains only the maximum-likelihood information at the specified location, filename","syntaxgroup":[{"title":"","syntax":["exportOccupancyMap3D(map3D,filename)"]}],"inputgroup":[{"title":"","inputs":[{"name":"map3D","purpose":"3-D occupancy map","htmlid":"mw_80f4313f-24a7-4d81-ac71-d877dd522f73","value":["occupancyMap3D object"]},{"name":"filename","purpose":"Absolute or relative path to octree or binary tree file","htmlid":"mw_06942a5c-23bc-4993-911e-da17375bbf9b","value":["string scalar","character vector"]}]}],"examples":[{"url":"exportoccupancymap3d.html#mw_8438144b-8bd1-4037-bbff-2b5f0ec25574","open_command":"openExample('nav\/CreateAndExport3DOccupancyMapExample')","title":"Create and Export 3-D Occupancy Map"}],"seealso":[{"url":"occupancymap3d.html","name":"occupancyMap3D"},{"url":"lidarslam.html","name":"lidarSLAM"},{"url":"occupancymap.html","name":"occupancyMap"},{"url":"occupancymap3d.insertpointcloud.html","name":"insertPointCloud"},{"url":"occupancymap3d.inflate.html","name":"inflate"},{"url":"occupancymap3d.setoccupancy.html","name":"setOccupancy"},{"url":"occupancymap3d.show.html","name":"show"}]},{"href":"ref\/extractnmeasentence.html","refentity":[{"type":"function","name":"extractNMEASentence","fcntype":"simple"}],"refpurpose":"Verify and extract NMEA sentence data into string array","introduced":"R2021b","description":"This MATLAB function verifies the checksum of an unparsed NMEA sentence, identified using its Message ID, and extracts the NMEA fields from NMEA sentence data into a string array, splitString.","syntaxgroup":[{"title":"","syntax":["[isValid,splitString] = extractNMEASentence(unparsedData,'MessageID')"]}],"inputgroup":[{"title":"","inputs":[{"name":"unparsedData","purpose":"Unparsed NMEA data from the device","htmlid":"mw_dbe5da88-97d4-4f55-9e04-b725db0daee1","value":["string","character array"]},{"name":"MessageID","purpose":"Message ID of the unparsed NMEA sentence","htmlid":"mw_3c8e3794-691d-45d1-a506-d19f9800de05","value":["string","character array"]}]}],"outputs":[{"name":"isValid","purpose":"Validity of unparsed NMEA sentence based on checksum","htmlid":"mw_f2fe9f80-ebf9-44b9-8f83-a5ec4e96cafc","value":["0","1"]},{"name":"splitString","purpose":"Output data as split strings","htmlid":"mw_1431ec13-7896-4b00-a1e9-a8f7984da985","value":["string array"]}],"examples":[{"url":"extractnmeasentence.html#mw_d81aa3ef-c659-4233-a7b8-e6c992662c34","open_command":"openExample('nav\/ExtractNMEAFieldsOfNMEASentenceExample')","title":"Extract NMEA Fields of NMEA Sentence"}],"seealso":[{"url":"nmeaparser-system-object.html","name":"nmeaParser"}]},{"href":"ref\/factorcamerase3andpointxyz.html","refentity":[{"type":"object","name":"factorCameraSE3AndPointXYZ"},{"type":"function","name":"factorCameraSE3AndPointXYZ","fcntype":"constructor"}],"refpurpose":"Factor relating SE(3) camera pose, 3-D landmark point, and optional sensor transform","introduced":"R2023a","description":"The factorCameraSE3AndPointXYZ object contains visual projection factors that each describe the relationship between the pose of a pinhole camera in the SE(3) state space and a 3-D landmark point, or between the pose of a pinhole camera in the SE(3) state space, a 3-D landmark point, and a sensor transform.","syntaxgroup":[{"title":"","syntax":["F = factorCameraSE3AndPointXYZ(nodeID,cameraIntrinsicMatrix)","F = factorCameraSE3AndPointXYZ(___,Name=Value)"]}],"inputgroup":[{"title":"","inputs":[{"name":"nodeID","purpose":"Node ID numbers","htmlid":"mw_e3212ae5-10a9-4e64-9b25-386987a62c9c","value":["N-by-2 matrix of nonnegative integers","N-by-3 matrix of nonnegative integers"]},{"name":"cameraIntrinsicMatrix","purpose":"Camera intrinsic matrix","htmlid":"mw_687a0728-7f2f-4101-b100-abcb321740ff","value":["3-by-3 matrix","3-by-3-by-N array"]}]},{"namevaluepairs":[{"title":"","inputs":[{"name":"Measurement","purpose":"Measured image point position","htmlid":"mw_62701649-8812-4300-b7fe-56f153be6aa8","value":["[0 0]","two-element row vector","N-by-2 matrix"],"defaultvalue":"[0 0]"},{"name":"Information","purpose":"Information matrix associated with the uncertainty of the measurement","htmlid":"mw_44ac7883-5ee8-4e17-925b-b1db3c2ae3df","value":["eye(2)","2-by-2 matrix","2-by-2-by-N array"],"defaultvalue":"eye(2)"},{"name":"SensorTransform","purpose":"Transformation consisting of 3-D translation and rotation to transform connecting pose nodes to the initial camera frame","htmlid":"mw_560672ee-4c4f-44db-aabc-9b8d6c42f6f6","value":["se3()","se3 object"],"defaultvalue":"se3()"}]}]}],"outputs":[{"name":"F","purpose":"Factors relating SE(3) camera pose, 3-D landmark point, and optional sensor transform","htmlid":"mw_022e148e-1064-4f22-8fbc-b15c67101b75","value":["factorCameraSE3AndPointXYZ object"]}],"classpropertygroup":[{"classproperty":[{"name":"NodeID","purpose":"Node ID numbers","htmlid":"mw_26f9f8c8-f418-40ba-8075-c97b1117e8f5","value":["N-by-2 matrix of nonnegative integers","N-by-3 matrix of nonnegative integers"]},{"name":"K","purpose":"Camera intrinsic matrix","htmlid":"mw_3c27a8e6-7cb1-45ae-8eea-e23c57fbd271","value":["3-by-3 matrix","3-by-3-by-N array"]},{"name":"Measurement","purpose":"Measured image point position","htmlid":"mw_a6fe35d4-248c-467d-8523-b5b6e591302e","value":["[0 0]","two-element row vector","N-by-2 matrix"],"defaultvalue":"[0 0]"},{"name":"Information","purpose":"Information matrix associated with the uncertainty of the measurement","htmlid":"mw_478a533c-bd70-4e37-b813-7a33085d633b","value":["eye(2)","2-by-2 matrix","2-by-2-by-N array"],"defaultvalue":"eye(2)"},{"name":"SensorTransform","purpose":"Transformation consisting of 3-D translation and rotation to transform connecting pose nodes to the initial camera frame","htmlid":"mw_0a5a79ff-c4f6-4a50-ad12-aacc221be95e","value":["se3()","se3 object"],"defaultvalue":"se3()"}]}],"objectfunctions":[{"title":"","functions":[{"name":"nodeType","url":"factorgraph.nodetype.html","description":"Get node type of node in factor graph"}]}],"examples":[{"url":"factorcamerase3andpointxyz.html#mw_85394907-c705-4fdc-aca7-3a1b38d80542","open_command":"openExample('nav\/CreateFactorCameraSE3AndPointXYZObjectAddToFactorGraphExample')","title":"Create factorCameraSE3AndPointXYZ Object and Add It to factorGraph Object"}],"seealso":[{"url":"factorgraph.html","name":"factorGraph"},{"url":"factortwoposese3.html","name":"factorTwoPoseSE3"},{"url":"factorposese3andpointxyz.html","name":"factorPoseSE3AndPointXYZ"},{"url":"estimategravityrotation.html","name":"estimateGravityRotation"},{"url":"estimategravityrotationandposescale.html","name":"estimateGravityRotationAndPoseScale"}]},{"href":"ref\/factorgps.html","refentity":[{"type":"object","name":"factorGPS"},{"type":"function","name":"factorGPS","fcntype":"constructor"}],"refpurpose":"Factor for GPS measurement","introduced":"R2022a","description":"The factorGPS object adds a constraint to a node in a factorGraph by using a GPS position measurement.","syntaxgroup":[{"title":"","syntax":["F = factorGPS(NodeID)","F = factorGPS(NodeID,Name=Value)"]}],"classpropertygroup":[{"classproperty":[{"name":"NodeID","readonly":true,"purpose":"Node ID numbers","htmlid":"mw_ab7d74bb-1def-476d-8e82-9edc1d84718f","value":["nonnegative integer"]},{"name":"Location","purpose":"Geodetic position measurement","htmlid":"mw_710e6505-d04b-410e-9ae9-ecb888b2a096","value":["[0 0 0]","three-element row vector"],"defaultvalue":"[0 0 0]"},{"name":"HDOP","purpose":"Horizontal dilution of precision","htmlid":"mw_1760d98a-67af-4ae8-857e-18ffc5b01ae8","value":["1","positive scalar"],"defaultvalue":"1"},{"name":"VDOP","purpose":"Vertical dilution of precision","htmlid":"mw_ea15498b-5ff7-43ff-982b-7a26d614ee62","value":["2","positive scalar"],"defaultvalue":"2"},{"name":"ReferenceLocation","purpose":"Origin of local coordinate system","htmlid":"mw_fc96d0fa-e018-4d5b-8bc8-4c31341d760c","value":["[0 0 0]","3-element row vector"],"defaultvalue":"[0 0 0]"},{"name":"ReferenceFrame","purpose":"Reference frame for local coordinate system","htmlid":"mw_3bea6ec5-bb61-4d6a-8348-44f9cbd2ea1f_sep_mw_18f5fb44-2a81-4f67-bf11-86ac787b7c9c","value":["\"ENU\"","\"NED\""],"defaultvalue":"\"ENU\""}]}],"objectfunctions":[{"title":"","functions":[{"name":"nodeType","url":"factorgraph.nodetype.html","description":"Get node type of node in factor graph"}]}],"examples":[{"url":"factorgps.html#mw_f1317cdf-4c33-474f-b168-e9943d7e42d3","open_command":"openExample('nav\/AddFactorGPSObjectToFactorGraphExample')","title":"Add factorGPS Object to Factor Graph"}],"seealso":[{"url":"factorgraph.html","name":"factorGraph"},{"url":"factortwoposese3.html","name":"factorTwoPoseSE3"},{"url":"factorposese3prior.html","name":"factorPoseSE3Prior"}]},{"href":"ref\/factorgraph.addfactor.html","refentity":[{"type":"function","name":"addFactor","fcntype":"instancemethod"},{"type":"method","name":"factorGraph.addFactor","fcntype":"instancemethod"}],"refpurpose":"Add factor to factor graph","introduced":"R2022a","description":"The addFactor function adds one or more factors to a factor graph and can group the factors and nodes that are specified by the added factors.","syntaxgroup":[{"title":"","syntax":["factorIDs = addFactor(fg,factor)","factorIDs = addFactor(fg,factor,groupID)"]}],"inputgroup":[{"title":"","inputs":[{"name":"fg","purpose":"Factor graph to add factor to","htmlid":"mw_a1e6f680-7603-45d4-b34c-ff9f523f9ed3","value":["factorGraph object"]},{"name":"factor","purpose":"Factors to add to factor graph","htmlid":"mw_94dfa3e3-24d4-444d-944e-618465424d9e","value":["valid factor object"]},{"name":"groupID","purpose":"Group IDs for nodes of added factor","htmlid":"mw_18296db9-f589-4359-9667-891bb88c08b2","value":["nonnegative integer","two-element row vector of nonnegative integers","N-element column vector of nonnegative integers","N-by-2 matrix of nonnegative integers"]}]}],"outputs":[{"name":"factorIDs","purpose":"Factor IDs of added factors","htmlid":"mw_6ffc0ffb-a562-41d6-b61c-e765590f9dea","value":["N-element row vector of nonnegative integers"]}],"examples":[{"url":"factorgraph.addfactor.html#mw_a46a7e5c-5040-45a6-9a13-01a6065142ea","open_command":"openExample('nav\/OptimizeSimpleFactorGraphExample')","title":"Optimize Simple Factor Graph"},{"url":"factorgraph.addfactor.html#mw_851c7c96-a95d-4b2d-a58d-2844f3dcd5b3","open_command":"openExample('nav\/AddNodesToGroupsExample')","title":"Add Nodes to Groups"}],"seealso":[{"url":"factorgraph.html","name":"factorGraph"},{"url":"factortwoposese2.html","name":"factorTwoPoseSE2"},{"url":"factortwoposese3.html","name":"factorTwoPoseSE3"},{"url":"factorposese3prior.html","name":"factorPoseSE3Prior"},{"url":"factorvelocity3prior.html","name":"factorVelocity3Prior"},{"url":"factorimubiasprior.html","name":"factorIMUBiasPrior"},{"url":"factorgps.html","name":"factorGPS"},{"url":"factorimu.html","name":"factorIMU"},{"url":"factorgraph.nodeids.html","name":"nodeIDs"}]},{"href":"ref\/factorgraph.fixnode.html","refentity":[{"type":"function","name":"fixNode","fcntype":"instancemethod"},{"type":"method","name":"factorGraph.fixNode","fcntype":"instancemethod"}],"refpurpose":"Fix or free nodes in factor graph","introduced":"R2022a","description":"This MATLAB function fixes the nodes with the specified node IDs during optimization.","syntaxgroup":[{"title":"","syntax":["fixNode(fg,nodeIDs)","fixNode(fg,nodeIDs,flag)"]}],"inputgroup":[{"title":"","inputs":[{"name":"fg","purpose":"Factor graph containing nodes to fix","htmlid":"mw_f7fbf743-ef3d-4574-a289-ef00a3144da7","value":["factorGraph object"]},{"name":"nodeIDs","purpose":"IDs of nodes to fix or free","htmlid":"mw_918f0fb9-9334-482e-a257-8b045bc3158d_sep_mw_43a2a9ef-d65f-4842-8155-d331da41a844","value":["N-element row vector of nonnegative integers"]},{"name":"flag","purpose":"New fix status of node","htmlid":"mw_59ecf3dd-b5bc-43e6-b36c-8b70a185a5a7","value":["true or 1","false or 0"],"defaultvalue":"true or 1"}]}],"examples":[{"url":"factorgraph.fixnode.html#mw_37a612a0-1b8f-43e2-bcfc-d6575907bde4","open_command":"openExample('nav\/OptimizeSimpleFactorGraphExample')","title":"Optimize Simple Factor Graph"}],"seealso":[{"url":"factorgraph.html","name":"factorGraph"}]},{"href":"ref\/factorgraph.generatenodeid.html","refentity":[{"type":"function","name":"generateNodeID","fcntype":"instancemethod"},{"type":"method","name":"factorGraph.generateNodeID","fcntype":"instancemethod"}],"refpurpose":"Generate new node IDs","introduced":"R2023a","description":"The generateNodeID function generates new node IDs for creating new factors for a factor graph.","syntaxgroup":[{"title":"","syntax":["IDs = generateNodeID(fg,numNodes)","IDs = generateNodeID(fg,nodeMatrixSize)","IDs = generateNodeID(fg,numFactors,factorType)"]}],"inputgroup":[{"title":"","inputs":[{"name":"fg","purpose":"Factor graph to generate nodes for","htmlid":"mw_ef4fad6d-e7c3-47ee-aebc-0be051f0af92","value":["factorGraph object"]},{"name":"numNodes","purpose":"Number of nodes","htmlid":"mw_e1dc7f4a-7d1c-402a-bda3-c84bb0db94b8","value":["nonnegative integer"]},{"name":"nodeMatrixSize","purpose":"Generated node ID matrix size","htmlid":"mw_2f7993c4-9efe-492d-8698-55ad8aae3b83","value":["two-element vector of nonnegative integers"]},{"name":"numFactors","purpose":"Number of factors to generate IDs for","htmlid":"mw_d79c7b18-0915-48ba-a483-a1a14b5858ec","value":["nonnegative integer"]},{"name":"factorType","purpose":"Factor type for which to generate node IDs","htmlid":"mw_af97d789-eb7c-45fa-89e3-91c981f1e8c1","value":["string scalar","character vector"]}]}],"outputs":[{"name":"IDs","purpose":"Generated node IDs","htmlid":"mw_1e94141d-6931-466f-b520-c3d69b1d2da1","value":["N-element row vector","M-by-N matrix"]}],"examples":[{"url":"factorgraph.generatenodeid.html#mw_48e512ce-54cf-4e52-94c4-f2dea4386e46","open_command":"openExample('nav\/GenerateNodeIDsBySpecifyingNumberOfNodesExample')","title":"Generate Node IDs by Specifying Number of Nodes"},{"url":"factorgraph.generatenodeid.html#mw_2d90f752-c674-42cc-a444-64cc10a15f2d","open_command":"openExample('nav\/GenerateNodeIDsBySpecifyingNodeMatrixSizeExample')","title":"Generate Node IDs by Specifying Node Matrix Size"},{"url":"factorgraph.generatenodeid.html#mw_6cb8537a-d089-49a5-be12-0116ca93fce4","open_command":"openExample('nav\/GenerateNodeIDsBySpecifyingFactorTypeExample')","title":"Generate Node IDs by Specifying Factor Type"}],"seealso":[{"url":"factorgraph.html","name":"factorGraph"},{"url":"factorgraph.nodeids.html","name":"nodeIDs"}]},{"href":"ref\/factorgraph.hasnode.html","refentity":[{"type":"function","name":"hasNode","fcntype":"instancemethod"},{"type":"method","name":"factorGraph.hasNode","fcntype":"instancemethod"}],"refpurpose":"Check if node ID exists in factor graph","introduced":"R2022a","description":"This MATLAB function checks if a node with the specified node ID exists in the factor graph.","syntaxgroup":[{"title":"","syntax":["nodeExist = hasNode(fg,nodeID)"]}],"inputgroup":[{"title":"","inputs":[{"name":"fg","purpose":"Factor graph","htmlid":"mw_2edfbe1c-4f67-4fca-af2b-912e47774118_sep_mw_6aca5a5a-cc17-49e2-81e8-c08333cd4ea5","value":["factorGraph object"]},{"name":"nodeID","purpose":"ID of node to check","htmlid":"mw_b0f9a8b8-0742-48a9-9f0a-910ba538aad8","value":["nonnegative integer"]}]}],"outputs":[{"name":"nodeExist","purpose":"Node exists in the factor graph","htmlid":"mw_aa963c3b-80bf-4ac7-8a2b-468874897af2","value":["false or 0","true or 1"]}],"examples":[{"url":"factorgraph.hasnode.html#mw_14c57bcf-fa69-4853-af1a-79e095c450fc","open_command":"openExample('nav\/CheckIfNodeExistsInFactorGraphExample')","title":"Check If Node Exists in Factor Graph"}],"seealso":[{"url":"factorgraph.html","name":"factorGraph"}]},{"href":"ref\/factorgraph.isconnected.html","refentity":[{"type":"function","name":"isConnected","fcntype":"instancemethod"},{"type":"method","name":"factorGraph.isConnected","fcntype":"instancemethod"}],"refpurpose":"Check if factor graph is connected","introduced":"R2022a","description":"The isConnected function returns a logical flag that indicates whether the factor graph, or a partial factor graph built from specified pose nodes, contains a path between every pair of nodes.","syntaxgroup":[{"title":"","syntax":["connected = isConnected(fg)","connected = isConnected(fg,poseNodeIDs)"]}],"inputgroup":[{"title":"","inputs":[{"name":"fg","purpose":"Factor graph","htmlid":"mw_6f6f1355-fd67-43ae-9b2f-fa0c04e8ab61_sep_mw_6aca5a5a-cc17-49e2-81e8-c08333cd4ea5","value":["factorGraph object"]},{"name":"poseNodeIDs","purpose":"IDs of pose nodes to check for connection","htmlid":"mw_8b0a2dbc-f2e1-4f56-83f8-7fae5b09416c","value":["N-element row vector of nonnegative integers"]}]}],"outputs":[{"name":"connected","purpose":"Graph is connected in factor graph or in partial factor graph","htmlid":"mw_6adf5534-0a25-4612-b6a4-4728063676b8","value":["false or 0","true or 1"]}],"examples":[{"url":"factorgraph.isconnected.html#mw_02bf4e07-49f9-4f07-95b4-e27891399cf9","open_command":"openExample('nav\/CheckingFactorGraphConnectivityExample')","title":"Checking Factor Graph Connectivity"}],"seealso":[{"url":"factorgraph.html","name":"factorGraph"},{"url":"factorgraph.optimize.html","name":"optimize"}]},{"href":"ref\/factorgraph.isnodefixed.html","refentity":[{"type":"function","name":"isNodeFixed","fcntype":"instancemethod"},{"type":"method","name":"factorGraph.isNodeFixed","fcntype":"instancemethod"}],"refpurpose":"Check if node is fixed","introduced":"R2022a","description":"This MATLAB function returns a logical flag indicating whether the nodes with the specified node ID in the factor graph is fixed or not fixed during optimization.","syntaxgroup":[{"title":"","syntax":["isFixed = isNodeFixed(fg,nodeIDs)"]}],"inputgroup":[{"title":"","inputs":[{"name":"fg","purpose":"Factor graph","htmlid":"mw_f7d04dbc-3484-48fd-8846-5870747346e0_sep_mw_6aca5a5a-cc17-49e2-81e8-c08333cd4ea5","value":["factorGraph object"]},{"name":"nodeIDs","purpose":"IDs of the nodes to fix","htmlid":"mw_e7a9ebad-0a3d-47d5-8ccf-2cdcf72df987","value":["nonnegative integer","N-element row vector of nonnegative integers"]}]}],"outputs":[{"name":"isFixed","purpose":"Fix status of nodes","htmlid":"mw_83ccc467-2a0d-4dfb-b225-7ed227067f28","value":["true or 1","false or 0","N-element vector of logical values"]}],"examples":[{"url":"factorgraph.isnodefixed.html#mw_f1145fe2-2b9d-4793-b2bd-8fdf7ae98e4d","open_command":"openExample('nav\/OptimizeSimpleFactorGraphExample')","title":"Optimize Simple Factor Graph"}],"seealso":[{"url":"factorgraph.html","name":"factorGraph"}]},{"href":"ref\/factorgraph.html","refentity":[{"type":"object","name":"factorGraph"},{"type":"function","name":"factorGraph","fcntype":"constructor"}],"refpurpose":"Graph-based framework for multisensor state estimation","introduced":"R2022a","description":"A factorGraph object stores a bipartite graph consisting of factors connected to variable nodes.","syntaxgroup":[{"title":"","syntax":["fg = factorGraph"]}],"classpropertygroup":[{"classproperty":[{"name":"NumNodes","readonly":true,"purpose":"Number of nodes in factor graph","htmlid":"mw_d3da8e70-2b79-490d-b53a-6ac0b60ce2f5","value":["nonnegative integer"]},{"name":"NumFactors","readonly":true,"purpose":"Number of factors in factor graph","htmlid":"mw_3e669880-28db-46c6-95d3-a54bc5fc9f49","value":["nonnegative integer"]}]}],"objectfunctions":[{"title":"Node Management","functions":[{"name":"generateNodeID","url":"factorgraph.generatenodeid.html","description":"Generate new node IDs"},{"name":"hasNode","url":"factorgraph.hasnode.html","description":"Check if node ID exists in factor graph"},{"name":"nodeIDs","url":"factorgraph.nodeids.html","description":"Get node IDs in factor graph"},{"name":"nodeState","url":"factorgraph.nodestate.html","description":"Get or set node state in factor graph"},{"name":"nodeType","url":"factorgraph.nodetype.html","description":"Get node type of node in factor graph"},{"name":"fixNode","url":"factorgraph.fixnode.html","description":"Fix or free nodes in factor graph"},{"name":"isNodeFixed","url":"factorgraph.isnodefixed.html","description":"Check if node is fixed"},{"name":"removeNode","url":"factorgraph.removenode.html","description":"Remove node from factor graph"}]},{"title":"Factor Management","functions":[{"name":"addFactor","url":"factorgraph.addfactor.html","description":"Add factor to factor graph"},{"name":"removeFactor","url":"factorgraph.removefactor.html","description":"Remove factor from factor graph"}]},{"title":"Optimization and Marginalization","functions":[{"name":"optimize","url":"factorgraph.optimize.html","description":"Optimize factor graph"},{"name":"marginalizeFactor","url":"factorgraph.marginalizefactor.html","description":"Marginalize factors from factor graph into marginal factor"},{"name":"marginalizeNode","url":"factorgraph.marginalizenode.html","description":"Marginalize node and related factors from factor graph into marginal\n      factor"}]},{"title":"Graph Analysis","functions":[{"name":"isConnected","url":"factorgraph.isconnected.html","description":"Check if factor graph is connected"},{"name":"nodeCovariance","url":"factorgraph.nodecovariance.html","description":"Get state covariance of nodes in factor graph"},{"name":"show","url":"factorgraph.show.html","description":"Plot pose nodes, pose node edges, and landmark nodes of factor graph"}]}],"examples":[{"url":"factorgraph.html#mw_a7ecd134-2bbf-466c-9c55-284daf276aaf","open_command":"openExample('nav\/EstimatePositionUsingLandmarkFactorsExample')","title":"Estimate Poses Using Landmark Factors"}],"seealso":[{"url":"factorgraphsolveroptions.html","name":"factorGraphSolverOptions"},{"url":"importfactorgraph.html","name":"importFactorGraph"},{"url":"estimategravityrotation.html","name":"estimateGravityRotation"},{"url":"estimategravityrotationandposescale.html","name":"estimateGravityRotationAndPoseScale"}]},{"href":"ref\/factorgraph.marginalizefactor.html","refentity":[{"type":"function","name":"marginalizeFactor","fcntype":"instancemethod"},{"type":"method","name":"factorGraph.marginalizeFactor","fcntype":"instancemethod"}],"refpurpose":"Marginalize factors from factor graph into marginal factor","introduced":"R2025a","description":"This MATLAB function generates a marginal factor using the information from the specified factors and adds it to the factor graph.","syntaxgroup":[{"title":"","syntax":["factorID = marginalizeFactor(fg,factorIDs)","[factorID,removedNodeIDs] = marginalizeFactor(fg,factorIDs)"]}],"inputgroup":[{"title":"","inputs":[{"name":"fg","purpose":"Factor graph","htmlid":"mw_5ec4ad79-305f-44cc-82f0-0b63fdc6ab9c_sep_mw_6aca5a5a-cc17-49e2-81e8-c08333cd4ea5","value":["factorGraph object"]},{"name":"factorIDs","purpose":"ID of factors to marginalize","htmlid":"mw_bf91c50d-a473-4eb8-92bc-e9df43add945","value":["N-element array of nonnegative integers"]}]}],"outputs":[{"name":"factorID","purpose":"ID of marginal factor added to factor graph","htmlid":"mw_5ec4ad79-305f-44cc-82f0-0b63fdc6ab9c_sep_mw_29c510c3-6127-4e35-894c-6e2dcd2a0c84","value":["nonnegative integer"]},{"name":"removedNodeIDs","purpose":"IDs of marginalized nodes","htmlid":"mw_d767b8ec-9572-4084-96ba-e55824dd5f7b","value":["M-element vector of nonnegative integers."]}],"examples":[{"url":"factorgraph.marginalizefactor.html#mw_9176037a-4f19-4e37-a3e9-fb06bb6b0d39","open_command":"openExample('nav\/MarginalizeFactorsInFactorGraphExample')","title":"Marginalize Factors in Factor Graph"}],"seealso":[{"url":"factorgraph.html","name":"factorGraph"},{"url":"factorgraph.marginalizenode.html","name":"marginalizeNode"},{"url":"factorgraph.removefactor.html","name":"removeFactor"}]},{"href":"ref\/factorgraph.marginalizenode.html","refentity":[{"type":"function","name":"marginalizeNode","fcntype":"instancemethod"},{"type":"method","name":"factorGraph.marginalizeNode","fcntype":"instancemethod"}],"refpurpose":"Marginalize node and related factors from factor graph into marginal factor","introduced":"R2025a","description":"This MATLAB function generates a marginal factor using the information from the specified node and its related factors, and then adds the marginal factor to the factor graph.","syntaxgroup":[{"title":"","syntax":["factorID = marginalizeNode(fg,nodeID)","[___,removedNodeIDs] = marginalizeNode(fg,nodeID)","[___,removedFactorIDs] = marginalizeNode(fg,nodeID)"]}],"inputgroup":[{"title":"","inputs":[{"name":"fg","purpose":"Factor graph","htmlid":"mw_9852774d-a5cc-4f34-86f7-b230cf5e692d_sep_mw_6aca5a5a-cc17-49e2-81e8-c08333cd4ea5","value":["factorGraph object"]},{"name":"nodeID","purpose":"ID of node to marginalize","htmlid":"mw_e83eaa03-3b38-4502-9c71-5540cfc42d26","value":["nonnegative integer"]}]}],"outputs":[{"name":"factorID","purpose":"ID of marginal factor added to factor graph","htmlid":"mw_9852774d-a5cc-4f34-86f7-b230cf5e692d_sep_mw_29c510c3-6127-4e35-894c-6e2dcd2a0c84","value":["nonnegative integer"]},{"name":"removedNodeIDs","purpose":"IDs of marginalized nodes","htmlid":"mw_0393a657-5626-4a98-b786-cb862bff040f","value":["M-element vector of nonnegative integers."]},{"name":"removedFactorIDs","purpose":"IDs of removed factors","htmlid":"mw_ed5954d2-a42b-4ec8-9085-ae6cfe6ccf9f","value":["P-element vector of nonnegative integers."]}],"examples":[{"url":"factorgraph.marginalizenode.html#mw_42890f0b-f9ce-4d78-bb2f-cac477745698","open_command":"openExample('nav\/MarginalizeNodeInFactorGraphExample')","title":"Marginalize Node in Factor Graph"}],"seealso":[{"url":"factorgraph.html","name":"factorGraph"},{"url":"factorgraph.marginalizefactor.html","name":"marginalizeFactor"},{"url":"factorgraph.removenode.html","name":"removeNode"}]},{"href":"ref\/factorgraph.nodecovariance.html","refentity":[{"type":"function","name":"nodeCovariance","fcntype":"instancemethod"},{"type":"method","name":"factorGraph.nodeCovariance","fcntype":"instancemethod"}],"refpurpose":"Get state covariance of nodes in factor graph","introduced":"R2024b","description":"This MATLAB function gets the stored covariances of nodes with the specified node IDs in the specified factor graph.","syntaxgroup":[{"title":"","syntax":["covariance = nodeCovariance(fg,nodeIDs)"]}],"inputgroup":[{"title":"","inputs":[{"name":"fg","purpose":"Factor graph","htmlid":"mw_cebd6d97-8f0a-47ce-9648-13f1f4b638a0_sep_mw_6aca5a5a-cc17-49e2-81e8-c08333cd4ea5","value":["factorGraph object"]},{"name":"nodeIDs","purpose":"IDs of nodes for which to retrieve state covariances","htmlid":"mw_5e55cb65-1ecb-4a67-af6c-1d725f20ecc1","value":["N-element row vector of nonnegative integers"]}]}],"outputs":[{"name":"covariance","purpose":"Node state covariances","htmlid":"mw_71770fd3-c0bb-4cd2-bcab-5c42c1f235c0","value":["M-by-M-by-N array"]}],"examples":[{"url":"factorgraph.nodecovariance.html#mw_319e3c2a-07cd-401c-ba5c-1d1d48bfffa9","open_command":"openExample('nav\/GetNodeStateCovarianceFromFactorGraphExample')","title":"Get Node State Covariance from Factor Graph"}],"seealso":[{"url":"factorgraph.html","name":"factorGraph"},{"url":"factorgraphsolveroptions.html","name":"factorGraphSolverOptions"},{"url":"factorgraph.optimize.html","name":"optimize"},{"url":"factorgraph.nodeids.html","name":"nodeIDs"}]},{"href":"ref\/factorgraph.nodeids.html","refentity":[{"type":"function","name":"nodeIDs","fcntype":"instancemethod"},{"type":"method","name":"factorGraph.nodeIDs","fcntype":"instancemethod"}],"refpurpose":"Get node IDs in factor graph","introduced":"R2022a","description":"The nodeIDs function gets all node IDs or gets a subset of node IDs from a factor graph for nodes of the same node type, group ID, or connect to factors of the same factor type.","syntaxgroup":[{"title":"","syntax":["ids = nodeIDs(fg)","ids = nodeIDs(fg,Name=Value)"]}],"inputgroup":[{"title":"","inputs":[{"name":"fg","purpose":"Factor graph","htmlid":"mw_68227a27-0f1a-45de-be8c-b9309d4d8ed3_sep_mw_6aca5a5a-cc17-49e2-81e8-c08333cd4ea5","value":["factorGraph object"]}]},{"namevaluepairs":[{"title":"","inputs":[{"name":"NodeType","purpose":"Node type of desired nodes in factor graph","htmlid":"mw_da52215e-7b37-4c93-8acd-2e84f0b1695d","value":["string scalar","character vector"]},{"name":"FactorType","purpose":"Factor type that nodes relate to in factor graph","htmlid":"mw_b8c95027-9cfb-4ea8-9d97-66aca05076d1","value":["string scalar","character vector"]},{"name":"GroupID","purpose":"Group ID of desired nodes","htmlid":"mw_b8c776c6-9d29-41eb-b997-0b5cc9d52225","value":["nonnegative integer","N-element row vector of nonnegative integers"]}]}]}],"outputs":[{"name":"ids","purpose":"Node IDs","htmlid":"mw_250a105b-692b-407a-b25a-c1fd0eb3ab37","value":["N-element row vector"]}],"examples":[{"url":"factorgraph.nodeids.html#mw_ec375a13-181b-424e-8613-349660934c65","open_command":"openExample('nav\/GetNodeIDsOfFactorGraphExample')","title":"Get Node IDs of Factor Graph"}],"seealso":[{"url":"factorgraph.html","name":"factorGraph"},{"url":"factorgraph.addfactor.html","name":"addFactor"},{"url":"factorgraph.nodecovariance.html","name":"nodeCovariance"}]},{"href":"ref\/factorgraph.nodestate.html","refentity":[{"type":"function","name":"nodeState","fcntype":"instancemethod"},{"type":"method","name":"factorGraph.nodeState","fcntype":"instancemethod"}],"refpurpose":"Get or set node state in factor graph","introduced":"R2022a","description":"This MATLAB function gets the state of the nodes with the specified node IDs in the specified factor graph.","syntaxgroup":[{"title":"","syntax":["state = nodeState(fg,nodeIDs)"]},{"title":"","syntax":["nodeState(fg,nodeIDs,newStates)"]}],"inputgroup":[{"title":"","inputs":[{"name":"fg","purpose":"Factor graph","htmlid":"mw_1f44b72f-32da-4134-8015-4ac414e2bbdd_sep_mw_6aca5a5a-cc17-49e2-81e8-c08333cd4ea5","value":["factorGraph object"]},{"name":"nodeIDs","purpose":"IDs of nodes to get or set","htmlid":"mw_c18762ef-0da9-4483-8356-1e793094cdc4","value":["N-element row vector of nonnegative integers"]},{"name":"newStates","purpose":"New node states","htmlid":"mw_f5055a0c-fe69-4ec7-9cc9-e371229731f1","value":["M-by-N matrix"]}]}],"outputs":[{"name":"state","purpose":"State of nodes","htmlid":"mw_6750969c-7dc6-4d83-9584-099fce0c65a5","value":["M-by-N matrix"]}],"examples":[{"url":"factorgraph.nodestate.html#mw_2c8c6ea9-4cbd-436e-a667-1bbe7150bdc5","open_command":"openExample('nav\/OptimizeSimpleFactorGraphExample')","title":"Optimize Simple Factor Graph"}],"seealso":[{"url":"factorgraph.html","name":"factorGraph"}]},{"href":"ref\/factorgraph.nodetype.html","refentity":[{"type":"function","name":"nodeType","fcntype":"instancemethod"},{"type":"method","name":"factorGraph.nodeType","fcntype":"instancemethod"},{"type":"method","name":"factorGPS.nodeType","fcntype":"instancemethod"},{"type":"method","name":"factorIMU.nodeType","fcntype":"instancemethod"},{"type":"method","name":"factorCameraSE3AndPointXYZ.nodeType","fcntype":"instancemethod"},{"type":"method","name":"factorPoseSE2AndPointXY.nodeType","fcntype":"instancemethod"},{"type":"method","name":"factorPoseSE3AndPointXYZ.nodeType","fcntype":"instancemethod"},{"type":"method","name":"factorTwoPoseSE2.nodeType","fcntype":"instancemethod"},{"type":"method","name":"factorTwoPoseSE3.nodeType","fcntype":"instancemethod"},{"type":"method","name":"factorTwoPoseSIM3.nodeType","fcntype":"instancemethod"},{"type":"method","name":"factorIMUBiasPrior.nodeType","fcntype":"instancemethod"},{"type":"method","name":"factorPoseSE3Prior.nodeType","fcntype":"instancemethod"},{"type":"method","name":"factorVelocity3Prior.nodeType","fcntype":"instancemethod"}],"refpurpose":"Get node type of node in factor graph","introduced":"R2022a","description":"This MATLAB function returns the type of the node with the specified node ID in the factor graph.","syntaxgroup":[{"title":"Factor Graph","syntax":["type = nodeType(fg,nodeID)"]},{"title":"Multi-Node Factors (e.g. factorTwoPoseSE3)","syntax":["type = nodeType(factor,nodeID)"]},{"title":"Single-Node Factors (e.g. factorPoseSE3Prior)","syntax":["type = nodeType(factor)"]}],"inputgroup":[{"title":"","inputs":[{"name":"fg","purpose":"Factor graph","htmlid":"mw_a6c99746-0aad-4f41-9d82-4f6a9a0d2244_sep_mw_6aca5a5a-cc17-49e2-81e8-c08333cd4ea5","value":["factorGraph object"]},{"name":"factor","purpose":"Factor","htmlid":"mw_51020ebe-e468-4952-8b1d-9f04b08608b5","value":["factor object"]},{"name":"nodeID","purpose":"ID of node to check","htmlid":"mw_192ec9bf-7302-4975-9eae-4094b6fac16b","value":["nonnegative integer"]}]}],"outputs":[{"name":"type","purpose":"Type of node","htmlid":"mw_c2bd2b64-4c18-4242-825c-41d2fabf7c75","value":["string scalar"]}],"examples":[{"url":"factorgraph.nodetype.html#mw_12ed1a2b-9d1a-4cf0-9900-eca294a9c8fa","open_command":"openExample('nav\/GetNodeTypeOfNodeInFactorGraphExample')","title":"Get Node Type of Nodes in Factor Graph"},{"url":"factorgraph.nodetype.html#mw_8f2bd906-93ca-4dda-b002-5cae083135c2","open_command":"openExample('nav\/GetNodeTypeOfNodesSpecifiedByFactorExample')","title":"Get Node Type of Nodes Specified by Factor"},{"url":"factorgraph.nodetype.html#mw_1dab7eb3-df43-477b-80d0-4dcd2561b672","open_command":"openExample('nav\/GetNodeTypeOfNodeSpecifiedBySingleNodeFactorExample')","title":"Get Node Type of Node Specified By Single-Node Factor"}],"seealso":[{"url":"factorgraph.html","name":"factorGraph"},{"url":"factorgraphsolveroptions.html","name":"factorGraphSolverOptions"},{"url":"factorgraph.nodecovariance.html","name":"nodeCovariance"}]},{"href":"ref\/factorgraph.optimize.html","refentity":[{"type":"function","name":"optimize","fcntype":"instancemethod"},{"type":"method","name":"factorGraph.optimize","fcntype":"instancemethod"}],"refpurpose":"Optimize factor graph","introduced":"R2022a","description":"The optimize function optimizes a factor graph to find a solution that minimizes the cost of the nonlinear least squares problem formulated by the factor graph.","syntaxgroup":[{"title":"","syntax":["solnInfo = optimize(fg)","solnInfo = optimize(fg,poseNodeIDs)","solnInfo = optimize(___,solverOptions)"]}],"inputgroup":[{"title":"","inputs":[{"name":"fg","purpose":"Factor graph","htmlid":"mw_880ef013-eba6-474b-88cc-243f8a13fae7_sep_mw_6aca5a5a-cc17-49e2-81e8-c08333cd4ea5","value":["factorGraph object"]},{"name":"poseNodeIDs","purpose":"IDs of pose nodes to optimize","htmlid":"mw_c2341f41-2e39-492f-8350-6732d26249d3","value":["N-element row vector of nonnegative integers"]},{"name":"solverOptions","purpose":"Solver options for factor graph","htmlid":"mw_d6ec1c05-2dcc-4bd4-9d30-93e543c2f1a1","value":["factorGraphSolverOptions object"]}]}],"outputs":[{"name":"solnInfo","purpose":"Results of optimization","htmlid":"mw_29209069-a659-4201-b0c0-39ce0b41a6ce","value":["structure"]}],"examples":[{"url":"factorgraph.optimize.html#mw_939d6dcd-df67-4ee9-badf-070a6bab3b1f","open_command":"openExample('nav\/EstimatePositionUsingLandmarkFactorsExample')","title":"Estimate Poses Using Landmark Factors"},{"url":"factorgraph.optimize.html#mw_3d8c4f3b-74f8-4919-a9eb-b65b4dda79ac","open_command":"openExample('nav\/IncrementallyOptimizeFactorGraphUsingSlidingWindowExample')","title":"Incrementally Optimize Factor Graph Using Sliding Window"}],"seealso":[{"url":"factorgraph.html","name":"factorGraph"},{"url":"factorgraphsolveroptions.html","name":"factorGraphSolverOptions"}]},{"href":"ref\/factorgraph.removefactor.html","refentity":[{"type":"function","name":"removeFactor","fcntype":"instancemethod"},{"type":"method","name":"factorGraph.removeFactor","fcntype":"instancemethod"}],"refpurpose":"Remove factor from factor graph","introduced":"R2024a","description":"This MATLAB function removes the factor with the specified factor ID from the factor graph as well as removing any nodes related to the factor that, after the removal of the factor, do not connect to any other factor.","syntaxgroup":[{"title":"","syntax":["removeFactor(fg,factorID)","removedNodeIDs = removeFactor(fg,factorID)"]}],"inputgroup":[{"title":"","inputs":[{"name":"fg","purpose":"Factor graph","htmlid":"mw_c223afc4-2b37-49fb-b3dc-0a073fed3a57_sep_mw_6aca5a5a-cc17-49e2-81e8-c08333cd4ea5","value":["factorGraph object"]},{"name":"factorID","purpose":"ID of factor to remove","htmlid":"mw_9c76b329-7155-481f-9b79-f1258294d277","value":["nonnegative integer","N-element array of nonnegative integers"]}]}],"outputs":[{"name":"removedNodeIDs","purpose":"IDs of removed nodes","htmlid":"mw_86f92396-14d6-41d5-9d7a-2ae872eda157","value":["M-element vector of nonnegative integers."]}],"examples":[{"url":"factorgraph.removefactor.html#mw_3f031956-522b-4104-a9c7-bdfc52e31eeb","open_command":"openExample('nav\/RemoveFactorFromFactorGraphExample')","title":"Remove Factor from Factor Graph"}],"seealso":[{"url":"factorgraph.html","name":"factorGraph"},{"url":"factorgraph.addfactor.html","name":"addFactor"},{"url":"factorgraph.removenode.html","name":"removeNode"}]},{"href":"ref\/factorgraph.removenode.html","refentity":[{"type":"function","name":"removeNode","fcntype":"instancemethod"},{"type":"method","name":"factorGraph.removeNode","fcntype":"instancemethod"}],"refpurpose":"Remove node from factor graph","introduced":"R2024a","description":"This MATLAB function removes the specified node from the factor graph, removes any factors connected to that node, and removes any nodes that become disconnected from any factors in the process of node removal.","syntaxgroup":[{"title":"","syntax":["removeNode(fg,nodeID)","removedNodeIDs = removeNode(fg,nodeID)","[removedNodeIDs,removedFactorIDs] = removeNode(fg,nodeID)"]}],"inputgroup":[{"title":"","inputs":[{"name":"fg","purpose":"Factor graph","htmlid":"mw_db3c0e0c-032c-4a0c-bfdf-e72dd1b68b43_sep_mw_6aca5a5a-cc17-49e2-81e8-c08333cd4ea5","value":["factorGraph object"]},{"name":"nodeID","purpose":"ID of node to remove","htmlid":"mw_db3c0e0c-032c-4a0c-bfdf-e72dd1b68b43_sep_mw_43a2a9ef-d65f-4842-8155-d331da41a844","value":["nonnegative integer","N-element row vector of nonnegative integers"]}]}],"outputs":[{"name":"removedNodeIDs","purpose":"IDs of removed nodes","htmlid":"mw_953cf8fb-c02b-44fa-9300-81e6796a4f5d","value":["M-element vector of nonnegative integers."]},{"name":"removedFactorIDs","purpose":"IDs of removed factors","htmlid":"mw_69da1f5e-280f-44cb-8645-9c92b70e559d","value":["P-element vector of nonnegative integers."]}],"examples":[{"url":"factorgraph.removenode.html#mw_381ab86c-58ce-4895-8b5a-02f33d0374d5","open_command":"openExample('nav\/RemoveNodeFromFactorGraphExample')","title":"Remove Node from Factor Graph"}],"seealso":[{"url":"factorgraph.html","name":"factorGraph"},{"url":"factorgraph.nodeids.html","name":"nodeIDs"},{"url":"factorgraph.addfactor.html","name":"addFactor"},{"url":"factorgraph.removefactor.html","name":"removeFactor"}]},{"href":"ref\/factorgraph.show.html","refentity":[{"type":"function","name":"show","fcntype":"instancemethod"},{"type":"method","name":"factorGraph.show","fcntype":"instancemethod"}],"refpurpose":"Plot pose nodes, pose node edges, and landmark nodes of factor graph","introduced":"R2024a","description":"This MATLAB function plots the pose nodes and pose node edges of the specified factor graph in a figure.","syntaxgroup":[{"title":"","syntax":["show(fg)","show(fg,Name=Value)","ax = show(___)"]}],"inputgroup":[{"title":"","inputs":[{"name":"fg","purpose":"Factor graph to visualize","htmlid":"mw_57525629-b352-4fdd-a59b-572e438fbe18","value":["factorGraph object"]}]},{"namevaluepairs":[{"title":"","inputs":[{"name":"Parent","purpose":"Axes on which to draw factor graph","htmlid":"mw_c048d8d1-7974-4bc1-84ea-abb8f1fd69c9","value":["Axes object"]},{"name":"Landmark","purpose":"Landmark node display","htmlid":"mw_dc1a52fa-27e2-4d50-abcb-1e143433a3d9","value":["\"on\"","\"off\""],"defaultvalue":"\"on\""},{"name":"Orientation","purpose":"Pose node orientation display","htmlid":"mw_708872e1-2055-4e58-bb24-1c3e98874210","value":["\"off\"","\"on\""],"defaultvalue":"\"off\""},{"name":"OrientationFrameSize","purpose":"Size of orientation frames","htmlid":"mw_6e9c45fc-8600-4b9e-bd84-faee19df2079","value":["0.2","positive numeric scalar"],"defaultvalue":"0.2"},{"name":"Edge","purpose":"Plot edges between nodes","htmlid":"mw_901de3a1-4d24-4ed6-a8a7-552f29c2bfa4","value":["\"pose-edge\"","\"off\""],"defaultvalue":"\"pose-edge\""},{"name":"Legend","purpose":"Plot legend","htmlid":"mw_a841097c-8e10-43cc-8c4a-02d43dcf7907","value":["\"off\"","\"on\""],"defaultvalue":"\"off\""}]}]}],"outputs":[{"name":"ax","purpose":"Axes used to plot factor graph","htmlid":"mw_93ce2841-1611-4ac7-8230-09a71f719268","value":["Axes object"]}],"examples":[{"url":"factorgraph.show.html#mw_6b15aef4-2390-428c-a52c-8dcc8cac3e4e","open_command":"openExample('nav\/Show2DFactorGraphExample')","title":"Show 2-D Factor Graph"}],"seealso":[{"url":"factorgraph.html","name":"factorGraph"}]},{"href":"ref\/factorgraphsolveroptions.html","refentity":[{"type":"object","name":"factorGraphSolverOptions"},{"type":"function","name":"factorGraphSolverOptions","fcntype":"constructor"}],"refpurpose":"Solver options for factor graph","introduced":"R2022a","description":"The factorGraphSolverOptions object contains solver options for optimizing a factor graph.","syntaxgroup":[{"title":"","syntax":["Options = factorGraphSolverOptions","Options = factorGraphSolverOptions(Name=Value)"]}],"classpropertygroup":[{"classproperty":[{"name":"MaxIterations","purpose":"Maximum number of solver iterations","htmlid":"mw_fc99cf61-4349-4b6e-9950-1e12b20f79ef","value":["200","positive integer"],"defaultvalue":"200"},{"name":"FunctionTolerance","purpose":"Lower bound of change in cost function","htmlid":"mw_96493e34-b797-495c-b5d2-ec693d23cbad","value":["1e-6","positive scalar"],"defaultvalue":"1e-6"},{"name":"GradientTolerance","purpose":"Lower bound of norm of gradient","htmlid":"mw_9e8d1485-b4db-4de5-936d-0ece8fed1bac","value":["1e-10","positive scalar"],"defaultvalue":"1e-10"},{"name":"StepTolerance","purpose":"Lower bound of step size","htmlid":"mw_dc9c7851-ae7c-4a02-b35f-e4b4b4122f85","value":["1e-8","positive integer"],"defaultvalue":"1e-8"},{"name":"VerbosityLevel","purpose":"Command line verbosity flag","htmlid":"mw_29aaa3d8-5569-4d80-82bb-0d25eb12125d","value":["0","1","2"],"defaultvalue":"0"},{"name":"TrustRegionStrategyType","purpose":"Trust region step computation algorithm","htmlid":"mw_88934de8-eb72-4972-b0f0-731bf770fbd8","value":["1","0"],"defaultvalue":"1"},{"name":"StateCovarianceType","purpose":"Node types for node state covariance estimation","htmlid":"mw_798eaaf2-83b9-47a5-bbc3-b46c104d6fb4","value":["\"none\"","\"all-types\"","\"POSE_SE2\"","\"POSE_SE3\"","\"POINT_XY\"","\"POINT_XYZ\"","\"IMU_BIAS\"","\"VEL_3\""],"defaultvalue":"\"none\""},{"name":"InitialTrustRegionRadius","purpose":"Initial trust region radius","htmlid":"mw_6fee9dd8-5431-43af-926d-b88e91893c42","value":["1e4","positive scalar"],"defaultvalue":"1e4"}]}],"examples":[{"url":"factorgraphsolveroptions.html#mw_7027f5ad-d332-4641-a2d5-32f36ba4a8bb","open_command":"openExample('nav\/OptimizeFactorGraphWithCustomOptionsExample')","title":"Create and Optimize Factor Graph with Custom Options"}],"seealso":[{"url":"factorgraph.html","name":"factorGraph"},{"url":"importfactorgraph.html","name":"importFactorGraph"},{"url":"factorgraph.optimize.html","name":"optimize"}]},{"href":"ref\/factorimu.html","refentity":[{"type":"object","name":"factorIMU"},{"type":"function","name":"factorIMU","fcntype":"constructor"}],"refpurpose":"Convert IMU readings to factor","introduced":"R2022a","description":"The factorIMU object converts raw IMU readings into constraints between poses, velocities, and IMU biases for a factorGraph object.","syntaxgroup":[{"title":"","syntax":["F = factorIMU(nodeID,GyroscopeReadings,AccelerometerReadings)","F = factorIMU(nodeID,GyroscopeReadings,AccelerometerReadings,imuparams)","F = factorIMU(nodeID,SampleRate,GyroscopeBiasNoise,AccelerometerBiasNoise,GyroscopeNoise,AccelerometerNoise,GyroscopeReadings,AccelerometerReadings)","F = factorIMU(___,Name=Value)"]}],"inputgroup":[{"title":"","inputs":[{"name":"imuparams","purpose":"Factor IMU parameters","htmlid":"mw_885b4b3d-dd2c-41b7-b2c9-81981392db4f","value":["factorIMUParameters object"]}]}],"classpropertygroup":[{"classproperty":[{"name":"NodeID","readonly":true,"purpose":"Node ID numbers","htmlid":"mw_b66f1ddd-f29a-4002-8848-0698cc70af22","value":["six-element row vector of integers"]},{"name":"SampleRate","readonly":true,"purpose":"IMU sampling rate","htmlid":"mw_cfe72db7-15ef-4b13-8285-475b484ea14d","value":["numeric scalar greater than 100"]},{"name":"GyroscopeBiasNoise","readonly":true,"purpose":"Gyroscope bias noise covariance","htmlid":"mw_d228377e-cbaa-49e8-be8e-1347abbc4086","value":["3-by-3 matrix"]},{"name":"AccelerometerBiasNoise","readonly":true,"purpose":"Accelerometer bias noise covariance","htmlid":"mw_98b0cff4-4de2-4ff2-94a1-e5f0a68ddfad","value":["3-by-3 matrix"]},{"name":"GyroscopeNoise","readonly":true,"purpose":"Gyroscope measurement noise covariance","htmlid":"mw_6e86f7c7-e83d-4b64-9f53-30e99a7a49f7","value":["3-by-3 matrix"]},{"name":"AccelerometerNoise","readonly":true,"purpose":"Accelerometer measurement noise covariance","htmlid":"mw_37fac86d-a40d-4a53-ae5d-4c009eed2563","value":["3-by-3 matrix"]},{"name":"GyroscopeReadings","readonly":true,"purpose":"Gyroscope readings","htmlid":"mw_29f3cf5b-03a0-4421-bbac-55fc188f2de6","value":["N-by-3 matrix"]},{"name":"AccelerometerReadings","readonly":true,"purpose":"Accelerometer readings","htmlid":"mw_3a324359-069a-46f5-be36-5bbd35c58eaa","value":["N-by-3 matrix"]},{"name":"ReferenceFrame","purpose":"Reference frame for local coordinate system","htmlid":"mw_c1ff1aab-ba8d-4b68-9cef-7fee09ec75d1_sep_mw_18f5fb44-2a81-4f67-bf11-86ac787b7c9c","value":["\"ENU\"","\"NED\""],"defaultvalue":"\"ENU\""},{"name":"SensorTransform","purpose":"Transformation consisting of 3-D translation and rotation to transform connecting pose nodes to initial IMU frame","htmlid":"mw_d44b03d6-15cb-4086-84b2-719ccdafdf2d","value":["se3()","se3 object"],"defaultvalue":"se3()"}]}],"objectfunctions":[{"title":"","functions":[{"name":"nodeType","url":"factorgraph.nodetype.html","description":"Get node type of node in factor graph"},{"name":"predict","url":"factorimu.predict.html","description":"Predict pose and velocity of factor"}]}],"examples":[{"url":"factorimu.html#mw_e45daa64-958d-4bab-96d4-d20fadbb644c","open_command":"openExample('nav\/AddFactorIMUObjectToFactorGraphExample')","title":"Add factorIMU Object to Factor Graph"}],"seealso":[{"url":"factorgraph.html","name":"factorGraph"},{"url":"factorimuparameters.html","name":"factorIMUParameters"},{"url":"factorimubiasprior.html","name":"factorIMUBiasPrior"},{"url":"estimatecameraimutransform.html","name":"estimateCameraIMUTransform"},{"url":"estimategravityrotation.html","name":"estimateGravityRotation"},{"url":"estimategravityrotationandposescale.html","name":"estimateGravityRotationAndPoseScale"}]},{"href":"ref\/factorimu.predict.html","refentity":[{"type":"function","name":"predict","fcntype":"instancemethod"},{"type":"method","name":"factorIMU.predict","fcntype":"instancemethod"}],"refpurpose":"Predict pose and velocity of factor","introduced":"R2022a","description":"This MATLAB function predicts the pose predictpose and velocity predictedvel of the factor factor based on IMU readings and the initial pose, prevpose, velocity prevvel, and biasprevbias.","syntaxgroup":[{"title":"","syntax":["[predictedpose,predictedvel] = predict(factor,prevpose,prevvel,prevbias)"]}],"inputgroup":[{"title":"","inputs":[{"name":"factor","purpose":"IMU factor","htmlid":"mw_0cac6bf3-bf0b-4f2d-a596-d8bd939288a3","value":["factorIMU object"]},{"name":"prevpose","purpose":"Previous pose of factor","htmlid":"mw_90392536-76ce-40b4-b169-396ee8311601","value":["seven-element vector"]},{"name":"prevvel","purpose":"Previous 3-D velocity","htmlid":"mw_6cc91d69-30f4-4306-87c7-3378a7a1df36","value":["three-element vector"]},{"name":"prevbias","purpose":"Previous 3-D biases of gyroscope and accelerometer","htmlid":"mw_7ddbfa16-5891-4edd-87a0-dcc95155672b","value":["six-element vector"]}]}],"outputs":[{"name":"predictedpose","purpose":"Predicted pose","htmlid":"mw_35b06f01-d1f5-4350-9b65-f2be7f9f52e7","value":["seven-element vector"]},{"name":"predictedvel","purpose":"Predicted velocity","htmlid":"mw_916a9c6d-5549-47dc-a334-480dbbc26f0b","value":["three-element vector"]}],"examples":[{"url":"factorimu.predict.html#mw_45307e6d-9a70-4c8b-8c94-064b36fc40fe","open_command":"openExample('nav\/PredictPoseAndVelocityOfIMUFactorExample')","title":"Predict Pose and Velocity of IMU Factor"}],"seealso":[{"url":"factorimu.html","name":"factorIMU"},{"url":"factorgraph.html","name":"factorGraph"}]},{"href":"ref\/factorimubiasprior.html","refentity":[{"type":"object","name":"factorIMUBiasPrior"},{"type":"function","name":"factorIMUBiasPrior","fcntype":"constructor"}],"refpurpose":"Prior factor for IMU bias","introduced":"R2022a","description":"The factorIMUBiasPrior object is a factor that has prior information for an IMU bias for a factorGraph object.","syntaxgroup":[{"title":"","syntax":["F = factorIMUBiasPrior(nodeID)","F = factorIMUBiasPrior(nodeID,Name=Value)"]}],"classpropertygroup":[{"classproperty":[{"name":"NodeID","readonly":true,"purpose":"Node ID numbers","htmlid":"mw_5afd6f9b-c996-4f48-afe4-bf6e5f8b9907","value":["N-element column vector of nonnegative integers"]},{"name":"Measurement","purpose":"Measured prior IMU bias","htmlid":"mw_8a76c1b1-84df-49a2-bb49-c115564bb05b","value":["zeros(N,6)","N-by-6 matrix"],"defaultvalue":"zeros(N,6)"},{"name":"Information","purpose":"Information matrices associated with measurements","htmlid":"mw_70c09b74-b554-43dd-a40d-9ea2dbc546f3_sep_mw_ea9ae0e2-503c-4046-826b-02503c41b83e","value":["eye(6)","6-by-6 matrix","6-by-6-by-N array"],"defaultvalue":"eye(6)"}]}],"objectfunctions":[{"title":"","functions":[{"name":"nodeType","url":"factorgraph.nodetype.html","description":"Get node type of node in factor graph"}]}],"examples":[{"url":"factorimubiasprior.html#mw_2976ece4-88f2-4a09-b80a-02be1eae61f6","open_command":"openExample('nav\/AddFactorIMUBiasPriorObjectToFactorGraphExample')","title":"Add factorIMUBiasPrior Object to Factor Graph"}],"seealso":[{"url":"factorgraph.html","name":"factorGraph"},{"url":"factorimu.html","name":"factorIMU"},{"url":"factorimuparameters.html","name":"factorIMUParameters"}]},{"href":"ref\/factorimuparameters.html","refentity":[{"type":"object","name":"factorIMUParameters"},{"type":"function","name":"factorIMUParameters","fcntype":"constructor"}],"refpurpose":"Factor IMU parameters","introduced":"R2023a","description":"Use a factorIMUParameters object to specify factor IMU parameters to a factorIMU object.","syntaxgroup":[{"title":"","syntax":["params = factorIMUParameters","params = factorIMUParameters(Name=Value)"]}],"classpropertygroup":[{"classproperty":[{"name":"SampleRate","purpose":"IMU sampling rate","htmlid":"mw_a9fa1bb4-4a1a-4f82-bd68-6f63729eddcf","value":["100","numeric scalar greater than or equal to 100"],"defaultvalue":"100"},{"name":"GyroscopeBiasNoise","purpose":"Gyroscope bias process noise covariance","htmlid":"mw_21153064-8325-4c08-acc6-c370d1288bfb","value":["eye(3)","3-by-3 matrix","three-element row vector","numeric scalar"],"defaultvalue":"eye(3)"},{"name":"AccelerometerBiasNoise","purpose":"Accelerometer bias process noise covariance","htmlid":"mw_0c1c2ffe-a8f7-490d-95ca-1ce874a7deba","value":["eye(3)","3-by-3 matrix","three-element row vector","numeric scalar"],"defaultvalue":"eye(3)"},{"name":"GyroscopeNoise","purpose":"Gyroscope measurement noise covariance","htmlid":"mw_f45fee82-b1c1-4992-8be8-99984549a43c","value":["eye(3)","3-by-3 matrix","three-element row vector","numeric scalar"],"defaultvalue":"eye(3)"},{"name":"AccelerometerNoise","purpose":"Accelerometer measurement noise covariance","htmlid":"mw_96bd312d-1edc-4d4f-b5e6-55646dbb929e","value":["eye(3)","3-by-3 matrix","three-element row vector","numeric scalar"],"defaultvalue":"eye(3)"},{"name":"ReferenceFrame","purpose":"Reference frame for local coordinate system","htmlid":"mw_84be8ac1-0590-4488-8c5c-c49e3982e437_sep_mw_18f5fb44-2a81-4f67-bf11-86ac787b7c9c","value":["\"ENU\"","\"NED\""],"defaultvalue":"\"ENU\""}]}],"examples":[{"url":"factorimuparameters.html#mw_28855e5d-fa01-443b-bb16-fd98567d252b","open_command":"openExample('nav\/SpecifyIMUParamsOfFactorIMUUsingFactorIMUParametersExample')","title":"Specify IMU Parameters of factorIMU Object Using factorIMUParameters Object"}],"seealso":[{"url":"factorgraph.html","name":"factorGraph"},{"url":"factorimu.html","name":"factorIMU"},{"url":"estimategravityrotation.html","name":"estimateGravityRotation"},{"url":"estimategravityrotationandposescale.html","name":"estimateGravityRotationAndPoseScale"}]},{"href":"ref\/factorposese2andpointxy.html","refentity":[{"type":"object","name":"factorPoseSE2AndPointXY"},{"type":"function","name":"factorPoseSE2AndPointXY","fcntype":"constructor"}],"refpurpose":"Factor relating SE(2) position and 2-D point","introduced":"R2022b","description":"The factorPoseSE2AndPointXY object contains factors that each describe the relationship between a position in the SE(2) state space and a 2-D landmark point.","syntaxgroup":[{"title":"","syntax":["F = factorPoseSE2AndPointXY(nodeID)","F = factorPoseSE2AndPointXY(___,Name=Value)"]}],"classpropertygroup":[{"classproperty":[{"name":"NodeID","readonly":true,"purpose":"Node ID numbers","htmlid":"mw_83d8188f-1150-4193-9313-d191ffa72f0d","value":["N-by-2 matrix of nonnegative integers"]},{"name":"Measurement","purpose":"Measured relative position","htmlid":"mw_34500c6a-65c7-4208-a547-9ca142ee738a","value":["zeros(N,2)","N-by-2 matrix"],"defaultvalue":"zeros(N,2)"},{"name":"Information","purpose":"Information matrix associated with uncertainty of measurements","htmlid":"mw_d0fe4255-07c1-4af3-a3f4-17b9cbe4136b","value":["eye(2)","2-by-2 matrix","2-by-2-by-N array"],"defaultvalue":"eye(2)"}]}],"objectfunctions":[{"title":"","functions":[{"name":"nodeType","url":"factorgraph.nodetype.html","description":"Get node type of node in factor graph"}]}],"examples":[{"url":"factorposese2andpointxy.html#mw_2e6f6374-7ebf-44aa-aef7-f2da40536362","open_command":"openExample('nav\/EstimatePositionUsingLandmarkFactorsExample')","title":"Estimate Poses Using Landmark Factors"}],"seealso":[{"url":"factorgraph.html","name":"factorGraph"},{"url":"factortwoposese2.html","name":"factorTwoPoseSE2"},{"url":"factorposese3andpointxyz.html","name":"factorPoseSE3AndPointXYZ"}]},{"href":"ref\/factorposese3andpointxyz.html","refentity":[{"type":"object","name":"factorPoseSE3AndPointXYZ"},{"type":"function","name":"factorPoseSE3AndPointXYZ","fcntype":"constructor"}],"refpurpose":"Factor relating SE(3) position and 3-D point","introduced":"R2022b","description":"The factorPoseSE3AndPointXYZ object contains factors that each describe the relationship between a position in the SE(3) state space and a 3-D landmark point.","syntaxgroup":[{"title":"","syntax":["F = factorPoseSE3AndPointXYZ(nodeID)","F = factorPoseSE3AndPointXYZ(___,Name=Value)"]}],"classpropertygroup":[{"classproperty":[{"name":"NodeID","readonly":true,"purpose":"Node ID numbers","htmlid":"mw_df130fd7-ff67-4366-b053-d25802af76c7","value":["N-by-2 matrix of nonnegative integers"]},{"name":"Measurement","purpose":"Measured relative position","htmlid":"mw_f87b0636-46d1-4fd2-b32f-cf279b598a2c","value":["zeros(N,3)","N-by-3 matrix"],"defaultvalue":"zeros(N,3)"},{"name":"Information","purpose":"Information matrix associated with uncertainty of measurements","htmlid":"mw_786ec939-29e0-4526-82ed-89f4cd9c25e0","value":["eye(3)","3-by-3 matrix","3-by-3-by-N array"],"defaultvalue":"eye(3)"}]}],"objectfunctions":[{"title":"","functions":[{"name":"nodeType","url":"factorgraph.nodetype.html","description":"Get node type of node in factor graph"}]}],"seealso":[{"url":"factorgraph.html","name":"factorGraph"},{"url":"factortwoposese3.html","name":"factorTwoPoseSE3"},{"url":"factorposese2andpointxy.html","name":"factorPoseSE2AndPointXY"},{"url":"factorcamerase3andpointxyz.html","name":"factorCameraSE3AndPointXYZ"}]},{"href":"ref\/factorposese3prior.html","refentity":[{"type":"object","name":"factorPoseSE3Prior"},{"type":"function","name":"factorPoseSE3Prior","fcntype":"constructor"}],"refpurpose":"Full-state prior factor for SE(3) pose","introduced":"R2022a","description":"The factorPoseSE3Prior object is a full-state prior factor for an SE(3) state space pose for a factorGraph object.","syntaxgroup":[{"title":"","syntax":["F = factorPoseSE3Prior(nodeID)","F = factorPoseSE3Prior(nodeID,Name=Value)"]}],"classpropertygroup":[{"classproperty":[{"name":"NodeID","readonly":true,"purpose":"Node ID numbers","htmlid":"mw_65bab651-6c3d-4f71-8acb-559b893876c7","value":["N-element column vector of nonnegative integers"]},{"name":"Measurement","purpose":"Measured absolute SE(3) prior pose in local coordinates","htmlid":"mw_19011fd7-1344-4bda-a882-eef1f2c5de34","value":["[zeros(N,3) ones(N,1) zeros(N,3)]","N-by-7 matrix"],"defaultvalue":"[zeros(N,3) ones(N,1) zeros(N,3)]"},{"name":"Information","purpose":"Information matrices associated with measurements","htmlid":"mw_577d1cd9-07fa-4680-af07-d0efc04aa4f4_sep_mw_ea9ae0e2-503c-4046-826b-02503c41b83e","value":["eye(6)","6-by-6 matrix","6-by-6-by-N array"],"defaultvalue":"eye(6)"}]}],"objectfunctions":[{"title":"","functions":[{"name":"nodeType","url":"factorgraph.nodetype.html","description":"Get node type of node in factor graph"}]}],"examples":[{"url":"factorposese3prior.html#mw_582f936a-95a8-4620-bc97-1c369d904f19","open_command":"openExample('nav\/AddFactorPoseSE3PriorObjectToFactorGraphExample')","title":"Add factorPoseSE3Prior Object to Factor Graph"}],"seealso":[{"url":"factorgraph.html","name":"factorGraph"},{"url":"factortwoposese3.html","name":"factorTwoPoseSE3"},{"url":"factorposese3andpointxyz.html","name":"factorPoseSE3AndPointXYZ"},{"url":"factorcamerase3andpointxyz.html","name":"factorCameraSE3AndPointXYZ"},{"url":"factorgps.html","name":"factorGPS"}]},{"href":"ref\/factortwoposese2.html","refentity":[{"type":"object","name":"factorTwoPoseSE2"},{"type":"function","name":"factorTwoPoseSE2","fcntype":"constructor"}],"refpurpose":"Factor relating two SE(2) poses","introduced":"R2022a","description":"The factorTwoPoseSE2 object contains factors that relate pairs of poses in the SE(2) state space for a factorGraph object.","syntaxgroup":[{"title":"","syntax":["F = factorTwoPoseSE2(nodeID)","F = factorTwoPoseSE2(nodeID,Name=Value)"]}],"classpropertygroup":[{"classproperty":[{"name":"NodeID","readonly":true,"purpose":"Node ID numbers","htmlid":"mw_2bd10c1d-d6ef-42d5-8fd9-fd82b13b5251","value":["N-by-2 matrix of nonnegative integers"]},{"name":"Measurement","purpose":"Measured relative pose","htmlid":"mw_6dfc99c9-0793-4d26-8861-3a1abdf95874","value":["zeros(N,3)","N-by-3 matrix"],"defaultvalue":"zeros(N,3)"},{"name":"Information","purpose":"Information matrix associated with measurements","htmlid":"mw_15b22481-11c5-43a9-8276-784b264ababa","value":["eye(3)","3-by-3 matrix","3-by-3-N array"],"defaultvalue":"eye(3)"}]}],"objectfunctions":[{"title":"","functions":[{"name":"nodeType","url":"factorgraph.nodetype.html","description":"Get node type of node in factor graph"}]}],"examples":[{"url":"factortwoposese2.html#mw_8bdce779-31af-4e6d-b3d9-ce1f5419023f","open_command":"openExample('nav\/EstimatePosesUsing2DPoseFactorsExample')","title":"Estimate Poses Using 2-D Pose Factors"}],"seealso":[{"url":"factorgraph.html","name":"factorGraph"},{"url":"factortwoposese3.html","name":"factorTwoPoseSE3"},{"url":"factorposese2andpointxy.html","name":"factorPoseSE2AndPointXY"}]},{"href":"ref\/factortwoposese3.html","refentity":[{"type":"object","name":"factorTwoPoseSE3"},{"type":"function","name":"factorTwoPoseSE3","fcntype":"constructor"}],"refpurpose":"Factor relating two SE(3) poses","introduced":"R2022a","description":"The factorTwoPoseSE3 object contains factors that relate pairs of poses in the SE(3) state space for a factorGraph object.","syntaxgroup":[{"title":"","syntax":["F = factorTwoPoseSE3(nodeID)","F = factorTwoPoseSE3(nodeID,Name=Value)"]}],"classpropertygroup":[{"classproperty":[{"name":"NodeID","readonly":true,"purpose":"Node ID numbers","htmlid":"mw_b799a4cf-98de-41ab-b32b-0e02c12a350e","value":["N-by-2 matrix of nonnegative integers"]},{"name":"Measurement","purpose":"Measured relative pose","htmlid":"mw_7307a9d5-ee92-4656-bb29-ac0ccb65af65","value":["[zeros(N,3) ones(N,1) zeros(N,3)]","N-by-7 matrix"],"defaultvalue":"[zeros(N,3) ones(N,1) zeros(N,3)]"},{"name":"Information","purpose":"Information matrices associated with measurements","htmlid":"mw_48ec780c-839b-465a-9e77-c4caa5f9ff54","value":["eye(6)","6-by-6 matrix","6-by-6-by-N array"],"defaultvalue":"eye(6)"}]}],"objectfunctions":[{"title":"","functions":[{"name":"nodeType","url":"factorgraph.nodetype.html","description":"Get node type of node in factor graph"}]}],"examples":[{"url":"factortwoposese3.html#mw_6f32bfa7-0553-4a1c-ba64-79ff2cd4bed2","open_command":"openExample('nav\/AddFactorTwoPoseSE3ObjectToFactorGraphExample')","title":"Add factorTwoPoseSE3 Object to Factor Graph"}],"seealso":[{"url":"factorgraph.html","name":"factorGraph"},{"url":"factortwoposese2.html","name":"factorTwoPoseSE2"},{"url":"factorposese3prior.html","name":"factorPoseSE3Prior"},{"url":"factorposese3andpointxyz.html","name":"factorPoseSE3AndPointXYZ"},{"url":"factorcamerase3andpointxyz.html","name":"factorCameraSE3AndPointXYZ"}]},{"href":"ref\/factortwoposesim3.html","refentity":[{"type":"object","name":"factorTwoPoseSIM3"},{"type":"function","name":"factorTwoPoseSIM3","fcntype":"constructor"}],"refpurpose":"Factor relating two SIM(3) poses","introduced":"R2025a","description":"The factorTwoPoseSIM3 object contains factors that each describe the relationship between a pair of similarity transformation poses in the SIM(3) state space.","syntaxgroup":[{"title":"","syntax":["F = factorTwoPoseSIM3(nodeID)","F = factorTwoPoseSIM3(nodeID,Name=Value)"]}],"inputgroup":[{"title":"","inputs":[{"name":"nodeID","purpose":"Node ID numbers","htmlid":"mw_5541cc77-b078-45bf-9ad7-c467291996d7","value":["N-by-4 matrix of nonnegative integers"]}]},{"namevaluepairs":[{"title":"","inputs":[{"name":"Measurement","purpose":"Measured SE(3) or SIM(3) relative pose","htmlid":"mw_df1fdae5-26bf-45d7-b734-631b1e8b4c6e","value":["[zeros(N,3) ones(N,1) zeros(N,3) ones(N,1)]","N-by-8 matrix","N-by-7 matrix"],"defaultvalue":"[zeros(N,3) ones(N,1) zeros(N,3) ones(N,1)]"},{"name":"Information","purpose":"Information matrix associated with the uncertainty of the measurement","htmlid":"mw_79d33662-8889-4d64-95af-f9d88c95afc2","value":["eye(7)","7-by-7 matrix","7-by-7-by-N array"],"defaultvalue":"eye(7)"}]}]}],"outputs":[{"name":"F","purpose":"Factors relating similarity transformation poses in SIM(3) state space","htmlid":"mw_871fb7c7-14f7-4b4e-85c9-dc6958507a60","value":["factorTwoPoseSIM3 object"]}],"classpropertygroup":[{"classproperty":[{"name":"NodeID","purpose":"Node ID numbers","htmlid":"mw_a8916404-c95b-4bfe-ba0e-fedcc33924b8","value":["N-by-4 matrix of nonnegative numbers"]},{"name":"Measurement","purpose":"Measured SE(3) or SIM(3) relative pose","htmlid":"mw_8971482e-02cb-4677-b452-2fdc7b8cc33c","value":["[zeros(N,3) ones(N,1) zeros(N,3) ones(N,1)]","N-by-8 matrix","N-by-7 matrix"],"defaultvalue":"[zeros(N,3) ones(N,1) zeros(N,3) ones(N,1)]"},{"name":"Information","purpose":"Information matrix associated with the uncertainty of the measurement","htmlid":"mw_fd2847cd-9a17-4b79-b31b-9878dbb91f8c","value":["eye(7)","7-by-7 matrix","7-by-7-by-N array"],"defaultvalue":"eye(7)"}]}],"objectfunctions":[{"title":"","functions":[{"name":"nodeType","url":"factorgraph.nodetype.html","description":"Get node type of node in factor graph"}]}],"examples":[{"url":"factortwoposesim3.html#mw_dac55de1-4225-4202-9651-1212ddb3d75e","open_command":"openExample('nav\/AddSimilarityTransformationFactorToFactorGraphExample')","title":"Add Similarity Transformation Factor To Factor Graph Using factorTwoPoseSIM3 Object"}],"seealso":[{"url":"factorgraph.html","name":"factorGraph"},{"url":"factortwoposese3.html","name":"factorTwoPoseSE3"},{"url":"estimategravityrotation.html","name":"estimateGravityRotation"},{"url":"estimategravityrotationandposescale.html","name":"estimateGravityRotationAndPoseScale"}]},{"href":"ref\/factorvelocity3prior.html","refentity":[{"type":"object","name":"factorVelocity3Prior"},{"type":"function","name":"factorVelocity3Prior","fcntype":"constructor"}],"refpurpose":"Prior factor for 3-D velocity","introduced":"R2022a","description":"The factorVelocity3Prior object is a factor that has information for a prior velocity in 3-D for a factorGraph object.","syntaxgroup":[{"title":"","syntax":["F = factorVelocity3Prior(nodeID)","F = factorVelocity3Prior(nodeID,Name=Value)"]}],"classpropertygroup":[{"classproperty":[{"name":"NodeID","readonly":true,"purpose":"Node ID numbers","htmlid":"mw_8a1e7926-e373-49de-b843-900d20f2411c","value":["N-element column vector of nonnegative integers"]},{"name":"Measurement","purpose":"Measured prior velocity","htmlid":"mw_806bd8c1-ca39-45a6-8fe7-8f2768137678","value":["zeros(N,3)","N-by-3 matrix"],"defaultvalue":"zeros(N,3)"},{"name":"Information","purpose":"Information matrix associated with measurements","htmlid":"mw_a7d6d593-8276-4e12-a2b7-4bfe17522854","value":["eye(3)","3-by-3 matrix","3-by-3-N array"],"defaultvalue":"eye(3)"}]}],"objectfunctions":[{"title":"","functions":[{"name":"nodeType","url":"factorgraph.nodetype.html","description":"Get node type of node in factor graph"}]}],"examples":[{"url":"factorvelocity3prior.html#mw_c4043e10-152f-47f5-a66d-8c87112c7f85","open_command":"openExample('nav\/AddFactorVelocity3PriorObjectToFactorGraphExample')","title":"Add factorVelocity3Prior Object to Factor Graph"}],"seealso":[{"url":"factorgraph.html","name":"factorGraph"},{"url":"factorimu.html","name":"factorIMU"},{"url":"factorimubiasprior.html","name":"factorIMUBiasPrior"}]},{"href":"ref\/fractalcoef.html","refentity":[{"type":"function","name":"fractalcoef","fcntype":"simple"}],"refpurpose":"Filter coefficients for fractal noise generation","introduced":"R2023b","description":"This MATLAB function returns the filter coefficients for generating fractal noise with a power spectral density of 1\/f, where f is the frequency.","syntaxgroup":[{"title":"","syntax":["coeffs = fractalcoef","coeffs = fractalcoef(numPoles)","coeffs = fractalcoef(numPoles,alpha)"]}],"inputgroup":[{"title":"","inputs":[{"name":"numPoles","purpose":"Number of poles","htmlid":"mw_5d4e560f-7a53-43e0-a790-c530253e5c57","value":["positive integer"]},{"name":"alpha","purpose":"Alpha value","htmlid":"mw_f53b15e6-1c45-4752-8134-02df6958d4b0","value":["1","scalar in range (0,2)"],"defaultvalue":"1"}]}],"outputs":[{"name":"coeffs","purpose":"Coefficients for generating fractal noise","htmlid":"mw_1520ccb2-8c7d-4dba-b749-a4ab8f7732e1","value":["structure"]}],"examples":[{"url":"fractalcoef.html#mw_f01cfad0-7a67-4366-a87b-29f95cbdbd2c","open_command":"openExample('shared_positioning\/GeneratePinkNoiseAndObtainAllanVarianceExample')","title":"Generate Pink Noise and Obtain Allan Variance"},{"url":"fractalcoef.html#mw_3e56598f-e078-4bf4-8472-e86a85e4ad3d","open_command":"openExample('shared_positioning\/ComparePinkNoiseForVariousValuesOfAlphaExample')","title":"Compare Fractal Noise for Various Values of Alpha"}],"seealso":[{"url":"accelparams.html","name":"accelparams"},{"url":"gyroparams.html","name":"gyroparams"},{"url":"magparams.html","name":"magparams"}]},{"href":"ref\/galalmanacread.html","refentity":[{"type":"function","name":"galalmanacread","fcntype":"simple"}],"refpurpose":"Read data from Galileo XML almanac file","introduced":"R2023b","description":"This MATLAB function reads data from the Galileo XML almanac file specified by filename, and returns the parameters of each associated satellite as a timetable.","syntaxgroup":[{"title":"","syntax":["data = galalmanacread(filename)","data = galalmanacread(filename,IssueDate=date)"]}],"inputgroup":[{"title":"","inputs":[{"name":"filename","purpose":"Galileo XML almanac filename","htmlid":"mw_190fbdcc-9801-4eff-9cdd-e3e34ce5e3f5","value":["string scalar","character vector"]},{"name":"date","purpose":"Almanac file issue date","htmlid":"mw_924a4b08-7bba-4ed0-90a4-f027a16f7c19","value":["datetime"]}]}],"outputs":[{"name":"data","purpose":"Parameters of each satellite","htmlid":"mw_12bbd5ed-b43d-4a56-86ad-62bde84e11eb","value":["timetable"]}],"examples":[{"url":"galalmanacread.html#mw_09bc07b0-c7c8-4cd1-98fb-b366f2dd2519","open_command":"openExample('nav\/ReadNavigationDataFromGalileoAlmanacFileExample')","title":"Read Navigation Data from Galileo Almanac File"}],"seealso":[{"url":"rinexread.html","name":"rinexread"},{"url":"semread.html","name":"semread"},{"url":"yumaread.html","name":"yumaread"},{"url":"gnssconstellation.html","name":"gnssconstellation"}]},{"href":"ref\/geom2struct.html","refentity":[{"type":"function","name":"geom2struct","fcntype":"simple"}],"refpurpose":"Convert collision geometry objects to structure array","introduced":"R2024a","description":"This MATLAB function converts a cell array of collision geometries into a structure array.","syntaxgroup":[{"title":"","syntax":["meshStruct = geom2struct(geom)","meshStruct = geom2struct(geom,id)","meshStruct = geom2struct(___,LocalOffsetPose=poseOffset)"]}],"inputgroup":[{"title":"","inputs":[{"name":"geom","purpose":"Collision geometry objects","htmlid":"mw_db022b4f-99b1-4899-8266-9ad742f70ade","value":["collisionBox","collisionCapsule","collisionCylinder","collisionMesh","collisionSphere","N-element cell array of collision geometry objects"]},{"name":"id","purpose":"Geometry structure ID","htmlid":"mw_cd7b0ca5-9ea6-42a9-89d8-201d0b8ced7c","value":["positive integer","N-element vector of positive integers"]},{"name":"poseOffset","purpose":"Local pose offset","htmlid":"mw_fc5ce02e-4872-46ce-bbaf-b650ddfc63e8","value":["4-by-4 homogeneous transformation matrix","4-by-4-by-N array of homogeneous transformation matrices","se3 object","N-element array of se3 objects"]}]}],"outputs":[{"name":"meshStruct","purpose":"Geometry mesh structure","htmlid":"mw_6da7543e-326c-42af-a0f4-5ec492787c46","value":["structure","N-element structure array"]}],"examples":[{"url":"geom2struct.html#mw_56211b4c-1c0f-40cc-bc83-dceaa596365e","open_command":"openExample('nav\/AddMeshesToMeshTSDFManagerExample')","title":"Add Meshes to Mesh TSDF Manager"}],"seealso":[{"url":"meshtsdf.html","name":"meshtsdf"},{"url":"collisionbox.html","name":"collisionBox"},{"url":"collisioncapsule.html","name":"collisionCapsule"},{"url":"collisioncylinder.html","name":"collisionCylinder"},{"url":"collisionmesh.html","name":"collisionMesh"},{"url":"collisionsphere.html","name":"collisionSphere"}]},{"href":"ref\/gnssconstellation.html","refentity":[{"type":"function","name":"gnssconstellation","fcntype":"simple"}],"refpurpose":"Satellite locations at specified time","introduced":"R2021a","description":"This MATLAB function returns the satellite positions and velocities at the datetime t.","syntaxgroup":[{"title":"","syntax":["[satPos,satVel] = gnssconstellation(t)","[satPos,satVel,satID] = gnssconstellation(t,navData)","[satPos,satVel,satID] = gnssconstellation(t,navData,GNSSFileType=gnssFileType)"]}],"inputgroup":[{"title":"","inputs":[{"name":"t","purpose":"Current time for satellite simulation","htmlid":"mw_c852a7d1-2a4a-4f82-959f-4532f8f6a0f7","value":["scalar datetime array"]},{"name":"navData","purpose":"Navigation data","htmlid":"mw_ff1dc0ec-d23a-4d0f-b3f7-98df964c4c4f","value":["timetable"]},{"name":"gnssFileType","purpose":"GNSS file type","htmlid":"mw_53819074-3342-49d8-aa53-64154be3859e","value":["\"RINEX\"","\"SEM\"","\"YUMA\"","\"galalmanac\""]}]}],"outputs":[{"name":"satPos","purpose":"Satellite positions","htmlid":"mw_5b523af6-1812-455c-9574-d7ea5c75a4ad","value":["N-by-3 matrix of scalars"]},{"name":"satVel","purpose":"Satellite velocities","htmlid":"mw_94f939cc-1ce8-4c1d-84d6-7b4c24480ce1","value":["N-by-3 matrix of scalar"]},{"name":"satID","purpose":"Satellite identification numbers","htmlid":"mw_b8019b8a-6693-4284-9cdf-386727d07ef3","value":["N-element column vector"]}],"examples":[{"url":"gnssconstellation.html#mw_f8c3a411-e0b2-414c-8616-cc3cb1a79ae1","open_command":"openExample('nav\/GetCurrentSatellitePositionsAndVelocitiesExample')","title":"Get Current Satellite Positions and Velocities"},{"url":"gnssconstellation.html#mw_224fb238-6213-4b1c-9f54-359a7b953cfa","open_command":"openExample('nav\/GetSatelliteLookAnglesForReceiverPositionExample')","title":"Get Satellite Look Angles for Receiver Position"},{"url":"gnssconstellation.html#mw_66c24c74-e05a-46cf-807a-4e33af4a8748","open_command":"openExample('nav\/RetrieveSatellitePositionsVelocitiesAndIDsFromRINEXFileExample')","title":"Retrieve Satellite Positions, Velocities, and IDs from RINEX File"},{"url":"gnssconstellation.html#mw_fe3f3edb-ad59-4f4f-83df-ad052c6e49d2","open_command":"openExample('nav\/RetrieveSatellitePositionsVelocitiesIDFromSEMAlmanacFileExample')","title":"Retrieve Satellite Positions, Velocities, and IDs from SEM Almanac File"},{"url":"gnssconstellation.html#mw_2f1f5d87-cbcd-44da-845b-b2572bf53bbb","open_command":"openExample('nav\/RetrieveSatellitePositionsVelocitiesAndIDFromYUMAAlmanacExample')","title":"Retrieve Satellite Positions, Velocities, and IDs from YUMA Almanac File"},{"url":"gnssconstellation.html#mw_946777ef-4606-45a9-902a-cc5f523c3ef9","open_command":"openExample('nav\/ReadNavigationDataFromGalileoAlmanacFileExample')","title":"Read Navigation Data from Galileo Almanac File"}],"seealso":[{"url":"gnsssensor-system-object.html","name":"gnssSensor"},{"url":"gpssensor-system-object.html","name":"gpsSensor"},{"url":"imusensor-system-object.html","name":"imuSensor"},{"url":"skyplot.html","name":"skyplot"},{"url":"lookangles.html","name":"lookangles"},{"url":"pseudoranges.html","name":"pseudoranges"},{"url":"receiverposition.html","name":"receiverposition"},{"url":"rinexread.html","name":"rinexread"},{"url":"rinexinfo.html","name":"rinexinfo"},{"url":"semread.html","name":"semread"},{"url":"yumaread.html","name":"yumaread"},{"url":"galalmanacread.html","name":"galalmanacread"}]},{"href":"ref\/gnsssensor-system-object.html","refentity":[{"type":"sysobj","name":"gnssSensor"},{"type":"function","name":"gnssSensor","fcntype":"constructor"}],"refpurpose":"Simulate GNSS to generate position and velocity readings","introduced":"R2020b","description":"The gnssSensor System object simulates a global navigation satellite system (GNSS) to generate position and velocity readings based on local position and velocity data.","syntaxgroup":[{"title":"","syntaxtype":"createobject","syntax":["GNSS = gnssSensor","GNSS = gnssSensor(ReferenceFrame=RF)","GNSS = gnssSensor(___,Name=Value)"]},{"title":"","syntaxtype":"usage","syntax":["[positionReadings,velocityReadings,status] = GNSS(position,velocity)"]}],"inputgroup":[{"title":"","inputs":[{"name":"RF","purpose":"Reference frame of sensor inputs","syntaxtype":"createobject","htmlid":"mw_8af835c3-785d-4fb4-8ddb-eb60cc499862","value":["'NED'","'ENU'"],"defaultvalue":"'NED'"}]},{"title":"","inputs":[{"name":"position","purpose":"Cartesian position of GNSS receiver in local navigation coordinate system","syntaxtype":"usage","htmlid":"mw_24605ac1-bb27-48f0-b405-13515dd020a0","value":["N-by-3 matrix"]},{"name":"velocity","purpose":"Velocity of GNSS receiver in local navigation coordinate system","syntaxtype":"usage","htmlid":"mw_f2df3206-7cb4-4c6e-8730-2e3b37f61e9b","value":["N-by-3 matrix"]}]}],"outputs":[{"name":"positionReadings","purpose":"Position readings in LLA coordinate system","syntaxtype":"usage","htmlid":"mw_5ebab743-2592-49cc-b127-bd0a155c8d11","value":["N-by-3 matrix"]},{"name":"velocityReadings","purpose":"Velocity readings in local navigation coordinate system","syntaxtype":"usage","htmlid":"mw_165e233b-2000-4736-8679-b14d7944a020","value":["N-by-3 matrix"]},{"name":"status","purpose":"Status information of visible satellites","syntaxtype":"usage","htmlid":"mw_052b45b1-d25c-4e27-b756-b1a7044a6cc6","value":["N-element array of structures"]}],"classpropertygroup":[{"classproperty":[{"name":"SampleRate","purpose":"Sample rate of GNSS receiver (Hz)","htmlid":"mw_c63be34c-097d-4f51-a879-917a533db626","value":["1","positive scalar"],"defaultvalue":"1"},{"name":"InitialTime","purpose":"Initial time of GNSS receiver","htmlid":"mw_17b33eff-d43a-471c-9c95-92dcf512668e","value":["datetime('now',TimeZone=\"UTC\")","datetime object"],"defaultvalue":"datetime('now',TimeZone=\"UTC\")"},{"name":"ReferenceLocation","purpose":"Origin of local navigation reference frame","htmlid":"mw_0a8627b0-8c8f-43b4-9214-7a0c8e76376e","value":["[0 0 0]","three-element row vector"],"defaultvalue":"[0 0 0]"},{"name":"MaskAngle","purpose":"Elevation mask angle (deg)","htmlid":"mw_3b2ef816-7b28-415c-b5c7-6acd64f61887","value":["10","scalar in [0, 90]"],"defaultvalue":"10"},{"name":"RangeAccuracy","purpose":"Standard deviation of measurement noise of pseudorange (m)","htmlid":"mw_b6fcfc0a-a41e-472b-babe-7a42b79f0dca","value":["1","nonnegative scalar"],"defaultvalue":"1"},{"name":"RangeRateAccuracy","purpose":"Standard deviation of measurement noise of pseudorange rate (m\/s)","htmlid":"mw_6edfdb6d-975c-4a4d-a971-0490a1736adc","value":["0.02","nonnegative scalar"],"defaultvalue":"0.02"},{"name":"RandomStream","purpose":"Random number source","htmlid":"mw_4bc06b08-832e-4534-808d-d1eb4d23977a","value":["\"Global stream\"","\"mt19937ar with seed\""],"defaultvalue":"\"Global stream\""},{"name":"Seed","purpose":"Initial seed of mt19937ar random number generator algorithm","htmlid":"mw_564febca-f1ba-4493-93fa-19cca2cb8a95","value":["67","nonnegative integer"],"defaultvalue":"67"}]}],"objectfunctions":[{"title":"Common to All System Objects","functions":[{"name":"clone","url":"..\/..\/matlab\/ref\/matlab.system.clone.html","description":"Create duplicate System object"},{"name":"step","url":"..\/..\/matlab\/ref\/step.html","description":"Run System object algorithm"},{"name":"release","url":"..\/..\/matlab\/ref\/matlab.system.releasesystemobject.html","description":"Release resources and allow changes to System object property values and input characteristics"},{"name":"reset","url":"..\/..\/matlab\/ref\/resetsystemobject.html","description":"Reset internal states of System object"},{"name":"isDone","url":"..\/..\/matlab\/ref\/isdone.html","description":"End-of-data status"}]}],"examples":[{"url":"gnsssensor-system-object.html#mw_2bba4f85-59c1-4c57-b648-eee080122186","open_command":"openExample('nav\/GenerateGNSSPositionAndVelocityReadingsExample')","title":"Generate GNSS Position and Velocity Readings"},{"url":"gnsssensor-system-object.html#mw_b5ab96fd-e857-43b2-a807-412a48c2e1fe","open_command":"openExample('nav\/ViewSatellitePostionsFromGNSSSensorExample')","title":"View Satellite Positions from GNSS Sensor"}],"seealso":[{"url":"gpssensor-system-object.html","name":"gpsSensor"},{"url":"imusensor-system-object.html","name":"imuSensor"},{"url":"nav.gnssmeasurementgenerator-system-object.html","name":"gnssMeasurementGenerator"},{"url":"skyplot.html","name":"skyplot"},{"url":"gnssconstellation.html","name":"gnssconstellation"},{"url":"lookangles.html","name":"lookangles"},{"url":"pseudoranges.html","name":"pseudoranges"},{"url":"receiverposition.html","name":"receiverposition"}]},{"href":"ref\/gps.html","refentity":[{"type":"block","name":"GPS"}],"refpurpose":"Simulate GPS sensor readings with noise","introduced":"R2021b","description":"The block outputs noise-corrupted GPS measurements based on the input position and velocity in the local coordinate frame or geodetic frame.","icon":{"fileref":"ref\/gpsfig.png","alt":"GPS Block"},"libraries":["UAV Toolbox \/ UAV Scenario and Sensor Modeling","Navigation Toolbox \/ Multisensor Positioning \/ Sensor Models","Sensor Fusion and Tracking Toolbox \/ Multisensor Positioning \/ Sensor Models"],"inputgroup":[{"title":"","inputs":[{"name":"Position","purpose":"Position of GPS receiver in navigation coordinate system","htmlid":"mw_7af68008-1e89-4791-bb23-25ba6b6c540f","value":["matrix"]},{"name":"Velocity","purpose":"Velocity in local navigation coordinate system (m\/s)","htmlid":"mw_f9cb29dd-8664-4060-8a01-cf66c0ad6582","value":["matrix"]}]}],"outputs":[{"name":"LLA","purpose":"Position in LLA coordinate system","htmlid":"mw_b7d6f5d6-ac0e-4126-a8a9-bd3aa839244a","value":["matrix"]},{"name":"Velocity","purpose":"Velocity in local navigation coordinate system (m\/s)","htmlid":"mw_49a2b9fe-1705-47f8-92de-ed15406c877b","value":["matrix"]},{"name":"Groundspeed","purpose":"Magnitude of horizontal velocity in local navigation coordinate system (m\/s)","htmlid":"mw_b3ec2f72-5b59-4cbe-9ebe-4d608d76a31a","value":["vector"]},{"name":"Course","purpose":"Direction of horizontal velocity in local navigation coordinate system (°)","htmlid":"mw_1f0699e4-90e0-417a-b287-bfd7a8c26ce7","value":["vector"]}],"parameters":[{"name":"Reference frame","purpose":"Reference frame","htmlid":"mw_2c49a8aa-f187-4231-bf8c-63cca4ffc1b8","value":["NED","ENU"],"defaultvalue":"NED"},{"name":"Position input format","purpose":"Position coordinate input format","htmlid":"mw_966dbb58-a0e4-4e08-86c7-14dbdd95c81d","value":["Local","Geodetic"],"defaultvalue":"Local"},{"name":"Reference location","purpose":"Origin of local navigation reference frame","htmlid":"mw_b6624011-dc9e-48f4-ba21-95487a501692","value":["[0,0,0]","three-element vector"],"defaultvalue":"[0,0,0]"},{"name":"Horizontal position accuracy","purpose":"Horizontal position accuracy (m)","htmlid":"mw_469ba9e6-c664-4858-97b6-0806e1a7b205","value":["1.6","nonnegative real scaler"],"defaultvalue":"1.6"},{"name":"Vertical position accuracy","purpose":"Vertical position accuracy (m)","htmlid":"mw_eb562296-c37d-4f1d-8a90-10bbc4bcb073","value":["3","nonnegative real scaler"],"defaultvalue":"3"},{"name":"Velocity accuracy","purpose":"Velocity accuracy (m\/s)","htmlid":"mw_a5ab748d-03c9-4c67-bb75-941f7d987777","value":["0.1","nonnegative real scalar"],"defaultvalue":"0.1"},{"name":"Decay factor","purpose":"Global position noise decay factor","htmlid":"mw_490c932d-1cfe-44f8-bfe6-3c822e670929","value":["0.999","scalar in range [0, 1]"],"defaultvalue":"0.999"},{"name":"Seed","purpose":"Initial seed","htmlid":"mw_84fa749b-369f-4f3e-a79a-aad3e10b5849","value":["67","nonnegative integer"],"defaultvalue":"67"},{"name":"Simulate using","purpose":"Type of simulation to run","htmlid":"mw_63e0b0cb-ddc9-4a24-93a2-42eac2892366","value":["Interpreted execution","Code generation"],"defaultvalue":"Interpreted execution"}],"examples":[{"url":"..\/ug\/simulate-gps-sensor-noise.html","open_command":"openExample('shared_gps\/SimulateGPSSensorNoiseExample')","title":"Simulate GPS Sensor Noise"}],"seealso":[{"url":"gpssensor-system-object.html","name":"gpsSensor"}]},{"href":"ref\/gpsdev-system-object.html","refentity":[{"type":"sysobj","name":"gpsdev"},{"type":"sysobj","name":"gpsDev"},{"type":"function","name":"gpsdev","fcntype":"constructor"}],"refpurpose":"Connect to a GPS receiver connected to host computer","introduced":"R2020b","description":"The gpsdev System object connects to a GPS receiver connected to the host computer.","syntaxgroup":[{"title":"","syntax":["gps = gpsdev(port)","gps = gpsdev(serialobj)","gps = gpsdev(___,Name=Value)"]}],"inputgroup":[{"title":"","inputs":[{"name":"port","purpose":"Serial port name","htmlid":"mw_e0429241-c4e7-4a2f-bf47-4e989a004a72","value":["character vector","string scalar"]}]},{"title":"","inputs":[{"name":"serialobj","purpose":"purpose name","htmlid":"mw_216ad8ce-328c-43da-8935-595111aba094","value":["serialport object"]}]}],"classpropertygroup":[{"classproperty":[{"name":"BaudRate","readonly":true,"purpose":"Baud rate","htmlid":"mw_7653ed0e-192b-4413-976e-6bb2ba5937bc","value":["9600"]},{"name":"ReadMode","purpose":"Specify which data samples to be returned","htmlid":"mw_161b4917-90e5-4661-8b3b-1766dbf45d84","value":["'latest'","'oldest'"],"defaultvalue":"'latest'"},{"name":"SamplesRead","readonly":true,"purpose":"Samples read","htmlid":"mw_59cb8930-bea7-4745-a264-0e8315004b03","value":["double"]},{"name":"SamplesAvailable","readonly":true,"purpose":"Samples in the host buffer","htmlid":"mw_efc005ed-fd95-4598-8eca-5e12eb1d27f2","value":["double"]},{"name":"SamplesPerRead","purpose":"Samples per read","htmlid":"mw_5f948105-a914-4f03-b086-680d5498d150","value":["1"],"defaultvalue":"1"},{"name":"OutputFormat","purpose":"Set output format","htmlid":"mw_b0900974-0d7d-4759-83bf-cbc389383d49","value":["'timetable'","'matrix'"],"defaultvalue":"'timetable'"},{"name":"TimeFormat","purpose":"Set the format of the time displayed when the GPS data is read","htmlid":"mw_dd4a7f0e-1560-4a34-a896-ab104ac3f162","value":["'datetime'","'duration'"],"defaultvalue":"'datetime'"}]}],"objectfunctions":[{"title":"","functions":[{"name":"flush","url":"gpsdev.flush.html","description":"Flush all GPS data accumulated in the buffers and reset properties"},{"name":"info","url":"gpsdev.info.html","description":"Read update rate, GPS lock information and number of satellites in view for the\n            GPS receiver"},{"name":"read","url":"gpsdev.read.html","description":"Read data from GPS receiver"},{"name":"release","url":"gpsdev.release.html","description":"Release the GPS object"},{"name":"writeBytes","url":"gpsdev.writebytes.html","description":"Write raw commands to the GPS receiver"}]}],"examples":[{"url":"gpsdev-system-object.html#mw_33f1ee08-06d7-441b-a065-c6d5e8caa28e","open_command":"openExample('nav\/PlotGeographicPositionUsingGPSConnectedToHostComputerExample')","title":"Plot Geographic Position Using GPS Connected to Host Computer"},{"url":"gpsdev-system-object.html#mw_98f4ef78-6b76-4143-a0b5-70fdc0e8512a","open_command":"openExample('nav\/WriteConfigurationCommandsToGPSReceiverExample')","title":"Write Configuration Commands to GPS Receiver"},{"url":"gpsdev-system-object.html#mw_8958ea2d-9f80-4022-935a-4ab8197ba415","open_command":"openExample('nav\/ReadDataFromGPSReceiverAsTimetableExample')","title":"Read Data from GPS Receiver as Timetable"}],"seealso":[{"url":"nmeaparser-system-object.html","name":"nmeaParser"}]},{"href":"ref\/gpsdev.flush.html","refentity":[{"type":"function","name":"flush","fcntype":"instancemethod"},{"type":"method","name":"gpsdev.flush","fcntype":"instancemethod"}],"refpurpose":"Flush all GPS data accumulated in the buffers and reset properties","introduced":"R2020b","description":"This MATLAB function clears the buffers and resets the values of SamplesRead and SamplesAvailable properties.","syntaxgroup":[{"title":"","syntax":["flush(gps)"]}],"inputgroup":[{"title":"","inputs":[{"name":"gps","purpose":"GPS sensor","htmlid":"mw_f2aab7d2-11e0-4d4a-beea-c31ea54d3aab","value":["gpsdev object"]}]}],"examples":[{"url":"gpsdev.flush.html#mw_83ca8490-3a92-424c-b3b5-44a25d267b41","open_command":"openExample('nav\/ReadDataFromGPSReceiverAsMatrixExample')","title":"Read Data from GPS Receiver as Matrix"}],"seealso":[{"url":"gpsdev-system-object.html","name":"gpsdev"},{"url":"gpsdev.release.html","name":"release"},{"url":"gpsdev.writebytes.html","name":"writeBytes"},{"url":"gpsdev.read.html","name":"read"},{"url":"gpsdev.info.html","name":"info"}]},{"href":"ref\/gpsdev.info.html","refentity":[{"type":"function","name":"info","fcntype":"instancemethod"},{"type":"method","name":"gpsdev.info","fcntype":"instancemethod"}],"refpurpose":"Read update rate, GPS lock information and number of satellites in view for the GPS receiver","introduced":"R2020b","description":"This MATLAB function returns the update rate of the GPS receiver, GPS lock information and number of satellites from which the GPS can read signals.","syntaxgroup":[{"title":"","syntax":["gpsInfo = info(gps)"]}],"inputgroup":[{"title":"","inputs":[{"name":"gps","purpose":"GPS sensor","htmlid":"mw_e8dca5fd-03a5-4c91-bbec-324c5d437d3f","value":["gpsdev object"]}]}],"outputs":[{"name":"gpsInfo","purpose":"GPS module information","htmlid":"mw_85dd69a9-40a1-4d84-8957-f3fa20e23b2b","value":["structure"]}],"examples":[{"url":"gpsdev.info.html#mw_440637f3-154a-4b27-b9b5-ecc5af6925b9","open_command":"openExample('nav\/ReadInformationFromGPSReceiverExample')","title":"Read Information from GPS Receiver"}],"seealso":[{"url":"gpsdev-system-object.html","name":"gpsdev"},{"url":"gpsdev.flush.html","name":"flush"},{"url":"gpsdev.release.html","name":"release"},{"url":"gpsdev.read.html","name":"read"},{"url":"gpsdev.writebytes.html","name":"writeBytes"}]},{"href":"ref\/gpsdev.read.html","refentity":[{"type":"function","name":"read","fcntype":"instancemethod"},{"type":"method","name":"gpsdev.read","fcntype":"instancemethod"}],"refpurpose":"Read data from GPS receiver","introduced":"R2020b","description":"This MATLAB function returns the GPS readings in timetable format.","syntaxgroup":[{"title":"","syntax":["[tt,overrun] = read(gps)","[lla,groundSpeed,course,dops,gpsReceiverTime,timestamp,overrun] = read(gps)"]}],"inputgroup":[{"title":"","inputs":[{"name":"gps","purpose":"GPS sensor","htmlid":"mw_d450b7d9-39c9-458f-a76b-1b89590a69f5","value":["gpsdev object"]}]}],"outputs":[{"name":"tt","purpose":"GPS data","htmlid":"mw_0945ef68-5ca2-4064-ae7e-07b77e68845c","value":["timetable"]},{"name":"lla","purpose":"Position in LLA coordinate system","htmlid":"mw_0dfb9c2e-08fd-4722-bde6-f0ed8e0e16b1","value":["N-by-3 matrix"]},{"name":"groundSpeed","purpose":"Speed in m\/s","htmlid":"mw_e4405eec-8db4-4b05-8c0e-a5f7b357a802","value":["N-by-1 vector"]},{"name":"course","purpose":"Course over ground","htmlid":"mw_736a3377-a3c1-42fe-87ba-06abbe7b58b0","value":["N-by-1 vector"]},{"name":"dops","purpose":"Dilution of precisions","htmlid":"mw_80d11fae-1fe0-43b8-b5f9-c4d26a0219be","value":["N-by-3 matrix"]},{"name":"gpsReceiverTime","purpose":"UTC time","htmlid":"mw_5aa8579d-745e-48a9-b3c3-001ae6e21cba","value":["N-by-1 vector"]},{"name":"timestamp","purpose":"Time at which GPS data is read","htmlid":"mw_32797659-392b-4236-8e63-a4cc641e88d8","value":["N-by-1 vector"]},{"name":"overrun","purpose":"Overrun","htmlid":"mw_67502d72-782e-4897-bad5-7b90ff5070b6","value":["scalar"]}],"examples":[{"url":"gpsdev.read.html#mw_7192d176-fb99-4f84-85cd-f7a1e94e012f","open_command":"openExample('nav\/ReadDataFromGPSReceiverAsTimetableExample')","title":"Read Data from GPS Receiver as Timetable"},{"url":"gpsdev.read.html#mw_5289fa5c-fd4a-42d7-a300-5aded0e11937","open_command":"openExample('nav\/ReadDataFromGPSReceiverAsMatrixExample')","title":"Read Data from GPS Receiver as Matrix"}],"seealso":[{"url":"gpsdev-system-object.html","name":"gpsdev"},{"url":"gpsdev.flush.html","name":"flush"},{"url":"gpsdev.release.html","name":"release"},{"url":"gpsdev.info.html","name":"info"},{"url":"gpsdev.writebytes.html","name":"writeBytes"}]},{"href":"ref\/gpsdev.release.html","refentity":[{"type":"function","name":"release","fcntype":"instancemethod"},{"type":"method","name":"gpsdev.release","fcntype":"instancemethod"}],"refpurpose":"Release the GPS object","introduced":"R2020b","description":"This MATLAB function release the system objects, allows configuration of non tunable properties, clear the buffers, and resets the values of SamplesRead and SamplesAvailable properties.","syntaxgroup":[{"title":"","syntax":["release(gps)"]}],"inputgroup":[{"title":"","inputs":[{"name":"gps","purpose":"GPS sensor","htmlid":"mw_a1e41d2f-f9fd-467d-9166-fdcc427f6d7d","value":["gpsdev object"]}]}],"examples":[{"url":"gpsdev.release.html#mw_1694146f-ae2c-4314-af8b-3cc61c013092","open_command":"openExample('nav\/ReadDataFromGPSReceiverAsTimetableExample')","title":"Read Data from GPS Receiver as Timetable"}],"seealso":[{"url":"gpsdev-system-object.html","name":"gpsdev"},{"url":"gpsdev.flush.html","name":"flush"},{"url":"gpsdev.writebytes.html","name":"writeBytes"},{"url":"gpsdev.read.html","name":"read"},{"url":"gpsdev.info.html","name":"info"}]},{"href":"ref\/gpsdev.writebytes.html","refentity":[{"type":"function","name":"writeBytes","fcntype":"instancemethod"},{"type":"method","name":"gpsdev.writeBytes","fcntype":"instancemethod"}],"refpurpose":"Write raw commands to the GPS receiver","introduced":"R2020b","description":"This MATLAB function writes raw commands specified by cmdArray to configure the GPS module.","syntaxgroup":[{"title":"","syntax":["writeBytes(gps,cmdArray)"]}],"inputgroup":[{"title":"","inputs":[{"name":"gps","purpose":"GPS sensor","htmlid":"mw_971e7016-b7d1-4972-a247-3b1ffd759bd4","value":["gpsdev object"]},{"name":"cmdArray","purpose":"Raw command to configure GPS module","htmlid":"mw_0ea2dda4-afa4-49eb-923b-0ef6e7568c80","value":["hexadecimal array"]}]}],"examples":[{"url":"gpsdev.writebytes.html#mw_f6a2c6db-69bd-4c5c-b37a-03f90e2b6f4a","open_command":"openExample('nav\/WriteConfigurationCommandsToGPSReceiverExample')","title":"Write Configuration Commands to GPS Receiver"}],"seealso":[{"url":"gpsdev-system-object.html","name":"gpsdev"},{"url":"gpsdev.flush.html","name":"flush"},{"url":"gpsdev.release.html","name":"release"},{"url":"gpsdev.read.html","name":"read"},{"url":"gpsdev.info.html","name":"info"}]},{"href":"ref\/gpssensor-system-object.html","refentity":[{"type":"sysobj","name":"gpsSensor"},{"type":"function","name":"gpsSensor","fcntype":"constructor"}],"refpurpose":"GPS receiver simulation model","introduced":"R2019b","description":"The gpsSensor System object models data output from a Global Positioning System (GPS) receiver.","syntaxgroup":[{"title":"","syntaxtype":"createobject","syntax":["GPS = gpsSensor","GPS = gpsSensor('ReferenceFrame',RF)","GPS = gpsSensor(___,Name=Value)"]},{"title":"","syntaxtype":"usage","syntax":["[position,velocity,groundspeed,course] = GPS(truePosition,trueVelocity)"]}],"inputgroup":[{"title":"","inputs":[{"name":"RF","purpose":"Reference frame of sensor inputs","syntaxtype":"createobject","htmlid":"mw_9f8a2d81-a8de-451b-9966-cfab104edfd1","value":["'NED'","'ENU'"],"defaultvalue":"'NED'"}]},{"title":"","inputs":[{"name":"truePosition","purpose":"Position of GPS receiver in navigation coordinate system","syntaxtype":"usage","htmlid":"mw_d50db4d4-92ae-496b-96e2-da500913fc99","value":["N-by-3 matrix"]},{"name":"trueVelocity","purpose":"Velocity of GPS receiver in navigation coordinate system (m\/s)","syntaxtype":"usage","htmlid":"mw_c3a248d5-898c-49e5-90d7-6e0dc505d68d","value":["N-by-3 matrix"]}]}],"outputs":[{"name":"position","purpose":"Position in LLA coordinate system","syntaxtype":"usage","htmlid":"mw_2f8dc525-0c0a-4d55-89c9-0ffa09b56af3","value":["N-by-3 matrix"]},{"name":"velocity","purpose":"Velocity in local navigation coordinate system (m\/s)","syntaxtype":"usage","htmlid":"mw_23fce9ca-d2ca-4852-9b67-4cf123f0e44c","value":["N-by-3 matrix"]},{"name":"groundspeed","purpose":"Magnitude of horizontal velocity in local navigation coordinate system (m\/s)","syntaxtype":"usage","htmlid":"mw_f7ac2c0d-e9e1-426c-bd56-f35334d5d40a","value":["N-by-1 column vector"]},{"name":"course","purpose":"Direction of horizontal velocity in local navigation coordinate system (°)","syntaxtype":"usage","htmlid":"mw_a27baee9-32b6-41b0-849f-1b16e6c72436","value":["N-by-1 column vector"]}],"classpropertygroup":[{"classproperty":[{"name":"SampleRate","purpose":"Update rate of receiver (Hz)","htmlid":"mw_cdb561e0-2061-474c-8f16-113da4380c1d","value":["1","positive real scalar"],"defaultvalue":"1"},{"name":"ReferenceLocation","purpose":"Origin of local navigation reference frame","htmlid":"mw_dd803eeb-ce90-4e69-b47b-a8595afeae97","value":["[0 0 0]","[latitude longitude altitude]"],"defaultvalue":"[0 0 0]"},{"name":"PositionInputFormat","purpose":"Position coordinate input format","htmlid":"mw_ad933b76-d541-4710-ad2b-a176b20f5919","value":["'Local'","'Geodetic'"],"defaultvalue":"'Local'"},{"name":"HorizontalPositionAccuracy","purpose":"Horizontal position accuracy (m)","htmlid":"mw_93eba267-0a2c-473c-b8ae-eb13f41729f8","value":["1.6","nonnegative real scalar"],"defaultvalue":"1.6"},{"name":"VerticalPositionAccuracy","purpose":"Vertical position accuracy (m)","htmlid":"mw_8794b440-5bf7-4873-afb4-8095142bd0fd","value":["3","nonnegative real scalar"],"defaultvalue":"3"},{"name":"VelocityAccuracy","purpose":"Velocity accuracy (m\/s)","htmlid":"mw_f708f4e7-3fc4-4f98-9a33-4ae7d121b7a1","value":["0.1","nonnegative real scalar"],"defaultvalue":"0.1"},{"name":"DecayFactor","purpose":"Global position noise decay factor","htmlid":"mw_8a1304e0-a356-48ac-8507-140d2550b4cb","value":["0.999","scalar in the range [0,1]"],"defaultvalue":"0.999"},{"name":"RandomStream","purpose":"Random number source","htmlid":"mw_c04b9bbf-9c94-4472-b5c0-96aa5a692f2f","value":["'Global stream'","'mt19937ar with seed'"],"defaultvalue":"'Global stream'"},{"name":"Seed","purpose":"Initial seed","htmlid":"mw_ead27e2a-bfb5-4ad1-9a9a-cbdf78980091","value":["67","nonnegative integer scalar"],"defaultvalue":"67"}]}],"objectfunctions":[{"title":"Common to All System Objects","functions":[{"name":"step","url":"..\/..\/matlab\/ref\/step.html","description":"Run System object algorithm"},{"name":"release","url":"..\/..\/matlab\/ref\/matlab.system.releasesystemobject.html","description":"Release resources and allow changes to System object property values and input characteristics"},{"name":"reset","url":"..\/..\/matlab\/ref\/resetsystemobject.html","description":"Reset internal states of System object"}]}],"examples":[{"url":"gpssensor-system-object.html#mw_ab262601-dd09-4620-b5e4-898b8e89687e","open_command":"openExample('shared_gps\/GenerateGPSPositionMeasurementsFromStationaryInputExample')","title":"Generate GPS Position Measurements From Stationary Input"},{"url":"gpssensor-system-object.html#mw_d088bfee-2b70-4238-9d91-27627c2c9a9e","open_command":"openExample('shared_gps\/RelationshipBetweenGroundspeedAndCourseAccuracyExample')","title":"Relationship Between Groundspeed and Course Accuracy"},{"url":"gpssensor-system-object.html#mw_9edc31c9-64db-42de-a90f-70b986c4f7bc","open_command":"openExample('shared_gps\/ModelGPSReceiverDataExample')","title":"Model GPS Receiver Data"}],"seealso":[{"url":"imusensor-system-object.html","name":"imuSensor"},{"url":"inssensor-system-object.html","name":"insSensor"}]},{"href":"ref\/gravitydir.html","refentity":[{"type":"function","name":"gravitydir","fcntype":"simple"}],"refpurpose":"Gravity direction vector for given orientation","introduced":"R2023b","description":"This MATLAB function returns the normalized gravity direction vector expressed in frames defined by orientations.","syntaxgroup":[{"title":"","syntax":["D = gravitydir(orientations)","D = gravitydir(orientations,RF)"]}],"inputgroup":[{"title":"","inputs":[{"name":"orientations","purpose":"Orientations","htmlid":"mw_cdfdc0cf-df2b-4751-b304-da5f489d1d4a","value":["N-by-1 vector of quaternion objects","3-by-3-by-N array of rotation matrices"]},{"name":"RF","purpose":"Reference frame","htmlid":"mw_eb1cc2c4-7cd2-4467-a3a1-9165ccb27356","value":["\"NED\"","\"ENU\""]}]}],"outputs":[{"name":"D","purpose":"Gravity direction vectors","htmlid":"mw_345a1545-0f6d-470b-9630-77a5d8237630","value":["N-by-3 real-valued matrix"]}],"examples":[{"url":"gravitydir.html#mw_40308ad5-d8fa-4a4e-aabe-2a6c8803fbf0","open_command":"openExample('shared_positioning\/GetGravityDirectionVectorsFromOrientationsExample')","title":"Get Gravity Direction Vectors from Orientations"}],"seealso":[{"url":"linaccel.html","name":"linaccel"},{"url":"compassangle.html","name":"compassAngle"},{"url":"tilt.html","name":"tilt"}]},{"href":"ref\/gyroparams.html","refentity":[{"type":"object","name":"gyroparams"},{"type":"function","name":"gyroparams","fcntype":"constructor"}],"refpurpose":"Gyroscope sensor parameters","introduced":"R2018b","description":"The gyroparams class creates a gyroscope sensor parameters object.","syntaxgroup":[{"title":"","syntax":["params = gyroparams","params = gyroparams(Name,Value)"]}],"classpropertygroup":[{"classproperty":[{"name":"MeasurementRange","purpose":"Maximum sensor reading (rad\/s)","htmlid":"mw_a14bf60d-65c0-4c0e-b823-bda08cedafaf","value":["Inf","real positive scalar"],"defaultvalue":"Inf"},{"name":"Resolution","purpose":"Resolution of sensor measurements ((rad\/s)\/LSB)","htmlid":"mw_f9ca2ddc-b091-42aa-81d3-387e25714bef","value":["0","real nonnegative scalar"],"defaultvalue":"0"},{"name":"ConstantBias","purpose":"Constant sensor offset bias (rad\/s)","htmlid":"mw_cc62f4ee-72c5-4fec-b8a6-15ed5b7676e6","value":["[0 0 0]","real scalar","real 3-element row vector"],"defaultvalue":"[0 0 0]"},{"name":"AxesMisalignment","purpose":"Sensor axes skew (%)","htmlid":"mw_90a3dcbc-49ce-4fe6-b45a-73c1cb494213_sep_mw_d6c5e1f2-deb1-431a-8238-c5358b33541a","value":["diag([100 100 100])","scalar","3-element row vector","3-by-3 matrix"],"defaultvalue":"diag([100 100 100])"},{"name":"NoiseDensity","purpose":"Power spectral density of sensor noise ((rad\/s)\/√Hz)","htmlid":"mw_3d0e11bb-1eba-4def-9fe7-c068bc84e6ef","value":["[0 0 0]","real scalar","real 3-element row vector"],"defaultvalue":"[0 0 0]"},{"name":"BiasInstabilityCoefficients","purpose":"Filter coefficients for bias instability noise generation","htmlid":"mw_90a3dcbc-49ce-4fe6-b45a-73c1cb494213_sep_mw_a80589ac-5aa3-47c2-8b3f-18dd430b1482","value":["fractalcoef","structure"],"defaultvalue":"fractalcoef"},{"name":"BiasInstability","purpose":"Instability of the bias offset (rad\/s)","htmlid":"mw_92b3d512-1f1d-4000-9620-970131793377","value":["[0 0 0]","real scalar","real 3-element row vector"],"defaultvalue":"[0 0 0]"},{"name":"RandomWalk","purpose":"Integrated white noise of sensor ((rad\/s)(√Hz))","htmlid":"mw_a54b4426-564e-4189-915a-94e497645cbb","value":["[0 0 0]","real scalar","real 3-element row vector"],"defaultvalue":"[0 0 0]"},{"name":"NoiseType","purpose":"Type of random noise","htmlid":"mw_90a3dcbc-49ce-4fe6-b45a-73c1cb494213_sep_mw_889556fa-3b72-4ce7-a9b2-67f64114ce1b","value":["\"double-sided\"","\"single-sided\""],"defaultvalue":"\"double-sided\""},{"name":"TemperatureBias","purpose":"Sensor bias from temperature ((rad\/s)\/℃)","htmlid":"mw_5a80ef3e-bb80-4e2a-a66d-5b00f2086022","value":["[0 0 0]","real scalar","real 3-element row vector"],"defaultvalue":"[0 0 0]"},{"name":"TemperatureScaleFactor","purpose":"Scale factor error from temperature (%\/℃)","htmlid":"mw_1d88032d-0e3e-4d9f-a071-351f60b51a13","value":["[0 0 0]","real scalar in the range [0,100]","real 3-element row vector in the range [0,100]"],"defaultvalue":"[0 0 0]"},{"name":"AccelerationBias","purpose":"Sensor bias from linear acceleration (rad\/s)\/(m\/s^{2})","htmlid":"mw_b0f9907f-3919-4451-8f09-43a3698facd7","value":["[0 0 0]","real scalar","real 3-element row vector"],"defaultvalue":"[0 0 0]"}]}],"examples":[{"url":"gyroparams.html#d126e102834","open_command":"openExample('shared_positioning\/GenerateGyroscopeDataFromStationaryInputsExample')","title":"Generate Gyroscope Data from Stationary Inputs"}],"seealso":[{"url":"accelparams.html","name":"accelparams"},{"url":"magparams.html","name":"magparams"},{"url":"imusensor-system-object.html","name":"imuSensor"}]},{"href":"ref\/headingfromxy.html","refentity":[{"type":"function","name":"headingFromXY","fcntype":"simple"}],"refpurpose":"Compute heading angle from XY-points of path","introduced":"R2023a","description":"This MATLAB function computes the heading angle heading based on the XY-points of the path path.","syntaxgroup":[{"title":"","syntax":["heading = headingFromXY(path)"]}],"inputgroup":[{"title":"","inputs":[{"name":"path","purpose":"Path","htmlid":"mw_4796a5d5-9733-4e02-8df6-b47fc65e500f","value":["N-by-2 matrix"]}]}],"outputs":[{"name":"heading","purpose":"Heading angle","htmlid":"mw_32724782-8d08-4ab3-9719-fbd6faa7cf46","value":["N-element column vector"]}],"examples":[{"url":"headingfromxy.html#mw_999edbb4-387e-4d79-a67d-6f28d0e772c0","open_command":"openExample('nav\/ComputeHeadingFromXYPointsOfPathExample')","title":"Compute Heading from XY-Points of Path"}],"seealso":[{"url":"velocitycommand.html","name":"velocityCommand"},{"url":"controllerteb.html","name":"controllerTEB"},{"url":"plannerastargrid.html","name":"plannerAStarGrid"},{"url":"..\/..\/robotics\/ref\/mobilerobotprm.html","name":"mobileRobotPRM"}]},{"href":"ref\/hom2cart.html","refentity":[{"type":"function","name":"hom2cart","fcntype":"simple"}],"refpurpose":"Convert homogeneous coordinates to Cartesian coordinates","introduced":"R2015a","description":"This MATLAB function converts a set of homogeneous points to Cartesian coordinates.","syntaxgroup":[{"title":"","syntax":["cart = hom2cart(hom)"]}],"inputgroup":[{"title":"","inputs":[{"name":"hom","purpose":"Homogeneous points","htmlid":"mw_baa17d0a-cafc-4c09-b2a8-bbcb6066c1ac","value":["n-by-k matrix"]}]}],"outputs":[{"name":"cart","purpose":"Cartesian coordinates","htmlid":"mw_9bf4b145-b65b-44db-ac88-19af8a0d54ba","value":["n-by-(k-1) matrix"]}],"examples":[{"url":"hom2cart.html#buog63d-2","open_command":"openExample('nav_robotics\/ConvertHomogeneousPointsTo3DCartesianPointsExample')","title":"Convert Homogeneous Points to 3-D Cartesian Points"}],"seealso":[{"url":"cart2hom.html","name":"cart2hom"}]},{"href":"ref\/importfactorgraph.html","refentity":[{"type":"function","name":"importFactorGraph","fcntype":"simple"}],"refpurpose":"Import factor graph from g2o log file","introduced":"R2022a","description":"This MATLAB function imports a factor graph from the specified G2o file filename.","syntaxgroup":[{"title":"","syntax":["graph = importFactorGraph(filename)"]}],"inputgroup":[{"title":"","inputs":[{"name":"filename","purpose":"Name of G2o log file","htmlid":"mw_9024a24f-ce6e-40d8-ae7c-53d57f9e9855","value":["string scalar","character vector"]}]}],"outputs":[{"name":"graph","purpose":"Factor graph imported from G2o file","htmlid":"mw_27732fde-4da1-4c69-9ed3-a52192fec782","value":["factorGraph object"]}],"examples":[{"url":"importfactorgraph.html#mw_040f3de5-c245-4262-b51c-77e77e634013","open_command":"openExample('nav\/ImportFactorGraphFromG2oFileExample')","title":"Import Factor Graph from G2o File"}],"seealso":[{"url":"factorgraph.html","name":"factorGraph"},{"url":"factorgraphsolveroptions.html","name":"factorGraphSolverOptions"}]},{"href":"ref\/importoccupancymap3d.html","refentity":[{"type":"function","name":"importOccupancyMap3D","fcntype":"simple"}],"refpurpose":"Import octree or binary tree file as 3-D occupancy map","introduced":"R2020a","description":"This MATLAB function imports the octree file (.ot) or binary tree file (.bt) specified at the relative or absolute file path, mapPath","syntaxgroup":[{"title":"","syntax":["map3D = importOccupancyMap3D(mapPath)"]}],"inputgroup":[{"title":"","inputs":[{"name":"mapPath","purpose":"Absolute or relative path to octree or binary tree file","htmlid":"mw_68a4b1ab-b43f-4183-ac3d-55a2f00497a4","value":["string scalar","character vector"]}]}],"outputs":[{"name":"map3D","purpose":"3-D occupancy map","htmlid":"mw_fc7e00a5-6b52-45d6-aeee-aa2c686ef26a","value":["occupancyMap3D object"]}],"examples":[{"url":"importoccupancymap3d.html#mw_58e83716-4681-4470-a309-7932b2ccf39e","open_command":"openExample('nav\/CheckOccupancyStatusGetOccupancyValuesIn3DOccupancyMapExample')","title":"Check Occupancy Status and Get Occupancy Values in 3-D Occupancy Map"}],"seealso":[{"url":"occupancymap3d.html","name":"occupancyMap3D"},{"url":"lidarslam.html","name":"lidarSLAM"},{"url":"occupancymap.html","name":"occupancyMap"},{"url":"occupancymap3d.insertpointcloud.html","name":"insertPointCloud"},{"url":"occupancymap3d.inflate.html","name":"inflate"},{"url":"occupancymap3d.setoccupancy.html","name":"setOccupancy"},{"url":"occupancymap3d.show.html","name":"show"}]},{"href":"ref\/imu.html","refentity":[{"type":"block","name":"IMU"}],"refpurpose":"IMU simulation model","introduced":"R2020a","description":"The IMU Simulink block models receiving data from an inertial measurement unit (IMU) composed of accelerometer, gyroscope, and magnetometer sensors.","icon":{"fileref":"ref\/imufig.png","alt":"IMU block"},"libraries":["Sensor Fusion and Tracking Toolbox \/ Multisensor Positioning \/ Sensor Models","Navigation Toolbox \/ Multisensor Positioning \/ Sensor Models"],"inputgroup":[{"title":"","inputs":[{"name":"Linear Acceleration","purpose":"Acceleration of IMU in local navigation coordinate system (m\/s^{2})","htmlid":"mw_4881497c-46b6-403c-893c-331e2a31024f","value":["N-by-3 matrix of real scalar"]},{"name":"Angular Velocity","purpose":"Angular velocity of IMU in local navigation coordinate system (rad\/s)","htmlid":"mw_7a7d91ce-7096-48dd-bf71-b38e5f5bb8e5","value":["N-by-3 matrix of real scalar"]},{"name":"Orientation","purpose":"Orientation of IMU in local navigation coordinate system","htmlid":"mw_c9a7a6b6-bdca-46e6-9629-c4c3605bab7a","value":["N-by-4 array of real scalar","3-by-3-by-N-element rotation matrix"]},{"name":"Temperature","purpose":"Temperature of IMU (℃)","htmlid":"mw_c6797e44-d9a9-41e3-b6b5-9e2721515db2","value":["N-by-1 vector of real scalar"]},{"name":"Magnetic Field","purpose":"Magnetic field vector in local navigation coordinate system (μT)","htmlid":"mw_aa58dfb8-c00d-4842-9d9d-1e4d5e1f4834","value":["N-by-3 matrix of real scalar"]}]}],"outputs":[{"name":"Accel","purpose":"Accelerometer measurement of IMU in sensor body coordinate system (m\/s^{2})","htmlid":"mw_9955eeb5-2696-4a65-bd4d-84124e88ce20","value":["N-by-3 matrix of real scalar"]},{"name":"Gyro","purpose":"Gyroscope measurement of IMU in sensor body coordinate system (rad\/s)","htmlid":"mw_466eb000-9648-4f84-82cd-aef3054d3e63","value":["N-by-3 matrix of real scalar"]},{"name":"Mag","purpose":"Magnetometer measurement of IMU in sensor body coordinate system (μT)","htmlid":"mw_a2e71d5a-be84-47cc-97e0-c6b0c91d23b5","value":["N-by-3 matrix of real scalar"]}],"parameters":[{"name":"Reference frame","purpose":"Navigation reference frame","htmlid":"mw_a5dfc9b2-c02d-4ea1-83c0-c100fb4411a2","value":["NED","ENU"],"defaultvalue":"NED"},{"name":"Specify temperature from input port","purpose":"Specify temperature from input port","htmlid":"mw_1b540c89-55e4-47e1-b5b3-1ab337dd03c5","value":["off","on"],"defaultvalue":"off"},{"name":"Temperature (oC)","purpose":"Operating temperature of IMU (^{o}C)","htmlid":"mw_0b4b61b6-d2e3-4981-bfae-c2aea84357cd","value":["25","real scalar"],"defaultvalue":"25"},{"name":"Specify magnetic field from input port","purpose":"Specify magnetic field from input port","htmlid":"mw_b74a221e-7786-4d1c-8cfa-2da74bb7d175","value":["off","on"],"defaultvalue":"off"},{"name":"Magnetic field (NED)","purpose":"Magnetic field vector expressed in NED navigation frame (μT)","htmlid":"mw_48ee207c-8a98-4b4c-9814-bb133879acbb","value":["[27.5550, -2.4169, -16.0849]","1-by-3 vector of scalar"],"defaultvalue":"[27.5550, -2.4169, -16.0849]"},{"name":"MagneticField (ENU)","purpose":"Magnetic field vector expressed in ENU navigation frame (μT)","htmlid":"mw_bb19c03d-f907-4b78-879f-1065822427b6","value":["[-2.4169, 27.5550, 16.0849]","1-by-3 vector of scalar"],"defaultvalue":"[-2.4169, 27.5550, 16.0849]"},{"name":"Seed","purpose":"Initial seed for randomization","htmlid":"mw_82a39ec8-2e38-468a-878f-7a175bf5380f","value":["67","nonnegative integer"],"defaultvalue":"67"},{"name":"Simulate using","purpose":"Type of simulation to run","htmlid":"mw_96da8a69-4af8-4c5f-9764-c3a848af1476","value":["Interpreted Execution","Code Generation"],"defaultvalue":"Interpreted Execution"},{"name":"Maximum readings (m\/s2)","purpose":"Maximum sensor reading (m\/s^{2})","htmlid":"mw_3a330e45-fc64-4ff7-82ca-b2d28dfb5ada","value":["inf","real positive scalar"],"defaultvalue":"inf"},{"name":"Resolution ((m\/s2)\/LSB)","purpose":"Resolution of sensor measurements ((m\/s^{2})\/LSB)","htmlid":"mw_1f621614-5849-4369-bd5b-d63c909182db","value":["0","real nonnegative scalar"],"defaultvalue":"0"},{"name":"Constant offset bias (m\/s2)","purpose":"Constant sensor offset bias (m\/s^{2})","htmlid":"mw_9f7880bd-1bfa-4858-aade-d4626da0ac12","value":["[0 0 0]","real scalar","real 3-element row vector"],"defaultvalue":"[0 0 0]"},{"name":"Axis skew (%)","purpose":"Sensor axes skew (%)","htmlid":"mw_630ae762-6588-41e1-9382-e2782ef3a83f","value":["diag([100 100 100])","scalar","3-element row vector","3-by-3 matrix"],"defaultvalue":"diag([100 100 100])"},{"name":"Velocity random walk (m\/s2\/√Hz)","purpose":"Velocity random walk (m\/s^{2}\/√Hz)","htmlid":"mw_d2d5a10f-9826-4d1e-b12b-a848b58f2f35","value":["[0 0 0]","real scalar","real 3-element row vector"],"defaultvalue":"[0 0 0]"},{"name":"Bias Instability (m\/s2)","purpose":"Instability of the bias offset (m\/s^{2})","htmlid":"mw_eba1464b-249d-4ab2-9bf4-b9a23b561237","value":["[0 0 0]","real scalar","real 3-element row vector"],"defaultvalue":"[0 0 0]"},{"name":"Bias instability filter numerator coefficients","purpose":"Bias instability filter numerator coefficients","htmlid":"mw_ea17f531-3f5c-44e8-acf3-32767fc38b91","value":["fractalcoef.Numerator","real-valued row vector"],"defaultvalue":"fractalcoef.Numerator"},{"name":"Bias instability filter denominator coefficients","purpose":"Bias instability filter denominator coefficients","htmlid":"mw_11c6b1bc-2137-4c06-8202-4c84673b596b","value":["fractalcoef.Denominator","real-valued row vector"],"defaultvalue":"fractalcoef.Denominator"},{"name":"Acceleration random walk ((m\/s2)(√Hz))","purpose":"Acceleration random walk ((m\/s^{2})(√Hz))","htmlid":"mw_5318a09a-d1cb-4d0c-87e6-4fd08b839ebf","value":["[0 0 0]","real scalar","real 3-element row vector"],"defaultvalue":"[0 0 0]"},{"name":"Noise Type","purpose":"Type of random noise","htmlid":"mw_456331e2-ec03-433c-92d9-185c23c4c574","value":["double-sided","single-sided"],"defaultvalue":"double-sided"},{"name":"Bias from temperature ((m\/s2)\/℃)","purpose":"Sensor bias from temperature ((m\/s^{2})\/℃)","htmlid":"mw_4dc70f47-94cc-4515-bbc7-824fcb3a1da8","value":["[0 0 0]","real scalar","real 3-element row vector"],"defaultvalue":"[0 0 0]"},{"name":"Temperature scale factor (%\/℃)","purpose":"Scale factor error from temperature (%\/℃)","htmlid":"mw_e47836bc-45e2-4f5d-9ade-2174830da66c","value":["[0 0 0]","real scalar in the range [0,100]","real 3-element row vector in the range [0,100]"],"defaultvalue":"[0 0 0]"},{"name":"Maximum readings (rad\/s)","purpose":"Maximum sensor reading (rad\/s)","htmlid":"mw_5f0e27bf-0647-4fdf-a092-07c691acafa5","value":["inf","real positive scalar"],"defaultvalue":"inf"},{"name":"Resolution ((rad\/s)\/LSB)","purpose":"Resolution of sensor measurements ((rad\/s)\/LSB)","htmlid":"mw_df537484-e5b9-424e-b9ae-c8918e90fd10","value":["0","real nonnegative scalar"],"defaultvalue":"0"},{"name":"Constant offset bias (rad\/s)","purpose":"Constant sensor offset bias (rad\/s)","htmlid":"mw_2c121a15-c04e-4d37-8e4a-bf5c9f982bf5","value":["[0 0 0]","real scalar","real 3-element row vector"],"defaultvalue":"[0 0 0]"},{"name":"Axis skew (%)","purpose":"Sensor axes skew (%)","htmlid":"mw_7cbe7539-a549-45d2-8ea0-695a4b617678","value":["diag([100 100 100])","scalar","3-element row vector","3-by-3 matrix"],"defaultvalue":"diag([100 100 100])"},{"name":"Bias from acceleration ((rad\/s)\/(m\/s2)","purpose":"Sensor bias from linear acceleration (rad\/s)\/(m\/s^{2})","htmlid":"mw_64deb4a6-18f1-4428-83e0-b863a0650578","value":["[0 0 0]","real scalar","real 3-element row vector"],"defaultvalue":"[0 0 0]"},{"name":"Angle random walk ((rad\/s)\/(√Hz))","purpose":"Angle random walk ((rad\/s)\/(√Hz))","htmlid":"mw_aa3dbedb-232d-4060-8ec3-ba391c942a09","value":["[0 0 0]","real scalar","real 3-element row vector"],"defaultvalue":"[0 0 0]"},{"name":"Bias Instability (rad\/s)","purpose":"Instability of the bias offset (rad\/s)","htmlid":"mw_e9c43c0e-b8ec-48a6-b15b-7eb1a278557f","value":["[0 0 0]","real scalar","real 3-element row vector"],"defaultvalue":"[0 0 0]"},{"name":"Bias instability filter numerator coefficients","purpose":"Bias instability filter numerator coefficients","htmlid":"mw_0b7e016a-43b2-4bcf-9bcd-fddf3fb3f38a","value":["fractalcoef.Numerator","real-valued row vector"],"defaultvalue":"fractalcoef.Numerator"},{"name":"Bias instability filter denominator coefficients","purpose":"Bias instability filter denominator coefficients","htmlid":"mw_b2e4b757-6cb2-45cd-932f-fe027df271d3","value":["fractalcoef.Denominator","real-valued row vector"],"defaultvalue":"fractalcoef.Denominator"},{"name":"Noise Type","purpose":"Type of random noise","htmlid":"mw_a87cb225-67b1-49fb-a2e0-cdf015c8e2ac","value":["double-sided","single-sided"],"defaultvalue":"double-sided"},{"name":"Rate random walk ((rad\/s)(√Hz))","purpose":"Integrated white noise of sensor ((rad\/s)(√Hz))","htmlid":"mw_12b23edd-d221-4aff-99aa-e37f0bce31b5","value":["[0 0 0]","real scalar","real 3-element row vector"],"defaultvalue":"[0 0 0]"},{"name":"Bias from temperature ((rad\/s)\/℃)","purpose":"Sensor bias from temperature ((rad\/s)\/℃)","htmlid":"mw_47ea6509-ae9c-4ce0-87b7-1d3846009625","value":["[0 0 0]","real scalar","real 3-element row vector"],"defaultvalue":"[0 0 0]"},{"name":"Temperature scale factor (%\/℃)","purpose":"Scale factor error from temperature (%\/℃)","htmlid":"mw_aead23d8-a233-43cc-a462-0d57f257cd4b","value":["[0 0 0]","real scalar in the range [0,100]","real 3-element row vector in the range [0,100]"],"defaultvalue":"[0 0 0]"},{"name":"Maximum readings (μT)","purpose":"Maximum sensor reading (μT)","htmlid":"mw_3450d90c-a621-4d62-9cce-e435e7b4e03f","value":["inf","real positive scalar"],"defaultvalue":"inf"},{"name":"Resolution ((μT)\/LSB)","purpose":"Resolution of sensor measurements ((μT)\/LSB)","htmlid":"mw_a94eb55d-438e-4979-8156-9cfe1faadd75","value":["0","real nonnegative scalar"],"defaultvalue":"0"},{"name":"Constant offset bias (μT)","purpose":"Constant sensor offset bias (μT)","htmlid":"mw_c787d6cb-06e6-4ac9-bef7-7ebfc0abad5f","value":["[0 0 0]","real scalar","real 3-element row vector"],"defaultvalue":"[0 0 0]"},{"name":"Axis skew (%)","purpose":"Sensor axes skew (%)","htmlid":"mw_1fa5a001-9f21-43a1-835d-910bf961be0f","value":["diag([100 100 100])","scalar","3-element row vector","3-by-3 matrix"],"defaultvalue":"diag([100 100 100])"},{"name":"White noise PSD (μT\/√Hz)","purpose":"Power spectral density of sensor noise (μT\/√Hz)","htmlid":"mw_062ba5c6-c4ee-46d6-b66a-5b13821a3fd3","value":["[0 0 0]","real scalar","real 3-element row vector"],"defaultvalue":"[0 0 0]"},{"name":"Bias Instability (μT)","purpose":"Instability of the bias offset (μT)","htmlid":"mw_76ad3afc-fd3f-4167-a6b6-804b857c57d0","value":["[0 0 0]","real scalar","real 3-element row vector"],"defaultvalue":"[0 0 0]"},{"name":"Bias instability filter numerator coefficients","purpose":"Bias instability filter numerator coefficients","htmlid":"mw_660aa937-dd02-468a-b128-fe4b032b8095","value":["fractalcoef.Numerator","real-valued row vector"],"defaultvalue":"fractalcoef.Numerator"},{"name":"Bias instability filter denominator coefficients","purpose":"Bias instability filter denominator coefficients","htmlid":"mw_d8bf318c-d1c3-48ba-a1e0-e1b53ac415bc","value":["fractalcoef.Denominator","real-valued row vector"],"defaultvalue":"fractalcoef.Denominator"},{"name":"Noise Type","purpose":"Type of random noise","htmlid":"mw_3ecbd014-3f05-468a-becc-b0fe5cfff45a","value":["double-sided","single-sided"],"defaultvalue":"double-sided"},{"name":"Random walk ((μT)*√Hz)","purpose":"Integrated white noise of sensor ((μT)*√Hz)","htmlid":"mw_442f96bb-62ed-45b1-ac3e-b1cf27d2ada8","value":["[0 0 0]","real scalar","real 3-element row vector"],"defaultvalue":"[0 0 0]"},{"name":"Bias from temperature (μT\/℃)","purpose":"Sensor bias from temperature (μT\/℃)","htmlid":"mw_6ff93336-2026-487d-afab-7b02da3066d7","value":["[0 0 0]","real scalar","real 3-element row vector"],"defaultvalue":"[0 0 0]"},{"name":"Temperature scale factor (%\/℃)","purpose":"Scale factor error from temperature (%\/℃)","htmlid":"mw_dd417d8b-15e3-465e-a424-3feeb83886eb","value":["[0 0 0]","real scalar in the range [0,100]","real 3-element row vector in the range [0,100]"],"defaultvalue":"[0 0 0]"}],"examples":[{"url":"..\/ug\/imu-sensor-fusion-with-simulink.html","open_command":"openExample('shared_positioning\/IMUSensorFusionWithSimulinkExample')","title":"IMU Sensor Fusion with Simulink"}],"seealso":[{"url":"accelparams.html","name":"accelparams"},{"url":"gyroparams.html","name":"gyroparams"},{"url":"magparams.html","name":"magparams"},{"url":"imusensor-system-object.html","name":"imuSensor"},{"url":"gpssensor-system-object.html","name":"gpsSensor"}]},{"href":"ref\/imufilter-system-object.html","refentity":[{"type":"sysobj","name":"imufilter"},{"type":"function","name":"imufilter","fcntype":"constructor"}],"refpurpose":"Orientation from accelerometer and gyroscope readings","introduced":"R2018b","description":"The imufilter System object fuses accelerometer and gyroscope sensor data to estimate device orientation.","syntaxgroup":[{"title":"","syntaxtype":"createobject","syntax":["FUSE = imufilter","FUSE = imufilter('ReferenceFrame',RF)","FUSE = imufilter(___,Name=Value)"]},{"title":"","syntaxtype":"usage","syntax":["[orientation,angularVelocity,residualData] = FUSE(accelReadings,gyroReadings)"]}],"inputgroup":[{"title":"","inputs":[{"name":"RF","purpose":"Reference frame of filter","syntaxtype":"createobject","htmlid":"mw_1628e6fd-fbb3-4272-96d0-d1b481998205","value":["'NED'","'ENU'"],"defaultvalue":"'NED'"}]},{"title":"","inputs":[{"name":"accelReadings","purpose":"Accelerometer readings in sensor body coordinate system (m\/s^{2})","syntaxtype":"usage","htmlid":"mw_011b7401-b3c7-4524-8c26-768810d85019","value":["N-by-3 matrix"]},{"name":"gyroReadings","purpose":"Gyroscope readings in sensor body coordinate system (rad\/s)","syntaxtype":"usage","htmlid":"mw_2a60f8c5-229b-4d2d-b55b-e9ffb16d162c","value":["N-by-3 matrix"]}]}],"outputs":[{"name":"orientation","purpose":"Orientation that rotates quantities from global coordinate system to sensor body coordinate system","syntaxtype":"usage","htmlid":"mw_f4e2dfbd-74f3-4ba4-83e1-777a61ddda4a","value":["M-by-1 vector of quaternions","3-by-3-by-M array"]},{"name":"angularVelocity","purpose":"Angular velocity in sensor body coordinate system (rad\/s)","syntaxtype":"usage","htmlid":"mw_7733061d-0d0f-4265-88cd-1b49705d3f11","value":["M-by-3 array"]},{"name":"residualData","purpose":"Residual and residual-covariance data","syntaxtype":"usage","htmlid":"mw_30da19d6-f9a4-4039-9912-f61e2f67e6b2","value":["structure"]}],"classpropertygroup":[{"classproperty":[{"name":"SampleRate","purpose":"Sample rate of input sensor data (Hz)","htmlid":"mw_e31b3ced-f41a-4d06-b92b-ff6982080d3c","value":["100","positive finite scalar"],"defaultvalue":"100"},{"name":"DecimationFactor","purpose":"Decimation factor by which to reduce the sample rate of the input sensor data","htmlid":"mw_34ff27d0-3f61-4727-b2c2-94323a77821b","value":["1","positive integer scalar"],"defaultvalue":"1"},{"name":"AccelerometerNoise","purpose":"Variance of accelerometer signal noise ((m\/s^{2})^{2})","htmlid":"mw_93701e20-e540-4d00-8341-5a352ee298b3","value":["0.00019247","positive real scalar"],"defaultvalue":"0.00019247"},{"name":"GyroscopeNoise","purpose":"Variance of gyroscope signal noise ((rad\/s)^{2})","htmlid":"mw_140faafd-f420-4b7b-8717-ed7d872e510b","value":["9.1385e-5","positive real scalar"],"defaultvalue":"9.1385e-5"},{"name":"GyroscopeDriftNoise","purpose":"Variance of gyroscope offset drift ((rad\/s)^{2})","htmlid":"mw_df1892e5-d224-4071-b189-95e218c00cee","value":["3.0462e-13","positive real scalar"],"defaultvalue":"3.0462e-13"},{"name":"LinearAccelerationNoise","purpose":"Variance of linear acceleration noise ((m\/s^{2})^{2})","htmlid":"mw_2d59a1d3-4379-4281-9f79-c24978c16975","value":["0.0096236","positive real scalar"],"defaultvalue":"0.0096236"},{"name":"LinearAcclerationDecayFactor","purpose":"Decay factor for linear acceleration drift","htmlid":"mw_1490283f-5f7f-4075-8caa-b519200064a9","value":["0.5","scalar in the range [0,1)"],"defaultvalue":"0.5"},{"name":"InitialProcessNoise","purpose":"Covariance matrix for process noise","htmlid":"mw_c06f26c6-bbba-4a71-b9ee-6e9abde36a52","value":["9-by-9 matrix"]},{"name":"OrientationFormat","purpose":"Output orientation format","htmlid":"mw_62b1d430-bd97-4cf1-8de3-02622f9a1095","value":["'quaternion'","'Rotation matrix'"],"defaultvalue":"'quaternion'"}]}],"objectfunctions":[{"title":"Specific to imufilter","functions":[{"name":"tune","url":"imufilter.tune.html","description":"Tune imufilter parameters to reduce estimation error"},{"name":"residual","url":"imufilter.residual.html","description":"Compute residual and residual covariance for\n      imufilter"}]},{"title":"Common to All System Objects","functions":[{"name":"step","url":"..\/..\/matlab\/ref\/step.html","description":"Run System object algorithm"},{"name":"release","url":"..\/..\/matlab\/ref\/matlab.system.releasesystemobject.html","description":"Release resources and allow changes to System object property values and input characteristics"},{"name":"reset","url":"..\/..\/matlab\/ref\/resetsystemobject.html","description":"Reset internal states of System object"}]}],"examples":[{"url":"imufilter-system-object.html#mw_8d99f490-b04c-46e5-b3ae-e34474c79714","open_command":"openExample('shared_positioning\/EstimateOrientationFromIMUDataExample')","title":"Estimate Orientation from IMU data"},{"url":"imufilter-system-object.html#mw_e1642e33-2c66-4c5d-8276-826673343b24","open_command":"openExample('shared_positioning\/ModelTiltUsingGyroscopeAndAccelerometerReadingsExample')","title":"Model Tilt Using Gyroscope and Accelerometer Readings"},{"url":"imufilter-system-object.html#mw_3afcf391-2e00-4350-8589-107243de0a6c","open_command":"openExample('shared_positioning\/RemoveBiasFromAngularVelocityMeasurementExample')","title":"Remove Bias from Angular Velocity Measurement"}],"seealso":[{"url":"ecompass.html","name":"ecompass"},{"url":"imusensor-system-object.html","name":"imuSensor"},{"url":"ahrsfilter-system-object.html","name":"ahrsfilter"},{"url":"gpssensor-system-object.html","name":"gpsSensor"}]},{"href":"ref\/imufilter.html","refentity":[{"type":"block","name":"IMU Filter"}],"refpurpose":"Estimate orientation using IMU Filter","introduced":"R2023b","description":"The IMU Filter Simulink block fuses accelerometer and gyroscope sensor data to estimate device orientation.","icon":{"fileref":"ref\/imufilter_block.png","alt":"IMU Filter block"},"libraries":["Navigation Toolbox \/ Multisensor Positioning \/ Navigation Filters","Sensor Fusion and Tracking Toolbox \/ Multisensor Positioning \/ Navigation Filters"],"inputgroup":[{"title":"","inputs":[{"name":"Accel","purpose":"Accelerometer readings in sensor body coordinate system (m\/s^{2})","htmlid":"mw_3423e5c7-d731-4258-ab2c-d046f3497207","value":["matrix"]},{"name":"Gyro","purpose":"Gyroscope readings in sensor body coordinate system (rad\/s)","htmlid":"mw_95ceb556-7648-4e98-b7c5-4cd3b6d6c3bd","value":["matrix"]}]}],"outputs":[{"name":"Orientation","purpose":"Orientation of sensor body frame relative to navigation frame","htmlid":"mw_984aaaac-89e9-470e-8d43-4f66bf5f85d6","value":["matrix","array"]},{"name":"Angular Velocity","purpose":"Angular velocity in sensor body coordinate system (rad\/s)","htmlid":"mw_dd3c3665-0a76-4c6b-b03c-661d75b25d68","value":["matrix"]}],"parameters":[{"name":"Reference frame","purpose":"Navigation reference frame","htmlid":"mw_fa4049f4-0fa5-4997-928a-d691c6c6b26c","value":["NED","ENU"],"defaultvalue":"NED"},{"name":"Orientation format","purpose":"Orientation output format","htmlid":"mw_412d77f6-b08c-4cb8-9d30-55b28dc356a0","value":["quaternion","Rotation Matrix"],"defaultvalue":"quaternion"},{"name":"Decimation factor","purpose":"Decimation factor","htmlid":"mw_e70cbe2a-fede-43c8-a5a4-f9219456611e","value":["1","positive integer"],"defaultvalue":"1"},{"name":"Initial process noise","purpose":"Initial process noise","htmlid":"mw_78de6290-ae29-48a1-8215-6cc325589eac","value":["imufilter.defaultProcessNoise","9-by-9 matrix of real numbers"],"defaultvalue":"imufilter.defaultProcessNoise"},{"name":"Accelerometer noise ((m\/s2)2)","purpose":"Variance of accelerometer signal noise (m\/s^{2})^{2}","htmlid":"mw_60126b59-b3cd-4f03-adf0-1c8960dc74c1","value":["0.0001924722","positive real scalar"],"defaultvalue":"0.0001924722"},{"name":"Gyroscope noise ((rad\/s)2)","purpose":"Variance of gyroscope signal noise (rad\/s)^{2}","htmlid":"mw_1cd50ce4-380d-4c6f-9ff5-60ad57b69c68","value":["9.1385e-5","positive real scalar"],"defaultvalue":"9.1385e-5"},{"name":"Gyroscope drift noise ((rad\/s)2)","purpose":"Variance of gyroscope offset drift (rad\/s)^{2}","htmlid":"mw_b76d4969-d099-486d-afd8-1f25d4c54d10","value":["3.0462e-13","positive real scalar"],"defaultvalue":"3.0462e-13"},{"name":"Linear acceleration noise ((m\/s2)2)","purpose":"Variance of linear acceleration noise (m\/s^{2})^{2}","htmlid":"mw_815b071c-d113-4c6f-a7e0-18620c670695","value":["0.0096236100000000012","positive real scalar"],"defaultvalue":"0.0096236100000000012"},{"name":"Linear acceleration decay factor","purpose":"Decay factor for linear acceleration drift","htmlid":"mw_4725270c-751a-451f-8686-35cd365b56ed","value":["0.5","scalar in the range [0 1)"],"defaultvalue":"0.5"},{"name":"Simulate using","purpose":"Type of simulation to run","htmlid":"mw_28155ba5-cf4e-40fe-9bb2-e646dba79782","value":["Interpreted execution","Code generation"],"defaultvalue":"Interpreted execution"}],"examples":[{"url":"..\/ug\/compute-orientation-from-recorded-imu-data.html","open_command":"openExample('nav\/ComputeOrientationFromRecordedIMUDataBlockExample')","title":"Compute Orientation from Recorded IMU Data"}],"seealso":[{"url":"imufilter-system-object.html","name":"imufilter"},{"url":"ahrs.html","name":"AHRS"},{"url":"complementaryfilter.html","name":"Complementary Filter"}]},{"href":"ref\/imufilter.residual.html","refentity":[{"type":"function","name":"residual","fcntype":"instancemethod"},{"type":"method","name":"imufilter.residual","fcntype":"instancemethod"}],"refpurpose":"Compute residual and residual covariance for imufilter","introduced":"R2024a","description":"This MATLAB function computes the residual, res, and the residual covariance, resCov, from accelerometer and gyroscope sensor data.","syntaxgroup":[{"title":"","syntax":["[res, resCov]= residual(FUSE,accelData,gyroData)"]}],"inputgroup":[{"title":"","inputs":[{"name":"FUSE","purpose":"Filter object","htmlid":"mw_53036e45-f5b4-4b15-a3f4-6e230c408efb_sep_mw_bc34be35-95ad-4c26-b913-98697aaf0d8a","value":["imufilter object"]},{"name":"accelData","purpose":"Accelerometer data","htmlid":"mw_53036e45-f5b4-4b15-a3f4-6e230c408efb_sep_mw_559f6fe7-a459-46d4-9889-e4a50c24f325","value":["N-by-3 matrix"]},{"name":"gyroData","purpose":"Gyroscope data","htmlid":"mw_53036e45-f5b4-4b15-a3f4-6e230c408efb_sep_mw_f7d345bd-84c0-4772-ab43-935f795aa993","value":["N-by-3 matrix"]}]}],"outputs":[{"name":"res","purpose":"Measurement residual","htmlid":"mw_53036e45-f5b4-4b15-a3f4-6e230c408efb_sep_mw_cffa9c28-861a-41a3-bcf4-9bfbb3100bc8","value":["M-by-3 matrix"]},{"name":"resCov","purpose":"Residual covariance","htmlid":"mw_53036e45-f5b4-4b15-a3f4-6e230c408efb_sep_mw_b69b4247-a1c9-4bb0-8433-595296201bc8","value":["3-by-3-by-M array"]}],"examples":[{"url":"imufilter.residual.html#mw_53036e45-f5b4-4b15-a3f4-6e230c408efb_sep_mw_faebc0f7-1df6-405c-9cf9-bd0c61caa74d","open_command":"openExample('shared_positioning\/ComputeResidualValuesForImufilterExample')","title":"Compute Residual Values for IMU Filter"}],"seealso":[{"url":"ecompass.html","name":"ecompass"},{"url":"imusensor-system-object.html","name":"imuSensor"},{"url":"ahrsfilter-system-object.html","name":"ahrsfilter"},{"url":"gpssensor-system-object.html","name":"gpsSensor"},{"url":"imufilter.tune.html","name":"tune"}]},{"href":"ref\/imufilter.tune.html","refentity":[{"type":"function","name":"tune","fcntype":"instancemethod"},{"type":"method","name":"imufilter.tune","fcntype":"instancemethod"}],"refpurpose":"Tune imufilter parameters to reduce estimation error","introduced":"R2020b","description":"This MATLAB function adjusts the properties of the imufilter filter object, filter, to reduce the root-mean-squared (RMS) quaternion distance error between the fused sensor data and the ground truth.","syntaxgroup":[{"title":"","syntax":["tune(filter,sensorData,groundTruth)","tune(___,config)"]}],"inputgroup":[{"title":"","inputs":[{"name":"filter","purpose":"Filter object","htmlid":"mw_0fda4cc6-b1ab-4a4f-85e0-ec3bf177d5a8","value":["imufilter object"]},{"name":"sensorData","purpose":"Sensor data","htmlid":"mw_1b996b89-badf-4047-9441-77261e76d8b1","value":["table"]},{"name":"groundTruth","purpose":"Ground truth data","htmlid":"mw_6dd4e8bd-74c2-4f24-aac3-37cdc2d4495f","value":["table"]},{"name":"config","purpose":"Tuner configuration","htmlid":"mw_60aa11a5-bbe5-4036-bc2b-c90d69029b11","value":["tunerconfig object"]}]}],"examples":[{"url":"imufilter.tune.html#mw_b43dcc46-6ea3-4b97-a512-7183d4889cb9","open_command":"openExample('shared_positioning\/TuneImufilterToOptimizeOrientationEstimateExample')","title":"Tune imufilter to Optimize Orientation Estimate"}]},{"href":"ref\/imusensor-system-object.html","refentity":[{"type":"sysobj","name":"imuSensor"},{"type":"function","name":"imuSensor","fcntype":"constructor"}],"refpurpose":"IMU simulation model","introduced":"R2019b","description":"The imuSensor System object models receiving data from an inertial measurement unit (IMU).","syntaxgroup":[{"title":"","syntaxtype":"createobject","syntax":["IMU = imuSensor","IMU = imuSensor('accel-gyro')","IMU = imuSensor('accel-mag')","IMU = imuSensor('accel-gyro-mag')","IMU = imuSensor(___,\"ReferenceFrame\",RF)","IMU = imuSensor(___,Name=Value)"]},{"title":"","syntaxtype":"usage","syntax":["[accelReadings,gyroReadings] = IMU(acc,angVel)","[accelReadings,gyroReadings] = IMU(acc,angVel,orientation)"]},{"title":"","syntaxtype":"usage","syntax":["[accelReadings,magReadings] = IMU(acc,angVel)","[accelReadings,magReadings] = IMU(acc,angVel,orientation)"]},{"title":"","syntaxtype":"usage","syntax":["[accelReadings,gyroReadings,magReadings] = IMU(acc,angVel)","[accelReadings,gyroReadings,magReadings] = IMU(acc,angVel,orientation)"]}],"inputgroup":[{"title":"","inputs":[{"name":"RF","purpose":"Reference frame of sensor inputs","syntaxtype":"createobject","htmlid":"mw_fe64fa7e-992b-46c6-8127-fe721da0f65e","value":["'NED'","'ENU'"],"defaultvalue":"'NED'"}]},{"title":"","inputs":[{"name":"acc","purpose":"Acceleration of IMU in local navigation coordinate system (m\/s^{2})","syntaxtype":"usage","htmlid":"mw_0b44065a-4819-4642-a537-31c2000c32bb","value":["N-by-3 matrix"]},{"name":"angVel","purpose":"Angular velocity of IMU in local navigation coordinate system (rad\/s)","syntaxtype":"usage","htmlid":"mw_f1d691a9-29af-4bec-be2d-4054305c8a7a","value":["N-by-3 matrix"]},{"name":"orientation","purpose":"Orientation of IMU in local navigation coordinate system","syntaxtype":"usage","htmlid":"mw_9ead7fa6-0380-4312-813f-34e13f66b39d","value":["N-element quaternion column vector","3-by-3-by-N-element rotation matrix"]}]}],"outputs":[{"name":"accelReadings","purpose":"Accelerometer measurement of IMU in sensor body coordinate system (m\/s^{2})","syntaxtype":"usage","htmlid":"mw_b0d4bda8-af4e-4570-b659-77f612bcccae","value":["N-by-3 matrix"]},{"name":"gyroReadings","purpose":"Gyroscope measurement of IMU in sensor body coordinate system (rad\/s)","syntaxtype":"usage","htmlid":"mw_e342cf50-73ea-4128-afdc-e07e026a52d6","value":["N-by-3 matrix"]},{"name":"magReadings","purpose":"Magnetometer measurement of IMU in sensor body coordinate system (μT)","syntaxtype":"usage","htmlid":"mw_a368c712-ce0f-4834-8af3-935b9fed978b","value":["N-by-3 matrix"]}],"classpropertygroup":[{"classproperty":[{"name":"IMUType","purpose":"Type of inertial measurement unit","htmlid":"mw_5dae81ff-892d-4e30-bef3-ccb7f42d6e84","value":["'accel-gyro'","'accel-mag'","'accel-gyro-mag'"],"defaultvalue":"'accel-gyro'"},{"name":"SampleRate","purpose":"Sample rate of sensor (Hz)","htmlid":"mw_6233328e-1f6c-4128-aa2e-47dae484b251","value":["100","positive scalar"],"defaultvalue":"100"},{"name":"Temperature","purpose":"Temperature of IMU (^{o}C)","htmlid":"mw_0ab8a925-8eec-47e0-83f1-7cd9289d8441","value":["25","real scalar"],"defaultvalue":"25"},{"name":"MagneticField","purpose":"Magnetic field vector in local navigation coordinate system (μT)","htmlid":"mw_cd5fbeb2-f5fc-4c8e-96f7-ff40fd06451b","value":["[27.5550 -2.4169 -16.0849]","three-element real-valued vector"],"defaultvalue":"[27.5550 -2.4169 -16.0849]"},{"name":"Accelerometer","purpose":"Accelerometer sensor parameters","htmlid":"mw_1c230403-83ca-4a93-8a1c-56375f9471e5","value":["accelparams object"],"defaultvalue":"accelparams object"},{"name":"Gyroscope","purpose":"Gyroscope sensor parameters","htmlid":"mw_9ed217ee-4817-45b1-9c47-244782901b35","value":["gyroparams object"],"defaultvalue":"gyroparams object"},{"name":"Magnetometer","purpose":"Magnetometer sensor parameters","htmlid":"mw_b966926d-1029-43ac-bf91-2a94ade4c26f","value":["magparams object"],"defaultvalue":"magparams object"},{"name":"RandomStream","purpose":"Random number source","htmlid":"mw_793f8bd2-71c9-4bad-8f27-d39ade1a3a43","value":["'Global stream'","'mt19937ar with seed'"],"defaultvalue":"'Global stream'"},{"name":"Seed","purpose":"Initial seed","htmlid":"mw_302d7c36-a204-4643-8621-ab919abe13e0","value":["67","nonnegative integer scalar"],"defaultvalue":"67"}]}],"objectfunctions":[{"title":"Specific to imuSensor","functions":[{"name":"loadparams","url":"imusensor.loadparams.html","description":"Load sensor parameters from JSON file"},{"name":"perturbations","url":"inssensor.perturbations.html","description":"Perturbation defined on object"},{"name":"perturb","url":"inssensor.perturb.html","description":"Apply perturbations to object"}]},{"title":"Common to All System Objects","functions":[{"name":"step","url":"..\/..\/matlab\/ref\/step.html","description":"Run System object algorithm"},{"name":"release","url":"..\/..\/matlab\/ref\/matlab.system.releasesystemobject.html","description":"Release resources and allow changes to System object property values and input characteristics"},{"name":"reset","url":"..\/..\/matlab\/ref\/resetsystemobject.html","description":"Reset internal states of System object"}]}],"examples":[{"url":"imusensor-system-object.html#mw_8b364bf6-bc60-4284-ad45-79035572f288","open_command":"openExample('shared_positioning\/CreateDefaultImuSensorSystemObjectExample')","title":"Create Default imuSensor System object"},{"url":"imusensor-system-object.html#mw_e929ed95-7ec5-474c-8377-a32b9c5be6a7","open_command":"openExample('shared_positioning\/GenerateIMUDataFromStationaryInputExample')","title":"Generate IMU Data from Stationary Input"},{"url":"imusensor-system-object.html#mw_e304ad2a-7f06-498b-9642-3e933d825e80","open_command":"openExample('shared_positioning\/ModelRotatingSixAxisIMUDataExample')","title":"Model Rotating Six-Axis IMU Data"},{"url":"imusensor-system-object.html#mw_533324da-98aa-41d3-9bd9-759ee349509a","open_command":"openExample('shared_positioning\/ModelRotatingSixAxisIMUDataWithNoiseExample')","title":"Model Rotating Six-Axis IMU Data with Noise"},{"url":"imusensor-system-object.html#mw_7df0e2aa-4b2a-439e-beb6-1caab247ba16","open_command":"openExample('shared_positioning\/ModelTiltUsingGyroscopeAndAccelerometerReadingsExample')","title":"Model Tilt Using Gyroscope and Accelerometer Readings"}],"seealso":[{"url":"accelparams.html","name":"accelparams"},{"url":"gyroparams.html","name":"gyroparams"},{"url":"magparams.html","name":"magparams"},{"url":"gpssensor-system-object.html","name":"gpsSensor"}]},{"href":"ref\/imusensor.loadparams.html","refentity":[{"type":"function","name":"loadparams","fcntype":"instancemethod"},{"type":"method","name":"imuSensor.loadparams","fcntype":"instancemethod"}],"refpurpose":"Load sensor parameters from JSON file","introduced":"R2020a","description":"This MATLAB function configures the imuSensor object, sensor, to match the parameters in the PN part of a JSON file, File.","syntaxgroup":[{"title":"","syntax":["loadparams(sensor,file,PN)"]}],"inputgroup":[{"title":"","inputs":[{"name":"sensor","purpose":"IMU sensor","htmlid":"mw_64d523e0-5db4-4ccc-8812-edfa2c93400d","value":["imuSensor object"]},{"name":"file","purpose":"JSON file","htmlid":"mw_e59e8b2d-fe02-46ff-966b-381bbe924b46","value":[".json file"]},{"name":"PN","purpose":"Part name","htmlid":"mw_77cf248e-bfc0-41b4-b236-9cadd39c953a","value":["string"]}]}],"examples":[{"url":"imusensor.loadparams.html#mw_924b15a5-b9b6-4fa8-ad22-ae92d44e0f2f","open_command":"openExample('shared_positioning\/LoadPredefinedParametersInImuSensorExample')","title":"Load Pre-defined Parameters in imuSensor"}],"seealso":[{"url":"imusensor-system-object.html","name":"imuSensor"}]},{"href":"ref\/ins.html","refentity":[{"type":"block","name":"INS"}],"refpurpose":"Simulate INS sensor","introduced":"R2020b","description":"The block simulates an INS sensor, which outputs noise-corrupted position, velocity, and orientation based on the corresponding inputs.","icon":{"fileref":"ref\/insfig.png","alt":"INS block"},"libraries":["Navigation Toolbox \/ Multisensor Positioning \/ Sensor Models","Automated Driving Toolbox \/ Driving Scenario and Sensor Modeling","Sensor Fusion and Tracking Toolbox \/ Multisensor Positioning \/ Sensor Models","UAV Toolbox \/ UAV Scenario and Sensor Modeling"],"inputgroup":[{"title":"","inputs":[{"name":"Position","purpose":"Position of INS sensor","htmlid":"mw_ab43a135-994f-44e9-bfe1-e7cd716cd8f1","value":["N-by-3 real-valued matrix"]},{"name":"Velocity","purpose":"Velocity of INS sensor","htmlid":"mw_d7e9afbc-05f9-4d79-b00c-b53efb95a71b","value":["N-by-3 real-valued matrix of scalar"]},{"name":"Orientation","purpose":"Orientation of INS sensor","htmlid":"mw_0b9e7ed5-4851-4a5d-8fae-bd069bb704e7","value":["3-by-3-by-N real-valued array","N-by-4 real-valued matrix","N-by-3 matrix of Euler angles"]},{"name":"Acceleration","purpose":"Acceleration of INS sensor","htmlid":"mw_31b92fb9-cb93-4bbd-b698-6bdc05c6a4b9","value":["N-by-3 real-valued matrix"]},{"name":"AngularVelocity","purpose":"Angular velocity of INS sensor","htmlid":"mw_42904cdd-4cec-4e01-a60c-ae1d3e1d4c24","value":["N-by-3 real-valued matrix"]},{"name":"HasGNSSFix","purpose":"Enable GNSS fix","htmlid":"mw_af88f308-8485-404a-95e2-f75910a9d93a","value":["N-by-1 logical vector"]}]}],"outputs":[{"name":"Position","purpose":"Position of INS sensor","htmlid":"mw_bb4a415d-6b91-40b6-a4c0-f8b316862876","value":["N-by-3 real-valued matrix"]},{"name":"Velocity","purpose":"Velocity of INS sensor","htmlid":"mw_c21112fb-8f88-4ef0-82bb-ecf14be3bb74","value":["N-by-3 real-valued matrix"]},{"name":"Orientation","purpose":"Orientation of INS sensor","htmlid":"mw_84db0dae-377b-42e9-b852-4d8e8e31ee86","value":["3-by-3-by-N real-valued array","N-by-4 real-valued matrix"]},{"name":"Acceleration","purpose":"Acceleration of INS sensor","htmlid":"mw_3fbd6287-a510-4ef1-ab44-7cdac7e42889","value":["N-by-3 real-valued matrix"]},{"name":"AngularVelocity","purpose":"Angular velocity of INS sensor","htmlid":"mw_c8164865-87c3-4266-9a66-e637a5ec7b3d","value":["N-by-3 real-valued matrix"]}],"parameters":[{"name":"Mounting location (m)","purpose":"Location of sensor on platform (m)","htmlid":"mw_875851f1-a482-4b34-8e3e-b5f4d8836b8d","value":["[0 0 0]","three-element real-valued vector of form [x y z]"],"defaultvalue":"[0 0 0]"},{"name":"Roll (X-axis) accuracy (deg)","purpose":"Accuracy of roll measurement (deg)","htmlid":"mw_8e5f97a3-f463-4d62-8c6b-7e8d8d68f0ea","value":["0.2","nonnegative real scalar"],"defaultvalue":"0.2"},{"name":"Pitch (Y-axis) accuracy (deg)","purpose":"Accuracy of pitch measurement (deg)","htmlid":"mw_cd321ba9-af3c-4f9b-9a49-105a8f612a16","value":["0.2","nonnegative real scalar"],"defaultvalue":"0.2"},{"name":"Yaw (Z-axis) accuracy (deg)","purpose":"Accuracy of yaw measurement (deg)","htmlid":"mw_c149b3b3-4254-4e32-bb43-2a6e712a156a","value":["1","nonnegative real scalar"],"defaultvalue":"1"},{"name":"Position accuracy (m)","purpose":"Accuracy of position measurement (m)","htmlid":"mw_4e0110bf-9183-4730-bb59-29b5ece0b79f","value":["1","nonnegative real scalar","1-by-3 vector of nonnegative values"],"defaultvalue":"1"},{"name":"Velocity accuracy (m\/s)","purpose":"Accuracy of velocity measurement (m\/s)","htmlid":"mw_be11d8ce-916f-44e9-8fd0-879b318f8ea6","value":["0.05","nonnegative real scalar"],"defaultvalue":"0.05"},{"name":"Use acceleration and angular velocity","purpose":"Use acceleration and angular velocity","htmlid":"mw_b11b5012-0fbe-4830-ad78-2d4454c2037d","value":["off","on"],"defaultvalue":"off"},{"name":"Acceleration accuracy (m\/s2)","purpose":"Accuracy of acceleration measurement (m\/s^{2})","htmlid":"mw_c97c82e5-7dc2-4960-b77e-7815f929351a","value":["0","nonnegative real scalar"],"defaultvalue":"0"},{"name":"Angular velocity accuracy (deg\/s)","purpose":"Accuracy of angular velocity measurement (deg\/s)","htmlid":"mw_f00034e8-8d54-484c-b1b5-173e9f524b48","value":["0","nonnegative real scalar"],"defaultvalue":"0"},{"name":"Enable HasGNSSFix port","purpose":"Enable HasGNSSFix input port","htmlid":"mw_87438be7-2e4d-44f4-b683-a32c7042eb86","value":["off","on"],"defaultvalue":"off"},{"name":"Position error factor","purpose":"Position error factor (m)","htmlid":"mw_ba4dc957-12d5-4f6a-a560-b2cccf194351","value":["[0 0 0]","nonnegative scalar","1-by-3 real-valued vector"],"defaultvalue":"[0 0 0]"},{"name":"Seed","purpose":"Initial seed for randomization","htmlid":"mw_d5ceb910-ea58-42f6-b89b-919faed92a30","value":["67","nonnegative integer"],"defaultvalue":"67"},{"name":"Simulate using","purpose":"Type of simulation to run","htmlid":"mw_31e56a96-da21-4c8a-81cd-202b1e947746","value":["Code Generation","Interpreted Execution"],"defaultvalue":"Code Generation"}],"examples":[{"url":"..\/ug\/simulate-ins-block.html","open_command":"openExample('shared_ins\/SimulateINSBlockExample')","title":"Simulate INS Block"}],"seealso":[{"url":"imu.html","name":"IMU"},{"url":"inssensor-system-object.html","name":"insSensor"}]},{"href":"ref\/insaccelerometer.html","refentity":[{"type":"object","name":"insAccelerometer"},{"type":"function","name":"insAccelerometer","fcntype":"constructor"}],"refpurpose":"Model accelerometer readings for sensor fusion","introduced":"R2022a","description":"The insAccelerometer object models accelerometer readings for sensor fusion.","syntaxgroup":[{"title":"","syntax":["sensor = insAccelerometer"]}],"examples":[{"url":"insaccelerometer.html#mw_5f2b332d-7d03-4a03-aa68-0221b550ecd6","open_command":"openExample('shared_positioning\/CreateInsAccelerometerForUsingInInsEKFExample')","title":"Create insAccelerometer for Use in insEKF"}],"seealso":[{"url":"insekf.html","name":"insEKF"},{"url":"insoptions.html","name":"insOptions"}]},{"href":"ref\/inscreatemotionmodeltemplate.html","refentity":[{"type":"function","name":"insCreateMotionModelTemplate","fcntype":"simple"}],"refpurpose":"Create template file for motion model","introduced":"R2022b","description":"This MATLAB function creates a template class file of a motion model to be used with the insEKF filter object.","syntaxgroup":[{"title":"","syntax":["insCreateMotionModelTemplate(name)"]}],"inputgroup":[{"title":"","inputs":[{"name":"name","purpose":"Motion model class name","htmlid":"mw_1d69a0cf-f2b8-4833-b81e-fb2a8b1a7c5e","value":["string scalar","character vector"]}]}],"examples":[{"url":"inscreatemotionmodeltemplate.html#mw_70827a9b-e744-45ea-acd8-9a3b2f59a785","open_command":"openExample('shared_positioning\/CreateMotionModelTemplateForInsEKFExample')","title":"Create Motion Model Template for insEKF"}],"seealso":[{"url":"inscreatesensormodeltemplate.html","name":"insCreateSensorModelTemplate"},{"url":"insekf.html","name":"insEKF"}]},{"href":"ref\/inscreatesensormodeltemplate.html","refentity":[{"type":"function","name":"insCreateSensorModelTemplate","fcntype":"simple"}],"refpurpose":"Create template file for sensor model","introduced":"R2022b","description":"This MATLAB function creates a template class file of a sensor model to be used with the insEKF filter object.","syntaxgroup":[{"title":"","syntax":["insCreateSensorModelTemplate(name)"]}],"inputgroup":[{"title":"","inputs":[{"name":"name","purpose":"Sensor model class name","htmlid":"mw_963a137b-13ad-49c7-a75b-4f0e85adf627","value":["string scalar","character vector"]}]}],"examples":[{"url":"inscreatesensormodeltemplate.html#mw_6f2fddda-bce7-4489-9096-41879c83858d","open_command":"openExample('shared_positioning\/CreateSensorModelTemplateForInsEKFExample')","title":"Create Sensor Model Template for insEKF"}],"seealso":[{"url":"..\/..\/fusion\/ref\/inscreatemotionmodeltemplate.html","name":"insCreateMotionModelTemplate"},{"url":"insekf.html","name":"insEKF"}]},{"href":"ref\/insekf.copy.html","refentity":[{"type":"function","name":"copy","fcntype":"instancemethod"},{"type":"method","name":"insEKF.copy","fcntype":"instancemethod"}],"refpurpose":"Create copy of insEKF","introduced":"R2022b","description":"This MATLAB function returns a copy of the insEKF object filter.","syntaxgroup":[{"title":"","syntax":["newFilter = copy(filter)"]}],"inputgroup":[{"title":"","inputs":[{"name":"filter","purpose":"INS filter","htmlid":"mw_2da189ff-0864-4d8d-b4b6-25e1685fb407_sep_mw_a831f519-8a3b-407e-a2ac-ada0f3334110","value":["insEKF object"]}]}],"outputs":[{"name":"newFilter","purpose":"Filter copy","htmlid":"mw_7e62d372-d27c-4c72-919d-99d9c868c001","value":["insEKF object"]}],"examples":[{"url":"insekf.copy.html#mw_f6204d2b-5444-4984-b520-cfeca68a6e56","open_command":"openExample('shared_positioning\/CreateCopyOfInsEKFExample')","title":"Create Copy of insEKF"}],"seealso":[{"url":"insekf.html","name":"insEKF"}]},{"href":"ref\/insekf.correct.html","refentity":[{"type":"function","name":"correct","fcntype":"instancemethod"},{"type":"method","name":"insEKF.correct","fcntype":"instancemethod"}],"refpurpose":"Correct state estimates in insEKF using direct state measurements","introduced":"R2022a","description":"This MATLAB function corrects filter estimates based on a measurement, the associated index of the measurement, and the measurement noise.","syntaxgroup":[{"title":"","syntax":["[state,stateCovariance] = correct(filter,indices,measurement,measurementNoise)"]}],"inputgroup":[{"title":"","inputs":[{"name":"filter","purpose":"INS filter","htmlid":"mw_82dac073-6229-416d-bc61-518430ab8ae8_sep_mw_a831f519-8a3b-407e-a2ac-ada0f3334110","value":["insEKF object"]},{"name":"indices","purpose":"State indices","htmlid":"mw_4e22a274-66c8-431d-af5c-9d6fabb05a26","value":["M-element vector of state indices"]},{"name":"measurement","purpose":"Direct state measurement","htmlid":"mw_0478fb4f-2b74-4816-bcd6-63a8314e44a4","value":["M-element real-valued vector"]},{"name":"measurementNoise","purpose":"Measurement noise","htmlid":"mw_0b7ecc10-dfb9-425e-b537-afaaa1c3819a","value":["M-by-M real-valued positive-definite matrix","M-element vector of positive values","positive scalar"]}]}],"outputs":[{"name":"state","purpose":"Corrected state vector","htmlid":"mw_e9266564-572c-4216-9805-9fe1bd0d93cf","value":["N-element real-valued vector"]},{"name":"stateCovariance","purpose":"Corrected state estimate error covariance","htmlid":"mw_016515ed-d43c-4a25-a129-3911f0fbf2d9","value":["N-by-N real-valued positive definite matrix"]}],"examples":[{"url":"insekf.correct.html#mw_6b92c549-d1cf-425e-a737-19f983fcc143","open_command":"openExample('shared_positioning\/CorrectAngularVelocityStateInInsEKFExample')","title":"Correct Angular Velocity State in insEKF"}],"seealso":[{"url":"insekf.predict.html","name":"predict"},{"url":"insekf.fuse.html","name":"fuse"},{"url":"insekf.residual.html","name":"residual"},{"url":"insekf.stateparts.html","name":"stateparts"},{"url":"insekf.stateinfo.html","name":"stateinfo"},{"url":"insekf.estimatestates.html","name":"estimateStates"},{"url":"insekf.tune.html","name":"tune"},{"url":"insekf.createtunercosttemplate.html","name":"createTunerCostTemplate"},{"url":"insekf.tunercostfcnparam.html","name":"tunerCostFcnParam"}]},{"href":"ref\/insekf.createtunercosttemplate.html","refentity":[{"type":"function","name":"createTunerCostTemplate","fcntype":"instancemethod"},{"type":"method","name":"insEKF.createTunerCostTemplate","fcntype":"instancemethod"}],"refpurpose":"Create template of tuner cost function","introduced":"R2022a","description":"This MATLAB function creates a template of a tuner cost function and shows it in an editor window.","syntaxgroup":[{"title":"","syntax":["createTunerCostTemplate(filter)"]}],"inputgroup":[{"title":"","inputs":[{"name":"filter","purpose":"INS filter","htmlid":"mw_88d38741-15c5-4a5a-97f7-fc6d56904681_sep_mw_a831f519-8a3b-407e-a2ac-ada0f3334110","value":["insEKF object"]}]}],"examples":[{"url":"insekf.createtunercosttemplate.html#mw_f1b601ab-3aff-4546-b9b8-9a8dbf27f16f","open_command":"openExample('shared_positioning\/TuneInsEKFWithCustomCostFunctionExample')","title":"Tune insEKF with Custom Cost Function"}],"seealso":[{"url":"insekf.predict.html","name":"predict"},{"url":"insekf.fuse.html","name":"fuse"},{"url":"insekf.residual.html","name":"residual"},{"url":"insekf.correct.html","name":"correct"},{"url":"insekf.stateparts.html","name":"stateparts"},{"url":"insekf.statecovparts.html","name":"statecovparts"},{"url":"insekf.stateinfo.html","name":"stateinfo"},{"url":"insekf.estimatestates.html","name":"estimateStates"},{"url":"insekf.tune.html","name":"tune"},{"url":"insekf.tunercostfcnparam.html","name":"tunerCostFcnParam"}]},{"href":"ref\/insekf.estimatestates.html","refentity":[{"type":"function","name":"estimateStates","fcntype":"instancemethod"},{"type":"method","name":"insEKF.estimateStates","fcntype":"instancemethod"}],"refpurpose":"Batch fusion and smoothing of sensor data","introduced":"R2022a","description":"This MATLAB function returns the state estimates based on the motion model used in the filter, the sensor data, and the measurement noise.","syntaxgroup":[{"title":"","syntax":["estimates = estimateStates(filter,sensorData,measurementNoise)","[estimates,smoothEstimates] = estimateStates(___)"]}],"inputgroup":[{"title":"","inputs":[{"name":"filter","purpose":"INS filter","htmlid":"mw_67102447-3ad0-48b8-a228-ebea997a03e0_sep_mw_a831f519-8a3b-407e-a2ac-ada0f3334110","value":["insEKF object"]},{"name":"sensorData","purpose":"Sensor data","htmlid":"mw_cb8e810f-65b6-41f8-acb6-7801a76b4ddb","value":["timetable"]},{"name":"measurementNoise","purpose":"Measurement noise","htmlid":"mw_c82c8425-dcb2-48dd-9a0f-eaf6f32406a1","value":["structure"]}]}],"outputs":[{"name":"estimates","purpose":"State estimates","htmlid":"mw_a921a340-63b3-46a2-87f4-3977e28d8821","value":["timetable"]},{"name":"smoothEstimates","purpose":"Smoothed state estimates","htmlid":"mw_2fe16170-2114-45cc-958b-643fdfd46d1c","value":["timetable"]}],"examples":[{"url":"insekf.estimatestates.html#mw_3bdf332d-7d67-46fb-86be-53eb5726e1e0","open_command":"openExample('shared_positioning\/BatchFusionOfAccelerometerAndGyroscopeDataUsingInsEKFExample')","title":"Batch Fusion and State Smoothing Using insEKF"}],"seealso":[{"url":"insekf.predict.html","name":"predict"},{"url":"insekf.fuse.html","name":"fuse"},{"url":"insekf.residual.html","name":"residual"},{"url":"insekf.correct.html","name":"correct"},{"url":"insekf.stateparts.html","name":"stateparts"},{"url":"insekf.statecovparts.html","name":"statecovparts"},{"url":"insekf.stateinfo.html","name":"stateinfo"},{"url":"insekf.tune.html","name":"tune"},{"url":"insekf.createtunercosttemplate.html","name":"createTunerCostTemplate"},{"url":"insekf.tunercostfcnparam.html","name":"tunerCostFcnParam"}]},{"href":"ref\/insekf.fuse.html","refentity":[{"type":"function","name":"fuse","fcntype":"instancemethod"},{"type":"method","name":"insEKF.fuse","fcntype":"instancemethod"}],"refpurpose":"Fuse sensor data for state estimation in insEKF","introduced":"R2022a","description":"This MATLAB function fuses the measurement from a sensor, based on the measurement noise, for state estimation.","syntaxgroup":[{"title":"","syntax":["[state,stateCovariance] = fuse(filter,sensor,measurement,measurementNoise)"]}],"inputgroup":[{"title":"","inputs":[{"name":"filter","purpose":"INS filter","htmlid":"mw_9fb14a0d-9dd4-4c45-aca3-c80ddf22f424_sep_mw_a831f519-8a3b-407e-a2ac-ada0f3334110","value":["insEKF object"]},{"name":"sensor","purpose":"Inertial sensor","htmlid":"mw_9fb14a0d-9dd4-4c45-aca3-c80ddf22f424_sep_mw_b90b2778-1aef-4db9-b769-3a0762fcaeb3","value":["insAccelerometer object","insGyroscope object","insMagnetometer object","insGPS object","object inheriting from positioning.insSensorModel interface class"]},{"name":"measurement","purpose":"Measurement from sensor","htmlid":"mw_9fb14a0d-9dd4-4c45-aca3-c80ddf22f424_sep_mw_8b6ed52f-f5ac-4a6e-b9c9-f6cd07b915bc","value":["M-element real-valued vector"]},{"name":"measurementNoise","purpose":"Measurement noise","htmlid":"mw_9fb14a0d-9dd4-4c45-aca3-c80ddf22f424_sep_mw_99d34f56-ef9e-4354-83b6-4e138d3d574d","value":["M-by-M real-valued positive-definite matrix","M-element vector of positive values","positive scalar"]}]}],"outputs":[{"name":"state","purpose":"State vector after measurement fusion","htmlid":"mw_27b8208d-c3c5-475e-9bfd-9bbaf341b7fd","value":["N-element real-valued vector"]},{"name":"stateCovariance","purpose":"State estimate error covariance after measurement fusion","htmlid":"mw_019d8eab-2e26-4290-b2a8-e9bd2e3d12a5","value":["N-by-N real-valued positive definite matrix"]}],"examples":[{"url":"insekf.fuse.html#mw_785fe957-a205-4bc4-aa21-ed574d663b68","open_command":"openExample('shared_positioning\/FuseGyroscopeDataUsingInsEKFExample')","title":"Fuse Gyroscope Data Using insEKF"}],"seealso":[{"url":"insekf.predict.html","name":"predict"},{"url":"insekf.residual.html","name":"residual"},{"url":"insekf.correct.html","name":"correct"},{"url":"insekf.stateparts.html","name":"stateparts"},{"url":"insekf.statecovparts.html","name":"statecovparts"},{"url":"insekf.stateinfo.html","name":"stateinfo"},{"url":"insekf.estimatestates.html","name":"estimateStates"},{"url":"insekf.tune.html","name":"tune"},{"url":"insekf.createtunercosttemplate.html","name":"createTunerCostTemplate"},{"url":"insekf.tunercostfcnparam.html","name":"tunerCostFcnParam"}]},{"href":"ref\/insekf.html","refentity":[{"type":"object","name":"insEKF"},{"type":"function","name":"insEKF","fcntype":"constructor"}],"refpurpose":"Inertial Navigation Using Extended Kalman Filter","introduced":"R2022a","description":"The insEKF object creates a continuous-discrete extended Kalman Filter (EKF), in which the state prediction uses a continuous-time model and the state correction uses a discrete-time model.","syntaxgroup":[{"title":"","syntax":["filter = insEKF","filter = insEKF(sensor1,sensor2,...,sensorN)","filter = insEKF(___,motionModel)","filter = insEKF(___,options)"]}],"classpropertygroup":[{"classproperty":[{"name":"State","purpose":"State vector of extended Kalman filter","htmlid":"mw_cdc79f7f-9cc7-49fa-bbdf-d274ccd37800","value":["N-element real-valued vector"]},{"name":"StateCovariance","purpose":"State error covariance of extended Kalman filter","htmlid":"mw_c229ad84-356e-4482-9776-17cd3213fad7","value":["N-by-N real-valued positive-definite matrix"]},{"name":"AdditiveProcessNoise","purpose":"Additive process noise for extended Kalman filter","htmlid":"mw_84fb5182-5ed1-494f-a02b-549c21a112f4","value":["N-by-N real-valued positive definite matrix"]},{"name":"MotionModel","readonly":true,"purpose":"Motion model used in extended Kalman filter","htmlid":"mw_f3e82501-7f57-4802-b5f7-5791972d7921","value":["insMotionOrientation object","insMotionPose object","object inheriting from positioning.INSMotionModel class"]},{"name":"Sensors","readonly":true,"purpose":"Sensors fused in extended Kalman filter","htmlid":"mw_13f306a5-676e-4454-a05d-40b1374ce1ac","value":["{insAccelerometer,insGyroscope}","cell array of inertial sensor objects"],"defaultvalue":"{insAccelerometer,insGyroscope}"},{"name":"SensorNames","readonly":true,"purpose":"Names of sensors","htmlid":"mw_41854c9b-b149-4ff8-9a37-7967a0a51580","value":["cell array of character vectors"]},{"name":"ReferenceFrame","readonly":true,"purpose":"Reference frame of extended Kalman filter","htmlid":"mw_e7c1694d-2e4b-4b60-8023-dd0f9fcb53ff","value":["\"NED\"","\"ENU\""],"defaultvalue":"\"NED\""}]}],"objectfunctions":[{"title":"","functions":[{"name":"predict","url":"insekf.predict.html","description":"Predict state estimates forward in time for insEKF"},{"name":"fuse","url":"insekf.fuse.html","description":"Fuse sensor data for state estimation in insEKF"},{"name":"residual","url":"insekf.residual.html","description":"Residual and residual covariance from state measurement for\n        insEKF"},{"name":"correct","url":"insekf.correct.html","description":"Correct state estimates in insEKF using direct state\n      measurements"},{"name":"stateparts","url":"insekf.stateparts.html","description":"Get and set part of state vector in insEKF"},{"name":"statecovparts","url":"insekf.statecovparts.html","description":"Get and set part of state covariance matrix in\n      insEKF"},{"name":"stateinfo","url":"insekf.stateinfo.html","description":"State vector information for insEKF"},{"name":"estimateStates","url":"insekf.estimatestates.html","description":"Batch fusion and smoothing of sensor data"},{"name":"tune","url":"insekf.tune.html","description":"Tune insEKF parameters to reduce estimation error"},{"name":"createTunerCostTemplate","url":"insekf.createtunercosttemplate.html","description":"Create template of tuner cost function"},{"name":"tunerCostFcnParam","url":"insekf.tunercostfcnparam.html","description":"First parameter example for tuning cost function"},{"name":"copy","url":"insekf.copy.html","description":"Create copy of insEKF"},{"name":"reset","url":"insekf.reset.html","description":"Reset states for insEKF"}]}],"examples":[{"url":"insekf.html#mw_8534e9c0-92de-44cc-9d67-2495d2831c1a","open_command":"openExample('shared_positioning\/CreateInsEKFWithDifferentConfigurationsExample')","title":"Create insEKF with Different Configurations"},{"url":"insekf.html#mw_67ff4d77-a986-4dc9-8106-62c5166b5305","open_command":"openExample('shared_positioning\/SequentialFusionOfAccelerometerAndGyroscopeDataExample')","title":"Sequential Fusion of Accelerometer and Gyroscope Data Using insEKF"},{"url":"insekf.html#mw_eb7b54c5-a0c2-4342-8271-d55c9e868362","open_command":"openExample('shared_positioning\/BatchFusionOfAccelerometerAndGyroscopeDataUsingInsEKFExample')","title":"Batch Fusion and State Smoothing Using insEKF"}],"seealso":[{"url":"insoptions.html","name":"insOptions"},{"url":"insaccelerometer.html","name":"insAccelerometer"},{"url":"insgps.html","name":"insGPS"},{"url":"insgyroscope.html","name":"insGyroscope"},{"url":"insmagnetometer.html","name":"insMagnetometer"},{"url":"insmotionorientation.html","name":"insMotionOrientation"},{"url":"insmotionpose.html","name":"insMotionPose"},{"url":"positioning.insmotionmodel-class.html","name":"positioning.INSMotionModel"},{"url":"positioning.inssensormodel-class.html","name":"positioning.INSSensorModel"},{"url":"tunerconfig.html","name":"tunerconfig"},{"url":"tunernoise.html","name":"tunernoise"},{"url":"tunerplotpose.tunerplotpose.html","name":"tunerPlotPose"}]},{"href":"ref\/insekf.predict.html","refentity":[{"type":"function","name":"predict","fcntype":"instancemethod"},{"type":"method","name":"insEKF.predict","fcntype":"instancemethod"}],"refpurpose":"Predict state estimates forward in time for insEKF","introduced":"R2022a","description":"This MATLAB function predicts the state estimates forward in time by dt seconds based on the motion model of the filter and returns the predicted state and state estimate error covariance.","syntaxgroup":[{"title":"","syntax":["[state,stateCovariance] = predict(filter,dt)","[___] = predict(___,varargin)"]}],"inputgroup":[{"title":"","inputs":[{"name":"filter","purpose":"INS filter","htmlid":"mw_b0379d23-f611-4545-910a-05e9f5822ec4_sep_mw_a831f519-8a3b-407e-a2ac-ada0f3334110","value":["insEKF object"]},{"name":"dt","purpose":"Time step of prediction","htmlid":"mw_94d910d8-92ee-4bfa-8fb1-4fb2e3602bd8","value":["positive scalar"]},{"name":"varargin","purpose":"Additional arguments","htmlid":"mw_6fc8abc9-ab0f-406a-a21f-3dbb163d620b","value":["any data type"]}]}],"outputs":[{"name":"state","purpose":"Predicted state vector","htmlid":"mw_dfdef2a0-0571-4ff4-abf4-0fb841b1556e","value":["N-element real-valued vector"]},{"name":"stateCovariance","purpose":"State estimate error covariance","htmlid":"mw_385ac303-78c1-410d-942e-6463241f587a","value":["N-by-N real-valued positive definite matrix"]}],"examples":[{"url":"insekf.predict.html#mw_f9cf9866-6bf5-4e4b-8fc4-bd8172c1b812","open_command":"openExample('shared_positioning\/PredictInsEKFFilterObjectExample')","title":"Predict insEKF Filter Object"}],"seealso":[{"url":"insekf.fuse.html","name":"fuse"},{"url":"insekf.residual.html","name":"residual"},{"url":"insekf.correct.html","name":"correct"},{"url":"insekf.stateparts.html","name":"stateparts"},{"url":"insekf.statecovparts.html","name":"statecovparts"},{"url":"insekf.stateinfo.html","name":"stateinfo"},{"url":"insekf.estimatestates.html","name":"estimateStates"},{"url":"insekf.tune.html","name":"tune"},{"url":"insekf.createtunercosttemplate.html","name":"createTunerCostTemplate"},{"url":"insekf.tunercostfcnparam.html","name":"tunerCostFcnParam"}]},{"href":"ref\/insekf.reset.html","refentity":[{"type":"function","name":"reset","fcntype":"instancemethod"},{"type":"method","name":"insEKF.reset","fcntype":"instancemethod"}],"refpurpose":"Reset states for insEKF","introduced":"R2022b","description":"This MATLAB function resets the State and StateCovariance properties of the insEKF object filter to their default values.","syntaxgroup":[{"title":"","syntax":["reset(filter)"]}],"inputgroup":[{"title":"","inputs":[{"name":"filter","purpose":"INS filter","htmlid":"mw_93b37416-7231-4769-97ac-86d893ffcb5b_sep_mw_a831f519-8a3b-407e-a2ac-ada0f3334110","value":["insEKF object"]}]}],"examples":[{"url":"insekf.reset.html#mw_9968dedf-e4e6-43bf-b831-5f51709215ea","open_command":"openExample('shared_positioning\/ResetInsEKFFilterObjectExample')","title":"Reset insEKF Filter object"}],"seealso":[{"url":"insekf.html","name":"insEKF"}]},{"href":"ref\/insekf.residual.html","refentity":[{"type":"function","name":"residual","fcntype":"instancemethod"},{"type":"method","name":"insEKF.residual","fcntype":"instancemethod"}],"refpurpose":"Residual and residual covariance from state measurement for insEKF","introduced":"R2022a","description":"This MATLAB function computes the residual and the residual covariance based on the measurement from the sensor and the measurement covariance.","syntaxgroup":[{"title":"","syntax":["[residual,residualCovariance] = residual(filter,sensor,measurement,measurementNoise)"]}],"inputgroup":[{"title":"","inputs":[{"name":"filter","purpose":"INS filter","htmlid":"mw_612badc1-5182-439d-b1ea-3435f5a4f2fc_sep_mw_a831f519-8a3b-407e-a2ac-ada0f3334110","value":["insEKF object"]},{"name":"sensor","purpose":"Inertial sensor","htmlid":"mw_612badc1-5182-439d-b1ea-3435f5a4f2fc_sep_mw_b90b2778-1aef-4db9-b769-3a0762fcaeb3","value":["insAccelerometer object","insGyroscope object","insMagnetometer object","insGPS object","object inheriting from positioning.insSensorModel interface class"]},{"name":"measurement","purpose":"Measurement from sensor","htmlid":"mw_612badc1-5182-439d-b1ea-3435f5a4f2fc_sep_mw_8b6ed52f-f5ac-4a6e-b9c9-f6cd07b915bc","value":["M-element real-valued vector"]},{"name":"measurementNoise","purpose":"Measurement noise","htmlid":"mw_612badc1-5182-439d-b1ea-3435f5a4f2fc_sep_mw_99d34f56-ef9e-4354-83b6-4e138d3d574d","value":["M-by-M real-valued positive-definite matrix","M-element vector of positive values","positive scalar"]}]}],"outputs":[{"name":"residual","purpose":"Measurement residual","htmlid":"mw_a7dfdfbe-fb42-41f7-8126-d5966548a671","value":["M-element real-valued vector"]},{"name":"residualCovariance","purpose":"Residual covariance","htmlid":"mw_a2028cd7-ba1a-40cc-8695-316495fbde4f","value":["M-by-M real-valued positive definite matrix"]}],"examples":[{"url":"insekf.residual.html#mw_cc9d2009-102f-4907-beaa-836e8248a7c0","open_command":"openExample('shared_positioning\/ObtainGyroscopeMeasurementResidualsUsingInsEKFExample')","title":"Obtain Gyroscope Measurement Residuals Using insEKF"}],"seealso":[{"url":"insekf.predict.html","name":"predict"},{"url":"insekf.fuse.html","name":"fuse"},{"url":"insekf.correct.html","name":"correct"},{"url":"insekf.stateparts.html","name":"stateparts"},{"url":"insekf.statecovparts.html","name":"statecovparts"},{"url":"insekf.stateinfo.html","name":"stateinfo"},{"url":"insekf.estimatestates.html","name":"estimateStates"},{"url":"insekf.tune.html","name":"tune"},{"url":"insekf.createtunercosttemplate.html","name":"createTunerCostTemplate"},{"url":"insekf.tunercostfcnparam.html","name":"tunerCostFcnParam"}]},{"href":"ref\/insekf.statecovparts.html","refentity":[{"type":"function","name":"statecovparts","fcntype":"instancemethod"},{"type":"method","name":"insEKF.statecovparts","fcntype":"instancemethod"}],"refpurpose":"Get and set part of state covariance matrix in insEKF","introduced":"R2022a","description":"This MATLAB function returns the covariance submatrix corresponding to the specified state name of the filter.","syntaxgroup":[{"title":"","syntax":["covparts = statecovparts(filter,stateName)","covparts = statecovparts(filter,sensor,stateName)","statecovparts(filter,stateName,value)","statecovparts(filter,sensor,stateName,value)"]}],"inputgroup":[{"title":"","inputs":[{"name":"filter","purpose":"INS filter","htmlid":"mw_160a19b5-c482-45a3-9318-75efc7522a96_sep_mw_a831f519-8a3b-407e-a2ac-ada0f3334110","value":["insEKF object"]},{"name":"stateName","purpose":"Name of part of state","htmlid":"mw_160a19b5-c482-45a3-9318-75efc7522a96_sep_mw_d7e9cb6f-fd11-402a-a16f-b033ed4bd437","value":["string scalar","character vector"]},{"name":"sensor","purpose":"Inertial sensor","htmlid":"mw_160a19b5-c482-45a3-9318-75efc7522a96_sep_mw_b90b2778-1aef-4db9-b769-3a0762fcaeb3","value":["insAccelerometer object","insGyroscope object","insMagnetometer object","insGPS object","object inheriting from positioning.insSensorModel interface class"]},{"name":"value","purpose":"Value for filter or sensor state part covariance matrix","htmlid":"mw_e0a6244e-0fc7-4c7a-95bd-fbfcb13aeb9a","value":["scalar","N-element real-valued vector","N-by-N real-valued matrix"]}]}],"outputs":[{"name":"covparts","purpose":"Covariance matrix corresponding to state name","htmlid":"mw_52a5c477-c037-460f-b1a8-d745030b891d","value":["N-by-N real-valued matrix"]}],"examples":[{"url":"insekf.statecovparts.html#mw_713ff0e2-0112-406b-b5f2-1c4f00db0307","open_command":"openExample('shared_positioning\/SetAndGetAccelerometerBiasCovariancesInInsEKFExample')","title":"Set and Get Accelerometer Bias Covariances in insEKF"}],"seealso":[{"url":"insekf.predict.html","name":"predict"},{"url":"insekf.fuse.html","name":"fuse"},{"url":"insekf.residual.html","name":"residual"},{"url":"insekf.correct.html","name":"correct"},{"url":"insekf.stateparts.html","name":"stateparts"},{"url":"insekf.stateinfo.html","name":"stateinfo"},{"url":"insekf.estimatestates.html","name":"estimateStates"},{"url":"insekf.tune.html","name":"tune"},{"url":"insekf.createtunercosttemplate.html","name":"createTunerCostTemplate"},{"url":"insekf.tunercostfcnparam.html","name":"tunerCostFcnParam"}]},{"href":"ref\/insekf.stateinfo.html","refentity":[{"type":"function","name":"stateinfo","fcntype":"instancemethod"},{"type":"method","name":"insEKF.stateinfo","fcntype":"instancemethod"}],"refpurpose":"State vector information for insEKF","introduced":"R2022a","description":"This MATLAB function returns a structure whose fields contain descriptions of the elements of the state vector in the filter.","syntaxgroup":[{"title":"","syntax":["info = stateinfo(filter)","indices = stateinfo(filter,stateName)","indices = stateinfo(filter,sensor,stateName)"]}],"inputgroup":[{"title":"","inputs":[{"name":"filter","purpose":"INS filter","htmlid":"mw_37774677-ca45-4d6f-9b68-4d14e1495359_sep_mw_a831f519-8a3b-407e-a2ac-ada0f3334110","value":["insEKF object"]},{"name":"stateName","purpose":"Name of part of state","htmlid":"mw_37774677-ca45-4d6f-9b68-4d14e1495359_sep_mw_d7e9cb6f-fd11-402a-a16f-b033ed4bd437","value":["string scalar","character vector"]},{"name":"sensor","purpose":"Inertial sensor","htmlid":"mw_07f8b6de-9a6c-4855-9e95-fc4bbb512175","value":["insAccelerometer object","insGyroscope object","insMagnetometer object","insGPS object","object inheriting from positioning.insSensorModel interface class"]}]}],"outputs":[{"name":"info","purpose":"State information","htmlid":"mw_37774677-ca45-4d6f-9b68-4d14e1495359_sep_mw_a793f7e0-4b76-4fff-a134-c6e8cb55079e","value":["structure"]},{"name":"indices","purpose":"State indices","htmlid":"mw_3724933f-4342-4ab5-afb6-a10878b2630f","value":["M-element vector of state indices"]}],"examples":[{"url":"insekf.stateinfo.html#mw_d1f7a1a5-3088-4d21-b6ae-85ed0c41dc71","open_command":"openExample('shared_positioning\/ObtainStateInformationOfInsEKFExample')","title":"Obtain State Information of insEKF"}],"seealso":[{"url":"insekf.predict.html","name":"predict"},{"url":"insekf.fuse.html","name":"fuse"},{"url":"insekf.residual.html","name":"residual"},{"url":"insekf.correct.html","name":"correct"},{"url":"insekf.stateparts.html","name":"stateparts"},{"url":"insekf.statecovparts.html","name":"statecovparts"},{"url":"insekf.estimatestates.html","name":"estimateStates"},{"url":"insekf.tune.html","name":"tune"},{"url":"insekf.createtunercosttemplate.html","name":"createTunerCostTemplate"},{"url":"insekf.tunercostfcnparam.html","name":"tunerCostFcnParam"}]},{"href":"ref\/insekf.stateparts.html","refentity":[{"type":"function","name":"stateparts","fcntype":"instancemethod"},{"type":"method","name":"insEKF.stateparts","fcntype":"instancemethod"}],"refpurpose":"Get and set part of state vector in insEKF","introduced":"R2022a","description":"This MATLAB function returns the components of the state vector corresponding to the specified state name of the filter.","syntaxgroup":[{"title":"","syntax":["part = stateparts(filter,stateName)","part = stateparts(filter,sensor,stateName)","stateparts(filter,stateName,value)","stateparts(filter,sensor,stateName,value)"]}],"inputgroup":[{"title":"","inputs":[{"name":"filter","purpose":"INS filter","htmlid":"mw_51e96227-543f-4046-9fd1-d1030937a270_sep_mw_a831f519-8a3b-407e-a2ac-ada0f3334110","value":["insEKF object"]},{"name":"stateName","purpose":"Name of part of state","htmlid":"mw_51e96227-543f-4046-9fd1-d1030937a270_sep_mw_d7e9cb6f-fd11-402a-a16f-b033ed4bd437","value":["string scalar","character vector"]},{"name":"sensor","purpose":"Inertial sensor","htmlid":"mw_51e96227-543f-4046-9fd1-d1030937a270_sep_mw_b90b2778-1aef-4db9-b769-3a0762fcaeb3","value":["insAccelerometer object","insGyroscope object","insMagnetometer object","insGPS object","object inheriting from positioning.insSensorModel interface class"]},{"name":"value","purpose":"Value for filter state or sensor state part","htmlid":"mw_395c8879-2796-4b62-9cf5-7830572d3eec","value":["N-element real-valued vector"]}]}],"outputs":[{"name":"part","purpose":"Part of state vector","htmlid":"mw_6f22eec0-4de0-435b-bb4b-1aff02b7ae0d","value":["N-element real-valued vector"]}],"examples":[{"url":"insekf.stateparts.html#mw_69cafd0d-b21d-4198-8a85-c15d7521763c","open_command":"openExample('shared_positioning\/SetAndGetAccelerometerBiasesInInsEKFExample')","title":"Set and Get Accelerometer Biases in insEKF"}]},{"href":"ref\/insekf.tune.html","refentity":[{"type":"function","name":"tune","fcntype":"instancemethod"},{"type":"method","name":"insEKF.tune","fcntype":"instancemethod"}],"refpurpose":"Tune insEKF parameters to reduce estimation error","introduced":"R2022a","description":"This MATLAB function tunes the AdditiveProcessNoise property of the insEKF filter object filter, and the measurement noise, to reduce the root-mean-squared (RMS) state estimation error between the fused sensor data and the ground truth.","syntaxgroup":[{"title":"","syntax":["tunedMeasureNoise = tune(filter,measureNoise,sensorData,groundTruth)","tunedMeasureNoise = tune(___,config)"]}],"inputgroup":[{"title":"","inputs":[{"name":"filter","purpose":"INS filter","htmlid":"mw_267914c3-5177-43e3-a08b-a9b4ba9e5989_sep_mw_a831f519-8a3b-407e-a2ac-ada0f3334110","value":["insEKF object"]},{"name":"measureNoise","purpose":"Measurement noise","htmlid":"mw_05834ae5-cde3-42f2-9a5a-f01f187e14bd","value":["structure"]},{"name":"sensorData","purpose":"Sensor data","htmlid":"mw_911def8b-aabc-414a-b6b4-2d959330bb28","value":["timetable"]},{"name":"groundTruth","purpose":"Ground truth data","htmlid":"mw_9416b2f4-02db-4060-b623-2d8ff4114afa","value":["timetable"]},{"name":"config","purpose":"Tuner configuration","htmlid":"mw_31ac4406-cff1-42d2-8050-a4ef376b66a8","value":["tunerconfig object"]}]}],"outputs":[{"name":"tunedMeasureNoise","purpose":"Tuned measurement noise","htmlid":"mw_fb5d6f71-b4ba-45a6-afd1-51c5700c43f8","value":["structure"]}],"examples":[{"url":"insekf.tune.html#mw_76d4b871-217a-44a6-acba-442a8ab73b3d","open_command":"openExample('shared_positioning\/TuneInsEKFToOptimizeOrientationEstimationExample')","title":"Tune insEKF to Optimize Orientation Estimation"}],"seealso":[{"url":"tunerconfig.html","name":"tunerconfig"},{"url":"tunernoise.html","name":"tunernoise"},{"url":"insekf.predict.html","name":"predict"},{"url":"insekf.fuse.html","name":"fuse"},{"url":"insekf.residual.html","name":"residual"},{"url":"insekf.correct.html","name":"correct"},{"url":"insekf.stateparts.html","name":"stateparts"},{"url":"insekf.statecovparts.html","name":"statecovparts"},{"url":"insekf.stateinfo.html","name":"stateinfo"},{"url":"insekf.estimatestates.html","name":"estimateStates"},{"url":"insekf.createtunercosttemplate.html","name":"createTunerCostTemplate"},{"url":"insekf.tunercostfcnparam.html","name":"tunerCostFcnParam"}]},{"href":"ref\/insekf.tunercostfcnparam.html","refentity":[{"type":"function","name":"tunerCostFcnParam","fcntype":"instancemethod"},{"type":"method","name":"insEKF.tunerCostFcnParam","fcntype":"instancemethod"}],"refpurpose":"First parameter example for tuning cost function","introduced":"R2022a","description":"This MATLAB function creates a structure that has the fields required for tuning an insEKF filter with a custom cost function.","syntaxgroup":[{"title":"","syntax":["tunerCostFcnParam(filter)"]}],"inputgroup":[{"title":"","inputs":[{"name":"filter","purpose":"INS filter","htmlid":"mw_38ab624e-8f61-43e9-a0c9-e1ceb9e0941d_sep_mw_a831f519-8a3b-407e-a2ac-ada0f3334110","value":["insEKF object"]}]}],"examples":[{"url":"insekf.tunercostfcnparam.html#mw_62891449-e3da-429f-b0e2-0a377454d5e1","open_command":"openExample('shared_positioning\/TuneInsEKFWithMEXacceleratedCustomCostFunctionExample')","title":"Tune insEKF with MEX-Accelerated Custom Cost Function"}],"seealso":[{"url":"insekf.predict.html","name":"predict"},{"url":"insekf.fuse.html","name":"fuse"},{"url":"insekf.residual.html","name":"residual"},{"url":"insekf.correct.html","name":"correct"},{"url":"insekf.stateparts.html","name":"stateparts"},{"url":"insekf.statecovparts.html","name":"statecovparts"},{"url":"insekf.stateinfo.html","name":"stateinfo"},{"url":"insekf.estimatestates.html","name":"estimateStates"},{"url":"insekf.tune.html","name":"tune"},{"url":"insekf.createtunercosttemplate.html","name":"createTunerCostTemplate"}]},{"href":"ref\/insfilter.html","refentity":[{"type":"function","name":"insfilter","fcntype":"simple"}],"refpurpose":"Create inertial navigation filter","introduced":"R2018b","description":"This MATLAB function returns an insfilterMARG inertial navigation filter object that estimates pose based on accelerometer, gyroscope, GPS, and magnetometer measurements.","syntaxgroup":[{"title":"","syntax":["filter = insfilter","filter = insfilter('ReferenceFrame',RF)"]}],"inputgroup":[{"title":"","inputs":[{"name":"RF","purpose":"Local navigation coordinate system","htmlid":"mw_c014cfbb-5206-4ae6-a472-35e3fcd78a5e_sep_mw_cc120d78-4a41-44b5-901a-e71ecd8fbcb4","value":["'NED'","'ENU'"],"defaultvalue":"'NED'"}]}],"examples":[{"url":"insfilter.html#mw_589297f3-14d5-4f11-b448-ee5bf3ceeaae","open_command":"openExample('shared_positioning\/CreateDefaultINSFilterExample')","title":"Create Default INS Filter"}],"seealso":[{"url":"imufilter-system-object.html","name":"imufilter"},{"url":"ahrsfilter-system-object.html","name":"ahrsfilter"},{"url":"insfiltererrorstate.html","name":"insfilterErrorState"},{"url":"insfilterasync.html","name":"insfilterAsync"},{"url":"insfilternonholonomic.html","name":"insfilterNonholonomic"},{"url":"insfiltermarg.html","name":"insfilterMARG"}]},{"href":"ref\/insfilterasync.html","refentity":[{"type":"object","name":"insfilterAsync"},{"type":"function","name":"insfilterAsync","fcntype":"constructor"}],"refpurpose":"Estimate pose from asynchronous MARG and GPS data","introduced":"R2019a","description":"The insfilterAsync object implements sensor fusion of MARG and GPS data to estimate pose in the NED (or ENU) reference frame.","syntaxgroup":[{"title":"","syntax":["filter = insfilterAsync","filter = insfilterAsync('ReferenceFrame',RF)","filter = insfilterAsync(___,Name=Value)"]}],"inputgroup":[{"title":"","inputs":[{"name":"RF","purpose":"Local navigation coordinate system","htmlid":"mw_485dd49f-3894-485a-9217-7afafc07bb2e_sep_mw_cc120d78-4a41-44b5-901a-e71ecd8fbcb4","value":["'NED'","'ENU'"],"defaultvalue":"'NED'"}]}],"classpropertygroup":[{"classproperty":[{"name":"ReferenceLocation","purpose":"Reference location (deg, deg, meters)","htmlid":"mw_074b86f8-eadd-4c58-9ee5-47d6aa65e615","value":["[0 0 0]","three-element positive row vector"],"defaultvalue":"[0 0 0]"},{"name":"QuaternionNoise","purpose":"Additive quaternion process noise variance","htmlid":"mw_fbbed174-ea95-435a-9d2a-a8954f17b06b","value":["[1e-6 1e-6 1e-6 1e-6]","scalar","four-element row vector"],"defaultvalue":"[1e-6 1e-6 1e-6 1e-6]"},{"name":"AngularVelocityNoise","purpose":"Additive angular velocity process noise in local navigation coordinate system ((rad\/s)^{2})","htmlid":"mw_ef2a0057-4fda-4778-867e-317fda1b148e","value":["[0.005 0.005 0.005]","scalar","three-element row vector"],"defaultvalue":"[0.005 0.005 0.005]"},{"name":"PositionNoise","purpose":"Additive position process noise variance in local navigation coordinate system (m^{2})","htmlid":"mw_d92eb837-f358-4f52-9659-06604fbe4585","value":["[1e-6 1e-6 1e-6]","scalar","three-element row vector"],"defaultvalue":"[1e-6 1e-6 1e-6]"},{"name":"VelocityNoise","purpose":"Additive velocity process noise variance in local navigation coordinate system ((m\/s)^{2})","htmlid":"mw_76d87181-7264-463e-b445-862688c49a11","value":["[1e-6 1e-6 1e-6]","scalar","three-element row vector"],"defaultvalue":"[1e-6 1e-6 1e-6]"},{"name":"AccelerationNoise","purpose":"Additive acceleration process noise variance in local navigation coordinate system ((m\/s^{2})^{2})","htmlid":"mw_b132e9ce-38b0-4018-a5ba-5956f11d6580","value":["[50 50 50]","scalar","three-element row vector"],"defaultvalue":"[50 50 50]"},{"name":"GyroscopeBiasNoise","purpose":"Additive process noise variance from gyroscope bias ((rad\/s)^{2})","htmlid":"mw_55a90598-f538-456e-9b73-b0086978ea25","value":["[1e-10 1e-10 1e-10]","scalar","three-element row vector"],"defaultvalue":"[1e-10 1e-10 1e-10]"},{"name":"AccelerometerBiasNoise","purpose":"Additive process noise variance from accelerometer bias ((m\/s^{2})^{2})","htmlid":"mw_1113f525-977d-42be-8eb7-f632428d9555","value":["[1e-4 1e-4 1e-4]","positive scalar","three-element row vector"],"defaultvalue":"[1e-4 1e-4 1e-4]"},{"name":"GeomagneticVectorNoise","purpose":"Additive process noise variance of geomagnetic vector in local navigation coordinate system (μT^{2})","htmlid":"mw_ad4aad35-1416-428c-8229-69d49399ddc8","value":["[1e-6 1e-6 1e-6]","positive scalar","three-element row vector"],"defaultvalue":"[1e-6 1e-6 1e-6]"},{"name":"MagnetometerBiasNoise","purpose":"Additive process noise variance from magnetometer bias (μT^{2})","htmlid":"mw_816e378c-1276-47b3-a40c-792ff6857545","value":["[0.1 0.1 0.1]","positive scalar","three-element row vector"],"defaultvalue":"[0.1 0.1 0.1]"},{"name":"State","purpose":"State vector of extended Kalman filter","htmlid":"mw_8f9e2d71-8c19-4958-97a9-f2b5f484ca3f","value":["28-element column vector"]},{"name":"StateCovariance","purpose":"State error covariance for extended Kalman filter","htmlid":"mw_c0e27184-063d-4812-8fb4-fe147489059c","value":["eye(28)","28-by-28 matrix"],"defaultvalue":"eye(28)"}]}],"objectfunctions":[{"title":"","functions":[{"name":"predict","url":"asyncmarggpsfuser.predict.html","description":"Update states based on motion model for\n      insfilterAsync"},{"name":"fuseaccel","url":"asyncmarggpsfuser.fuseaccel.html","description":"Correct states using accelerometer data for\n      insfilterAsync"},{"name":"fusegyro","url":"asyncmarggpsfuser.fusegyro.html","description":"Correct states using gyroscope data for\n      insfilterAsync"},{"name":"fusemag","url":"asyncmarggpsfuser.fusemag.html","description":"Correct states using magnetometer data for\n      insfilterAsync"},{"name":"fusegps","url":"asyncmarggpsfuser.fusegps.html","description":"Correct states using GPS data for insfilterAsync"},{"name":"correct","url":"asyncmarggpsfuser.correct.html","description":"Correct states using direct state measurements for\n      insfilterAsync"},{"name":"residual","url":"insfilterasync.residual.html","description":"Residuals and residual covariances from direct state measurements for\n        insfilterAsync"},{"name":"residualaccel","url":"insfilterasync.residualaccel.html","description":"Residuals and residual covariance from accelerometer measurements for\n        insfilterAsync"},{"name":"residualgps","url":"insfilterasync.residualgps.html","description":"Residuals and residual covariance from GPS measurements for\n        insfilterAsync"},{"name":"residualmag","url":"insfilterasync.residualmag.html","description":"Residuals and residual covariance from magnetometer measurements for\n        insfilterAsync"},{"name":"residualgyro","url":"insfilterasync.residualgyro.html","description":"Residuals and residual covariance from gyroscope measurements for\n        insfilterAsync"},{"name":"pose","url":"asyncmarggpsfuser.pose.html","description":"Current position, orientation, and velocity estimate for\n        insfilterAsync"},{"name":"reset","url":"asyncmarggpsfuser.reset.html","description":"Reset internal states for insfilterAsync"},{"name":"stateinfo","url":"asyncmarggpsfuser.stateinfo.html","description":"Display state vector information for insfilterAsync"},{"name":"copy","url":"insfitlerasync.copy.html","description":"Create copy of insfilterAsync"},{"name":"tune","url":"insfilterasync.tune.html","description":"Tune insfilterAsync parameters to reduce estimation\n      error"},{"name":"tunernoise","url":"tunernoise.html","description":"Noise structure of fusion filter"}]}],"examples":[{"url":"insfilterasync.html#mw_44df80d4-a4e7-4af7-a2f6-ea31848afb81","open_command":"openExample('shared_positioning\/EstimatePoseOfUAVExample')","title":"Estimate Pose of UAV"}],"seealso":[{"url":"insfiltererrorstate.html","name":"insfilterErrorState"},{"url":"insfilternonholonomic.html","name":"insfilterNonholonomic"},{"url":"insfiltermarg.html","name":"insfilterMARG"}]},{"href":"ref\/insfilterasync.residual.html","refentity":[{"type":"function","name":"residual","fcntype":"instancemethod"},{"type":"method","name":"insfilterAsync.residual","fcntype":"instancemethod"}],"refpurpose":"Residuals and residual covariances from direct state measurements for insfilterAsync","introduced":"R2020a","description":"This MATLAB function computes the residual, res, and the residual covariance, resCov, based on the direct state measurement and measurement covariance.","syntaxgroup":[{"title":"","syntax":["[res, resCov]= residual(FUSE,idx,measurement,measurementCovariance)"]}],"inputgroup":[{"title":"","inputs":[{"name":"FUSE","purpose":"insfilterAsync","htmlid":"function_AsyncMARGGPSFuser_sep_residual_sep_mw_68036e09-0754-426d-84a7-0e0e8339837e","value":["ahrs10filter","object"]},{"name":"idx","purpose":"State vector index of measurement to correct","htmlid":"mw_bf718013-574b-4eb7-af50-7863e1646dba","value":["N-element vector of increasing integers in the range [1, 28]"]},{"name":"measurement","purpose":"Direct measurement of state","htmlid":"function_AsyncMARGGPSFuser_sep_residual_sep_mw_00af0ac1-8084-4fb8-8a39-b63f826eeb39","value":["N-element vector"]},{"name":"measurementCovariance","purpose":"Covariance of measurement","htmlid":"function_AsyncMARGGPSFuser_sep_residual_sep_mw_7bb90a10-29fa-4105-bfb5-c281804e2999","value":["N-by-N matrix"]}]}],"outputs":[{"name":"res","purpose":"Measurement residual","htmlid":"function_AsyncMARGGPSFuser_sep_residual_sep_mw_ca471bf6-01fa-415c-98f4-8d547984c8d4","value":["1-by-N vector of real values"]},{"name":"resCov","purpose":"Residual covariance","htmlid":"function_AsyncMARGGPSFuser_sep_residual_sep_mw_b0ca5a82-fd65-474f-b403-4623df71a24c","value":["N-by-N matrix of real values"]}],"examples":[{"url":"insfilterasync.residual.html#mw_4f7cba83-7443-4052-879b-d37cd4caabab","open_command":"openExample('shared_positioning\/ObtainMeasurementResidualFromInsfilterAsyncExample')","title":"Obtain Measurement Residual from insfilterAsync"}],"seealso":[{"url":"insfilterasync.html","name":"insfilterAsync"}]},{"href":"ref\/insfilterasync.residualaccel.html","refentity":[{"type":"function","name":"residualaccel","fcntype":"instancemethod"},{"type":"method","name":"insfilterAsync.residualaccel","fcntype":"instancemethod"}],"refpurpose":"Residuals and residual covariance from accelerometer measurements for insfilterAsync","introduced":"R2020a","description":"This MATLAB function computes the residual, res, and the residual covariance, resCov, based on the acceleration readings and the corresponding covariance.","syntaxgroup":[{"title":"","syntax":["[res,resCov] = residualaccel(FUSE,acceleration,accelerationCovariance)"]}],"inputgroup":[{"title":"","inputs":[{"name":"FUSE","purpose":"insfilterAsync","htmlid":"function_AsyncMARGGPSFuser_sep_residualaccel_sep_mw_68036e09-0754-426d-84a7-0e0e8339837e","value":["ahrs10filter","object"]},{"name":"acceleration","purpose":"Accelerometer readings in local sensor body coordinate system (m\/s^{2})","htmlid":"mw_5fe15e1c-a181-4010-9730-1e9fdc875bb8","value":["3-element row vector"]},{"name":"accelerationCovariance","purpose":"Acceleration error covariance of accelerometer measurement ((m\/s^{2})^{2})","htmlid":"mw_4073f1a3-86ec-4879-b660-c29bebdd9884","value":["scalar","3-element row vector","3-by-3 matrix"]}]}],"outputs":[{"name":"res","purpose":"Residual","htmlid":"mw_4599bc9a-3b28-4fd1-8037-26fa89b7025c","value":["1-by-3 vector of real values"]},{"name":"resCov","purpose":"Residual covariance","htmlid":"mw_c5490376-ec73-4955-81a5-712e6c7297ed","value":["3-by-3 matrix of real values"]}],"examples":[{"url":"insfilterasync.residualaccel.html#mw_a0b0ae7a-1ece-457d-860c-2338497ce8cf","open_command":"openExample('shared_positioning\/ObtainAccelerometerDataResidualFromInsfilterAsyncExample')","title":"Obtain Accelerometer Data Residual from insfilterAsync"}],"seealso":[{"url":"insfilterasync.html","name":"insfilterAsync"},{"url":"insfilter.html","name":"insfilter"}]},{"href":"ref\/insfilterasync.residualgps.html","refentity":[{"type":"function","name":"residualgps","fcntype":"instancemethod"},{"type":"method","name":"insfilterAsync.residualgps","fcntype":"instancemethod"}],"refpurpose":"Residuals and residual covariance from GPS measurements for insfilterAsync","introduced":"R2020a","description":"This MATLAB function computes the residual, res, and the residual covariance, resCov, based on the GPS position measurement and covariance.","syntaxgroup":[{"title":"","syntax":["[res,resCov] = residualgps(FUSE,position,positionCovariance)","[res,resCov] = residualgps(FUSE,position,positionCovariance,velocity,velocityCovariance)"]}],"inputgroup":[{"title":"","inputs":[{"name":"FUSE","purpose":"insfilterAsync","htmlid":"function_AsyncMARGGPSFuser_sep_residualgps_sep_mw_68036e09-0754-426d-84a7-0e0e8339837e","value":["ahrs10filter","object"]},{"name":"position","purpose":"Position of GPS receiver (LLA)","htmlid":"function_AsyncMARGGPSFuser_sep_residualgps_sep_mw_e0d7ef1a-8916-4bc6-abdf-ca53e009b3e8","value":["3-element row vector"]},{"name":"positionCovariance","purpose":"Position measurement covariance of GPS receiver (m^{2})","htmlid":"function_AsyncMARGGPSFuser_sep_residualgps_sep_mw_075b0d62-6e30-41bd-8b2f-f6d338e65603","value":["3-by-3 matrix"]},{"name":"velocity","purpose":"Velocity of GPS receiver in local NED coordinate system (m\/s)","htmlid":"function_AsyncMARGGPSFuser_sep_residualgps_sep_mw_49e0ba69-a901-4970-97ca-7ae5dabdda8d","value":["3-element row vector"]},{"name":"velocityCovariance","purpose":"Velocity measurement covariance of GPS receiver (m^{2}\/s^{2})","htmlid":"function_AsyncMARGGPSFuser_sep_residualgps_sep_mw_dd8c372a-1eae-4811-82f8-7d96b696b765","value":["3-by-3 matrix"]}]}],"outputs":[{"name":"res","purpose":"Position and velocity residual","htmlid":"function_AsyncMARGGPSFuser_sep_residualgps_sep_mw_f39d090b-e14a-4049-b19c-1b5cfa146da0","value":["1-by-3 vector of real values","1-by-6 vector of real values"]},{"name":"resCov","purpose":"Residual covariance","htmlid":"function_AsyncMARGGPSFuser_sep_residualgps_sep_mw_464a0365-8759-4dd6-b309-a8667f910c24","value":["3-by-3 matrix of real values","6-by-6 matrix of real values"]}],"examples":[{"url":"insfilterasync.residualgps.html#mw_fe77b854-4cb8-4191-9971-e369afda6f36","open_command":"openExample('shared_positioning\/ObtainGPSDataResidualFromInsfilterAsyncExample')","title":"Obtain GPS Data Residual from insfilterAsync"}],"seealso":[{"url":"insfilterasync.html","name":"insfilterAsync"}]},{"href":"ref\/insfilterasync.residualgyro.html","refentity":[{"type":"function","name":"residualgyro","fcntype":"instancemethod"},{"type":"method","name":"insfilterAsync.residualgyro","fcntype":"instancemethod"}],"refpurpose":"Residuals and residual covariance from gyroscope measurements for insfilterAsync","introduced":"R2020a","description":"This MATLAB function computes the residual, res, and the innovation covariance, resCov, based on the gyroscope readings and the corresponding covariance.","syntaxgroup":[{"title":"","syntax":["[res,resCov] = residualgyro(FUSE,gyroReadings,gyroCovariance)"]}],"inputgroup":[{"title":"","inputs":[{"name":"FUSE","purpose":"insfilterAsync","htmlid":"function_AsyncMARGGPSFuser_sep_residualgyro_sep_mw_68036e09-0754-426d-84a7-0e0e8339837e","value":["ahrs10filter","object"]}]},{"title":"","inputs":[{"name":"gyroReadings","purpose":"Gyroscope readings in local sensor body coordinate system (rad\/s)","htmlid":"mw_fb4f5c80-b323-4303-b8d5-345c2a0451d8","value":["3-element row vector"]},{"name":"gyroCovariance","purpose":"Covariance of gyroscope measurement error ((rad\/s)^{2})","htmlid":"mw_9d9ab2f9-ba73-4658-a6b3-ddf67c687b6a","value":["scalar","3-element row vector","3-by-3 matrix"]}]}],"outputs":[{"name":"res","purpose":"Residual","htmlid":"mw_089e0e81-a7bd-4343-9ae8-0d88c8603e48","value":["1-by-3 vector of real values"]},{"name":"resCov","purpose":"Residual covariance","htmlid":"mw_096371c8-97fb-4f7a-b1ae-4dd0da0de56a","value":["3-by-3 matrix of real values"]}],"examples":[{"url":"insfilterasync.residualgyro.html#mw_268e6eaf-0630-4129-aa0f-4b46c8b4dbc4","open_command":"openExample('shared_positioning\/ObtainGyroscopeDataResidualFromInsfilterAsyncExample')","title":"Obtain Gyroscope Data Residual from insfilterAsync"}],"seealso":[{"url":"insfilterasync.html","name":"insfilterAsync"},{"url":"insfilter.html","name":"insfilter"}]},{"href":"ref\/insfilterasync.residualmag.html","refentity":[{"type":"function","name":"residualmag","fcntype":"instancemethod"},{"type":"method","name":"insfilterAsync.residualmag","fcntype":"instancemethod"}],"refpurpose":"Residuals and residual covariance from magnetometer measurements for insfilterAsync","introduced":"R2020a","description":"This MATLAB function computes the residual, residual, and the residual covariance, resCov, based on the magnetometer readings and the corresponding covariance.","syntaxgroup":[{"title":"","syntax":["[res,resCov] = residualmag(FUSE,magReadings,magReadingsCovariance)"]}],"inputgroup":[{"title":"","inputs":[{"name":"FUSE","purpose":"insfilterAsync","htmlid":"function_AsyncMARGGPSFuser_sep_residualmag_sep_mw_68036e09-0754-426d-84a7-0e0e8339837e","value":["ahrs10filter","object"]},{"name":"magReadings","purpose":"Magnetometer readings (µT)","htmlid":"function_AsyncMARGGPSFuser_sep_residualmag_sep_mw_e330909c-8b76-4267-8585-f30fa9b2290a","value":["3-element row vector"]},{"name":"magReadingsCovariance","purpose":"Magnetometer readings error covariance (µT^{2})","htmlid":"function_AsyncMARGGPSFuser_sep_residualmag_sep_mw_1856750d-b31a-4bb7-a1ff-c2f35a0b140a","value":["scalar","3-element row vector","3-by-3 matrix"]}]}],"outputs":[{"name":"res","purpose":"Residual","htmlid":"function_AsyncMARGGPSFuser_sep_residualmag_sep_mw_679ee21e-0883-446b-883e-4a12028ec138","value":["1-by-3 vector of real values"]},{"name":"resCov","purpose":"Residual covariance","htmlid":"function_AsyncMARGGPSFuser_sep_residualmag_sep_mw_162419d9-8f40-48e3-b6cc-43b42a57829d","value":["3-by-3 matrix of real values"]}],"examples":[{"url":"insfilterasync.residualmag.html#mw_8aa2578e-9801-44a6-958f-0227dc471e9f","open_command":"openExample('shared_positioning\/ObtainMagnetometerResidualFromInsfilterAsyncExample')","title":"Obtain Magnetometer Residual from insfilterAsync"}],"seealso":[{"url":"insfilterasync.html","name":"insfilterAsync"}]},{"href":"ref\/insfilterasync.tune.html","refentity":[{"type":"function","name":"tune","fcntype":"instancemethod"},{"type":"method","name":"insfilterAsync.tune","fcntype":"instancemethod"}],"refpurpose":"Tune insfilterAsync parameters to reduce estimation error","introduced":"R2020b","description":"This MATLAB function adjusts the properties of the insfilterAsync filter object, filter, and measurement noises to reduce the root-mean-squared (RMS) state estimation error between the fused sensor data and the ground truth.","syntaxgroup":[{"title":"","syntax":["tunedMeasureNoise = tune(filter,measureNoise,sensorData,groundTruth)","tunedMeasureNoise = tune(___,config)"]}],"inputgroup":[{"title":"","inputs":[{"name":"filter","purpose":"Filter object","htmlid":"mw_98ea7777-5fbd-414f-af0c-a723d2c1831e","value":["infilterAsync object"]},{"name":"measureNoise","purpose":"Measurement noise","htmlid":"mw_5a78e72e-fe7c-400a-97d5-716d81feaf05","value":["structure"]},{"name":"sensorData","purpose":"Sensor data","htmlid":"mw_3f34a37d-b013-418c-a17e-8f74868a8712","value":["duration"]},{"name":"groundTruth","purpose":"Ground truth data","htmlid":"mw_884fd405-0eac-42fc-baee-eaf4bf806f8e","value":["duration"]},{"name":"config","purpose":"Tuner configuration","htmlid":"mw_2d3dc5e8-c6f9-4389-a872-ea3e2f69d034","value":["tunerconfig object"]}]}],"outputs":[{"name":"tunedMeasureNoise","purpose":"Tuned measurement noise","htmlid":"mw_754844d7-1462-4ab9-ba21-628a8adc35d2","value":["structure"]}],"examples":[{"url":"insfilterasync.tune.html#mw_5f6ab5ff-ec6f-45ce-8843-48c372a9009f","open_command":"openExample('shared_positioning\/TuneInsfilterAsyncToOptimizePoseEstimateExample')","title":"Tune insfilterAsync to Optimize Pose Estimate"}],"seealso":[{"url":"tunerconfig.html","name":"tunerconfig"},{"url":"tunernoise.html","name":"tunernoise"}]},{"href":"ref\/insfiltererrorstate.copy.html","refentity":[{"type":"function","name":"copy","fcntype":"instancemethod"},{"type":"method","name":"insfilterErrorState.copy","fcntype":"instancemethod"}],"refpurpose":"Create copy of insfilterErrorState","introduced":"R2020b","description":"This MATLAB function returns a copy of the insfilterErrorState, filter, with the exactly same property values.","syntaxgroup":[{"title":"","syntax":["newFilter = copy(filter)"]}],"inputgroup":[{"title":"","inputs":[{"name":"filter","purpose":"Filter to be copied","htmlid":"mw_bf9efa91-3b43-433b-9585-a908484b5146","value":["insfilterErrorState"]}]}],"outputs":[{"name":"newFilter","purpose":"New copied filter","htmlid":"mw_f6f5963e-e50f-4a91-8420-b5f2786946dc","value":["insfilterErrorState"]}],"examples":[{"url":"insfiltererrorstate.copy.html#mw_d0f63e6f-9c3d-4b26-8c9a-b6a8959e7e33","open_command":"openExample('shared_positioning\/CreateCopyOfInsfilterErrorStateExample')","title":"Create Copy of insfilterErrorState"}],"seealso":[{"url":"insfiltererrorstate.html","name":"insfilterErrorState"}]},{"href":"ref\/insfiltererrorstate.html","refentity":[{"type":"object","name":"insfilterErrorState"},{"type":"function","name":"insfilterErrorState","fcntype":"constructor"}],"refpurpose":"Estimate pose from IMU, GPS, and monocular visual odometry (MVO) data","introduced":"R2019a","description":"The insfilterErrorState object implements sensor fusion of IMU, GPS, and monocular visual odometry (MVO) data to estimate pose in the NED (or ENU) reference frame.","syntaxgroup":[{"title":"","syntax":["filter = insfilterErrorState","filter = insfilterErrorState('ReferenceFrame',RF)","filter = insfilterErrorState(___,Name=Value)"]}],"inputgroup":[{"title":"","inputs":[{"name":"RF","purpose":"Local navigation coordinate system","htmlid":"mw_092bbed4-367d-4d55-a995-755ea504c07a_sep_mw_cc120d78-4a41-44b5-901a-e71ecd8fbcb4","value":["'NED'","'ENU'"],"defaultvalue":"'NED'"}]}],"classpropertygroup":[{"classproperty":[{"name":"IMUSampleRate","purpose":"Sample rate of IMU (Hz)","htmlid":"mw_95127457-7095-40e6-82db-ab1eeb54aa17","value":["100","positive scalar"],"defaultvalue":"100"},{"name":"ReferenceLocation","purpose":"Reference location (deg, deg, meters)","htmlid":"mw_273819d7-7324-4db6-9fdd-050f8f4c87c6","value":["[0 0 0]","3-element positive row vector"],"defaultvalue":"[0 0 0]"},{"name":"GyroscopeNoise","purpose":"Multiplicative process noise variance from gyroscope ((rad\/s)^{2})","htmlid":"mw_b779081d-0860-4679-8738-fca5f7b2eeca","value":["[1e-6 1e-6 1e-6]","scalar","3-element row vector"],"defaultvalue":"[1e-6 1e-6 1e-6]"},{"name":"GyroscopeBiasNoise","purpose":"Additive process noise variance from gyroscope bias ((rad\/s)^{2})","htmlid":"mw_9568e5f2-95d0-41e7-87a8-f9eb7af83427","value":["[1e-9 1e-9 1e-9]","scalar","3-element row vector"],"defaultvalue":"[1e-9 1e-9 1e-9]"},{"name":"AccelerometerNoise","purpose":"Multiplicative process noise variance from accelerometer ((m\/s^{2})^{2})","htmlid":"mw_06c00d33-2bd5-44eb-be4f-c403cc9067bb","value":["[1e-4 1e-4 1e-4]","scalar","3-element row vector"],"defaultvalue":"[1e-4 1e-4 1e-4]"},{"name":"AccelerometerBiasNoise","purpose":"Additive process noise variance from accelerometer bias ((m\/s^{2})^{2})","htmlid":"mw_8fd139e5-720c-4afd-8390-67928e48dc2a","value":["[1e-4 1e-4 1e-4]","scalar","3-element row vector"],"defaultvalue":"[1e-4 1e-4 1e-4]"},{"name":"State","purpose":"State vector of Kalman filter","htmlid":"mw_63983f01-2eac-4352-b85c-865e9862a038","value":["[1;zeros(15,1);1]","17-element column vector"],"defaultvalue":"[1;zeros(15,1);1]"},{"name":"StateCovariance","purpose":"State error covariance for Kalman filter","htmlid":"mw_1bb1bd56-818b-43e4-9384-1063dfc9d9b6","value":["ones(16)","16-by-16 matrix"],"defaultvalue":"ones(16)"}]}],"objectfunctions":[{"title":"","functions":[{"name":"predict","url":"errorstateimugpsfuser.predict.html","description":"Update states using accelerometer and gyroscope data for\n        insfilterErrorState"},{"name":"correct","url":"errorstateimugpsfuser.correct.html","description":"Correct states using direct state measurements for\n        insfilterErrorState"},{"name":"residual","url":"insfiltererrorstate.residual.html","description":"Residuals and residual covariances from direct state measurements for\n        insfilterErrorState"},{"name":"fusegps","url":"errorstateimugpsfuser.fusegps.html","description":"Correct states using GPS data for\n      insfilterErrorState"},{"name":"residualgps","url":"insfiltererrorstate.residualgps.html","description":"Residuals and residual covariance from GPS measurements for\n        insfilterErrorState"},{"name":"fusemvo","url":"errorstateimugpsfuser.fusemvo.html","description":"Correct states using monocular visual odometry for\n        insfilterErrorState"},{"name":"residualmvo","url":"insfiltererrorstate.residualmvo.html","description":"Residuals and residual covariance from monocular visual odometry measurements  for\n        insfilterErrorState"},{"name":"pose","url":"errorstateimugpsfuser.pose.html","description":"Current orientation and position estimate for\n      insfilterErrorState"},{"name":"reset","url":"errorstateimugpsfuser.reset.html","description":"Reset internal states for insfilterErrorState"},{"name":"stateinfo","url":"errorstateimugpsfuser.stateinfo.html","description":"Display state vector information for\n      insfilterErrorState"},{"name":"tune","url":"insfiltererrorstate.tune.html","description":"Tune insfilterErrorState parameters to reduce estimation\n      error"},{"name":"copy","url":"insfiltererrorstate.copy.html","description":"Create copy of insfilterErrorState"}]}],"examples":[{"url":"insfiltererrorstate.html#mw_12e9c7cd-336c-4d8f-b8fe-28ccbbdf262a","open_command":"openExample('shared_positioning\/EstimatePoseOfGroundVehicleExample')","title":"Estimate Pose of Ground Vehicle"}],"seealso":[{"url":"insfilterasync.html","name":"insfilterAsync"},{"url":"insfiltermarg.html","name":"insfilterMARG"},{"url":"insfilternonholonomic.html","name":"insfilterNonholonomic"}]},{"href":"ref\/insfiltererrorstate.residual.html","refentity":[{"type":"function","name":"residual","fcntype":"instancemethod"},{"type":"method","name":"insfilterErrorstate.residual","fcntype":"instancemethod"}],"refpurpose":"Residuals and residual covariances from direct state measurements for insfilterErrorState","introduced":"R2020a","description":"This MATLAB function computes the residual, res, and the residual covariance, resCov, based on the direct state measurement and measurement covariance.","syntaxgroup":[{"title":"","syntax":["[res, resCov]= residual(FUSE,idx,measurement,measurementCovariance)"]}],"inputgroup":[{"title":"","inputs":[{"name":"FUSE","purpose":"INS filter object","htmlid":"function_ErrorStateIMUGPSFuser_sep_mw_c75e4db5-e36e-45f5-9f9c-f746e95483bb","value":["insfilterErrorState"]},{"name":"idx","purpose":"State vector index of measurements to correct","htmlid":"mw_addb5302-2b60-4205-8e46-271a59db304b","value":["N-element vector of increasing integers in the range [1, 17]"]},{"name":"measurement","purpose":"Direct measurement of state","htmlid":"function_ErrorStateIMUGPSFuser_sep_mw_00af0ac1-8084-4fb8-8a39-b63f826eeb39","value":["N-element vector"]},{"name":"measurementCovariance","purpose":"Covariance of measurement","htmlid":"function_ErrorStateIMUGPSFuser_sep_mw_7bb90a10-29fa-4105-bfb5-c281804e2999","value":["N-by-N matrix"]}]}],"outputs":[{"name":"res","purpose":"Measurement residual","htmlid":"function_ErrorStateIMUGPSFuser_sep_mw_ca471bf6-01fa-415c-98f4-8d547984c8d4","value":["1-by-N vector of real values"]},{"name":"resCov","purpose":"Residual covariance","htmlid":"function_ErrorStateIMUGPSFuser_sep_mw_b0ca5a82-fd65-474f-b403-4623df71a24c","value":["N-by-N matrix of real values"]}],"examples":[{"url":"insfiltererrorstate.residual.html#mw_72013e54-9559-48c5-8c20-b8d742e224a6","open_command":"openExample('shared_positioning\/ObtainMeasurementResidualFromInsfilterErrorStateExample')","title":"Obtain Measurement Residual from insfilterErrorState"}],"seealso":[{"url":"insfiltererrorstate.html","name":"insfilterErrorState"}]},{"href":"ref\/insfiltererrorstate.residualgps.html","refentity":[{"type":"function","name":"residualgps","fcntype":"instancemethod"},{"type":"method","name":"insfilterErrorstate.residualgps","fcntype":"instancemethod"}],"refpurpose":"Residuals and residual covariance from GPS measurements for insfilterErrorState","introduced":"R2020a","description":"This MATLAB function computes the residual, res, and the residual covariance, resCov, based on the GPS position measurement and covariance.","syntaxgroup":[{"title":"","syntax":["[res,resCov] = residualgps(FUSE,position,positionCovariance)","[res,resCov] = residualgps(FUSE,position,positionCovariance,velocity,velocityCovariance)"]}],"inputgroup":[{"title":"","inputs":[{"name":"FUSE","purpose":"INS filter object","htmlid":"function_ErrorStateIMUGPSFuser_sep_residualgps_sep_mw_c75e4db5-e36e-45f5-9f9c-f746e95483bb","value":["insfilterErrorState"]},{"name":"position","purpose":"Position of GPS receiver (LLA)","htmlid":"function_ErrorStateIMUGPSFuser_sep_residualgps_sep_mw_e0d7ef1a-8916-4bc6-abdf-ca53e009b3e8","value":["3-element row vector"]},{"name":"positionCovariance","purpose":"Position measurement covariance of GPS receiver (m^{2})","htmlid":"function_ErrorStateIMUGPSFuser_sep_residualgps_sep_mw_075b0d62-6e30-41bd-8b2f-f6d338e65603","value":["3-by-3 matrix"]},{"name":"velocity","purpose":"Velocity of GPS receiver in local NED coordinate system (m\/s)","htmlid":"function_ErrorStateIMUGPSFuser_sep_residualgps_sep_mw_49e0ba69-a901-4970-97ca-7ae5dabdda8d","value":["3-element row vector"]},{"name":"velocityCovariance","purpose":"Velocity measurement covariance of GPS receiver (m^{2}\/s^{2})","htmlid":"function_ErrorStateIMUGPSFuser_sep_residualgps_sep_mw_dd8c372a-1eae-4811-82f8-7d96b696b765","value":["3-by-3 matrix"]}]}],"outputs":[{"name":"res","purpose":"Position and velocity residual","htmlid":"function_ErrorStateIMUGPSFuser_sep_residualgps_sep_mw_f39d090b-e14a-4049-b19c-1b5cfa146da0","value":["1-by-3 vector of real values","1-by-6 vector of real values"]},{"name":"resCov","purpose":"Residual covariance","htmlid":"function_ErrorStateIMUGPSFuser_sep_residualgps_sep_mw_464a0365-8759-4dd6-b309-a8667f910c24","value":["3-by-3 matrix of real values","6-by-6 matrix of real values"]}],"examples":[{"url":"insfiltererrorstate.residualgps.html#mw_24dec7d3-534c-433e-a9c2-e0ab2af7c6f8","open_command":"openExample('shared_positioning\/ObtainGPSDataResidualFromInsfilterErrorStateExample')","title":"Obtain GPS Data Residual from insfilterErrorState"}],"seealso":[{"url":"insfiltererrorstate.html","name":"insfilterErrorState"}]},{"href":"ref\/insfiltererrorstate.residualmvo.html","refentity":[{"type":"function","name":"residualmvo","fcntype":"instancemethod"},{"type":"method","name":"insfilterErrorstate.residualmvo","fcntype":"instancemethod"}],"refpurpose":"Residuals and residual covariance from monocular visual odometry measurements for insfilterErrorState","introduced":"R2020a","description":"This MATLAB function computes the residual information based on the monocular visual odometry measurements and covariance.","syntaxgroup":[{"title":"","syntax":["[pResidual,oResidual,resCov] = residualmvo(FUSE,position,positionCovariance,ornt,orntCovariance)"]}],"inputgroup":[{"title":"","inputs":[{"name":"FUSE","purpose":"INS filter object","htmlid":"function_ErrorStateIMUGPSFuser_sep_residualmvo_sep_mw_c75e4db5-e36e-45f5-9f9c-f746e95483bb","value":["insfilterErrorState"]},{"name":"position","purpose":"Position of camera in local NED coordinate system (m)","htmlid":"mw_676b28dc-ad6a-4787-8d67-f3d590565fba","value":["3-element row vector"]},{"name":"positionCovariance","purpose":"Position measurement covariance of MVO (m^{2})","htmlid":"mw_59311363-8fc6-407d-945b-2955dab7ca0e","value":["scalar","3-element vector","3-by-3 matrix"]},{"name":"ornt","purpose":"Orientation of camera with respect to local NED coordinate system","htmlid":"mw_0e703220-8d64-4211-a83d-2a540c29aeb7","value":["scalar quaternion","rotation matrix"]},{"name":"orntCovariance","purpose":"Orientation measurement covariance of monocular visual odometry (rad^{2})","htmlid":"mw_71a77ec4-2979-4e15-b58a-5cbf6608cc65","value":["scalar","3-element vector","3-by-3 matrix"]}]}],"outputs":[{"name":"pResidual","purpose":"Position residual","htmlid":"mw_2ea6fe42-b991-4119-a28b-6b977be77091","value":["1-by-3 vector of real values"]},{"name":"oResidual","purpose":"Rotation vector residual","htmlid":"mw_4cf8ec3d-45f0-45b0-9a63-e48e8971081d","value":["1-by-3 vector of real values"]},{"name":"resCov","purpose":"Residual covariance","htmlid":"mw_ee368b8b-556e-4530-9e4d-c9c44a4a3a5d","value":["6-by-6 matrix of real values"]}],"examples":[{"url":"insfiltererrorstate.residualmvo.html#mw_8de55609-a969-475a-b523-507b50021934","open_command":"openExample('shared_positioning\/ObtainMonocularVisualOdometryResidualFromInsfilterExample')","title":"Obtain Monocular Visual Odometry Residual from insfilterErrorState"}],"seealso":[{"url":"insfiltererrorstate.html","name":"insfilterErrorState"},{"url":"insfilter.html","name":"insfilter"}]},{"href":"ref\/insfiltererrorstate.tune.html","refentity":[{"type":"function","name":"tune","fcntype":"instancemethod"},{"type":"method","name":"insfilterErrorState.tune","fcntype":"instancemethod"}],"refpurpose":"Tune insfilterErrorState parameters to reduce estimation error","introduced":"R2021a","description":"This MATLAB function adjusts the properties of the insfilterErrorState filter object, filter, and measurement noises to reduce the root-mean-squared (RMS) state estimation error between the fused sensor data and the ground truth.","syntaxgroup":[{"title":"","syntax":["tunedMeasureNoise = tune(filter,measureNoise,sensorData,groundTruth)","tunedMeasureNoise = tune(___,config)"]}],"inputgroup":[{"title":"","inputs":[{"name":"filter","purpose":"Filter object","htmlid":"mw_010baaa3-937d-4f24-863a-49d97cfd7241","value":["insfilterErrorState object"]},{"name":"measureNoise","purpose":"Measurement noise","htmlid":"mw_65179cac-856c-474a-8b33-979ec5f96e51","value":["structure"]},{"name":"sensorData","purpose":"Sensor data","htmlid":"mw_55d557f2-0f4a-4e4d-984c-03e0967707e7","value":["table"]},{"name":"groundTruth","purpose":"Ground truth data","htmlid":"mw_c37a3a52-6fc0-40a6-a30a-a92c1d611a5d","value":["table"]},{"name":"config","purpose":"Tuner configuration","htmlid":"mw_44a7be39-be5c-44ad-b825-5c36b5cfa72e","value":["tunerconfig object"]}]}],"outputs":[{"name":"tunedMeasureNoise","purpose":"Tuned measurement noise","htmlid":"mw_2714dbca-611e-47ac-9fb9-8e72a3ee1e90","value":["structure"]}],"examples":[{"url":"insfiltererrorstate.tune.html#mw_02290b33-b9a5-4609-8545-fa06982c1d43","open_command":"openExample('shared_positioning\/TuneInsfilterErrorStateToOptimizePoseEstimateExample')","title":"Tune insfilterErrorState to Optimize Pose Estimate"}],"seealso":[{"url":"tunerconfig.html","name":"tunerconfig"},{"url":"tunernoise.html","name":"tunernoise"}]},{"href":"ref\/insfiltermarg.html","refentity":[{"type":"object","name":"insfilterMARG"},{"type":"function","name":"insfilterMARG","fcntype":"constructor"}],"refpurpose":"Estimate pose from MARG and GPS data","introduced":"R2018b","description":"The insfilterMARG object implements sensor fusion of MARG and GPS data to estimate pose in the NED (or ENU) reference frame.","syntaxgroup":[{"title":"","syntax":["filter = insfilterMARG","filter = insfilterMARG('ReferenceFrame',RF)","filter = insfilterMARG(___,Name=Value)"]}],"inputgroup":[{"title":"","inputs":[{"name":"RF","purpose":"Local navigation coordinate system","htmlid":"mw_b0253b5e-fbc9-4095-a6ca-aacc703acc33_sep_mw_cc120d78-4a41-44b5-901a-e71ecd8fbcb4","value":["'NED'","'ENU'"],"defaultvalue":"'NED'"}]}],"classpropertygroup":[{"classproperty":[{"name":"IMUSampleRate","purpose":"Sample rate of the IMU (Hz)","htmlid":"mw_12fbe4e1-aa4f-46e3-8a6f-f1b35750e740","value":["100","positive scalar"],"defaultvalue":"100"},{"name":"ReferenceLocation","purpose":"Reference location (deg, deg, meters)","htmlid":"mw_6dc999a5-f4e0-498e-9860-5f92bc192fcf","value":["[0 0 0]","3-element positive row vector"],"defaultvalue":"[0 0 0]"},{"name":"GyroscopeNoise","purpose":"Multiplicative process noise variance from gyroscope (rad\/s)^{2}","htmlid":"mw_44a9c71d-8bc0-45c6-802d-ef6add8f71e1","value":["1e-9","scalar","3-element row vector"],"defaultvalue":"1e-9"},{"name":"GyroscopeBiasNoise","purpose":"Multiplicative process noise variance from gyroscope bias (rad\/s)^{2}","htmlid":"mw_2ba8f34f-2299-40fd-bb70-4281386eea0e","value":["1e-10","positive scalar","3-element row vector"],"defaultvalue":"1e-10"},{"name":"AccelerometerNoise","purpose":"Multiplicative process noise variance from accelerometer (m\/s^{2})^{2}","htmlid":"mw_62e89f66-ff13-4c87-8560-daa7d9d82f11","value":["1e-4","scalar","3-element row vector"],"defaultvalue":"1e-4"},{"name":"AccelerometerBiasNoise","purpose":"Multiplicative process noise variance from accelerometer bias (m\/s^{2})^{2}","htmlid":"mw_12809879-30dc-4f2f-809b-6ce9f4e704a7","value":["1e-4","positive scalar","3-element row vector"],"defaultvalue":"1e-4"},{"name":"GeomagneticVectorNoise","purpose":"Additive process noise for geomagnetic vector (µT^{2})","htmlid":"mw_cc8bc5d6-f210-447a-a827-8f4561170508","value":["1e-6","positive scalar","3-element row vector"],"defaultvalue":"1e-6"},{"name":"MagnetometerBiasNoise","purpose":"Additive process noise for magnetometer bias (µT^{2})","htmlid":"mw_f7e89675-270b-4f76-8ef6-19dc75fbad9c","value":["0.1","positive scalar","3-element row vector"],"defaultvalue":"0.1"},{"name":"State","purpose":"State vector of extended Kalman filter","htmlid":"mw_d49feb5c-6ea0-4e5c-9869-eeeaa21fb31f","value":["22-element column vector"]},{"name":"StateCovariance","purpose":"State error covariance for extended Kalman filter","htmlid":"mw_0e870aae-ecff-4cec-930f-233e7a2dd14f","value":["eye(22)*1e-6","22-by-22 matrix"],"defaultvalue":"eye(22)*1e-6"}]}],"objectfunctions":[{"title":"","functions":[{"name":"correct","url":"marggpsfuser.correct.html","description":"Correct states using direct state measurements for insfilterMARG\n    "},{"name":"residual","url":"insfiltermarg.residual.html","description":"Residuals and residual covariances from direct state measurements for\n        insfilterMARG"},{"name":"fusegps","url":"marggpsfuser.fusegps.html","description":"Correct states using GPS data for insfilterMARG"},{"name":"residualgps","url":"insfiltermarg.residualgps.html","description":"Residuals and residual covariance from GPS measurements for\n        insfilterMARG"},{"name":"fusemag","url":"marggpsfuser.fusemag.html","description":"Correct states using magnetometer data for\n      insfilterMARG"},{"name":"residualmag","url":"insfiltermarg.residualmag.html","description":"Residuals and residual covariance from magnetometer measurements for\n        insfilterMARG"},{"name":"pose","url":"marggpsfuser.pose.html","description":"Current orientation and position estimate for\n      insfilterMARG"},{"name":"predict","url":"marggpsfuser.predict.html","description":"Update states using accelerometer and gyroscope data for\n        insfilterMARG"},{"name":"reset","url":"marggpsfuser.reset.html","description":"Reset internal states for insfilterMARG"},{"name":"stateinfo","url":"marggpsfuser.stateinfo.html","description":"Display state vector information for insfilterMARG"},{"name":"tune","url":"insfiltermarg.tune.html","description":"Tune insfilterMARG parameters to reduce estimation\n      error"},{"name":"copy","url":"insfitlermarg.copy.html","description":"Create copy of insfitlerMARG"}]}],"examples":[{"url":"insfiltermarg.html#mw_68dda488-a78e-44cc-9e3c-6925842f12ff","open_command":"openExample('shared_positioning\/EstimatePoseOfUAVMARGEExample')","title":"Estimate Pose of UAV"}],"seealso":[{"url":"insfilternonholonomic.html","name":"insfilterNonholonomic"},{"url":"insfiltererrorstate.html","name":"insfilterErrorState"},{"url":"insfilterasync.html","name":"insfilterAsync"}]},{"href":"ref\/insfiltermarg.residual.html","refentity":[{"type":"function","name":"residual","fcntype":"instancemethod"},{"type":"method","name":"insfilterMARG.residual","fcntype":"instancemethod"}],"refpurpose":"Residuals and residual covariances from direct state measurements for insfilterMARG","introduced":"R2020a","description":"This MATLAB function computes the residual, res, and the residual covariance, resCov, based on the direct state measurement and measurement covariance.","syntaxgroup":[{"title":"","syntax":["[res, resCov]= residual(FUSE,idx,measurement,measurementCovariance)"]}],"inputgroup":[{"title":"","inputs":[{"name":"FUSE","purpose":"insfilterMARG object","htmlid":"function_MARGGPSFuser_sep_residual_sep_mw_398a59f9-e4d9-49db-bd6e-2cbefeb25b0c","value":["object"]},{"name":"idx","purpose":"State vector index of measurement","htmlid":"mw_5e90c66f-eb12-42c0-8ef5-32eb374feac0","value":["N-element vector of increasing integers in the range [1,22]"]},{"name":"measurement","purpose":"Direct measurement of state","htmlid":"function_MARGGPSFuser_sep_residual_sep_mw_00af0ac1-8084-4fb8-8a39-b63f826eeb39","value":["N-element vector"]},{"name":"measurementCovariance","purpose":"Covariance of measurement","htmlid":"function_MARGGPSFuser_sep_residual_sep_mw_7bb90a10-29fa-4105-bfb5-c281804e2999","value":["N-by-N matrix"]}]}],"outputs":[{"name":"res","purpose":"Measurement residual","htmlid":"function_MARGGPSFuser_sep_residual_sep_mw_ca471bf6-01fa-415c-98f4-8d547984c8d4","value":["1-by-N vector of real values"]},{"name":"resCov","purpose":"Residual covariance","htmlid":"function_MARGGPSFuser_sep_residual_sep_mw_b0ca5a82-fd65-474f-b403-4623df71a24c","value":["N-by-N matrix of real values"]}],"examples":[{"url":"insfiltermarg.residual.html#mw_3a101fd7-5657-4158-a69b-97d6191dac00","open_command":"openExample('shared_positioning\/ObtainMeasurementResidualFromInsfilterMARGExample')","title":"Obtain Measurement Residual from insfilterMARG"}],"seealso":[{"url":"insfiltermarg.html","name":"insfilterMARG"}]},{"href":"ref\/insfiltermarg.residualgps.html","refentity":[{"type":"function","name":"residualgps","fcntype":"instancemethod"},{"type":"method","name":"insfilterMARG.residualgps","fcntype":"instancemethod"}],"refpurpose":"Residuals and residual covariance from GPS measurements for insfilterMARG","introduced":"R2020a","description":"This MATLAB function computes the residual, res, and the residual covariance, resCov, based on the GPS position measurement and covariance.","syntaxgroup":[{"title":"","syntax":["[res,resCov] = residualgps(FUSE,position,positionCovariance)","[res,resCov] = residualgps(FUSE,position,positionCovariance,velocity,velocityCovariance)"]}],"inputgroup":[{"title":"","inputs":[{"name":"FUSE","purpose":"insfilterMARG object","htmlid":"function_MARGGPSFuser_sep_residualgps_sep_mw_398a59f9-e4d9-49db-bd6e-2cbefeb25b0c","value":["object"]},{"name":"position","purpose":"Position of GPS receiver (LLA)","htmlid":"function_MARGGPSFuser_sep_residualgps_sep_mw_e0d7ef1a-8916-4bc6-abdf-ca53e009b3e8","value":["3-element row vector"]},{"name":"positionCovariance","purpose":"Position measurement covariance of GPS receiver (m^{2})","htmlid":"function_MARGGPSFuser_sep_residualgps_sep_mw_075b0d62-6e30-41bd-8b2f-f6d338e65603","value":["3-by-3 matrix"]},{"name":"velocity","purpose":"Velocity of GPS receiver in local NED coordinate system (m\/s)","htmlid":"function_MARGGPSFuser_sep_residualgps_sep_mw_49e0ba69-a901-4970-97ca-7ae5dabdda8d","value":["3-element row vector"]},{"name":"velocityCovariance","purpose":"Velocity measurement covariance of GPS receiver (m^{2}\/s^{2})","htmlid":"function_MARGGPSFuser_sep_residualgps_sep_mw_dd8c372a-1eae-4811-82f8-7d96b696b765","value":["3-by-3 matrix"]}]}],"outputs":[{"name":"res","purpose":"Position and velocity residual","htmlid":"function_MARGGPSFuser_sep_residualgps_sep_mw_f39d090b-e14a-4049-b19c-1b5cfa146da0","value":["1-by-3 vector of real values","1-by-6 vector of real values"]},{"name":"resCov","purpose":"Residual covariance","htmlid":"function_MARGGPSFuser_sep_residualgps_sep_mw_464a0365-8759-4dd6-b309-a8667f910c24","value":["3-by-3 matrix of real values","6-by-6 matrix of real values"]}],"examples":[{"url":"insfiltermarg.residualgps.html#mw_12fb40ea-414c-4bca-b70d-1347cdbb2d89","open_command":"openExample('shared_positioning\/ObtainAltimeterDataResidualFromInsfilterMARGExample')","title":"Obtain GPS Data Residual from insfilterMARG"}],"seealso":[{"url":"insfilter.html","name":"insfilter"},{"url":"insfiltermarg.html","name":"insfilterMARG"}]},{"href":"ref\/insfiltermarg.residualmag.html","refentity":[{"type":"function","name":"residualmag","fcntype":"instancemethod"},{"type":"method","name":"insfilterMARG.residualmag","fcntype":"instancemethod"}],"refpurpose":"Residuals and residual covariance from magnetometer measurements for insfilterMARG","introduced":"R2020a","description":"This MATLAB function computes the residual, residual, and the residual covariance, resCov, based on the magnetometer readings and the corresponding covariance.","syntaxgroup":[{"title":"","syntax":["[res,resCov] = residualmag(FUSE,magReadings,magReadingsCovariance)"]}],"inputgroup":[{"title":"","inputs":[{"name":"FUSE","purpose":"insfilterMARG object","htmlid":"function_MARGGPSFuser_sep_residualmag_sep_mw_398a59f9-e4d9-49db-bd6e-2cbefeb25b0c","value":["object"]},{"name":"magReadings","purpose":"Magnetometer readings (µT)","htmlid":"function_MARGGPSFuser_sep_residualmag_sep_mw_e330909c-8b76-4267-8585-f30fa9b2290a","value":["3-element row vector"]},{"name":"magReadingsCovariance","purpose":"Magnetometer readings error covariance (µT^{2})","htmlid":"function_MARGGPSFuser_sep_residualmag_sep_mw_1856750d-b31a-4bb7-a1ff-c2f35a0b140a","value":["scalar","3-element row vector","3-by-3 matrix"]}]}],"outputs":[{"name":"res","purpose":"Residual","htmlid":"function_MARGGPSFuser_sep_residualmag_sep_mw_679ee21e-0883-446b-883e-4a12028ec138","value":["1-by-3 vector of real values"]},{"name":"resCov","purpose":"Residual covariance","htmlid":"function_MARGGPSFuser_sep_residualmag_sep_mw_162419d9-8f40-48e3-b6cc-43b42a57829d","value":["3-by-3 matrix of real values"]}],"examples":[{"url":"insfiltermarg.residualmag.html#mw_12e5e2a1-2b8b-4bec-8b32-56af8ff71020","open_command":"openExample('shared_positioning\/ObtainMagnetometerResidualFromInsfilterMARGExample')","title":"Obtain Magnetometer Residual from insfilterMARG"}],"seealso":[{"url":"insfiltermarg.html","name":"insfilterMARG"},{"url":"insfilter.html","name":"insfilter"}]},{"href":"ref\/insfiltermarg.tune.html","refentity":[{"type":"function","name":"tune","fcntype":"instancemethod"},{"type":"method","name":"insfilterMARG.tune","fcntype":"instancemethod"}],"refpurpose":"Tune insfilterMARG parameters to reduce estimation error","introduced":"R2021a","description":"This MATLAB function adjusts the properties of the insfilterMARG filter object, filter, and measurement noises to reduce the root-mean-squared (RMS) state estimation error between the fused sensor data and the ground truth.","syntaxgroup":[{"title":"","syntax":["tunedMeasureNoise = tune(filter,measureNoise,sensorData,groundTruth)","tunedMeasureNoise = tune(___,config)"]}],"inputgroup":[{"title":"","inputs":[{"name":"filter","purpose":"Filter object","htmlid":"mw_471d7b14-0e55-4225-8829-51027939d933","value":["infilterMARG object"]},{"name":"measureNoise","purpose":"Measurement noise","htmlid":"mw_07e83ec6-4d9f-40d2-9f30-1b4c7a0426df","value":["structure"]},{"name":"sensorData","purpose":"Sensor data","htmlid":"mw_67d8c7d8-631e-433d-b299-709e9b3ab97c","value":["table"]},{"name":"groundTruth","purpose":"Ground truth data","htmlid":"mw_0e258e10-f0e7-4309-acd9-a6ebcff667a8","value":["table"]},{"name":"config","purpose":"Tuner configuration","htmlid":"mw_d0c2fbc2-5ee2-44c4-80c4-aa85346228db","value":["tunerconfig object"]}]}],"outputs":[{"name":"tunedMeasureNoise","purpose":"Tuned measurement noise","htmlid":"mw_fc35f003-e438-456e-9399-3fca578c0f75","value":["structure"]}],"examples":[{"url":"insfiltermarg.tune.html#mw_214d0828-a001-4e62-85bb-acba9a324f2b","open_command":"openExample('shared_positioning\/TuneInsfilterMARGToOptimizePoseEstimateExample')","title":"Tune insfilterMARG to Optimize Pose Estimate"}],"seealso":[{"url":"tunerconfig.html","name":"tunerconfig"},{"url":"tunernoise.html","name":"tunernoise"}]},{"href":"ref\/insfilternonholonomic.html","refentity":[{"type":"object","name":"insfilterNonholonomic"},{"type":"function","name":"insfilterNonholonomic","fcntype":"constructor"}],"refpurpose":"Estimate pose with nonholonomic constraints","introduced":"R2018b","description":"The insfilterNonholonomic object implements sensor fusion of inertial measurement unit (IMU) and GPS data to estimate pose in the NED (or ENU) reference frame.","syntaxgroup":[{"title":"","syntax":["filter = insfilterNonholonomic","filter = insfilterNonholonomic('ReferenceFrame',RF)","filter = insfilterNonholonomic(___,Name=Value)"]}],"inputgroup":[{"title":"","inputs":[{"name":"RF","purpose":"Local navigation coordinate system","htmlid":"mw_54c55935-453b-4dbb-bf27-31d6cc2b29fa_sep_mw_cc120d78-4a41-44b5-901a-e71ecd8fbcb4","value":["'NED'","'ENU'"],"defaultvalue":"'NED'"}]}],"classpropertygroup":[{"classproperty":[{"name":"IMUSampleRate","purpose":"Sample rate of the IMU (Hz)","htmlid":"mw_13a2f22a-aff4-4394-a679-b21c6c40d3f0","value":["100","positive scalar"],"defaultvalue":"100"},{"name":"ReferenceLocation","purpose":"Reference location (deg, deg, meters)","htmlid":"mw_b486dfd3-d968-48d3-9411-93a375339ada","value":["[0 0 0]","3-element positive row vector"],"defaultvalue":"[0 0 0]"},{"name":"DecimationFactor","purpose":"Decimation factor for kinematic constraint correction","htmlid":"mw_65afaf98-38e1-444f-be37-77dd5cde90e0","value":["2","positive integer scalar"],"defaultvalue":"2"},{"name":"GyroscopeNoise","purpose":"Multiplicative process noise variance from gyroscope (rad\/s)^{2}","htmlid":"mw_d3184d29-1822-48fb-bd62-520e4d3dc565","value":["[4.8e-6 4.8e-6 4.8e-6]","scalar","3-element row vector"],"defaultvalue":"[4.8e-6 4.8e-6 4.8e-6]"},{"name":"GyroscopeBiasNoise","purpose":"Multiplicative process noise variance from gyroscope bias (rad\/s)^{2}","htmlid":"mw_614ba6ce-9e6c-4bdd-9b12-0bc439776664","value":["[4e-14 4e-14 4e-14]","scalar","3-element row vector"],"defaultvalue":"[4e-14 4e-14 4e-14]"},{"name":"GyroscopeBiasDecayFactor","purpose":"Decay factor for gyroscope bias","htmlid":"mw_833675e9-92d9-4989-8f77-e9b4eb2a599a","value":["0.999","scalar in the range [0,1]"],"defaultvalue":"0.999"},{"name":"AccelerometerNoise","purpose":"Multiplicative process noise variance from accelerometer (m\/s^{2})^{2}","htmlid":"mw_18b41464-ac4d-498c-b325-b0f098a84d42","value":["[4.8e-2 4.8e-2 4.8e-2]","scalar","3-element row vector"],"defaultvalue":"[4.8e-2 4.8e-2 4.8e-2]"},{"name":"AccelerometerBiasNoise","purpose":"Multiplicative process noise variance from accelerometer bias (m\/s^{2})^{2}","htmlid":"mw_fda22a39-97b3-4fa7-97ed-8eb2ded1d9c9","value":["[4e-14 4e-14 4e-14]","positive scalar","3-element row vector"],"defaultvalue":"[4e-14 4e-14 4e-14]"},{"name":"AccelerometerBiasDecayFactor","purpose":"Decay factor for accelerometer bias","htmlid":"mw_4830ae11-0ba8-4641-9a63-8b4d6d466dec","value":["0.9999","scalar in the range [0,1]"],"defaultvalue":"0.9999"},{"name":"State","purpose":"State vector of extended Kalman filter","htmlid":"mw_259f3f90-abe0-4fa9-b4da-e06adb09b3f2","value":["[1;zeros(15,1)]","16-element column vector"]},{"name":"StateCovariance","purpose":"State error covariance for extended Kalman filter","htmlid":"mw_3f63ab72-a331-43c3-90cf-7a05a77d44f7","value":["eye(16)","16-by-16 matrix"],"defaultvalue":"eye(16)"},{"name":"ZeroVelocityConstraintNoise","purpose":"Velocity constraints noise (m\/s)^{2}","htmlid":"mw_1a4d2d2e-cabb-48bf-b079-b5883e88eac6","value":["1e-2","nonnegative scalar"],"defaultvalue":"1e-2"}]}],"objectfunctions":[{"title":"","functions":[{"name":"correct","url":"nhconstrainedimugpsfuser.correct.html","description":"Correct states using direct state measurements for\n        insfilterNonholonomic"},{"name":"residual","url":"insfilternonholonomic.residual.html","description":"Residuals and residual covariances from direct state measurements for\n        insfilterNonholonomic"},{"name":"fusegps","url":"nhconstrainedimugpsfuser.fusegps.html","description":"Correct states using GPS data for\n      insfilterNonholonomic"},{"name":"residualgps","url":"insfilternonholonomic.residualgps.html","description":"Residuals and residual covariance from GPS measurements for\n        insfilterNonholonomic"},{"name":"pose","url":"nhconstrainedimugpsfuser.pose.html","description":"Current orientation and position estimate for\n        insfilterNonholonomic"},{"name":"predict","url":"nhconstrainedimugpsfuser.predict.html","description":"Update states using accelerometer and gyroscope data for\n        insfilterNonholonomic"},{"name":"reset","url":"nhconstrainedimugpsfuser.reset.html","description":"Reset internal states for insfilterNonholonomic"},{"name":"stateinfo","url":"nhconstrainedimugpsfuser.stateinfo.html","description":"Display state vector information for\n      insfilterNonholonomic"},{"name":"tune","url":"insfilternonholonomic.tune.html","description":"Tune insfilterNonholonomic parameters to reduce estimation\n      error"},{"name":"copy","url":"insfitlernonholonomic.copy.html","description":"Create copy of insfitlerNonholonomic"}]}],"examples":[{"url":"insfilternonholonomic.html#mw_9d3fdce0-ebf8-448b-93f7-7b3ea87b1256","open_command":"openExample('shared_positioning\/EstimatePoseOfGroundVehicleNHExample')","title":"Estimate Pose of Ground Vehicle"}],"seealso":[{"url":"insfiltermarg.html","name":"insfilterMARG"},{"url":"insfiltererrorstate.html","name":"insfilterErrorState"},{"url":"insfilterasync.html","name":"insfilterAsync"}]},{"href":"ref\/insfilternonholonomic.residual.html","refentity":[{"type":"function","name":"residual","fcntype":"instancemethod"},{"type":"method","name":"insfilterNonholonomic.residual","fcntype":"instancemethod"}],"refpurpose":"Residuals and residual covariances from direct state measurements for insfilterNonholonomic","introduced":"R2020a","description":"This MATLAB function computes the residual, res, and the residual covariance, resCov, based on the direct state measurement and measurement covariance.","syntaxgroup":[{"title":"","syntax":["[res, resCov]= residual(FUSE,idx,measurement,measurementCovariance)"]}],"inputgroup":[{"title":"","inputs":[{"name":"FUSE","purpose":"insfilterNonholonomic object","htmlid":"function_NHConstrainedIMUGPSFuser_sep_residual_sep_mw_7f11decf-f179-4037-a90e-d776f36f948c","value":["object"]},{"name":"idx","purpose":"State vector Index of measurement to correct","htmlid":"mw_f9aa1068-459c-4ea6-8970-4935e219867e","value":["N-element vector of increasing integers in the range [1,16]"]},{"name":"measurement","purpose":"Direct measurement of state","htmlid":"function_NHConstrainedIMUGPSFuser_sep_residual_sep_mw_00af0ac1-8084-4fb8-8a39-b63f826eeb39","value":["N-element vector"]},{"name":"measurementCovariance","purpose":"Covariance of measurement","htmlid":"function_NHConstrainedIMUGPSFuser_sep_residual_sep_mw_7bb90a10-29fa-4105-bfb5-c281804e2999","value":["N-by-N matrix"]}]}],"outputs":[{"name":"res","purpose":"Measurement residual","htmlid":"function_NHConstrainedIMUGPSFuser_sep_residual_sep_mw_ca471bf6-01fa-415c-98f4-8d547984c8d4","value":["1-by-N vector of real values"]},{"name":"resCov","purpose":"Residual covariance","htmlid":"function_NHConstrainedIMUGPSFuser_sep_residual_sep_mw_b0ca5a82-fd65-474f-b403-4623df71a24c","value":["N-by-N matrix of real values"]}],"examples":[{"url":"insfilternonholonomic.residual.html#mw_3ee25009-f1b2-4b39-89a4-8d849ea13ba5","open_command":"openExample('shared_positioning\/ObtainMeasurementResidualFromInsfilterNonholonomicExample')","title":"Obtain Measurement Residual from insfilterNonholonomic"}],"seealso":[{"url":"insfilter.html","name":"insfilter"},{"url":"insfilternonholonomic.html","name":"insfilterNonholonomic"}]},{"href":"ref\/insfilternonholonomic.residualgps.html","refentity":[{"type":"function","name":"residualgps","fcntype":"instancemethod"},{"type":"method","name":"insfilterNonholonomic.residualgps","fcntype":"instancemethod"}],"refpurpose":"Residuals and residual covariance from GPS measurements for insfilterNonholonomic","introduced":"R2020a","description":"This MATLAB function computes the residual, res, and the residual covariance, resCov, based on the GPS position measurement and covariance.","syntaxgroup":[{"title":"","syntax":["[res,resCov] = residualgps(FUSE,position,positionCovariance)","[res,resCov] = residualgps(FUSE,position,positionCovariance,velocity,velocityCovariance)"]}],"inputgroup":[{"title":"","inputs":[{"name":"FUSE","purpose":"insfilterNonholonomic object","htmlid":"function_NHConstrainedIMUGPSFuser_sep_residualgps_sep_mw_7f11decf-f179-4037-a90e-d776f36f948c","value":["object"]},{"name":"position","purpose":"Position of GPS receiver (LLA)","htmlid":"function_NHConstrainedIMUGPSFuser_sep_residualgps_sep_mw_e0d7ef1a-8916-4bc6-abdf-ca53e009b3e8","value":["3-element row vector"]},{"name":"positionCovariance","purpose":"Position measurement covariance of GPS receiver (m^{2})","htmlid":"function_NHConstrainedIMUGPSFuser_sep_residualgps_sep_mw_075b0d62-6e30-41bd-8b2f-f6d338e65603","value":["3-by-3 matrix"]},{"name":"velocity","purpose":"Velocity of GPS receiver in local NED coordinate system (m\/s)","htmlid":"function_NHConstrainedIMUGPSFuser_sep_residualgps_sep_mw_49e0ba69-a901-4970-97ca-7ae5dabdda8d","value":["3-element row vector"]},{"name":"velocityCovariance","purpose":"Velocity measurement covariance of GPS receiver (m^{2}\/s^{2})","htmlid":"function_NHConstrainedIMUGPSFuser_sep_residualgps_sep_mw_dd8c372a-1eae-4811-82f8-7d96b696b765","value":["3-by-3 matrix"]}]}],"outputs":[{"name":"res","purpose":"Position and course residual","htmlid":"mw_58c43bfb-d456-4120-8daf-4788ecd4ed60","value":["1-by-3 vector of real values","1-by-4 vector of real values"]},{"name":"resCov","purpose":"Residual covariance","htmlid":"mw_b54f95f4-d82b-4ce5-aa36-dc17548794b9","value":["3-by-3 matrix of real values","4-by-4 matrix of real values"]}],"examples":[{"url":"insfilternonholonomic.residualgps.html#mw_af0d77a3-5c48-47d8-b527-6123f6dc7a70","open_command":"openExample('shared_positioning\/ObtainGPSDataResidualFromInsfilterNonholonomicExample')","title":"Obtain GPS Data Residual from insfilterNonholonomic"}],"seealso":[{"url":"insfilternonholonomic.html","name":"insfilterNonholonomic"}]},{"href":"ref\/insfilternonholonomic.tune.html","refentity":[{"type":"function","name":"tune","fcntype":"instancemethod"},{"type":"method","name":"insfilterNonholonomic.tune","fcntype":"instancemethod"}],"refpurpose":"Tune insfilterNonholonomic parameters to reduce estimation error","introduced":"R2020b","description":"This MATLAB function adjusts the properties of the insfilterNonholonomic filter object, filter, and measurement noises to reduce the root-mean-squared (RMS) state estimation error between the fused sensor data and the ground truth.","syntaxgroup":[{"title":"","syntax":["tunedMeasureNoise = tune(filter,measureNoise,sensorData,groundTruth)","tunedMeasureNoise = tune(___,config)"]}],"inputgroup":[{"title":"","inputs":[{"name":"filter","purpose":"Filter object","htmlid":"mw_b4723139-b5af-4231-82f5-56ce17e5dd7a","value":["infilterAsync object"]},{"name":"measureNoise","purpose":"Measurement noise","htmlid":"mw_caf23d7b-faa7-42c0-9c15-17e102f6d223","value":["structure"]},{"name":"sensorData","purpose":"Sensor data","htmlid":"mw_3cc5aaed-c7eb-4fd8-b412-b296c350d5d1","value":["table"]},{"name":"groundTruth","purpose":"Ground truth data","htmlid":"mw_75445af5-203d-49ab-8344-d3e0c3dcacae","value":["table"]},{"name":"config","purpose":"Tuner configuration","htmlid":"mw_ec2da9bd-6928-4281-8ef8-c13eb80c4575","value":["tunerconfig object"]}]}],"outputs":[{"name":"tunedMeasureNoise","purpose":"Tuned measurement noise","htmlid":"mw_6300b8f4-d8ce-47fc-b917-ce81e90945b1","value":["structure"]}],"examples":[{"url":"insfilternonholonomic.tune.html#mw_36d71430-e22e-402a-a8a6-c2d02aa6a200","open_command":"openExample('shared_positioning\/TuneInsfilterNonholonomicToOptimizePoseEstimateExample')","title":"Tune insfilterNonholonomic to Optimize Pose Estimate"}],"seealso":[{"url":"tunerconfig.html","name":"tunerconfig"},{"url":"tunernoise.html","name":"tunernoise"},{"url":"insfilternonholonomic.html","name":"insfilterNonholonomic"}]},{"href":"ref\/insfitlerasync.copy.html","refentity":[{"type":"function","name":"copy","fcntype":"instancemethod"},{"type":"method","name":"insfitlerAsync.copy","fcntype":"instancemethod"}],"refpurpose":"Create copy of insfilterAsync","introduced":"R2020b","description":"This MATLAB function returns a copy of the insfilterAsync, filter, that has exactly the same property values.","syntaxgroup":[{"title":"","syntax":["newFilter = copy(filter)"]}],"inputgroup":[{"title":"","inputs":[{"name":"filter","purpose":"Filter to be copied","htmlid":"mw_0d08a27b-28f4-420e-8459-750c7de90211","value":["insfilterAsync"]}]}],"outputs":[{"name":"newFilter","purpose":"New copied filter","htmlid":"mw_a38220fe-16dd-4499-b19f-4fde85377af5","value":["insfilterAsync"]}],"examples":[{"url":"insfitlerasync.copy.html#mw_0730c83a-c394-44ae-af4a-197051c9d4b6","open_command":"openExample('shared_positioning\/CreateCopyOfInsfilterAsyncExample')","title":"Create Copy of insfilterAsync"}],"seealso":[{"url":"insfilterasync.html","name":"insfilterAsync"}]},{"href":"ref\/insfitlermarg.copy.html","refentity":[{"type":"function","name":"copy","fcntype":"instancemethod"},{"type":"method","name":"insfitlerMARG.copy","fcntype":"instancemethod"}],"refpurpose":"Create copy of insfitlerMARG","introduced":"R2020b","description":"This MATLAB function returns a copy of the insfilterMARG, filter, with the exactly same property values.","syntaxgroup":[{"title":"","syntax":["newFilter = copy(filter)"]}],"inputgroup":[{"title":"","inputs":[{"name":"filter","purpose":"Filter to be copied","htmlid":"mw_1f7d3904-ea5d-4f90-b190-854c79b55368","value":["insfitlerMARG"]}]}],"outputs":[{"name":"newFilter","purpose":"New copied filter","htmlid":"mw_bc2d9682-29cc-4be6-866f-29abfa2dfd3e","value":["insfitlerMARG"]}],"examples":[{"url":"insfitlermarg.copy.html#mw_565806a4-a343-4940-b780-0c06dfada063","open_command":"openExample('shared_positioning\/CreateCopyOfInsfilterMARGExample')","title":"Create Copy of insfilterMARG"}],"seealso":[{"url":"insfiltermarg.html","name":"insfilterMARG"}]},{"href":"ref\/insfitlernonholonomic.copy.html","refentity":[{"type":"function","name":"copy","fcntype":"instancemethod"},{"type":"method","name":"insfitlerNonholonomic.copy","fcntype":"instancemethod"}],"refpurpose":"Create copy of insfitlerNonholonomic","introduced":"R2020b","description":"This MATLAB function returns a copy of the insfilterNonholonomic, filter, with the exactly same property values.","syntaxgroup":[{"title":"","syntax":["newFilter = copy(filter)"]}],"inputgroup":[{"title":"","inputs":[{"name":"filter","purpose":"Filter to be copied","htmlid":"mw_1995cbd4-e297-434d-a8db-9ec41786041f","value":["insfitlerNonholonomic"]}]}],"outputs":[{"name":"newFilter","purpose":"New copied filter","htmlid":"mw_3e052965-9937-4fbc-86a8-85ac037a4ad3","value":["insfitlerNonholonomic"]}],"examples":[{"url":"insfitlernonholonomic.copy.html#mw_9e581744-7d37-4f8e-a3d1-6b56896f3034","open_command":"openExample('shared_positioning\/CreateCopyOfInsfilterNonholonomicExample')","title":"Create Copy of insfilterNonholonomic"}],"seealso":[{"url":"insfilternonholonomic.html","name":"insfilterNonholonomic"}]},{"href":"ref\/insgps.html","refentity":[{"type":"object","name":"insGPS"},{"type":"function","name":"insGPS","fcntype":"constructor"}],"refpurpose":"Model GPS readings for sensor fusion","introduced":"R2022a","description":"The insGPS object models GPS readings for sensor fusion.","syntaxgroup":[{"title":"","syntax":["sensor = insGPS"]}],"classpropertygroup":[{"classproperty":[{"name":"ReferenceLocation","purpose":"Origin of local navigation reference frame","htmlid":"mw_c084287f-a7de-42b4-b252-6a0f1bf18b16","value":["[0 0 0]","three-element row vector of form [latitude longitude altitude]"],"defaultvalue":"[0 0 0]"}]}],"examples":[{"url":"insgps.html#mw_9af2f0f5-ade2-40a9-8fcb-066b30ae94fe","open_command":"openExample('shared_positioning\/CreateInsGPSForUsingInInsEKFExample')","title":"Create insGPS for Use in insEKF"}],"seealso":[{"url":"insekf.html","name":"insEKF"},{"url":"insoptions.html","name":"insOptions"}]},{"href":"ref\/insgyroscope.html","refentity":[{"type":"object","name":"insGyroscope"},{"type":"function","name":"insGyroscope","fcntype":"constructor"}],"refpurpose":"Model gyroscope readings for sensor fusion","introduced":"R2022a","description":"The insGyroscope object models gyroscope readings for sensor fusion.","syntaxgroup":[{"title":"","syntax":["sensor = insGyroscope"]}],"examples":[{"url":"insgyroscope.html#mw_c28ae874-de7f-437d-9f02-1d3086c94597","open_command":"openExample('shared_positioning\/CreateInsGyroscopeForUsingInInsEKFExample')","title":"Create insGyroscope for Use in insEKF"}],"seealso":[{"url":"insekf.html","name":"insEKF"},{"url":"insoptions.html","name":"insOptions"}]},{"href":"ref\/insmagnetometer.html","refentity":[{"type":"object","name":"insMagnetometer"},{"type":"function","name":"insMagnetometer","fcntype":"constructor"}],"refpurpose":"Model magnetometer readings for sensor fusion","introduced":"R2022a","description":"The insMagnetometer object models magnetometer readings for sensor fusion.","syntaxgroup":[{"title":"","syntax":["sensor = insMagnetometer"]}],"examples":[{"url":"insmagnetometer.html#mw_40e83c1a-e111-4d99-9df6-63247b635816","open_command":"openExample('shared_positioning\/CreateInsMagnetometerForUsingInInsEKFExample')","title":"Create insMagnetometer for Use in insEKF"}],"seealso":[{"url":"insekf.html","name":"insEKF"},{"url":"insoptions.html","name":"insOptions"}]},{"href":"ref\/insmotionorientation.html","refentity":[{"type":"object","name":"insMotionOrientation"},{"type":"function","name":"insMotionOrientation","fcntype":"constructor"}],"refpurpose":"Motion model for 3-D orientation estimation","introduced":"R2022a","description":"The insMotionOrientation object models orientation-only platform motion assuming a constant angular velocity.","syntaxgroup":[{"title":"","syntax":["model = insMotionOrientation"]}],"examples":[{"url":"insmotionorientation.html#mw_d6fdf753-9bb9-4b81-b06f-4b43b22138e2","open_command":"openExample('shared_positioning\/CreateInsMotionOrientationForUsingInInsEKFExample')","title":"Create insMotionOrientation for Use in insEKF"}],"seealso":[{"url":"insekf.html","name":"insEKF"},{"url":"insoptions.html","name":"insOptions"},{"url":"insmotionpose.html","name":"insMotionPose"},{"url":"positioning.insmotionmodel-class.html","name":"positioning.INSMotionModel"}]},{"href":"ref\/insmotionpose.html","refentity":[{"type":"object","name":"insMotionPose"},{"type":"function","name":"insMotionPose","fcntype":"constructor"}],"refpurpose":"Model for 3-D motion estimation","introduced":"R2022a","description":"The insMotionPose object models 3-D motion assuming constant angular velocity and constant linear acceleration.","syntaxgroup":[{"title":"","syntax":["model = insMotionPose"]}],"examples":[{"url":"insmotionpose.html#mw_9817a65f-6552-4606-be92-b7ce9b4c5f36","open_command":"openExample('shared_positioning\/CreateInsMotionPoseForUsingInInsEKFExample')","title":"Create insMotionPose for Use in insEKF"}],"seealso":[{"url":"insekf.html","name":"insEKF"},{"url":"insoptions.html","name":"insOptions"},{"url":"insmotionorientation.html","name":"insMotionOrientation"},{"url":"positioning.insmotionmodel-class.html","name":"positioning.INSMotionModel"}]},{"href":"ref\/insoptions.html","refentity":[{"type":"object","name":"insOptions"},{"type":"function","name":"insOptions","fcntype":"constructor"}],"refpurpose":"Options for configuration of insEKF object","introduced":"R2022a","description":"The insOptions object specifies properties for an insEKF object.","syntaxgroup":[{"title":"","syntax":["options = insOptions","options = insOptions(Name=Value)"]}],"classpropertygroup":[{"classproperty":[{"name":"Datatype","purpose":"Data type of insEKF variables","htmlid":"mw_cb2486ac-0e4b-462d-b94c-db755b71961d","value":["\"double\"","\"single\""],"defaultvalue":"\"double\""},{"name":"SensorNamesSource","purpose":"Source for names of sensors fused","htmlid":"mw_92833366-b91c-4b40-9188-9d38ea380b71","value":["\"default\"","\"property\""],"defaultvalue":"\"default\""},{"name":"ReferenceFrame","purpose":"Reference frame of insEKF object","htmlid":"mw_81140368-cf73-41c7-9276-05c6c51b786c","value":["\"NED\"","\"ENU\""],"defaultvalue":"\"NED\""},{"name":"SensorNames","purpose":"Names of sensors fused in filter","htmlid":"mw_6d7e855f-d7c1-49e3-be36-a656c670c709","value":["{''}","cell array of character vectors"],"defaultvalue":"{''}"}]}],"examples":[{"url":"insoptions.html#mw_1ac2b553-d8b7-462e-87d0-b7e55633248c","open_command":"openExample('shared_positioning\/CreateInsOptionsUsedWithInsEKFObjectExample')","title":"Create insOptions to Use with insEKF Object"}],"seealso":[{"url":"insekf.html","name":"insEKF"}]},{"href":"ref\/inssensor-system-object.html","refentity":[{"type":"sysobj","name":"insSensor"},{"type":"function","name":"insSensor","fcntype":"constructor"}],"refpurpose":"Inertial navigation system and GNSS\/GPS simulation model","introduced":"R2020b","description":"The insSensor System object models a device that fuses measurements from an inertial navigation system (INS) and global navigation satellite system (GNSS) such as a GPS, and outputs the fused measurements.","syntaxgroup":[{"title":"","syntaxtype":"createobject","syntax":["INS = insSensor","INS = insSensor(Name,Value)"]},{"title":"","syntaxtype":"usage","syntax":["measurement = INS(gTruth)","measurement = INS(gTruth,simTime)"]}],"inputgroup":[{"title":"","inputs":[{"name":"gTruth","purpose":"Inertial ground-truth state of sensor body","syntaxtype":"usage","htmlid":"mw_72336d99-8725-4221-af0a-431381b3cf97","value":["structure"]},{"name":"simTime","purpose":"Simulation time","syntaxtype":"usage","htmlid":"mw_32c3ebbf-f0c1-463c-bb09-a9ea6f8aa974","value":["nonnegative real scalar"]}]}],"outputs":[{"name":"measurement","purpose":"Measurement of sensor body motion","syntaxtype":"usage","htmlid":"mw_88edee34-3c48-4de7-90bf-bb89c2e20400","value":["structure"]}],"classpropertygroup":[{"classproperty":[{"name":"MountingLocation","purpose":"Location of sensor on platform (m)","htmlid":"mw_2b1e1935-a423-448c-8559-b4b74a48942c","value":["[0 0 0]","three-element real-valued vector of form [x y z]"],"defaultvalue":"[0 0 0]"},{"name":"RollAccuracy","purpose":"Accuracy of roll measurement (deg)","htmlid":"mw_68c4f77e-ef23-4413-864a-2abf8ea0dc78","value":["0.2","nonnegative real scalar"],"defaultvalue":"0.2"},{"name":"PitchAccuracy","purpose":"Accuracy of pitch measurement (deg)","htmlid":"mw_08ab7b7a-95bb-4e3b-b6d9-757a43050fe9","value":["0.2","nonnegative real scalar"],"defaultvalue":"0.2"},{"name":"YawAccuracy","purpose":"Accuracy of yaw measurement (deg)","htmlid":"mw_bc55b98d-eaad-4a00-8c82-4195e7e4a7bf","value":["1","nonnegative real scalar"],"defaultvalue":"1"},{"name":"PositionAccuracy","purpose":"Accuracy of position measurement (m)","htmlid":"mw_e41984e9-f4fe-4f7a-b2ff-dbc98bc50ef6","value":["[1 1 1]","nonnegative real scalar","three-element real-valued vector"],"defaultvalue":"[1 1 1]"},{"name":"VelocityAccuracy","purpose":"Accuracy of velocity measurement (m\/s)","htmlid":"mw_6af23058-aee2-4d28-8a8a-2172fe2dc837","value":["0.05","nonnegative real scalar"],"defaultvalue":"0.05"},{"name":"AccelerationAccuracy","purpose":"Accuracy of acceleration measurement (m\/s^{2})","htmlid":"mw_b4c39a1c-2625-4cf4-b3f3-f0a6e223b83f","value":["0","nonnegative real scalar"],"defaultvalue":"0"},{"name":"AngularVelocityAccuracy","purpose":"Accuracy of angular velocity measurement (deg\/s)","htmlid":"mw_c13b0a11-ad95-4806-b101-67370002eeb8","value":["0","nonnegative real scalar"],"defaultvalue":"0"},{"name":"TimeInput","purpose":"Enable input of simulation time","htmlid":"mw_d783d1bf-b0e0-4dd5-9beb-948bc20c1cdd","value":["false or 0","true or 1"],"defaultvalue":"false or 0"},{"name":"HasGNSSFix","purpose":"Enable GNSS fix","htmlid":"mw_cf9a6396-2158-421c-b642-f7ae26a6b66f","value":["true or 1","false or 0"],"defaultvalue":"true or 1"},{"name":"PositionErrorFactor","purpose":"Position error factor without GNSS fix","htmlid":"mw_473af65a-7abe-4f54-833a-b48aa826a3d5","value":["[0 0 0]","nonnegative scalar","1-by-3 vector of scalars"],"defaultvalue":"[0 0 0]"},{"name":"RandomStream","purpose":"Random number source","htmlid":"mw_536a00f0-0266-459c-96bf-6e693ae554da","value":["'Global stream'","'mt19937ar with seed'"],"defaultvalue":"'Global stream'"},{"name":"Seed","purpose":"Initial seed","htmlid":"mw_1f1973b8-ccd6-4943-9451-ea3dab285e38","value":["67","nonnegative integer"],"defaultvalue":"67"}]}],"objectfunctions":[{"title":"Specific to insSensor","functions":[{"name":"perturbations","url":"inssensor.perturbations.html","description":"Perturbation defined on object"},{"name":"perturb","url":"inssensor.perturb.html","description":"Apply perturbations to object"}]},{"title":"Common to All System Objects","functions":[{"name":"step","url":"..\/..\/matlab\/ref\/step.html","description":"Run System object algorithm"},{"name":"clone","url":"..\/..\/matlab\/ref\/matlab.system.clone.html","description":"Create duplicate System object"},{"name":"isLocked","url":"..\/..\/matlab\/ref\/matlab.system.islocked.html","description":"Determine if System object is in use"},{"name":"reset","url":"..\/..\/matlab\/ref\/resetsystemobject.html","description":"Reset internal states of System object"},{"name":"release","url":"..\/..\/matlab\/ref\/matlab.system.releasesystemobject.html","description":"Release resources and allow changes to System object property values and input characteristics"}]}],"examples":[{"url":"inssensor-system-object.html#mw_a7bc5514-4896-4b75-960d-b2a3f31a0e9f","open_command":"openExample('shared_ins\/GenerateINSMeasurementsFromStationaryInputExample')","title":"Generate INS Measurements from Stationary Input"},{"url":"inssensor-system-object.html#mw_a97e77ec-0fb1-46c6-9c87-e4e6c8e33a01","open_command":"openExample('shared_ins\/GenerateINSMeasurementsForATurningPlatformExample')","title":"Generate INS Measurements for a Turning Platform"}],"seealso":[{"url":"imusensor-system-object.html","name":"imuSensor"},{"url":"gpssensor-system-object.html","name":"gpsSensor"}]},{"href":"ref\/inssensor.perturb.html","refentity":[{"type":"function","name":"perturb","fcntype":"instancemethod"},{"type":"method","name":"insSensor.perturb","fcntype":"instancemethod"},{"type":"method","name":"imuSensor.perturb","fcntype":"instancemethod"},{"type":"method","name":"waypointTrajectory.perturb","fcntype":"instancemethod"},{"type":"method","name":"kinematicTrajectory.perturb","fcntype":"instancemethod"},{"type":"method","name":"radarEmitter.perturb","fcntype":"instancemethod"},{"type":"method","name":"radarSensor.perturb","fcntype":"instancemethod"},{"type":"method","name":"monostaticRadarSensor.perturb","fcntype":"instancemethod"},{"type":"method","name":"rcsSignature.perturb","fcntype":"instancemethod"},{"type":"method","name":"sonarEmitter.perturb","fcntype":"instancemethod"},{"type":"method","name":"sonarSensor.perturb","fcntype":"instancemethod"},{"type":"method","name":"irSensor.perturb","fcntype":"instancemethod"},{"type":"method","name":"irSignature.perturb","fcntype":"instancemethod"},{"type":"method","name":"tsSignature.perturb","fcntype":"instancemethod"},{"type":"method","name":"geoTrajectory.perturb","fcntype":"instancemethod"}],"refpurpose":"Apply perturbations to object","introduced":"R2020b","description":"This MATLAB function applies the perturbations defined on the object, obj and returns the offset values.","syntaxgroup":[{"title":"","syntax":["offsets = perturb(obj)"]}],"inputgroup":[{"title":"","inputs":[{"name":"obj","purpose":"Object for perturbation","htmlid":"mw_f71de520-a2dc-4eb1-9944-fa1f860a946b","value":["object"]}]}],"outputs":[{"name":"offsets","purpose":"Property offsets","htmlid":"mw_3e564b7f-24f6-4a9f-9b03-c0f532aaaf2a","value":["array of structure"]}],"examples":[{"url":"inssensor.perturb.html#mw_0f478ef9-0981-40f3-860a-d6c91e53eb94","open_command":"openExample('shared_trajectories\/PerturbWaypointTrajectoryExample')","title":"Perturb Waypoint Trajectory"},{"url":"inssensor.perturb.html#mw_e5387956-f466-4bd2-a6a9-1e8612f73b82","open_command":"openExample('shared_ins\/PerturbAccuracyOfInsSensorExample')","title":"Perturb Accuracy of insSensor"},{"url":"inssensor.perturb.html#mw_c6d5eab7-e298-4524-af32-c800aa5a84e1","open_command":"openExample('shared_ins\/PerturbImuSensorParametersExample')","title":"Perturb imuSensor Parameters"}],"seealso":[{"url":"inssensor.perturbations.html","name":"perturbations"}]},{"href":"ref\/inssensor.perturbations.html","refentity":[{"type":"function","name":"perturbations","fcntype":"instancemethod"},{"type":"method","name":"insSensor.perturbations","fcntype":"instancemethod"},{"type":"method","name":"imuSensor.perturbations","fcntype":"instancemethod"},{"type":"method","name":"waypointTrajectory.perturbations","fcntype":"instancemethod"},{"type":"method","name":"kinematicTrajectory.perturbations","fcntype":"instancemethod"},{"type":"method","name":"radarEmitter.perturbations","fcntype":"instancemethod"},{"type":"method","name":"radarSensor.perturbations","fcntype":"instancemethod"},{"type":"method","name":"monostaticRadarSensor.perturbations","fcntype":"instancemethod"},{"type":"method","name":"rcsSignature.perturbations","fcntype":"instancemethod"},{"type":"method","name":"sonarEmitter.perturbations","fcntype":"instancemethod"},{"type":"method","name":"sonarSensor.perturbations","fcntype":"instancemethod"},{"type":"method","name":"irSensor.perturbations","fcntype":"instancemethod"},{"type":"method","name":"irSignature.perturbations","fcntype":"instancemethod"},{"type":"method","name":"tsSignature.perturbations","fcntype":"instancemethod"},{"type":"method","name":"geoTrajectory.perturbations","fcntype":"instancemethod"}],"refpurpose":"Perturbation defined on object","introduced":"R2020b","description":"This MATLAB function returns the list of property perturbations, perturbs, defined on the object, obj.","syntaxgroup":[{"title":"","syntax":["perturbs = perturbations(obj)","perturbs = perturbations(obj,property)","perturbs = perturbations(obj,property,'None')","perturbs = perturbations(obj,property,'Selection',values,probabilities)","perturbs = perturbations(obj,property,'Normal',mean,deviation)","perturbs = perturbations(obj,property,'TruncatedNormal',mean,deviation,lowerLimit,upperLimit)","perturbs = perturbations(obj,property,'Uniform',minVal,maxVal)","perturbs = perturbations(obj,property,'Custom',perturbFcn)"]}],"inputgroup":[{"title":"","inputs":[{"name":"obj","purpose":"Object to be perturbed","htmlid":"mw_26a3b06a-d03d-4bd7-96cf-740a3158eaa1","value":["object"]},{"name":"property","purpose":"Perturbable property","htmlid":"mw_4bb492f4-9c3d-46c4-848d-b14133874a85","value":["property name"]},{"name":"values","purpose":"Perturbation offset values","htmlid":"mw_0d0d1f1d-8faa-4d28-a2fe-7a889da8198a","value":["n-element cell array of property values"]},{"name":"probabilities","purpose":"Drawing probabilities for each perturbation value","htmlid":"mw_dbe3de7c-1b78-42bc-9072-432eade7326f","value":["n-element array of nonnegative scalar"]},{"name":"mean","purpose":"Mean of normal or truncated normal distribution","htmlid":"mw_481a4e63-7b55-4cf3-9171-9e12ad797539","value":["scalar","vector","matrix"]},{"name":"deviation","purpose":"Standard deviation of normal or truncated normal distribution","htmlid":"mw_91d6fca0-5cb9-4a95-9943-c3881608f2ac","value":["nonnegative scalar","vector of nonnegative scalar","matrix of nonnegative scalar"]},{"name":"lowerLimit","purpose":"Lower limit of truncated normal distribution","htmlid":"mw_cd1d3c3c-83eb-4244-bbd4-61f63b2a1fe3","value":["scalar","vector","matrix"]},{"name":"upperLimit","purpose":"Upper limit of truncated normal distribution","htmlid":"mw_67d4e2cc-6982-4fe7-bbc5-f7299f576ee7","value":["scalar","vector","matrix"]},{"name":"minVal","purpose":"Minimum value of uniform distribution interval","htmlid":"mw_3b2090be-48bb-4811-8cf4-9b468950c691","value":["scalar","vector","matrix"]},{"name":"maxVal","purpose":"Maximum value of uniform distribution interval","htmlid":"mw_b43abb1c-49ca-4c60-a025-6925ab3d7795","value":["scalar","vector","matrix"]},{"name":"perturbFcn","purpose":"Perturbation function","htmlid":"mw_f2d17081-3f98-4587-be6d-5d033dd0bca3","value":["function handle"]}]}],"outputs":[{"name":"perturbs","purpose":"Perturbations defined on object","htmlid":"mw_fa1e7e22-9132-45fb-a88d-890917b112e0","value":["table of perturbation property"]}],"examples":[{"url":"inssensor.perturbations.html#mw_a15c1204-c2d8-4335-98a5-21be36dc9df5","open_command":"openExample('shared_trajectories\/DefaultPerturbationPropertiesOfWaypointTrajectoryExample')","title":"Default Perturbation Properties of waypointTrajectory"},{"url":"inssensor.perturbations.html#mw_b70bea4a-a35b-494b-aa10-6930bf917306","open_command":"openExample('shared_ins\/PerturbAccuracyOfInsSensorExample')","title":"Perturb Accuracy of insSensor"},{"url":"inssensor.perturbations.html#mw_edbf5a16-0f33-456a-b4ff-7d29251edbc4","open_command":"openExample('shared_trajectories\/PerturbWaypointTrajectoryExample')","title":"Perturb Waypoint Trajectory"}],"seealso":[{"url":"inssensor.perturb.html","name":"perturb"}]},{"href":"ref\/kinematictrajectory-system-object.html","refentity":[{"type":"sysobj","name":"kinematicTrajectory"},{"type":"function","name":"kinematicTrajectory","fcntype":"constructor"}],"refpurpose":"Rate-driven trajectory generator","introduced":"R2019b","description":"The kinematicTrajectory System object generates trajectories using specified acceleration and angular velocity.","syntaxgroup":[{"title":"","syntaxtype":"createobject","syntax":["trajectory = kinematicTrajectory","trajectory = kinematicTrajectory(Name,Value)"]},{"title":"","syntaxtype":"usage","syntax":["[position,orientation,velocity,acceleration,angularVelocity] = trajectory(bodyAcceleration,bodyAngularVelocity)","[position,orientation,velocity,acceleration,angularVelocity] = trajectory(bodyAngularVelocity)","[position,orientation,velocity,acceleration,angularVelocity] = trajectory(bodyAcceleration)","[position,orientation,velocity,acceleration,angularVelocity] = trajectory()"]}],"inputgroup":[{"title":"","inputs":[{"name":"bodyAcceleration","purpose":"Acceleration in body coordinate system (m\/s^{2})","syntaxtype":"usage","htmlid":"mw_72a51b29-1d28-49dd-9e12-c338b1c67697","value":["N-by-3 matrix"]}]},{"title":"","inputs":[{"name":"bodyAngularVelocity","purpose":"Angular velocity in body coordinate system (rad\/s)","syntaxtype":"usage","htmlid":"mw_64f7088f-cb69-4ea8-bb89-6b9283fa42e5","value":["N-by-3 matrix"]}]}],"outputs":[{"name":"position","purpose":"Position in local navigation coordinate system (m)","syntaxtype":"usage","htmlid":"mw_637afad8-62fa-46bb-bedd-7183d466e7b4","value":["N-by-3 matrix"]},{"name":"orientation","purpose":"Orientation in local navigation coordinate system","syntaxtype":"usage","htmlid":"mw_aea76372-cc6b-41e2-aad0-a1fdff4b008d","value":["N-element quaternion column vector","3-by-3-by-N real array"]},{"name":"velocity","purpose":"Velocity in local navigation coordinate system (m\/s)","syntaxtype":"usage","htmlid":"mw_93b3bb39-9f12-4575-a2ec-642d820ed41e","value":["N-by-3 matrix"]},{"name":"acceleration","purpose":"Acceleration in local navigation coordinate system (m\/s^{2})","syntaxtype":"usage","htmlid":"mw_e1566563-4556-4f32-b8a3-cad0e4ec691a","value":["N-by-3 matrix"]},{"name":"angularVelocity","purpose":"Angular velocity in local navigation coordinate system (rad\/s)","syntaxtype":"usage","htmlid":"mw_a0afd0e5-6c3c-40e6-87eb-6a0541ad57a0","value":["N-by-3 matrix"]}],"classpropertygroup":[{"classproperty":[{"name":"SampleRate","purpose":"Sample rate of trajectory (Hz)","htmlid":"mw_4f6ab70c-17fb-43ce-8bc8-f5b4d1356787","value":["100","positive scalar"],"defaultvalue":"100"},{"name":"Position","purpose":"Position state in local navigation coordinate system (m)","htmlid":"mw_f13f1fec-1b55-4877-a854-bafe5d64b944_sep_mw_1ff2b061-0160-4848-85ae-3b47b16c6240","value":["[0 0 0]","3-element row vector"],"defaultvalue":"[0 0 0]"},{"name":"Velocity","purpose":"Velocity state in local navigation coordinate system (m\/s)","htmlid":"mw_e016212a-ff2e-483e-8466-e77060bfba40","value":["[0 0 0]","3-element row vector"],"defaultvalue":"[0 0 0]"},{"name":"Orientation","purpose":"Orientation state in local navigation coordinate system","htmlid":"mw_a67417da-34ce-4749-b17b-d945b94cd17e","value":["quaternion(1,0,0,0)","scalar quaternion","3-by-3 real matrix"],"defaultvalue":"quaternion(1,0,0,0)"},{"name":"AccelerationSource","purpose":"Source of acceleration state","htmlid":"mw_a4b24b81-db24-4f0a-a157-c7ddd3f1fa58","value":["'Input'","'Property'"],"defaultvalue":"'Input'"},{"name":"Acceleration","purpose":"Acceleration state (m\/s^{2})","htmlid":"mw_a5ddc7a7-d766-4df6-8573-dd01f3b812e5","value":["[0 0 0]","three-element row vector"],"defaultvalue":"[0 0 0]"},{"name":"AngularVelocitySource","purpose":"Source of angular velocity state","htmlid":"mw_41a0bb95-3fbe-498c-9a4c-ed0fdadba9b1","value":["'Input'","'Property'"],"defaultvalue":"'Input'"},{"name":"AngularVelocity","purpose":"Angular velocity state (rad\/s)","htmlid":"mw_14a94b0e-a6ab-4286-8282-ac669545b831","value":["[0 0 0]","three-element row vector"],"defaultvalue":"[0 0 0]"},{"name":"SamplesPerFrame","purpose":"Number of samples per output frame","htmlid":"mw_7550710d-cdce-4092-9ffc-efd20e1ef0d8","value":["1","positive integer"],"defaultvalue":"1"}]}],"objectfunctions":[{"title":"Specific to kinematicTrajectory","functions":[{"name":"perturbations","url":"inssensor.perturbations.html","description":"Perturbation defined on object"},{"name":"perturb","url":"inssensor.perturb.html","description":"Apply perturbations to object"}]},{"title":"Common to All System Objects","functions":[{"name":"step","url":"..\/..\/matlab\/ref\/step.html","description":"Run System object algorithm"}]}],"examples":[{"url":"kinematictrajectory-system-object.html#mw_0dcbbc9c-d9dd-4f41-bc19-bc13e1b873a8","open_command":"openExample('shared_trajectories\/CreateDefaultKinematicTrajectoryExample')","title":"Create Default kinematicTrajectory"},{"url":"kinematictrajectory-system-object.html#mw_9ccbbaed-6061-4f03-ab9e-673ce2282205","open_command":"openExample('shared_trajectories\/CreateOscillatingTrajectoryExample')","title":"Create Oscillating Trajectory"},{"url":"kinematictrajectory-system-object.html#mw_ce960c74-fbe7-4559-b006-2e435de7eaec","open_command":"openExample('shared_trajectories\/GenerateACoilTrajectoryExample')","title":"Generate a Coil Trajectory"},{"url":"kinematictrajectory-system-object.html#mw_7d7554fa-9d1e-4286-bc6c-f855c605450f","open_command":"openExample('shared_trajectories\/GenerateSpiralingCircularTrajectoryWithNoInputsExample')","title":"Generate Spiraling Circular Trajectory with No Inputs"}],"seealso":[{"url":"waypointtrajectory-system-object.html","name":"waypointTrajectory"}]},{"href":"ref\/lidarscan.html","refentity":[{"type":"object","name":"lidarScan"},{"type":"function","name":"lidarScan","fcntype":"constructor"}],"refpurpose":"Create object for storing 2-D lidar scan","introduced":"R2019b","description":"A lidarScan object contains data for a single 2-D lidar (light detection and ranging) scan.","syntaxgroup":[{"title":"","syntax":["scan = lidarScan(scanMsg)"]},{"title":"","syntax":["scan = lidarScan(ranges,angles)","scan = lidarScan(cart)"]}],"classpropertygroup":[{"classproperty":[{"name":"Ranges","purpose":"Range readings from lidar in meters","htmlid":"d126e110204","value":["vector"]}]},{"classproperty":[{"name":"Angles","purpose":"Angle of readings from lidar in radians","htmlid":"d126e110233","value":["vector"]}]},{"classproperty":[{"name":"Cartesian","purpose":"Cartesian coordinates of lidar readings in meters","htmlid":"d126e110264","value":["[x y] matrix"]}]},{"classproperty":[{"name":"Count","purpose":"Number of lidar readings","htmlid":"d126e110299","value":["scalar"]}]}],"objectfunctions":[{"title":"","functions":[{"name":"plot","url":"lidarscan.plot.html","description":"Display laser or lidar scan readings"},{"name":"removeInvalidData","url":"removeinvaliddata.html","description":"Remove invalid range and angle data"},{"name":"transformScan","url":"lidarscan.transformscan.html","description":"Transform laser scan based on relative pose"}]}],"examples":[{"url":"lidarscan.html#mw_c0ca2e55-fd28-4599-8689-001aae3cef90","open_command":"openExample('nav_robotics\/PlotLidarScanAndRemoveInvalidPointsExample')","title":"Plot Lidar Scan and Remove Invalid Points"},{"url":"lidarscan.html#mw_2d543030-b13c-41db-bc94-80458897f949","open_command":"openExample('nav_robotics\/TransformLaserScansExample')","title":"Transform Laser Scans"},{"url":"lidarscan.html#d126e110417","open_command":"openExample('robotics\/MatchLidarScansExample')","title":"Match Lidar Scans"}],"seealso":[{"url":"matchscans.html","name":"matchScans"},{"url":"lidarscan.transformscan.html","name":"transformScan"},{"url":"controllervfh-system-object.html","name":"controllerVFH"},{"url":"montecarlolocalization-system-object.html","name":"monteCarloLocalization"}]},{"href":"ref\/lidarscan.plot.html","refentity":[{"type":"function","name":"plot","fcntype":"instancemethod"},{"type":"method","name":"lidarScan.plot","fcntype":"instancemethod"}],"refpurpose":"Display laser or lidar scan readings","introduced":"R2015a","description":"This MATLAB function plots the lidar scan readings specified in scanObj.","syntaxgroup":[{"title":"","syntax":["plot(scanObj)","plot(___,Name,Value)","linehandle = plot(___)"]}],"inputgroup":[{"title":"","inputs":[{"name":"scanObj","purpose":"Lidar scan readings","htmlid":"mw_0a827f68-99c6-42cd-8099-48a2af649db2","value":["lidarScan object"]}]},{"namevaluepairs":[{"title":"","inputs":[{"name":"Parent","purpose":"Parent of axes","htmlid":"mw_8614c56d-b5c5-4156-9eac-b61668e1da38","value":["axes object"]},{"name":"MaximumRange","purpose":"Range of laser scan","htmlid":"mw_54882998-f224-490e-a6db-c3e9acef16ff","value":["scalar","scan.RangeMax"],"defaultvalue":"scan.RangeMax"}]}]}],"outputs":[{"name":"linehandle","purpose":"One or more chart line objects","htmlid":"mw_f59fc92c-89c8-4580-b67a-1939d1f57abe","value":["scalar","vector"]}],"examples":[{"url":"lidarscan.plot.html#mw_7ad77872-9474-4f5e-9a9a-e43358fc9e0a","open_command":"openExample('nav_robotics\/PlotLidarScanAndRemoveInvalidPointsExample')","title":"Plot Lidar Scan and Remove Invalid Points"}],"seealso":[{"url":"matchscans.html","name":"matchScans"},{"url":"lidarscan.transformscan.html","name":"transformScan"},{"url":"controllervfh-system-object.html","name":"controllerVFH"},{"url":"montecarlolocalization-system-object.html","name":"monteCarloLocalization"}]},{"href":"ref\/lidarscan.transformscan.html","refentity":[{"type":"function","name":"transformScan","fcntype":"instancemethod"},{"type":"method","name":"lidarScan.transformScan","fcntype":"instancemethod"}],"refpurpose":"Transform laser scan based on relative pose","introduced":"R2017a","description":"This MATLAB function transforms the laser scan specified in scan by using the specified relative pose, relPose.","syntaxgroup":[{"title":"","syntax":["transScan = transformScan(scan,relPose)"]},{"title":"","syntax":["[transRanges,transAngles] = transformScan(ranges,angles,relPose)"]}],"inputgroup":[{"title":"","inputs":[{"name":"scan","purpose":"Lidar scan readings","htmlid":"d126e45568","value":["lidarScan object"]}]},{"title":"","inputs":[{"name":"ranges","purpose":"Range values from scan data","htmlid":"bvlvwih-1-ranges","value":["vector"]},{"name":"angles","purpose":"Angle values from scan data","htmlid":"bvlvwih-1-angles","value":["vector"]},{"name":"relPose","purpose":"Relative pose of current scan","htmlid":"bvlvwih-1-relPose","value":["[x y theta]"]}]}],"outputs":[{"name":"transScan","purpose":"Transformed lidar scan readings","htmlid":"d126e45666","value":["lidarScan object"]},{"name":"transRanges","purpose":"Range values of transformed scan","htmlid":"bvlvwih-1-transRanges","value":["vector"]},{"name":"transAngles","purpose":"Angle values from scan data","htmlid":"bvlvwih-1-transAngles","value":["vector"]}],"examples":[{"url":"lidarscan.transformscan.html#bvlvwih-7","open_command":"openExample('nav_robotics\/TransformLaserScansExample')","title":"Transform Laser Scans"},{"url":"lidarscan.transformscan.html#bvoa7g_","open_command":"openExample('nav_robotics\/UseScanMatchingToTransformScansExample')","title":"Use Scan Matching to Transform Scans"}],"seealso":[{"url":"matchscans.html","name":"matchScans"},{"url":"controllervfh-system-object.html","name":"controllerVFH"},{"url":"montecarlolocalization-system-object.html","name":"monteCarloLocalization"}]},{"href":"ref\/lidarslam.addscan.html","refentity":[{"type":"function","name":"addScan","fcntype":"instancemethod"},{"type":"method","name":"lidarSLAM.addScan","fcntype":"instancemethod"}],"refpurpose":"Add scan to lidar SLAM map","introduced":"R2019b","description":"This MATLAB function adds a lidar scan, currScan, to the lidar SLAM object, slamObj.","syntaxgroup":[{"title":"","syntax":["addScan(slamObj,currScan)","addScan(slamObj,currScan,relPoseEst)","[isAccepted,loopClosureInfo,optimInfo] = addScan(___)"]}],"inputgroup":[{"title":"","inputs":[{"name":"slamObj","purpose":"Lidar SLAM object","htmlid":"d126e111472","value":["lidarSLAM object"]},{"name":"currScan","purpose":"Lidar scan reading","htmlid":"d126e111491","value":["lidarScan object"]},{"name":"relPoseEst","purpose":"Relative pose estimate of scan","htmlid":"d126e111512","value":["[x y theta] vector"]}]}],"outputs":[{"name":"isAccepted","purpose":"Indicates if scan is accepted","htmlid":"d126e111534","value":["true","false"]},{"name":"loopClosureInfo","purpose":"Loop closure details","htmlid":"d126e111560","value":["structure"]},{"name":"optimInfo","purpose":"Pose graph optimization details","htmlid":"d126e111602","value":["structure"]}],"examples":[{"url":"lidarslam.addscan.html#mw_73a030b1-9cbc-4fec-aa04-2f6502099ba4","open_command":"openExample('nav\/PerformSLAMUsingLidarScansExample')","title":"Perform SLAM Using Lidar Scans"}],"seealso":[{"url":"posegraph.html","name":"poseGraph"},{"url":"optimizeposegraph.html","name":"optimizePoseGraph"}]},{"href":"ref\/lidarslam.copy.html","refentity":[{"type":"function","name":"copy","fcntype":"instancemethod"},{"type":"method","name":"lidarSLAM.copy","fcntype":"instancemethod"}],"refpurpose":"Copy lidar SLAM object","introduced":"R2019b","description":"This MATLAB function creates a deep copy of slamObj with the same properties.","syntaxgroup":[{"title":"","syntax":["newSlamObj = copy(slamObj)"]}],"inputgroup":[{"title":"","inputs":[{"name":"slamObj","purpose":"Lidar SLAM object","htmlid":"mw_855a3acb-4757-4c71-949d-9588a5a52c43","value":["lidarSLAM object"]}]}],"outputs":[{"name":"newSlamObj","purpose":"Lidar SLAM object","htmlid":"mw_bad6b329-3fcb-4c55-8a12-776af3e1b121","value":["lidarSLAM object"]}],"examples":[{"url":"lidarslam.copy.html#mw_7f1b8f63-5176-4b4d-b395-2a067f1f5d50","open_command":"openExample('nav\/CreateCopyOfLidarSLAMExample')","title":"Create Copy of Lidar SLAM"},{"url":"lidarslam.copy.html#mw_4384900b-6de0-49cb-8c77-82ffb018281b","open_command":"openExample('nav\/RemoveLoopClosuresFromPoseGraphInLidarSLAMObjectExample')","title":"Remove Loop Closures from Pose Graph in Lidar SLAM Object"}],"seealso":[{"url":"posegraph.html","name":"poseGraph"},{"url":"optimizeposegraph.html","name":"optimizePoseGraph"}]},{"href":"ref\/lidarslam.html","refentity":[{"type":"object","name":"lidarSLAM"},{"type":"function","name":"lidarSLAM","fcntype":"constructor"}],"refpurpose":"Perform localization and mapping using lidar scans","introduced":"R2019b","description":"The lidarSLAM class performs simultaneous localization and mapping (SLAM) for lidar scan sensor inputs.","syntaxgroup":[{"title":"","syntax":["slamObj = lidarSLAM","slamObj = lidarSLAM(mapResolution,maxLidarRange)","slamObj = lidarSLAM(mapResolution,maxLidarRange,maxNumScans)"]}],"classpropertygroup":[{"classproperty":[{"name":"PoseGraph","purpose":"Underlying pose graph that connects scans","htmlid":"d126e110887","value":["poseGraph object"]},{"name":"MapResolution","purpose":"Resolution of occupancy grid map","htmlid":"d126e110911","value":["20 cells per meter","positive integer"],"defaultvalue":"20 cells per meter"},{"name":"MaxLidarRange","purpose":"Maximum range of lidar sensor","htmlid":"d126e110928","value":["8 meters","positive scalar"],"defaultvalue":"8 meters"},{"name":"OptimizationFcn","purpose":"Pose graph optimization function","htmlid":"d126e110945","value":["optimizePoseGraph","function handle"],"defaultvalue":"optimizePoseGraph"},{"name":"LoopClosureThreshold","purpose":"Threshold for accepting loop closures","htmlid":"d126e110984","value":["100","positive scalar"],"defaultvalue":"100"},{"name":"LoopClosureSearchRadius","purpose":"Search radius for loop closure detection","htmlid":"d126e111001","value":["8 meters","positive scalar"],"defaultvalue":"8 meters"},{"name":"LoopClosureMaxAttempts","purpose":"Number of attempts at finding loop closures","htmlid":"d126e111018","value":["1","positive integer"],"defaultvalue":"1"},{"name":"LoopClosureAutoRollback","purpose":"Allow automatic rollback of added loop closures","htmlid":"d126e111034","value":["true","false"],"defaultvalue":"true"},{"name":"OptimizationInterval","purpose":"Number of loop closures accepted to trigger optimization","htmlid":"d126e111060","value":["1","positive integer"],"defaultvalue":"1"},{"name":"MovementThreshold","purpose":"Minimum change in pose required to process scans","htmlid":"d126e111081","value":["[0 0]","[translation rotation]"],"defaultvalue":"[0 0]"},{"name":"ScanRegistrationMethod","purpose":"Scan registration method","htmlid":"mw_7c93d984-ef7f-4888-b4a8-0e66f1a8e665","value":["'BranchAndBound'","'PhaseCorrelation'"],"defaultvalue":"'BranchAndBound'"},{"name":"TranslationSearchRange","purpose":"Incremental match translational search range","htmlid":"mw_497a9775-7514-4e9b-a5a9-1a367efea9ed","value":["[maxLidarRange\/2 maxLidarRange\/2]","two-element vector of the form [x y]"],"defaultvalue":"[maxLidarRange\/2 maxLidarRange\/2]"},{"name":"RotationSearchRange","purpose":"Incremental match rotational search range","htmlid":"mw_7783b485-735e-40d3-acf1-f67255d9dde5","value":["pi\/2","positive scalar"],"defaultvalue":"pi\/2"}]}],"objectfunctions":[{"title":"","functions":[{"name":"addScan","url":"lidarslam.addscan.html","description":"Add scan to lidar SLAM map"},{"name":"copy","url":"lidarslam.copy.html","description":"Copy lidar SLAM object "},{"name":"removeLoopClosures","url":"lidarslam.removeloopclosures.html","description":" Remove loop closures from pose graph"},{"name":"scansAndPoses","url":"lidarslam.scansandposes.html","description":" Extract scans and corresponding poses"},{"name":"show","url":"lidarslam.show.html","description":"Plot scans and robot poses"}]}],"examples":[{"url":"lidarslam.html#mw_da931e84-664e-48fa-8046-b156fa190168","open_command":"openExample('nav\/PerformSLAMUsingLidarScansExample')","title":"Perform SLAM Using Lidar Scans"}],"seealso":[{"url":"posegraph.html","name":"poseGraph"},{"url":"optimizeposegraph.html","name":"optimizePoseGraph"}]},{"href":"ref\/lidarslam.removeloopclosures.html","refentity":[{"type":"function","name":"removeLoopClosures","fcntype":"instancemethod"},{"type":"method","name":"lidarSLAM.removeLoopClosures","fcntype":"instancemethod"}],"refpurpose":"Remove loop closures from pose graph","introduced":"R2019b","description":"This MATLAB function removes all loop closures from the underlying pose graph in slamObj.","syntaxgroup":[{"title":"","syntax":["removeLoopClosures(slamObj)","removeLoopClosures(slamObj,lcEdgeIDs)"]}],"inputgroup":[{"title":"","inputs":[{"name":"slamObj","purpose":"Lidar SLAM object","htmlid":"mw_6e60a136-f456-4820-8d61-9d71a0a53edd","value":["lidarSLAM object"]},{"name":"lcEdgeIDs","purpose":"Loop closure edge IDs","htmlid":"mw_eb178c97-1965-43b9-a206-be318cb0a056","value":["vector of positive integers"]}]}],"examples":[{"url":"lidarslam.removeloopclosures.html#mw_ac50ec58-394b-4e9b-814b-b8db9d2f8eef","open_command":"openExample('nav\/RemoveLoopClosuresFromPoseGraphInLidarSLAMObjectExample')","title":"Remove Loop Closures from Pose Graph in Lidar SLAM Object"}],"seealso":[{"url":"posegraph.html","name":"poseGraph"},{"url":"optimizeposegraph.html","name":"optimizePoseGraph"}]},{"href":"ref\/lidarslam.scansandposes.html","refentity":[{"type":"function","name":"scansAndPoses","fcntype":"instancemethod"},{"type":"method","name":"lidarSLAM.scansAndPoses","fcntype":"instancemethod"}],"refpurpose":"Extract scans and corresponding poses","introduced":"R2019b","description":"This MATLAB function returns the scans used by the lidarSLAM object as lidarScan objects, along with their associated [x y theta] poses from the underlying pose graph of slamObj.","syntaxgroup":[{"title":"","syntax":["[scans,poses] = scansAndPoses(slamObj)","[scans,poses] = scansAndPoses(slamObj,nodeIDs)"]}],"inputgroup":[{"title":"","inputs":[{"name":"slamObj","purpose":"Lidar SLAM object","htmlid":"mw_b452e912-27fa-45af-a7a7-eecf47208398","value":["lidarSLAM object"]}]},{"title":"","inputs":[{"name":"nodeIDs","purpose":"Node IDs from pose graph","htmlid":"mw_6008d7db-f28b-446c-a043-eff4e6f94d4a","value":["positive integer"]}]}],"outputs":[{"name":"scans","purpose":"Lidar scan readings","htmlid":"mw_c5fdc974-ebab-4a75-97e7-e592f23636fc","value":["lidarScan object"]},{"name":"poses","purpose":"Pose for each scan","htmlid":"mw_f5e1c780-53ff-4c4f-b08b-f5d9647c6d60","value":["n-by-3 matrix","[x y theta] vectors"]}],"examples":[{"url":"lidarslam.scansandposes.html#mw_405ab9c1-a22c-4483-af3d-51e59a604568","open_command":"openExample('nav\/PerformSLAMUsingLidarScansExample')","title":"Perform SLAM Using Lidar Scans"}],"seealso":[{"url":"posegraph.html","name":"poseGraph"},{"url":"optimizeposegraph.html","name":"optimizePoseGraph"}]},{"href":"ref\/lidarslam.show.html","refentity":[{"type":"function","name":"show","fcntype":"instancemethod"},{"type":"method","name":"lidarSLAM.show","fcntype":"instancemethod"}],"refpurpose":"Plot scans and robot poses","introduced":"R2019b","description":"This MATLAB function plots all the scans added to the input lidarSLAM object overlaid with the lidar poses in its underlying pose graph.","syntaxgroup":[{"title":"","syntax":["show(slamObj)","show(slamObj,Name,Value)","axes = show(___)"]}],"inputgroup":[{"title":"","inputs":[{"name":"slamObj","purpose":"Lidar SLAM object","htmlid":"mw_55ec412c-4f58-4d0c-b65f-56fd28f88359","value":["lidarSLAM object"]}]},{"namevaluepairs":[{"title":"","inputs":[{"name":"Parent","purpose":"Axes used to plot pose graph","htmlid":"mw_671d90ff-e184-4037-bdb4-5191597cd55c","value":["Axes object","UIAxes object"]},{"name":"Poses","purpose":"Display lidar poses","htmlid":"mw_c83669d8-dca3-4cd1-9fe3-8609443685ce","value":["\"on\"","\"off\""],"defaultvalue":"\"on\""}]}]}],"outputs":[{"name":"axes","purpose":"Axes used to plot the map","htmlid":"mw_460cbcee-7575-4a9f-be55-cf1cf2d76ad3","value":["Axes object","UIAxes object"]}],"examples":[{"url":"lidarslam.show.html#mw_6e0c1fa4-aee9-4bf2-8eb8-92cf505dad8a","open_command":"openExample('nav\/PerformSLAMUsingLidarScansExample')","title":"Perform SLAM Using Lidar Scans"}],"seealso":[{"url":"posegraph.html","name":"poseGraph"},{"url":"optimizeposegraph.html","name":"optimizePoseGraph"}]},{"href":"ref\/likelihoodfieldsensormodel.html","refentity":[{"type":"object","name":"likelihoodFieldSensorModel"},{"type":"function","name":"likelihoodFieldSensorModel","fcntype":"constructor"}],"refpurpose":"Create likelihood field range sensor model","introduced":"R2019b","description":"The likelihoodFieldSensor object creates a likelihood field sensor model object for range sensors.","syntaxgroup":[{"title":"","syntax":["lf = likelihoodFieldSensorModel"]}],"classpropertygroup":[{"classproperty":[{"name":"Map","purpose":"Occupancy grid representing map","htmlid":"bu31hrp-1-Map","value":["binaryOccupancyMap object"],"defaultvalue":"binaryOccupancyMap object"},{"name":"SensorPose","purpose":"Pose of range sensor relative to vehicle","htmlid":"bu31hrp-1-SensorPose","value":["[0 0 0]","three-element vector"],"defaultvalue":"[0 0 0]"},{"name":"SensorLimits","purpose":"Minimum and maximum range of sensor","htmlid":"bu31hrp-1-SensorLimits","value":["[0 12]","two-element vector"],"defaultvalue":"[0 12]"},{"name":"NumBeams","purpose":"Number of beams used for likelihood computation","htmlid":"bu31hrp-1-NumBeams","value":["60","scalar"],"defaultvalue":"60"},{"name":"MeasurementNoise","purpose":"Standard deviation for measurement noise","htmlid":"bu31hrp-1-MeasurementNoise","value":["0.2","scalar"],"defaultvalue":"0.2"},{"name":"RandomMeasurementWeight","purpose":"Weight for probability of random measurement","htmlid":"bu31hrp-1-RandomMeasurementWeight","value":["0.05","scalar"],"defaultvalue":"0.05"},{"name":"ExpectedMeasurementWeight","purpose":"Weight for probability of expected measurement","htmlid":"bu31hrp-1-ExpectedMeasurementWeight","value":["0.95","scalar"],"defaultvalue":"0.95"},{"name":"MaxLikelihoodDistance","purpose":"Maximum distance to find nearest obstacles","htmlid":"bu31hrp-1-MaxLikelihoodDistance","value":["2.0","scalar"],"defaultvalue":"2.0"}]}],"examples":[{"url":"likelihoodfieldsensormodel.html#mw_05b91380-a080-4128-bea2-358d4bbe6b2e","open_command":"openExample('nav\/EstimateRobotPoseFromRangeSensorDataExample')","title":"Estimate Vehicle Pose from Range Sensor Data"}],"seealso":[{"url":"montecarlolocalization-system-object.html","name":"monteCarloLocalization"},{"url":"odometrymotionmodel.html","name":"odometryMotionModel"}]},{"href":"ref\/linaccel.html","refentity":[{"type":"function","name":"linaccel","fcntype":"simple"}],"refpurpose":"Linear acceleration from accelerometer reading","introduced":"R2023b","description":"This MATLAB function returns the linear accelerations of the accelerometer in the north-east-down (NED) reference frame based on the accelerometer readings and its orientations.","syntaxgroup":[{"title":"","syntax":["acc = linaccel(orientations,accReadings)","acc = linaccel(___,RF)"]}],"inputgroup":[{"title":"","inputs":[{"name":"orientations","purpose":"Orientations of accelerometer","htmlid":"mw_8e9e8a1e-8ef4-44e8-8b09-9c2f73f7ce94","value":["N-by-1 vector of quaternion objects","3-by-3-by-N array of rotation matrices"]},{"name":"accReadings","purpose":"Accelerometer readings","htmlid":"mw_2ed3e7d8-f406-49b6-ab7c-e8fd4768166a","value":["N-by-3 real-valued matrix"]},{"name":"RF","purpose":"Reference frame","htmlid":"mw_f77b2af5-cf33-4a14-be49-adddc1cc230b","value":["\"NED\"","\"ENU\""]}]}],"outputs":[{"name":"acc","purpose":"Linear accelerations","htmlid":"mw_ed90e60c-1bc7-4f0d-b7be-f51bbcf67627","value":["N-by-3 real-valued matrix"]}],"examples":[{"url":"linaccel.html#mw_c3dcccfd-9ce4-4589-91a5-02c7a3bfe914","open_command":"openExample('shared_positioning\/GetAccelerationsFormAccelerometerReadingsExample')","title":"Get Linear Accelerations from Accelerometer Readings"}],"seealso":[{"url":"gravitydir.html","name":"gravitydir"},{"url":"compassangle.html","name":"compassAngle"},{"url":"tilt.html","name":"tilt"}]},{"href":"ref\/lla2enu.html","refentity":[{"type":"function","name":"lla2enu","fcntype":"simple"}],"refpurpose":"Transform geodetic coordinates to local east-north-up coordinates","introduced":"R2021a","description":"This MATLAB function transforms the geodetic coordinates lla to local east-north-up (ENU) Cartesian coordinates xyzENU.","syntaxgroup":[{"title":"","syntax":["xyzENU = lla2enu(lla,lla0,method)"]}],"inputgroup":[{"title":"","inputs":[{"name":"lla","purpose":"Geodetic coordinates","htmlid":"mw_955bdcf1-ad8a-4cbc-9c05-a40ff9d52462","value":["three-element row vector","n-by-3 matrix"]},{"name":"lla0","purpose":"Origin of local ENU system in geodetic coordinates","htmlid":"mw_13aff1cc-b4a6-4460-8dcb-32bb76de38b6","value":["three-element row vector","n-by-3 matrix"]},{"name":"method","purpose":"Transformation method","htmlid":"mw_610012e9-ed0b-4cd1-81ed-b9a7aba8531c","value":["'flat'","'ellipsoid'"]}]}],"outputs":[{"name":"xyzENU","purpose":"Local ENU Cartesian coordinates","htmlid":"mw_1e8dc72c-603e-45a0-a595-02c28221c408","value":["three-element row vector","n-by-3 matrix"]}],"examples":[{"url":"lla2enu.html#mw_86c88539-79ba-4334-89a9-5ea070ee0d0e","open_command":"openExample('shared_trajectories\/TransformGeodeticCoordinatesToENUCoordinatesExample')","title":"Transform Geodetic Coordinates to ENU Coordinates"}],"seealso":[{"url":"enu2lla.html","name":"enu2lla"},{"url":"lla2ned.html","name":"lla2ned"},{"url":"ned2lla.html","name":"ned2lla"}]},{"href":"ref\/lla2ned.html","refentity":[{"type":"function","name":"lla2ned","fcntype":"simple"}],"refpurpose":"Transform geodetic coordinates to local north-east-down coordinates","introduced":"R2021a","description":"This MATLAB function transforms the geodetic coordinates lla to local north-east-down (NED) Cartesian coordinates xyzNED.","syntaxgroup":[{"title":"","syntax":["xyzNED = lla2ned(lla,lla0,method)"]}],"inputgroup":[{"title":"","inputs":[{"name":"lla","purpose":"Geodetic coordinates","htmlid":"mw_3e1e7bb6-9462-45c9-9fb4-9867500b6291","value":["three-element row vector","n-by-3 matrix"]},{"name":"lla0","purpose":"Origin of local NED system in geodetic coordinates","htmlid":"mw_8635c581-a51d-4370-8d56-35d68fa056dd","value":["three-element row vector","n-by-3 matrix"]},{"name":"method","purpose":"Transformation method","htmlid":"mw_ef0783dc-d192-47ca-95e6-917955d9f1f5","value":["'flat'","'ellipsoid'"]}]}],"outputs":[{"name":"xyzNED","purpose":"Local NED Cartesian coordinates","htmlid":"mw_9c72e1a8-5afd-44b1-b975-224428e15f77","value":["three-element row vector","n-by-3 matrix"]}],"examples":[{"url":"lla2ned.html#mw_05f3d73f-ca80-45e7-95a2-38daee54b76e","open_command":"openExample('shared_trajectories\/TransformGeodeticCoordinatesToNEDCoordinatesExample')","title":"Transform Geodetic Coordinates to NED Coordinates"}],"seealso":[{"url":"enu2lla.html","name":"enu2lla"},{"url":"lla2enu.html","name":"lla2enu"},{"url":"ned2lla.html","name":"ned2lla"}]},{"href":"ref\/lookangles.html","refentity":[{"type":"function","name":"lookangles","fcntype":"simple"}],"refpurpose":"Satellite look angles from receiver and satellite positions","introduced":"R2021a","description":"This MATLAB function returns the look angles and visibilities of satellite positions for a given receiver position.","syntaxgroup":[{"title":"","syntax":["[az,el,vis] = lookangles(recPos,satPos)","[az,el,vis] = lookangles(recPos,satPos,maskAngle)"]}],"inputgroup":[{"title":"","inputs":[{"name":"recPos","purpose":"Receiver position","htmlid":"mw_e4a2713a-023f-467c-ace4-2b71eaac11b8","value":["three-element vector of the form [lat lon alt]"]},{"name":"satPos","purpose":"Satellite positions","htmlid":"mw_9bdcd70d-12a1-4bb9-a8c0-d2c58df7a0ae","value":["N-by-3 matrix of scalars"]},{"name":"maskAngle","purpose":"Elevation mask angle","htmlid":"mw_4698ec5e-c55f-45f0-9c5d-87308802e998","value":["positive scalar"]}]}],"outputs":[{"name":"az","purpose":"Azimuth angles for visible satellite positions","htmlid":"mw_2748aa99-820f-456d-bc99-5a60e8e7b1d0","value":["n-element vector of angles"]},{"name":"el","purpose":"Elevation angles for visible satellite positions","htmlid":"mw_004e0200-d3cc-4182-a591-d8d2ec7be9d9","value":["n-element vector of angles"]},{"name":"vis","purpose":"Satellite visibility","htmlid":"mw_ac8f17ba-614b-44d1-be9b-436f923a2ee3","value":["n-element logical array"]}],"examples":[{"url":"lookangles.html#mw_97151e14-7288-4488-9cae-b5e3468fc72f","open_command":"openExample('nav\/GetSatelliteLookAnglesForReceiverPositionExample')","title":"Get Satellite Look Angles for Receiver Position"}],"seealso":[{"url":"gnsssensor-system-object.html","name":"gnssSensor"},{"url":"gpssensor-system-object.html","name":"gpsSensor"},{"url":"imusensor-system-object.html","name":"imuSensor"},{"url":"skyplot.html","name":"skyplot"},{"url":"gnssconstellation.html","name":"gnssconstellation"},{"url":"pseudoranges.html","name":"pseudoranges"},{"url":"receiverposition.html","name":"receiverposition"}]},{"href":"ref\/magcal.html","refentity":[{"type":"function","name":"magcal","fcntype":"simple"}],"refpurpose":"Magnetometer calibration coefficients","introduced":"R2019a","description":"This MATLAB function returns the coefficients needed to correct uncalibrated magnetometer data D.","syntaxgroup":[{"title":"","syntax":["[A,b,expmfs] = magcal(D)","[A,b,expmfs] = magcal(D,fitkind)"]}],"inputgroup":[{"title":"","inputs":[{"name":"D","purpose":"Raw magnetometer data","htmlid":"mw_56123a2a-e428-4cf6-a825-3a6ca508a024","value":["N-by-3 matrix"],"defaultvalue":"N-by-3 matrix"}]},{"title":"","inputs":[{"name":"fitkind","purpose":"Matrix output type","htmlid":"mw_4628ba76-4af5-42e5-a1b2-c1be2d54d206","value":["'auto'","'eye'","'diag'","'sym'"],"defaultvalue":"'auto'"}]}],"outputs":[{"name":"A","purpose":"Correction matrix for soft-iron effect","htmlid":"mw_4a23f95e-3ecc-4461-85cc-bb548c260026","value":["3-by-3 matrix"]},{"name":"b","purpose":"Correction vector for hard-iron effect","htmlid":"mw_dcd6f3d4-db35-415c-9497-3fcc138154d3","value":["3-by-1 vector"]},{"name":"expmfs","purpose":"Expected magnetic field strength","htmlid":"mw_34252c54-1f78-46b9-8c30-1a2b7351b0ce","value":["scalar"]}],"examples":[{"url":"magcal.html#mw_2b47dfac-31ba-4ebe-973b-557a1585b55f","open_command":"openExample('shared_positioning\/OrrectDataLyingOnEllipsoidExample')","title":"Correct Data Lying on Ellipsoid"}],"seealso":[{"url":"magparams.html","name":"magparams"},{"url":"imusensor-system-object.html","name":"imuSensor"}]},{"href":"ref\/magparams.html","refentity":[{"type":"object","name":"magparams"},{"type":"function","name":"magparams","fcntype":"constructor"}],"refpurpose":"Magnetometer sensor parameters","introduced":"R2018b","description":"The magparams class creates a magnetometer sensor parameters object.","syntaxgroup":[{"title":"","syntax":["params = magarams","params = magparams(Name,Value)"]}],"classpropertygroup":[{"classproperty":[{"name":"MeasurementRange","purpose":"Maximum sensor reading (μT)","htmlid":"mw_58d55c88-9db2-4f25-91c3-f5ae72528689","value":["Inf","real positive scalar"],"defaultvalue":"Inf"},{"name":"Resolution","purpose":"Resolution of sensor measurements (μT\/LSB)","htmlid":"mw_92f62a10-5f7e-4ae1-92dc-ecefa663ce8e","value":["0","real nonnegative scalar"],"defaultvalue":"0"},{"name":"ConstantBias","purpose":"Constant sensor offset bias (μT)","htmlid":"mw_44c73cbf-f2a1-46ba-8761-107794c75196","value":["[0 0 0]","real scalar","real 3-element row vector"],"defaultvalue":"[0 0 0]"},{"name":"AxesMisalignment","purpose":"Sensor axes skew (%)","htmlid":"mw_fa018246-f2e9-4fe8-b02f-56ac7c39495b_sep_mw_d6c5e1f2-deb1-431a-8238-c5358b33541a","value":["diag([100 100 100])","scalar","3-element row vector","3-by-3 matrix"],"defaultvalue":"diag([100 100 100])"},{"name":"NoiseDensity","purpose":"Power spectral density of sensor noise (μT\/√Hz)","htmlid":"mw_e818c65b-e46b-471c-b185-c97efa6cf215","value":["[0 0 0]","real scalar","real 3-element row vector"],"defaultvalue":"[0 0 0]"},{"name":"BiasInstabilityCoefficients","purpose":"Filter coefficients for bias instability noise generation","htmlid":"mw_fa018246-f2e9-4fe8-b02f-56ac7c39495b_sep_mw_a80589ac-5aa3-47c2-8b3f-18dd430b1482","value":["fractalcoef","structure"],"defaultvalue":"fractalcoef"},{"name":"BiasInstability","purpose":"Instability of the bias offset (μT)","htmlid":"mw_6c549a24-8978-420c-a448-1ea7f376c58a","value":["[0 0 0]","real scalar","real 3-element row vector"],"defaultvalue":"[0 0 0]"},{"name":"RandomWalk","purpose":"Integrated white noise of sensor (μT\/√Hz)","htmlid":"mw_d94c20d1-b4f7-4c19-9624-9e57fcab6315","value":["[0 0 0]","real scalar","real 3-element row vector"],"defaultvalue":"[0 0 0]"},{"name":"NoiseType","purpose":"Type of random noise","htmlid":"mw_fa018246-f2e9-4fe8-b02f-56ac7c39495b_sep_mw_889556fa-3b72-4ce7-a9b2-67f64114ce1b","value":["\"double-sided\"","\"single-sided\""],"defaultvalue":"\"double-sided\""},{"name":"TemperatureBias","purpose":"Sensor bias from temperature (μT\/℃)","htmlid":"mw_669e11cf-211b-4648-bca9-b0ca76658cd8","value":["[0 0 0]","real scalar","real 3-element row vector"],"defaultvalue":"[0 0 0]"},{"name":"TemperatureScaleFactor","purpose":"Scale factor error from temperature (%\/℃)","htmlid":"mw_f0eff46c-19aa-4f36-8d06-2950b8c07368","value":["[0 0 0]","real scalar in the range [0,100]","real 3-element row vector in the range [0,100]"],"defaultvalue":"[0 0 0]"}]}],"examples":[{"url":"magparams.html#mw_b905e9ca-1a96-4413-a208-d67fb314d9d9","open_command":"openExample('shared_positioning\/GenerateMagnetometerDataFromStationaryInputsExample')","title":"Generate Magnetometer Data from Stationary Inputs"}],"seealso":[{"url":"accelparams.html","name":"accelparams"},{"url":"gyroparams.html","name":"gyroparams"},{"url":"imusensor-system-object.html","name":"imuSensor"}]},{"href":"ref\/mapclutter.html","refentity":[{"type":"function","name":"mapClutter","fcntype":"simple"}],"refpurpose":"Generate map with randomly scattered obstacles","introduced":"R2020b","description":"This MATLAB function generates a 2-D occupancy map as a binaryOccupancyMap object map, with a width and height of 50 meters and a resolution of 5 cells per meter.","syntaxgroup":[{"title":"","syntax":["map = mapClutter","map = mapClutter(numObst)","map = mapClutter(numObst,shapes)","map = mapClutter(___,Name,Value)"]}],"inputgroup":[{"title":"","inputs":[{"name":"numObst","purpose":"Number of obstacles","htmlid":"mw_063456ed-406b-40c2-b16b-126f77b136a7","value":["20","positive integer"],"defaultvalue":"20"},{"name":"shapes","purpose":"Obstacle shapes","htmlid":"mw_94e41da1-09c9-4b5e-a2c7-fbc3684ee134","value":["{'Box','Circle'}","string scalar","character vector","string array","cell array of character vectors"],"defaultvalue":"{'Box','Circle'}"}]},{"namevaluepairs":[{"title":"","inputs":[{"name":"MapSize","purpose":"Width and height of generated map","htmlid":"mw_61abf964-5146-4661-967d-83dd4e9313e2","value":["[50 50]","two-element vector of positive real finite numbers"],"defaultvalue":"[50 50]"},{"name":"MapResolution","purpose":"Resolution of generated map","htmlid":"mw_03872683-8bf3-448b-a426-ff789c6c9014","value":["5","positive real scalar"],"defaultvalue":"5"}]}]}],"outputs":[{"name":"map","purpose":"Map with randomly scattered obstacles","htmlid":"mw_6e472e70-a7ff-4667-a837-d111733b56ba","value":["binaryOccupancyMap object"]}],"examples":[{"url":"mapclutter.html#mw_06797718-e7ee-4708-b20c-4a030160f8ee","open_command":"openExample('nav\/GenerateRandomlyDistributedObstacleMapExample')","title":"Generate Randomly Distributed Obstacle Map"}],"seealso":[{"url":"mapmaze.html","name":"mapMaze"},{"url":"binaryoccupancymap.html","name":"binaryOccupancyMap"},{"url":"validatoroccupancymap.html","name":"validatorOccupancyMap"}]},{"href":"ref\/maplayer.getmapdata.html","refentity":[{"type":"function","name":"getMapData","fcntype":"instancemethod"},{"type":"method","name":"mapLayer.getMapData","fcntype":"instancemethod"},{"type":"method","name":"signedDistanceMap.getMapData","fcntype":"instancemethod"}],"refpurpose":"Retrieve data from map layer","introduced":"R2021a","description":"This MATLAB function returns a matrix of values that contains all the data for the given map layer map.","syntaxgroup":[{"title":"","syntax":["mapData = getMapData(map)","mapData = getMapData(map,xy)","mapData = getMapData(map,xy,\"local\")","mapData = getMapData(map,ij,\"grid\")","[mapData,inBounds] = getMapData(___)"]},{"title":"","syntax":["mapData = getMapData(map,bottomLeft,mapSize)","mapData = getMapData(map,bottomLeft,mapSize,\"local\")","mapData = getMapData(map,topLeft,gridSize,\"grid\")"]}],"inputgroup":[{"title":"","inputs":[{"name":"map","purpose":"Map layer","htmlid":"mw_ddefc9c0-29dd-4475-af40-b9e3febe4cb1","value":["mapLayer object"]},{"name":"xy","purpose":"World or local coordinates","htmlid":"mw_e3826ffb-4bb6-4de1-a1e2-ceb5a19efb87_sep_mw_1a652b71-f35a-4827-b3c9-f945ab07b462","value":["n-by-2 matrix"]},{"name":"ij","purpose":"Grid positions","htmlid":"mw_8896fd3e-dd5b-4ae5-aae7-37b16db8a280","value":["n-by-2 matrix"]},{"name":"bottomLeft","purpose":"Location of output matrix in world or local coordinates","htmlid":"mw_d2ce598f-81c2-4ac3-8bf2-cde30590aeaa","value":["two-element vector","[xCoord yCoord]"]},{"name":"mapSize","purpose":"Subregion map size","htmlid":"mw_6f60ab30-a7bf-4d50-82c0-ab3de8511b44","value":["two-element vector","[x y]"]},{"name":"gridSize","purpose":"Output grid size","htmlid":"mw_d4c1bc42-1c0a-4159-b866-30eea3c24105","value":["two-element vector","[row col]"]},{"name":"topLeft","purpose":"Location of grid","htmlid":"mw_58028983-7c26-47c4-a178-dfacf71b4886","value":["two-element vector","[iCoord jCoord]"]}]}],"outputs":[{"name":"mapData","purpose":"Data values from map layer","htmlid":"mw_575aa8f5-f4e2-4ab2-81a0-c40521931226","value":["matrix"]},{"name":"inBounds","purpose":"Valid map locations","htmlid":"mw_3d386e2d-f3aa-4bb5-a56a-6df1a11f20c6","value":["n-by-1 column vector"]}],"examples":[{"url":"maplayer.getmapdata.html#mw_ef29c6d3-00be-4e58-a262-e13c56f31876","open_command":"openExample('nav\/StoreAndModifyXYVelocitiesUsingASingleMapLayerExample')","title":"Store and Modify XY Velocities Using A Single Map Layer"},{"url":"maplayer.getmapdata.html#mw_bea2cf95-eafb-4685-a712-5a74388275eb","open_command":"openExample('nav\/WriteCustomTransformFunctionsForMapLayersExample')","title":"Write Custom Transform Functions for Map Layers"}],"seealso":[{"url":"multilayermap.html","name":"multiLayerMap"},{"url":"occupancymap3d.html","name":"occupancyMap3D"},{"url":"occupancymap.html","name":"occupancyMap"},{"url":"binaryoccupancymap.html","name":"binaryOccupancyMap"},{"url":"signeddistancemap.html","name":"signedDistanceMap"},{"url":"maplayer.setmapdata.html","name":"setMapData"},{"url":"occupancymap.move.html","name":"move"},{"url":"occupancymap.syncwith.html","name":"syncWith"}]},{"href":"ref\/maplayer.html","refentity":[{"type":"object","name":"mapLayer"},{"type":"function","name":"mapLayer","fcntype":"constructor"}],"refpurpose":"Create map layer for N-dimensional data","introduced":"R2021a","description":"The mapLayer object creates an N-dimensional grid map, where the first two dimensions determine the footprint of the map, and all subsequent dimensions dictate the size and layout of the data stored in each cell.","syntaxgroup":[{"title":"","syntax":["map = mapLayer","map = mapLayer(mapData)","map = mapLayer(width,height)","map = mapLayer(rows,cols,'grid')","map = mapLayer(width,height,cellDims)","map = mapLayer(rows,cols,cellDims,'grid')","map = mapLayer(sourceMap)","map = mapLayer(___,Name=Value)"]}],"inputgroup":[{"title":"","inputs":[{"name":"mapData","purpose":"Map values","htmlid":"mw_42df8613-27e7-46e5-9c9b-196a80a9a473","value":["matrix","multidimensional array"]},{"name":"width","purpose":"Map width","htmlid":"mw_df829c1a-29d5-4739-8725-1690d52d9425_sep_mw_97eb5f63-cb20-4ee5-a76d-b952dceab72c","value":["positive numeric scalar"]},{"name":"height","purpose":"Map height","htmlid":"mw_df829c1a-29d5-4739-8725-1690d52d9425_sep_mw_c68ad401-45dc-479a-974c-cf1582a9634f","value":["positive numeric scalar"]},{"name":"rows","purpose":"Number of grid rows","htmlid":"mw_df829c1a-29d5-4739-8725-1690d52d9425_sep_mw_fbc605ff-63ca-4829-bff6-e3e134415637","value":["positive numeric integer"]},{"name":"cols","purpose":"Number of grid columns","htmlid":"mw_df829c1a-29d5-4739-8725-1690d52d9425_sep_mw_76eccead-94c7-43de-b59f-266b0c2679b9","value":["positive numeric integer"]},{"name":"cellDims","purpose":"Dimensions of cell data","htmlid":"mw_05c626a1-4cdb-4695-b932-d19580eadc09","value":["1","positive numeric integer","N-element vector of positive integers","M-by-N matrix of positive integers"],"defaultvalue":"1"},{"name":"sourceMap","purpose":"Source map layer","htmlid":"mw_02a9bee2-a771-462a-8d43-1cdc1ec70ec1","value":["mapLayer object"]}]}],"classpropertygroup":[{"classproperty":[{"name":"DataSize","purpose":"Size of the N-dimensional data matrix","htmlid":"mw_6ad3d395-3cad-4a89-a4ed-7266f9be929f","value":["[10 10]","vector of integers"],"defaultvalue":"[10 10]"},{"name":"DataType","purpose":"Data type of the values stored","htmlid":"mw_b821ed07-06c9-4f61-a09d-d6ed5b7cda0d","value":["'double'","character vector"],"defaultvalue":"'double'"},{"name":"DefaultValue","purpose":"Default value for unspecified map locations","htmlid":"mw_ba19f07a-0d40-43db-b402-102e821bb751","value":["0","numeric scalar"],"defaultvalue":"0"},{"name":"GetTransformFcn","purpose":"Applies transformations to retrieved values","htmlid":"mw_bc47b84b-9a46-4c91-b92a-38f44b7bf30d","value":["function handle"]},{"name":"GridLocationInWorld","purpose":"Location of the grid in local coordinates","htmlid":"mw_de819829-5907-4d13-8ff2-24dbcc2a68b0","value":["[0 0]","two-element vector","[xWorld yWorld]"],"defaultvalue":"[0 0]"},{"name":"GridOriginInLocal","purpose":"Location of the grid in local coordinates","htmlid":"mw_5887836c-00af-43aa-a814-992c8c7d2b29","value":["[0 0]","two-element vector","[xLocal yLocal]"],"defaultvalue":"[0 0]"},{"name":"GridSize","purpose":"Number of rows and columns in grid","htmlid":"mw_b59c8b9b-104c-4875-9528-d71c5f8ff6ee","value":["two-element integer-valued vector"]},{"name":"LayerName","purpose":"Name of layer","htmlid":"mw_002750ab-76d3-4039-b4a8-48ca6a900279","value":["'mapLayer'","character vector","string scalar"],"defaultvalue":"'mapLayer'"},{"name":"LocalOriginInWorld","purpose":"Location of the local frame in world coordinates","htmlid":"mw_cac51e82-6117-49f5-aad5-b420a02b3e3f","value":["[0 0]","two-element vector","[xWorld yWorld]"],"defaultvalue":"[0 0]"},{"name":"Resolution","readonly":true,"purpose":"Grid resolution","htmlid":"mw_fee08eef-240f-4085-accf-8d8887106c33","value":["1","scalar"],"defaultvalue":"1"},{"name":"SetTransformFcn","purpose":"Applies transformations to set values","htmlid":"mw_226fd918-330c-4a3e-b2dc-3da77092430b","value":["function handle"]},{"name":"XLocalLimits","readonly":true,"purpose":"Minimum and maximum values of x-coordinates in local frame","htmlid":"mw_bb6884d4-0bec-4f2b-a5fa-fdd99e42bc3d","value":["two-element vector"]},{"name":"YLocalLimits","readonly":true,"purpose":"Minimum and maximum values of y-coordinates in local frame","htmlid":"mw_7b900232-2424-4424-8326-0a86f6d65d3c","value":["two-element vector"]},{"name":"XWorldLimits","readonly":true,"purpose":"Minimum and maximum world range values of x-coordinates","htmlid":"mw_26edafe4-242f-4ec2-b607-dc47dcde9ef0","value":["two-element vector"]},{"name":"YWorldLimits","readonly":true,"purpose":"Minimum and maximum world range values of y-coordinates","htmlid":"mw_2def4f9c-e75f-45bf-97a3-af391cbfdca9","value":["two-element vector"]}]}],"objectfunctions":[{"title":"","functions":[{"name":"getMapData","url":"maplayer.getmapdata.html","description":"Retrieve data from map layer"},{"name":"grid2local","url":"occupancymap.grid2local.html","description":"Convert grid indices to local coordinates"},{"name":"grid2world","url":"occupancymap.grid2world.html","description":"Convert grid indices to world coordinates"},{"name":"local2grid","url":"occupancymap.local2grid.html","description":"Convert local coordinates to grid indices"},{"name":"local2world","url":"occupancymap.local2world.html","description":"Convert local coordinates to world coordinates"},{"name":"move","url":"occupancymap.move.html","description":"Move map in world frame"},{"name":"setMapData","url":"maplayer.setmapdata.html","description":"Assign data to map layer"},{"name":"syncWith","url":"occupancymap.syncwith.html","description":"Sync map with overlapping map"},{"name":"world2grid","url":"occupancymap.world2grid.html","description":"Convert world coordinates to grid indices"},{"name":"world2local","url":"occupancymap.world2local.html","description":"Convert world coordinates to local coordinates"}]}],"examples":[{"url":"maplayer.html#mw_e140cb45-a0bd-48c4-a030-bc8ed61c6db3","open_command":"openExample('nav\/StoreAndModifyXYVelocitiesUsingASingleMapLayerExample')","title":"Store and Modify XY Velocities Using A Single Map Layer"},{"url":"maplayer.html#mw_a9bceb2f-1d0f-43cd-806b-9888e15461d4","open_command":"openExample('nav\/WriteCustomTransformFunctionsForMapLayersExample')","title":"Write Custom Transform Functions for Map Layers"}],"seealso":[{"url":"multilayermap.html","name":"multiLayerMap"},{"url":"occupancymap3d.html","name":"occupancyMap3D"},{"url":"occupancymap.html","name":"occupancyMap"},{"url":"binaryoccupancymap.html","name":"binaryOccupancyMap"},{"url":"maplayer.getmapdata.html","name":"getMapData"},{"url":"maplayer.setmapdata.html","name":"setMapData"},{"url":"occupancymap.move.html","name":"move"},{"url":"occupancymap.syncwith.html","name":"syncWith"}]},{"href":"ref\/maplayer.setmapdata.html","refentity":[{"type":"function","name":"setMapData","fcntype":"instancemethod"},{"type":"method","name":"mapLayer.setMapData","fcntype":"instancemethod"},{"type":"method","name":"signedDistanceMap.setMapData","fcntype":"instancemethod"}],"refpurpose":"Assign data to map layer","introduced":"R2021a","description":"This MATLAB function overwrites all values in the map layer using a matrix with dimensions that match the map layer data dimensions, map.DataSize.","syntaxgroup":[{"title":"","syntax":["setMapData(map,mapData)","setMapData(map,xy,mapData)","setMapData(map,xy,mapData,\"local\")","setMapData(map,ij,mapData,\"grid\")","inBounds = setMapData(___)"]},{"title":"","syntax":["setMapData(map,bottomLeft,mapData)","setMapData(map,bottomLeft,mapData,\"local\")","setMapData(map,topLeft,mapData,\"grid\")"]}],"inputgroup":[{"title":"","inputs":[{"name":"map","purpose":"Map representation","htmlid":"mw_bae37b91-1a06-437f-be52-6ae5ec1a6354","value":["mapLayer object","signedDistanceMap"]},{"name":"mapData","purpose":"Data values for setting map layer","htmlid":"mw_acef1c39-3f4a-4292-8aa2-d4349a7372ca","value":["matrix"]},{"name":"topLeft","purpose":"Location of grid","htmlid":"mw_0a9a3b1e-5829-4bcd-a041-c5b33f207f46","value":["two-element vector","[iCoord jCoord]"]},{"name":"bottomLeft","purpose":"Location of output matrix in world or local coordinates","htmlid":"mw_088930b6-a543-4887-a1f0-1179ee71b80f","value":["two-element vector","[xCoord yCoord]"]},{"name":"ij","purpose":"Grid positions","htmlid":"mw_9ff0137c-6bd0-4aaf-8456-64b21da02606","value":["n-by-2 matrix"]},{"name":"xy","purpose":"World or local coordinates","htmlid":"mw_df714497-333b-4370-927f-248799fdb917","value":["n-by-2 matrix"]}]}],"outputs":[{"name":"inBounds","purpose":"Valid map locations","htmlid":"mw_7f552e1e-2cec-40e3-b385-cffeb0e63c65","value":["n-by-1 column vector"]}],"examples":[{"url":"maplayer.setmapdata.html#mw_11f5c1fa-5bda-44ff-806d-e42dfcb5f922","open_command":"openExample('nav\/StoreAndModifyXYVelocitiesUsingASingleMapLayerExample')","title":"Store and Modify XY Velocities Using A Single Map Layer"},{"url":"maplayer.setmapdata.html#mw_d3050211-b1c5-4a11-930d-d9fab1dddd1b","open_command":"openExample('nav\/WriteCustomTransformFunctionsForMapLayersExample')","title":"Write Custom Transform Functions for Map Layers"}],"seealso":[{"url":"multilayermap.html","name":"multiLayerMap"},{"url":"occupancymap3d.html","name":"occupancyMap3D"},{"url":"occupancymap.html","name":"occupancyMap"},{"url":"binaryoccupancymap.html","name":"binaryOccupancyMap"},{"url":"signeddistancemap.html","name":"signedDistanceMap"},{"url":"maplayer.getmapdata.html","name":"getMapData"},{"url":"occupancymap.move.html","name":"move"},{"url":"occupancymap.syncwith.html","name":"syncWith"}]},{"href":"ref\/mapmaze.html","refentity":[{"type":"function","name":"mapMaze","fcntype":"simple"}],"refpurpose":"Generate random 2-D maze map","introduced":"R2021a","description":"This MATLAB function generates a random 2-D maze map, map, as a binaryOccupancyMap object with a width and height of 50 meters and a resolution of 5 cells per meter.","syntaxgroup":[{"title":"","syntax":["map = mapMaze","map = mapMaze(passageWidth)","map = mapMaze(passageWidth,wallThickness)","map = mapMaze(___,Name,Value)"]}],"inputgroup":[{"title":"","inputs":[{"name":"passageWidth","purpose":"Width of maze passage","htmlid":"mw_07efc8c8-852d-41cd-b967-ae393386b6a7","value":["4","positive integer"],"defaultvalue":"4"},{"name":"wallThickness","purpose":"Thickness of maze wall","htmlid":"mw_977ce8c9-1e35-4f8b-8d0d-5ea8c6392a1a","value":["1","positive integer"],"defaultvalue":"1"}]},{"namevaluepairs":[{"title":"","inputs":[{"name":"MapSize","purpose":"Width and height of generated map","htmlid":"mw_514dd273-b9f1-4786-a76b-fb455290322d","value":["[50 50]","two-element vector of positive real finite numbers"],"defaultvalue":"[50 50]"},{"name":"MapResolution","purpose":"Resolution of generated map","htmlid":"mw_4cf44684-58bb-420b-8742-9ec6555182ec","value":["5","positive real scalar"],"defaultvalue":"5"}]}]}],"outputs":[{"name":"map","purpose":"Random maze map","htmlid":"mw_d4742533-5c89-4e8f-826e-413df188c824","value":["binaryOccupancyMap object"]}],"examples":[{"url":"mapmaze.html#mw_3c1c2e15-8353-4e1a-9bdb-5d9452cf9a82","open_command":"openExample('nav\/GenerateRandomMazeMapExample')","title":"Generate Random Maze Map"}],"seealso":[{"url":"mapclutter.html","name":"mapClutter"},{"url":"binaryoccupancymap.html","name":"binaryOccupancyMap"},{"url":"validatoroccupancymap.html","name":"validatorOccupancyMap"}]},{"href":"ref\/marggpsfuser.correct.html","refentity":[{"type":"function","name":"correct","fcntype":"instancemethod"},{"type":"method","name":"MARGGPSFuser.correct","fcntype":"instancemethod"}],"refpurpose":"Correct states using direct state measurements for insfilterMARG","introduced":"R2018b","description":"This MATLAB function corrects the state and state estimation error covariance based on the measurement and measurement covariance.","syntaxgroup":[{"title":"","syntax":["correct(FUSE,idx,measurement,measurementCovariance)"]}],"inputgroup":[{"title":"","inputs":[{"name":"FUSE","purpose":"insfilterMARG object","htmlid":"mw_4ca6b10a-e042-43f1-bc43-e63ee64c32cf","value":["object"]},{"name":"idx","purpose":"State vector Index of measurement to correct","htmlid":"mw_f2f3df33-ecbb-43ac-85a0-4cdc90bce5d7","value":["N-element vector of increasing integers in the range [1,22]"]},{"name":"measurement","purpose":"Direct measurement of state","htmlid":"mw_ab180939-015d-43f4-b8c3-7a1b546aa003","value":["N-element vector"]},{"name":"measurementCovariance","purpose":"Covariance of measurement","htmlid":"mw_f9bf41bb-60cd-490e-88c7-7e46c0206794","value":["scalar","N-element vector","N-by-N matrix"]}]}],"examples":[{"url":"marggpsfuser.correct.html#mw_27bbb1e2-a4a2-4c62-9ff3-0a1055ce7616","open_command":"openExample('shared_positioning\/CorrectInsfilterMARGUsingDirectMeasurementExample')","title":"Correct insfilterMARG Using Direct Measurement"}],"seealso":[{"url":"insfiltermarg.html","name":"insfilterMARG"},{"url":"insfilter.html","name":"insfilter"}]},{"href":"ref\/marggpsfuser.fusegps.html","refentity":[{"type":"function","name":"fusegps","fcntype":"instancemethod"},{"type":"method","name":"MARGGPSFuser.fusegps","fcntype":"instancemethod"}],"refpurpose":"Correct states using GPS data for insfilterMARG","introduced":"R2018b","description":"This MATLAB function fuses GPS position data to correct the state estimate.","syntaxgroup":[{"title":"","syntax":["[res,resCov] = fusegps(FUSE,position,positionCovariance)","[res,resCov] = fusegps(FUSE,position,positionCovariance,velocity,velocityCovariance)"]}],"inputgroup":[{"title":"","inputs":[{"name":"FUSE","purpose":"insfilterMARG object","htmlid":"mw_e9e44aaa-54e3-41d4-a4e2-fa3b1bad7b93","value":["object"]},{"name":"position","purpose":"Position of GPS receiver (LLA)","htmlid":"mw_5d9a46aa-f546-492d-aec1-e58c5f362af9","value":["three-element row vector"]},{"name":"positionCovariance","purpose":"Position measurement covariance of GPS receiver (m^{2})","htmlid":"mw_45650be8-1ac4-4791-8d02-d0d893c85a6f","value":["3-by-3 matrix"]},{"name":"velocity","purpose":"Velocity of GPS receiver in local NED coordinate system (m\/s)","htmlid":"mw_f9c1a237-410e-42f2-8cb1-e066c3711f7d","value":["three-element row vector"]},{"name":"velocityCovariance","purpose":"Velocity measurement covariance of GPS receiver (m^{2}\/s^{2})","htmlid":"mw_b5e41edb-50f0-4a52-8f24-bae1270399ed","value":["3-by-3 matrix"]}]}],"outputs":[{"name":"res","purpose":"Residuals","htmlid":"mw_94714cf7-221c-4bc5-8774-a766cc61ca88","value":["three-element row vector of real values","six-element row vector of real values"]},{"name":"resCov","purpose":"Residual covariance","htmlid":"mw_be854363-7ffb-4aef-ac7a-bb01bcec1be2","value":["3-by-3 matrix of real values","6-by-6 matrix of real values"]}],"examples":[{"url":"marggpsfuser.fusegps.html#mw_0e882d5e-a1b1-4e4e-befa-edc37df31b26","open_command":"openExample('shared_positioning\/FuseGPSDataUsingInsfilterMARGExample')","title":"Fuse GPS Data Using insfilterMARG"}],"seealso":[{"url":"insfilter.html","name":"insfilter"},{"url":"insfiltermarg.html","name":"insfilterMARG"}]},{"href":"ref\/marggpsfuser.fusemag.html","refentity":[{"type":"function","name":"fusemag","fcntype":"instancemethod"},{"type":"method","name":"MARGGPSFuser.fusemag","fcntype":"instancemethod"}],"refpurpose":"Correct states using magnetometer data for insfilterMARG","introduced":"R2018b","description":"This MATLAB function fuses magnetometer data to correct the state estimate.","syntaxgroup":[{"title":"","syntax":["[res,resCov] = fusemag(FUSE,magReadings,magReadingsCovariance)"]}],"inputgroup":[{"title":"","inputs":[{"name":"FUSE","purpose":"insfilterMARG object","htmlid":"mw_a43990b8-1695-446a-9e00-436374c0470e","value":["object"]}]},{"title":"","inputs":[{"name":"magReadings","purpose":"Magnetometer readings (µT)","htmlid":"mw_fa6fb176-1e33-4def-8bde-4efac9527c27","value":["3-element row vector"]},{"name":"magReadingsCovariance","purpose":"Magnetometer readings error covariance (µT^{2})","htmlid":"mw_c05c0872-7433-4158-b64b-8c094a197d73","value":["scalar","3-element row vector","3-by-3 matrix"]}]}],"outputs":[{"name":"res","purpose":"Residual","htmlid":"mw_81b69196-a8af-4ee4-a16b-e3c419818d5e","value":["1-by-3 vector of real values"]},{"name":"resCov","purpose":"Residual covariance","htmlid":"mw_2aab5fd3-de63-4f78-ab75-62e47e070b8e","value":["3-by-3 matrix of real values"]}],"examples":[{"url":"marggpsfuser.fusemag.html#mw_a3535016-f104-4d81-81e4-883c58dd1b97","open_command":"openExample('shared_positioning\/FuseMagnetometerDataFromInsfilterMARGExample')","title":"Fuse Magnetometer Data from insfilterMARG"}],"seealso":[{"url":"insfiltermarg.html","name":"insfilterMARG"},{"url":"insfilter.html","name":"insfilter"}]},{"href":"ref\/marggpsfuser.pose.html","refentity":[{"type":"function","name":"pose","fcntype":"instancemethod"},{"type":"method","name":"MARGGPSFuser.pose","fcntype":"instancemethod"}],"refpurpose":"Current orientation and position estimate for insfilterMARG","introduced":"R2018b","description":"This MATLAB function returns the current estimate of the pose and velocity.","syntaxgroup":[{"title":"","syntax":["[position,orientation,velocity] = pose(FUSE)","[position,orientation,velocity] = pose(FUSE,format)"]}],"inputgroup":[{"title":"","inputs":[{"name":"FUSE","purpose":"insfilterMARG object","htmlid":"mw_1d212496-e70f-4db6-ab0a-7de49a406a11","value":["object"]},{"name":"format","purpose":"Output orientation format","htmlid":"mw_9c06d9b2-6ba2-4f1e-b090-cb8b8163074f","value":["'quaternion'","'rotmat'"],"defaultvalue":"'quaternion'"}]}],"outputs":[{"name":"position","purpose":"Position estimate expressed in the local coordinate system (m)","htmlid":"mw_cd6e68a5-f00f-4e6d-aad7-112d0eac794a","value":["3-element row vector"]},{"name":"orientation","purpose":"Orientation estimate expressed in the local coordinate system","htmlid":"mw_e0cab7e1-6d8b-4973-96f8-99a75cc6dd8d","value":["quaternion","3-by-3 rotation matrix"]},{"name":"velocity","purpose":"Velocity estimate expressed in local coordinate system (m\/s)","htmlid":"mw_7cef08b8-c64d-4820-b7cc-350acffa6911","value":["3-element row vector"]}],"examples":[{"url":"marggpsfuser.pose.html#mw_86a04f73-6115-4b19-bb3d-b2aba782f6d9","open_command":"openExample('shared_positioning\/ObtainPoseFromInsfilterMARGExample')","title":"Obtain Pose from insfilterMARG"}],"seealso":[{"url":"insfiltermarg.html","name":"insfilterMARG"},{"url":"insfilter.html","name":"insfilter"}]},{"href":"ref\/marggpsfuser.predict.html","refentity":[{"type":"function","name":"predict","fcntype":"instancemethod"},{"type":"method","name":"MARGGPSFuser.predict","fcntype":"instancemethod"}],"refpurpose":"Update states using accelerometer and gyroscope data for insfilterMARG","introduced":"R2018b","description":"This MATLAB function fuses accelerometer and gyroscope data to update the state estimate.","syntaxgroup":[{"title":"","syntax":["predict(FUSE,accelReadings,gyroReadings)"]}],"inputgroup":[{"title":"","inputs":[{"name":"FUSE","purpose":"insfilterMARG object","htmlid":"mw_3f768ae5-9a71-4fb0-b9a9-cc45fe4384d8","value":["object"]},{"name":"accelReadings","purpose":"Accelerometer readings in local sensor body coordinate system (m\/s^{2})","htmlid":"mw_f00c26fd-baf3-4b12-9ea5-a9a8ed51fd35","value":["3-element row vector"]},{"name":"gyroReadings","purpose":"Gyroscope readings in local sensor body coordinate system (rad\/s)","htmlid":"mw_b872190d-b845-4475-8f82-5848f4dfabcf","value":["3-element row vector"]}]}],"examples":[{"url":"marggpsfuser.predict.html#mw_987bd5ad-ce7b-4ea9-9853-2718fafd51fb","open_command":"openExample('shared_positioning\/PredictStateUsingInsfilterMARGExample')","title":"Predict State Using insfilterMARG"}],"seealso":[{"url":"insfiltermarg.html","name":"insfilterMARG"},{"url":"insfilter.html","name":"insfilter"}]},{"href":"ref\/marggpsfuser.reset.html","refentity":[{"type":"function","name":"reset","fcntype":"instancemethod"},{"type":"method","name":"MARGGPSFuser.reset","fcntype":"instancemethod"}],"refpurpose":"Reset internal states for insfilterMARG","introduced":"R2018b","description":"This MATLAB function resets the State, StateCovariance, and internal integrators to their default values.","syntaxgroup":[{"title":"","syntax":["reset(FUSE)"]}],"inputgroup":[{"title":"","inputs":[{"name":"FUSE","purpose":"insfilterMARG object","htmlid":"mw_051e309d-836d-40ad-8bed-61451dcac105","value":["object"]}]}],"examples":[{"url":"marggpsfuser.reset.html#mw_5e8d879e-aa77-4e02-9703-f2b910b76fb4","open_command":"openExample('shared_positioning\/ResetStateOfInsfilterMARGExample')","title":"Reset State of insfilterMARG"}],"seealso":[{"url":"insfiltermarg.html","name":"insfilterMARG"},{"url":"insfilter.html","name":"insfilter"}]},{"href":"ref\/marggpsfuser.stateinfo.html","refentity":[{"type":"function","name":"stateinfo","fcntype":"instancemethod"},{"type":"method","name":"MARGGPSFuser.stateinfo","fcntype":"instancemethod"}],"refpurpose":"Display state vector information for insfilterMARG","introduced":"R2018b","description":"This MATLAB function displays the meaning of each index of the State property and the associated units.","syntaxgroup":[{"title":"","syntax":["stateinfo(FUSE)","info = stateinfo(FUSE)"]}],"inputgroup":[{"title":"","inputs":[{"name":"FUSE","purpose":"insfilterMARG object","htmlid":"mw_cf3ca7e7-12b4-4a8e-a96a-b135bf87ccc9","value":["object"]}]},{"title":"","inputs":[{"name":"info","purpose":"State information","htmlid":"mw_1c3d496c-b867-43e5-b839-104c40f31415_sep_mw_a793f7e0-4b76-4fff-a134-c6e8cb55079e","value":["structure"]}]}],"examples":[{"url":"marggpsfuser.stateinfo.html#mw_f8b21369-7737-4f5d-82e7-db9b96c4576f","open_command":"openExample('shared_positioning\/StateInformationOfInsfilterMARGExample')","title":"State Information of insfilterMARG"}],"seealso":[{"url":"insfiltermarg.html","name":"insfilterMARG"},{"url":"insfilter.html","name":"insfilter"}]},{"href":"ref\/matchscans.html","refentity":[{"type":"function","name":"matchScans","fcntype":"simple"}],"refpurpose":"Estimate pose between two laser scans","introduced":"R2019b","description":"This MATLAB function finds the relative pose between a reference lidarScan and a current lidarScan object using the normal distributions transform (NDT).","syntaxgroup":[{"title":"","syntax":["pose = matchScans(currScan,refScan)","pose = matchScans(currRanges,currAngles,refRanges,refAngles)","[pose,stats] = matchScans(___)","[___] = matchScans(___,Name,Value)"]}],"inputgroup":[{"title":"","inputs":[{"name":"currScan","purpose":"Current lidar scan readings","htmlid":"d126e16371","value":["lidarScan object"]},{"name":"refScan","purpose":"Reference lidar scan readings","htmlid":"d126e16401","value":["lidarScan object"]},{"name":"currRanges","purpose":"Current laser scan ranges","htmlid":"bvlvwfu-1-currRanges","value":["vector in meters"]},{"name":"currAngles","purpose":"Current laser scan angles","htmlid":"bvlvwfu-1-currAngles","value":["vector in radians"]},{"name":"refRanges","purpose":"Reference laser scan ranges","htmlid":"bvlvwfu-1-refRanges","value":["vector in meters"]},{"name":"refAngles","purpose":"Reference laser scan angles","htmlid":"bvlvwfu-1-refAngles","value":["vector in radians"]}]},{"namevaluepairs":[{"title":"","inputs":[{"name":"SolverAlgorithm","purpose":"Optimization algorithm","htmlid":"d126e16537","value":["\"trust-region\"","\"fminunc\""],"defaultvalue":"\"trust-region\""},{"name":"InitialPose","purpose":"Initial guess of current pose","htmlid":"bvlvwfu-1-InitialPose","value":["[0 0 0]","[x y theta]"],"defaultvalue":"[0 0 0]"},{"name":"CellSize","purpose":"Length of cell side","htmlid":"bvlvwfu-1-CellSize","value":["1","numeric scalar"],"defaultvalue":"1"},{"name":"MaxIterations","purpose":"Maximum number of iterations","htmlid":"bvlvwfu-1-MaxIterations","value":["400","scalar integer"],"defaultvalue":"400"},{"name":"ScoreTolerance","purpose":"Lower bounds on the change in NDT score","htmlid":"bvlvwfu-1-ScoreTolerance","value":["1e-6","numeric scalar"],"defaultvalue":"1e-6"}]}]}],"outputs":[{"name":"pose","purpose":"Pose of current scan","htmlid":"bvlvwfu-1-pose","value":["[x y theta]"]},{"name":"stats","purpose":"Scan matching statistics","htmlid":"bvlvwfu-1-stats","value":["structure"]}],"examples":[{"url":"matchscans.html#mw_1a30b312-7359-452d-b0b7-a8b6a87e3d8d","open_command":"openExample('nav\/MatchLidarScansExample')","title":"Match Lidar Scans"},{"url":"matchscans.html#mw_ce584a01-34b5-4833-b03b-62da756bc7bf","open_command":"openExample('nav\/MatchLaserScansExample')","title":"Match Laser Scans"}],"seealso":[{"url":"matchscansgrid.html","name":"matchScansGrid"},{"url":"matchscansline.html","name":"matchScansLine"},{"url":"lidarscan.transformscan.html","name":"transformScan"},{"url":"lidarscan.html","name":"lidarScan"},{"url":"occupancymap.html","name":"occupancyMap"},{"url":"montecarlolocalization-system-object.html","name":"monteCarloLocalization"}]},{"href":"ref\/matchscansgrid.html","refentity":[{"type":"function","name":"matchScansGrid","fcntype":"simple"}],"refpurpose":"Estimate pose between two lidar scans using grid-based search","introduced":"R2019b","description":"This MATLAB function finds the relative pose between a reference lidarScan and a current lidarScan object using a grid-based search.","syntaxgroup":[{"title":"","syntax":["pose = matchScansGrid(currScan,refScan)","[pose,stats] = matchScansGrid(___)","[___] = matchScansGrid(___,Name,Value)"]}],"inputgroup":[{"title":"","inputs":[{"name":"currScan","purpose":"Current lidar scan readings","htmlid":"d126e17018","value":["lidarScan object"]},{"name":"refScan","purpose":"Reference lidar scan readings","htmlid":"d126e17048","value":["lidarScan object"]}]},{"namevaluepairs":[{"title":"","inputs":[{"name":"InitialPose","purpose":"Initial guess of current pose","htmlid":"d126e17101","value":["[0 0 0]","[x y theta]"],"defaultvalue":"[0 0 0]"}]},{"title":"","inputs":[{"name":"Resolution","purpose":"Grid cells per meter","htmlid":"d126e17133","value":["20","positive integer"],"defaultvalue":"20"},{"name":"MaxRange","purpose":"Maximum range of lidar sensor","htmlid":"d126e17156","value":["8","positive scalar"],"defaultvalue":"8"},{"name":"TranslationSearchRange","purpose":"Search range for translation","htmlid":"d126e17179","value":["[4 4]","[x y] vector"],"defaultvalue":"[4 4]"},{"name":"RotationSearchRange","purpose":"Search range for rotation","htmlid":"d126e17219","value":["pi\/4","positive scalar"],"defaultvalue":"pi\/4"}]}]}],"outputs":[{"name":"pose","purpose":"Pose of current scan","htmlid":"d126e17259","value":["[x y theta] vector"]},{"name":"stats","purpose":"Scan matching statistics","htmlid":"d126e17285","value":["structure"]}],"examples":[{"url":"matchscansgrid.html#mw_22f48cde-e2f7-4817-8bc8-9868fb04b69a","open_command":"openExample('nav\/MatchScansUsingGridBasedSearchExample')","title":"Match Scans Using Grid-Based Search"}],"seealso":[{"url":"matchscans.html","name":"matchScans"},{"url":"matchscansline.html","name":"matchScansLine"},{"url":"lidarscan.html","name":"lidarScan"},{"url":"lidarscan.transformscan.html","name":"transformScan"},{"url":"lidarslam.html","name":"lidarSLAM"}]},{"href":"ref\/matchscansline.html","refentity":[{"type":"function","name":"matchScansLine","fcntype":"simple"}],"refpurpose":"Estimate pose between two laser scans using line features","introduced":"R2020a","description":"This MATLAB function estimates the relative pose between two scans based on matched line features identified in each scan.","syntaxgroup":[{"title":"","syntax":["relpose = matchScansLine(currScan,refScan,initialRelPose)","[relpose,stats] = matchScansLine(___)","[relpose,stats,debugInfo] = matchScansLine(___)","[___] = matchScansLine(___,Name,Value)"]}],"inputgroup":[{"title":"","inputs":[{"name":"currScan","purpose":"Current lidar scan readings","htmlid":"mw_311cfcd2-61b7-49df-80b6-e84155da0e31","value":["lidarScan object"]},{"name":"refScan","purpose":"Reference lidar scan readings","htmlid":"mw_d94839f0-90b3-4d16-b594-47a8972457e0","value":["lidarScan object"]},{"name":"initialRelPose","purpose":"Initial guess of relative pose","htmlid":"mw_bda0f2bc-0f0a-4598-b67d-1beaa5fbedce","value":["[x y theta]"]}]},{"namevaluepairs":[{"title":"","inputs":[{"name":"SmoothnessThreshold","purpose":"Threshold to detect line break points in scan","htmlid":"mw_5898fc2e-e298-4622-b08e-31e055f4339f","value":["0.1","scalar"],"defaultvalue":"0.1"},{"name":"MinPointsPerLine","purpose":"Minimum number of scan points in each line feature","htmlid":"mw_938865ab-a8a1-4c9c-8cb2-9aca878bab7c","value":["10","positive integer greater than 3"],"defaultvalue":"10"},{"name":"LineMergeThreshold","purpose":"Threshold on line parameters to merge line features","htmlid":"mw_9f418cd8-4cca-4e22-a183-dc13c7261692","value":["[0.05 0.1]","two-element vector [rho alpha]"],"defaultvalue":"[0.05 0.1]"},{"name":"MinCornerProminence","purpose":"Lower bound on prominence value to detect a corner","htmlid":"mw_b6c16b5f-af43-4abd-81d2-dc28569ea5f0","value":["0.05","positive scalar"],"defaultvalue":"0.05"},{"name":"CompatibilityScale","purpose":"Scale used to adjust the compatibility thresholds for feature association","htmlid":"mw_9e908a97-7243-4dc9-9209-ac7b7d236635","value":["0.0005","positive scalar"],"defaultvalue":"0.0005"}]}]}],"outputs":[{"name":"relpose","purpose":"Pose of current scan","htmlid":"mw_9ca12f61-017c-497e-88b3-0109f5081bcf","value":["[x y theta]"]},{"name":"stats","purpose":"Scan matching information","htmlid":"mw_faa149f5-151e-4e87-87c6-4bdcdc93677b","value":["structure"]},{"name":"debugInfo","purpose":"Debugging information for line-based scan matching result","htmlid":"mw_82663ddd-ccdd-49c9-9731-30da09aa88d7","value":["structure"]}],"examples":[{"url":"matchscansline.html#mw_aedf89ab-50b9-4557-89c2-17698a3e644a","open_command":"openExample('nav\/EstimatePoseOfScansWithLineFeaturesExample')","title":"Estimate Pose of Scans with Line Features"}],"seealso":[{"url":"matchscans.html","name":"matchScans"},{"url":"matchscansgrid.html","name":"matchScansGrid"},{"url":"lidarslam.html","name":"lidarSLAM"}]},{"href":"ref\/meshtsdf.activevoxels.html","refentity":[{"type":"function","name":"activeVoxels","fcntype":"instancemethod"},{"type":"method","name":"meshtsdf.activeVoxels","fcntype":"instancemethod"}],"refpurpose":"Return information about active voxels","introduced":"R2024a","description":"This MATLAB function returns the IDs, centers, distance values, and sizes of active voxels for each mesh in the truncated signed distance field (TSDF).","syntaxgroup":[{"title":"","syntax":["voxelStruct = activeVoxels(mTSDF)","voxelStruct = activeVoxels(mTSDF,id)"]}],"inputgroup":[{"title":"","inputs":[{"name":"mTSDF","purpose":"Truncated signed distance field for 3-D meshes","htmlid":"mw_meshtsdf_activevoxels-a628-4a32-811c-b3a9b5f961b8_sep_mw_3ec7e5cb-640e-4e8f-8133-a629c3c6328a","value":["meshtsdf object"]},{"name":"id","purpose":"ID of mesh from which to get active voxels information","htmlid":"mw_f39eaf49-082f-4267-b53a-54540357f697","value":["nonnegative integer","N-element vector of nonnegative integers"]}]}],"outputs":[{"name":"voxelStruct","purpose":"Active voxel information for each mesh in TSDF","htmlid":"mw_e6fff08f-bea8-4109-a305-8c8991c11ce2","value":["structure","N-element array of structures"]}],"seealso":[{"url":"meshtsdf.html","name":"meshtsdf"},{"url":"meshtsdf.poses.html","name":"poses"}]},{"href":"ref\/meshtsdf.addmesh.html","refentity":[{"type":"function","name":"addMesh","fcntype":"instancemethod"},{"type":"method","name":"meshtsdf.addMesh","fcntype":"instancemethod"}],"refpurpose":"Add mesh to mesh TSDF","introduced":"R2024a","description":"This MATLAB function adds one or more meshes to the truncated signed distance field (TSDF), computes the TSDF around the added meshes, and returns an indication of which meshes were successfully added.","syntaxgroup":[{"title":"","syntax":["isAdded = addMesh(mTSDF,meshStruct)"]}],"inputgroup":[{"title":"","inputs":[{"name":"mTSDF","purpose":"Truncated signed distance field for 3-D meshes","htmlid":"mw_meshtsdf_addmesh-47bc-a4ae-c2e035a06499_sep_mw_3ec7e5cb-640e-4e8f-8133-a629c3c6328a","value":["meshtsdf object"]},{"name":"meshStruct","purpose":"Geometry mesh structure","htmlid":"mw_5fe2c333-f249-4b6a-8cbb-bdfbf71de6d3","value":["structure","N-element structure array"]}]}],"outputs":[{"name":"isAdded","purpose":"Indication of whether meshes were added or not","htmlid":"mw_f6fd9bdc-8317-48aa-998d-331c1d0faf9b","value":["true or 1","false or 0","N-element vector of logical scalars"]}],"examples":[{"url":"meshtsdf.addmesh.html#mw_62472be5-de3e-454a-87b2-a955914b896f","open_command":"openExample('nav\/AddMeshesToMeshTSDFManagerExample')","title":"Add Meshes to Mesh TSDF Manager"}],"seealso":[{"url":"meshtsdf.html","name":"meshtsdf"},{"url":"meshtsdf.removemesh.html","name":"removeMesh"},{"url":"geom2struct.html","name":"geom2struct"}]},{"href":"ref\/meshtsdf.copy.html","refentity":[{"type":"function","name":"copy","fcntype":"instancemethod"},{"type":"method","name":"meshtsdf.copy","fcntype":"instancemethod"}],"refpurpose":"Deep copy TSDF","introduced":"R2024a","description":"This MATLAB function creates a deep copy of the meshtsdf object with the same property values.","syntaxgroup":[{"title":"","syntax":["mTSDFCopy = copy(mTSDF)"]}],"inputgroup":[{"title":"","inputs":[{"name":"mTSDF","purpose":"Truncated signed distance field for 3-D meshes","htmlid":"mw_meshtsdf_copy-6b95-4534-95af-b759cfc167bd_sep_mw_3ec7e5cb-640e-4e8f-8133-a629c3c6328a","value":["meshtsdf object"]}]}],"outputs":[{"name":"mTSDFCopy","purpose":"Deep copy of TSDF","htmlid":"mw_87c69347-a0cb-4a43-8871-06aabbc83e6a","value":["meshtsdf object"]}],"seealso":[{"url":"meshtsdf.html","name":"meshtsdf"}]},{"href":"ref\/meshtsdf.distance.html","refentity":[{"type":"function","name":"distance","fcntype":"instancemethod"},{"type":"method","name":"meshtsdf.distance","fcntype":"instancemethod"}],"refpurpose":"Compute distance to zero level set for query points","introduced":"R2024a","description":"This MATLAB function returns the distance computed from the discrete distances in the truncated signed distance field (TSDF) for each of the specified query points.","syntaxgroup":[{"title":"","syntax":["dist = distance(mTSDF,points)","dist = distance(mTSDF,points,InterpolationMethod=interp)"]}],"inputgroup":[{"title":"","inputs":[{"name":"mTSDF","purpose":"Truncated signed distance field for 3-D meshes","htmlid":"mw_meshtsdf_distance-d940-4541-b3fc-b5192cb98b8c_sep_mw_3ec7e5cb-640e-4e8f-8133-a629c3c6328a","value":["meshtsdf object"]},{"name":"points","purpose":"Query points","htmlid":"mw_meshtsdf_distance-d940-4541-b3fc-b5192cb98b8c_sep_mw_596c9c95-0d78-4a21-9be7-14221f39033f","value":["N-by-3 matrix"]},{"name":"interp","purpose":"Interpolation method","htmlid":"mw_e7d5e2f2-ffe8-4ff2-a5bd-4638971cda83","value":["\"nearest\"","\"linear\"","\"quadratic\""],"defaultvalue":"\"nearest\""}]}],"outputs":[{"name":"dist","purpose":"Distance value of voxel at each query point","htmlid":"mw_meshtsdf_distance-d940-4541-b3fc-b5192cb98b8c_sep_mw_22fed117-fc39-4a3a-8082-aa0bf8a86b53","value":["N-element vector"]}],"seealso":[{"url":"meshtsdf.html","name":"meshtsdf"},{"url":"meshtsdf.gradient.html","name":"gradient"}]},{"href":"ref\/meshtsdf.gradient.html","refentity":[{"type":"function","name":"gradient","fcntype":"instancemethod"},{"type":"method","name":"meshtsdf.gradient","fcntype":"instancemethod"}],"refpurpose":"Compute gradient of truncated signed distance field","introduced":"R2024a","description":"This MATLAB function returns the gradient computed from distance values in the vicinity of the specified query points in the truncated signed distance field (TSDF).","syntaxgroup":[{"title":"","syntax":["grad = gradient(mTSDF,points)","grad = gradient(mTSDF,points,InterpolationMethod=interp)"]}],"inputgroup":[{"title":"","inputs":[{"name":"mTSDF","purpose":"Truncated signed distance field for 3-D meshes","htmlid":"mw_meshtsdf_gradient-d232-4ae1-b8ed-e47eb788de5b_sep_mw_3ec7e5cb-640e-4e8f-8133-a629c3c6328a","value":["meshtsdf object"]},{"name":"points","purpose":"Query points","htmlid":"mw_65a7761c-7c6a-4a8d-baae-811a09d84a30","value":["N-by-3 matrix"]},{"name":"interp","purpose":"Interpolation method","htmlid":"mw_meshtsdf_gradient-d232-4ae1-b8ed-e47eb788de5b_sep_mw_6848d353-d2b6-4297-8cb0-2d9ed32ebacb","value":["\"linear\"","\"quadratic\""],"defaultvalue":"\"linear\""}]}],"outputs":[{"name":"grad","purpose":"Gradient value of voxel at each query point","htmlid":"mw_meshtsdf_gradient-d232-4ae1-b8ed-e47eb788de5b_sep_mw_ebceccc1-c8ee-4056-8766-cf17b86eb8ad","value":["N-element vector"]}],"seealso":[{"url":"meshtsdf.html","name":"meshtsdf"},{"url":"meshtsdf.distance.html","name":"distance"}]},{"href":"ref\/meshtsdf.html","refentity":[{"type":"object","name":"meshtsdf"},{"type":"function","name":"meshtsdf","fcntype":"constructor"}],"refpurpose":"Truncated signed distance field for 3-D regions containing meshes","introduced":"R2024a","description":"The meshtsdf discretizes meshes and stores their associated truncated signed distance fields (TSDF) over a voxelized 3-D space.","syntaxgroup":[{"title":"","syntax":["mTSDF = meshtsdf","mTSDF = meshtsdf(meshStruct)","mTSDF = meshtsdf(___,Name=Value)"]}],"inputgroup":[{"title":"","inputs":[{"name":"meshStruct","purpose":"Geometry mesh structure","htmlid":"mw_01facf2a-cb23-4c4a-93cf-ae0b9f7c54d9","value":["structure","N-element structure array"]}]}],"classpropertygroup":[{"classproperty":[{"name":"Resolution","readonly":true,"purpose":"Grid resolution","htmlid":"mw_f837cff8-6977-4ce9-8ac7-cb199187a0cc","value":["1","positive numeric scalar"],"defaultvalue":"1"},{"name":"TruncationDistance","readonly":true,"purpose":"Maximum distance to mesh surface","htmlid":"mw_39335cec-41c7-40b5-8543-48dd3448fe1e","value":["3\/Resolution","numeric scalar greater than 3\/Resolution"],"defaultvalue":"3\/Resolution"},{"name":"FillInterior","readonly":true,"purpose":"Distance calculation mode for voxels inside meshes","htmlid":"mw_b9589a25-3de0-4c24-907d-40cd4510c829","value":["true","false"],"defaultvalue":"true"},{"name":"MeshID","readonly":true,"purpose":"IDs of meshes in TSDF","htmlid":"mw_ac5301c8-42f3-4159-8e63-255a004b6ca1","value":["empty","N-element vector of nonnegative integers"],"defaultvalue":"empty"},{"name":"NumMesh","readonly":true,"purpose":"Number of discretized meshes in TSDF","htmlid":"mw_185c5b9c-b8e9-4fba-9de4-bd31f7fb6d5f","value":["0","positive integer"],"defaultvalue":"0"},{"name":"MapLimits","readonly":true,"purpose":"Minimum and maximum limits that contain all active voxels of TSDF","htmlid":"mw_0aeb6489-f627-4546-85f0-c44ebe6a20cb","value":["zeros(2,3)","2-by-3 matrix"],"defaultvalue":"zeros(2,3)"},{"name":"NumActiveVoxel","readonly":true,"purpose":"Number of active voxels in TSDF","htmlid":"mw_cd28bf35-192c-4e8a-b8ee-737efc132b51","value":["0","positive integer"],"defaultvalue":"0"}]}],"objectfunctions":[{"title":"","functions":[{"name":"activeVoxels","url":"meshtsdf.activevoxels.html","description":"Return information about active voxels"},{"name":"addMesh","url":"meshtsdf.addmesh.html","description":"Add mesh to mesh TSDF"},{"name":"copy","url":"meshtsdf.copy.html","description":"Deep copy TSDF"},{"name":"removeMesh","url":"meshtsdf.removemesh.html","description":"Remove mesh from mesh TSDF"},{"name":"distance","url":"meshtsdf.distance.html","description":"Compute distance to zero level set for query points"},{"name":"gradient","url":"meshtsdf.gradient.html","description":"Compute gradient of truncated signed distance field"},{"name":"poses","url":"meshtsdf.poses.html","description":"Get poses for one or more meshes in TSDF"},{"name":"updatePose","url":"meshtsdf.updatepose.html","description":"Update pose of mesh in TSDF"},{"name":"show","url":"meshtsdf.show.html","description":"Display TSDF in figure"}]}],"examples":[{"url":"meshtsdf.html#mw_78b9d950-502f-4642-be6b-c599a17141ce","open_command":"openExample('nav\/AddMeshesToMeshTSDFManagerExample')","title":"Add Meshes to Mesh TSDF Manager"}],"seealso":[{"url":"geom2struct.html","name":"geom2struct"}]},{"href":"ref\/meshtsdf.poses.html","refentity":[{"type":"function","name":"poses","fcntype":"instancemethod"},{"type":"method","name":"meshtsdf.poses","fcntype":"instancemethod"}],"refpurpose":"Get poses for one or more meshes in TSDF","introduced":"R2024a","description":"This MATLAB function gets the pose information of all meshes in the truncated signed distance field (TSDF).","syntaxgroup":[{"title":"","syntax":["poseStruct = poses(mTSDF)","poseStruct = poses(mTSDF,id)"]}],"inputgroup":[{"title":"","inputs":[{"name":"mTSDF","purpose":"Truncated signed distance field for 3-D meshes","htmlid":"mw_meshtsdf_poses-2d80-44b2-aef5-3dc75f5621b0_sep_mw_3ec7e5cb-640e-4e8f-8133-a629c3c6328a","value":["meshtsdf object"]},{"name":"id","purpose":"ID of mesh to get pose information from","htmlid":"mw_72cf8019-f4d2-49a6-b0bc-12c0154ab4c6","value":["nonnegative integer","N-element vector of nonnegative integers"]}]}],"outputs":[{"name":"poseStruct","purpose":"Pose information for each mesh in TSDF","htmlid":"mw_01bfb038-e27f-4e21-b5e2-1607c5b01742","value":["structure","N-element array of structures"]}],"seealso":[{"url":"meshtsdf.html","name":"meshtsdf"},{"url":"meshtsdf.updatepose.html","name":"updatePose"}]},{"href":"ref\/meshtsdf.removemesh.html","refentity":[{"type":"function","name":"removeMesh","fcntype":"instancemethod"},{"type":"method","name":"meshtsdf.removeMesh","fcntype":"instancemethod"}],"refpurpose":"Remove mesh from mesh TSDF","introduced":"R2024a","description":"This MATLAB function removes one or more meshes with the specified IDs from the truncated signed distance field (TSDF) and returns an indication of which meshes were successfully removed.","syntaxgroup":[{"title":"","syntax":["isRemoved = removeMesh(mTSDF,id)"]}],"inputgroup":[{"title":"","inputs":[{"name":"mTSDF","purpose":"Truncated signed distance field for 3-D meshes","htmlid":"mw_meshtsdf_removemesh-d597-4dbd-8574-309b18128c5c_sep_mw_3ec7e5cb-640e-4e8f-8133-a629c3c6328a","value":["meshtsdf object"]},{"name":"id","purpose":"ID of mesh to remove","htmlid":"mw_df609acc-7684-4545-8419-21049f5e1d2b","value":["nonnegative integer","N-element vector of nonnegative integers"]}]}],"outputs":[{"name":"isRemoved","purpose":"Indication of whether meshes were removed or not","htmlid":"mw_d26695d3-c070-4a1f-bd9c-bad6e1f05612","value":["true or 1","false or 0","N-element vector of logical scalars"]}],"seealso":[{"url":"meshtsdf.html","name":"meshtsdf"},{"url":"meshtsdf.addmesh.html","name":"addMesh"}]},{"href":"ref\/meshtsdf.show.html","refentity":[{"type":"function","name":"show","fcntype":"instancemethod"},{"type":"method","name":"meshtsdf.show","fcntype":"instancemethod"}],"refpurpose":"Display TSDF in figure","introduced":"R2024a","description":"This MATLAB function shows all active voxels as a scatter plot.","syntaxgroup":[{"title":"","syntax":["show(mTSDF)","show(mTSDF,Name=Value)","h = show(___)"]}],"inputgroup":[{"title":"","inputs":[{"name":"mTSDF","purpose":"Truncated signed distance field for 3-D meshes","htmlid":"mw_meshtsdf_show-3cdf-4cd3-89b6-a9e5fbe1940f_sep_mw_3ec7e5cb-640e-4e8f-8133-a629c3c6328a","value":["meshtsdf object"]}]},{"namevaluepairs":[{"title":"","inputs":[{"name":"Parent","purpose":"Parent axes","htmlid":"mw_21b96401-c07b-4d89-99e5-9a4deecd7c12","value":["gca","Axes object"]},{"name":"MeshID","purpose":"ID of mesh in TSDF to visualize","htmlid":"mw_4b101b4c-a563-4120-a762-b38b5ee8d256","value":["nonnegative integer","N-element vector of nonnegative integers"]},{"name":"IsoRange","purpose":"Range of distance values to plot","htmlid":"mw_5d4dd5ba-8ef1-4755-b5f7-05bdfaf187f3","value":["[-inf inf]","two-element vector"],"defaultvalue":"[-inf inf]"},{"name":"Colorbar","purpose":"Colorbar for voxel distance values","htmlid":"mw_9ca53d94-8266-4e7f-a6f7-ee21915af900","value":["\"off\"","\"on\""],"defaultvalue":"\"off\""},{"name":"FastUpdate","purpose":"Fast updates to existing map plot","htmlid":"mw_00529e24-e252-41fa-b61a-7de3d96c9a50","value":["0 (false)","1 (true)"],"defaultvalue":"0 (false)"}]}]}],"outputs":[{"name":"h","purpose":"Scatter plot of active voxels","htmlid":"mw_86747490-ee99-4b6e-9d29-fe9cf0725b69","value":["Scatter object"]}],"examples":[{"url":"meshtsdf.show.html#mw_91c3482b-fc14-4f1d-aee0-d6ef1b05c03d","open_command":"openExample('nav\/AddMeshesToMeshTSDFManagerExample')","title":"Add Meshes to Mesh TSDF Manager"}],"seealso":[{"url":"meshtsdf.html","name":"meshtsdf"},{"url":"meshtsdf.activevoxels.html","name":"activeVoxels"}]},{"href":"ref\/meshtsdf.updatepose.html","refentity":[{"type":"function","name":"updatePose","fcntype":"instancemethod"},{"type":"method","name":"meshtsdf.updatePose","fcntype":"instancemethod"}],"refpurpose":"Update pose of mesh in TSDF","introduced":"R2024a","description":"This MATLAB function updates the poses of meshes in the truncated signed distance field (TSDF) and returns an indication of which mesh poses were successfully updated.","syntaxgroup":[{"title":"","syntax":["isUpdated = updatePose(mTSDF,poseStruct)"]}],"inputgroup":[{"title":"","inputs":[{"name":"mTSDF","purpose":"Truncated signed distance field for 3-D meshes","htmlid":"mw_meshtsdf_updatepose-5f0a-4c1f-8b9a-481b54cbb3fb_sep_mw_3ec7e5cb-640e-4e8f-8133-a629c3c6328a","value":["meshtsdf object"]},{"name":"poseStruct","purpose":"Pose information for each mesh in TSDF","htmlid":"mw_7bc63e63-ddba-4c51-a16e-5196e8b933e2","value":["structure","N-element array of structures"]}]}],"outputs":[{"name":"isUpdated","purpose":"Indication of whether pose of mesh was updated or not","htmlid":"mw_0e14c05f-c6c4-4435-8b2b-0b5385c82eef","value":["true or 1","false or 0","N-element vector of logical scalars"]}],"examples":[{"url":"meshtsdf.updatepose.html#mw_222d3865-3c14-4741-b0ce-c8d108b3799b","open_command":"openExample('nav\/AddMeshesToMeshTSDFManagerExample')","title":"Add Meshes to Mesh TSDF Manager"}],"seealso":[{"url":"meshtsdf.html","name":"meshtsdf"},{"url":"meshtsdf.poses.html","name":"poses"}]},{"href":"ref\/mobilerobotpropagator.distance.html","refentity":[{"type":"function","name":"distance","fcntype":"instancemethod"},{"type":"method","name":"mobileRobotPropagator.distance","fcntype":"instancemethod"}],"refpurpose":"Estimate cost of propagating to target state","introduced":"R2021b","description":"This MATLAB function estimates the cost of propagating from one state to another.","syntaxgroup":[{"title":"","syntax":["h = distance(mobileProp,q1,q2)"]}],"inputgroup":[{"title":"","inputs":[{"name":"mobileProp","purpose":"Mobile robot state propagator","htmlid":"mw_74dbb218-7bbe-46c1-a644-ef3c653418f9","value":["mobileRobotPropagator object"]},{"name":"q1","purpose":"Initial states","htmlid":"mw_f9aa688f-bb17-4fa4-96b3-13a467acbd31","value":["n-by-s matrix"]},{"name":"q2","purpose":"Final states","htmlid":"mw_50889a77-5f1e-463b-b95e-1c2ebbc65ff6","value":["n-by-s matrix"]}]}],"outputs":[{"name":"h","purpose":"Cost values","htmlid":"mw_dc081c78-00e9-4339-bb76-b66ea2a1c37c","value":["n-element vector"]}],"examples":[{"url":"mobilerobotpropagator.distance.html#mw_938b6a99-34ba-44af-a265-b907bdf2f455","open_command":"openExample('nav\/CreatePathRepresentingControlBasedKinematicTrajectoryExample')","title":"Create Path Representing Control-Based Kinematic Trajectory"}],"seealso":[{"url":"mobilerobotpropagator.html","name":"mobileRobotPropagator"},{"url":"mobilerobotpropagator.propagate.html","name":"propagate"},{"url":"mobilerobotpropagator.propagatewhilevalid.html","name":"propagateWhileValid"},{"url":"mobilerobotpropagator.samplecontrol.html","name":"sampleControl"},{"url":"mobilerobotpropagator.setup.html","name":"setup"}]},{"href":"ref\/mobilerobotpropagator.html","refentity":[{"type":"object","name":"mobileRobotPropagator"},{"type":"function","name":"mobileRobotPropagator","fcntype":"constructor"}],"refpurpose":"State propagator for wheeled robotic systems","introduced":"R2021b","description":"The mobileRobotPropagator object is a state propagator that propagates and validates the state of a mobile robot based on control commands, durations, and target states.","syntaxgroup":[{"title":"","syntax":["mobileProp = mobileRobotPropagator","mobileProp = mobileRobotPropagator(Name,Value)"]}],"classpropertygroup":[{"classproperty":[{"name":"StateSpace","purpose":"State space for sampling during planning","htmlid":"mw_1243d025-50eb-4355-b8f4-78b932d1d26a","value":["stateSpaceSE2 object","object of subclass of nav.StateSpace object"],"defaultvalue":"stateSpaceSE2 object"},{"name":"Environment","purpose":"Environment for validating states","htmlid":"mw_dea7511e-9192-4a86-9d1d-5d78cceb9552","value":["[]","binaryOccupancyMap object","occupancyMap object","vehicleCostmap object"],"defaultvalue":"[]"},{"name":"DistanceEstimator","purpose":"Distance metric for estimating propagation cost","htmlid":"mw_89b0d214-9732-4352-b4e8-6664014d3e4d","value":["'euclidean'","'dubins'","'reedsshepp'"],"defaultvalue":"'euclidean'"},{"name":"GoalDistance","purpose":"Threshold of distance for reaching goal states","htmlid":"mw_c8431d7c-5da3-42cc-8c44-6eeb0931fc9c","value":["1","positive scalar"],"defaultvalue":"1"},{"name":"KinematicModel","purpose":"Kinematic model for propagating state","htmlid":"mw_4b2a223d-024c-4e32-9c43-122e25e36263","value":["'bicycle'","'ackermann'"],"defaultvalue":"'bicycle'"},{"name":"Integrator","purpose":"Integration method when propagating state","htmlid":"mw_72ba8716-e6f8-4fa2-92eb-1e6dd2e0630d","value":["'rungekutta4'","'euler'"],"defaultvalue":"'rungekutta4'"},{"name":"SystemParameters","purpose":"Parameters for kinematic model, integrator, and control policy","htmlid":"mw_8d1b727d-fc68-4478-b413-655d2a5e0610","value":["structure"]}]},{"title":"Control Parameters","classproperty":[{"name":"ControlPolicy","purpose":"Control command generation policy","htmlid":"mw_bb2d2ede-6fee-48e5-9b39-f7c83b2036d6","value":["'linearpursuit'","'arcpursuit'","'randomsamples'"],"defaultvalue":"'linearpursuit'"},{"name":"ControlLimits","purpose":"Limits on control commands for each state","htmlid":"mw_59b2ddc9-ab68-4ed8-b61d-47ba6168aca6","value":["[-1 1; -pi\/4 pi\/4]","n-by-2 matrix"],"defaultvalue":"[-1 1; -pi\/4 pi\/4]"},{"name":"NumControlOutput","readonly":true,"purpose":"Number of control outputs","htmlid":"mw_1314e634-e9bf-4349-85ef-0327100db0de","value":["2","positive scalar"],"defaultvalue":"2"},{"name":"ControlStepSize","purpose":"Duration of each control command","htmlid":"mw_63551f85-bb75-4a79-a01f-e7e2c231d5d3","value":["0.1","positive scalar"],"defaultvalue":"0.1"},{"name":"MaxControlSteps","purpose":"Maximum number of control steps","htmlid":"mw_1f66eabe-3866-4c7c-aaf2-0e32dfd4bf73","value":["10","positive integer"],"defaultvalue":"10"}]}],"objectfunctions":[{"title":"","functions":[{"name":"distance","url":"mobilerobotpropagator.distance.html","description":"Estimate cost of propagating to target state"},{"name":"propagate","url":"mobilerobotpropagator.propagate.html","description":"Propagate system without validation"},{"name":"propagateWhileValid","url":"mobilerobotpropagator.propagatewhilevalid.html","description":"Propagate system and return valid motion"},{"name":"sampleControl","url":"mobilerobotpropagator.samplecontrol.html","description":"Generate control command and duration"},{"name":"setup","url":"mobilerobotpropagator.setup.html","description":"Set up the mobile robot state propagator"}]}],"examples":[{"url":"mobilerobotpropagator.html#mw_440f135d-0686-44b4-b3ab-ff06980383df","open_command":"openExample('nav\/PlanKinodynamicPathWithControlsForMobileRobotExample')","title":"Plan Kinodynamic Path with Controls for Mobile Robot"}],"seealso":[{"url":"nav.statespace-class.html","name":"nav.StateSpace"},{"url":"statespacese2.html","name":"stateSpaceSE2"},{"url":"statespacedubins.html","name":"stateSpaceDubins"},{"url":"statespacereedsshepp.html","name":"stateSpaceReedsShepp"},{"url":"mobilerobotpropagator.distance.html","name":"distance"},{"url":"mobilerobotpropagator.propagate.html","name":"propagate"},{"url":"mobilerobotpropagator.propagatewhilevalid.html","name":"propagateWhileValid"},{"url":"mobilerobotpropagator.samplecontrol.html","name":"sampleControl"},{"url":"mobilerobotpropagator.setup.html","name":"setup"}]},{"href":"ref\/mobilerobotpropagator.propagate.html","refentity":[{"type":"function","name":"propagate","fcntype":"instancemethod"},{"type":"method","name":"mobileRobotPropagator.propagate","fcntype":"instancemethod"}],"refpurpose":"Propagate system without validation","introduced":"R2021b","description":"This MATLAB function iteratively propagates the system from the current state q0 towards a target state qTgt with an initial control input u0 for a maximum number of steps maxSteps.","syntaxgroup":[{"title":"","syntax":["[q,u,steps] = propagate(mobileProp,q0,u0,qTgt,maxSteps)"]}],"inputgroup":[{"title":"","inputs":[{"name":"mobileProp","purpose":"Mobile robot state propagator","htmlid":"mw_80ec985f-00a7-4c17-9fd6-38def4f716e8","value":["mobileRobotPropagator object"]},{"name":"q0","purpose":"Initial state","htmlid":"mw_d1c023e8-680b-4d33-8a55-1a87570838a1","value":["s-element vector"]},{"name":"u0","purpose":"Initial control on initial state","htmlid":"mw_cdcb59d6-6841-4f13-b0d2-ef948e1fa7f5","value":["c-element vector"]},{"name":"qTgt","purpose":"Target state","htmlid":"mw_5bd9762e-31ff-4f63-95fb-4c024140d783","value":["s-element vector"]},{"name":"maxSteps","purpose":"Maximum number of steps","htmlid":"mw_d7c6cac2-9734-44ef-8b9b-5f9b48f096d3","value":["positive scalar"]}]}],"outputs":[{"name":"q","purpose":"Propagated states","htmlid":"mw_20f69589-2d41-4668-9553-fbd74e8fccdc","value":["n-by-s matrix"]},{"name":"u","purpose":"Control inputs for propagating states","htmlid":"mw_c8d45b6a-7bc8-4edc-bdb3-82d733e32d41","value":["n-by-c matrix"]},{"name":"steps","purpose":"Number of steps between each state and control input to next","htmlid":"mw_c02dd68e-bfeb-42fd-aaf8-7c77ee2bc739","value":["n-element vector of positive integers"]}],"examples":[{"url":"mobilerobotpropagator.propagate.html#mw_3347667c-d34e-436e-ab16-7162a516e19b","open_command":"openExample('nav\/PropagateMobileRobotExample')","title":"Propagate Mobile Robot"}],"seealso":[{"url":"mobilerobotpropagator.html","name":"mobileRobotPropagator"},{"url":"mobilerobotpropagator.distance.html","name":"distance"},{"url":"mobilerobotpropagator.propagatewhilevalid.html","name":"propagateWhileValid"},{"url":"mobilerobotpropagator.samplecontrol.html","name":"sampleControl"},{"url":"mobilerobotpropagator.setup.html","name":"setup"}]},{"href":"ref\/mobilerobotpropagator.propagatewhilevalid.html","refentity":[{"type":"function","name":"propagateWhileValid","fcntype":"instancemethod"},{"type":"method","name":"mobileRobotPropagator.propagateWhileValid","fcntype":"instancemethod"}],"refpurpose":"Propagate system and return valid motion","introduced":"R2021b","description":"This MATLAB function iteratively propagates the system from the current state q0 towards a target state qTgt with an initial control input u0 for a maximum number of steps maxSteps.","syntaxgroup":[{"title":"","syntax":["[q,u,steps] = propagateWhileValid(mobileProp,q0,u0,qTgt,maxSteps)"]}],"inputgroup":[{"title":"","inputs":[{"name":"mobileProp","purpose":"Mobile robot state propagator","htmlid":"mw_3730dab0-ee5c-43e1-87e0-e9b0569cd9e8","value":["mobileRobotPropagator object"]},{"name":"q0","purpose":"Initial state","htmlid":"mw_e2b16bbf-7db1-433e-a4e4-99f3ebe209ba","value":["s-element vector"]},{"name":"u0","purpose":"Initial control on initial state","htmlid":"mw_bf9057af-710f-40d8-aa77-d6ec629ad435","value":["c-element vector"]},{"name":"qTgt","purpose":"Target state","htmlid":"mw_7aec0c6c-04f5-4847-a1a4-7935ca1cc8dd","value":["s-element vector"]},{"name":"maxSteps","purpose":"Maximum number of steps","htmlid":"mw_63525fd4-398d-449d-b6ac-8112a7c4f8dc","value":["positive scalar"]}]}],"outputs":[{"name":"q","purpose":"Propagated states","htmlid":"mw_718df9ae-0c98-4980-bc35-da9410908f89","value":["n-by-s matrix"]},{"name":"u","purpose":"Control inputs for propagating states","htmlid":"mw_64c97411-d69c-4662-a922-cded4e23cb44","value":["n-by-c matrix"]},{"name":"steps","purpose":"Number of steps from each state and control input to next","htmlid":"mw_e23e1f91-50bf-4f4f-8f18-2a49f89d7e2c","value":["n-element vector of positive integers"]}],"examples":[{"url":"mobilerobotpropagator.propagatewhilevalid.html#mw_daa4231e-e14b-4e86-afcb-b2116bff3c40","open_command":"openExample('nav\/PropagateMobileRobotExample')","title":"Propagate Mobile Robot"}],"seealso":[{"url":"mobilerobotpropagator.html","name":"mobileRobotPropagator"},{"url":"mobilerobotpropagator.distance.html","name":"distance"},{"url":"mobilerobotpropagator.propagate.html","name":"propagate"},{"url":"mobilerobotpropagator.samplecontrol.html","name":"sampleControl"},{"url":"mobilerobotpropagator.setup.html","name":"setup"}]},{"href":"ref\/mobilerobotpropagator.samplecontrol.html","refentity":[{"type":"function","name":"sampleControl","fcntype":"instancemethod"},{"type":"method","name":"mobileRobotPropagator.sampleControl","fcntype":"instancemethod"}],"refpurpose":"Generate control command and duration","introduced":"R2021b","description":"This MATLAB function generates a series of control commands and number of steps to move from the current state q0 with control command u0 toward the target state qTgt.","syntaxgroup":[{"title":"","syntax":["[u,steps] = sampleControl(mobileProp,q0,u0,qTgt)"]}],"inputgroup":[{"title":"","inputs":[{"name":"mobileProp","purpose":"Mobile robot state propagator","htmlid":"mw_5e1caa17-a63d-477d-a607-6bc6131784b6","value":["mobileRobotPropagator object"]},{"name":"q0","purpose":"Initial state","htmlid":"mw_a1c42f69-cf86-44fa-a2fe-89f9d0789b2c","value":["s-element vector"]},{"name":"u0","purpose":"Initial control on the initial state","htmlid":"mw_d68ccc3a-c059-42eb-b0a8-0f1c0f71df70","value":["c-element vector"]},{"name":"qTgt","purpose":"Target state","htmlid":"mw_61c8f6e0-2725-49a0-951e-67be2213aa55","value":["s-element vector"]}]}],"outputs":[{"name":"u","purpose":"Control inputs for propagating states","htmlid":"mw_d534ffa6-7c32-4b2e-b6e3-4d4b2e603333","value":["n-by-c matrix"]},{"name":"steps","purpose":"Number of steps from each state and control input to next","htmlid":"mw_646df7c4-c81f-4060-bfb1-825c49bd51a5","value":["n-element vector of positive integers"]}],"examples":[{"url":"mobilerobotpropagator.samplecontrol.html#mw_a7c7eaa4-99e9-400d-875c-741878ace1f4","open_command":"openExample('nav\/CreatePathRepresentingControlBasedKinematicTrajectoryExample')","title":"Create Path Representing Control-Based Kinematic Trajectory"}],"seealso":[{"url":"mobilerobotpropagator.html","name":"mobileRobotPropagator"},{"url":"mobilerobotpropagator.distance.html","name":"distance"},{"url":"mobilerobotpropagator.propagate.html","name":"propagate"},{"url":"mobilerobotpropagator.propagatewhilevalid.html","name":"propagateWhileValid"},{"url":"mobilerobotpropagator.setup.html","name":"setup"}]},{"href":"ref\/mobilerobotpropagator.setup.html","refentity":[{"type":"function","name":"setup","fcntype":"instancemethod"},{"type":"method","name":"mobileRobotPropagator.setup","fcntype":"instancemethod"}],"refpurpose":"Set up the mobile robot state propagator","introduced":"R2021b","description":"This MATLAB function sets up the mobileRobotPropagator object based on the properties of the object.","syntaxgroup":[{"title":"","syntax":["setup(mobileProp)"]}],"inputgroup":[{"title":"","inputs":[{"name":"mobileProp","purpose":"Mobile robot state propagator","htmlid":"mw_5ea7d1de-afe1-40e1-9b55-3acce574a9db","value":["mobileRobotPropagator object"]}]}],"examples":[{"url":"mobilerobotpropagator.setup.html#mw_f70612c2-b6e6-43b6-aefc-35d3180fa5ba","open_command":"openExample('nav\/CreatePathRepresentingControlBasedKinematicTrajectoryExample')","title":"Create Path Representing Control-Based Kinematic Trajectory"}],"seealso":[{"url":"mobilerobotpropagator.html","name":"mobileRobotPropagator"},{"url":"mobilerobotpropagator.distance.html","name":"distance"},{"url":"mobilerobotpropagator.propagate.html","name":"propagate"},{"url":"mobilerobotpropagator.propagatewhilevalid.html","name":"propagateWhileValid"},{"url":"mobilerobotpropagator.samplecontrol.html","name":"sampleControl"}]},{"href":"ref\/monovslam.addframe.html","refentity":[{"type":"function","name":"addFrame","fcntype":"instancemethod"},{"type":"method","name":"monovslam.addFrame","fcntype":"instancemethod"}],"refpurpose":"Add image frame to visual SLAM object","introduced":"R2025a","description":"This MATLAB function adds a grayscale or RGB image I, to the visual SLAM object vslam.","syntaxgroup":[{"title":"","syntax":["addFrame(vslam,I)","addFrame(___,gyro,accel)"]}],"inputgroup":[{"title":"","inputs":[{"name":"vslam","purpose":"Visual SLAM object","htmlid":"mw_b9690631-6ca5-4123-8867-948c14bbd07f_sep_mw_49257396-1938-4e27-9982-8b9c89ce0815","value":["monovslam object"]},{"name":"I","purpose":"Image","htmlid":"mw_b9690631-6ca5-4123-8867-948c14bbd07f_sep_mw_eb816541-670f-4bf5-8f53-daaf0cf67076","value":["grayscale image","RGB image"]},{"name":"gyro","purpose":"Gyroscope IMU measurement","htmlid":"mw_15813b5b-3b1f-423c-b512-fba353b858d0","value":["N-by-3 matrices"]},{"name":"accel","purpose":"Acceleration IMU measurement","htmlid":"mw_5023a184-057a-4a26-b7d3-4457b617f7d0","value":["N-by-3 matrices"]}]}],"examples":[{"url":"monovslam.addframe.html#mw_dfe49b04-05b0-4bfc-b135-bf7891b95601","open_command":"openExample('slam\/MonocularVisualSLAMUsingTUMRGBDDataSetExample')","title":"Monocular Visual SLAM Using TUM RGB-D Data Set"}],"seealso":[{"url":"monovslam.html","name":"monovslam"},{"url":"monovslam.checkstatus.html","name":"checkStatus"},{"url":"monovslam.isdone.html","name":"isDone"},{"url":"monovslam.mappoints.html","name":"mapPoints"},{"url":"monovslam.poses.html","name":"poses"},{"url":"monovslam.plot.html","name":"plot"},{"url":"monovslam.reset.html","name":"reset"},{"url":"monovslam.hasnewkeyframe.html","name":"hasNewKeyFrame"}]},{"href":"ref\/monovslam.checkstatus.html","refentity":[{"type":"function","name":"checkStatus","fcntype":"instancemethod"},{"type":"method","name":"monovslam.checkStatus","fcntype":"instancemethod"}],"refpurpose":"Check status of visual SLAM object","introduced":"R2025a","description":"This MATLAB function returns the current status of the visual SLAM object.","syntaxgroup":[{"title":"","syntax":["status = checkStatus(vslam)"]}],"inputgroup":[{"title":"","inputs":[{"name":"vslam","purpose":"Visual SLAM object","htmlid":"mw_9211c778-aacb-493d-9c68-5e2fb743ae3d_sep_mw_49257396-1938-4e27-9982-8b9c89ce0815","value":["monovslam object"]}]}],"outputs":[{"name":"status","purpose":"Current status of visual SLAM object","htmlid":"mw_9211c778-aacb-493d-9c68-5e2fb743ae3d_sep_mw_842541e7-ef33-4efa-931d-904c48edb18a","value":["TrackingLost enumeration","TrackingSuccessful enumeration","FrequentKeyFrames enumeration"]}],"examples":[{"url":"monovslam.checkstatus.html#mw_02b64330-e506-49e2-b5fa-9c24daa5bc59","open_command":"openExample('slam\/MonocularVisualSLAMUsingTUMRGBDDataSetExample')","title":"Monocular Visual SLAM Using TUM RGB-D Data Set"}],"seealso":[{"url":"monovslam.html","name":"monovslam"},{"url":"monovslam.addframe.html","name":"addFrame"},{"url":"monovslam.isdone.html","name":"isDone"},{"url":"monovslam.mappoints.html","name":"mapPoints"},{"url":"monovslam.poses.html","name":"poses"},{"url":"monovslam.plot.html","name":"plot"},{"url":"monovslam.reset.html","name":"reset"},{"url":"monovslam.hasnewkeyframe.html","name":"hasNewKeyFrame"}]},{"href":"ref\/monovslam.hasnewkeyframe.html","refentity":[{"type":"function","name":"hasNewKeyFrame","fcntype":"instancemethod"},{"type":"method","name":"monovslam.hasNewKeyFrame","fcntype":"instancemethod"}],"refpurpose":"Check if new key frame added in visual SLAM object","introduced":"R2025a","description":"This MATLAB function returns a logical value that indicates if a new key frame has been added within the visual simultaneous localization and mapping (vSLAM) object vslam.","syntaxgroup":[{"title":"","syntax":["hasAdded = hasNewKeyFrame(vslam)"]}],"inputgroup":[{"title":"","inputs":[{"name":"vslam","purpose":"Visual SLAM object","htmlid":"mw_ffc4fc6d-c936-4360-9d2a-a138dd5571ff_sep_mw_49257396-1938-4e27-9982-8b9c89ce0815","value":["monovslam object"]}]}],"outputs":[{"name":"hasAdded","purpose":"New key frame status","htmlid":"mw_ffc4fc6d-c936-4360-9d2a-a138dd5571ff_sep_mw_4f3619e5-6b1f-4cca-9b17-fdbe35a4d5c5","value":["false or 0","true or 1"]}],"examples":[{"url":"monovslam.hasnewkeyframe.html#mw_5e9dc453-d28d-45ea-8309-5c3aadef2e4d","open_command":"openExample('slam\/MonocularVisualSLAMUsingTUMRGBDDataSetExample')","title":"Monocular Visual SLAM Using TUM RGB-D Data Set"}],"seealso":[{"url":"monovslam.html","name":"monovslam"},{"url":"monovslam.addframe.html","name":"addFrame"},{"url":"monovslam.checkstatus.html","name":"checkStatus"},{"url":"monovslam.isdone.html","name":"isDone"},{"url":"monovslam.mappoints.html","name":"mapPoints"},{"url":"monovslam.poses.html","name":"poses"},{"url":"monovslam.plot.html","name":"plot"},{"url":"monovslam.reset.html","name":"reset"}]},{"href":"ref\/monovslam.isdone.html","refentity":[{"type":"function","name":"isDone","fcntype":"instancemethod"},{"type":"method","name":"monovslam.isDone","fcntype":"instancemethod"}],"refpurpose":"End-of-processing status for visual SLAM object","introduced":"R2025a","description":"This MATLAB function returns a logical value indicating whether the visual SLAM object has finished processing its frames.","syntaxgroup":[{"title":"","syntax":["done = isDone(vslam)"]}],"inputgroup":[{"title":"","inputs":[{"name":"vslam","purpose":"Visual SLAM object","htmlid":"mw_ca0da3d4-c1e9-4476-82cd-ea39113dc717_sep_mw_49257396-1938-4e27-9982-8b9c89ce0815","value":["monovslam object"]}]}],"examples":[{"url":"monovslam.isdone.html#mw_ca0da3d4-c1e9-4476-82cd-ea39113dc717_sep_mw_1e38cc59-15ed-4030-86d6-496e72d3501e","open_command":"openExample('slam\/MonocularVisualSLAMUsingTUMRGBDDataSetExample')","title":"Monocular Visual SLAM Using TUM RGB-D Data Set"}],"seealso":[{"url":"monovslam.html","name":"monovslam"},{"url":"monovslam.addframe.html","name":"addFrame"},{"url":"monovslam.mappoints.html","name":"mapPoints"},{"url":"monovslam.poses.html","name":"poses"},{"url":"monovslam.plot.html","name":"plot"},{"url":"monovslam.reset.html","name":"reset"},{"url":"monovslam.hasnewkeyframe.html","name":"hasNewKeyFrame"},{"url":"monovslam.checkstatus.html","name":"checkStatus"}]},{"href":"ref\/monovslam.html","refentity":[{"type":"object","name":"monovslam"},{"type":"function","name":"monovslam","fcntype":"constructor"}],"refpurpose":"Visual simultaneous localization and mapping (vSLAM) and visual-inertial sensor fusion with monocular camera","introduced":"R2025a","description":"Use the monovslam object to perform visual simultaneous localization and mapping (vSLAM) and visual inertial SLAM (viSLAM) with a monocular camera.","syntaxgroup":[{"title":"","syntax":["vslam = monovslam(intrinsics)","vslam = monovslam(intrinsics,imuParameters)","vslam = monovslam(intrinsics,PropertyName=Value)"]}],"inputgroup":[{"title":"","inputs":[{"name":"intrinsics","purpose":"Camera intrinsic parameters","htmlid":"mw_43ffdccf-bf66-4d77-95bf-e86c86b2c64b_sep_mw_d40da1b6-7338-4a29-bb42-0bd7291f1582","value":["cameraIntrinsics object"]},{"name":"imuParameters","purpose":"IMU parameters","htmlid":"mw_43ffdccf-bf66-4d77-95bf-e86c86b2c64b_sep_mw_845fd001-88b5-4be4-8eba-3becec592087","value":["factorIMUParameters object"]}]}],"classpropertygroup":[{"title":"Camera Parameters","classproperty":[{"name":"Intrinsics","readonly":true,"purpose":"Camera intrinsic parameters","htmlid":"mw_43ffdccf-bf66-4d77-95bf-e86c86b2c64b_sep_mw_a682c3c9-92b5-4cdc-bc24-c63f98851382","value":["cameraIntrinsics object"]}]},{"title":"Feature Extraction","classproperty":[{"name":"ScaleFactor","purpose":"Scale factor for image decomposition","htmlid":"mw_43ffdccf-bf66-4d77-95bf-e86c86b2c64b_sep_mw_03812a39-3e15-4b59-b3f6-f8d71bde1650","value":["1.2","scalar greater than 1"],"defaultvalue":"1.2"},{"name":"NumLevels","purpose":"Number of decomposition levels","htmlid":"mw_43ffdccf-bf66-4d77-95bf-e86c86b2c64b_sep_mw_629e4ba6-f7b2-4aa4-9cb0-b477216a6086","value":["8","integer greater than or equal to 1"],"defaultvalue":"8"},{"name":"MaxNumPoints","purpose":"Maximum number of ORB feature points uniformly extracted from each image","htmlid":"mw_43ffdccf-bf66-4d77-95bf-e86c86b2c64b_sep_mw_b481d5a7-a377-473c-aa91-f34b2ee20e81","value":["1000","positive integer"]}]},{"title":"Tracking","classproperty":[{"name":"TrackFeatureRange","purpose":"Range for the number of feature points to identify key frame","htmlid":"mw_43ffdccf-bf66-4d77-95bf-e86c86b2c64b_sep_mw_1a6ca41e-6cad-459d-a74f-8c877953d54f","value":["[30 100]","two-element vector of positive integers"]},{"name":"SkipMaxFrames","purpose":"Maximum number of skipped frames","htmlid":"mw_43ffdccf-bf66-4d77-95bf-e86c86b2c64b_sep_mw_ed1068b3-dd06-48cc-b751-47475a33b525","value":["20","positive integer"]},{"name":"LoopClosureThreshold","purpose":"Minimum number of matched feature points between loop closure key frames","htmlid":"mw_43ffdccf-bf66-4d77-95bf-e86c86b2c64b_sep_mw_6c1b9a99-7d34-4c9b-bdbe-6a1d2b790fe1","value":["60","positive integer"]},{"name":"CustomBagOfFeatures","purpose":"Custom bag of features for loop detection","htmlid":"mw_43ffdccf-bf66-4d77-95bf-e86c86b2c64b_sep_mw_d4b0eadc-5e52-424f-9710-38483c5fde94","value":["[]","bagOfFeaturesDBoW object"],"defaultvalue":"[]"},{"name":"Verbose","purpose":"Progress information display","htmlid":"mw_43ffdccf-bf66-4d77-95bf-e86c86b2c64b_sep_mw_57f6c40e-b880-4896-b130-cb32c04fff4d","value":["[]","1","2","3"],"defaultvalue":"[]"}]},{"title":"IMU Fusion","classproperty":[{"name":"CameraToIMUTransform","purpose":"IMU sensor transformation","htmlid":"mw_43ffdccf-bf66-4d77-95bf-e86c86b2c64b_sep_mw_d6e70d99-c8a0-4090-84f0-30c9cb2073eb","value":["rigidtform3d"]},{"name":"NumPosesThreshold","purpose":"Number of estimated camera poses to trigger camera-IMU alignment","htmlid":"mw_43ffdccf-bf66-4d77-95bf-e86c86b2c64b_sep_mw_d33c0a5e-42e7-4708-a41d-56aea2ead91d","value":["30","integer equal to or greater than 2"],"defaultvalue":"30"},{"name":"AlignmentFraction","purpose":"Subset of pose estimates","htmlid":"mw_43ffdccf-bf66-4d77-95bf-e86c86b2c64b_sep_mw_f2cb1eb7-2ba9-453c-b686-11864a1f0294","value":["0.8","scalar in the range (0,1]"],"defaultvalue":"0.8"}]}],"objectfunctions":[{"title":"","functions":[{"name":"addFrame","url":"monovslam.addframe.html","description":"Add image frame to visual SLAM object"},{"name":"hasNewKeyFrame","url":"monovslam.hasnewkeyframe.html","description":"Check if new key frame added in visual SLAM object"},{"name":"checkStatus","url":"monovslam.checkstatus.html","description":"Check status of visual SLAM object"},{"name":"isDone","url":"monovslam.isdone.html","description":"End-of-processing status for visual SLAM object"},{"name":"mapPoints","url":"monovslam.mappoints.html","description":"Build 3-D map of world points"},{"name":"poses","url":"monovslam.poses.html","description":"Absolute camera poses of key frames"},{"name":"plot","url":"monovslam.plot.html","description":"Plot 3-D map points and estimated camera trajectory in visual SLAM "},{"name":"reset","url":"monovslam.reset.html","description":"Reset visual SLAM object"}]}],"examples":[{"url":"monovslam.html#mw_3588ffb0-f028-48c0-b8ac-d1f2a89c73dc","open_command":"openExample('slam\/MonocularVisualSLAMUsingTUMRGBDDataSetExample')","title":"Monocular Visual SLAM Using TUM RGB-D Data Set"},{"url":"monovslam.html#mw_16b4b6f8-cd6f-417e-a9e1-7a608b6b3a9d","open_command":"openExample('slam\/MonocularVisualInertialSLAMUsingTheBlackBirdDataSetExample')","title":"Monocular Visual-Inertial SLAM Using the BlackBird Data Set"}],"seealso":[{"url":"stereovslam.html","name":"stereovslam"},{"url":"..\/..\/vision\/ref\/rgbdvslam.html","name":"rgbdvslam"},{"url":"factorgraph.html","name":"factorGraph"},{"url":"factorimuparameters.html","name":"factorIMUParameters"},{"url":"..\/..\/vision\/ref\/cameraintrinsics.html","name":"cameraIntrinsics"},{"url":"..\/..\/matlab\/ref\/matlab.io.datastore.imagedatastore.html","name":"imageDatastore"}]},{"href":"ref\/monovslam.mappoints.html","refentity":[{"type":"function","name":"mapPoints","fcntype":"instancemethod"},{"type":"method","name":"monovslam.mapPoints","fcntype":"instancemethod"}],"refpurpose":"Build 3-D map of world points","introduced":"R2025a","description":"This MATLAB function builds a sparse 3-D map of world points, xyzPoints, from the input images in the visual simultaneous localization and mapping (vSLAM) object vslam.","syntaxgroup":[{"title":"","syntax":["xyzPoints = mapPoints(vslam)"]}],"inputgroup":[{"title":"","inputs":[{"name":"vslam","purpose":"Visual SLAM object","htmlid":"mw_cb306edc-41a7-45bf-b50e-e9dd137262f3_sep_mw_49257396-1938-4e27-9982-8b9c89ce0815","value":["monovslam object"]}]}],"outputs":[{"name":"xyzPoints","purpose":"3-D map of world points","htmlid":"mw_cb306edc-41a7-45bf-b50e-e9dd137262f3_sep_mw_4f3619e5-6b1f-4cca-9b17-fdbe35a4d5c5","value":["M-by-3 matrix"]}],"examples":[{"url":"monovslam.mappoints.html#mw_e9df01e1-975b-4fd2-b10e-302a6a90da96","open_command":"openExample('slam\/MonocularVisualSLAMUsingTUMRGBDDataSetExample')","title":"Monocular Visual SLAM Using TUM RGB-D Data Set"}],"seealso":[{"url":"monovslam.html","name":"monovslam"},{"url":"monovslam.checkstatus.html","name":"checkStatus"},{"url":"monovslam.isdone.html","name":"isDone"},{"url":"monovslam.addframe.html","name":"addFrame"},{"url":"monovslam.poses.html","name":"poses"},{"url":"monovslam.plot.html","name":"plot"},{"url":"monovslam.reset.html","name":"reset"},{"url":"monovslam.hasnewkeyframe.html","name":"hasNewKeyFrame"}]},{"href":"ref\/monovslam.plot.html","refentity":[{"type":"function","name":"plot","fcntype":"instancemethod"},{"type":"method","name":"monovslam.plot","fcntype":"instancemethod"}],"refpurpose":"Plot 3-D map points and estimated camera trajectory in visual SLAM","introduced":"R2025a","description":"This MATLAB function plots the 3-D map points and estimated camera trajectory from the visual SLAM object vslam.","syntaxgroup":[{"title":"","syntax":["plot(vslam)","plot(vslam,Name=Value)","ax = plot(___)"]}],"inputgroup":[{"title":"","inputs":[{"name":"vslam","purpose":"Visual SLAM object","htmlid":"mw_fe7b2c3b-323b-4b4e-980f-dcd1426f65aa_sep_mw_49257396-1938-4e27-9982-8b9c89ce0815","value":["monovslam object"]}]},{"namevaluepairs":[{"title":"","inputs":[{"name":"MarkerSize","purpose":"Diameter of markers for 3-D map points","htmlid":"mw_fe7b2c3b-323b-4b4e-980f-dcd1426f65aa_sep_mw_5bb956f8-32f3-462e-a9fd-887ee3bb6a21","value":["6","positive integer"],"defaultvalue":"6"},{"name":"MarkerColor","purpose":"Color of markers for 3-D map points","htmlid":"mw_fe7b2c3b-323b-4b4e-980f-dcd1426f65aa_sep_mw_a5b5de91-219d-4606-baf7-d60c7582d9c3","value":["[0,1,0]","RGB triplet","short or long color name"],"defaultvalue":"[0,1,0]"},{"name":"ColorSource","purpose":"Colormap source for markers","htmlid":"mw_fe7b2c3b-323b-4b4e-980f-dcd1426f65aa_sep_mw_b260eac1-b891-42cb-8991-095cafdd757a","value":["\"Y\"","\"X\"","\"Z\"","\"MarkerColor\""],"defaultvalue":"\"Y\""},{"name":"CameraSize","purpose":"Width of camera base","htmlid":"mw_fe7b2c3b-323b-4b4e-980f-dcd1426f65aa_sep_mw_a2655efa-affb-4ca8-9510-b6641c9ff043","value":["0.1","scalar"],"defaultvalue":"0.1"},{"name":"CameraColor","purpose":"Color of camera","htmlid":"mw_fe7b2c3b-323b-4b4e-980f-dcd1426f65aa_sep_mw_ba5f77ce-25a5-4baa-8ad6-f26f98461211","value":["[1,0,0]","RGB triplet","short or long color name"],"defaultvalue":"[1,0,0]"},{"name":"Parent","purpose":"Axes for visualization","htmlid":"mw_fe7b2c3b-323b-4b4e-980f-dcd1426f65aa_sep_mw_d7a28e44-7531-4b6d-abea-86e4532d06d0","value":["Axes object","UIAxes object"]}]}]}],"outputs":[{"name":"ax","purpose":"Axes handle","htmlid":"mw_fe7b2c3b-323b-4b4e-980f-dcd1426f65aa_sep_mw_4f3619e5-6b1f-4cca-9b17-fdbe35a4d5c5","value":["Axes graphics object"]}],"examples":[{"url":"monovslam.plot.html#mw_24015f76-a179-4a5e-b115-5d2f5baf73eb","open_command":"openExample('slam\/MonocularVisualSLAMUsingTUMRGBDDataSetExample')","title":"Monocular Visual SLAM Using TUM RGB-D Data Set"}],"seealso":[{"url":"monovslam.html","name":"monovslam"},{"url":"monovslam.checkstatus.html","name":"checkStatus"},{"url":"monovslam.isdone.html","name":"isDone"},{"url":"monovslam.addframe.html","name":"addFrame"},{"url":"monovslam.poses.html","name":"poses"},{"url":"monovslam.mappoints.html","name":"mapPoints"},{"url":"monovslam.reset.html","name":"reset"},{"url":"monovslam.hasnewkeyframe.html","name":"hasNewKeyFrame"}]},{"href":"ref\/monovslam.poses.html","refentity":[{"type":"function","name":"poses","fcntype":"instancemethod"},{"type":"method","name":"monovslam.poses","fcntype":"instancemethod"}],"refpurpose":"Absolute camera poses of key frames","introduced":"R2025a","description":"This MATLAB function returns the absolute camera poses camPoses of the key frames from the visual simultaneous localization and mapping (vSLAM) object vslam.","syntaxgroup":[{"title":"","syntax":["camPoses = poses(vslam)","[camPoses,keyFrameIDs] = poses(vslam)"]}],"inputgroup":[{"title":"","inputs":[{"name":"vslam","purpose":"Visual SLAM object","htmlid":"mw_16ab8223-0b0a-43ff-b32f-63d6c3b0186c_sep_mw_49257396-1938-4e27-9982-8b9c89ce0815","value":["monovslam object"]}]}],"outputs":[{"name":"camPoses","purpose":"Absolute camera poses of key frames","htmlid":"mw_16ab8223-0b0a-43ff-b32f-63d6c3b0186c_sep_mw_4f3619e5-6b1f-4cca-9b17-fdbe35a4d5c5","value":["M-element array of rigidtform3d objects"]},{"name":"keyFrameIDs","purpose":"Key frame IDs for absolute camera poses","htmlid":"mw_16ab8223-0b0a-43ff-b32f-63d6c3b0186c_sep_mw_0b4d223c-07ac-476e-a391-c1b291cca5db","value":["M-element array of integers"]}],"examples":[{"url":"monovslam.poses.html#mw_3672e2cb-dca5-4f50-ac55-ea5e3091e269","open_command":"openExample('slam\/MonocularVisualSLAMUsingTUMRGBDDataSetExample')","title":"Monocular Visual SLAM Using TUM RGB-D Data Set"}],"seealso":[{"url":"monovslam.html","name":"monovslam"},{"url":"monovslam.checkstatus.html","name":"checkStatus"},{"url":"monovslam.isdone.html","name":"isDone"},{"url":"monovslam.addframe.html","name":"addFrame"},{"url":"monovslam.mappoints.html","name":"mapPoints"},{"url":"monovslam.plot.html","name":"plot"},{"url":"monovslam.reset.html","name":"reset"},{"url":"monovslam.hasnewkeyframe.html","name":"hasNewKeyFrame"}]},{"href":"ref\/monovslam.reset.html","refentity":[{"type":"function","name":"reset","fcntype":"instancemethod"},{"type":"method","name":"monovslam.reset","fcntype":"instancemethod"}],"refpurpose":"Reset visual SLAM object","introduced":"R2025a","description":"This MATLAB function resets all internal processes and clears all data in the object.","syntaxgroup":[{"title":"","syntax":["reset(vslam)"]}],"inputgroup":[{"title":"","inputs":[{"name":"vslam","purpose":"Visual SLAM object","htmlid":"mw_e64605a2-799d-43ea-97c1-7414cd3c3fa7_sep_mw_49257396-1938-4e27-9982-8b9c89ce0815","value":["monovslam object"]}]}],"examples":[{"url":"monovslam.reset.html#mw_4b57c898-ddbb-48ed-8556-3c0b5119152b","open_command":"openExample('slam\/MonocularVisualSLAMUsingTUMRGBDDataSetExample')","title":"Monocular Visual SLAM Using TUM RGB-D Data Set"}],"seealso":[{"url":"monovslam.html","name":"monovslam"},{"url":"monovslam.checkstatus.html","name":"checkStatus"},{"url":"monovslam.isdone.html","name":"isDone"},{"url":"monovslam.addframe.html","name":"addFrame"},{"url":"monovslam.poses.html","name":"poses"},{"url":"monovslam.mappoints.html","name":"mapPoints"},{"url":"monovslam.plot.html","name":"plot"},{"url":"monovslam.hasnewkeyframe.html","name":"hasNewKeyFrame"}]},{"href":"ref\/montecarlolocalization-system-object.html","refentity":[{"type":"sysobj","name":"monteCarloLocalization"},{"type":"function","name":"monteCarloLocalization","fcntype":"constructor"}],"refpurpose":"Localize robot using range sensor data and map","introduced":"R2019b","description":"The monteCarloLocalization System object creates a Monte Carlo localization (MCL) object.","syntaxgroup":[{"title":"","syntaxtype":"createobject","syntax":["mcl = monteCarloLocalization","mcl = monteCarloLocalization(Name,Value)"]},{"title":"","syntaxtype":"usage","syntax":["[isUpdated,pose,covariance] = mcl(odomPose,scan)"]},{"title":"","syntaxtype":"usage","syntax":["[isUpdated,pose,covariance] = mcl(odomPose,ranges,angles)"]}],"inputgroup":[{"title":"","inputs":[{"name":"odomPose","purpose":"Pose based on odometry","syntaxtype":"usage","htmlid":"d126e132177","value":["three-element vector"]},{"name":"scan","purpose":"Lidar scan readings","syntaxtype":"usage","htmlid":"d126e132197","value":["lidarScan object"]},{"name":"ranges","purpose":"Range values from scan data","syntaxtype":"usage","htmlid":"d126e132233","value":["vector"]},{"name":"angles","purpose":"Angle values from scan data","syntaxtype":"usage","htmlid":"d126e132257","value":["vector"]}]}],"outputs":[{"name":"isUpdated","purpose":"Flag for pose update","syntaxtype":"usage","htmlid":"d126e132285","value":["logical"]},{"name":"pose","purpose":"Current pose estimate","syntaxtype":"usage","htmlid":"d126e132311","value":["three-element vector"]},{"name":"covariance","purpose":"Covariance estimate for current pose","syntaxtype":"usage","htmlid":"d126e132331","value":["matrix"]}],"classpropertygroup":[{"classproperty":[{"name":"InitialPose","purpose":"Initial pose of vehicle","htmlid":"d126e131830","value":["[0 0 0]","three-element vector"],"defaultvalue":"[0 0 0]"},{"name":"InitialCovariance","purpose":"Covariance of initial pose","htmlid":"d126e131855","value":["diag([1 1 1])","diagonal matrix","three-element vector","scalar"],"defaultvalue":"diag([1 1 1])"},{"name":"GlobalLocalization","purpose":"Flag to start global localization","htmlid":"d126e131882","value":["false","true"],"defaultvalue":"false"},{"name":"ParticleLimits","purpose":"Minimum and maximum number of particles","htmlid":"d126e131921","value":["[500 5000]","two-element vector"],"defaultvalue":"[500 5000]"},{"name":"SensorModel","purpose":"Likelihood field sensor model","htmlid":"d126e131944","value":["likelihoodFieldSensor object"]},{"name":"MotionModel","purpose":"Odometry motion model for differential drive","htmlid":"d126e131977","value":["odometryMotionModel object"]},{"name":"UpdateThresholds","purpose":"Minimum change in states required to trigger update","htmlid":"d126e132008","value":["three-element vector","[0.2 0.2 0.2]"],"defaultvalue":"[0.2 0.2 0.2]"},{"name":"ResamplingInterval","purpose":"Number of filter updates between resampling of particles","htmlid":"d126e132031","value":["1","positive integer"],"defaultvalue":"1"},{"name":"UseLidarScan","purpose":"Use lidarScan object as scan input","htmlid":"d126e132051","value":["false","true"],"defaultvalue":"false"}]}],"objectfunctions":[{"title":"Specific to monteCarloLocalization","functions":[{"name":"getParticles","url":"montecarlolocalization.getparticles.html","description":"Get particles from localization algorithm"},{"name":"setParticles","url":"montecarlolocalization.setparticles.html","description":"Set particles from localization algorithm"}]},{"title":"Common to All System Objects","functions":[{"name":"step","url":"..\/..\/matlab\/ref\/step.html","description":"Run System object algorithm"},{"name":"release","url":"..\/..\/matlab\/ref\/matlab.system.releasesystemobject.html","description":"Release resources and allow changes to System object property values and input characteristics"},{"name":"reset","url":"..\/..\/matlab\/ref\/resetsystemobject.html","description":"Reset internal states of System object"}]}],"examples":[{"url":"montecarlolocalization-system-object.html#mw_4a356fb0-0d51-467b-a154-ead10b6ff64a","open_command":"openExample('nav\/EstimateRobotPoseFromRangeSensorDataExample')","title":"Estimate Vehicle Pose from Range Sensor Data"}],"seealso":[{"url":"lidarscan.html","name":"lidarScan"},{"url":"likelihoodfieldsensormodel.html","name":"likelihoodFieldSensorModel"},{"url":"odometrymotionmodel.html","name":"odometryMotionModel"}]},{"href":"ref\/montecarlolocalization.getparticles.html","refentity":[{"type":"function","name":"getParticles","fcntype":"instancemethod"},{"type":"method","name":"monteCarloLocalization.getParticles","fcntype":"instancemethod"}],"refpurpose":"Get particles from localization algorithm","introduced":"R2019b","description":"This MATLAB function returns the current particles used by the monteCarloLocalization object.","syntaxgroup":[{"title":"","syntax":["[particles,weights] = getParticles(mcl)"]}],"inputgroup":[{"title":"","inputs":[{"name":"mcl","purpose":"monteCarloLocalization object","htmlid":"d126e132586","value":["handle"]}]}],"outputs":[{"name":"particles","purpose":"Estimation particles","htmlid":"d126e132612","value":["n-by-3 matrix"]},{"name":"weights","purpose":"Weights of particles","htmlid":"d126e132636","value":["n-element row vector"]}],"examples":[{"url":"montecarlolocalization.getparticles.html#mw_41168fdf-1f2a-49fc-bdaf-fb56778969cb","open_command":"openExample('nav\/GetParticlesFromMonteCarloLocalizationAlgorithmExample')","title":"Get Particles from Monte Carlo Localization Algorithm"}],"seealso":[{"url":"montecarlolocalization-system-object.html","name":"monteCarloLocalization"},{"url":"montecarlolocalization.setparticles.html","name":"setParticles"}]},{"href":"ref\/montecarlolocalization.setparticles.html","refentity":[{"type":"function","name":"setParticles","fcntype":"instancemethod"},{"type":"method","name":"monteCarloLocalization.setParticles","fcntype":"instancemethod"}],"refpurpose":"Set particles from localization algorithm","introduced":"R2024a","description":"This MATLAB function sets the particle poses and sets the weights of each particle to 1\/n, where n is the number of particles in the mcl object at the current timestep.","syntaxgroup":[{"title":"","syntax":["setParticles(mcl,particles)","setParticles(mcl,particles,weights)"]}],"inputgroup":[{"title":"","inputs":[{"name":"mcl","purpose":"monteCarloLocalization object","htmlid":"mw_ae890948-414e-4096-a421-bcd850b261de","value":["handle"]},{"name":"particles","purpose":"Estimation particles","htmlid":"mw_ed4ea6c3-6727-470d-a125-bd5e938f85df","value":["n-by-3 matrix"]},{"name":"weights","purpose":"Weights of particles","htmlid":"mw_140dacbd-08c2-4b90-bd11-aaa78d4a79af","value":["n-element column vector"]}]}],"examples":[{"url":"montecarlolocalization.setparticles.html#mw_5a5c905d-2a12-489c-94c5-ea6aceb954fc","open_command":"openExample('nav\/SetParticlesFromMonteCarloLocalizationAlgorithmExample')","title":"Set Particles from Monte Carlo Localization Algorithm"}],"seealso":[{"url":"montecarlolocalization-system-object.html","name":"monteCarloLocalization"},{"url":"montecarlolocalization.getparticles.html","name":"getParticles"}]},{"href":"ref\/mpnetlayers.html","refentity":[{"type":"function","name":"mpnetLayers","fcntype":"simple"}],"refpurpose":"Create custom motion planning networks","introduced":"R2024a","description":"This MATLAB function creates layers for motion planning networks (MPNet) with specified number of inputs and outputs.","syntaxgroup":[{"title":"","syntax":["layers = mpnetLayers(numInputs,numOutputs)","layers = mpnetLayers(numInputs,numOutputs,Name=Value)"]}],"inputgroup":[{"title":"","inputs":[{"name":"numInputs","purpose":"Number of inputs to network","htmlid":"mw_c6b269f5-6b6a-4ed9-be6d-361fbcbd2401","value":["positive integer scalar"]},{"name":"numOutputs","purpose":"Number of outputs from network","htmlid":"mw_ea03d416-ea87-4d02-a511-0fe56661dcb0","value":["positive integer scalar"]}]},{"namevaluepairs":[{"title":"","inputs":[{"name":"HiddenSizes","purpose":"Size of hidden layers","htmlid":"mw_ed4768d2-1e64-40dc-9a62-6b4b757ea84b","value":["[256 128 64 32]","vector of positive integers"],"defaultvalue":"[256 128 64 32]"},{"name":"DropoutProbabilities","purpose":"Probability of dropping out input elements in dropout layers","htmlid":"mw_cf9c291b-c937-40f3-9028-26bff4e1f772","value":["[0.1 0.1]","vector in the range [0, 1)"],"defaultvalue":"[0.1 0.1]"}]}]}],"outputs":[{"name":"layers","purpose":"MPNet layers","htmlid":"mw_7071a287-d8ac-43f2-9b8a-5382d629f627","value":["layer array"]}],"examples":[{"url":"mpnetlayers.html#mw_a152c045-41cd-48dc-91f4-f45c01a26cd1","open_command":"openExample('nav\/CreateCustomMotionPlanningNetworksExample')","title":"Create Custom Motion Planning Networks"}],"seealso":[{"url":"mpnetse2.html","name":"mpnetSE2"},{"url":"mpnetpreparedata.html","name":"mpnetPrepareData"},{"url":"statesamplermpnet.html","name":"stateSamplerMPNET"},{"url":"plannermpnet.html","name":"plannerMPNET"}]},{"href":"ref\/mpnetpreparedata.html","refentity":[{"type":"function","name":"mpnetPrepareData","fcntype":"simple"}],"refpurpose":"Prepare training data for Motion Planning Networks","introduced":"R2023b","description":"This MATLAB function preprocesses the input data for training the Motion Planning Networks (MPNet) on an SE(2) state space model.","syntaxgroup":[{"title":"","syntax":["ds = mpnetPrepareData(dataset,mpnet)"]}],"inputgroup":[{"title":"","inputs":[{"name":"dataset","purpose":"Data set for training MPNet","htmlid":"mw_9d3e257f-370c-4310-8704-aaad6df7ce41","value":["cell array","table"]},{"name":"mpnet","purpose":"MPNet to train","htmlid":"mw_add4f529-c0ba-4f85-b3af-3a8061d28526","value":["mpnetSE2 object"]}]}],"outputs":[{"name":"ds","purpose":"Preprocessed data for training MPNet","htmlid":"mw_aec628f1-28f2-4211-8d07-6ef7ca3990c5","value":["CombinedDatastore object"]}],"examples":[{"url":"mpnetpreparedata.html#mw_4abf7506-1dde-402d-9331-90c84d63a3bd","open_command":"openExample('nav\/PrepareDataForTrainingMPNetExample')","title":"Prepare Data for Training MPNet"}],"seealso":[{"url":"mpnetse2.html","name":"mpnetSE2"},{"url":"statesamplermpnet.html","name":"stateSamplerMPNET"},{"url":"bpsencoder.html","name":"bpsEncoder"}]},{"href":"ref\/mpnetse2.copy.html","refentity":[{"type":"function","name":"copy","fcntype":"instancemethod"},{"type":"method","name":"mpnetSE2.copy","fcntype":"instancemethod"}],"refpurpose":"Create deep copy of mpnetSE2 object","introduced":"R2023b","description":"This MATLAB function creates a deep copy of the specified mpnetSE2 object.","syntaxgroup":[{"title":"","syntax":["mpnet2 = copy(mpnet1)"]}],"inputgroup":[{"title":"","inputs":[{"name":"mpnet1","purpose":"MPNet object","htmlid":"mw_765d7549-1b1d-454b-bff6-6e6d3edb9ac3","value":["mpnetSE2 object"]}]}],"outputs":[{"name":"mpnet2","purpose":"Copy of MPNet object","htmlid":"mw_fa6bcf81-afd8-4d8c-86a1-dcf5f5ded968","value":["mpnetSE2 object"]}],"examples":[{"url":"mpnetse2.copy.html#mw_69349013-6eab-431f-ace7-36b44f330f80","open_command":"openExample('nav\/CreateCopiesOfMpnetSE2ObjectExample')","title":"Create Copy of mpnetSE2 Object"}],"seealso":[{"url":"mpnetse2.html","name":"mpnetSE2"},{"url":"mpnetse2.predict.html","name":"predict"},{"url":"mpnetse2.loss.html","name":"loss"}]},{"href":"ref\/mpnetse2.html","refentity":[{"type":"object","name":"mpnetSE2"},{"type":"function","name":"mpnetSE2","fcntype":"constructor"}],"refpurpose":"Motion Planning Networks","introduced":"R2023b","description":"The mpnetSE2 object stores Motion Planning Networks (MPNet) to use for state space sampling or motion planning.","syntaxgroup":[{"title":"","syntax":["mpnet = mpnetSE2","mpnet = mpnetSE2(Name=Value)"]}],"classpropertygroup":[{"classproperty":[{"name":"Network","purpose":"Pretrained or untrained MPNet","htmlid":"mw_0baa6ab6-2afa-4d81-920b-300ff6a1c2ce","value":["dlnetwork object","LayerGraph object"]},{"name":"StateBounds","purpose":"Limits of SE(2) state space variables","htmlid":"mw_d43b000b-6168-4807-93f0-bc43a5e73269","value":["[-100 100; -100 100; -pi pi]","3-by-2 matrix of real values"],"defaultvalue":"[-100 100; -100 100; -pi pi]"},{"name":"LossWeights","purpose":"Loss function weights","htmlid":"mw_26d70d82-950a-42b5-a436-f55074009c29","value":["[1 1 1]","three-element vector of real positive values"],"defaultvalue":"[1 1 1]"},{"name":"EncodingSize","purpose":"Size of encoded environment","htmlid":"mw_a1e9bbb7-5655-4ccc-8732-b3f6efcbf236","value":["[10 10]","two-element vector of nonnegative integers","nonnegative scalar"],"defaultvalue":"[10 10]"},{"name":"NumInputs","readonly":true,"purpose":"Number of inputs","htmlid":"mw_ecebf8a6-0da5-471e-b052-7a24187419d4","value":["108","positive integer"],"defaultvalue":"108"},{"name":"NumOutputs","readonly":true,"purpose":"Number of outputs","htmlid":"mw_360fd7e1-e344-495d-821b-119a25605cf9","value":["4"],"defaultvalue":"4"}]}],"objectfunctions":[{"title":"","functions":[{"name":"predict","url":"mpnetse2.predict.html","description":"Predict state samples using MPNet"},{"name":"loss","url":"mpnetse2.loss.html","description":"Compute loss between predicted states and actual states"},{"name":"copy","url":"mpnetse2.copy.html","description":"Create deep copy of mpnetSE2 object"}]}],"examples":[{"url":"mpnetse2.html#mw_5dd9d490-5425-4463-a4f7-d139c759a12f","open_command":"openExample('nav\/TrainMPNetOnSingleMapEnvironmentExample')","title":"Train MPNet on Single Map Environment"},{"url":"mpnetse2.html#mw_b7c75c72-8c53-4f83-9525-226b4a75b7f3","open_command":"openExample('nav\/TrainMPNetOnCustomDataForMotionPlanningExample')","title":"Train MPNet on Custom Data for Motion Planning"},{"url":"mpnetse2.html#mw_b87e0901-8a87-4c07-9472-bb05aca72508","open_command":"openExample('nav\/SampleSE2StateSpaceUsingPretrainedMPNetExample')","title":"Sample SE(2) State Space Using Pretrained MPNet"},{"url":"mpnetse2.html#mw_a2df3f8c-0555-41be-89fd-e15623a13a3a","open_command":"openExample('nav\/PlanPathBetweenTwoStatesUsingMPNetPathPlannerExample')","title":"Plan Path Between Two States Using MPNet Path Planner"}],"seealso":[{"url":"statesamplermpnet.html","name":"stateSamplerMPNET"},{"url":"plannermpnet.html","name":"plannerMPNET"},{"url":"mpnetse2.predict.html","name":"predict"},{"url":"mpnetse2.loss.html","name":"loss"},{"url":"mpnetse2.copy.html","name":"copy"},{"url":"mpnetpreparedata.html","name":"mpnetPrepareData"},{"url":"mpnetlayers.html","name":"mpnetLayers"}]},{"href":"ref\/mpnetse2.loss.html","refentity":[{"type":"function","name":"loss","fcntype":"instancemethod"},{"type":"method","name":"mpnetSE2.loss","fcntype":"instancemethod"}],"refpurpose":"Compute loss between predicted states and actual states","introduced":"R2023b","description":"This MATLAB function computes loss between the predicted states and the actual states while training the Motion Planning Networks (MPNet).","syntaxgroup":[{"title":"","syntax":["L = loss(mpnet,statePred,stateActual)"]}],"inputgroup":[{"title":"","inputs":[{"name":"mpnet","purpose":"Trained MPNet","htmlid":"mw_c8621155-01ad-45cf-8c29-5c8a51f45a43","value":["mpnetSE2 object"]},{"name":"statePred","purpose":"Predicted states","htmlid":"mw_1f42bc66-99c6-4c91-8473-7c4d089025ba","value":["4-by-n matrix"]},{"name":"stateActual","purpose":"Actual states","htmlid":"mw_ef75d88a-c833-4d44-9f11-84890f6da60b","value":["4-by-n matrix"]}]}],"outputs":[{"name":"L","purpose":"Computed loss value","htmlid":"mw_b7335ed4-168c-4b23-ad53-59d4505fdde4","value":["dlarrray object"]}],"examples":[{"url":"mpnetse2.loss.html#mw_66a0cb0d-cb63-4f58-ad3d-747c7bdadf81","open_command":"openExample('nav\/ComputeLossBetweenActualStatesAndPredictedStatesExample')","title":"Compute Loss Between Actual States and Predicted States"}],"seealso":[{"url":"mpnetse2.html","name":"mpnetSE2"},{"url":"mpnetse2.predict.html","name":"predict"},{"url":"mpnetse2.copy.html","name":"copy"}]},{"href":"ref\/mpnetse2.predict.html","refentity":[{"type":"function","name":"predict","fcntype":"instancemethod"},{"type":"method","name":"mpnetSE2.predict","fcntype":"instancemethod"}],"refpurpose":"Predict state samples using MPNet","introduced":"R2023b","description":"This MATLAB function predicts the next state sample between a start state and goal state in a single environment.","syntaxgroup":[{"title":"","syntax":["statePred = predict(mpnet,start,goal)","statePred = predict(mpnet,start,goal,environment)"]}],"inputgroup":[{"title":"","inputs":[{"name":"mpnet","purpose":"Motion planning networks","htmlid":"mw_93db24a1-1ff5-49ac-9a27-75fe50ffdacd","value":["mpnetSE2 object"]},{"name":"start","purpose":"Start pose","htmlid":"mw_18627d05-ab46-4950-b927-724535c314d9","value":["three element vector"]},{"name":"goal","purpose":"Goal pose","htmlid":"mw_64f4aa61-afd7-4bab-b94e-952e6c91c66d","value":["three-element vector"]},{"name":"environment","purpose":"Encoded environment","htmlid":"mw_633723f1-372b-40bf-9be9-4d236c485d63","value":["binaryOccupancyMap object","occupancyMap object"]}]}],"outputs":[{"name":"statePred","purpose":"Predicted next state","htmlid":"mw_d44476f0-25a7-4889-9855-2e1b0b21355a","value":["three-element vector"]}],"examples":[{"url":"mpnetse2.predict.html#mw_820c5c3b-d0c4-449b-8115-46cba5a9b35b","open_command":"openExample('nav\/PredictStateSamplesUsingPretrainedMPNetExample')","title":"Predict State Samples Using MPNet Trained on Single Environment"},{"url":"mpnetse2.predict.html#mw_a16893a6-639c-4812-a983-ca9923c9aab5","open_command":"openExample('nav\/PredictStateUsingMPNetTrainedOnMultipleEnvironmentsExample')","title":"Predict State Samples Using MPNet Trained on Multiple Environments"}],"seealso":[{"url":"mpnetse2.html","name":"mpnetSE2"},{"url":"mpnetse2.loss.html","name":"loss"},{"url":"mpnetse2.copy.html","name":"copy"}]},{"href":"ref\/multilayermap.getlayer.html","refentity":[{"type":"function","name":"getLayer","fcntype":"instancemethod"},{"type":"method","name":"multiLayerMap.getLayer","fcntype":"instancemethod"}],"refpurpose":"Return individual layers from multilayer map","introduced":"R2021a","description":"This MATLAB function returns the individual map layer, specified by the layer name layerName.","syntaxgroup":[{"title":"","syntax":["mapLayer = getLayer(map,layerName)"]}],"inputgroup":[{"title":"","inputs":[{"name":"map","purpose":"Multilayer map","htmlid":"mw_8aaaeaff-dace-487e-9034-c769c3d65fb8","value":["multiLayerMap object"]},{"name":"layerName","purpose":"Name of individual map layer","htmlid":"mw_1bf98a0c-e4f5-42d0-a8e4-07860135bcc0_sep_mw_1a652b71-f35a-4827-b3c9-f945ab07b462","value":["string scalar","character vector"]}]}],"outputs":[{"name":"mapLayer","purpose":"Individual map layer","htmlid":"mw_4a28955e-a407-4856-afd1-b0052ba8d58f","value":["binaryOccupancyMap object","occupancyMap object","mapLayer object"]}],"examples":[{"url":"multilayermap.getlayer.html#mw_9c6d2951-9456-47df-bb6a-4187bb8001a2","open_command":"openExample('nav\/GetIndividualMapLayersFromMultilayerMapExample')","title":"Get Individual Map Layers from Multilayer Map"}],"seealso":[{"url":"maplayer.html","name":"mapLayer"},{"url":"occupancymap3d.html","name":"occupancyMap3D"},{"url":"occupancymap.html","name":"occupancyMap"},{"url":"binaryoccupancymap.html","name":"binaryOccupancyMap"},{"url":"multilayermap.getmapdata.html","name":"getMapData"},{"url":"multilayermap.setmapdata.html","name":"setMapData"},{"url":"occupancymap.move.html","name":"move"},{"url":"occupancymap.syncwith.html","name":"syncWith"}]},{"href":"ref\/multilayermap.getmapdata.html","refentity":[{"type":"function","name":"getMapData","fcntype":"instancemethod"},{"type":"method","name":"multiLayerMap.getMapData","fcntype":"instancemethod"}],"refpurpose":"Retrieve data from map layers","introduced":"R2021a","description":"This MATLAB function returns a cell array of matrices for the data in each layer of the specified multiLayerMap object.","syntaxgroup":[{"title":"","syntax":["mapData = getMapData(map)","mapData = getMapData(map,layername)","mapData = getMapData(map,layername,layerinputs)"]}],"inputgroup":[{"title":"","inputs":[{"name":"map","purpose":"Multilayer map","htmlid":"mw_307b0699-299e-47c0-a40d-17fa3911c76b","value":["multiLayerMap object"]},{"name":"layername","purpose":"Map layer name","htmlid":"mw_50f20ab9-017d-4592-862a-db6790776e88","value":["string scalar","character array"]},{"name":"layerinputs","purpose":"Variable-length inputs to map layer","htmlid":"mw_2086c6f9-1c24-454e-af1e-5c3a0424fed6","value":["varargin"]}]}],"outputs":[{"name":"mapData","purpose":"Data values from map layer","htmlid":"mw_418c76a6-0205-4f3f-8dff-192fa880b7b8","value":["matrix"]}],"examples":[{"url":"multilayermap.getmapdata.html#mw_0edbc7a7-81a5-492a-bf1a-c9f05e3e92a5","open_command":"openExample('nav\/CreateListenersUsingDependentMapLayersExample')","title":"Create Listeners Using Dependent Map Layers"}],"seealso":[{"url":"multilayermap.html","name":"multiLayerMap"},{"url":"maplayer.html","name":"mapLayer"},{"url":"occupancymap3d.html","name":"occupancyMap3D"},{"url":"occupancymap.html","name":"occupancyMap"},{"url":"binaryoccupancymap.html","name":"binaryOccupancyMap"},{"url":"multilayermap.setmapdata.html","name":"setMapData"},{"url":"occupancymap.move.html","name":"move"},{"url":"occupancymap.syncwith.html","name":"syncWith"}]},{"href":"ref\/multilayermap.html","refentity":[{"type":"object","name":"multiLayerMap"},{"type":"function","name":"multiLayerMap","fcntype":"constructor"}],"refpurpose":"Manage multiple map layers","introduced":"R2021a","description":"The multiLayerMap object groups and stores multiple map layers as mapLayer, occupancyMap, or binaryOccupancyMap objects.","syntaxgroup":[{"title":"","syntax":["map = multiLayerMap","map = multiLayerMap(maps)","map = multiLayerMap(names,mapData)","map = multiLayerMap(names,width,height)","map = multiLayerMap(names,width,height,cellDims)","map = multiLayerMap(names,rows,cols,'grid')","map = multiLayerMap(names,rows,cols,cellDims,'grid')","map = multiLayerMap(sourceMap)","map = multiLayerMap(___,Name,Value)"]}],"inputgroup":[{"title":"","inputs":[{"name":"maps","purpose":"Map layers","htmlid":"mw_9faa6f7e-fc19-4e5e-8ce1-a7b3c8702ca5","value":["N-element cell array of mapLayer objects"]},{"name":"names","purpose":"Name of each layer","htmlid":"mw_da881d89-695c-4967-8486-a45db03b943c","value":["cell array of string scalars"]},{"name":"mapData","purpose":"Map data of map layers","htmlid":"mw_e98fb0c6-45c0-4958-85e6-9ff61a7bb3f5","value":["cell array of matrices"]},{"name":"width","purpose":"Map width","htmlid":"mw_ca705628-e3ff-4c01-8c69-fd4da3db8890_sep_mw_97eb5f63-cb20-4ee5-a76d-b952dceab72c","value":["positive numeric scalar"]},{"name":"height","purpose":"Map height","htmlid":"mw_ca705628-e3ff-4c01-8c69-fd4da3db8890_sep_mw_c68ad401-45dc-479a-974c-cf1582a9634f","value":["positive numeric scalar"]},{"name":"rows","purpose":"Number of grid rows","htmlid":"mw_ca705628-e3ff-4c01-8c69-fd4da3db8890_sep_mw_fbc605ff-63ca-4829-bff6-e3e134415637","value":["positive numeric integer"]},{"name":"cols","purpose":"Number of grid columns","htmlid":"mw_ca705628-e3ff-4c01-8c69-fd4da3db8890_sep_mw_76eccead-94c7-43de-b59f-266b0c2679b9","value":["positive numeric integer"]},{"name":"cellDims","purpose":"Dimensions of cell data in map layers","htmlid":"mw_2bff177f-a76a-43e5-8433-97c7d13ceaa9","value":["1","positive numeric integer","N-element vector of positive integers","M-by-N matrix of positive integers"],"defaultvalue":"1"},{"name":"sourceMap","purpose":"Source map layer","htmlid":"mw_1de6b159-c42a-41c0-a6db-ee46b3518bf5","value":["multiLayerMap object"]}]}],"classpropertygroup":[{"classproperty":[{"name":"DataSize","purpose":"Size of the data in each map layer data array","htmlid":"mw_741e872c-3163-43df-8fc7-63ed21042872","value":["cell array of integer vectors"]},{"name":"DataType","purpose":"Data type of the values stored","htmlid":"mw_c821c6af-37ad-48b2-afe0-45a07413e1c0","value":["cell array of string scalars"]},{"name":"DefaultValue","purpose":"Default value for unspecified map locations","htmlid":"mw_754ebaaf-c46d-4b2d-8ecb-5fa8b63fb6f6","value":["{0}","cell array of numeric scalars"],"defaultvalue":"{0}"},{"name":"GridLocationInWorld","purpose":"Location of the grid in local coordinates","htmlid":"mw_8c87e6cd-bd3b-48cf-ad40-3de8816e2c28","value":["[0 0]","two-element vector","[xWorld yWorld]"],"defaultvalue":"[0 0]"},{"name":"GridOriginInLocal","purpose":"Location of the grid in local coordinates","htmlid":"mw_b8f40e42-7798-4539-a53b-f9a72f72876f","value":["[0 0]","two-element vector","[xLocal yLocal]"],"defaultvalue":"[0 0]"},{"name":"GridSize","readonly":true,"purpose":"Number of rows and columns in grid","htmlid":"mw_ef7cf949-72c8-48f2-bedf-3e9152cf4755","value":["two-element integer-valued vector"]},{"name":"LayerNames","purpose":"Name of each layer","htmlid":"mw_4565f593-3d47-4821-8f09-88e61c980b70","value":["cell array of string scalars"]},{"name":"LocalOriginInWorld","purpose":"Location of the local frame in world coordinates","htmlid":"mw_a477a337-a96f-460f-b7aa-f108281b6bdd","value":["[0 0]","two-element vector","[xWorld yWorld]"],"defaultvalue":"[0 0]"},{"name":"NumLayers","readonly":true,"purpose":"Number of map layers","htmlid":"mw_b3fdab96-63a5-4b94-9b60-6c8f294060b0","value":["1","positive integer"],"defaultvalue":"1"},{"name":"Resolution","readonly":true,"purpose":"Grid resolution","htmlid":"mw_604d5ceb-5b9e-43f0-95bf-fc6d65d2bc56","value":["1","scalar"],"defaultvalue":"1"},{"name":"XLocalLimits","readonly":true,"purpose":"Minimum and maximum values of x-coordinates in local frame","htmlid":"mw_c1858649-852a-44be-bd72-f45e22c5a231","value":["two-element vector"]},{"name":"YLocalLimits","readonly":true,"purpose":"Minimum and maximum values of y-coordinates in local frame","htmlid":"mw_510f5f98-d2f7-4d15-83d0-e4c6cef8d8c7","value":["two-element vector"]},{"name":"XWorldLimits","readonly":true,"purpose":"Minimum and maximum world range values of x-coordinates","htmlid":"mw_cbce6692-e685-4d45-8d4d-c68bf01bd972","value":["two-element vector"]},{"name":"YWorldLimits","readonly":true,"purpose":"Minimum and maximum world range values of y-coordinates","htmlid":"mw_92941151-361c-4200-bd31-0421c670e481","value":["two-element vector"]}]}],"objectfunctions":[{"title":"","functions":[{"name":"getLayer","url":"multilayermap.getlayer.html","description":"Return individual layers from multilayer map"},{"name":"getMapData","url":"multilayermap.getmapdata.html","description":"Retrieve data from map layers"},{"name":"grid2local","url":"occupancymap.grid2local.html","description":"Convert grid indices to local coordinates"},{"name":"grid2world","url":"occupancymap.grid2world.html","description":"Convert grid indices to world coordinates"},{"name":"local2grid","url":"occupancymap.local2grid.html","description":"Convert local coordinates to grid indices"},{"name":"local2world","url":"occupancymap.local2world.html","description":"Convert local coordinates to world coordinates"},{"name":"move","url":"occupancymap.move.html","description":"Move map in world frame"},{"name":"setMapData","url":"multilayermap.setmapdata.html","description":"Assign data to map layers"},{"name":"syncWith","url":"occupancymap.syncwith.html","description":"Sync map with overlapping map"},{"name":"world2grid","url":"occupancymap.world2grid.html","description":"Convert world coordinates to grid indices"},{"name":"world2local","url":"occupancymap.world2local.html","description":"Convert world coordinates to local coordinates"}]}],"examples":[{"url":"multilayermap.html#mw_ca705628-e3ff-4c01-8c69-fd4da3db8890_sep_mw_e0968d65-59f3-43ff-b511-41c3509e5bd0","open_command":"openExample('nav\/CreateListenersUsingDependentMapLayersExample')","title":"Create Listeners Using Dependent Map Layers"}],"seealso":[{"url":"maplayer.html","name":"mapLayer"},{"url":"occupancymap3d.html","name":"occupancyMap3D"},{"url":"occupancymap.html","name":"occupancyMap"},{"url":"binaryoccupancymap.html","name":"binaryOccupancyMap"},{"url":"multilayermap.getmapdata.html","name":"getMapData"},{"url":"multilayermap.setmapdata.html","name":"setMapData"},{"url":"occupancymap.move.html","name":"move"},{"url":"occupancymap.syncwith.html","name":"syncWith"}]},{"href":"ref\/multilayermap.setmapdata.html","refentity":[{"type":"function","name":"setMapData","fcntype":"instancemethod"},{"type":"method","name":"multiLayerMap.setMapData","fcntype":"instancemethod"}],"refpurpose":"Assign data to map layers","introduced":"R2021a","description":"This MATLAB function takes the layerinputs arguments and passes them to the setMapData object function for the specified map layer name.","syntaxgroup":[{"title":"","syntax":["setMapData(map,layername,layerinputs)","inBounds = setMapData(map,layername,layerinputs)"]}],"inputgroup":[{"title":"","inputs":[{"name":"map","purpose":"Multilayer map","htmlid":"mw_c91a5a4f-1ada-4e36-8f84-031cca500b94","value":["multiLayerMap object"]},{"name":"layername","purpose":"Map layer name","htmlid":"mw_6a83797e-72e0-4c7b-88a4-bccd32c9ec56","value":["string scalar","character array"]},{"name":"layerinputs","purpose":"Variable-length inputs to map layer","htmlid":"mw_326b80e8-964f-4e82-869e-d0f91891ed59","value":["varargin"]}]}],"outputs":[{"name":"inBounds","purpose":"Valid map locations","htmlid":"mw_ab2c55a0-374f-493f-ad58-91bc6e1ec8f6","value":["n-by-1 column vector"]}],"examples":[{"url":"multilayermap.setmapdata.html#mw_c8da1ec7-06a2-4b99-82b2-660a0649506b_sep_mw_e0968d65-59f3-43ff-b511-41c3509e5bd0","open_command":"openExample('nav\/CreateListenersUsingDependentMapLayersExample')","title":"Create Listeners Using Dependent Map Layers"}],"seealso":[{"url":"multilayermap.html","name":"multiLayerMap"},{"url":"maplayer.html","name":"mapLayer"},{"url":"occupancymap3d.html","name":"occupancyMap3D"},{"url":"occupancymap.html","name":"occupancyMap"},{"url":"binaryoccupancymap.html","name":"binaryOccupancyMap"},{"url":"multilayermap.getmapdata.html","name":"getMapData"},{"url":"occupancymap.move.html","name":"move"},{"url":"occupancymap.syncwith.html","name":"syncWith"}]},{"href":"ref\/nav.gnssmeasurementgenerator-system-object.html","refentity":[{"type":"sysobj","name":"gnssMeasurementGenerator"},{"type":"sysobj","name":"nav.gnssMeasurementGenerator"},{"type":"function","name":"gnssMeasurementGenerator","fcntype":"constructor"}],"packagename":"nav","refpurpose":"Simulate GNSS measurements for scenarios","introduced":"R2023a","description":"The gnssMeasurementGenerator System object simulates global navigation satellite system (GNSS) receiver measurements.","syntaxgroup":[{"title":"","syntaxtype":"usage","syntax":["[pseudorangeMeasurements,satellitePositions,status] = GNSS"]},{"title":"","syntaxtype":"createobject","syntax":["GNSS = gnssMeasurementGenerator","GNSS = gnssMeasurementGenerator(Name=Value)"]}],"outputs":[{"name":"pseudorangeMeasurements","purpose":"Pseudorange measurements of the GNSS receiver","syntaxtype":"usage","htmlid":"mw_83154c36-a06e-47d1-88e6-102b88b64aa2","value":["N-element vector"]},{"name":"satellitePositions","purpose":"Satellite positions in Earth-centered Earth-fixed coordinate system","syntaxtype":"usage","htmlid":"mw_25cd7b71-4a13-43a2-85af-c7cddfb76226","value":["N-by-3 matrix"]},{"name":"status","purpose":"Status of satellite measurements","syntaxtype":"usage","htmlid":"mw_c54de67a-9895-4db1-90c7-2df990f45a04","value":["structure"]}],"classpropertygroup":[{"classproperty":[{"name":"SampleRate","purpose":"Sample rate of GNSS receiver","htmlid":"mw_562db92c-6315-4632-b856-338253cc8341","value":["1","positive scalar"],"defaultvalue":"1"},{"name":"InitialTime","purpose":"Initial time of GNSS receiver","htmlid":"mw_fb2bfd28-f258-4d0e-a0a2-d72256a98a2f","value":["datetime(\"now\",TimeZone=\"UTC\")","datetime object"],"defaultvalue":"datetime(\"now\",TimeZone=\"UTC\")"},{"name":"ReferenceLocation","purpose":"Origin of local navigation reference frame","htmlid":"mw_d47cb454-fd5c-41d6-9033-409e73c7ddec","value":["[0 0 0]","three-element row vector"],"defaultvalue":"[0 0 0]"},{"name":"MaskAngle","purpose":"Elevation mask angle","htmlid":"mw_77369bd6-bb75-463a-9a7d-ab5d688f0cf6","value":["10","scalar in range [0, 90]"],"defaultvalue":"10"},{"name":"RangeAccuracy","purpose":"Standard deviation of pseudorange measurement noise","htmlid":"mw_3f79f22a-c0f2-4fae-8a66-bb1ea311a1be","value":["1","nonnegative scalar"],"defaultvalue":"1"},{"name":"RandomStream","purpose":"Random number source","htmlid":"mw_abded49f-b711-47da-9d91-658a116d40c3","value":["\"Global stream\"","\"mt19937ar with seed\""],"defaultvalue":"\"Global stream\""},{"name":"Seed","purpose":"Initial seed of mt19937ar random number generator algorithm","htmlid":"mw_66eee8c0-c192-4d2c-8138-0d7e009c45e9","value":["67","nonnegative integer"],"defaultvalue":"67"}]}],"objectfunctions":[{"title":"Common to All System Objects","functions":[{"name":"clone","url":"..\/..\/matlab\/ref\/matlab.system.clone.html","description":"Create duplicate System object"},{"name":"step","url":"..\/..\/matlab\/ref\/step.html","description":"Run System object algorithm"},{"name":"isLocked","url":"..\/..\/matlab\/ref\/matlab.system.islocked.html","description":"Determine if System object is in use"},{"name":"release","url":"..\/..\/matlab\/ref\/matlab.system.releasesystemobject.html","description":"Release resources and allow changes to System object property values and input characteristics"},{"name":"reset","url":"..\/..\/matlab\/ref\/resetsystemobject.html","description":"Reset internal states of System object"}]}],"examples":[{"url":"nav.gnssmeasurementgenerator-system-object.html#mw_7a3da5d3-8890-417b-bb19-02c2b5bceee6","open_command":"openExample('driving_fusion_nav\/GenerateGNSSMeasurementsInDrivingScenarioExample')","title":"Generate GNSS Measurements in Driving Scenario"},{"url":"nav.gnssmeasurementgenerator-system-object.html#mw_b2aa61a1-e872-400c-8eb2-09f630a0fe2d","open_command":"openExample('shared_nav_uav\/GenerateGNSSMeasurementsInUAVScenarioExample')","title":"Generate GNSS Measurements in UAV Scenario"}],"seealso":[{"url":"gpssensor-system-object.html","name":"gpsSensor"},{"url":"imusensor-system-object.html","name":"imuSensor"},{"url":"gnsssensor-system-object.html","name":"gnssSensor"},{"url":"..\/..\/driving\/ref\/drivingscenario.html","name":"drivingScenario"},{"url":"skyplot.html","name":"skyplot"},{"url":"gnssconstellation.html","name":"gnssconstellation"},{"url":"lookangles.html","name":"lookangles"},{"url":"pseudoranges.html","name":"pseudoranges"},{"url":"receiverposition.html","name":"receiverposition"}]},{"href":"ref\/nav.graphics.chart.skyplotchart-properties.html","refentity":[{"type":"properties","name":"SkyPlotChart"},{"type":"properties","name":"nav.graphics.chart.SkyPlotChart"}],"packagename":"nav.graphics.chart","refpurpose":"Sky plot chart appearance and behavior","introduced":"R2021a","description":"The SkyPlotChart properties control the appearance of a sky plot chart generated using the skyplot function.","classpropertygroup":[{"title":"Sky Plot Properties","classproperty":[{"name":"AzimuthData","purpose":"Azimuth angles for visible satellite positions","htmlid":"mw_29b8b61b-df4c-4cad-a3cb-1127560b7229","value":["n-element vector of angles","t-by-n matrix of angles"]},{"name":"ElevationData","purpose":"Elevation angles for visible satellite positions","htmlid":"mw_112ad84a-15ad-405a-9782-de4d9d51f78a","value":["n-element vector of angles","t-by-n matrix of angles"]},{"name":"LabelData","purpose":"Labels for visible satellite positions","htmlid":"mw_c40c1096-1510-4055-994a-958e4b1b8e43","value":["n-element string array"]},{"name":"GroupData","purpose":"Group for each satellite position","htmlid":"mw_87dcfee1-40fe-4ff2-a732-46911df8b8c3","value":["categorical array"]},{"name":"ColorOrder","purpose":"Color order","htmlid":"mw_8fb330e3-f694-4472-b336-7a438ff9074f","value":["seven predefined colors","three-column matrix of RGB triplets"],"defaultvalue":"seven predefined colors"}]},{"title":"Label Properties","classproperty":[{"name":"LabelFontSize","purpose":"Font size of labels","htmlid":"mw_52b295dc-4cf5-4ae0-bf8e-1d6f8caa5244","value":["scalar numeric value"]},{"name":"LabelFontSizeMode","purpose":"Selection mode for font size of labels","htmlid":"mw_353a7d08-4f3e-4361-b4a3-e1507b3abea0","value":["'auto'","'manual'"],"defaultvalue":"'auto'"}]},{"title":"Mask Properties","classproperty":[{"name":"MaskElevation","purpose":"Mask elevation angle","htmlid":"mw_16297422-76e0-4f5a-bbac-ffaf6f97a5d6","value":["0","nonnegative scalar","N-element vector"],"defaultvalue":"0"},{"name":"MaskAlpha","purpose":"Mask transparency","htmlid":"mw_99fa774c-1ac3-4b3a-81f6-eb7b027bb287","value":["0.3","scalar in range [0, 1]"],"defaultvalue":"0.3"},{"name":"MaskColor","purpose":"Mask color","htmlid":"mw_ae95cf7e-4b8f-4e0d-83c1-dbd7de35c39c","value":["[0.4902 0.4902 0.4902]","RGB triplet","hexadecimal color code","color name","short color name"],"defaultvalue":"[0.4902 0.4902 0.4902]"},{"name":"MaskAzimuthEdges","purpose":"Mask angle azimuth edges","htmlid":"mw_3eb8bdcb-358b-48c9-9b0f-6685b63a3289","value":["[0 360]","m-element row vector"],"defaultvalue":"[0 360]"},{"name":"MaskAzimuthEdgesMode","purpose":"Mask angle azimuth edges mode","htmlid":"mw_dbc00b7d-388e-4878-86f7-82885eaf69d5","value":["\"auto\"","\"manual\""],"defaultvalue":"\"auto\""}]},{"title":"Chart Properties","classproperty":[{"name":"HandleVisibility","purpose":"Visibility of object handle","htmlid":"mw_27543668-343b-4ec5-a66a-778510e2c330","value":["'on'","'off'","'callback'"],"defaultvalue":"'on'"},{"name":"Layout","purpose":"Layout options","htmlid":"mw_8d489735-c619-4961-88a1-40047fcad76c","value":["empty LayoutOptions array","TiledChartLayoutOptions object","GridLayoutOptions object"],"defaultvalue":"empty LayoutOptions array"},{"name":"Parent","purpose":"Parent container","htmlid":"mw_e036e936-83a1-4193-a179-18391053542a","value":["Figure object","Panel object","Tab object","TiledChartLayout object","GridLayout object"]}]},{"title":"Marker Properties","classproperty":[{"name":"MarkerEdgeAlpha","purpose":"Marker edge transparency","htmlid":"mw_c89f1d2e-5923-4c7f-8ae5-d30cc1e82ea0","value":["1","scalar in range [0,1]","'flat'"],"defaultvalue":"1"},{"name":"MarkerEdgeColor","purpose":"Marker outline color","htmlid":"mw_5737e94d-8e9b-4b16-adc7-00aa09dcbbd4","value":["'flat'","'auto'","RGB triplet","hexadecimal color code","'r'","'g'","'b'","..."],"defaultvalue":"'flat'"},{"name":"MarkerFaceAlpha","purpose":"Marker face transparency","htmlid":"mw_688782c8-19cd-4b53-a3fb-cec9b3baa30f","value":["0.6","scalar in range [0,1]","'flat'"],"defaultvalue":"0.6"},{"name":"MarkerFaceColor","purpose":"Marker fill color","htmlid":"mw_bc7f1b05-fb57-4e23-95a7-b7ea6e531940","value":["'flat'","'auto'","'none'","RGB triplet","hexadecimal color code","'r'","'g'","'b'","..."],"defaultvalue":"'flat'"},{"name":"MarkerSizeData","purpose":"Marker size","htmlid":"mw_47c94488-7070-473e-b6be-e1de51dbbb98","value":["100","positive scalar","vector of positive values"],"defaultvalue":"100"}]},{"title":"Position","classproperty":[{"name":"PositionConstraint","purpose":"Position to hold constant","htmlid":"mw_efb595f4-fe00-475f-ba1b-c6b4c7cc093a","value":["\"outerposition\"","\"innerposition\""]},{"name":"OuterPosition","purpose":"Outer size and location","htmlid":"mw_9ea7018e-b78d-4ae3-8c9b-2336594af7db","value":["[0 0 1 1]","four-element vector"],"defaultvalue":"[0 0 1 1]"},{"name":"InnerPosition","purpose":"Inner size and location","htmlid":"mw_467b09d5-1e73-496f-87fe-a819135d79d9","value":["[0.1300 0.1100 0.7750 0.8114]","four-element vector"],"defaultvalue":"[0.1300 0.1100 0.7750 0.8114]"},{"name":"Position","purpose":"Inner size and location","htmlid":"mw_c6b3993e-c83a-4ced-9ded-28a6a36a7461","value":["four-element vector"]},{"name":"Units","purpose":"Position units","htmlid":"mw_8e4d12d8-c2f3-4550-948d-a7e7e7cdbe58","value":["'normalized'","'inches'","'centimeters'","'points'","'pixels'","'characters'"],"defaultvalue":"'normalized'"},{"name":"Visible","purpose":"State of visibility","htmlid":"mw_d6ec472f-bc57-44b2-8beb-6c2486094985","value":["'on'","on\/off logical value"],"defaultvalue":"'on'"}]}],"seealso":[{"url":"skyplot.html","name":"skyplot"},{"url":"..\/..\/matlab\/ref\/polarscatter.html","name":"polarscatter"},{"url":"gnsssensor-system-object.html","name":"gnssSensor"},{"url":"nmeaparser-system-object.html","name":"nmeaParser"}]},{"href":"ref\/nav.statepropagator-class.html","refentity":[{"type":"class","name":"nav.StatePropagator"}],"packagename":"nav","refpurpose":"State propagator for control-based planning","introduced":"R2021b","description":"The nav.StatePropagator class is an interface for all state propagators used with the kinodynamic path planners derived from nav.StateSpace.","syntaxgroup":[{"title":"","syntax":["propagatorObj = nav.StatePropagator(stateSpace,stepSize,numControlOutput)"]}],"classpropertygroup":[{"title":"Public Properties","classproperty":[{"name":"StateSpace","purpose":"State space for sampling during planning","htmlid":"mw_1dc1bf8a-f7d4-418f-a164-8deb8b5a839b","value":["object of subclass of nav.StateSpace"]},{"name":"ControlStepSize","purpose":"Duration of each control command","htmlid":"mw_2bd154a5-624d-47a2-b743-4b4835f349ee","value":["0.1","positive scalar"],"defaultvalue":"0.1"}]},{"title":"Protected Properties","classproperty":[{"name":"NumControlOutput","purpose":"Number of variables in control command","htmlid":"mw_2cc579d0-f7c7-4e9c-8b76-0a17a85b8ea7","value":["positive integer"]}]}],"seealso":[{"url":"nav.statespace-class.html","name":"nav.StateSpace"},{"url":"nav.statevalidator-class.html","name":"nav.StateValidator"},{"url":"statespacese2.html","name":"stateSpaceSE2"},{"url":"statespacedubins.html","name":"stateSpaceDubins"},{"url":"statespacereedsshepp.html","name":"stateSpaceReedsShepp"},{"url":"validatoroccupancymap.html","name":"validatorOccupancyMap"},{"url":"validatorvehiclecostmap.html","name":"validatorVehicleCostmap"}]},{"href":"ref\/nav.statepropagator.distance.html","refentity":[{"type":"method","name":"nav.StatePropagator.distance","fcntype":"instancemethod"}],"packagename":"nav","refpurpose":"Estimate cost of propagating to target state","introduced":"R2021b","description":"This MATLAB function estimates the cost of propagating from an initial set of states q1 to final states q2.","syntaxgroup":[{"title":"","syntax":["h = distance(q1,q2)"]}],"inputgroup":[{"title":"","inputs":[{"name":"q1","purpose":"Initial states","htmlid":"mw_7bff0803-d566-4fd3-9f64-11be30463f19","value":["n-by-s matrix"]},{"name":"q2","purpose":"Final states","htmlid":"mw_19b15e2f-77cd-4657-b845-4b9e9e6f230b","value":["n-by-s matrix"]}]}],"outputs":[{"name":"h","purpose":"Cost values","htmlid":"mw_a3ee7958-29b5-47ac-bd30-763d443fbd17","value":["n-element vector"]}],"seealso":[{"url":"nav.statepropagator-class.html","name":"nav.StatePropagator"},{"url":"nav.statespace-class.html","name":"nav.StateSpace"},{"url":"nav.statevalidator-class.html","name":"nav.StateValidator"},{"url":"nav.statepropagator.propagate.html","name":"propagate"},{"url":"nav.statepropagator.propagatewhilevalid.html","name":"propagateWhileValid"},{"url":"nav.statepropagator.samplecontrol.html","name":"sampleControl"},{"url":"nav.statepropagator.setup.html","name":"setup"}]},{"href":"ref\/nav.statepropagator.propagate.html","refentity":[{"type":"method","name":"nav.StatePropagator.propagate","fcntype":"instancemethod"}],"packagename":"nav","refpurpose":"Propagate system without validation","introduced":"R2021b","description":"This MATLAB function iteratively propagates the system from the current state q0 towards a target state qTgt with an initial control input u0 for a maximum number of steps maxSteps.","syntaxgroup":[{"title":"","syntax":["[q,u,steps] = propagate(spObj,q0,u0,qTgt,maxSteps)"]}],"inputgroup":[{"title":"","inputs":[{"name":"spObj","purpose":"State propagator object","htmlid":"mw_2f9a1207-8804-4dba-be3b-5ead464e8d55","value":["handle from child class of nav.StatePropagator"]},{"name":"q0","purpose":"Initial state","htmlid":"mw_b38ee1e8-a4bd-4b37-991d-c11e00dec639","value":["s-element vector"]},{"name":"u0","purpose":"Initial control on the initial state","htmlid":"mw_2d94296b-b637-49cc-9df2-0097c58e8dc8","value":["c-element vector"]},{"name":"qTgt","purpose":"Target state","htmlid":"mw_010c4f74-1b1a-4bbf-b8d6-11d5d6abf4d4","value":["s-element vector"]},{"name":"maxSteps","purpose":"Maximum number of steps","htmlid":"mw_fa9e4752-3408-43ba-850c-99db96ab890e","value":["positive scalar"]}]}],"outputs":[{"name":"q","purpose":"Final propagated state of system","htmlid":"mw_5b5b5cd4-97de-49bf-a1a7-4cd37f12f199","value":["n-by-s matrix"]},{"name":"u","purpose":"Control inputs for propagating states","htmlid":"mw_884f9046-3cf5-4175-b1d3-7b4cbc1775bf","value":["n-by-c matrix"]},{"name":"steps","purpose":"Number of steps between each state and control input","htmlid":"mw_87fdff68-ad76-4746-8486-d8399da1e3cb","value":["n-element vector of positive integers"]}],"seealso":[{"url":"nav.statepropagator-class.html","name":"nav.StatePropagator"},{"url":"nav.statespace-class.html","name":"nav.StateSpace"},{"url":"nav.statevalidator-class.html","name":"nav.StateValidator"},{"url":"nav.statepropagator.distance.html","name":"distance"},{"url":"nav.statepropagator.propagatewhilevalid.html","name":"propagateWhileValid"},{"url":"nav.statepropagator.samplecontrol.html","name":"sampleControl"},{"url":"nav.statepropagator.setup.html","name":"setup"}]},{"href":"ref\/nav.statepropagator.propagatewhilevalid.html","refentity":[{"type":"method","name":"nav.StatePropagator.propagateWhileValid","fcntype":"instancemethod"}],"packagename":"nav","refpurpose":"Propagate system and return valid motion","introduced":"R2021b","description":"This MATLAB function iteratively propagates the system from the current state q0 towards a target state qTgt with an initial control input u0 for a maximum number of steps maxSteps.","syntaxgroup":[{"title":"","syntax":["[q,u,steps] = propagateWhileValid(spObj,q0,u0,qTgt,maxSteps)"]}],"inputgroup":[{"title":"","inputs":[{"name":"spObj","purpose":"State propagator object","htmlid":"mw_f53cae84-384a-4b43-8bcb-94dd39fc48d2","value":["handle from child class of nav.StatePropagator"]},{"name":"q0","purpose":"Initial state","htmlid":"mw_50db6435-6d88-446c-8d58-9b5979780009","value":["s-element vector"]},{"name":"u0","purpose":"Initial control on the initial state","htmlid":"mw_6f6341a5-dae1-40bf-b9d2-02300826cc7e","value":["c-element vector"]},{"name":"qTgt","purpose":"Target state","htmlid":"mw_1cadae2b-a009-4ec9-bc73-35b7a5ce1dfb","value":["s-element vector"]},{"name":"maxSteps","purpose":"Maximum number of steps","htmlid":"mw_c775cc5f-aba3-468b-94fe-980cf7440fd8","value":["positive scalar"]}]}],"outputs":[{"name":"q","purpose":"Final propagated state of system","htmlid":"mw_25c82951-5a36-465f-9f04-e954ff749f88","value":["n-by-s matrix"]},{"name":"u","purpose":"Control inputs for propagating states","htmlid":"mw_be630231-07fb-4731-9248-8c3705fd5af5","value":["n-by-c matrix"]},{"name":"steps","purpose":"Number of steps between each state and control input","htmlid":"mw_88468dcb-e34c-4959-b6ac-060344f9ff8f","value":["n-element vector of positive integers"]}],"seealso":[{"url":"nav.statepropagator-class.html","name":"nav.StatePropagator"},{"url":"nav.statespace-class.html","name":"nav.StateSpace"},{"url":"nav.statevalidator-class.html","name":"nav.StateValidator"},{"url":"nav.statepropagator.distance.html","name":"distance"},{"url":"nav.statepropagator.propagate.html","name":"propagate"},{"url":"nav.statepropagator.samplecontrol.html","name":"sampleControl"},{"url":"nav.statepropagator.setup.html","name":"setup"}]},{"href":"ref\/nav.statepropagator.samplecontrol.html","refentity":[{"type":"method","name":"nav.StatePropagator.sampleControl","fcntype":"instancemethod"}],"packagename":"nav","refpurpose":"Generate control command and step count","introduced":"R2021b","description":"This MATLAB function generates a series of control commands and number of steps to move from the current state q0 with control command u0 towards the target state qTgt","syntaxgroup":[{"title":"","syntax":["[u,steps] = sampleControl(spObj,q0,u0,qTgt)"]}],"inputgroup":[{"title":"","inputs":[{"name":"spObj","purpose":"State propagator object","htmlid":"mw_49e68620-246b-4713-bb87-68eff3054a4c","value":["handle from child class of nav.StatePropagator"]},{"name":"q0","purpose":"Initial state","htmlid":"mw_e65d7fd3-9f68-4d14-8e51-09394bff4673","value":["s-element vector"]},{"name":"u0","purpose":"Initial control on the initial state","htmlid":"mw_97afdf84-2cdb-4522-b0d2-b1123f4f5068","value":["c-element vector"]},{"name":"qTgt","purpose":"Target state","htmlid":"mw_ae1bc853-7fbe-47ce-bdc9-78066b6c77ea","value":["s-element vector"]}]}],"outputs":[{"name":"u","purpose":"Control inputs for propagating states","htmlid":"mw_1cf5c1cf-a5b2-47c1-bc85-f2a2cb8cc70e","value":["n-by-c matrix"]},{"name":"steps","purpose":"Number of steps between each state and control input","htmlid":"mw_a81ad3fc-0e8c-4f04-944a-3a0a74e2234b","value":["n-element vector of positive integers"]}],"seealso":[{"url":"nav.statepropagator-class.html","name":"nav.StatePropagator"},{"url":"nav.statespace-class.html","name":"nav.StateSpace"},{"url":"nav.statevalidator-class.html","name":"nav.StateValidator"},{"url":"nav.statepropagator.distance.html","name":"distance"},{"url":"nav.statepropagator.propagate.html","name":"propagate"},{"url":"nav.statepropagator.propagatewhilevalid.html","name":"propagateWhileValid"},{"url":"nav.statepropagator.setup.html","name":"setup"}]},{"href":"ref\/nav.statepropagator.setup.html","refentity":[{"type":"method","name":"nav.StatePropagator.setup","fcntype":"instancemethod"}],"packagename":"nav","refpurpose":"Set up state propagator based on parameters","introduced":"R2021b","description":"This MATLAB function sets up the nav.StatePropagator object based on the specified parameters.","syntaxgroup":[{"title":"","syntax":["setup(mobileProp)"]}],"inputgroup":[{"title":"","inputs":[{"name":"spObj","purpose":"State propagator object","htmlid":"mw_468bafeb-c773-4ea9-a460-d422d205b76e","value":["handle from child class of nav.StatePropagator"]}]}],"seealso":[{"url":"nav.statepropagator-class.html","name":"nav.StatePropagator"},{"url":"nav.statespace-class.html","name":"nav.StateSpace"},{"url":"nav.statevalidator-class.html","name":"nav.StateValidator"},{"url":"nav.statepropagator.distance.html","name":"distance"},{"url":"nav.statepropagator.propagate.html","name":"propagate"},{"url":"nav.statepropagator.propagatewhilevalid.html","name":"propagateWhileValid"},{"url":"nav.statepropagator.samplecontrol.html","name":"sampleControl"}]},{"href":"ref\/nav.statesampler-class.html","refentity":[{"type":"class","name":"nav.StateSampler"}],"packagename":"nav","refpurpose":"Create state sampler for path planning","introduced":"R2023b","description":"The nav.StateSampler class is an interface for state samplers used in sampling-based path planners like plannerRRT, plannerRRTStar, plannerBiRRT, and plannerPRM.","syntaxgroup":[{"title":"","syntax":["sampler = nav.StateSampler(StateSpace)"]}],"classpropertygroup":[{"classproperty":[{"name":"StateSpace","purpose":"State space definition","htmlid":"mw_0966c10c-9bd0-4cd2-8cfc-2895254f9d05","value":["object of a subclass from nav.StateSpace class"]}]}],"seealso":[{"url":"createplanningtemplate.html","name":"createPlanningTemplate"},{"url":"..\/..\/matlab\/ref\/matlab.mixin.copyable.copy.html","name":"copy"},{"url":"nav.statesampler.sample.html","name":"sample"},{"url":"statesamplergaussian.html","name":"stateSamplerGaussian"},{"url":"statesampleruniform.html","name":"stateSamplerUniform"},{"url":"statesamplermpnet.html","name":"stateSamplerMPNET"},{"url":"nav.statespace-class.html","name":"nav.StateSpace"},{"url":"nav.statevalidator-class.html","name":"nav.StateValidator"}]},{"href":"ref\/nav.statesampler.sample.html","refentity":[{"type":"method","name":"nav.StateSampler.sample","fcntype":"instancemethod"}],"packagename":"nav","refpurpose":"Sample state","introduced":"R2023b","description":"This MATLAB function samples one state from the specified state sampler object.","syntaxgroup":[{"title":"","syntax":["states = sample(sampler)","states = sample(sampler,numsamples)"]}],"inputgroup":[{"title":"","inputs":[{"name":"sampler","purpose":"State sampler object","htmlid":"mw_4121bf09-bcb2-4a80-b940-5ce1557c9887","value":["object of a subclass of nav.StateSampler"]},{"name":"numsamples","purpose":"Number of samples","htmlid":"mw_5e373b48-bf60-4ec4-98b0-b4c7e216fa7c","value":["1","positive integer"],"defaultvalue":"1"}]}],"outputs":[{"name":"states","purpose":"State samples","htmlid":"mw_92815573-2769-4f84-b7b7-505e64816845","value":["M-by-N matrix of real values"]}],"seealso":[{"url":"nav.statesampler-class.html","name":"nav.StateSampler"},{"url":"nav.statespace-class.html","name":"nav.StateSpace"},{"url":"nav.statevalidator-class.html","name":"nav.StateValidator"},{"url":"createplanningtemplate.html","name":"createPlanningTemplate"}]},{"href":"ref\/nav.statespace-class.html","refentity":[{"type":"class","name":"nav.StateSpace"}],"packagename":"nav","refpurpose":"Create state space for path planning","introduced":"R2019b","description":"The nav.StateSpace class is an interface for state spaces used for path planning.","syntaxgroup":[{"title":"","syntax":["ssObj = nav.StateSpace(Name,NumStateVariables,StateBounds)"]}],"classpropertygroup":[{"title":"Public Properties","classproperty":[{"name":"NumStateVariables","purpose":"Number of variables in state space","htmlid":"mw_67e94747-4a16-4cea-a1fd-323c90a89bf2","value":["positive numeric scalar"]},{"name":"StateBounds","purpose":"Minimum and maximum bounds of state variables","htmlid":"mw_8eebfaf4-091a-4b30-b3b6-1ff746283325","value":["[min max]","n-by-2 matrix"]}]},{"title":"Protected Properties","classproperty":[{"name":"Name","purpose":"Name of state space object","htmlid":"mw_feaad3b1-2dd7-4348-a191-bbeb3be9845c","value":["string scalar","character vector"]}]}],"examples":[{"url":"nav.statespace-class.html#mw_2aeae535-1b4f-4dda-a9c3-a0480c1d882f","open_command":"openExample('nav\/CreateCustomStateSpaceSamplerForPathPlanningExample')","title":"Create Custom State Space for Path Planning"}],"seealso":[{"url":"nav.statevalidator-class.html","name":"nav.StateValidator"},{"url":"statespacese2.html","name":"stateSpaceSE2"},{"url":"statespacedubins.html","name":"stateSpaceDubins"},{"url":"statespacereedsshepp.html","name":"stateSpaceReedsShepp"}]},{"href":"ref\/nav.statespace.distance.html","refentity":[{"type":"method","name":"nav.StateSpace.distance","fcntype":"instancemethod"}],"packagename":"nav","refpurpose":"Distance between two states","introduced":"R2019b","description":"This MATLAB function calculates the distance between two states.","syntaxgroup":[{"title":"","syntax":["dist = distance(ssObj,state1,state2)"]}],"inputgroup":[{"title":"","inputs":[{"name":"ssObj","purpose":"State space object","htmlid":"mw_17138471-8cab-48c5-845e-26e119ae47ba","value":["object of a subclass of nav.StateSpace"]},{"name":"state1","purpose":"Initial state position","htmlid":"mw_852497bd-3a7c-4af7-9add-63c822eb948a","value":["n-element vector","m-by-n matrix of row vectors"]},{"name":"state2","purpose":"Final state position","htmlid":"mw_3661c636-76ff-40bc-a84d-1fab3e9a8169","value":["n-element vector","m-by-n matrix of row vectors"]}]}],"outputs":[{"name":"dist","purpose":"Distance between two states","htmlid":"mw_08961c22-a046-4af6-a0b4-64a90581315a","value":["numeric scalar","m-element vector"]}],"examples":[{"url":"nav.statespace.distance.html#mw_a9b844d7-5314-4cd0-9630-74db37e910f7","open_command":"openExample('nav\/CreateCustomStateSpaceSamplerForPathPlanningExample')","title":"Create Custom State Space for Path Planning"}],"seealso":[{"url":"nav.statespace-class.html","name":"nav.StateSpace"},{"url":"nav.statevalidator-class.html","name":"nav.StateValidator"},{"url":"statespacese2.html","name":"stateSpaceSE2"},{"url":"statespacedubins.html","name":"stateSpaceDubins"},{"url":"statespacereedsshepp.html","name":"stateSpaceReedsShepp"}]},{"href":"ref\/nav.statespace.enforcestatebounds.html","refentity":[{"type":"method","name":"nav.StateSpace.enforceStateBounds","fcntype":"instancemethod"}],"packagename":"nav","refpurpose":"Limit state to state bounds","introduced":"R2019b","description":"This MATLAB function returns a bounded state that lies inside the state bounds based on the given state.","syntaxgroup":[{"title":"","syntax":["boundedState = enforceStateBounds(ssObj,state)"]}],"inputgroup":[{"title":"","inputs":[{"name":"ssObj","purpose":"State space object","htmlid":"mw_cdf446ec-c1e9-4722-8315-05f8fc5e86a6","value":["object of a subclass of nav.StateSpace"]},{"name":"state","purpose":"State position","htmlid":"mw_c00e5f39-355e-4735-9369-cca36395cfd7","value":["n-element vector","m-by-n matrix of row vectors"]}]}],"outputs":[{"name":"boundedState","purpose":"State position with enforced state bounds","htmlid":"mw_a9e37712-0be8-4e03-892a-d09dc4decc5a","value":["n-element vector","m-by-n matrix of row vectors"]}],"examples":[{"url":"nav.statespace.enforcestatebounds.html#mw_e9c847b7-38c2-439b-9a49-b63648db3b81","open_command":"openExample('nav\/CreateCustomStateSpaceSamplerForPathPlanningExample')","title":"Create Custom State Space for Path Planning"}],"seealso":[{"url":"nav.statespace-class.html","name":"nav.StateSpace"},{"url":"nav.statevalidator-class.html","name":"nav.StateValidator"},{"url":"statespacese2.html","name":"stateSpaceSE2"},{"url":"statespacedubins.html","name":"stateSpaceDubins"},{"url":"statespacereedsshepp.html","name":"stateSpaceReedsShepp"}]},{"href":"ref\/nav.statespace.interpolate.html","refentity":[{"type":"method","name":"nav.StateSpace.interpolate","fcntype":"instancemethod"}],"packagename":"nav","refpurpose":"Interpolate between states","introduced":"R2019b","description":"This MATLAB function interpolates between two states in your state space based on the given ratios.","syntaxgroup":[{"title":"","syntax":["interpStates = interpolate(ssObj,state1,state2,ratios)"]}],"inputgroup":[{"title":"","inputs":[{"name":"ssObj","purpose":"State space object","htmlid":"mw_2f3d977f-9d15-4890-9343-ed6716b65e30","value":["object of a subclass of nav.StateSpace"]},{"name":"state1","purpose":"Initial state position","htmlid":"mw_093487d9-f698-46a9-8f9e-01616f70fb5d","value":["n-element vector"]},{"name":"state2","purpose":"Final state position","htmlid":"mw_2d970e6b-47f0-4803-8b05-e4d00ba34cb5","value":["n-element vector","m-by-n matrix of row vectors"]},{"name":"ratios","purpose":"Ratio values for interpolating along path","htmlid":"mw_0a03177b-eb0d-436e-af5f-dbbd210caa64","value":["m-element vector"]}]}],"outputs":[{"name":"interpStates","purpose":"Interpolated states","htmlid":"mw_ba12d241-d2f1-4e49-aa32-52caadf8ebec","value":["m-by-n matrix of row vectors"]}],"examples":[{"url":"nav.statespace.interpolate.html#mw_1e61b424-8844-473e-b736-9d060fee989a","open_command":"openExample('nav\/CreateCustomStateSpaceSamplerForPathPlanningExample')","title":"Create Custom State Space for Path Planning"}],"seealso":[{"url":"nav.statespace-class.html","name":"nav.StateSpace"},{"url":"nav.statevalidator-class.html","name":"nav.StateValidator"},{"url":"statespacese2.html","name":"stateSpaceSE2"},{"url":"statespacedubins.html","name":"stateSpaceDubins"},{"url":"statespacereedsshepp.html","name":"stateSpaceReedsShepp"}]},{"href":"ref\/nav.statespace.samplegaussian.html","refentity":[{"type":"method","name":"nav.StateSpace.sampleGaussian","fcntype":"instancemethod"}],"packagename":"nav","refpurpose":"Sample state using Gaussian distribution","introduced":"R2019b","description":"This MATLAB function samples a single state in your state space from a Gaussian distribution centered on meanState with specified standard deviation.","syntaxgroup":[{"title":"","syntax":["states = sampleGaussian(ssObj,meanState,stdDev)","states = sampleGaussian(ssObj,meanState,stdDev,numSamples)"]}],"inputgroup":[{"title":"","inputs":[{"name":"ssObj","purpose":"State space object","htmlid":"mw_9fd1e654-ad73-4247-9e30-73ef49051620","value":["object of a subclass of nav.StateSpace"]},{"name":"meanState","purpose":"Mean state position","htmlid":"mw_0d1ce408-5fcd-4c3e-a2ce-1559822fd2ab","value":["n-element vector","m-by-n matrix of row vectors"]},{"name":"stdDev","purpose":"Standard deviation around mean state","htmlid":"mw_d95b9a2c-0942-40e9-b656-1ff72302efd0","value":["n-element vector","m-by-n matrix of row vectors"]},{"name":"numSamples","purpose":"Number of samples","htmlid":"mw_0e932ec2-ebe1-4578-96d6-95c8f913bece","value":["positive integer"]}]}],"outputs":[{"name":"states","purpose":"Sampled states from state space","htmlid":"mw_4928e039-0062-4e2f-b9bf-e06992142673","value":["n-element vector","m-by-n matrix of row vectors"]}],"examples":[{"url":"nav.statespace.samplegaussian.html#mw_94c0ba6b-47a1-487c-b634-b3bfe3881757","open_command":"openExample('nav\/CreateCustomStateSpaceSamplerForPathPlanningExample')","title":"Create Custom State Space for Path Planning"}],"seealso":[{"url":"nav.statespace-class.html","name":"nav.StateSpace"},{"url":"nav.statevalidator-class.html","name":"nav.StateValidator"},{"url":"statespacese2.html","name":"stateSpaceSE2"},{"url":"statespacedubins.html","name":"stateSpaceDubins"},{"url":"statespacereedsshepp.html","name":"stateSpaceReedsShepp"}]},{"href":"ref\/nav.statespace.sampleuniform.html","refentity":[{"type":"method","name":"nav.StateSpace.sampleUniform","fcntype":"instancemethod"}],"packagename":"nav","refpurpose":"Sample state using uniform distribution","introduced":"R2019b","description":"This MATLAB function samples throughout your entire state space using a uniform distribution.","syntaxgroup":[{"title":"","syntax":["states = sampleUniform(ssObj)","states = sampleUniform(ssObj,numSamples)","states = sampleUniform(ssObj,meanState,distance)","states = sampleUniform(ssObj,meanState,distance,numSamples)"]}],"inputgroup":[{"title":"","inputs":[{"name":"ssObj","purpose":"State space object","htmlid":"mw_b1558ea2-464a-4bf2-bc8c-3d19395a9776","value":["object of a subclass of nav.StateSpace"]},{"name":"meanState","purpose":"Mean state position","htmlid":"mw_13dbeb13-2c0f-4454-9ad5-60b09c9ad82d","value":["n-element vector"]},{"name":"distance","purpose":"Max distance from mean state position","htmlid":"mw_458bb778-dd6f-49ab-a47a-05f95de48136","value":["n-element vector"]},{"name":"numSamples","purpose":"Number of samples","htmlid":"mw_581b555c-b5a1-4e9e-a236-f3268ac7a8e5","value":["positive integer"]}]}],"outputs":[{"name":"states","purpose":"Sampled states from state space","htmlid":"mw_d9451d3f-37c3-4ff1-a4e9-d49ef5f5dc46","value":["n-element vector","m-by-n matrix of row vectors"]}],"examples":[{"url":"nav.statespace.sampleuniform.html#mw_e9685367-cd6a-4c14-9f2d-2a2fa4555212","open_command":"openExample('nav\/CreateCustomStateSpaceSamplerForPathPlanningExample')","title":"Create Custom State Space for Path Planning"}],"seealso":[{"url":"nav.statespace-class.html","name":"nav.StateSpace"},{"url":"nav.statevalidator-class.html","name":"nav.StateValidator"},{"url":"statespacese2.html","name":"stateSpaceSE2"},{"url":"statespacedubins.html","name":"stateSpaceDubins"},{"url":"statespacereedsshepp.html","name":"stateSpaceReedsShepp"}]},{"href":"ref\/nav.statevalidator-class.html","refentity":[{"type":"class","name":"nav.StateValidator"}],"packagename":"nav","refpurpose":"Create state validator for path planning","introduced":"R2019b","description":"nav.StateValidator is an interface for all state validators used for path planning.","syntaxgroup":[{"title":"","syntax":["ssObj = nav.StateValidator(stateSpace)"]}],"classpropertygroup":[{"classproperty":[{"name":"StateSpace","purpose":"State space definition","htmlid":"mw_ff5a6fa5-7249-4bb8-9233-ad141af0cf8e","value":["object of a subclass from nav.StateSpace"]}]}],"examples":[{"url":"nav.statevalidator-class.html#mw_db109c33-fe1f-4966-8c37-a0e8f5d38577","open_command":"openExample('nav\/CreateCustomStateSpaceValidatorForPathPlanningExample')","title":"Create Custom State Space Validator for Path Planning"}],"seealso":[{"url":"nav.statespace-class.html","name":"nav.StateSpace"},{"url":"validatoroccupancymap.html","name":"validatorOccupancyMap"},{"url":"validatorvehiclecostmap.html","name":"validatorVehicleCostmap"}]},{"href":"ref\/nav.statevalidator.ismotionvalid.html","refentity":[{"type":"method","name":"nav.StateValidator.isMotionValid","fcntype":"instancemethod"}],"packagename":"nav","refpurpose":"Check if path between states is valid","introduced":"R2019b","description":"This MATLAB function determines if the motion between two states is valid by interpolating between states.","syntaxgroup":[{"title":"","syntax":["[isValid,lastValid] = isMotionValid(validatorObj,state1,state2)"]}],"inputgroup":[{"title":"","inputs":[{"name":"validatorObj","purpose":"State validator object","htmlid":"mw_f09f2fb4-607d-44f7-967d-0273f05bbf85","value":["object from a subclass of nav.StateValidator"]},{"name":"state1","purpose":"Initial state position","htmlid":"mw_a291ceb8-2079-4d62-add1-f39a7bdeb01e","value":["n-element vector","m-by-n matrix of row vectors"]},{"name":"state2","purpose":"Final state position","htmlid":"mw_b8a6696c-f315-43f2-8591-21ec4def764d","value":["n-element vector","m-by-n matrix of row vectors"]}]}],"outputs":[{"name":"isValid","purpose":"Valid states","htmlid":"mw_a1d00a76-f134-4805-a83b-e428736cbd9f","value":["m-element vector of 1s and 0s"]},{"name":"lastValid","purpose":"Final valid state along path","htmlid":"mw_f1e56b6c-7384-404c-b509-4bf329357c46","value":["n-element vector"]}],"examples":[{"url":"nav.statevalidator.ismotionvalid.html#mw_ad469552-1560-404e-96bf-e0283faf1f9b","open_command":"openExample('nav\/CreateCustomStateSpaceValidatorForPathPlanningExample')","title":"Create Custom State Space Validator for Path Planning"}],"seealso":[{"url":"nav.statevalidator-class.html","name":"nav.StateValidator"},{"url":"nav.statespace-class.html","name":"nav.StateSpace"},{"url":"validatoroccupancymap.html","name":"validatorOccupancyMap"},{"url":"validatorvehiclecostmap.html","name":"validatorVehicleCostmap"}]},{"href":"ref\/nav.statevalidator.isstatevalid.html","refentity":[{"type":"method","name":"nav.StateValidator.isStateValid","fcntype":"instancemethod"}],"packagename":"nav","refpurpose":"Check if state is valid","introduced":"R2019b","description":"This MATLAB function determines if the states are valid.","syntaxgroup":[{"title":"","syntax":["isValid = isStateValid(validatorObj,states)"]}],"inputgroup":[{"title":"","inputs":[{"name":"validatorObj","purpose":"State validator object","htmlid":"mw_5a5c81bf-d4ed-49ae-8ec9-ab94ec1945e9","value":["object from a subclass of nav.StateValidator"]},{"name":"states","purpose":"State positions","htmlid":"mw_de3112ec-4467-46da-8029-0122d8cf2b08","value":["n-element vector","m-by-n matrix of row vectors"]}]}],"outputs":[{"name":"isValid","purpose":"Valid states","htmlid":"mw_70fb1f12-ae25-44ae-8386-980afff8b67c","value":["m-element vector of 1s and 0s"]}],"examples":[{"url":"nav.statevalidator.isstatevalid.html#mw_b04aacf1-d6f5-4b3b-96db-d4a073a67bdf","open_command":"openExample('nav\/CreateCustomStateSpaceValidatorForPathPlanningExample')","title":"Create Custom State Space Validator for Path Planning"}],"seealso":[{"url":"nav.statevalidator-class.html","name":"nav.StateValidator"},{"url":"nav.statespace-class.html","name":"nav.StateSpace"},{"url":"validatoroccupancymap.html","name":"validatorOccupancyMap"},{"url":"validatorvehiclecostmap.html","name":"validatorVehicleCostmap"}]},{"href":"ref\/navgraph.addlink.html","refentity":[{"type":"function","name":"addlink","fcntype":"instancemethod"},{"type":"method","name":"navGraph.addlink","fcntype":"instancemethod"}],"refpurpose":"Add links between one or more state pairs","introduced":"R2024a","description":"This MATLAB function adds links between one or more state pairs in the input graph specified as a navGraph object.","syntaxgroup":[{"title":"","syntax":["linkIDs = addlink(graph,statePairs)","linkIDs = addlink(graph,statePairs,metadata1,...metadataN)","[linkIDs,status] = addlink(___)"]}],"inputgroup":[{"title":"","inputs":[{"name":"graph","purpose":"Graph object","htmlid":"mw_3c237be3-48dc-450e-9bc2-fb43f8d0c90d","value":["navGraph object"]},{"name":"statePairs","purpose":"Indices or names of states to be linked","htmlid":"mw_c2077b1c-0c42-46a6-8da4-edde6f6014fd","value":["two-element column vector","M-by-2 matrix","cell array of strings"]},{"name":"metadata","purpose":"Metadata containing additional information","htmlid":"mw_628a1458-f4a8-4230-ae5d-2b18b868a6fe","value":["numeric array","cell array of character vectors","string array","cell array of strings"]}]}],"outputs":[{"name":"linkIDs","purpose":"Link identifiers","htmlid":"mw_40d7600e-7836-4832-a2c9-d43718bfab86","value":["column vector of positive integers"]},{"name":"status","purpose":"Status indicating if new links are added","htmlid":"mw_328d11ef-2139-4369-83d0-65b11298d33d","value":["M-element column vector"]}],"examples":[{"url":"navgraph.addlink.html#mw_6cd3083d-68b3-4d57-bca4-d1c224e65d4a","open_command":"openExample('nav\/AddLinksBetweenTwoStatesInGraphExample')","title":"Add Links Between Two States in Graph"},{"url":"navgraph.addlink.html#mw_7ffc26fb-2fda-4f7a-b123-9339504c7a2e","open_command":"openExample('nav\/AddLinksBetweenMultipleStatesInGraphExample')","title":"Add Links Between Multiple States in Graph"}],"seealso":[{"url":"navgraph.addstate.html","name":"addstate"},{"url":"navgraph.rmstate.html","name":"rmstate"},{"url":"navgraph.rmlink.html","name":"rmlink"},{"url":"navgraph.findlink.html","name":"findlink"},{"url":"navgraph.findstate.html","name":"findstate"},{"url":"navgraph.index2state.html","name":"index2state"},{"url":"navgraph.state2index.html","name":"state2index"},{"url":"navgraph.successors.html","name":"successors"},{"url":"navgraph.show.html","name":"show"},{"url":"navgraph.copy.html","name":"copy"}]},{"href":"ref\/navgraph.addstate.html","refentity":[{"type":"function","name":"addstate","fcntype":"instancemethod"},{"type":"method","name":"navGraph.addstate","fcntype":"instancemethod"}],"refpurpose":"Add one or more states to graph","introduced":"R2024a","description":"This MATLAB function adds one or more states to the input graph specified as a navGraph object.","syntaxgroup":[{"title":"","syntax":["stateIDs = addstate(graph,states)","stateIDs = addstate(graph,states,metadata1,...metadataN)","[stateIDs,status] = addstate(___)"]}],"inputgroup":[{"title":"","inputs":[{"name":"graph","purpose":"Graph object","htmlid":"mw_80656ab1-c58a-4fe2-a108-6e05ea961683","value":["navGraph object"]},{"name":"states","purpose":"State vectors","htmlid":"mw_350f275a-e945-42e1-9f96-0833af73408d","value":["matrix"]},{"name":"metadata","purpose":"Metadata containing additional information","htmlid":"mw_140517f5-d973-460e-beb5-f59d0e1ec026","value":["numeric array","cell array of character vectors","string array","cell array of strings"]}]}],"outputs":[{"name":"stateIDs","purpose":"State identifiers","htmlid":"mw_a3fbd4fa-2077-48d0-91be-6c56d3a88baf","value":["column vector of positive integers"]},{"name":"status","purpose":"Status indicating if new states are added","htmlid":"mw_12a3f042-fdf7-48e2-9c0f-eb73a3da40ee","value":["M-element column vector"]}],"examples":[{"url":"navgraph.addstate.html#mw_c19b7505-85aa-4b05-b559-efafee632940","open_command":"openExample('nav\/AddStateToGraphExample')","title":"Add State to Graph"},{"url":"navgraph.addstate.html#mw_d2591bca-d5f8-4ff1-b75e-40d522c9e979","open_command":"openExample('nav\/AddMultipleStatesAndAssociatedMetadataToGraphExample')","title":"Add Multiple States and Associated Metadata to Graph"}],"seealso":[{"url":"navgraph.addlink.html","name":"addlink"},{"url":"navgraph.rmstate.html","name":"rmstate"},{"url":"navgraph.rmlink.html","name":"rmlink"},{"url":"navgraph.findlink.html","name":"findlink"},{"url":"navgraph.findstate.html","name":"findstate"},{"url":"navgraph.index2state.html","name":"index2state"},{"url":"navgraph.state2index.html","name":"state2index"},{"url":"navgraph.successors.html","name":"successors"},{"url":"navgraph.show.html","name":"show"},{"url":"navgraph.copy.html","name":"copy"}]},{"href":"ref\/navgraph.copy.html","refentity":[{"type":"function","name":"copy","fcntype":"instancemethod"},{"type":"method","name":"navGraph.copy","fcntype":"instancemethod"}],"refpurpose":"Create deep copy of navGraph object","introduced":"R2023a","description":"This MATLAB function creates a deep copy of a navGraph object.","syntaxgroup":[{"title":"","syntax":["graph2 = copy(graph1)"]}],"inputgroup":[{"title":"","inputs":[{"name":"graph1","purpose":"Graph object","htmlid":"mw_ed13950d-20a5-40c4-b717-e72357ad4d38","value":["navGraph object"]}]}],"outputs":[{"name":"graph2","purpose":"Copy of graph object","htmlid":"mw_45b686a3-e566-45e0-80ab-5a48224c36cb","value":["navGraph object"]}],"examples":[{"url":"navgraph.copy.html#mw_df876c60-f450-42bc-b4c1-c2802a5e83c6","open_command":"openExample('nav\/CreateNavGraphObjectWithStateAndLinkTablesExample')","title":"Create navGraph Object with State and Link Tables"}],"seealso":[{"url":"navgraph.html","name":"navGraph"},{"url":"navgraph.findlink.html","name":"findlink"},{"url":"navgraph.findstate.html","name":"findstate"},{"url":"navgraph.index2state.html","name":"index2state"},{"url":"navgraph.state2index.html","name":"state2index"},{"url":"navgraph.successors.html","name":"successors"},{"url":"navgraph.show.html","name":"show"},{"url":"navgraph.addstate.html","name":"addstate"},{"url":"navgraph.addlink.html","name":"addlink"},{"url":"navgraph.rmstate.html","name":"rmstate"},{"url":"navgraph.rmlink.html","name":"rmlink"}]},{"href":"ref\/navgraph.findlink.html","refentity":[{"type":"function","name":"findlink","fcntype":"instancemethod"},{"type":"method","name":"navGraph.findlink","fcntype":"instancemethod"}],"refpurpose":"Find IDs of links","introduced":"R2023a","description":"This MATLAB function finds the link IDs linkIDS of the state pairs statePairs, if they exist in the navGraph object graph.","syntaxgroup":[{"title":"","syntax":["linkIDS = findlink(graph,statePairs)"]}],"inputgroup":[{"title":"","inputs":[{"name":"graph","purpose":"Graph object","htmlid":"mw_2d3e39ee-80d9-4845-93cf-210c9d9f8d44","value":["navGraph object"]},{"name":"statePairs","purpose":"State pairs","htmlid":"mw_bcfe5f10-de05-4858-9df4-d3d4a7d1be7f","value":["N-by-2 string array","N-by-2 cell array of character vectors","N-by-2 matrix of positive integers"]}]}],"outputs":[{"name":"linkIDS","purpose":"Link IDs","htmlid":"mw_d5dde986-4f5a-46d5-85b0-2e6c8f95f5d8","value":["column vector of positive integers"]}],"examples":[{"url":"navgraph.findlink.html#mw_6ca28440-b2ee-4cce-b005-73a2d756c1db","open_command":"openExample('nav\/CreateNavGraphObjectWithStateAndLinkTablesExample')","title":"Create navGraph Object with State and Link Tables"}],"seealso":[{"url":"navgraph.html","name":"navGraph"},{"url":"navgraph.findstate.html","name":"findstate"},{"url":"navgraph.index2state.html","name":"index2state"},{"url":"navgraph.state2index.html","name":"state2index"},{"url":"navgraph.successors.html","name":"successors"},{"url":"navgraph.show.html","name":"show"},{"url":"navgraph.copy.html","name":"copy"},{"url":"navgraph.addstate.html","name":"addstate"},{"url":"navgraph.addlink.html","name":"addlink"},{"url":"navgraph.rmstate.html","name":"rmstate"},{"url":"navgraph.rmlink.html","name":"rmlink"}]},{"href":"ref\/navgraph.findstate.html","refentity":[{"type":"function","name":"findstate","fcntype":"instancemethod"},{"type":"method","name":"navGraph.findstate","fcntype":"instancemethod"}],"refpurpose":"Find IDs of states","introduced":"R2023a","description":"This MATLAB function finds the state IDs stateIDS of the states specified by stateData, if they exist in the navGraph object graph.","syntaxgroup":[{"title":"","syntax":["stateIDS = findstate(graph,stateData)"]}],"inputgroup":[{"title":"","inputs":[{"name":"graph","purpose":"Graph object","htmlid":"mw_354fc375-daa6-409d-8c9b-6038af614182","value":["navGraph object"]},{"name":"stateData","purpose":"State data","htmlid":"mw_a209d553-c614-4583-b1f2-da7708ea3652","value":["column vector of character vectors","column vector of string scalars","cell array of character vectors","matrix","table"]}]}],"outputs":[{"name":"stateIDS","purpose":"State IDs","htmlid":"mw_4be0cc15-a0e4-4925-a23c-72e3af97d354","value":["column vector of positive integers"]}],"examples":[{"url":"navgraph.findstate.html#mw_9f1811f8-d400-47e2-985d-2bd0d46d835a","open_command":"openExample('nav\/FindIndexesOfStatesInNavGraphObjectExample')","title":"Find Indices of States in navGraph Object"}],"seealso":[{"url":"navgraph.html","name":"navGraph"},{"url":"navgraph.findlink.html","name":"findlink"},{"url":"navgraph.index2state.html","name":"index2state"},{"url":"navgraph.state2index.html","name":"state2index"},{"url":"navgraph.successors.html","name":"successors"},{"url":"navgraph.show.html","name":"show"},{"url":"navgraph.copy.html","name":"copy"},{"url":"navgraph.addstate.html","name":"addstate"},{"url":"navgraph.addlink.html","name":"addlink"},{"url":"navgraph.rmstate.html","name":"rmstate"},{"url":"navgraph.rmlink.html","name":"rmlink"}]},{"href":"ref\/navgraph.index2state.html","refentity":[{"type":"function","name":"index2state","fcntype":"instancemethod"},{"type":"method","name":"navGraph.index2state","fcntype":"instancemethod"}],"refpurpose":"Find state vectors of state indices","introduced":"R2023a","description":"This MATLAB function finds the state vectors states for the queried state indices stateIDS, if they exist in the navGraph object graph.","syntaxgroup":[{"title":"","syntax":["states = index2state(graph,stateIDS)"]}],"inputgroup":[{"title":"","inputs":[{"name":"graph","purpose":"Graph object","htmlid":"mw_4e959fe1-c05f-47bc-b149-c7ee7f7235a9","value":["navGraph object"]},{"name":"stateIDS","purpose":"State indices","htmlid":"mw_a9ed92ee-11ab-4f30-8ee5-0a7bbb29c2c3","value":["column vector of positive integers"]}]}],"outputs":[{"name":"states","purpose":"State vectors","htmlid":"mw_f0d1fb0d-b819-4ef7-8936-23cd0e3a175d","value":["matrix"]}],"examples":[{"url":"navgraph.index2state.html#mw_a4a40804-9ab6-427b-b5a2-2f7f49937ea8","open_command":"openExample('nav\/FindSuccessiveStateIndexesAndCostsInNavGraphObjectExample')","title":"Find Successive State Indices and Costs in navGraph Object"}],"seealso":[{"url":"navgraph.html","name":"navGraph"},{"url":"navgraph.findlink.html","name":"findlink"},{"url":"navgraph.findstate.html","name":"findstate"},{"url":"navgraph.state2index.html","name":"state2index"},{"url":"navgraph.successors.html","name":"successors"},{"url":"navgraph.show.html","name":"show"},{"url":"navgraph.copy.html","name":"copy"},{"url":"navgraph.addstate.html","name":"addstate"},{"url":"navgraph.addlink.html","name":"addlink"},{"url":"navgraph.rmstate.html","name":"rmstate"},{"url":"navgraph.rmlink.html","name":"rmlink"}]},{"href":"ref\/navgraph.html","refentity":[{"type":"object","name":"navGraph"},{"type":"function","name":"navGraph","fcntype":"constructor"}],"refpurpose":"Create navGraph object","introduced":"R2023a","description":"The navGraph object is a graph data structure for Navigation Toolbox that aids search-based planners.","syntaxgroup":[{"title":"","syntax":["graph = navGraph","graph = navGraph(states,links)","graph = navGraph(___,Name=Value)","graph = navGraph(digraph)","graph = navGraph(stateTable,linkTable)","graph = navGraph(___,Name=Value)"]}],"inputgroup":[{"title":"","inputs":[{"name":"states","purpose":"State vectors","htmlid":"mw_bb9255c6-9131-4b2e-8bb9-070070f58fa6","value":["matrix"]},{"name":"links","purpose":"Link vectors","htmlid":"mw_0083ac13-e08f-470e-8539-ca9abc3a701c","value":["matrix"]},{"name":"digraph","purpose":"Directed graph","htmlid":"mw_676cd46b-9d98-4160-bfaf-9872123d2238","value":["digraph object"]},{"name":"stateTable","purpose":"State table of graph nodes","htmlid":"mw_7284407c-8216-4563-93de-ca64072b3f1a","value":["table"]},{"name":"linkTable","purpose":"Link table of graph edges","htmlid":"mw_fd6f27cf-8c26-4da2-bee8-63add44d1933","value":["table"]}]},{"namevaluepairs":[{"title":"","inputs":[{"name":"Name","purpose":"State names","htmlid":"mw_56623095-be79-46bd-a58b-5463bdb00359","value":["column vector of strings","cell array of characters"]},{"name":"Weight","purpose":"Link weights","htmlid":"mw_d8f9ca04-4eb2-49d6-b09f-35d23f95c0bc","value":["numeric column vector"]},{"name":"LinkWeightFcn","purpose":"Link weights function","htmlid":"mw_fb5a8be7-61b9-44e1-928e-a1f1b2182900","value":["@nav.algs.distanceEuclidean","@nav.algs.distanceManhattan","@nav.algs.distanceEuclideanSquared","function handle"],"defaultvalue":"@nav.algs.distanceEuclidean"}]}]}],"classpropertygroup":[{"classproperty":[{"name":"States","readonly":true,"purpose":"State table of graph nodes","htmlid":"mw_f4fdec00-2b1f-4cc0-8052-f8fb96295636","value":["table"]},{"name":"Links","readonly":true,"purpose":"Link table of graph edges","htmlid":"mw_5a63c139-6050-4030-b7b2-0019d7f09119","value":["table"]},{"name":"LinkWeightFcn","purpose":"Link weight function","htmlid":"mw_ce0a6efd-bea6-4f95-b919-77b110b20278","value":["@nav.algs.distanceEuclidean","@nav.algs.distanceManhattan","@nav.algs.distanceEuclideanSquared","function handle"],"defaultvalue":"@nav.algs.distanceEuclidean"}]}],"objectfunctions":[{"title":"","functions":[{"name":"addstate","url":"navgraph.addstate.html","description":"Add one or more states to graph"},{"name":"addlink","url":"navgraph.addlink.html","description":"Add links between one or more state pairs"},{"name":"rmstate","url":"navgraph.rmstate.html","description":"Remove one or more states from graph"},{"name":"rmlink","url":"navgraph.rmlink.html","description":"Remove links between one or more state pairs "},{"name":"findlink","url":"navgraph.findlink.html","description":"Find IDs of links"},{"name":"findstate","url":"navgraph.findstate.html","description":"Find IDs of states"},{"name":"index2state","url":"navgraph.index2state.html","description":"Find state vectors of state indices"},{"name":"state2index","url":"navgraph.state2index.html","description":"Find indices for queried state vectors"},{"name":"successors","url":"navgraph.successors.html","description":"Find successive state indices and costs"},{"name":"show","url":"navgraph.show.html","description":"Plot graph representation"},{"name":"copy","url":"navgraph.copy.html","description":"Create deep copy of navGraph object"}]}],"examples":[{"url":"navgraph.html#mw_66da38e9-5dae-45f2-bd11-4b77a3dce5de","open_command":"openExample('nav\/CreateNavGraphObjectWithStateAndLinkTablesExample')","title":"Create navGraph Object with State and Link Tables"}],"seealso":[{"url":"plannerastar.html","name":"plannerAStar"},{"url":"..\/..\/matlab\/ref\/digraph.html","name":"digraph"},{"url":"navgraph.findlink.html","name":"findlink"},{"url":"navgraph.findstate.html","name":"findstate"},{"url":"navgraph.index2state.html","name":"index2state"},{"url":"navgraph.state2index.html","name":"state2index"},{"url":"navgraph.successors.html","name":"successors"},{"url":"navgraph.show.html","name":"show"},{"url":"navgraph.copy.html","name":"copy"},{"url":"navgraph.addstate.html","name":"addstate"},{"url":"navgraph.addlink.html","name":"addlink"},{"url":"navgraph.rmstate.html","name":"rmstate"},{"url":"navgraph.rmlink.html","name":"rmlink"}]},{"href":"ref\/navgraph.rmlink.html","refentity":[{"type":"function","name":"rmlink","fcntype":"instancemethod"},{"type":"method","name":"navGraph.rmlink","fcntype":"instancemethod"}],"refpurpose":"Remove links between one or more state pairs","introduced":"R2024a","description":"This MATLAB function removes the state pairs specified by the link identifiers from the input graph.","syntaxgroup":[{"title":"","syntax":["rmlink(graph,linkIDs)","rmlink(graph,statePairs)"]}],"inputgroup":[{"title":"","inputs":[{"name":"graph","purpose":"Graph object","htmlid":"mw_e2620c95-461e-4c10-a85b-5fc58c3067b9","value":["navGraph object"]},{"name":"linkIDs","purpose":"Link identifiers","htmlid":"mw_2aa436bc-52bf-4e0a-8dfb-bc8950730803","value":["column vector of positive integers"]},{"name":"statePairs","purpose":"Indices of states that are connected","htmlid":"mw_b4018975-00e9-40b3-96ac-6a51dccfd272","value":["two-element column vector","M-by-2 matrix"]}]}],"examples":[{"url":"navgraph.rmlink.html#mw_5bbd13d0-a4b3-4920-87aa-1e750c531623","open_command":"openExample('nav\/RemoveLinksBetweenStatesInGraphExample')","title":"Remove Links Between States in Graph"}],"seealso":[{"url":"navgraph.addstate.html","name":"addstate"},{"url":"navgraph.addlink.html","name":"addlink"},{"url":"navgraph.rmstate.html","name":"rmstate"},{"url":"navgraph.findlink.html","name":"findlink"},{"url":"navgraph.findstate.html","name":"findstate"},{"url":"navgraph.index2state.html","name":"index2state"},{"url":"navgraph.state2index.html","name":"state2index"},{"url":"navgraph.successors.html","name":"successors"},{"url":"navgraph.show.html","name":"show"},{"url":"navgraph.copy.html","name":"copy"}]},{"href":"ref\/navgraph.rmstate.html","refentity":[{"type":"function","name":"rmstate","fcntype":"instancemethod"},{"type":"method","name":"navGraph.rmstate","fcntype":"instancemethod"}],"refpurpose":"Remove one or more states from graph","introduced":"R2024a","description":"This MATLAB function removes states specified by state identifiers and the associated links from the input graph.","syntaxgroup":[{"title":"","syntax":["rmstate(graph,stateIDs)","rmstate(graph,names)"]}],"inputgroup":[{"title":"","inputs":[{"name":"graph","purpose":"Graph object","htmlid":"mw_495b792c-21c2-4756-afd2-03b1fd78f35a","value":["navGraph object"]},{"name":"stateIDs","purpose":"State identifiers","htmlid":"mw_687a98c5-bf03-4de8-8d23-452d6418470c","value":["column vector of positive integers"]},{"name":"names","purpose":"State names","htmlid":"mw_4cfd4c76-f4d4-4daa-9d73-6cfef301d984","value":["column vector of strings","column vector of characters","cell array of strings","cell array of characters"]}]}],"examples":[{"url":"navgraph.rmstate.html#mw_87e5876a-f08a-4878-8352-26c6fd72c451","open_command":"openExample('nav\/RemoveStatesFromGraphExample')","title":"Remove States from Graph"}],"seealso":[{"url":"navgraph.addstate.html","name":"addstate"},{"url":"navgraph.addlink.html","name":"addlink"},{"url":"navgraph.rmlink.html","name":"rmlink"},{"url":"navgraph.findlink.html","name":"findlink"},{"url":"navgraph.findstate.html","name":"findstate"},{"url":"navgraph.index2state.html","name":"index2state"},{"url":"navgraph.state2index.html","name":"state2index"},{"url":"navgraph.successors.html","name":"successors"},{"url":"navgraph.show.html","name":"show"},{"url":"navgraph.copy.html","name":"copy"}]},{"href":"ref\/navgraph.show.html","refentity":[{"type":"function","name":"show","fcntype":"instancemethod"},{"type":"method","name":"navGraph.show","fcntype":"instancemethod"}],"refpurpose":"Plot graph representation","introduced":"R2023a","description":"This MATLAB function plots the graph representation.","syntaxgroup":[{"title":"","syntax":["show(graph)","show(graph,Parent=ax)","axHandle = show(___)"]}],"inputgroup":[{"title":"","inputs":[{"name":"graph","purpose":"Graph object","htmlid":"mw_2e128d9d-6afe-4702-aad9-99b9a7948a66","value":["navGraph object"]},{"name":"ax","purpose":"Axes on which to plot graph representation","htmlid":"mw_a0264b2c-3df4-4f64-a4f4-58f389a76ba2","value":["Axes object"]}]}],"outputs":[{"name":"axHandle","purpose":"Axes handle of graph representation plot","htmlid":"mw_72a00e39-b9bb-4d39-bb3a-38a1deacbb41","value":["Axes object"]}],"examples":[{"url":"navgraph.show.html#mw_a74e7711-f480-4709-bb0f-cc7a37d97f44","open_command":"openExample('nav\/CreateNavGraphObjectWithStateAndLinkTablesExample')","title":"Create navGraph Object with State and Link Tables"}],"seealso":[{"url":"navgraph.html","name":"navGraph"},{"url":"navgraph.findlink.html","name":"findlink"},{"url":"navgraph.findstate.html","name":"findstate"},{"url":"navgraph.index2state.html","name":"index2state"},{"url":"navgraph.state2index.html","name":"state2index"},{"url":"navgraph.successors.html","name":"successors"},{"url":"navgraph.copy.html","name":"copy"},{"url":"navgraph.addstate.html","name":"addstate"},{"url":"navgraph.addlink.html","name":"addlink"},{"url":"navgraph.rmstate.html","name":"rmstate"},{"url":"navgraph.rmlink.html","name":"rmlink"}]},{"href":"ref\/navgraph.state2index.html","refentity":[{"type":"function","name":"state2index","fcntype":"instancemethod"},{"type":"method","name":"navGraph.state2index","fcntype":"instancemethod"}],"refpurpose":"Find indices for queried state vectors","introduced":"R2023a","description":"This MATLAB function finds the state indices stateIDS for the queried state vectors states, if they exist in the navGraph object graph.","syntaxgroup":[{"title":"","syntax":["stateIDS = state2index(graph,states)"]}],"inputgroup":[{"title":"","inputs":[{"name":"graph","purpose":"Graph object","htmlid":"mw_96eaf0af-333b-485d-b02a-e953588f7f9a","value":["navGraph object"]},{"name":"states","purpose":"State vectors","htmlid":"mw_4711fe2b-42b1-422c-83ad-220c80dedd73","value":["matrix"]}]}],"outputs":[{"name":"stateIDS","purpose":"State indices","htmlid":"mw_b8a038ad-1736-4a1b-b842-8a09fe5aae62","value":["column vector of positive integers"]}],"examples":[{"url":"navgraph.state2index.html#mw_c75201fc-7656-4ed2-ad73-0fe0ad15d7ab","open_command":"openExample('nav\/FindIndexesOfStatesInNavGraphObjectExample')","title":"Find Indices of States in navGraph Object"}],"seealso":[{"url":"navgraph.html","name":"navGraph"},{"url":"navgraph.findlink.html","name":"findlink"},{"url":"navgraph.findstate.html","name":"findstate"},{"url":"navgraph.index2state.html","name":"index2state"},{"url":"navgraph.successors.html","name":"successors"},{"url":"navgraph.show.html","name":"show"},{"url":"navgraph.copy.html","name":"copy"},{"url":"navgraph.addstate.html","name":"addstate"},{"url":"navgraph.addlink.html","name":"addlink"},{"url":"navgraph.rmstate.html","name":"rmstate"},{"url":"navgraph.rmlink.html","name":"rmlink"}]},{"href":"ref\/navgraph.successors.html","refentity":[{"type":"function","name":"successors","fcntype":"instancemethod"},{"type":"method","name":"navGraph.successors","fcntype":"instancemethod"}],"refpurpose":"Find successive state indices and costs","introduced":"R2023a","description":"This MATLAB function finds the state indices succIDS and the cost of all states costs that are connected to the specified state currID using the directed link.","syntaxgroup":[{"title":"","syntax":["[succIDS,costs] = successors(graph,currID)"]}],"inputgroup":[{"title":"","inputs":[{"name":"graph","purpose":"Graph object","htmlid":"mw_1e7ec53e-0743-4030-95b3-2d22b56438c4","value":["navGraph object"]},{"name":"currID","purpose":"Current state","htmlid":"mw_8750f996-4603-49c0-88a3-d5d088bf0d5f","value":["positive integer","string scalar","character vector"]}]}],"outputs":[{"name":"succIDS","purpose":"Successive state indices","htmlid":"mw_d6b8f4d2-a8d0-4704-8580-5fe840fa4082","value":["column vector of positive integers"]},{"name":"costs","purpose":"Cost of all successive states","htmlid":"mw_96bbd398-8ecf-40c2-af73-abef531d12ea","value":["numeric column vector"]}],"examples":[{"url":"navgraph.successors.html#mw_e40a9d8f-4ef9-492e-8c1f-866293f082e7","open_command":"openExample('nav\/FindSuccessiveStateIndexesAndCostsInNavGraphObjectExample')","title":"Find Successive State Indices and Costs in navGraph Object"}],"seealso":[{"url":"navgraph.html","name":"navGraph"},{"url":"navgraph.findlink.html","name":"findlink"},{"url":"navgraph.findstate.html","name":"findstate"},{"url":"navgraph.index2state.html","name":"index2state"},{"url":"navgraph.state2index.html","name":"state2index"},{"url":"navgraph.show.html","name":"show"},{"url":"navgraph.copy.html","name":"copy"},{"url":"navgraph.addstate.html","name":"addstate"},{"url":"navgraph.addlink.html","name":"addlink"},{"url":"navgraph.rmstate.html","name":"rmstate"},{"url":"navgraph.rmlink.html","name":"rmlink"}]},{"href":"ref\/navpath.append.html","refentity":[{"type":"function","name":"append","fcntype":"instancemethod"},{"type":"method","name":"navPath.append","fcntype":"instancemethod"}],"refpurpose":"Add states to end of path","introduced":"R2019b","description":"This MATLAB function appends the state samples, states, to the end of the path.","syntaxgroup":[{"title":"","syntax":["append(path,states)"]}],"inputgroup":[{"title":"","inputs":[{"name":"path","purpose":"path object","htmlid":"mw_0d87301a-9846-4a9e-bed1-a0b622bb4066","value":["navPath object"]},{"name":"states","purpose":"states of path","htmlid":"mw_726e0ec7-ada0-4152-9957-976c3ca715ce","value":["real-valued M-by-N matrix"]}]}],"examples":[{"url":"navpath.append.html#mw_499aa003-2d47-418a-929c-419c9fd9c753","open_command":"openExample('nav\/CreateNavPathBasedOnMultipleWaypointsExample')","title":"Create navPath Based on Multiple Waypoints"},{"url":"navpath.append.html#mw_97694e12-4570-410b-bdde-8aff40f17369","open_command":"openExample('nav\/CreateNavPathBasedOnMultipleWaypointsInSE3StateSpaceExample')","title":"Create navPath Based on Multiple Waypoints in SE(3) State Space"}],"seealso":[{"url":"navpath.html","name":"navPath"},{"url":"navpath.copy.html","name":"copy"},{"url":"navpath.interpolate.html","name":"interpolate"},{"url":"navpath.pathlength.html","name":"pathLength"}]},{"href":"ref\/navpath.copy.html","refentity":[{"type":"function","name":"copy","fcntype":"instancemethod"},{"type":"method","name":"navPath.copy","fcntype":"instancemethod"}],"refpurpose":"Create copy of path object","introduced":"R2019b","description":"This MATLAB function creates a copy of the path object, path2, from the path object, path1.","syntaxgroup":[{"title":"","syntax":["path2 = copy(path1)"]}],"inputgroup":[{"title":"","inputs":[{"name":"path1","purpose":"path object","htmlid":"mw_9483a252-f109-4405-a1dc-6ae29964a4fb","value":["navPath object"]}]}],"outputs":[{"name":"path2","purpose":"path object","htmlid":"mw_a7093ce1-ab73-41bd-b569-3ff105d7b264","value":["navPath object"]}],"examples":[{"url":"navpath.copy.html#mw_cc7f7c2a-7719-40e5-b674-6ce93bf21b52","open_command":"openExample('nav\/CreateCopyOfNavPathObjectExample')","title":"Create Copy of navPath Object"}],"seealso":[{"url":"navpath.html","name":"navPath"},{"url":"navpath.append.html","name":"append"},{"url":"navpath.interpolate.html","name":"interpolate"},{"url":"navpath.pathlength.html","name":"pathLength"}]},{"href":"ref\/navpath.interpolate.html","refentity":[{"type":"function","name":"interpolate","fcntype":"instancemethod"},{"type":"method","name":"navPath.interpolate","fcntype":"instancemethod"}],"refpurpose":"Interpolate points along path","introduced":"R2019b","description":"This MATLAB function inserts a number of states in the path and ensures the distribution of all the points in the path to be uniform.","syntaxgroup":[{"title":"","syntax":["interpolate(path,numStates)"]}],"inputgroup":[{"title":"","inputs":[{"name":"path","purpose":"Path object","htmlid":"mw_d67ee14b-966b-49c7-adb8-6ca52ebcea13","value":["navpath object"]},{"name":"numStates","purpose":"Number of states","htmlid":"mw_80fd6f71-3bca-4195-836e-b907e6da3f16","value":["nonnegative integer"]}]}],"examples":[{"url":"navpath.interpolate.html#mw_c9632183-15e5-43e3-89dd-c8f20b37bd2e","open_command":"openExample('nav\/CreateNavPathBasedOnMultipleWaypointsExample')","title":"Create navPath Based on Multiple Waypoints"},{"url":"navpath.interpolate.html#mw_2008cf34-e974-4d55-ba30-4dc4d5b5ef18","open_command":"openExample('nav\/CreateNavPathBasedOnMultipleWaypointsInSE3StateSpaceExample')","title":"Create navPath Based on Multiple Waypoints in SE(3) State Space"}],"seealso":[{"url":"navpath.html","name":"navPath"},{"url":"navpath.append.html","name":"append"},{"url":"navpath.copy.html","name":"copy"},{"url":"navpath.pathlength.html","name":"pathLength"}]},{"href":"ref\/navpath.html","refentity":[{"type":"object","name":"navPath"},{"type":"function","name":"navPath","fcntype":"constructor"}],"refpurpose":"Planned path","introduced":"R2019b","description":"The navPath object stores paths that are typically created by geometric path planners.","syntaxgroup":[{"title":"","syntax":["path = navPath","path = navPath(space)","path = navPath(space,states)","path = navPath(space,states,maxNumStates)"]}],"classpropertygroup":[{"classproperty":[{"name":"StateSpace","purpose":"State space for path","htmlid":"mw_5e9746bb-41c9-409c-b420-0dab185890b8","value":["stateSpaceSE2","state space object"],"defaultvalue":"stateSpaceSE2"},{"name":"States","purpose":"States of path","htmlid":"mw_0696bb7a-429e-4abc-a437-c57ec5906b48","value":["zeros(0,StateSpace.NumStateVariables)","real-valued M-by-N matrix"],"defaultvalue":"zeros(0,StateSpace.NumStateVariables)"},{"name":"NumStates","readonly":true,"purpose":"Number of state samples in path","htmlid":"mw_62d2f422-3a56-463e-85c1-20d7ebb3e6d5","value":["0","nonnegative integer"],"defaultvalue":"0"},{"name":"MaxNumStates","purpose":"Maximum number of states allowed in path","htmlid":"mw_ea61b9a7-9822-49c3-86ee-fdb1353c40e0","value":["inf","positive scalar integer"],"defaultvalue":"inf"}]}],"objectfunctions":[{"title":"","functions":[{"name":"append","url":"navpath.append.html","description":"Add states to end of path"},{"name":"copy","url":"navpath.copy.html","description":"Create copy of path object"},{"name":"interpolate","url":"navpath.interpolate.html","description":"Interpolate points along path"},{"name":"pathLength","url":"navpath.pathlength.html","description":"Length of path"}]}],"examples":[{"url":"navpath.html#mw_c45a6a1d-ab22-4718-aa2b-d54f870d807b","open_command":"openExample('nav\/CreateNavPathBasedOnMultipleWaypointsExample')","title":"Create navPath Based on Multiple Waypoints"},{"url":"navpath.html#mw_64aa859c-71a7-41c6-a353-13c1f3057354","open_command":"openExample('nav\/CreateNavPathBasedOnMultipleWaypointsInSE3StateSpaceExample')","title":"Create navPath Based on Multiple Waypoints in SE(3) State Space"}],"seealso":[{"url":"statespacese2.html","name":"stateSpaceSE2"},{"url":"statespacereedsshepp.html","name":"stateSpaceReedsShepp"},{"url":"statespacedubins.html","name":"stateSpaceDubins"},{"url":"statespacese3.html","name":"stateSpaceSE3"},{"url":"pathmetrics.html","name":"pathmetrics"},{"url":"nav.statespace-class.html","name":"nav.StateSpace"},{"url":"navpath.append.html","name":"append"},{"url":"navpath.copy.html","name":"copy"},{"url":"navpath.interpolate.html","name":"interpolate"},{"url":"navpath.pathlength.html","name":"pathLength"},{"url":"shortenpath.html","name":"shortenpath"}]},{"href":"ref\/navpath.pathlength.html","refentity":[{"type":"function","name":"pathLength","fcntype":"instancemethod"},{"type":"method","name":"navPath.pathLength","fcntype":"instancemethod"}],"refpurpose":"Length of path","introduced":"R2019b","description":"This MATLAB function returns the total length of path by summing the distances between every sequential pair of states in the path.","syntaxgroup":[{"title":"","syntax":["len = pathLength(path)"]}],"inputgroup":[{"title":"","inputs":[{"name":"path","purpose":"Path object","htmlid":"mw_f7cac2b4-ed48-4aeb-a464-0972b42fc898","value":["navpath object"]}]}],"outputs":[{"name":"len","purpose":"Length of path","htmlid":"mw_cb60c552-4656-4279-9484-c503749f03c8","value":["nonnegative scalar"]}],"examples":[{"url":"navpath.pathlength.html#mw_70a63cd1-b27f-4faa-84c3-d125c67fb6b5","open_command":"openExample('nav\/CreateNavPathBasedOnMultipleWaypointsExample')","title":"Create navPath Based on Multiple Waypoints"},{"url":"navpath.pathlength.html#mw_70c020a1-04e4-4e23-9a92-a4a56aa10861","open_command":"openExample('nav\/CreateNavPathBasedOnMultipleWaypointsInSE3StateSpaceExample')","title":"Create navPath Based on Multiple Waypoints in SE(3) State Space"}],"seealso":[{"url":"navpath.html","name":"navPath"},{"url":"navpath.append.html","name":"append"},{"url":"navpath.copy.html","name":"copy"},{"url":"navpath.interpolate.html","name":"interpolate"},{"url":"shortenpath.html","name":"shortenpath"}]},{"href":"ref\/navpathcontrol.append.html","refentity":[{"type":"function","name":"append","fcntype":"instancemethod"},{"type":"method","name":"navPathControl.append","fcntype":"instancemethod"}],"refpurpose":"Add states to end of path","introduced":"R2021b","description":"This MATLAB function adds a sequence of states states, controls controls, targets targets, and durations durations, to the end of the path.","syntaxgroup":[{"title":"","syntax":["append(pathObj,states,controls,targets,durations)"]}],"inputgroup":[{"title":"","inputs":[{"name":"pathObj","purpose":"Control path","htmlid":"mw_182632c0-f989-4a4c-b944-201d6b135f40","value":["navControlPath"]},{"name":"states","purpose":"Series of states for path","htmlid":"mw_b0ec80a4-a73a-4817-82ca-53f3f4056a66","value":["n-by-m matrix"]},{"name":"controls","purpose":"Control input for each state","htmlid":"mw_78a76c42-af9d-4aef-bbe7-137238a5f5ed","value":["n-by-m matrix"]},{"name":"targets","purpose":"Target state for each state in path","htmlid":"mw_7670f823-8cf4-43af-8e17-f70ee552005b","value":["n-element vector in seconds"]},{"name":"durations","purpose":"Duration of each control input","htmlid":"mw_0743b2de-e2db-4fde-ac9c-d4f8bd37d4c8","value":["n-element vector in seconds"]}]}],"examples":[{"url":"navpathcontrol.append.html#mw_9d42f344-51ed-4f4a-b40d-b998ee060ed4","open_command":"openExample('nav\/CombineTwoKinodynamicPathsWithControlsForMobileRobotExample')","title":"Combine Two Kinodynamic Paths with Controls for Mobile Robot"}],"seealso":[{"url":"navpathcontrol.html","name":"navPathControl"},{"url":"navpath.html","name":"navPath"},{"url":"mobilerobotpropagator.html","name":"mobileRobotPropagator"},{"url":"navpathcontrol.interpolate.html","name":"interpolate"},{"url":"navpathcontrol.pathduration.html","name":"pathDuration"}]},{"href":"ref\/navpathcontrol.interpolate.html","refentity":[{"type":"function","name":"interpolate","fcntype":"instancemethod"},{"type":"method","name":"navPathControl.interpolate","fcntype":"instancemethod"}],"refpurpose":"Interpolate path based on propagator step size","introduced":"R2021b","description":"This MATLAB function evaluates the path based on the ControlStepSize property of the nav.StatePropagator object in the StatePropagator property of the control path pathObj, and adds all intermediate points to the control path.","syntaxgroup":[{"title":"","syntax":["interpolate(pathObj)"]}],"inputgroup":[{"title":"","inputs":[{"name":"pathObj","purpose":"Control path object","htmlid":"mw_a33dd7f5-a43d-4a0e-b472-3748f352e836","value":["navControlPath object"]}]}],"examples":[{"url":"navpathcontrol.interpolate.html#mw_8df51ab6-fa66-4398-942c-df5314a3c06c","open_command":"openExample('nav\/CombineTwoKinodynamicPathsWithControlsForMobileRobotExample')","title":"Combine Two Kinodynamic Paths with Controls for Mobile Robot"}],"seealso":[{"url":"navpathcontrol.html","name":"navPathControl"},{"url":"navpath.html","name":"navPath"},{"url":"mobilerobotpropagator.html","name":"mobileRobotPropagator"},{"url":"navpathcontrol.append.html","name":"append"},{"url":"navpathcontrol.pathduration.html","name":"pathDuration"}]},{"href":"ref\/navpathcontrol.html","refentity":[{"type":"object","name":"navPathControl"},{"type":"function","name":"navPathControl","fcntype":"constructor"}],"refpurpose":"Path representing control-based kinematic trajectory","introduced":"R2021b","description":"The navPathControl object stores paths that are typically created by control-based path planners like the plannerControlRRT object.","syntaxgroup":[{"title":"","syntax":["pathObj = navPathControl(propagator)","pathObj = navPathControl(propagator,states,controls,targets,durations)"]}],"classpropertygroup":[{"classproperty":[{"name":"StatePropagator","purpose":"State propagator","htmlid":"mw_6cd2a24b-b9d5-4163-9d7f-740c46fd6de7","value":["object of subclass of nav.StatePropagator"]},{"name":"States","purpose":"Series of states for path","htmlid":"mw_e231ac3c-aad6-4b80-8708-e391be377301","value":["[]","n-by-m matrix"],"defaultvalue":"[]"},{"name":"Controls","purpose":"Control input for each state","htmlid":"mw_a5b5cb6e-9699-437d-af72-fe731c2851de","value":["[]","(n–1)-by-m matrix"],"defaultvalue":"[]"},{"name":"TargetStates","purpose":"Target state for each state in path","htmlid":"mw_c655b2dc-d570-46fe-ac48-70484275599e","value":["[]","(n–1)-by-m matrix"],"defaultvalue":"[]"},{"name":"Durations","purpose":"Duration of each control input","htmlid":"mw_1a72f75d-c430-4588-b8a5-3c4d0d4156f9","value":["[]","(n–1)-element vector in seconds"],"defaultvalue":"[]"},{"name":"NumStates","purpose":"Number of states in path","htmlid":"mw_5c63a7df-86ad-4b6e-bdae-f44bfdcd1668","value":["0","nonnegative integer"],"defaultvalue":"0"},{"name":"NumSegments","purpose":"Number of segments between states","htmlid":"mw_dd8b8f35-625e-47d6-b38c-b2feea8acaa6","value":["0","nonnegative integer"],"defaultvalue":"0"}]}],"objectfunctions":[{"title":"","functions":[{"name":"append","url":"navpathcontrol.append.html","description":"Add states to end of path"},{"name":"interpolate","url":"navpathcontrol.interpolate.html","description":"Interpolate path based on propagator step size"},{"name":"pathDuration","url":"navpathcontrol.pathduration.html","description":"Total elapsed duration of control path"}]}],"examples":[{"url":"navpathcontrol.html#mw_89f9972a-6e81-440a-a05e-ed94143013ae","open_command":"openExample('nav\/PlanKinodynamicPathWithControlsForMobileRobotExample')","title":"Plan Kinodynamic Path with Controls for Mobile Robot"},{"url":"navpathcontrol.html#mw_c7feca5c-0c7d-42f8-9570-1811f20250e1","open_command":"openExample('nav\/CombineTwoKinodynamicPathsWithControlsForMobileRobotExample')","title":"Combine Two Kinodynamic Paths with Controls for Mobile Robot"}],"seealso":[{"url":"navpath.html","name":"navPath"},{"url":"mobilerobotpropagator.html","name":"mobileRobotPropagator"},{"url":"navpathcontrol.append.html","name":"append"},{"url":"navpathcontrol.interpolate.html","name":"interpolate"},{"url":"navpathcontrol.pathduration.html","name":"pathDuration"}]},{"href":"ref\/navpathcontrol.pathduration.html","refentity":[{"type":"function","name":"pathDuration","fcntype":"instancemethod"},{"type":"method","name":"navPathControl.pathDuration","fcntype":"instancemethod"}],"refpurpose":"Total elapsed duration of control path","introduced":"R2021b","description":"This MATLAB function returns the total elapsed duration of the control path.","syntaxgroup":[{"title":"","syntax":["totalTime = pathDuration(pathObj)"]}],"inputgroup":[{"title":"","inputs":[{"name":"pathObj","purpose":"Control path object","htmlid":"mw_69b47ae2-ac7a-459e-abdd-a32ccf23fad8","value":["navControlPath object"]}]}],"outputs":[{"name":"totalTime","purpose":"Total duration of control path","htmlid":"mw_a1bc6b36-d581-4ae8-92a7-2847809d527b","value":["positive scalar"]}],"examples":[{"url":"navpathcontrol.pathduration.html#mw_60a5f1c2-fc49-40bd-918e-f4791fc81336","open_command":"openExample('nav\/CombineTwoKinodynamicPathsWithControlsForMobileRobotExample')","title":"Combine Two Kinodynamic Paths with Controls for Mobile Robot"}],"seealso":[{"url":"navpathcontrol.html","name":"navPathControl"},{"url":"navpath.html","name":"navPath"},{"url":"mobilerobotpropagator.html","name":"mobileRobotPropagator"},{"url":"navpathcontrol.append.html","name":"append"},{"url":"navpathcontrol.interpolate.html","name":"interpolate"}]},{"href":"ref\/ned2lla.html","refentity":[{"type":"function","name":"ned2lla","fcntype":"simple"}],"refpurpose":"Transform local north-east-down coordinates to geodetic coordinates","introduced":"R2021a","description":"This MATLAB function transforms the local north-east-down (NED) Cartesian coordinates xyzNED to geodetic coordinates lla.","syntaxgroup":[{"title":"","syntax":["lla = ned2lla(xyzNED,lla0,method)"]}],"inputgroup":[{"title":"","inputs":[{"name":"xyzNED","purpose":"Local NED Cartesian coordinates","htmlid":"mw_edb517ce-ff24-4dc7-83f9-70b9e687ab20","value":["three-element row vector","n-by-3 matrix"]},{"name":"lla0","purpose":"Origin of local NED system in geodetic coordinates","htmlid":"mw_cfd4224e-50f7-487c-b562-a6d4a5eaf8ce","value":["three-element row vector","n-by-3 matrix"]},{"name":"method","purpose":"Transformation method","htmlid":"mw_5f56dea7-0586-4605-a9e3-8bc036a59c42","value":["'flat'","'ellipsoid'"]}]}],"outputs":[{"name":"lla","purpose":"Geodetic coordinates","htmlid":"mw_efa0f1a7-ce98-4fcf-92e7-f7ab9baa690d","value":["three-element row vector","n-by-3 matrix"]}],"examples":[{"url":"ned2lla.html#mw_ec34f8ab-3f3b-4e13-9a56-6ed9f63c45c8","open_command":"openExample('shared_trajectories\/TransformNEDCoordinatesToGeodeticCoordinatesExample')","title":"Transform NED Coordinates to Geodetic Coordinates"}],"seealso":[{"url":"enu2lla.html","name":"enu2lla"},{"url":"lla2enu.html","name":"lla2enu"},{"url":"lla2ned.html","name":"lla2ned"}]},{"href":"ref\/nhconstrainedimugpsfuser.correct.html","refentity":[{"type":"function","name":"correct","fcntype":"instancemethod"},{"type":"method","name":"NHConstrainedIMUGPSFuser.correct","fcntype":"instancemethod"}],"refpurpose":"Correct states using direct state measurements for insfilterNonholonomic","introduced":"R2018b","description":"This MATLAB function corrects the state and state estimation error covariance based on the measurement and measurement covariance.","syntaxgroup":[{"title":"","syntax":["correct(FUSE,idx,measurement,measurementCovariance)"]}],"inputgroup":[{"title":"","inputs":[{"name":"FUSE","purpose":"insfilterNonholonomic object","htmlid":"mw_fac7d2df-baa6-410b-b315-d52a4b1eeac2","value":["object"]},{"name":"idx","purpose":"State vector Index of measurement to correct","htmlid":"mw_6d7847bc-ae48-45cd-8f07-5bdb23b633bd","value":["N-element vector of increasing integers in the range [1,16]"]},{"name":"measurement","purpose":"Direct measurement of state","htmlid":"mw_8b592d4c-89b1-417b-9ded-b3fc9a0ebb30","value":["N-element vector"]},{"name":"measurementCovariance","purpose":"Covariance of measurement","htmlid":"mw_893453ef-fa15-4eaa-8a04-867a26644c48","value":["scalar","N-element vector","N-by-N matrix"]}]}],"examples":[{"url":"nhconstrainedimugpsfuser.correct.html#mw_07b3629a-971f-4839-a3e8-e84cf2ca79ca","open_command":"openExample('shared_positioning\/CorrectInsfilterNonholonomicUsingDirectMeasurementExample')","title":"Correct insfilterNonholonomic Using Direct Measurement"}],"seealso":[{"url":"insfilter.html","name":"insfilter"},{"url":"insfilternonholonomic.html","name":"insfilterNonholonomic"}]},{"href":"ref\/nhconstrainedimugpsfuser.fusegps.html","refentity":[{"type":"function","name":"fusegps","fcntype":"instancemethod"},{"type":"method","name":"NHConstrainedIMUGPSFuser.fusegps","fcntype":"instancemethod"}],"refpurpose":"Correct states using GPS data for insfilterNonholonomic","introduced":"R2018b","description":"This MATLAB function fuses GPS position data to correct the state estimate.","syntaxgroup":[{"title":"","syntax":["[res,resCov] = fusegps(FUSE,position,positionCovariance)","[res,resCov] = fusegps(FUSE,position,positionCovariance,velocity,velocityCovariance)"]}],"inputgroup":[{"title":"","inputs":[{"name":"FUSE","purpose":"insfilterNonholonomic object","htmlid":"mw_a7086fdd-381b-4ed6-af18-2e40fae3bd63","value":["object"]},{"name":"position","purpose":"Position of GPS receiver (LLA)","htmlid":"mw_8cd205ce-1e08-4881-8e4b-694d9be234bb","value":["3-element row vector"]},{"name":"positionCovariance","purpose":"Position measurement covariance of GPS receiver (m^{2})","htmlid":"mw_7b21e6d6-5b77-4dbe-8f53-ec404160b423","value":["3-by-3 matrix"]},{"name":"velocity","purpose":"Velocity of GPS receiver in local NED coordinate system (m\/s)","htmlid":"mw_ed24daee-0869-4cbe-84f5-fac2bac46f6e","value":["3-element row vector"]},{"name":"velocityCovariance","purpose":"Velocity measurement covariance of GPS receiver (m^{2}\/s^{2})","htmlid":"mw_2866873e-2512-40e8-b381-9581bfe5d590","value":["3-by-3 matrix"]}]}],"outputs":[{"name":"res","purpose":"Position and course residual","htmlid":"mw_de68ea17-8e6d-4ee2-b36f-bed34f933483","value":["1-by-3 or 1-by-4 vector of real values"]},{"name":"resCov","purpose":"Residual covariance","htmlid":"mw_9161b5d8-413a-47c1-beff-ec597bf4616b","value":["3-by-3 or 4-by-4 matrix of real values"]}],"examples":[{"url":"nhconstrainedimugpsfuser.fusegps.html#mw_8b7b7fea-2973-449d-9c3b-3da7675bb45f","open_command":"openExample('shared_positioning\/FuseGPSDataUsingInsfilterNonholonomicExample')","title":"Fuse GPS Data Using insfilterNonholonomic"}],"seealso":[{"url":"insfilter.html","name":"insfilter"},{"url":"insfilternonholonomic.html","name":"insfilterNonholonomic"}]},{"href":"ref\/nhconstrainedimugpsfuser.pose.html","refentity":[{"type":"function","name":"pose","fcntype":"instancemethod"},{"type":"method","name":"NHConstrainedIMUGPSFuser.pose","fcntype":"instancemethod"}],"refpurpose":"Current orientation and position estimate for insfilterNonholonomic","introduced":"R2018b","description":"This MATLAB function returns the current estimate of the pose.","syntaxgroup":[{"title":"","syntax":["[position,orientation,velocity] = pose(FUSE)","[position,orientation,velocity] = pose(FUSE,format)"]}],"inputgroup":[{"title":"","inputs":[{"name":"FUSE","purpose":"NHConstrainedIMUGPSFuser object","htmlid":"mw_de082d43-fd03-46c1-b9be-5ead3aa0177d","value":["object"]},{"name":"format","purpose":"Output orientation format","htmlid":"mw_0b611f51-2567-41b0-a637-0ad8f5369edc","value":["'quaternion'","'rotmat'"],"defaultvalue":"'quaternion'"}]}],"outputs":[{"name":"position","purpose":"Position estimate expressed in the local coordinate system (m)","htmlid":"mw_67fd9380-1fd7-4d37-8cd6-821d605a0156","value":["three-element row vector"]},{"name":"orientation","purpose":"Orientation estimate expressed in the local coordinate system","htmlid":"mw_27ad34dc-5a19-42e1-a835-3bb09d80d761","value":["quaternion","3-by-3 rotation matrix"]},{"name":"velocity","purpose":"Velocity estimate expressed in local coordinate system (m\/s)","htmlid":"mw_6207edbe-09ee-4870-b398-5af1b232c521","value":["3-element row vector"]}],"examples":[{"url":"nhconstrainedimugpsfuser.pose.html#mw_f849b3fd-8d57-4f32-bbfc-14408691a2f9","open_command":"openExample('shared_positioning\/ObtainPoseFromInsfilterNonholonomicExample')","title":"Obtain Pose from insfilterNonholonomic"}],"seealso":[{"url":"insfilter.html","name":"insfilter"},{"url":"insfilternonholonomic.html","name":"insfilterNonholonomic"}]},{"href":"ref\/nhconstrainedimugpsfuser.predict.html","refentity":[{"type":"function","name":"predict","fcntype":"instancemethod"},{"type":"method","name":"NHConstrainedIMUGPSFuser.predict","fcntype":"instancemethod"}],"refpurpose":"Update states using accelerometer and gyroscope data for insfilterNonholonomic","introduced":"R2018b","description":"This MATLAB function fuses accelerometer and gyroscope data to update the state estimate.","syntaxgroup":[{"title":"","syntax":["predict(FUSE,accelReadings,gyroReadings)"]}],"inputgroup":[{"title":"","inputs":[{"name":"FUSE","purpose":"insfilterNonholonomic object","htmlid":"mw_f9882a6c-6fad-4d72-9faf-d8a052d8a6e6","value":["object"]},{"name":"accelReadings","purpose":"Accelerometer readings in local sensor body coordinate system (m\/s^{2})","htmlid":"mw_230910c6-2ae6-488c-bd62-0494ba4bc5f6","value":["3-element row vector"]},{"name":"gyroReadings","purpose":"Gyroscope readings in local sensor body coordinate system (rad\/s)","htmlid":"mw_814713be-ed0a-4097-a59a-e1f130810490","value":["3-element row vector"]}]}],"examples":[{"url":"nhconstrainedimugpsfuser.predict.html#mw_94f8da68-c055-4b73-88f6-6a13c8268ee7","open_command":"openExample('shared_positioning\/PredictStateUsingInsfilterNonholonomicExample')","title":"Predict State Using insfilterNonholonomic"}],"seealso":[{"url":"insfilter.html","name":"insfilter"},{"url":"insfilternonholonomic.html","name":"insfilterNonholonomic"}]},{"href":"ref\/nhconstrainedimugpsfuser.reset.html","refentity":[{"type":"function","name":"reset","fcntype":"instancemethod"},{"type":"method","name":"NHConstrainedIMUGPSFuser.reset","fcntype":"instancemethod"}],"refpurpose":"Reset internal states for insfilterNonholonomic","introduced":"R2018b","description":"This MATLAB function resets the State, StateCovariance, and internal integrators to their default values.","syntaxgroup":[{"title":"","syntax":["reset(FUSE)"]}],"inputgroup":[{"title":"","inputs":[{"name":"FUSE","purpose":"insfilterNonholonomic object","htmlid":"mw_96b33a1b-f4cc-42ef-b957-81ee1c827c56","value":["object"]}]}],"examples":[{"url":"nhconstrainedimugpsfuser.reset.html#mw_3f1c0359-4261-4306-a187-93a900787d9d","open_command":"openExample('shared_positioning\/ResetStateOfInsfilterNonholonomicExample')","title":"Reset State of insfilterNonholonomic"}],"seealso":[{"url":"insfilter.html","name":"insfilter"},{"url":"insfilternonholonomic.html","name":"insfilterNonholonomic"}]},{"href":"ref\/nhconstrainedimugpsfuser.stateinfo.html","refentity":[{"type":"function","name":"stateinfo","fcntype":"instancemethod"},{"type":"method","name":"NHConstrainedIMUGPSFuser.stateinfo","fcntype":"instancemethod"}],"refpurpose":"Display state vector information for insfilterNonholonomic","introduced":"R2018b","description":"This MATLAB function displays the meaning of each index of the State property and the associated units.","syntaxgroup":[{"title":"","syntax":["stateinfo(FUSE)","info = stateinfo(FUSE)"]}],"inputgroup":[{"title":"","inputs":[{"name":"FUSE","purpose":"insfilterNonholonomic object","htmlid":"mw_0ea31775-ad9f-421e-87e3-ce225e9c1298","value":["object"]}]}],"outputs":[{"name":"info","purpose":"State information","htmlid":"mw_d5134358-4650-4f1d-b859-9a563846786d_sep_mw_a793f7e0-4b76-4fff-a134-c6e8cb55079e","value":["structure"]}],"examples":[{"url":"nhconstrainedimugpsfuser.stateinfo.html#mw_16539b23-b3fc-461b-995b-dd6b6fcdc4c8","open_command":"openExample('shared_positioning\/StateInformationOfInsfilterNonholonomicExample')","title":"State information of insfilterNonholonomic"}],"seealso":[{"url":"insfilter.html","name":"insfilter"},{"url":"insfilternonholonomic.html","name":"insfilterNonholonomic"}]},{"href":"ref\/nmeaparser-system-object.html","refentity":[{"type":"sysobj","name":"nmeaParser"},{"type":"function","name":"nmeaParser","fcntype":"constructor"}],"refpurpose":"Parse data from standard and manufacturer-specific NMEA sentences sent from marine electronic devices","introduced":"R2020b","description":"The nmeaParser System object parses data from any NMEA (National Marine Electronics Association) sentences.","syntaxgroup":[{"title":"","syntaxtype":"createobject","syntax":["pnmea = nmeaParser","pnmea = nmeaParser(\"MessageIDs\", 'msgID')","pnmea = nmeaParser(\"CustomSentence\", {['CustomMessageId1','parserFunctionName1'],['CustomMessageId2','parserFunctionName2']})","pnmea = nmeaParser(\"MessageIDs\", {'msgID1','msgID2'},\"CustomSentence\", {['CustomMessageId1','parserFunctionName1'],['CustomMessageId2','parserFunctionName2']})"]},{"title":"","syntaxtype":"usage","syntax":["[rmcData,ggaData,gsaData,vtgData,gllData,gstData,gsvData,zdaData,hdtData] = pnmea(rawData)","[customNmeaData1,customNmeaData2] = pnmea(rawData)"]}],"inputgroup":[{"title":"","inputs":[{"name":"rawData","purpose":"NMEA data as obtained from a marine electronic device","syntaxtype":"usage","htmlid":"mw_f3a24f4e-6bbb-48fd-89af-a665eb16bb08","value":["string array"]}]},{"namevaluepairs":[{"title":"","inputs":[{"name":"CustomSentence","purpose":"Specify message ID of any sentence and the name of its parser function","syntaxtype":"createobject","htmlid":"mw_6075b237-d261-4de9-bbc9-a7f850a82706","value":["cell array of character vectors"]}]}]}],"outputs":[{"name":"rmcData","purpose":"Data extracted from RMC sentence","syntaxtype":"usage","htmlid":"mw_cb4ecece-7a9a-4a35-abf8-3930bf9a4e03","value":["structure"]},{"name":"ggaData","purpose":"Data extracted from GGA sentence","syntaxtype":"usage","htmlid":"mw_ff1f356b-8d86-470b-b7d6-1892985ecd1c","value":["structure"]},{"name":"gsaData","purpose":"Data extracted from GSA sentence","syntaxtype":"usage","htmlid":"mw_75990538-0c76-4691-a2ff-68226a059c70","value":["structure"]},{"name":"vtgData","purpose":"Data extracted from VTG sentence","syntaxtype":"usage","htmlid":"mw_4dce7496-ee9f-4544-8697-73aeda8a9c01","value":["structure"]},{"name":"gllData","purpose":"Data extracted from GLL sentence","syntaxtype":"usage","htmlid":"mw_5da38cb2-eb30-4802-a977-ea252f5575b6","value":["structure"]},{"name":"gstData","purpose":"Data extracted from GST sentence","syntaxtype":"usage","htmlid":"mw_07b21f31-a02e-4181-9638-8b638808c504","value":["structure"]},{"name":"gsvData","purpose":"Data extracted from GSV sentence","syntaxtype":"usage","htmlid":"mw_66b724b3-c1b8-4f27-b154-35575bb94145","value":["structure"]},{"name":"zdaData","purpose":"Data extracted from ZDA sentence","syntaxtype":"usage","htmlid":"mw_aa2e0839-0995-4572-9278-773752d9b6c5","value":["structure"]},{"name":"hdtData","purpose":"Data extracted from HDT sentence","syntaxtype":"usage","htmlid":"mw_74e35113-af3d-4f83-a03f-745eaac040d9","value":["structure"]},{"name":"customNmeaData1","purpose":"Data extracted from any standard or manufacturer-specific NMEA sentence","syntaxtype":"usage","htmlid":"mw_7cd8c097-6a95-46e5-ba82-d04d36e50ecc","value":["structure"]}],"classpropertygroup":[{"classproperty":[{"name":"MessageIDs","purpose":"Message IDs of nine standard NMEA sentences with built-in support to extract data","htmlid":"mw_75c73da8-a2af-4ef0-acd5-a184b1ac9587","value":["[\"RMC\",\"GGA\",\"GSA\"]","RMC","GGA","GSA","GSV","VTG","GLL","GST","ZDA","HDT"],"defaultvalue":"[\"RMC\",\"GGA\",\"GSA\"]"}]}],"examples":[{"url":"nmeaparser-system-object.html#mw_e5b507b4-fc04-4690-9047-5bb515d11d7c","open_command":"openExample('nav\/ExtractDataFromNMEASentencesExample')","title":"Extract Data from NMEA Sentences Using MessageID Property"},{"url":"nmeaparser-system-object.html#mw_d79898d6-0a2c-4f83-b531-b7192c145538","open_command":"openExample('nav\/ExtractDataRMBSentenceUsingCustomSentenceExample')","title":"Extract Data Using CustomSentence Name-Value Pair"},{"url":"nmeaparser-system-object.html#mw_1ec3e2d9-0f34-4ef9-8084-cbd36642174d","title":"Extract Data from a Manufacturer-specific Sentence Using CustomSentence Name-Value Pair"}],"seealso":[{"url":"skyplot.html","name":"skyplot"},{"url":"extractnmeasentence.html","name":"extractNMEASentence"}]},{"href":"ref\/occupancymap.checkoccupancy.html","refentity":[{"type":"function","name":"checkOccupancy","fcntype":"instancemethod"},{"type":"method","name":"occupancyMap.checkOccupancy","fcntype":"instancemethod"}],"refpurpose":"Check if locations are free or occupied","introduced":"R2019b","description":"This MATLAB function returns the occupancy status of specified locations in an occupancy map.","syntaxgroup":[{"title":"","syntax":["iOccval = checkOccupancy(map,xy)","iOccval = checkOccupancy(map,xy,'local')","iOccval = checkOccupancy(map,ij,'grid')","[iOccval,validPts] = checkOccupancy(___)"]},{"title":"","syntax":["occMatrix = checkOccupancy(map)","occMatrix = checkOccupancy(map,bottomLeft,matSize)","occMatrix = checkOccupancy(map,bottomLeft,matSize,'local')","occMatrix = checkOccupancy(map,topLeft,matSize,'grid')"]}],"inputgroup":[{"title":"","inputs":[{"name":"map","purpose":"Map representation","htmlid":"bvaw665-1_sep_bvaw665-1-map","value":["occupancyMap object"]},{"name":"xy","purpose":"World coordinates","htmlid":"bvaw665-1_sep_bvaw665-1-xy","value":["n-by-2 matrix"]},{"name":"ij","purpose":"Grid positions","htmlid":"bvaw665-1_sep_bvaw665-1-ij","value":["n-by-2 matrix"]},{"name":"bottomLeft","purpose":"Location of output matrix in world or local","htmlid":"mw_8d4416f6-d9b0-4d86-b313-1f83c64e7ae3","value":["two-element vector","[xCoord yCoord]"]},{"name":"matSize","purpose":"Output matrix size","htmlid":"mw_6602cb5e-fb48-47ec-9320-c41bd3ac26c0","value":["two-element vector","[xLength yLength]","[gridRow gridCol]"]},{"name":"topLeft","purpose":"Location of grid","htmlid":"mw_fc9e06e5-76e6-4dd9-aaba-08654adade67","value":["two-element vector","[iCoord jCoord]"]}]}],"outputs":[{"name":"iOccval","purpose":"Interpreted occupancy values","htmlid":"bvaw665-1_sep_bvaw665-1-iOccval","value":["n-by-1 column vector"]},{"name":"validPts","purpose":"Valid map locations","htmlid":"mw_7e94d9e5-4946-480a-9267-8af3dfece8e3","value":["n-by-1 column vector"]},{"name":"occMatrix","purpose":"Matrix of occupancy values","htmlid":"mw_b76ee01a-6a44-4b57-8a8a-cc08140ef012","value":["matrix"]}],"examples":[{"url":"occupancymap.checkoccupancy.html#bvaw665-1_sep_mw_0cef219f-ea26-4a3a-b04e-29269a0793d0","open_command":"openExample('nav\/GetOccupancyValuesAndCheckOccupancyStatusExample')","title":"Get Occupancy Values and Check Occupancy Status"}],"seealso":[{"url":"occupancymap.html","name":"occupancyMap"},{"url":"occupancymap.getoccupancy.html","name":"getOccupancy"},{"url":"..\/..\/robotics\/ref\/binaryoccupancymap.html","name":"binaryOccupancyMap"}]},{"href":"ref\/occupancymap.copy.html","refentity":[{"type":"function","name":"copy","fcntype":"instancemethod"},{"type":"method","name":"occupancyMap.copy","fcntype":"instancemethod"}],"refpurpose":"Create copy of 2-D occupancy map","introduced":"R2019b","description":"This MATLAB function creates a deep copy of the occupancyMap object with the same properties.","syntaxgroup":[{"title":"","syntax":["copyMap = copy(map)"]}],"inputgroup":[{"title":"","inputs":[{"name":"map","purpose":"Map representation","htmlid":"bvaw7ad-1-map","value":["occupancyMap object"]}]}],"outputs":[{"name":"copyMap","purpose":"Copied map representation","htmlid":"bvaw7ad-1-copyMap","value":["occupancyMap object"]}],"examples":[{"url":"occupancymap.copy.html#mw_f12e5040-5e29-4408-91fb-750726032ef3","open_command":"openExample('nav\/CopyAnOccupancyGridMapExample')","title":"Copy Occupancy Grid Map"}],"seealso":[{"url":"..\/..\/robotics\/ref\/binaryoccupancymap.html","name":"binaryOccupancyMap"},{"url":"occupancymap.html","name":"occupancyMap"},{"url":"occupancymap.occupancymatrix.html","name":"occupancyMatrix"},{"url":"occupancymap.getoccupancy.html","name":"getOccupancy"}]},{"href":"ref\/occupancymap.getoccupancy.html","refentity":[{"type":"function","name":"getOccupancy","fcntype":"instancemethod"},{"type":"method","name":"occupancyMap.getOccupancy","fcntype":"instancemethod"}],"refpurpose":"Get occupancy probability of locations","introduced":"R2019b","description":"This MATLAB function returns the occupancy probability values of specified locations in an occupancy map.","syntaxgroup":[{"title":"","syntax":["occVal = getOccupancy(map,xy)","occVal = getOccupancy(map,xy,'local')","occVal = getOccupancy(map,ij,'grid')","[occVal,validPts] = getOccupancy(___)"]},{"title":"","syntax":["occMatrix = getOccupancy(map)","occMatrix = getOccupancy(map,bottomLeft,matSize)","occMatrix = getOccupancy(map,bottomLeft,matSize,'local')","occMatrix = getOccupancy(map,topLeft,matSize,'grid')"]}],"inputgroup":[{"title":"","inputs":[{"name":"map","purpose":"Map representation","htmlid":"bvaw7a2-1-map","value":["occupancyMap object"]},{"name":"xy","purpose":"World coordinates","htmlid":"bvaw7a2-1-xy","value":["n-by-2 matrix"]},{"name":"ij","purpose":"Grid positions","htmlid":"bvaw7a2-1-ij","value":["n-by-2 matrix"]},{"name":"bottomLeft","purpose":"Location of output matrix in world or local","htmlid":"mw_b7275373-3071-45c5-824f-36ecb3b5dec7","value":["two-element vector","[xCoord yCoord]"]},{"name":"matSize","purpose":"Output matrix size","htmlid":"mw_7600acde-e796-4d0e-b6f1-560c7b74fb3a","value":["two-element vector","[xLength yLength]","[gridRow gridCol]"]},{"name":"topLeft","purpose":"Location of grid","htmlid":"mw_70411985-b734-4ecf-ba60-a648d98931f6","value":["two-element vector","[iCoord jCoord]"]}]}],"outputs":[{"name":"occVal","purpose":"Probability occupancy values","htmlid":"bvaw7a2-1-occval","value":["column vector"]},{"name":"validPts","purpose":"Valid map locations","htmlid":"mw_f3a634ad-dcf4-473b-ac44-3d018a0011f2","value":["n-by-1 column vector"]},{"name":"occMatrix","purpose":"Matrix of occupancy values","htmlid":"mw_55a43a05-5d60-4d21-8b43-300b285710c0","value":["matrix"]}],"examples":[{"url":"occupancymap.getoccupancy.html#mw_2ba6af59-ac84-4d3d-80de-1887f45d9c3d","open_command":"openExample('nav\/InsertLaserScansIntoOccupancyMapExample')","title":"Insert Laser Scans into Occupancy Map"},{"url":"occupancymap.getoccupancy.html#mw_69f329f4-e129-401c-8a82-3684ff6093f1","open_command":"openExample('nav\/GetOccupancyValuesAndCheckOccupancyStatusExample')","title":"Get Occupancy Values and Check Occupancy Status"}],"seealso":[{"url":"occupancymap.html","name":"occupancyMap"},{"url":"occupancymap.checkoccupancy.html","name":"checkOccupancy"}]},{"href":"ref\/occupancymap.grid2local.html","refentity":[{"type":"function","name":"grid2local","fcntype":"instancemethod"},{"type":"method","name":"occupancyMap.grid2local","fcntype":"instancemethod"},{"type":"method","name":"mapLayer.grid2local","fcntype":"instancemethod"},{"type":"method","name":"multiLayerMap.grid2local","fcntype":"instancemethod"},{"type":"method","name":"signedDistanceMap.grid2local","fcntype":"instancemethod"}],"refpurpose":"Convert grid indices to local coordinates","introduced":"R2019b","description":"This MATLAB function converts grid indices in the map to local coordinates.","syntaxgroup":[{"title":"","syntax":["xyLocal = grid2local(map,ijGrid)"]}],"inputgroup":[{"title":"","inputs":[{"name":"map","purpose":"Map representation","htmlid":"mw_e5b5069f-5e2b-4a06-a6d0-4b7bd8eeea5f_sep_mw_075a816f-691c-481c-b19e-73ad891908d8","value":["occupancyMap object","mapLayer object","multiLayerMap object","signedDistanceMap object"]},{"name":"ijGrid","purpose":"Grid positions","htmlid":"mw_e5b5069f-5e2b-4a06-a6d0-4b7bd8eeea5f_sep_buoogfm-1-ij","value":["n-by-2 matrix"]}]}],"outputs":[{"name":"xyLocal","purpose":"Local coordinates","htmlid":"mw_e5b5069f-5e2b-4a06-a6d0-4b7bd8eeea5f_sep_buoogfm-1-xy","value":["n-by-2 matrix"]}],"examples":[{"url":"occupancymap.grid2local.html#mw_281a4a30-edfb-49c3-acd4-4ff2c8b04a3d","open_command":"openExample('nav\/ConvertGridIndicesInOccupancyMapToLocalCoordinatesExample')","title":"Convert Grid Indices in Occupancy Map to Local Coordinates"}],"seealso":[{"url":"multilayermap.html","name":"multiLayerMap"},{"url":"maplayer.html","name":"mapLayer"},{"url":"occupancymap.html","name":"occupancyMap"},{"url":"binaryoccupancymap.html","name":"binaryOccupancyMap"},{"url":"signeddistancemap.html","name":"signedDistanceMap"},{"url":"occupancymap.local2grid.html","name":"local2grid"},{"url":"occupancymap.grid2world.html","name":"grid2world"}]},{"href":"ref\/occupancymap.grid2world.html","refentity":[{"type":"function","name":"grid2world","fcntype":"instancemethod"},{"type":"method","name":"occupancyMap.grid2world","fcntype":"instancemethod"},{"type":"method","name":"mapLayer.grid2world","fcntype":"instancemethod"},{"type":"method","name":"multiLayerMap.grid2world","fcntype":"instancemethod"},{"type":"method","name":"signedDistanceMap.grid2world","fcntype":"instancemethod"}],"refpurpose":"Convert grid indices to world coordinates","introduced":"R2019b","description":"This MATLAB function converts grid indices in the map to world coordinates.","syntaxgroup":[{"title":"","syntax":["xyWorld = grid2world(map,ijGrid)"]}],"inputgroup":[{"title":"","inputs":[{"name":"map","purpose":"Map representation","htmlid":"bvaw7cp-1_sep_mw_075a816f-691c-481c-b19e-73ad891908d8","value":["occupancyMap object","mapLayer object","multiLayerMap object","signedDistanceMap object"]},{"name":"ijGrid","purpose":"Grid positions","htmlid":"bvaw7cp-1_sep_buoogfm-1-ij","value":["n-by-2 matrix"]}]}],"outputs":[{"name":"xyWorld","purpose":"World coordinates","htmlid":"bvaw7cp-1_sep_bvaw7cp-1-xy","value":["n-by-2 matrix"]}],"examples":[{"url":"occupancymap.grid2world.html#mw_de5aca9f-b57b-4696-bab5-dbf7bdeca552","open_command":"openExample('nav\/ConvertGridIndicesInOccupancyMapToWorldCoordinatesExample')","title":"Convert Grid Indices in Occupancy Map to World Coordinates"}],"seealso":[{"url":"multilayermap.html","name":"multiLayerMap"},{"url":"maplayer.html","name":"mapLayer"},{"url":"occupancymap.html","name":"occupancyMap"},{"url":"binaryoccupancymap.html","name":"binaryOccupancyMap"},{"url":"signeddistancemap.html","name":"signedDistanceMap"},{"url":"occupancymap.world2grid.html","name":"world2grid"},{"url":"occupancymap.grid2local.html","name":"grid2local"}]},{"href":"ref\/occupancymap.inflate.html","refentity":[{"type":"function","name":"inflate","fcntype":"instancemethod"},{"type":"method","name":"occupancyMap.inflate","fcntype":"instancemethod"}],"refpurpose":"Inflate each occupied location","introduced":"R2019b","description":"This MATLAB function inflates each occupied position of the specified map by the radius, specified in meters.","syntaxgroup":[{"title":"","syntax":["inflate(map,radius)","inflate(map,gridradius,'grid')"]}],"inputgroup":[{"title":"","inputs":[{"name":"map","purpose":"Map representation","htmlid":"bvaw7c4-1-map","value":["occupancyMap object"]},{"name":"radius","purpose":"Dimension that defines by how much to inflate occupied locations","htmlid":"bvaw7c4-1-radius","value":["positive numeric scalar"]},{"name":"gridradius","purpose":"Number of cells by which to inflate the occupied locations","htmlid":"bvaw7c4-1-gridradius","value":["positive integer scalar"]}]}],"examples":[{"url":"occupancymap.inflate.html#mw_a9616ea4-c9f5-4a29-97fc-de52f196abd1","open_command":"openExample('nav\/CreateAndModifyAnOccupancyMapExample')","title":"Create and Modify Occupancy Map"}],"seealso":[{"url":"binaryoccupancymap.html","name":"binaryOccupancyMap"},{"url":"occupancymap.html","name":"occupancyMap"},{"url":"occupancymap.getoccupancy.html","name":"getOccupancy"}]},{"href":"ref\/occupancymap.insertray.html","refentity":[{"type":"function","name":"insertRay","fcntype":"instancemethod"},{"type":"method","name":"occupancyMap.insertRay","fcntype":"instancemethod"}],"refpurpose":"Insert ray from laser scan observation","introduced":"R2019b","description":"This MATLAB function inserts one or more lidar scan sensor observations in the occupancy grid, map, using the input lidarScan object, scan, to get ray endpoints.","syntaxgroup":[{"title":"","syntax":["insertRay(map,pose,scan,maxrange)","insertRay(map,pose,ranges,angles,maxrange)","insertRay(map,startpt,endpoints)","insertRay(___,invModel)"]}],"inputgroup":[{"title":"","inputs":[{"name":"map","purpose":"Map representation","htmlid":"bvaw7o8-1-map","value":["occupancyMap object"]},{"name":"pose","purpose":"Position and orientation of vehicle","htmlid":"bvaw7o8-1_sep_mw_4cbc369e-d695-4e46-be76-fc95ba40df39","value":["three-element vector"]}]},{"title":"","inputs":[{"name":"scan","purpose":"Lidar scan readings","htmlid":"d126e153406","value":["lidarScan object"]}]},{"title":"","inputs":[{"name":"ranges","purpose":"Range values from scan data","htmlid":"bvaw7o8-1_sep_bvaw7o8-1-ranges","value":["vector"]},{"name":"angles","purpose":"Angle values from scan data","htmlid":"bvaw7o8-1_sep_bvaw7o8-1-angles","value":["vector"]},{"name":"maxrange","purpose":"Maximum range of sensor","htmlid":"bvaw7o8-1_sep_bvaw7o8-1-maxrange","value":["scalar"]},{"name":"startpt","purpose":"Start point for rays","htmlid":"bvaw7o8-1_sep_bvaw7o8-1-startpt","value":["two-element vector"]},{"name":"endpoints","purpose":"Endpoints for rays","htmlid":"bvaw7o8-1_sep_bvaw7o8-1-endpoints","value":["n-by-2 matrix"]},{"name":"invModel","purpose":"Inverse sensor model values","htmlid":"bvaw7o8-1-invModel","value":["two-element vector"]}]}],"examples":[{"url":"occupancymap.insertray.html#bvaw7o8-1_sep_mw_e47daa63-9aa9-42b3-b8e6-65c827a12f32","open_command":"openExample('nav\/InsertLaserScansIntoOccupancyMapExample')","title":"Insert Laser Scans into Occupancy Map"}],"seealso":[{"url":"occupancymap.html","name":"occupancyMap"},{"url":"binaryoccupancymap.raycast.html","name":"raycast"},{"url":"binaryoccupancymap.html","name":"binaryOccupancyMap"},{"url":"lidarscan.html","name":"lidarScan"}]},{"href":"ref\/occupancymap.html","refentity":[{"type":"object","name":"occupancyMap"},{"type":"function","name":"occupancyMap","fcntype":"constructor"}],"refpurpose":"Create 2-D occupancy map","introduced":"R2019b","description":"occupancyMap creates a 2-D occupancy grid map object.","syntaxgroup":[{"title":"","syntax":["map = occupancyMap(width,height)","map = occupancyMap(width,height,resolution)","map = occupancyMap(rows,cols,resolution,'grid')","map = occupancyMap(p)","map = occupancyMap(p,resolution)","map = occupancyMap(sourcemap)","map = occupancyMap(sourcemap,resolution)"]}],"inputgroup":[{"title":"","inputs":[{"name":"width","purpose":"Map width","htmlid":"bvaw60t-1-width","value":["scalar"]},{"name":"height","purpose":"Map height","htmlid":"bvaw60t-1-height","value":["scalar"]},{"name":"resolution","purpose":"Grid resolution","htmlid":"bvaw60t-1-resolution","value":["1","scalar"],"defaultvalue":"1"},{"name":"rows","purpose":"Number of rows in grid","htmlid":"mw_01574c57-c63b-42cb-8812-eddd711c6cb4","value":["positive scalar integer"]},{"name":"cols","purpose":"Number of columns in grid","htmlid":"mw_14923712-f1f9-4c6d-8e5c-daf92383a85b","value":["positive scalar integer"]},{"name":"p","purpose":"Input occupancy grid","htmlid":"bvaw60t-1-p","value":["matrix of probability values from 0 to 1"]},{"name":"sourcemap","purpose":"Occupancy map object","htmlid":"mw_cdc58cd4-6373-4904-b840-87654b3d5736","value":["occupancyMap object"]}]}],"classpropertygroup":[{"classproperty":[{"name":"FreeThreshold","purpose":"Threshold below which cells are considered obstacle-free","htmlid":"bvaw60t-1-FreeThreshold","value":["scalar between 0 and 1"]},{"name":"OccupiedThreshold","purpose":"Threshold above which cells are considered occupied","htmlid":"bvaw60t-1-OccupiedThreshold","value":["scalar"]},{"name":"ProbabilitySaturation","purpose":"Saturation limits for probability","htmlid":"bvaw60t-1-ProbabilitySaturation","value":["[0.001 0.999]","two-element real-valued vector"],"defaultvalue":"[0.001 0.999]"},{"name":"GridSize","readonly":true,"purpose":"Number of rows and columns in grid","htmlid":"bvaw60t-1-GridSize","value":["two-element integer-valued vector"]},{"name":"Resolution","readonly":true,"purpose":"Grid resolution","htmlid":"bvaw60t-1-Resolution","value":["1","scalar"],"defaultvalue":"1"},{"name":"XLocalLimits","readonly":true,"purpose":"Minimum and maximum values of x-coordinates in local frame","htmlid":"mw_d4ae6d21-c334-457d-bf03-5af5a1cb8b74","value":["two-element vector"]},{"name":"YLocalLimits","readonly":true,"purpose":"Minimum and maximum values of y-coordinates in local frame","htmlid":"mw_18e4b3bb-ca71-42ae-a88a-7c3332f0c284","value":["two-element vector"]},{"name":"XWorldLimits","readonly":true,"purpose":"Minimum and maximum world range values of x-coordinates","htmlid":"bvaw60t-1-XWorldLimits","value":["two-element vector"]},{"name":"YWorldLimits","readonly":true,"purpose":"Minimum and maximum world range values of y-coordinates","htmlid":"bvaw60t-1-YWorldLimits","value":["two-element vector"]},{"name":"GridLocationInWorld","purpose":"[x y] world coordinates of grid","htmlid":"bvaw60t-1-GridLocationInWorld","value":["[0 0]","two-element vector"],"defaultvalue":"[0 0]"},{"name":"LocalOriginInWorld","purpose":"Location of the local frame in world coordinates","htmlid":"mw_7b9cf448-674e-4b1f-ae82-cbc5e4f123ae","value":["[0 0]","two-element vector","[xWorld yWorld]"],"defaultvalue":"[0 0]"},{"name":"GridOriginInLocal","purpose":"Location of the grid in local coordinates","htmlid":"mw_4dee8f8e-7ca3-4d25-86d0-e5a60af37eb8","value":["[0 0]","two-element vector","[xLocal yLocal]"],"defaultvalue":"[0 0]"},{"name":"DefaultValue","purpose":"Default value for unspecified map locations","htmlid":"mw_e7e8e4d7-afe9-4e77-ad38-d8132245b451","value":["0.5","scalar between 0 and 1"],"defaultvalue":"0.5"}]}],"objectfunctions":[{"title":"","functions":[{"name":"checkOccupancy","url":"occupancymap.checkoccupancy.html","description":"Check if locations are free or occupied"},{"name":"copy","url":"occupancymap.copy.html","description":"Create copy of 2-D occupancy map"},{"name":"getOccupancy","url":"occupancymap.getoccupancy.html","description":"Get occupancy probability of locations"},{"name":"grid2local","url":"occupancymap.grid2local.html","description":"Convert grid indices to local coordinates"},{"name":"grid2world","url":"occupancymap.grid2world.html","description":"Convert grid indices to world coordinates"},{"name":"inflate","url":"occupancymap.inflate.html","description":"Inflate each occupied location"},{"name":"insertRay","url":"occupancymap.insertray.html","description":"Insert ray from laser scan observation"},{"name":"local2grid","url":"occupancymap.local2grid.html","description":"Convert local coordinates to grid indices"},{"name":"local2world","url":"occupancymap.local2world.html","description":"Convert local coordinates to world coordinates"},{"name":"move","url":"occupancymap.move.html","description":"Move map in world frame"},{"name":"occupancyMatrix","url":"occupancymap.occupancymatrix.html","description":"Convert occupancy map to matrix"},{"name":"raycast","url":"occupancymap.raycast.html","description":"Compute cell indices along a ray"},{"name":"rayIntersection","url":"occupancymap.rayintersection.html","description":"Find intersection points of rays and occupied map cells"},{"name":"setOccupancy","url":"occupancymap.setoccupancy.html","description":"Set occupancy probability of locations"},{"name":"show","url":"occupancymap.show.html","description":"Display 2-D occupancy map"},{"name":"syncWith","url":"occupancymap.syncwith.html","description":"Sync map with overlapping map"},{"name":"updateOccupancy","url":"occupancymap.updateoccupancy.html","description":"Update occupancy probability at\n                                                  locations"},{"name":"world2grid","url":"occupancymap.world2grid.html","description":"Convert world coordinates to grid indices"},{"name":"world2local","url":"occupancymap.world2local.html","description":"Convert world coordinates to local coordinates"}]}],"examples":[{"url":"occupancymap.html#mw_16b90056-a9d4-4dcb-9ef4-f7c81acb66b8","open_command":"openExample('nav\/InsertLaserScansIntoOccupancyMapExample')","title":"Insert Laser Scans into Occupancy Map"},{"url":"occupancymap.html#mw_45a91761-0606-4c4c-8ef0-42a42a2d6176","open_command":"openExample('nav\/ConvertPGMImageToMapExample')","title":"Convert PGM Image to Map"}],"seealso":[{"url":"binaryoccupancymap.html","name":"binaryOccupancyMap"},{"url":"..\/..\/robotics\/ref\/mobilerobotprm.html","name":"mobileRobotPRM"},{"url":"..\/..\/robotics\/ref\/controllerpurepursuit-system-object.html","name":"controllerPurePursuit"},{"url":"..\/..\/ros\/ref\/rosreadoccupancygrid.html","name":"rosReadOccupancyGrid"},{"url":"..\/..\/ros\/ref\/roswriteoccupancygrid.html","name":"rosWriteOccupancyGrid"}]},{"href":"ref\/occupancymap.local2grid.html","refentity":[{"type":"function","name":"local2grid","fcntype":"instancemethod"},{"type":"method","name":"occupancyMap.local2grid","fcntype":"instancemethod"},{"type":"method","name":"mapLayer.local2grid","fcntype":"instancemethod"},{"type":"method","name":"multiLayerMap.local2grid","fcntype":"instancemethod"},{"type":"method","name":"signedDistanceMap.local2grid","fcntype":"instancemethod"}],"refpurpose":"Convert local coordinates to grid indices","introduced":"R2019b","description":"This MATLAB function converts local coordinates in the map to grid indices.","syntaxgroup":[{"title":"","syntax":["ijGrid = local2grid(map,xyLocal)"]}],"inputgroup":[{"title":"","inputs":[{"name":"map","purpose":"Map representation","htmlid":"mw_ff15ae1e-0783-4d86-8a10-aea6369b210f_sep_mw_075a816f-691c-481c-b19e-73ad891908d8","value":["occupancyMap object","mapLayer object","multiLayerMap object","signedDistanceMap object"]},{"name":"xyLocal","purpose":"Local coordinates","htmlid":"mw_ff15ae1e-0783-4d86-8a10-aea6369b210f_sep_bvaw7vo-1-xy","value":["n-by-2 matrix"]}]}],"outputs":[{"name":"ijGrid","purpose":"Grid positions","htmlid":"mw_ff15ae1e-0783-4d86-8a10-aea6369b210f_sep_bvaw7vo-1-ij","value":["n-by-2 matrix"]}],"examples":[{"url":"occupancymap.local2grid.html#mw_d6b7ae23-1387-42a9-8776-bc01011fb065","open_command":"openExample('nav\/ConvertLocalCoordinatesInOccupancyMapToGridIndicesExample')","title":"Convert Local Coordinates in Occupancy Map to Grid Indices"}],"seealso":[{"url":"multilayermap.html","name":"multiLayerMap"},{"url":"maplayer.html","name":"mapLayer"},{"url":"occupancymap.html","name":"occupancyMap"},{"url":"binaryoccupancymap.html","name":"binaryOccupancyMap"},{"url":"signeddistancemap.html","name":"signedDistanceMap"},{"url":"occupancymap.grid2local.html","name":"grid2local"},{"url":"occupancymap.local2world.html","name":"local2world"}]},{"href":"ref\/occupancymap.local2world.html","refentity":[{"type":"function","name":"local2world","fcntype":"instancemethod"},{"type":"method","name":"occupancyMap.local2world","fcntype":"instancemethod"},{"type":"method","name":"mapLayer.local2world","fcntype":"instancemethod"},{"type":"method","name":"multiLayerMap.local2world","fcntype":"instancemethod"},{"type":"method","name":"signedDistanceMap.local2world","fcntype":"instancemethod"}],"refpurpose":"Convert local coordinates to world coordinates","introduced":"R2019b","description":"This MATLAB function converts local coordinates in the map to world coordinates.","syntaxgroup":[{"title":"","syntax":["xyWorld = local2world(map,xyLocal)"]}],"inputgroup":[{"title":"","inputs":[{"name":"map","purpose":"Map representation","htmlid":"mw_3da7025b-38c5-4b5b-a7db-599d2ecad068_sep_mw_075a816f-691c-481c-b19e-73ad891908d8","value":["occupancyMap object","mapLayer object","multiLayerMap object","signedDistanceMap object"]},{"name":"xyLocal","purpose":"Local coordinates","htmlid":"mw_3da7025b-38c5-4b5b-a7db-599d2ecad068_sep_bvaw7vo-1-xy","value":["n-by-2 matrix"]}]}],"outputs":[{"name":"xyWorld","purpose":"World coordinates","htmlid":"mw_3da7025b-38c5-4b5b-a7db-599d2ecad068_sep_bvaw7cp-1-xy","value":["n-by-2 matrix"]}],"examples":[{"url":"occupancymap.local2world.html#mw_c40c37ac-b7b4-42e3-97e3-ee3216a578d5","open_command":"openExample('nav\/ConvertLocalCoordinatesInOccupancyMapToWorldCoordinatesExample')","title":"Convert Local Coordinates in Occupancy Map to World Coordinates"}],"seealso":[{"url":"multilayermap.html","name":"multiLayerMap"},{"url":"maplayer.html","name":"mapLayer"},{"url":"occupancymap.html","name":"occupancyMap"},{"url":"binaryoccupancymap.html","name":"binaryOccupancyMap"},{"url":"signeddistancemap.html","name":"signedDistanceMap"},{"url":"occupancymap.world2local.html","name":"world2local"},{"url":"occupancymap.local2grid.html","name":"local2grid"}]},{"href":"ref\/occupancymap.move.html","refentity":[{"type":"function","name":"move","fcntype":"instancemethod"},{"type":"method","name":"occupancyMap.move","fcntype":"instancemethod"},{"type":"method","name":"mapLayer.move","fcntype":"instancemethod"},{"type":"method","name":"multiLayerMap.move","fcntype":"instancemethod"},{"type":"method","name":"signedDistanceMap.move","fcntype":"instancemethod"}],"refpurpose":"Move map in world frame","introduced":"R2019b","description":"This MATLAB function moves the local origin of the map to an absolute location, moveValue, in the world frame, and updates the map limits.","syntaxgroup":[{"title":"","syntax":["move(map,moveValue)","move(map,moveValue,Name=Value)"]}],"inputgroup":[{"title":"","inputs":[{"name":"map","purpose":"Map representation","htmlid":"mw_4da1268e-143a-471c-918c-d6077051f96f_sep_mw_075a816f-691c-481c-b19e-73ad891908d8","value":["occupancyMap object","mapLayer object","multiLayerMap object","signedDistanceMap object"]},{"name":"moveValue","purpose":"Local map origin move value","htmlid":"mw_204c414d-d1c8-415f-a3f5-99a091e6a8ef","value":["[x y] vector"]}]},{"namevaluepairs":[{"title":"","inputs":[{"name":"MoveType","purpose":"Type of move","htmlid":"mw_743c7313-2d50-4cbd-8388-98c9296509e1","value":["\"absolute\"","\"relative\""],"defaultvalue":"\"absolute\""},{"name":"FillValue","purpose":"Fill value for revealed locations","htmlid":"mw_644b3f65-ea7c-4836-80b8-3feec45c841f","value":["0","1"],"defaultvalue":"0"},{"name":"SyncWith","purpose":"Secondary map to sync with","htmlid":"mw_7643af27-0c05-46fc-95cf-cbc0b2eb50b8","value":["occupancyMap object"]}]}]}],"examples":[{"url":"occupancymap.move.html#mw_4da1268e-143a-471c-918c-d6077051f96f_sep_mw_9eeed721-5093-4936-8edb-8c05dbb7d0fe","open_command":"openExample('nav\/MoveLocalMapAndSyncWithWorldMapExample')","title":"Move Local Map and Sync with World Map"}],"seealso":[{"url":"multilayermap.html","name":"multiLayerMap"},{"url":"maplayer.html","name":"mapLayer"},{"url":"occupancymap.html","name":"occupancyMap"},{"url":"binaryoccupancymap.html","name":"binaryOccupancyMap"},{"url":"signeddistancemap.html","name":"signedDistanceMap"},{"url":"occupancymap.occupancymatrix.html","name":"occupancyMatrix"}]},{"href":"ref\/occupancymap.occupancymatrix.html","refentity":[{"type":"function","name":"occupancyMatrix","fcntype":"instancemethod"},{"type":"method","name":"occupancyMap.occupancyMatrix","fcntype":"instancemethod"}],"refpurpose":"Convert occupancy map to matrix","introduced":"R2019b","description":"This MATLAB function returns probability values stored in the occupancy grid object as a matrix.","syntaxgroup":[{"title":"","syntax":["mat = occupancyMatrix(map)","mat = occupancyMatrix(map,'ternary')"]}],"inputgroup":[{"title":"","inputs":[{"name":"map","purpose":"Map representation","htmlid":"bvaw7px-1-map","value":["occupancyMap object"]}]}],"outputs":[{"name":"mat","purpose":"Occupancy grid values","htmlid":"mw_1c97ce3f-2e6b-41f7-a103-3005bb99d1c2","value":["matrix"]}],"examples":[{"url":"occupancymap.occupancymatrix.html#mw_a62d5c38-487a-4b8d-a7c1-8181152ada38","open_command":"openExample('nav\/ConvertOccupancyMapToMatrixExample')","title":"Convert Occupancy Map to Matrix"}],"seealso":[{"url":"occupancymap.html","name":"occupancyMap"},{"url":"occupancymap.getoccupancy.html","name":"getOccupancy"},{"url":"occupancymap.show.html","name":"show"},{"url":"binaryoccupancymap.html","name":"binaryOccupancyMap"}]},{"href":"ref\/occupancymap.raycast.html","refentity":[{"type":"function","name":"raycast","fcntype":"instancemethod"},{"type":"method","name":"occupancyMap.raycast","fcntype":"instancemethod"}],"refpurpose":"Compute cell indices along a ray","introduced":"R2019b","description":"This MATLAB function returns cell indices of the specified map for all cells traversed by a ray originating from the specified pose at the specified angle and range values.","syntaxgroup":[{"title":"","syntax":["[endpoints,midpoints] = raycast(map,pose,range,angle)","[endpoints,midpoints] = raycast(map,p1,p2)"]}],"inputgroup":[{"title":"","inputs":[{"name":"map","purpose":"Map representation","htmlid":"bvaw7qw-1-map","value":["occupancyMap object"]},{"name":"pose","purpose":"Position and orientation of sensor","htmlid":"mw_646cda02-c06d-4778-b6b7-3d06805fc4ad_sep_bvaw7qw-1-pose","value":["three-element vector"]},{"name":"range","purpose":"Range of ray","htmlid":"mw_646cda02-c06d-4778-b6b7-3d06805fc4ad_sep_bvaw7qw-1-range","value":["scalar"]},{"name":"angle","purpose":"Angle of ray","htmlid":"mw_646cda02-c06d-4778-b6b7-3d06805fc4ad_sep_bvaw7qw-1-angle","value":["scalar"]},{"name":"p1","purpose":"Starting point of ray","htmlid":"mw_646cda02-c06d-4778-b6b7-3d06805fc4ad_sep_bvaw7qw-1-p1","value":["two-element vector"]},{"name":"p2","purpose":"Endpoint of ray","htmlid":"mw_646cda02-c06d-4778-b6b7-3d06805fc4ad_sep_bvaw7qw-1-p2","value":["two-element vector"]}]}],"outputs":[{"name":"endpoints","purpose":"Endpoint grid indices","htmlid":"mw_646cda02-c06d-4778-b6b7-3d06805fc4ad_sep_bvaw7qw-1-endpoints","value":["n-by-2 matrix"]},{"name":"midpoints","purpose":"Midpoint grid indices","htmlid":"mw_646cda02-c06d-4778-b6b7-3d06805fc4ad_sep_bvaw7qw-1-midpoints","value":["n-by-2 matrix"]}],"examples":[{"url":"occupancymap.raycast.html#mw_5bcf64d7-ebdb-41e8-8b0a-863c72865d6f","open_command":"openExample('nav\/GetGridCellsAlongARayExample')","title":"Get Grid Cells Along a Ray"}],"seealso":[{"url":"occupancymap.html","name":"occupancyMap"}]},{"href":"ref\/occupancymap.rayintersection.html","refentity":[{"type":"function","name":"rayIntersection","fcntype":"instancemethod"},{"type":"method","name":"occupancyMap.rayIntersection","fcntype":"instancemethod"}],"refpurpose":"Find intersection points of rays and occupied map cells","introduced":"R2019b","description":"This MATLAB function returns intersection points of rays and occupied cells in the specified map.","syntaxgroup":[{"title":"","syntax":["intersectionPts = rayIntersection(map,pose,angles,maxrange)","intersectionPts = rayIntersection(map,pose,angles,maxrange,threshold)"]}],"inputgroup":[{"title":"","inputs":[{"name":"map","purpose":"Map representation","htmlid":"mw_a950b1fb-1212-4605-9e57-e246eabf160a","value":["occupancyMap object"]},{"name":"pose","purpose":"Position and orientation of sensor","htmlid":"mw_8c01b857-458d-4bb6-9abf-88eb6040c26b_sep_mw_31fac152-9bfe-4191-bc0b-d7e46f12a515","value":["three-element vector"]},{"name":"angles","purpose":"Ray angles emanating from sensor","htmlid":"mw_8c01b857-458d-4bb6-9abf-88eb6040c26b_sep_bvaw7rt-1-angles","value":["vector"]},{"name":"maxrange","purpose":"Maximum range of sensor","htmlid":"mw_8c01b857-458d-4bb6-9abf-88eb6040c26b_sep_bvaw7rt-1-maxrange","value":["scalar"]},{"name":"threshold","purpose":"Threshold for occupied cells","htmlid":"bvaw7rt-1-threshold","value":["scalar from 0 to 1"]}]}],"outputs":[{"name":"intersectionPts","purpose":"Intersection points","htmlid":"mw_8c01b857-458d-4bb6-9abf-88eb6040c26b_sep_bvaw7rt-1-intersectionPts","value":["n-by-2 matrix"]}],"examples":[{"url":"occupancymap.rayintersection.html#mw_51805af4-8081-4b43-81b8-e2b3bc0f9718","open_command":"openExample('nav\/GetRayIntersectionPointsOnOccupancyMapExample')","title":"Get Ray Intersection Points on Occupancy Map"}],"seealso":[{"url":"occupancymap.html","name":"occupancyMap"},{"url":"binaryoccupancymap.raycast.html","name":"raycast"},{"url":"occupancymap.updateoccupancy.html","name":"updateOccupancy"},{"url":"..\/..\/robotics\/ref\/binaryoccupancymap.html","name":"binaryOccupancyMap"}]},{"href":"ref\/occupancymap.setoccupancy.html","refentity":[{"type":"function","name":"setOccupancy","fcntype":"instancemethod"},{"type":"method","name":"occupancyMap.setOccupancy","fcntype":"instancemethod"}],"refpurpose":"Set occupancy probability of locations","introduced":"R2019b","description":"This MATLAB function assigns the occupancy values to specified locations in an occupancy map.","syntaxgroup":[{"title":"","syntax":["setOccupancy(map,xy,occval)"]},{"title":"","syntax":["setOccupancy(map,xy,occval,'local')","setOccupancy(map,ij,occval,'grid')","validPts = setOccupancy(___)"]},{"title":"","syntax":["setOccupancy(map,bottomLeft,inputMatrix)","setOccupancy(map,bottomLeft,inputMatrix,'local')","setOccupancy(map,topLeft,inputMatrix,'grid')"]}],"inputgroup":[{"title":"","inputs":[{"name":"map","purpose":"Map representation","htmlid":"bvaw7sm-1-map","value":["occupancyMap object"]},{"name":"xy","purpose":"World coordinates","htmlid":"bvaw7sm-1-xy","value":["n-by-2 matrix"]},{"name":"ij","purpose":"Grid positions","htmlid":"bvaw7sm-1-ij","value":["n-by-2 matrix"]},{"name":"occval","purpose":"Probability occupancy values","htmlid":"bvaw7sm-1-occval","value":["scalar","column vector"]},{"name":"inputMatrix","purpose":"Occupancy values","htmlid":"mw_19afde99-4104-4b9e-a8ae-1b03d9a95f81","value":["matrix"]},{"name":"bottomLeft","purpose":"Location of output matrix in world or local","htmlid":"mw_4ff2f146-afb6-421f-9672-f52a863d7de7","value":["two-element vector","[xCoord yCoord]"]},{"name":"topLeft","purpose":"Location of grid","htmlid":"mw_29d88f6e-0bbe-4a16-894d-4f4050fea1d2","value":["two-element vector","[iCoord jCoord]"]}]}],"outputs":[{"name":"validPts","purpose":"Valid map locations","htmlid":"mw_572cd490-c295-49ec-9723-0daa1fd5cdb1","value":["n-by-1 column vector"]}],"examples":[{"url":"occupancymap.setoccupancy.html#mw_1d6a9764-2b24-4fbe-bfba-ac186b1cb512","open_command":"openExample('nav\/CreateAndModifyAnOccupancyMapExample')","title":"Create and Modify Occupancy Map"}],"seealso":[{"url":"occupancymap.html","name":"occupancyMap"},{"url":"occupancymap.getoccupancy.html","name":"getOccupancy"},{"url":"binaryoccupancymap.html","name":"binaryOccupancyMap"}]},{"href":"ref\/occupancymap.show.html","refentity":[{"type":"function","name":"show","fcntype":"instancemethod"},{"type":"method","name":"occupancyMap.show","fcntype":"instancemethod"}],"refpurpose":"Display 2-D occupancy map","introduced":"R2019b","description":"This MATLAB function displays the occupancy grid map in the current axes, with the axes labels representing the world coordinates.","syntaxgroup":[{"title":"","syntax":["show(map)","show(map,'local')","show(map,'grid')","show(___,Name,Value)","mapImage = show(___)"]}],"inputgroup":[{"title":"","inputs":[{"name":"map","purpose":"Map representation","htmlid":"bvaw7ti-1-map","value":["occupancyMap object"]}]},{"namevaluepairs":[{"title":"","inputs":[{"name":"Parent","purpose":"Axes to plot the map","htmlid":"mw_8d9f9875-1799-4b52-bda8-b16b572dd6d5","value":["Axes object","UIAxes object"]},{"name":"FastUpdate","purpose":"Update existing map plot","htmlid":"mw_b1bbbf16-7b2c-41bb-90d2-828a57839e15","value":["0","1"],"defaultvalue":"0"}]}]}],"outputs":[{"name":"mapImage","purpose":"Map image","htmlid":"bvaw7ti-1-mapImage","value":["object handle"]}],"examples":[{"url":"occupancymap.show.html#mw_472ec64f-07a7-4bc7-bd8b-8834c236c0cb_sep_mw_9eeed721-5093-4936-8edb-8c05dbb7d0fe","open_command":"openExample('nav\/CreateAndModifyAnOccupancyMapExample')","title":"Create and Modify Occupancy Map"},{"url":"occupancymap.show.html#mw_75d09f84-ca45-40bd-80d2-9e58e04b126e","open_command":"openExample('nav\/ConvertPGMImageToMapExample')","title":"Convert PGM Image to Map"}],"seealso":[{"url":"..\/..\/matlab\/ref\/axes.html","name":"axes"},{"url":"occupancymap.html","name":"occupancyMap"},{"url":"occupancymap.occupancymatrix.html","name":"occupancyMatrix"},{"url":"binaryoccupancymap.html","name":"binaryOccupancyMap"}]},{"href":"ref\/occupancymap.syncwith.html","refentity":[{"type":"function","name":"syncWith","fcntype":"instancemethod"},{"type":"method","name":"occupancyMap.syncWith","fcntype":"instancemethod"},{"type":"method","name":"mapLayer.syncWith","fcntype":"instancemethod"},{"type":"method","name":"multiLayerMap.syncWith","fcntype":"instancemethod"},{"type":"method","name":"signedDistanceMap.syncWith","fcntype":"instancemethod"}],"refpurpose":"Sync map with overlapping map","introduced":"R2019b","description":"This MATLAB function updates the map with data from another source map of the same type.","syntaxgroup":[{"title":"","syntax":["syncWith(map,sourcemap)"]}],"inputgroup":[{"title":"","inputs":[{"name":"map","purpose":"Map representation","htmlid":"mw_792d5842-f435-43ae-b8fd-1dc99f02018a_sep_mw_075a816f-691c-481c-b19e-73ad891908d8","value":["occupancyMap object","mapLayer object","multiLayerMap object","signedDistanceMap object"]},{"name":"sourcemap","purpose":"Source map data","htmlid":"mw_389c03c0-233e-4561-94d4-ee2ceecca984","value":["occupancyMap object","mapLayer object","multiLayerMap object","signedDistanceMap object"]}]}],"examples":[{"url":"occupancymap.syncwith.html#mw_c22dd74f-4256-49af-95bf-62fd0279c349","open_command":"openExample('nav\/MoveLocalMapAndSyncWithWorldMapExample')","title":"Move Local Map and Sync with World Map"}],"seealso":[{"url":"multilayermap.html","name":"multiLayerMap"},{"url":"maplayer.html","name":"mapLayer"},{"url":"occupancymap.html","name":"occupancyMap"},{"url":"binaryoccupancymap.html","name":"binaryOccupancyMap"},{"url":"signeddistancemap.html","name":"signedDistanceMap"}]},{"href":"ref\/occupancymap.updateoccupancy.html","refentity":[{"type":"function","name":"updateOccupancy","fcntype":"instancemethod"},{"type":"method","name":"occupancyMap.updateOccupancy","fcntype":"instancemethod"}],"refpurpose":"Update occupancy probability at locations","introduced":"R2019b","description":"This MATLAB function probabilistically integrates occupancy values into the occupancy values of an occupancy map.","syntaxgroup":[{"title":"","syntax":["updateOccupancy(map,occMatrix)"]},{"title":"","syntax":["updateOccupancy(map,locations,obs)","updateOccupancy(map,xy,obs,'world')","updateOccupancy(map,xy,obs,'local')","updateOccupancy(map,ij,obs,'grid')"]},{"title":"","syntax":["updateOccupancy(map,bottomLeft,obsMatrix)","updateOccupancy(map,bottomLeft,obsMatrix,'world')","updateOccupancy(map,bottomLeft,obsMatrix,'local')","updateOccupancy(map,topLeft,obsMatrix,'grid')"]}],"inputgroup":[{"title":"","inputs":[{"name":"map","purpose":"Map representation","htmlid":"bvaw7up-1-map","value":["occupancyMap object"]},{"name":"occMatrix","purpose":"Matrix of occupancy values","htmlid":"mw_c2e3b5da-cd33-4f51-a4a2-39ff73812545","value":["numeric matrix","logical matrix"]},{"name":"locations","purpose":"Cell locations in world coordinates","htmlid":"mw_456ce539-6f99-40b3-a0f2-a9679708d11f","value":["n-by-2 matrix"]},{"name":"bottomLeft","purpose":"Location of bottom-left corner of observation matrix","htmlid":"mw_11ca13fe-c400-48ca-9ad5-6d4c33694b2f","value":["two-element vector"]},{"name":"topLeft","purpose":"Location of top-left corner of grid","htmlid":"mw_1f400217-f3ad-42e1-9ef6-795b1d21ab56","value":["two-element vector"]},{"name":"xy","purpose":"World or local coordinates","htmlid":"bvaw7up-1-xy","value":["n-by-2 matrix"]},{"name":"ij","purpose":"Grid positions","htmlid":"bvaw7up-1-ij","value":["n-by-2 matrix"]},{"name":"obs","purpose":"Probability observation values","htmlid":"bvaw7up-1-obs","value":["n-element numeric column vector","n-element logical column vector","numeric scalar","logical scalar"]},{"name":"obsMatrix","purpose":"Matrix of probability observation values","htmlid":"mw_c00f9856-9d75-472a-88e3-2508ded25102","value":["m-by-n numeric matrix","m-by-n logical matrix"]}]}],"examples":[{"url":"occupancymap.updateoccupancy.html#mw_9a1a9978-ed7c-44b1-967b-d7b698b5e9c7","open_command":"openExample('nav\/CreateAndModifyAnOccupancyMapExample')","title":"Create and Modify Occupancy Map"}],"seealso":[{"url":"occupancymap.html","name":"occupancyMap"},{"url":"occupancymap.setoccupancy.html","name":"setOccupancy"},{"url":"binaryoccupancymap.html","name":"binaryOccupancyMap"}]},{"href":"ref\/occupancymap.world2grid.html","refentity":[{"type":"function","name":"world2grid","fcntype":"instancemethod"},{"type":"method","name":"occupancyMap.world2grid","fcntype":"instancemethod"},{"type":"method","name":"mapLayer.world2grid","fcntype":"instancemethod"},{"type":"method","name":"multiLayerMap.world2grid","fcntype":"instancemethod"},{"type":"method","name":"signedDistanceMap.world2grid","fcntype":"instancemethod"}],"refpurpose":"Convert world coordinates to grid indices","introduced":"R2019b","description":"This MATLAB function converts world coordinates in the map to grid indices.","syntaxgroup":[{"title":"","syntax":["ijGrid = world2grid(map,xyWorld)"]}],"inputgroup":[{"title":"","inputs":[{"name":"map","purpose":"Map representation","htmlid":"mw_4798a9fb-7a3f-4498-b699-fd887e486119_sep_mw_075a816f-691c-481c-b19e-73ad891908d8","value":["occupancyMap object","mapLayer object","multiLayerMap object","signedDistanceMap object"]},{"name":"xyWorld","purpose":"World coordinates","htmlid":"mw_4798a9fb-7a3f-4498-b699-fd887e486119_sep_bvaw7vo-1-xy","value":["n-by-2 matrix"]}]}],"outputs":[{"name":"ijGrid","purpose":"Grid positions","htmlid":"mw_4798a9fb-7a3f-4498-b699-fd887e486119_sep_bvaw7vo-1-ij","value":["n-by-2 matrix"]}],"examples":[{"url":"occupancymap.world2grid.html#mw_ad1acd2f-db56-469e-8683-3bd012fcb8f4","open_command":"openExample('nav\/ConvertWorldCoordinatesInOccupancyMapToGridIndicesExample')","title":"Convert World Coordinates in Occupancy Map to Grid Indices"},{"url":"occupancymap.world2grid.html#mw_ac8592f8-95a2-4fec-84b6-8e3e3ee56fd0","open_command":"openExample('nav\/CreateAndModifyAnOccupancyMapExample')","title":"Create and Modify Occupancy Map"}],"seealso":[{"url":"multilayermap.html","name":"multiLayerMap"},{"url":"maplayer.html","name":"mapLayer"},{"url":"occupancymap.html","name":"occupancyMap"},{"url":"binaryoccupancymap.html","name":"binaryOccupancyMap"},{"url":"signeddistancemap.html","name":"signedDistanceMap"},{"url":"occupancymap.grid2world.html","name":"grid2world"},{"url":"occupancymap.world2local.html","name":"world2local"}]},{"href":"ref\/occupancymap.world2local.html","refentity":[{"type":"function","name":"world2local","fcntype":"instancemethod"},{"type":"method","name":"occupancyMap.world2local","fcntype":"instancemethod"},{"type":"method","name":"mapLayer.world2local","fcntype":"instancemethod"},{"type":"method","name":"multiLayerMap.world2local","fcntype":"instancemethod"},{"type":"method","name":"signedDistanceMap.world2local","fcntype":"instancemethod"}],"refpurpose":"Convert world coordinates to local coordinates","introduced":"R2019b","description":"This MATLAB function converts world coordinates in the map to local coordinates.","syntaxgroup":[{"title":"","syntax":["xyLocal = world2local(map,xyWorld)"]}],"inputgroup":[{"title":"","inputs":[{"name":"map","purpose":"Map representation","htmlid":"mw_41c3aa63-5f22-4775-b567-961dc16d18d1_sep_mw_075a816f-691c-481c-b19e-73ad891908d8","value":["occupancyMap object","mapLayer object","multiLayerMap object","signedDistanceMap object"]},{"name":"xyWorld","purpose":"World coordinates","htmlid":"mw_41c3aa63-5f22-4775-b567-961dc16d18d1_sep_bvaw7vo-1-xy","value":["n-by-2 matrix"]}]}],"outputs":[{"name":"xyLocal","purpose":"Local coordinates","htmlid":"mw_41c3aa63-5f22-4775-b567-961dc16d18d1_sep_buoogfm-1-xy","value":["n-by-2 matrix"]}],"examples":[{"url":"occupancymap.world2local.html#mw_ee92a8dc-47c1-4090-9fc3-4f75e40ea762","open_command":"openExample('nav\/ConvertWorldCoordinatesInOccupancyMapToLocalCoordinatesExample')","title":"Convert World Coordinates in Occupancy Map to Local Coordinates"}],"seealso":[{"url":"multilayermap.html","name":"multiLayerMap"},{"url":"maplayer.html","name":"mapLayer"},{"url":"occupancymap.html","name":"occupancyMap"},{"url":"binaryoccupancymap.html","name":"binaryOccupancyMap"},{"url":"signeddistancemap.html","name":"signedDistanceMap"},{"url":"binaryoccupancymap.grid2world.html","name":"grid2world"},{"url":"occupancymap.local2world.html","name":"local2world"}]},{"href":"ref\/occupancymap3d.checkoccupancy.html","refentity":[{"type":"function","name":"checkOccupancy","fcntype":"instancemethod"},{"type":"method","name":"occupancyMap3D.checkOccupancy","fcntype":"instancemethod"}],"refpurpose":"Check if locations are free or occupied","introduced":"R2019b","description":"This MATLAB function returns an array of occupancy values specified at the xyz locations using the OccupiedThreshold and FreeThreshold properties of the input occupancyMap3D object.","syntaxgroup":[{"title":"","syntax":["iOccval = checkOccupancy(map3D,xyz)"]}],"inputgroup":[{"title":"","inputs":[{"name":"map3D","purpose":"3-D occupancy map","htmlid":"d126e159023","value":["occupancyMap3D object"]}]},{"title":"","inputs":[{"name":"xyz","purpose":"World coordinates","htmlid":"d126e159048","value":["n-by-3 matrix"]}]}],"outputs":[{"name":"iOccval","purpose":"Interpreted occupancy values","htmlid":"d126e159078","value":["column vector"]}],"examples":[{"url":"occupancymap3d.checkoccupancy.html#mw_ceeee7f8-815d-4131-8618-22e75ecf8fe9","open_command":"openExample('nav\/CheckOccupancyStatusGetOccupancyValuesIn3DOccupancyMapExample')","title":"Check Occupancy Status and Get Occupancy Values in 3-D Occupancy Map"}],"seealso":[{"url":"occupancymap3d.html","name":"occupancyMap3D"},{"url":"lidarslam.html","name":"lidarSLAM"},{"url":"occupancymap.html","name":"occupancyMap"},{"url":"occupancymap3d.insertpointcloud.html","name":"insertPointCloud"},{"url":"occupancymap3d.inflate.html","name":"inflate"},{"url":"occupancymap3d.setoccupancy.html","name":"setOccupancy"},{"url":"occupancymap3d.show.html","name":"show"}]},{"href":"ref\/occupancymap3d.getoccupancy.html","refentity":[{"type":"function","name":"getOccupancy","fcntype":"instancemethod"},{"type":"method","name":"occupancyMap3D.getOccupancy","fcntype":"instancemethod"}],"refpurpose":"Get occupancy probability of locations","introduced":"R2019b","description":"This MATLAB function returns an array of probability occupancy values at the specified xyz locations in the occupancyMap3D object.","syntaxgroup":[{"title":"","syntax":["occval = getOccupancy(map3D,xyz)"]}],"inputgroup":[{"title":"","inputs":[{"name":"map3D","purpose":"3-D occupancy map","htmlid":"d126e159247","value":["occupancyMap3D object"]},{"name":"xyz","purpose":"World coordinates","htmlid":"d126e159270","value":["n-by-3 matrix"]}]}],"outputs":[{"name":"occval","purpose":"Probability occupancy values","htmlid":"d126e159300","value":["column vector"]}],"examples":[{"url":"occupancymap3d.getoccupancy.html#mw_dfa8f15d-712c-4524-96a4-f9f76ac74d18","open_command":"openExample('nav\/CheckOccupancyStatusGetOccupancyValuesIn3DOccupancyMapExample')","title":"Check Occupancy Status and Get Occupancy Values in 3-D Occupancy Map"}],"seealso":[{"url":"occupancymap3d.html","name":"occupancyMap3D"},{"url":"lidarslam.html","name":"lidarSLAM"},{"url":"occupancymap.html","name":"occupancyMap"},{"url":"occupancymap3d.insertpointcloud.html","name":"insertPointCloud"},{"url":"occupancymap3d.inflate.html","name":"inflate"},{"url":"occupancymap3d.setoccupancy.html","name":"setOccupancy"},{"url":"occupancymap3d.show.html","name":"show"}]},{"href":"ref\/occupancymap3d.inflate.html","refentity":[{"type":"function","name":"inflate","fcntype":"instancemethod"},{"type":"method","name":"occupancyMap3D.inflate","fcntype":"instancemethod"}],"refpurpose":"Inflate each occupied location","introduced":"R2019b","description":"This MATLAB function inflates each occupied position of the specified occupancyMap3D object by the radius specified in meters.","syntaxgroup":[{"title":"","syntax":["inflate(map3D,radius)"]}],"inputgroup":[{"title":"","inputs":[{"name":"map3D","purpose":"3-D occupancy map","htmlid":"d126e159463","value":["occupancyMap3D object"]},{"name":"radius","purpose":"Amount to inflate occupied locations","htmlid":"d126e159486","value":["scalar"]}]}],"examples":[{"url":"occupancymap3d.inflate.html#mw_a9193ced-eace-43d0-900a-a829e0f27439","open_command":"openExample('nav\/GetRayIntersectionPointsOn3DOccupancyMapExample')","title":"Get Ray Intersection Points on 3-D Occupancy Map"}],"seealso":[{"url":"occupancymap3d.html","name":"occupancyMap3D"},{"url":"lidarslam.html","name":"lidarSLAM"},{"url":"occupancymap.html","name":"occupancyMap"},{"url":"occupancymap3d.insertpointcloud.html","name":"insertPointCloud"},{"url":"occupancymap3d.setoccupancy.html","name":"setOccupancy"},{"url":"occupancymap3d.show.html","name":"show"}]},{"href":"ref\/occupancymap3d.insertpointcloud.html","refentity":[{"type":"function","name":"insertPointCloud","fcntype":"instancemethod"},{"type":"method","name":"occupancyMap3D.insertPointCloud","fcntype":"instancemethod"}],"refpurpose":"Insert 3-D points or point cloud observation into map","introduced":"R2019b","description":"This MATLAB function inserts one or more sensor observations at the given points in the occupancy map, map3D.","syntaxgroup":[{"title":"","syntax":["insertPointCloud(map3D,pose,points,maxrange)","insertPointCloud(map3D,pose,ptcloud,maxrange)","insertPointCloud(___,invModel)"]}],"inputgroup":[{"title":"","inputs":[{"name":"map3D","purpose":"3-D occupancy map","htmlid":"d126e159704","value":["occupancyMap3D object"]},{"name":"points","purpose":"Points of point cloud","htmlid":"d126e159727","value":["n-by-3 matrix"]}]},{"title":"","inputs":[{"name":"ptcloud","purpose":"Point cloud reading","htmlid":"d126e159755","value":["pointCloud object"]}]},{"title":"","inputs":[{"name":"pose","purpose":"Position and orientation of vehicle","htmlid":"d126e159788","value":["[x y z qw qx qy qz] vector"]},{"name":"maxrange","purpose":"Maximum range of sensor","htmlid":"d126e159814","value":["scalar"]},{"name":"invModel","purpose":"Inverse sensor model values","htmlid":"mw_0c497ad8-4a01-4544-88d0-dad6fbc0e9ae","value":["two-element vector"]}]}],"examples":[{"url":"occupancymap3d.insertpointcloud.html#mw_fb04069f-912f-4640-83dd-ec36670d4a72","open_command":"openExample('nav\/Create3DOccupancyMapAndInflatePointsExample')","title":"Create 3-D Occupancy Map and Inflate Points"}],"seealso":[{"url":"occupancymap3d.html","name":"occupancyMap3D"},{"url":"lidarslam.html","name":"lidarSLAM"},{"url":"occupancymap.html","name":"occupancyMap"},{"url":"occupancymap3d.inflate.html","name":"inflate"},{"url":"occupancymap3d.setoccupancy.html","name":"setOccupancy"},{"url":"occupancymap3d.show.html","name":"show"}]},{"href":"ref\/occupancymap3d.html","refentity":[{"type":"object","name":"occupancyMap3D"},{"type":"function","name":"occupancyMap3D","fcntype":"constructor"}],"refpurpose":"Create 3-D occupancy map","introduced":"R2019b","description":"The occupancyMap3D object stores a 3-D map and map information.","syntaxgroup":[{"title":"","syntax":["omap = occupancyMap3D","omap = occupancyMap3D(res)","omap = occupancyMap3D(res,Name,Value)"]}],"classpropertygroup":[{"classproperty":[{"name":"Resolution","purpose":"Grid resolution","htmlid":"mw_e2aab6d2-9d5a-4cf6-ab19-4607591af443","value":["1","positive scalar"],"defaultvalue":"1"},{"name":"FreeThreshold","purpose":"Threshold to consider cells as obstacle-free","htmlid":"mw_8f655a20-1e53-434d-9f0e-29bac8210529","value":["0.2","positive scalar"],"defaultvalue":"0.2"},{"name":"OccupiedThreshold","purpose":"Threshold to consider cells as occupied","htmlid":"mw_a86e2d33-c929-4389-b9d1-c7acd3679e0e","value":["0.65","positive scalar"],"defaultvalue":"0.65"},{"name":"ProbabilitySaturation","purpose":"Saturation limits on probability values","htmlid":"mw_eb1027ba-6d1b-47a9-850f-fa0b0141a158","value":["[0.001 0.999]","[min max] vector"],"defaultvalue":"[0.001 0.999]"}]}],"objectfunctions":[{"title":"","functions":[{"name":"checkOccupancy","url":"occupancymap3d.checkoccupancy.html","description":"Check if locations are free or occupied"},{"name":"getOccupancy","url":"occupancymap3d.getoccupancy.html","description":"Get occupancy probability of locations"},{"name":"inflate","url":"occupancymap3d.inflate.html","description":"Inflate each occupied location"},{"name":"insertPointCloud","url":"occupancymap3d.insertpointcloud.html","description":"Insert 3-D points or point cloud observation into map"},{"name":"rayIntersection","url":"occupancymap3d.rayintersection.html","description":"Find intersection points of rays and occupied map cells"},{"name":"setOccupancy","url":"occupancymap3d.setoccupancy.html","description":"Set occupancy probability of locations"},{"name":"show","url":"occupancymap3d.show.html","description":"Display 3-D occupancy map"},{"name":"updateOccupancy","url":"occupancymap3d.updateoccupancy.html","description":"Update occupancy probability at locations"}]}],"examples":[{"url":"occupancymap3d.html#mw_4dfad60b-62fd-4d0b-b5c7-95342fd28a8d","open_command":"openExample('nav\/Create3DOccupancyMapAndInflatePointsExample')","title":"Create 3-D Occupancy Map and Inflate Points"}],"seealso":[{"url":"occupancymap.html","name":"occupancyMap"},{"url":"occupancymap3dcollisionoptions.html","name":"occupancyMap3DCollisionOptions"},{"url":"binaryoccupancymap.html","name":"binaryOccupancyMap"},{"url":"checkmapcollision.html","name":"checkMapCollision"},{"url":"occupancymap3d.insertpointcloud.html","name":"insertPointCloud"},{"url":"occupancymap3d.inflate.html","name":"inflate"},{"url":"occupancymap3d.setoccupancy.html","name":"setOccupancy"},{"url":"occupancymap3d.show.html","name":"show"},{"url":"..\/..\/ros\/ref\/rosreadoccupancymap3d.html","name":"rosReadOccupancyMap3D"}]},{"href":"ref\/occupancymap3d.rayintersection.html","refentity":[{"type":"function","name":"rayIntersection","fcntype":"instancemethod"},{"type":"method","name":"occupancyMap3D.rayIntersection","fcntype":"instancemethod"}],"refpurpose":"Find intersection points of rays and occupied map cells","introduced":"R2020a","description":"This MATLAB function returns the points at which rays, originating from a sensor pose and extending in specified directions, intersect with occupied map cells within the 3D occupancy map, and also determines the occupancy status of the cells at those intersection points.","syntaxgroup":[{"title":"","syntax":["[intersectionPts,isOccupied] = rayIntersection(map3D,sensorPose,directions)","[intersectionPts,isOccupied] = rayIntersection(___,maxrange,ignoreUnknown)"]}],"inputgroup":[{"title":"","inputs":[{"name":"map3D","purpose":"3-D occupancy map","htmlid":"mw_767ead42-4140-4b46-9f78-105619333a3e","value":["occupancyMap3D object"]},{"name":"sensorPose","purpose":"Position and orientation of sensor","htmlid":"mw_90512830-21c0-4bd9-a5cf-4d6fb9d44edf","value":["[x y z qw qx qy qz] vector"]},{"name":"directions","purpose":"Orientation of rays emanating from sensor","htmlid":"mw_101c6d90-dc46-4002-a301-f85d34f5b82f","value":["n-by-3 [dx dy dz] matrix","n-by-2 [az el] matrix"]},{"name":"maxrange","purpose":"Maximum range of sensor","htmlid":"mw_c5b2edb4-91c8-436d-8c15-477b2dac1661","value":["scalar"]},{"name":"ignoreUnknown","purpose":"Interpret unknown values as free or occupied","htmlid":"mw_c550609b-bf61-4f54-bc65-fefe6ba8137a","value":["1","0"],"defaultvalue":"1"}]}],"outputs":[{"name":"intersectionPts","purpose":"Intersection points","htmlid":"mw_e68a936a-6c35-441e-84c0-302a44d769a7","value":["n-by-3 matrix"]},{"name":"isOccupied","purpose":"Occupancy status of ray end points","htmlid":"mw_561356de-1b9b-4062-b96c-1573d9479df8","value":["vector of zeros and ones"]}],"examples":[{"url":"occupancymap3d.rayintersection.html#mw_39a3fc2a-0867-4c4e-b073-76ead0db8683","open_command":"openExample('nav\/GetRayIntersectionPointsOn3DOccupancyMapExample')","title":"Get Ray Intersection Points on 3-D Occupancy Map"}],"seealso":[{"url":"occupancymap3d.html","name":"occupancyMap3D"},{"url":"lidarslam.html","name":"lidarSLAM"},{"url":"occupancymap.html","name":"occupancyMap"},{"url":"occupancymap3d.insertpointcloud.html","name":"insertPointCloud"},{"url":"occupancymap3d.inflate.html","name":"inflate"},{"url":"occupancymap3d.setoccupancy.html","name":"setOccupancy"},{"url":"occupancymap3d.show.html","name":"show"}]},{"href":"ref\/occupancymap3d.setoccupancy.html","refentity":[{"type":"function","name":"setOccupancy","fcntype":"instancemethod"},{"type":"method","name":"occupancyMap3D.setOccupancy","fcntype":"instancemethod"}],"refpurpose":"Set occupancy probability of locations","introduced":"R2019b","description":"This MATLAB function assigns the occupancy values to each specified xyz coordinate in the 3-D occupancy map.","syntaxgroup":[{"title":"","syntax":["setOccupancy(map3D,xyz,occval)"]}],"inputgroup":[{"title":"","inputs":[{"name":"map3D","purpose":"3-D occupancy map","htmlid":"d126e160402","value":["occupancyMap3D object"]},{"name":"xyz","purpose":"World coordinates","htmlid":"d126e160425","value":["n-by-3 matrix"]},{"name":"occval","purpose":"Probability occupancy values","htmlid":"d126e160451","value":["scalar","column vector"]}]}],"examples":[{"url":"occupancymap3d.setoccupancy.html#mw_3de4363b-b1c7-4813-8ee9-297107a34c68","open_command":"openExample('nav\/CreateAndExport3DOccupancyMapExample')","title":"Create and Export 3-D Occupancy Map"}],"seealso":[{"url":"occupancymap3d.html","name":"occupancyMap3D"},{"url":"lidarslam.html","name":"lidarSLAM"},{"url":"occupancymap.html","name":"occupancyMap"},{"url":"occupancymap3d.insertpointcloud.html","name":"insertPointCloud"},{"url":"occupancymap3d.inflate.html","name":"inflate"},{"url":"occupancymap3d.show.html","name":"show"}]},{"href":"ref\/occupancymap3d.show.html","refentity":[{"type":"function","name":"show","fcntype":"instancemethod"},{"type":"method","name":"occupancyMap3D.show","fcntype":"instancemethod"}],"refpurpose":"Display 3-D occupancy map","introduced":"R2019b","description":"This MATLAB function displays the occupancy map, map3D, in the current axes, with the axes labels representing the world coordinates.","syntaxgroup":[{"title":"","syntax":["axes = show(map3D)","show(map3D,Name=Value)"]}],"inputgroup":[{"title":"","inputs":[{"name":"map3D","purpose":"3-D occupancy map","htmlid":"d126e160690","value":["occupancyMap3D object"]}]},{"namevaluepairs":[{"title":"","inputs":[{"name":"Parent","purpose":"Axes used to plot the map","htmlid":"mw_96bf3892-79d9-43e5-aedb-60334f24ebb0","value":["Axes object","UIAxes object"]},{"name":"SearchDepth","purpose":"Voxel search depth","htmlid":"mw_2f1b0b00-983e-4d48-a607-68163a2aec5c","value":["16","integer in the range [0,16]"],"defaultvalue":"16"}]}]}],"outputs":[{"name":"axes","purpose":"Axes handle for map","htmlid":"d126e160808","value":["Axes object","UIAxes object"]}],"examples":[{"url":"occupancymap3d.show.html#mw_a580d37d-058a-4e27-b5ed-07fe6208704c","open_command":"openExample('nav\/GetRayIntersectionPointsOn3DOccupancyMapExample')","title":"Get Ray Intersection Points on 3-D Occupancy Map"},{"url":"occupancymap3d.show.html#mw_31fcb33a-31b4-4f4a-8496-d2c20d3ec62f","open_command":"openExample('nav\/Visualize3DOccupancyMapsWithVaryingSearchDepthsExample')","title":"Visualize 3-D Occupancy Maps with Varying Search Depths"}],"seealso":[{"url":"occupancymap3d.html","name":"occupancyMap3D"},{"url":"lidarslam.html","name":"lidarSLAM"},{"url":"occupancymap.html","name":"occupancyMap"},{"url":"occupancymap3d.insertpointcloud.html","name":"insertPointCloud"},{"url":"occupancymap3d.setoccupancy.html","name":"setOccupancy"}]},{"href":"ref\/occupancymap3d.updateoccupancy.html","refentity":[{"type":"function","name":"updateOccupancy","fcntype":"instancemethod"},{"type":"method","name":"occupancyMap3D.updateOccupancy","fcntype":"instancemethod"}],"refpurpose":"Update occupancy probability at locations","introduced":"R2019b","description":"This MATLAB function probabilistically integrates the observation values, obs, to each specified xyz coordinate in the occupancyMap3D object, map3D.","syntaxgroup":[{"title":"","syntax":["updateOccupancy(map3D,xyz,obs)"]}],"inputgroup":[{"title":"","inputs":[{"name":"map3D","purpose":"3-D occupancy map","htmlid":"d126e160966","value":["occupancyMap3D object"]},{"name":"xyz","purpose":"World coordinates","htmlid":"d126e160989","value":["n-by-3 matrix"]},{"name":"obs","purpose":"Probability observation values","htmlid":"d126e161015","value":["numeric scalar","logical scalar","n-by-1 column vector"]}]}],"examples":[{"url":"occupancymap3d.updateoccupancy.html#mw_a17fdcc3-d022-4755-ba27-713c096ac626","open_command":"openExample('nav\/CreateAndExport3DOccupancyMapExample')","title":"Create and Export 3-D Occupancy Map"}],"seealso":[{"url":"occupancymap3d.html","name":"occupancyMap3D"},{"url":"lidarslam.html","name":"lidarSLAM"},{"url":"occupancymap.html","name":"occupancyMap"},{"url":"occupancymap3d.insertpointcloud.html","name":"insertPointCloud"},{"url":"occupancymap3d.inflate.html","name":"inflate"},{"url":"occupancymap3d.setoccupancy.html","name":"setOccupancy"},{"url":"occupancymap3d.show.html","name":"show"}]},{"href":"ref\/occupancymap3dcollisionoptions.html","refentity":[{"type":"object","name":"occupancyMap3DCollisionOptions"},{"type":"object","name":"OccupancyMap3DCollisionOptions"},{"type":"function","name":"occupancyMap3DCollisionOptions","fcntype":"constructor"}],"refpurpose":"Collision-checking options between 3-D occupancy map and collision geometries","introduced":"R2022b","description":"The occupancyMap3DCollisionOptions object contains options for checking for collisions using the checkMapCollision function, between occupied cells of an occupancyMap3D object and collision geometry objects.","syntaxgroup":[{"title":"","syntax":["OPTS = occupancyMap3DCollisionOptions","OPTS = occupancyMap3DCollisionOptions(Name=Value)"]}],"classpropertygroup":[{"classproperty":[{"name":"CheckBroadPhase","purpose":"Check collisions between AABBs of voxels and geometries","htmlid":"mw_1e6a9124-ca31-4516-a77d-5b6df6b47c55","value":["true or 1","false or 0"],"defaultvalue":"true or 1"},{"name":"CheckNarrowPhase","purpose":"Check collisions between voxels and raw input geometries","htmlid":"mw_02c5d6e8-7574-44d4-98b1-f26907505c60","value":["true or 1","false or 1"],"defaultvalue":"true or 1"},{"name":"Exhaustive","purpose":"Exhaustive search mode","htmlid":"mw_c54aa1d6-6f88-4ec1-b585-7a52e088544e","value":["false or 0","true or 1"],"defaultvalue":"false or 0"},{"name":"ReturnDistance","purpose":"Return closest point and distance","htmlid":"mw_9f578e81-8cb5-44c9-b322-00a3b26f9e0b","value":["false or 0","true or 1"],"defaultvalue":"false or 0"},{"name":"ReturnVoxels","purpose":"Return location and size of voxels in collision","htmlid":"mw_65f35819-5613-4863-8ad0-09bbee172ad6","value":["false or 0","true or 1"],"defaultvalue":"false or 0"},{"name":"SearchDepth","purpose":"Maximum search depth to check","htmlid":"mw_00e6fdc0-c4d9-4abc-b6e0-3ef0ea7d81b5","value":["16","integer in range [0, 16]"],"defaultvalue":"16"}]}],"examples":[{"url":"occupancymap3dcollisionoptions.html#mw_28765cae-5b3d-48c9-ad91-9d62c94b26c0","open_command":"openExample('nav\/CheckCollisionBetween3DMapAndCollisionGeometriesExample')","title":"Check Collision Between 3-D Map and Collision Geometries"}],"seealso":[{"url":"checkmapcollision.html","name":"checkMapCollision"},{"url":"occupancymap3d.html","name":"occupancyMap3D"}]},{"href":"ref\/odometrymotionmodel.html","refentity":[{"type":"object","name":"odometryMotionModel"},{"type":"function","name":"odometryMotionModel","fcntype":"constructor"}],"refpurpose":"Create an odometry motion model","introduced":"R2019b","description":"odometryMotionModel creates an odometry motion model object for differential drive vehicles.","syntaxgroup":[{"title":"","syntax":["omm = odometryMotionModel"]}],"classpropertygroup":[{"classproperty":[{"name":"Noise","purpose":"Gaussian noise for vehicle motion","htmlid":"bu359h6-1-Noise","value":["[0.2 0.2 0.2 0.2]","4-element vector"],"defaultvalue":"[0.2 0.2 0.2 0.2]"},{"name":"Type","readonly":true,"purpose":"Type of the odometry motion model","htmlid":"bu359h6-1-Type","value":["'DifferentialDrive'"],"defaultvalue":"'DifferentialDrive'"}]}],"objectfunctions":[{"title":"","functions":[{"name":"showNoiseDistribution","url":"odometrymotionmodel.shownoisedistribution.html","description":"Display noise parameter effects"}]}],"examples":[{"url":"odometrymotionmodel.html#bvdwjsy","open_command":"openExample('nav\/PredictPosesBasedOnAnOdometryMotionModelExample')","title":"Predict Poses Based on an Odometry Motion Model"},{"url":"odometrymotionmodel.html#bvdwjs3","open_command":"openExample('nav\/ShowNoiseDistributionEffectsForOdometryMotionModelExample')","title":"Show Noise Distribution Effects for Odometry Motion Model"}],"seealso":[{"url":"montecarlolocalization-system-object.html","name":"monteCarloLocalization"},{"url":"likelihoodfieldsensormodel.html","name":"likelihoodFieldSensorModel"}]},{"href":"ref\/odometrymotionmodel.shownoisedistribution.html","refentity":[{"type":"function","name":"showNoiseDistribution","fcntype":"instancemethod"},{"type":"method","name":"odometryMotionModel.showNoiseDistribution","fcntype":"instancemethod"}],"refpurpose":"Display noise parameter effects","introduced":"R2019b","description":"This MATLAB function shows the noise distribution for a default odometry pose update, number of samples and the current noise parameters on the input object.","syntaxgroup":[{"title":"","syntax":["showNoiseDistribution(ommObj)","showNoiseDistribution(ommObj)","showNoiseDistribution(ommObj,Name,Value)"]}],"inputgroup":[{"title":"","inputs":[{"name":"ommObj","purpose":"odometryMotionModel object","htmlid":"bvb2tez-1-ommObj","value":["handle"]}]},{"namevaluepairs":[{"title":"","inputs":[{"name":"OdometryPoseChange","purpose":"Change in odometry","htmlid":"bvb2tez-1-OdometryPoseChange","value":["three-element vector"]},{"name":"NumSamples","purpose":"Number of particles to display","htmlid":"bvb2tez-1-NumSamples","value":["scalar"]},{"name":"Parent","purpose":"Axes to plot the map","htmlid":"bvb2tez-1-Parent","value":["Axes object","UIAxes object"]}]}]}],"examples":[{"url":"odometrymotionmodel.shownoisedistribution.html#bvdvdqd","open_command":"openExample('nav\/ShowNoiseDistributionEffectsForOdometryMotionModelExample')","title":"Show Noise Distribution Effects for Odometry Motion Model"}],"seealso":[{"url":"montecarlolocalization-system-object.html","name":"monteCarloLocalization"},{"url":"odometrymotionmodel.html","name":"odometryMotionModel"},{"url":"likelihoodfieldsensormodel.html","name":"likelihoodFieldSensorModel"}]},{"href":"ref\/optimizepath.html","refentity":[{"type":"function","name":"optimizePath","fcntype":"simple"}],"refpurpose":"Optimize path while maintaining safe distance from obstacle","introduced":"R2022a","description":"This MATLAB function optimizes the travel time and smoothness of the specified path for car-like robots in an empty map for the default parameters.","syntaxgroup":[{"title":"","syntax":["optPath = optimizePath(path)","optPath = optimizePath(path,map)","optPath = optimizePath(path,options)","optPath = optimizePath(path,map,options)","[optPath,kineticInfo] = optimizePath(___)","[optPath,kineticInfo,solutionInfo] = optimizePath(___)"]}],"inputgroup":[{"title":"","inputs":[{"name":"path","purpose":"Path states","htmlid":"mw_6216b16a-5769-4d17-8dab-0a43b24f88f0","value":["real-valued M-by-2 matrix of the form [x y]","real-valued M-by-3 matrix of the form [x y theta]"]},{"name":"map","purpose":"Map representation","htmlid":"mw_14883515-ebb9-4277-92c2-70a1731b0962","value":["binaryOccupancyMap object","occupancyMap object","vehicleCostMap object"]},{"name":"options","purpose":"Optimization options","htmlid":"mw_3c6481d1-d69c-4a89-84a9-2384de4f3d38","value":["optimizePathOptions object"]}]}],"outputs":[{"name":"optPath","purpose":"Optimized path","htmlid":"mw_36d96acc-8881-49b8-a3e2-9ac7d4d77f3b","value":["real-valued N-by-2 matrix of the form [x y]","real-valued N-by-3 matrix of the form [x y theta]"]},{"name":"kineticInfo","purpose":"Kinetic Information","htmlid":"mw_d8b653c0-25d2-44c6-885c-6cf2ceb3bdb4","value":["structure"]},{"name":"solutionInfo","purpose":"Solution Information","htmlid":"mw_ae59053a-7e94-4a30-8e0e-5269fcc597fe","value":["structure"]}],"examples":[{"url":"optimizepath.html#mw_398a2272-c25a-4564-9a66-e67ab408e73e","open_command":"openExample('nav\/OptimizePlannedPathExample')","title":"Optimize Planned Path"}],"seealso":[{"url":"optimizepathoptions.html","name":"optimizePathOptions"}]},{"href":"ref\/optimizepathoptions.html","refentity":[{"type":"object","name":"optimizePathOptions"},{"type":"function","name":"optimizePathOptions","fcntype":"constructor"}],"refpurpose":"Create optimization options for optimizePath function","introduced":"R2022a","description":"Optimization options are grouped into four categories:","syntaxgroup":[{"title":"","syntax":["options = optimizePathOptions"]}],"classpropertygroup":[{"title":"Trajectory Parameters","classproperty":[{"name":"MaxPathStates","purpose":"Maximum number of poses allowed in path","htmlid":"mw_9d32b87c-a1ec-47db-abd9-d683d28adcfc","value":["200","integer greater than or equal to 3"],"defaultvalue":"200"},{"name":"ReferenceDeltaTime","purpose":"Travel time between two consecutive poses","htmlid":"mw_307c5779-bd8a-4c20-acfb-2e793f03d11f","value":["0.3","positive scalar"],"defaultvalue":"0.3"},{"name":"MinTurningRadius","purpose":"Minimum turning radius in path","htmlid":"mw_481fcbe0-6376-4bec-b474-22ffd3575a18","value":["1","positive scalar"],"defaultvalue":"1"},{"name":"MaxVelocity","purpose":"Maximum velocity along path","htmlid":"mw_ad207234-c6d1-4a84-932d-a419bc542837","value":["0.4","positive scalar"],"defaultvalue":"0.4"},{"name":"MaxAngularVelocity","purpose":"Maximum angular velocity along path","htmlid":"mw_86d87748-e47b-4bf7-8080-7cded1a577fd","value":["0.3","positive scalar"],"defaultvalue":"0.3"},{"name":"MaxAcceleration","purpose":"Maximum acceleration along path","htmlid":"mw_d01c135a-cdd8-4f7d-b5d1-7a1f403dbcb6","value":["0.5","positive scalar"],"defaultvalue":"0.5"},{"name":"MaxAngularAcceleration","purpose":"Maximum angular acceleration along path","htmlid":"mw_1f777fc8-c37a-4e93-80dd-a26739770902","value":["0.5","positive scalar"],"defaultvalue":"0.5"}]},{"title":"Obstacle Parameters","classproperty":[{"name":"ObstacleSafetyMargin","purpose":"Safety distance from obstacles","htmlid":"mw_0a0e8359-8687-4c19-811a-b60cb7cd7fbd","value":["0.5","positive scalar"],"defaultvalue":"0.5"},{"name":"ObstacleCutOffDistance","purpose":"Obstacle cutoff distance","htmlid":"mw_706e0b2b-c94a-46c2-8302-32f48af13587","value":["2.5","positive scalar"],"defaultvalue":"2.5"},{"name":"ObstacleInclusionDistance","purpose":"Obstacle inclusion distance","htmlid":"mw_656f429d-833e-475a-8b99-8a15e44ee220","value":["0.75","positive scalar"],"defaultvalue":"0.75"}]},{"title":"Solver Parameters","classproperty":[{"name":"NumIteration","purpose":"Number of solver invocations","htmlid":"mw_ecf395b7-adac-460c-b001-2aba3e9cdc21","value":["4","positive integer"],"defaultvalue":"4"},{"name":"MaxSolverIteration","purpose":"Maximum number of iterations for each solver invocation","htmlid":"mw_1889000d-7ee8-4556-ad67-516948c21669","value":["15","positive integer"],"defaultvalue":"15"}]},{"title":"Weights","classproperty":[{"name":"WeightTime","purpose":"Cost function weight for time","htmlid":"mw_b929d4eb-dbc1-41a0-8e55-99cf9d116700","value":["10","nonnegative scalar"],"defaultvalue":"10"},{"name":"WeightSmoothness","purpose":"Cost function weight for nonholonomic motion","htmlid":"mw_68035c09-7901-44d9-bfbb-7f9082c4d451","value":["1000","nonnegative scalar"],"defaultvalue":"1000"},{"name":"WeightMinTurningRadius","purpose":"Cost function weight for complying with minimum turning radius","htmlid":"mw_e7954cb2-cfdb-489f-8eb9-f9cf4656822b","value":["10","nonnegative scalar"],"defaultvalue":"10"},{"name":"WeightVelocity","purpose":"Cost function weight for velocity","htmlid":"mw_8fb28009-79f5-4756-8845-b34d5372da3a","value":["100","nonnegative scalar"],"defaultvalue":"100"},{"name":"WeightAngularVelocity","purpose":"Cost function weight for angular velocity","htmlid":"mw_79fb7570-23ed-4aae-a4df-16896f556986","value":["10","nonnegative scalar"],"defaultvalue":"10"},{"name":"WeightAcceleration","purpose":"Cost function weight for acceleration","htmlid":"mw_c5ca19f8-1610-407e-baac-2d05aa9c0bc4","value":["10","nonnegative scalar"],"defaultvalue":"10"},{"name":"WeightAngularAcceleration","purpose":"Cost function weight for angular acceleration","htmlid":"mw_f175a786-0180-4a8d-980f-cfc6fe1740e6","value":["10","nonnegative scalar"],"defaultvalue":"10"},{"name":"WeightObstacles","purpose":"Cost function weight for maintaining safe distance from obstacles","htmlid":"mw_60efdae0-07b8-4443-8ec1-c5419a55f507","value":["50","nonnegative scalar"],"defaultvalue":"50"}]}],"examples":[{"url":"optimizepathoptions.html#mw_0ab12aa5-ccf4-43a6-b037-c3c5567ab1cb","open_command":"openExample('nav\/OptimizePlannedPathExample')","title":"Optimize Planned Path"}],"seealso":[{"url":"optimizepath.html","name":"optimizePath"}]},{"href":"ref\/optimizeposegraph.html","refentity":[{"type":"function","name":"optimizePoseGraph","fcntype":"simple"}],"refpurpose":"Optimize nodes in pose graph","introduced":"R2019b","description":"This MATLAB function adjusts the poses based on their edge constraints defined in the specified graph to improve the overall graph.","syntaxgroup":[{"title":"","syntax":["updatedGraph = optimizePoseGraph(poseGraph)","updatedGraph = optimizePoseGraph(poseGraph,solver)","[updatedGraph,solutionInfo] = optimizePoseGraph(___)","[___] = optimizePoseGraph(___,Name,Value)"]}],"inputgroup":[{"title":"","inputs":[{"name":"poseGraph","purpose":"2-D or 3-D pose graph","htmlid":"d126e19447","value":["poseGraph object","poseGraph3D object","digraph object"]},{"name":"solver","purpose":"Pose graph solver","htmlid":"mw_0ccf6dff-1585-4060-9d96-357412e91048","value":["\"builtin-trust-region\"","\"g2o-levenberg-marquardt\""],"defaultvalue":"\"builtin-trust-region\""}]},{"namevaluepairs":[{"title":"If the solver input is set to \"builtin-trust-region\":","inputs":[{"name":"MaxTime","purpose":"Maximum time allowed","htmlid":"mw_ab23fcd7-0054-4a3f-a346-627bfd7174af","value":["500","positive numeric scalar"],"defaultvalue":"500"},{"name":"GradientTolerance","purpose":"Lower bound on norm of gradient","htmlid":"mw_f20ad52e-c991-4f22-a8e4-0d5cdbf556df","value":["0.5e-8","scalar"],"defaultvalue":"0.5e-8"},{"name":"FunctionTolerance","purpose":"Lower bound on change in cost function","htmlid":"mw_2d442abf-0934-4fef-ae06-20ef0b663dbe","value":["1e-8","scalar"],"defaultvalue":"1e-8"},{"name":"StepTolerance","purpose":"Lower bound on step size","htmlid":"mw_76feea5f-8220-4f59-829d-ab33d2627cfe","value":["1e-12","scalar"],"defaultvalue":"1e-12"},{"name":"InitialTrustRegionRadius","purpose":"Initial trust region radius","htmlid":"mw_1680a7f6-c351-4123-bd3f-9d3b1164dc7e","value":["100","scalar"],"defaultvalue":"100"},{"name":"VerboseOutput","purpose":"Display intermediate iteration information","htmlid":"mw_0b53b1b1-6407-4fe0-8bcc-efb1004693ff","value":["'off'","'on'"],"defaultvalue":"'off'"},{"name":"LoopClosuresToIgnore","purpose":"IDs of loop closure edges in pose graph","htmlid":"mw_966fe626-042b-455a-af3e-ebaebf24c2f7","value":["vector"]},{"name":"FirstNodePose","purpose":"Pose of first node","htmlid":"mw_5059c79c-b84d-4e42-aa19-fc581b5373b0","value":["[0 0 0] or [0 0 0 1 0 0 0]","[x y theta]","[x y z qw qx qy qz]"],"defaultvalue":"[0 0 0] or [0 0 0 1 0 0 0]"}]},{"title":"If the solver input is set to \"g2o-levenberg-marquardt\":","inputs":[{"name":"MaxIterations","purpose":"Maximum number of iterations","htmlid":"mw_095cc1d6-ac08-4109-8a42-6a9e24c3d608","value":["300","positive integer"],"defaultvalue":"300"},{"name":"MaxTime","purpose":"Maximum time allowed","htmlid":"mw_92959cb0-18e9-4384-84a8-9ca33fd49e95","value":["500","positive numeric scalar"],"defaultvalue":"500"},{"name":"FunctionTolerance","purpose":"Lower bound on change in cost function","htmlid":"mw_58d24df1-1155-448b-bf42-b27e5aaeca8c","value":["1e-8","scalar"],"defaultvalue":"1e-8"},{"name":"VerboseOutput","purpose":"Display intermediate iteration information","htmlid":"mw_f4d3e889-b1a6-4b59-9d15-380f467cab43","value":["'off'","'on'"],"defaultvalue":"'off'"},{"name":"LoopClosuresToIgnore","purpose":"IDs of loop closure edges in pose graph","htmlid":"mw_1aef6bb2-24c9-452e-a9d6-3e3f8381bd55","value":["vector"]},{"name":"FirstNodePose","purpose":"Pose of first node","htmlid":"mw_1ce6fedc-9b6d-48e4-9564-cd33f86e34e1","value":["[0 0 0] or [0 0 0 1 0 0 0]","[x y theta]","[x y z qw qx qy qz]"],"defaultvalue":"[0 0 0] or [0 0 0 1 0 0 0]"}]}]}],"outputs":[{"name":"updatedGraph","purpose":"Optimized 2-D or 3-D pose graph","htmlid":"d126e20018","value":["poseGraph object","poseGraph3D object"]},{"name":"solutionInfo","purpose":"Statistics of optimization process","htmlid":"d126e20048","value":["structure"]}],"examples":[{"url":"optimizeposegraph.html#mw_feae6424-d3df-4729-b35a-37700bc550e1","open_command":"openExample('nav\/OptimizeA3DPoseGraphExample')","title":"Optimize a 3-D Pose Graph"}],"seealso":[{"url":"trimloopclosures.html","name":"trimLoopClosures"},{"url":"posegraph.addrelativepose.html","name":"addRelativePose"},{"url":"posegraph.removeedges.html","name":"removeEdges"},{"url":"posegraph.edgenodepairs.html","name":"edgeNodePairs"},{"url":"posegraph.edgeconstraints.html","name":"edgeConstraints"},{"url":"posegraph.findedgeid.html","name":"findEdgeID"},{"url":"posegraph.nodeestimates.html","name":"nodeEstimates"},{"url":"posegraph.html","name":"poseGraph"},{"url":"posegraph3d.html","name":"poseGraph3D"},{"url":"lidarslam.html","name":"lidarSLAM"}]},{"href":"ref\/pathmetrics.clearance.html","refentity":[{"type":"function","name":"clearance","fcntype":"instancemethod"},{"type":"method","name":"pathmetrics.clearance","fcntype":"instancemethod"}],"refpurpose":"Minimum clearance of path","introduced":"R2019b","description":"This MATLAB function returns the minimum clearance of the path.","syntaxgroup":[{"title":"","syntax":["clearance(pathMetricsObj)","clearance(pathMetricsObj,'Type','states')"]}],"inputgroup":[{"title":"","inputs":[{"name":"pathMetricsObj","purpose":"Information for path metrics","htmlid":"mw_d031e7db-0bc0-4f5c-bc59-ec546850cc3c","value":["pathmetrics object"]}]}],"examples":[{"url":"pathmetrics.clearance.html#mw_1558af73-69fc-4183-8584-1d1d3b12fd10","open_command":"openExample('nav\/ComputePathMetricsExample')","title":"Compute Path Metrics"},{"url":"pathmetrics.clearance.html#mw_54161519-1868-493d-bdbc-cc81de01982f","open_command":"openExample('nav\/VehiclePathPlanningAndMetricsComputationExample')","title":"Vehicle Path Planning and Metrics Computation in a 2-D Costmap Environment"},{"url":"pathmetrics.clearance.html#mw_945e1042-7aaf-4823-a6c6-83420b388f65","open_command":"openExample('nav\/PathPlanningAndMetricsComputationIn3DEnvironmentExample')","title":"Path Planning and Metrics Computation in 3-D Environment"}],"seealso":[{"url":"pathmetrics.html","name":"pathmetrics"},{"url":"pathmetrics.ispathvalid.html","name":"isPathValid"},{"url":"pathmetrics.show.html","name":"show"},{"url":"pathmetrics.smoothness.html","name":"smoothness"}]},{"href":"ref\/pathmetrics.ispathvalid.html","refentity":[{"type":"function","name":"isPathValid","fcntype":"instancemethod"},{"type":"method","name":"pathmetrics.isPathValid","fcntype":"instancemethod"}],"refpurpose":"Determine if planned path is obstacle free","introduced":"R2019b","description":"This MATLAB function returns either a logical 1 (true) if the planned path is obstacle free or a logical 0 (false) if the path is invalid.","syntaxgroup":[{"title":"","syntax":["isPathValid(pathMetricsObj)"]}],"inputgroup":[{"title":"","inputs":[{"name":"pathMetricsObj","purpose":"Information for path metrics","htmlid":"mw_27cfdf37-b1d8-4892-be84-a125fd12dd7a","value":["pathmetrics object"]}]}],"examples":[{"url":"pathmetrics.ispathvalid.html#mw_dd9790cb-e531-4d69-bd06-71701cd570a4","open_command":"openExample('nav\/ComputePathMetricsExample')","title":"Compute Path Metrics"},{"url":"pathmetrics.ispathvalid.html#mw_330c2cb5-925b-48bd-9574-9772e1ad7ca8","open_command":"openExample('nav\/VehiclePathPlanningAndMetricsComputationExample')","title":"Vehicle Path Planning and Metrics Computation in a 2-D Costmap Environment"},{"url":"pathmetrics.ispathvalid.html#mw_f73809ce-c348-426a-b1f6-931e11be4b64","open_command":"openExample('nav\/PathPlanningAndMetricsComputationIn3DEnvironmentExample')","title":"Path Planning and Metrics Computation in 3-D Environment"}],"seealso":[{"url":"pathmetrics.html","name":"pathmetrics"},{"url":"pathmetrics.clearance.html","name":"clearance"},{"url":"pathmetrics.show.html","name":"show"},{"url":"pathmetrics.smoothness.html","name":"smoothness"},{"url":"shortenpath.html","name":"shortenpath"}]},{"href":"ref\/pathmetrics.html","refentity":[{"type":"object","name":"pathmetrics"},{"type":"function","name":"pathmetrics","fcntype":"constructor"}],"refpurpose":"Information for path metrics","introduced":"R2019b","description":"The pathmetrics object holds information for computing path metrics.","syntaxgroup":[{"title":"","syntax":["pathMetricsObj = pathmetrics(path)","pathMetricsObj = pathmetrics(path,validator)"]}],"classpropertygroup":[{"classproperty":[{"name":"Path","purpose":"Path data structure","htmlid":"mw_8b698c2f-f5dc-433d-9ebe-d7970f9bb750","value":["navPath object"]},{"name":"StateValidator","purpose":"Validator for states on path","htmlid":"mw_58fb305f-b18f-4580-aef7-39ecd3480cea","value":["validatorOccupancyMap object","validatorVehicleCostmap object","validatorOccupancyMap3D object"]}]}],"objectfunctions":[{"title":"","functions":[{"name":"clearance","url":"pathmetrics.clearance.html","description":"Minimum clearance of path"},{"name":"isPathValid","url":"pathmetrics.ispathvalid.html","description":"Determine if planned path is obstacle free"},{"name":"show","url":"pathmetrics.show.html","description":"Visualize path metrics in map environment"},{"name":"smoothness","url":"pathmetrics.smoothness.html","description":"Smoothness of path"}]}],"examples":[{"url":"pathmetrics.html#mw_c18619f3-917b-4971-a15a-991ebccd4d16","open_command":"openExample('nav\/ComputePathMetricsExample')","title":"Compute Path Metrics"},{"url":"pathmetrics.html#mw_10c8ab83-10b3-49b0-bcbe-118c5ee38c4f","open_command":"openExample('nav\/VehiclePathPlanningAndMetricsComputationExample')","title":"Vehicle Path Planning and Metrics Computation in a 2-D Costmap Environment"},{"url":"pathmetrics.html#mw_0453a263-a1fc-43d2-a45d-3f4599f71046","open_command":"openExample('nav\/PathPlanningAndMetricsComputationIn3DEnvironmentExample')","title":"Path Planning and Metrics Computation in 3-D Environment"}],"seealso":[{"url":"navpath.html","name":"navPath"},{"url":"validatoroccupancymap.html","name":"validatorOccupancyMap"},{"url":"validatorvehiclecostmap.html","name":"validatorVehicleCostmap"},{"url":"validatoroccupancymap3d.html","name":"validatorOccupancyMap3D"}]},{"href":"ref\/pathmetrics.show.html","refentity":[{"type":"function","name":"show","fcntype":"instancemethod"},{"type":"method","name":"pathmetrics.show","fcntype":"instancemethod"}],"refpurpose":"Visualize path metrics in map environment","introduced":"R2019b","description":"This MATLAB function plots the path in the map environment with the minimum clearance.","syntaxgroup":[{"title":"","syntax":["show(pathMetricsObj)","show(pathMetricsObj,Name,Value)","axHandle = show(pathMetricsObj)"]}],"inputgroup":[{"title":"","inputs":[{"name":"pathMetricsObj","purpose":"Information for path metrics","htmlid":"mw_28be1800-cd93-40c1-b224-d61ce3a979d1","value":["pathmetrics object"]}]},{"namevaluepairs":[{"title":"","inputs":[{"name":"Parent","purpose":"Axes used to plot path","htmlid":"mw_12f78377-87c9-4ec2-8299-f8a50278858a","value":["Axes object","UIAxes object"]},{"name":"Metrics","purpose":"Display metrics option","htmlid":"mw_1370830b-ec5c-4735-9b64-c82fbfacf38d","value":["\"MinClearance\"","string","cell array of strings"],"defaultvalue":"\"MinClearance\""}]}]}],"outputs":[{"name":"axHandle","purpose":"Axes used to plot path","htmlid":"mw_247169fe-daef-4b13-aa03-703681403258","value":["Axes object","UIAxes object"]}],"examples":[{"url":"pathmetrics.show.html#mw_d098fc34-1205-451e-8680-d45a3602c804","open_command":"openExample('nav\/ComputePathMetricsExample')","title":"Compute Path Metrics"},{"url":"pathmetrics.show.html#mw_b56ef9d6-168c-4c68-966e-59c09dd4a6c2","open_command":"openExample('nav\/VehiclePathPlanningAndMetricsComputationExample')","title":"Vehicle Path Planning and Metrics Computation in a 2-D Costmap Environment"},{"url":"pathmetrics.show.html#mw_9259149c-5aa7-40e5-be64-463dfac94125","open_command":"openExample('nav\/PathPlanningAndMetricsComputationIn3DEnvironmentExample')","title":"Path Planning and Metrics Computation in 3-D Environment"}],"seealso":[{"url":"pathmetrics.html","name":"pathmetrics"},{"url":"pathmetrics.clearance.html","name":"clearance"},{"url":"pathmetrics.ispathvalid.html","name":"isPathValid"},{"url":"pathmetrics.smoothness.html","name":"smoothness"}]},{"href":"ref\/pathmetrics.smoothness.html","refentity":[{"type":"function","name":"smoothness","fcntype":"instancemethod"},{"type":"method","name":"pathmetrics.smoothness","fcntype":"instancemethod"}],"refpurpose":"Smoothness of path","introduced":"R2019b","description":"This MATLAB function evaluates the smoothness of the planned path.","syntaxgroup":[{"title":"","syntax":["smoothness(pathMetricsObj)","smoothness(pathMetricsObj,'Type','segments')"]}],"inputgroup":[{"title":"","inputs":[{"name":"pathMetricsObj","purpose":"Information for path metrics","htmlid":"mw_43625a5f-e514-4f78-9f59-44fe4f5b6d28","value":["pathmetrics object"]}]}],"examples":[{"url":"pathmetrics.smoothness.html#mw_b3608c1d-6a04-4424-8e19-94b3e19f4d26","open_command":"openExample('nav\/ComputePathMetricsExample')","title":"Compute Path Metrics"},{"url":"pathmetrics.smoothness.html#mw_d56f7646-a254-4af8-a132-0a6fcaefc7c7","open_command":"openExample('nav\/VehiclePathPlanningAndMetricsComputationExample')","title":"Vehicle Path Planning and Metrics Computation in a 2-D Costmap Environment"},{"url":"pathmetrics.smoothness.html#mw_28868ae0-fec6-46df-8f04-b8269fa321ee","open_command":"openExample('nav\/PathPlanningAndMetricsComputationIn3DEnvironmentExample')","title":"Path Planning and Metrics Computation in 3-D Environment"}],"seealso":[{"url":"pathmetrics.html","name":"pathmetrics"},{"url":"pathmetrics.clearance.html","name":"clearance"},{"url":"pathmetrics.ispathvalid.html","name":"isPathValid"},{"url":"pathmetrics.show.html","name":"show"},{"url":"shortenpath.html","name":"shortenpath"}]},{"href":"ref\/peakfinderconfiguration.html","refentity":[{"type":"object","name":"PeakFinderConfiguration"},{"type":"function","name":"PeakFinderConfiguration","fcntype":"constructor"}],"refpurpose":"Compute and display the largest calculated peak values on the scope display","introduced":"R2022a","description":"Use the PeakFinderConfiguration object to compute and display peaks in the scope.","syntaxgroup":[{"title":"","syntax":["pkfinder = PeakFinderConfiguration()"]}],"classpropertygroup":[{"classproperty":[{"name":"MinHeight","purpose":"Level above which scope detects peaks","htmlid":"mw_c9410672-6765-4a9b-b3a1-6be3893815d0","value":["-Inf","real scalar value"],"defaultvalue":"-Inf"},{"name":"NumPeaks","purpose":"Maximum number of peaks to show","htmlid":"mw_4e231cb6-bcfe-4b47-82db-b45087ed02ea","value":["3","positive integer less than 100"],"defaultvalue":"3"},{"name":"MinDistance","purpose":"Minimum number of samples between adjacent peaks","htmlid":"mw_ff660528-067e-47e2-8b8c-2ad08d41d1ae","value":["1","positive integer"],"defaultvalue":"1"},{"name":"Threshold","purpose":"Minimum difference in height of peak and its neighboring samples","htmlid":"mw_d5f16d09-c928-4fe5-9626-28c8cf032808","value":["0","nonnegative scalar"],"defaultvalue":"0"},{"name":"LabelPeaks","purpose":"Label found peaks","htmlid":"mw_e508c1d1-feab-486c-935d-5b99f732a515","value":["false","true"],"defaultvalue":"false"},{"name":"LabelFormat","purpose":"Coordinates to display","htmlid":"mw_e0bfa53f-d82b-4227-a89c-347a5baa1a6d","value":["\"x + y\"","\"x\"","\"y\""],"defaultvalue":"\"x + y\""},{"name":"Enabled","purpose":"Enable peak finder measurements","htmlid":"mw_d57bffbc-4125-403b-a616-1236348ba402","value":["false","true"],"defaultvalue":"false"}]}],"examples":[{"url":"peakfinderconfiguration.html#mw_3f3387ce-0c26-44b6-8359-3466380d2bf5","open_command":"openExample('dsp_nav_fusion\/EnablePeakFinderProgramOnATSObjectExample')","title":"Enable Peak Finder Programmatically in a Time Scope Object"}],"seealso":[{"url":"timescope.html","name":"timescope"}]},{"href":"ref\/plannerastar.copy.html","refentity":[{"type":"function","name":"copy","fcntype":"instancemethod"},{"type":"method","name":"plannerAStar.copy","fcntype":"instancemethod"}],"refpurpose":"Create deep copy of A* path planner object","introduced":"R2023a","description":"This MATLAB function creates a deep copy of the plannerAStar object planner1.","syntaxgroup":[{"title":"","syntax":["planner2 = copy(planner1)"]}],"inputgroup":[{"title":"","inputs":[{"name":"planner1","purpose":"A* path planner","htmlid":"mw_7393c6db-ed24-44a0-b500-0ee62ca674e5","value":["plannerAStar object"]}]}],"outputs":[{"name":"planner2","purpose":"Copy of A* path planner","htmlid":"mw_dc4a00ce-a5cf-48e4-b045-64c553ae8744","value":["plannerAStar object"]}],"examples":[{"url":"plannerastar.copy.html#mw_7f02246f-60e7-45ca-b0b6-2d82bb6ce16b","open_command":"openExample('nav\/PlanShortestPathInGraphUsingAStarPathPlannerExample')","title":"Plan Shortest Path Between Two States in Graph Using A-Star Path Planner"}],"seealso":[{"url":"plannerastar.html","name":"plannerAStar"},{"url":"plannerastar.plan.html","name":"plan"}]},{"href":"ref\/plannerastar.html","refentity":[{"type":"object","name":"plannerAStar"},{"type":"function","name":"plannerAStar","fcntype":"constructor"}],"refpurpose":"Graph-based A* path planner","introduced":"R2023a","description":"The plannerAStar object creates an A* path planner from a graph object.","syntaxgroup":[{"title":"","syntax":["planner = plannerAStar(graph)","planner = plannerAStar(___,Name=Value)"]}],"classpropertygroup":[{"classproperty":[{"name":"Graph","purpose":"Graph object of planning environment","htmlid":"mw_6e4d5fb9-e00f-409d-8e3f-725f4ea89505","value":["navGraph object"]},{"name":"HeuristicCostFcn","purpose":"Heuristic cost function between state and goal in graph","htmlid":"mw_716299fc-fa52-4b08-8b42-3419142dcef4","value":["@nav.algs.distanceManhattan","@nav.algs.distanceEuclidean","@nav.algs.distanceEuclideanSquared","custom cost function handle"],"defaultvalue":"@nav.algs.distanceManhattan"},{"name":"TieBreaker","purpose":"Tiebreaker mode toggle","htmlid":"mw_7e3af1fc-6ebe-4857-bbb6-826bf108b476","value":["false or 0","true or 1"],"defaultvalue":"false or 0"}]}],"objectfunctions":[{"title":"","functions":[{"name":"plan","url":"plannerastar.plan.html","description":"Find shortest path between two states in graph"},{"name":"copy","url":"plannerastar.copy.html","description":"Create deep copy of A* path planner object"}]}],"examples":[{"url":"plannerastar.html#mw_2e842747-a030-4711-b80f-b81d2497607f","open_command":"openExample('nav\/PlanShortestPathInGraphUsingAStarPathPlannerExample')","title":"Plan Shortest Path Between Two States in Graph Using A-Star Path Planner"}],"seealso":[{"url":"navgraph.html","name":"navGraph"},{"url":"..\/..\/matlab\/ref\/digraph.html","name":"digraph"},{"url":"plannerastar.plan.html","name":"plan"},{"url":"plannerastar.copy.html","name":"copy"}]},{"href":"ref\/plannerastar.plan.html","refentity":[{"type":"function","name":"plan","fcntype":"instancemethod"},{"type":"method","name":"plannerAStar.plan","fcntype":"instancemethod"}],"refpurpose":"Find shortest path between two states in graph","introduced":"R2023a","description":"This MATLAB function finds the shortest path path between a specified start and goal in the graph using the specified A* path planner planner.","syntaxgroup":[{"title":"","syntax":["path = plan(planner,start,goal)","[path,solutionInfo] = plan(___)"]}],"inputgroup":[{"title":"","inputs":[{"name":"planner","purpose":"A* path planner","htmlid":"mw_4a493846-3869-46cc-939c-8b272335c7c3","value":["plannerAStar object"]},{"name":"start","purpose":"Start state of path","htmlid":"mw_fafe6f7c-b0d8-48e1-a880-b89376febb7d","value":["positive integer","string scalar","character vector","numeric vector"]},{"name":"goal","purpose":"Goal state of path","htmlid":"mw_015f5593-dc41-4c0d-a013-047fc9556db2","value":["positive integer","string scalar","character vector","numeric vector"]}]}],"outputs":[{"name":"path","purpose":"Shortest path between states","htmlid":"mw_cc292375-546c-47ac-9a27-8ca0f9c4ebc5","value":["numeric matrix"]},{"name":"solutionInfo","purpose":"Solution information","htmlid":"mw_88a48a82-00dc-4a1a-9c65-bd18726d6d19","value":["structure"]}],"examples":[{"url":"plannerastar.plan.html#mw_1348c6c2-bed5-4978-a95e-304e689b360c","open_command":"openExample('nav\/PlanShortestPathInGraphUsingAStarPathPlannerExample')","title":"Plan Shortest Path Between Two States in Graph Using A-Star Path Planner"}],"seealso":[{"url":"plannerastar.html","name":"plannerAStar"},{"url":"plannerastar.copy.html","name":"copy"},{"url":"shortenpath.html","name":"shortenpath"}]},{"href":"ref\/plannerastargrid.html","refentity":[{"type":"object","name":"plannerAStarGrid"},{"type":"function","name":"plannerAStarGrid","fcntype":"constructor"}],"refpurpose":"A* path planner for grid map","introduced":"R2020b","description":"The plannerAStarGrid object creates an A* path planner.","syntaxgroup":[{"title":"","syntax":["planner = plannerAStarGrid","planner = plannerAStarGrid(map)","planner = plannerAStarGrid(___,Name,Value)"]}],"classpropertygroup":[{"classproperty":[{"name":"Map","purpose":"Map representation","htmlid":"mw_1e8163e8-af81-4955-8a53-e52de8a7493d","value":["binaryOccupancyMap object","occupancyMap object"],"defaultvalue":"binaryOccupancyMap object"},{"name":"GCost","purpose":"General cost of moving between any two points in grid","htmlid":"mw_aed08843-6144-4f28-a7a7-0069c9d9d928","value":["'Euclidean'","'Chebyshev'","'EuclideanSquared'","'Manhattan'"],"defaultvalue":"'Euclidean'"},{"name":"GCostFcn","purpose":"Custom GCost function","htmlid":"mw_3b4ff756-ddd3-4282-a318-c074217c8222","value":["function handle"]},{"name":"HCost","purpose":"Heuristic cost between point and goal in grid","htmlid":"mw_f1fb5376-f806-47f5-9faf-a96fd5314273","value":["'Euclidean'","'Chebyshev'","'EuclideanSquared'","'Manhattan'"],"defaultvalue":"'Euclidean'"},{"name":"HCostFcn","purpose":"Custom HCost function","htmlid":"mw_6e80d117-8a98-4855-a821-151c6f1adda6","value":["function handle"]},{"name":"TieBreaker","purpose":"Toggle tiebreaker mode","htmlid":"mw_2bbb63a8-c98b-40e7-b04f-3ae6dfb14c56","value":["'off'","'on'"],"defaultvalue":"'off'"},{"name":"DiagonalSearch","purpose":"Toggle diagonal search mode","htmlid":"mw_6b61db00-5ecf-4112-a106-4b7e163ff18d","value":["'on'","'off'"],"defaultvalue":"'on'"}]}],"objectfunctions":[{"title":"","functions":[{"name":"plan","url":"plannerastargrid.plan.html","description":"Find shortest obstacle-free path between two points"},{"name":"show","url":"plannerastargrid.show.html","description":"Plot and visualize A* explored nodes and planned path"}]}],"examples":[{"url":"plannerastargrid.html#mw_21e68ba6-0074-429b-beab-01ac46c7c256","open_command":"openExample('nav\/ObstacleFreePathPlanningInGridMapUsingAStarPathPlannerExample')","title":"Plan Obstacle-Free Path in Grid Map Using A-Star Path Planner"}],"seealso":[{"url":"binaryoccupancymap.html","name":"binaryOccupancyMap"},{"url":"occupancymap.html","name":"occupancyMap"},{"url":"plannerrrt.html","name":"plannerRRT"},{"url":"plannerrrtstar.html","name":"plannerRRTStar"},{"url":"plannerhybridastar.html","name":"plannerHybridAStar"}]},{"href":"ref\/plannerastargrid.plan.html","refentity":[{"type":"function","name":"plan","fcntype":"instancemethod"},{"type":"method","name":"plannerAStarGrid.plan","fcntype":"instancemethod"}],"refpurpose":"Find shortest obstacle-free path between two points","introduced":"R2020b","description":"This MATLAB function finds the shortest obstacle-free path, path, between a specified start point, start, and goal point, goal, specified as [row column] in grid frame with origin at top-left corner, using the specified A* path planner planner.","syntaxgroup":[{"title":"","syntax":["path = plan(planner,start,goal)","path = plan(planner,start,goal,'world')","[path,debugInfo] = plan(___)"]}],"inputgroup":[{"title":"","inputs":[{"name":"planner","purpose":"A* path planner for grid map","htmlid":"mw_b9a64a11-9497-4f02-aa58-707156bd3dae","value":["plannerAStarGrid object"]},{"name":"start","purpose":"Start position in grid or world","htmlid":"mw_b6b9e162-e435-487a-ac6a-3b89cd16b443","value":["two-element vector"]},{"name":"goal","purpose":"Goal position in grid or world","htmlid":"mw_ae43efce-5893-4318-9b71-044b38ec5cb1","value":["two-element vector"]}]}],"outputs":[{"name":"path","purpose":"Shortest obstacle-free path","htmlid":"mw_e6b9e705-4ba6-4f22-9929-2e30acf54057","value":["n-by-2 matrix"]},{"name":"debugInfo","purpose":"Debugging information for path result","htmlid":"mw_901c6ffd-7a7d-4309-b8bb-f6b9228f9766","value":["structure"]}],"examples":[{"url":"plannerastargrid.plan.html#mw_0a7c6037-dbdb-4036-bf98-827ad89915bc","open_command":"openExample('nav\/ObstacleFreePathPlanningInGridMapUsingAStarPathPlannerExample')","title":"Plan Obstacle-Free Path in Grid Map Using A-Star Path Planner"}],"seealso":[{"url":"plannerastargrid.html","name":"plannerAStarGrid"},{"url":"plannerastargrid.show.html","name":"show"},{"url":"shortenpath.html","name":"shortenpath"}]},{"href":"ref\/plannerastargrid.show.html","refentity":[{"type":"function","name":"show","fcntype":"instancemethod"},{"type":"method","name":"plannerAStarGrid.show","fcntype":"instancemethod"}],"refpurpose":"Plot and visualize A* explored nodes and planned path","introduced":"R2020b","description":"This MATLAB function plots and visualizes the A* explored nodes and the planned path in the associated map.","syntaxgroup":[{"title":"","syntax":["show(planner)","axHandle = show(planner)","[___] = show(___,Name,Value)"]}],"inputgroup":[{"title":"","inputs":[{"name":"planner","purpose":"A* path planner for grid map","htmlid":"mw_e35cb9d2-262b-4bee-9796-7d5db0122334","value":["plannerAStarGrid object"]}]},{"namevaluepairs":[{"title":"","inputs":[{"name":"Parent","purpose":"Axes used to plot path","htmlid":"mw_a4719252-d5e2-4cd0-90d9-3b2f04898adb","value":["Axes object","UIAxes object"]},{"name":"ExploredNodes","purpose":"Display explored nodes","htmlid":"mw_96926e77-deee-4e93-9862-63ebb64a8451","value":["'on'","'off'"],"defaultvalue":"'on'"}]}]}],"outputs":[{"name":"axHandle","purpose":"Axes used to plot path","htmlid":"mw_45d7d2c4-edaa-4372-963b-748c8c312817","value":["Axes object","UIAxes object"]}],"examples":[{"url":"plannerastargrid.show.html#mw_039857e1-506b-4718-9757-905a39788f45","open_command":"openExample('nav\/ObstacleFreePathPlanningInGridMapUsingAStarPathPlannerExample')","title":"Plan Obstacle-Free Path in Grid Map Using A-Star Path Planner"}],"seealso":[{"url":"plannerastargrid.html","name":"plannerAStarGrid"},{"url":"plannerastargrid.plan.html","name":"plan"}]},{"href":"ref\/plannerbenchmark.addplanner.html","refentity":[{"type":"function","name":"addPlanner","fcntype":"instancemethod"},{"type":"method","name":"plannerBenchmark.addPlanner","fcntype":"instancemethod"}],"refpurpose":"Add path planner for benchmarking","introduced":"R2022a","description":"This MATLAB function adds the plan function of a planner as a function handle planFcn to the plannerBenchmark object.","syntaxgroup":[{"title":"","syntax":["addPlanner(plannerBM,planFcn)","addPlanner(plannerBM,planFcn,initializationFcn)","addPlanner(___,Name=Value)"]}],"inputgroup":[{"title":"","inputs":[{"name":"plannerBM","purpose":"Path planner benchmark","htmlid":"mw_0770469a-3a87-4400-8e5b-bbce1f766c21","value":["plannerBenchmark object"]},{"name":"planFcn","purpose":"Plan function of path planner","htmlid":"mw_f832fbb8-d5b1-41b5-a578-769189f7095f","value":["function handle"]},{"name":"initializationFcn","purpose":"Initialization function of path planner","htmlid":"mw_0850f063-fa6c-428d-bef9-8f6ba67322de","value":["function handle"]}]},{"namevaluepairs":[{"title":"","inputs":[{"name":"PlannerName","purpose":"Name of planner","htmlid":"mw_8e5c5059-40dd-478b-8fe5-e0f2d12879c0","value":["character vector","string scalar"]},{"name":"NumPlanOutput","purpose":"Number of expected output from plan function","htmlid":"mw_624eb7dd-d3c8-4679-a5d9-242876593628","value":["1","positive scalar"],"defaultvalue":"1"}]}]}],"examples":[{"url":"plannerbenchmark.addplanner.html#mw_e0c336cb-4931-42eb-93bf-0fe163a44c78","open_command":"openExample('nav\/Benchmark2DPathPlannersExample')","title":"Benchmark 2-D Path Planners"}],"seealso":[{"url":"plannerbenchmark.html","name":"plannerBenchmark"},{"url":"plannerbenchmark.copy.html","name":"copy"},{"url":"plannerbenchmark.metric.html","name":"metric"},{"url":"plannerbenchmark.report.html","name":"report"},{"url":"plannerbenchmark.runplanner.html","name":"runPlanner"},{"url":"plannerbenchmark.show.html","name":"show"}]},{"href":"ref\/plannerbenchmark.copy.html","refentity":[{"type":"function","name":"copy","fcntype":"instancemethod"},{"type":"method","name":"plannerBenchmark.copy","fcntype":"instancemethod"}],"refpurpose":"Create deep copy of plannerBenchmark object","introduced":"R2022a","description":"This MATLAB function creates a deep copy of the plannerBenchmark object with the same properties.","syntaxgroup":[{"title":"","syntax":["plannerBM2 = copy(plannerBM1)"]}],"inputgroup":[{"title":"","inputs":[{"name":"plannerBM1","purpose":"Path planner benchmark","htmlid":"mw_6fd4e4a3-5ac4-4d93-b7f8-ce2400a69f04","value":["plannerBenchmark object"]}]}],"outputs":[{"name":"plannerBM2","purpose":"Copy of path planner benchmark","htmlid":"mw_bd2ac585-25a5-4d64-a3a6-2449c2403cd7","value":["plannerBenchmark object"]}],"examples":[{"url":"plannerbenchmark.copy.html#mw_8fbc3077-c5df-410c-b91b-ef4bd574a94e","open_command":"openExample('nav\/CreateCopyOfPlannerBenchmarkObjectExample')","title":"Create Copy of plannerBenchmark Object"}],"seealso":[{"url":"plannerbenchmark.html","name":"plannerBenchmark"},{"url":"plannerbenchmark.addplanner.html","name":"addPlanner"},{"url":"plannerbenchmark.metric.html","name":"metric"},{"url":"plannerbenchmark.report.html","name":"report"},{"url":"plannerbenchmark.runplanner.html","name":"runPlanner"},{"url":"plannerbenchmark.show.html","name":"show"}]},{"href":"ref\/plannerbenchmark.html","refentity":[{"type":"object","name":"plannerBenchmark"},{"type":"function","name":"plannerBenchmark","fcntype":"constructor"}],"refpurpose":"Benchmark path planners using generated metrics","introduced":"R2022a","description":"plannerBenchmark object benchmarks the 2-D path planners by running them on a specified environment with specified start and goal poses.","syntaxgroup":[{"title":"","syntax":["plannerBM = plannerBenchmark(environment,start,goal)"]}],"classpropertygroup":[{"classproperty":[{"name":"Environment","purpose":"Environment for benchmarking path planners","htmlid":"mw_7eb2e9a4-53ca-4a65-ba16-79789f27c672","value":["occupancyMap object","binaryOccupancyMap object","validatorOccupancyMap object"]},{"name":"Start","purpose":"Start pose of path for all planners","htmlid":"mw_9d52fd66-a1f9-4d10-bcd6-b770d2818b78","value":["vector of the form [x y]","vector of the form [x y theta]"]},{"name":"Goal","purpose":"Goal pose of path for all planners","htmlid":"mw_aaad3def-c123-4311-b96a-f0d6de6d1571","value":["vector of the form [x y]","vector of the form [x y theta]"]},{"name":"PlannerOutput","readonly":true,"purpose":"Output of planners after execution","htmlid":"mw_a6349cc1-d5f0-4f2c-8f4e-a948dd8d82fd","value":["structure"]}]}],"objectfunctions":[{"title":"","functions":[{"name":"addPlanner","url":"plannerbenchmark.addplanner.html","description":"Add path planner for benchmarking"},{"name":"copy","url":"plannerbenchmark.copy.html","description":"Create deep copy of plannerBenchmark object"},{"name":"metric","url":"plannerbenchmark.metric.html","description":"Return path planner metrics"},{"name":"report","url":"plannerbenchmark.report.html","description":"Create benchmark report"},{"name":"runPlanner","url":"plannerbenchmark.runplanner.html","description":"Run path planners"},{"name":"show","url":"plannerbenchmark.show.html","description":"Visualize path planner metrics"}]}],"examples":[{"url":"plannerbenchmark.html#mw_4f875f38-e652-41a4-b42f-a45ec28149a3","open_command":"openExample('nav\/Benchmark2DPathPlannersExample')","title":"Benchmark 2-D Path Planners"}],"seealso":[{"url":"occupancymap.html","name":"occupancyMap"},{"url":"binaryoccupancymap.html","name":"binaryOccupancyMap"},{"url":"validatoroccupancymap.html","name":"validatorOccupancyMap"},{"url":"plannerbenchmark.addplanner.html","name":"addPlanner"},{"url":"plannerbenchmark.copy.html","name":"copy"},{"url":"plannerbenchmark.metric.html","name":"metric"},{"url":"plannerbenchmark.report.html","name":"report"},{"url":"plannerbenchmark.runplanner.html","name":"runPlanner"},{"url":"plannerbenchmark.show.html","name":"show"}]},{"href":"ref\/plannerbenchmark.metric.html","refentity":[{"type":"function","name":"metric","fcntype":"instancemethod"},{"type":"method","name":"plannerBenchmark.metric","fcntype":"instancemethod"}],"refpurpose":"Return path planner metrics","introduced":"R2022a","description":"This MATLAB function returns the summary of all the path planner metrics as a table.","syntaxgroup":[{"title":"","syntax":["metricSummary = metric(plannerBM)","metricSummary = metric(plannerBM,metricName)","[metricSummary,metricData] = metric(plannerBM)","[metricSummary,metricData] = metric(plannerBM,metricName)"]}],"inputgroup":[{"title":"","inputs":[{"name":"plannerBM","purpose":"Path planner benchmark","htmlid":"mw_1b768d35-e0dc-41fb-8818-23de9c12a19a","value":["plannerBenchmark object"]},{"name":"metricName","purpose":"Metric name","htmlid":"mw_03303c02-d1ad-467a-885e-2e3b2d780d99","value":["\"clearance\"","\"executionTime\"","\"initializationTime\"","\"isPathValid\"","\"pathLength\"","\"smoothness\""]}]}],"outputs":[{"name":"metricSummary","purpose":"Metric summary","htmlid":"mw_df67d47b-0a1d-4452-b5f3-87c7bcc4703a","value":["table"]},{"name":"metricData","purpose":"Metric value","htmlid":"mw_92c66ada-2e87-43aa-bc2c-e9aded566464","value":["table"]}],"examples":[{"url":"plannerbenchmark.metric.html#mw_572a89b0-0796-4f73-8e82-7a79a474cd6b","open_command":"openExample('nav\/Benchmark2DPathPlannersExample')","title":"Benchmark 2-D Path Planners"}],"seealso":[{"url":"plannerbenchmark.html","name":"plannerBenchmark"},{"url":"plannerbenchmark.addplanner.html","name":"addPlanner"},{"url":"plannerbenchmark.copy.html","name":"copy"},{"url":"plannerbenchmark.report.html","name":"report"},{"url":"plannerbenchmark.runplanner.html","name":"runPlanner"},{"url":"plannerbenchmark.show.html","name":"show"}]},{"href":"ref\/plannerbenchmark.report.html","refentity":[{"type":"function","name":"report","fcntype":"instancemethod"},{"type":"method","name":"plannerBenchmark.report","fcntype":"instancemethod"}],"refpurpose":"Create benchmark report","introduced":"R2022b","description":"This MATLAB function creates and opens a benchmark report as a live script (.mlx) in the MATLAB editor.","syntaxgroup":[{"title":"","syntax":["report(plannerBM)","report(plannerBM,filename)","report(plannerBM,filename,Name=Value)"]}],"inputgroup":[{"title":"","inputs":[{"name":"plannerBM","purpose":"Path planner benchmark","htmlid":"mw_d6a10039-0097-45cc-a9d6-3a906de86263","value":["plannerBenchmark object"]},{"name":"filename","purpose":"Name of report file","htmlid":"mw_f630c642-0b4b-4ed0-9df1-78e831c67850","value":["\"report.mlx\"","string scalar","character vector"],"defaultvalue":"\"report.mlx\""}]},{"namevaluepairs":[{"title":"","inputs":[{"name":"Metric","purpose":"Metrics to include in report","htmlid":"mw_c8c16996-7727-4e78-a73d-e736a8d627fa","value":["[\"clearance\",\"executionTime\",\"initializationTime\",\"isPathValid\",\"pathLength\",\"smoothness\"]","string scalar","character vector","string array","cell array of character vectors"],"defaultvalue":"[\"clearance\",\"executionTime\",\"initializationTime\",\"isPathValid\",\"pathLength\",\"smoothness\"]"},{"name":"Exclude","purpose":"Content sections to exclude from report","htmlid":"mw_0f7b13d3-a217-430f-a16b-6cc1390954eb","value":["\"None\"","string scalar","character vector","string array","cell array of character vectors"],"defaultvalue":"\"None\""},{"name":"Open","purpose":"Report opens in editor","htmlid":"mw_abefdc70-1ba9-46ae-9c44-f6dceb05fbb5","value":["true or 1","false or 0"],"defaultvalue":"true or 1"}]}]}],"examples":[{"url":"plannerbenchmark.report.html#mw_95fc57d9-b775-4ab6-8dbe-4b73aa69ab1f","open_command":"openExample('nav\/GenerateBenchmarkReportFor2DPathPlannersExample')","title":"Generate Benchmark Report for 2-D Path Planners"}],"seealso":[{"url":"plannerbenchmark.html","name":"plannerBenchmark"},{"url":"plannerbenchmark.addplanner.html","name":"addPlanner"},{"url":"plannerbenchmark.copy.html","name":"copy"},{"url":"plannerbenchmark.runplanner.html","name":"runPlanner"},{"url":"plannerbenchmark.show.html","name":"show"},{"url":"plannerbenchmark.metric.html","name":"metric"}]},{"href":"ref\/plannerbenchmark.runplanner.html","refentity":[{"type":"function","name":"runPlanner","fcntype":"instancemethod"},{"type":"method","name":"plannerBenchmark.runPlanner","fcntype":"instancemethod"}],"refpurpose":"Run path planners","introduced":"R2022a","description":"This MATLAB function runs all the path planners once.","syntaxgroup":[{"title":"","syntax":["runPlanner(plannerBM)","runPlanner(plannerBM,runCount)","runPlanner(___,Verbose=Value)"]}],"inputgroup":[{"title":"","inputs":[{"name":"plannerBM","purpose":"Path planner benchmark","htmlid":"mw_8a20d7d4-c32f-496b-b177-c47f897daa1a","value":["plannerBenchmark object"]},{"name":"runCount","purpose":"Number of times of execution of plan functions","htmlid":"mw_7f7e4ce9-2a66-4d4d-a458-6ec103abf276","value":["1","positive scalar"],"defaultvalue":"1"}]}],"examples":[{"url":"plannerbenchmark.runplanner.html#mw_eaf11f69-25db-497a-9dc6-2085440f6ebe","open_command":"openExample('nav\/Benchmark2DPathPlannersExample')","title":"Benchmark 2-D Path Planners"}],"seealso":[{"url":"plannerbenchmark.html","name":"plannerBenchmark"},{"url":"plannerbenchmark.addplanner.html","name":"addPlanner"},{"url":"plannerbenchmark.copy.html","name":"copy"},{"url":"plannerbenchmark.metric.html","name":"metric"},{"url":"plannerbenchmark.report.html","name":"report"},{"url":"plannerbenchmark.show.html","name":"show"}]},{"href":"ref\/plannerbenchmark.show.html","refentity":[{"type":"function","name":"show","fcntype":"instancemethod"},{"type":"method","name":"plannerBenchmark.show","fcntype":"instancemethod"}],"refpurpose":"Visualize path planner metrics","introduced":"R2022a","description":"This MATLAB function visualizes all the path planner metrics in a figure as box plots and bar graphs.","syntaxgroup":[{"title":"","syntax":["show(plannerBM)","axHandle = show(plannerBM)","[___] = show(plannerBM,metricName)"]}],"inputgroup":[{"title":"","inputs":[{"name":"plannerBM","purpose":"Path planner benchmark","htmlid":"mw_9f11708f-5696-43cc-ba49-a99adcd54f4d","value":["plannerBenchmark object"]},{"name":"metricName","purpose":"Metric name","htmlid":"mw_2a7ae91c-8393-4762-b093-89a6d4889fd9","value":["\"clearance\"","\"executionTime\"","\"initializationTime\"","\"isPathValid\"","\"pathLength\"","\"smoothness\""]}]}],"outputs":[{"name":"axHandle","purpose":"Axes used to plot metrics","htmlid":"mw_2133f189-aaca-4365-9b60-3e03707898ea","value":["axes object","uiaxes object"]}],"examples":[{"url":"plannerbenchmark.show.html#mw_14eb1897-539e-4039-b535-045dfb3b1e38","open_command":"openExample('nav\/Benchmark2DPathPlannersExample')","title":"Benchmark 2-D Path Planners"}],"seealso":[{"url":"plannerbenchmark.html","name":"plannerBenchmark"},{"url":"plannerbenchmark.addplanner.html","name":"addPlanner"},{"url":"plannerbenchmark.copy.html","name":"copy"},{"url":"plannerbenchmark.metric.html","name":"metric"},{"url":"plannerbenchmark.report.html","name":"report"},{"url":"plannerbenchmark.runplanner.html","name":"runPlanner"}]},{"href":"ref\/plannerbirrt.copy.html","refentity":[{"type":"function","name":"copy","fcntype":"instancemethod"},{"type":"method","name":"plannerBiRRT.copy","fcntype":"instancemethod"}],"refpurpose":"Create deep copy of planner object","introduced":"R2021a","description":"This MATLAB function creates a deep copy of the planner object with the same properties.","syntaxgroup":[{"title":"","syntax":["plannerCopy = copy(planner)"]}],"inputgroup":[{"title":"","inputs":[{"name":"planner","purpose":"Path planner","htmlid":"mw_fa0cd08c-ce4f-4259-ab36-8a6a0b91fe03","value":["plannerBiRRT object"]}]}],"outputs":[{"name":"plannerCopy","purpose":"Copy of path planner","htmlid":"mw_b6ca6bfe-a443-4829-8440-7bb68402e9a2","value":["plannerBiRRT object"]}],"examples":[{"url":"plannerbirrt.copy.html#mw_9e9c2b5a-a9e7-4e11-9b48-5c15f80b1b3b","open_command":"openExample('nav\/CreateCopyOfPlannerBiRRTObjectExample')","title":"Create Copy of plannerBiRRT Object"}],"seealso":[{"url":"plannerbirrt.html","name":"plannerBiRRT"},{"url":"plannerbirrt.plan.html","name":"plan"}]},{"href":"ref\/plannerbirrt.html","refentity":[{"type":"object","name":"plannerBiRRT"},{"type":"function","name":"plannerBiRRT","fcntype":"constructor"}],"refpurpose":"Create bidirectional RRT planner for geometric planning","introduced":"R2021a","description":"The plannerBiRRT object is a single-query planner that uses the bidirectional rapidly exploring random tree (RRT) algorithm with an optional connect heuristic for increased speed.","syntaxgroup":[{"title":"","syntax":["planner = plannerBiRRT(stateSpace,stateVal)","planner = plannerBiRRT(___,Name=Value)"]}],"classpropertygroup":[{"classproperty":[{"name":"StateSpace","purpose":"State space for planner","htmlid":"mw_153de40b-7de2-4156-a316-416ebbf304b4","value":["state space object"]},{"name":"StateValidator","purpose":"State validator for planner","htmlid":"mw_9b2d4e93-dfa8-48c6-b063-4832e7cdf2f9","value":["state validator object"]},{"name":"StateSampler","purpose":"State space sampler for sampling input space","htmlid":"mw_77e0e086-2d7b-4346-b313-f7433504c69d","value":["stateSamplerUniform object","stateSamplerGaussian object","stateSamplerMPNET object","nav.StateSampler object"],"defaultvalue":"stateSamplerUniform object"},{"name":"MaxConnectionDistance","purpose":"Maximum length between planned configurations","htmlid":"mw_bb39d2aa-1e52-4c8b-a58f-23b92083a186","value":["0.1","positive scalar"],"defaultvalue":"0.1"},{"name":"MaxIterations","purpose":"Maximum number of iterations","htmlid":"mw_43c8d04d-6b06-49ed-9823-748815626d50","value":["1e4","positive integer"],"defaultvalue":"1e4"},{"name":"MaxNumTreeNodes","purpose":"Maximum number of nodes in search tree","htmlid":"mw_1a9581de-125c-4aa6-8f55-f77ac37ec613","value":["1e4","positive integer"],"defaultvalue":"1e4"},{"name":"EnableConnectHeuristic","purpose":"Directly join trees during connect phase","htmlid":"mw_cdd0fcac-04f5-41c8-85bc-83d2cea3411d","value":["false or 0","true or 1"],"defaultvalue":"false or 0"}]}],"objectfunctions":[{"title":"","functions":[{"name":"plan","url":"plannerbirrt.plan.html","description":"Plan path between two states"},{"name":"copy","url":"plannerbirrt.copy.html","description":"Create deep copy of planner object"}]}],"examples":[{"url":"plannerbirrt.html#mw_f6709e5a-3601-4291-8907-c1ba7043e27a","open_command":"openExample('nav\/PlanPathBetweenTwoStatesUsingBidirectionalRRTExample')","title":"Plan Path Between Two States Using Bidirectional RRT"},{"url":"plannerbirrt.html#mw_32b650aa-417b-428b-bbca-b82f93cd0707","open_command":"openExample('nav\/PlanPathThrough3DOccupancyMapBidirectionalRRTPlannerExample')","title":"Plan Path Through 3-D Occupancy Map Using Bidirectional RRT Planner"}],"seealso":[{"url":"plannerrrt.html","name":"plannerRRT"},{"url":"plannerrrtstar.html","name":"plannerRRTStar"},{"url":"statespacereedsshepp.html","name":"stateSpaceReedsShepp"},{"url":"statespacedubins.html","name":"stateSpaceDubins"},{"url":"statespacese2.html","name":"stateSpaceSE2"},{"url":"statespacese3.html","name":"stateSpaceSE3"},{"url":"validatoroccupancymap.html","name":"validatorOccupancyMap"},{"url":"validatorvehiclecostmap.html","name":"validatorVehicleCostmap"},{"url":"validatoroccupancymap3d.html","name":"validatorOccupancyMap3D"},{"url":"plannerbirrt.plan.html","name":"plan"},{"url":"plannerbirrt.copy.html","name":"copy"}]},{"href":"ref\/plannerbirrt.plan.html","refentity":[{"type":"function","name":"plan","fcntype":"instancemethod"},{"type":"method","name":"plannerBiRRT.plan","fcntype":"instancemethod"}],"refpurpose":"Plan path between two states","introduced":"R2021a","description":"This MATLAB function returns a bidirectional rapidly exploring random tree (RRT) path from the start state to the goal state as a navPath object.","syntaxgroup":[{"title":"","syntax":["path = plan(planner,startState,goalState)","[path,solnInfo] = plan(planner,startState,goalState)"]}],"inputgroup":[{"title":"","inputs":[{"name":"planner","purpose":"Path planner","htmlid":"mw_e4870019-1bb9-4c91-af73-6982db12022e","value":["plannerBiRRT object"]},{"name":"startState","purpose":"Start state of path","htmlid":"mw_12c89c8e-181c-4318-8678-7a39b31edbcf","value":["N-element real-valued vector"]},{"name":"goalState","purpose":"Goal state of path","htmlid":"mw_16b3725c-b14a-477f-96be-0121e69d1cb7","value":["N-element real-valued vector"]}]}],"outputs":[{"name":"path","purpose":"Planned path information","htmlid":"mw_c59bb795-144e-4933-ad9d-20e59eb3e825","value":["navPath object"]},{"name":"solnInfo","purpose":"Solution Information","htmlid":"mw_bc5de5b4-1b1a-4cb1-aa9e-031785747aa5","value":["structure"]}],"examples":[{"url":"plannerbirrt.plan.html#mw_dc1794c3-8309-49c9-b26f-9abc26fa4f2e","open_command":"openExample('nav\/PlanPathBetweenTwoStatesUsingBidirectionalRRTExample')","title":"Plan Path Between Two States Using Bidirectional RRT"},{"url":"plannerbirrt.plan.html#mw_a5095b8a-4363-485a-9daf-9f65f4bea86c","open_command":"openExample('nav\/PlanPathThrough3DOccupancyMapBidirectionalRRTPlannerExample')","title":"Plan Path Through 3-D Occupancy Map Using Bidirectional RRT Planner"}],"seealso":[{"url":"plannerbirrt.html","name":"plannerBiRRT"},{"url":"navpath.html","name":"navPath"},{"url":"plannerbirrt.copy.html","name":"copy"},{"url":"shortenpath.html","name":"shortenpath"}]},{"href":"ref\/plannercontrolrrt.copy.html","refentity":[{"type":"function","name":"copy","fcntype":"instancemethod"},{"type":"method","name":"plannerControlRRT.copy","fcntype":"instancemethod"}],"refpurpose":"Creates deep copy of planner object","introduced":"R2021b","description":"This MATLAB function creates a deep copy of the planner object with the same properties.","syntaxgroup":[{"title":"","syntax":["plannerCopy = copy(planner)"]}],"inputgroup":[{"title":"","inputs":[{"name":"planner","purpose":"Path planner","htmlid":"mw_a9e93b09-68fd-49fd-941e-4079c1182125","value":["plannerControlRRT object"]}]}],"outputs":[{"name":"plannerCopy","purpose":"Copy of path planner","htmlid":"mw_5f801a4b-7c83-436f-a9df-57e9223d8a0e","value":["plannerControlRRT object"]}],"examples":[{"url":"plannercontrolrrt.copy.html#mw_5275fc87-2fdb-4a1f-9fcf-6b6196753368","open_command":"openExample('nav\/CreateCopyOfPlannerControlRRTObjectExample')","title":"Create Copy of plannerControlRRT Object"}],"seealso":[{"url":"plannercontrolrrt.html","name":"plannerControlRRT"},{"url":"plannercontrolrrt.plan.html","name":"plan"}]},{"href":"ref\/plannercontrolrrt.html","refentity":[{"type":"object","name":"plannerControlRRT"},{"type":"function","name":"plannerControlRRT","fcntype":"constructor"}],"refpurpose":"Control-based RRT planner","introduced":"R2021b","description":"The plannerControlRRT object is a rapidly exploring random tree (RRT) planner for solving kinematic and dynamic (kinodynamic) planning problems using controls.","syntaxgroup":[{"title":"","syntax":["controlPlanner = plannerControlRRT(propagator)","controlPlanner = plannerControlRRT(propagator,Name=Value)"]}],"classpropertygroup":[{"classproperty":[{"name":"StatePropagator","purpose":"State propagator","htmlid":"mw_02e7780d-7365-4233-8e7d-3da9c9bf18ad","value":["mobileRobotPropagator object","object of subclass of nav.StatePropagator"],"defaultvalue":"mobileRobotPropagator object"},{"name":"ContinueAfterGoalReached","purpose":"Optimization after reaching goal","htmlid":"mw_57a78f46-5d4d-4ca1-bbcd-0866b1972087","value":["false or 0","true or 1"],"defaultvalue":"false or 0"},{"name":"MaxPlanningTime","purpose":"Maximum time allowed for planning","htmlid":"mw_3c8fce65-ca7c-436e-bb3b-19a394617aa9","value":["Inf","positive scalar in seconds"],"defaultvalue":"Inf"},{"name":"MaxNumTreeNodes","purpose":"Maximum number of nodes in search tree","htmlid":"mw_025df7f0-8c5b-475f-988f-6f4acbf15cd4","value":["1e4","positive integer"],"defaultvalue":"1e4"},{"name":"MaxNumIteration","purpose":"Maximum number of iterations","htmlid":"mw_0439e052-8f03-4004-bcae-3eb42628b93f","value":["1e4","positive integer"],"defaultvalue":"1e4"},{"name":"NumGoalExtension","purpose":"Number of times to propagate towards goal","htmlid":"mw_b9911568-70ff-4990-b880-be68fc8b76ac","value":["1","positive integer"],"defaultvalue":"1"},{"name":"GoalBias","purpose":"Probability of choosing goal state during state sampling","htmlid":"mw_0caf0112-9f9b-4412-9ebc-7bae3a4eff29","value":["0.1","real scalar in range [0, 1]"],"defaultvalue":"0.1"},{"name":"GoalReachedFcn","purpose":"Callback function to determine whether goal is reached","htmlid":"mw_385220fd-625c-4330-819c-cb5c4e6f7d4f","value":["@plannerControlRRT.GoalReachedDefault","function handle"]}]}],"objectfunctions":[{"title":"","functions":[{"name":"plan","url":"plannercontrolrrt.plan.html","description":"Plan kinematically feasible path between two states"},{"name":"copy","url":"plannercontrolrrt.copy.html","description":"Creates deep copy of planner object"}]}],"examples":[{"url":"plannercontrolrrt.html#mw_da4f74a4-ef40-4050-9053-b3bd245d10a9","open_command":"openExample('nav\/PlanKinodynamicPathWithControlsForMobileRobotExample')","title":"Plan Kinodynamic Path with Controls for Mobile Robot"}],"seealso":[{"url":"plannerastargrid.html","name":"plannerAStarGrid"},{"url":"plannerbirrt.html","name":"plannerBiRRT"},{"url":"plannerhybridastar.html","name":"plannerHybridAStar"},{"url":"plannerrrt.html","name":"plannerRRT"},{"url":"plannerrrtstar.html","name":"plannerRRTStar"},{"url":"plannercontrolrrt.plan.html","name":"plan"},{"url":"plannercontrolrrt.copy.html","name":"copy"}]},{"href":"ref\/plannercontrolrrt.plan.html","refentity":[{"type":"function","name":"plan","fcntype":"instancemethod"},{"type":"method","name":"plannerControlRRT.plan","fcntype":"instancemethod"}],"refpurpose":"Plan kinematically feasible path between two states","introduced":"R2021b","description":"This MATLAB function tries to find a valid path between startState and goalState.","syntaxgroup":[{"title":"","syntax":["path = plan(planner,startState,goalState)","[___,solutionInfo] = plan(planner,startState,goalState)","[___] = plan(planner,startState,goalSampleFcn)"]}],"inputgroup":[{"title":"","inputs":[{"name":"planner","purpose":"Path planner","htmlid":"mw_c0be3a72-2814-4267-b71d-149b4bd35e33","value":["plannerControlRRT object"]},{"name":"startState","purpose":"Start state of path","htmlid":"mw_a7b66765-3adb-4764-807c-53a0fbd75129","value":["s-element vector"]},{"name":"goalState","purpose":"Goal state of path","htmlid":"mw_d7aba732-5a24-43d6-8e2b-c4625e921745","value":["s-element vector"]},{"name":"goalSampleFcn","purpose":"Goal state sample function","htmlid":"mw_e1e93f99-bdd2-4236-9b44-aff5a83118a3","value":["function handle"]}]}],"outputs":[{"name":"path","purpose":"Planned path information","htmlid":"mw_1fd0ba6a-6cd7-4572-b3ca-a1f1bd52e429","value":["navPathControl object"]},{"name":"solutionInfo","purpose":"Solution Information","htmlid":"mw_b702eaac-a705-4276-bc3b-f968f89e01c7","value":["structure"]}],"examples":[{"url":"plannercontrolrrt.plan.html#mw_d8331126-5a6c-4807-80e1-88734862c00e","open_command":"openExample('nav\/PlanKinodynamicPathWithControlsForMobileRobotExample')","title":"Plan Kinodynamic Path with Controls for Mobile Robot"}],"seealso":[{"url":"plannercontrolrrt.html","name":"plannerControlRRT"},{"url":"plannercontrolrrt.copy.html","name":"copy"},{"url":"shortenpath.html","name":"shortenpath"}]},{"href":"ref\/plannerhybridastar.html","refentity":[{"type":"object","name":"plannerHybridAStar"},{"type":"function","name":"plannerHybridAStar","fcntype":"constructor"}],"refpurpose":"Hybrid A* path planner","introduced":"R2019b","description":"The Hybrid A* path planner object generates a smooth path in a given 2-D map for vehicles with nonholonomic constraints.","syntaxgroup":[{"title":"","syntax":["planner = plannerHybridAStar(validator)","planner = plannerHybridAStar(validator,Name,Value)"]}],"classpropertygroup":[{"classproperty":[{"name":"StateValidator","purpose":"State validator for planning","htmlid":"mw_150ad80b-f957-469b-a197-457ab43d4c31","value":["validatorOccupancyMap object","validatorVehicleCostmap object"]}]},{"classproperty":[{"name":"MotionPrimitiveLength","purpose":"Length of motion primitives to be generated","htmlid":"mw_417aa4d2-ddb8-4114-a60d-f7778171a0ca","value":["ceil(sqrt(2)*map_CellSize)","positive scalar"],"defaultvalue":"ceil(sqrt(2)*map_CellSize)"}]},{"classproperty":[{"name":"MinTurningRadius","purpose":"Minimum turning radius of vehicle","htmlid":"mw_42facaef-7fbb-40e6-8c9c-5dc366a5581e","value":["(2*motion_primitive_length)\/pi","positive scalar"],"defaultvalue":"(2*motion_primitive_length)\/pi"}]},{"classproperty":[{"name":"NumMotionPrimitives","purpose":"Number of motion primitives to be generated","htmlid":"mw_d3f5b16d-ba24-491e-aee6-0526d3e042bf","value":["5","positive odd integer scalar greater than or equal to 3"],"defaultvalue":"5"}]},{"classproperty":[{"name":"ForwardCost","purpose":"Cost multiplier to travel in forward direction","htmlid":"mw_47060eb4-8f04-4ed2-9909-d6f31e05939d","value":["1","positive scalar"],"defaultvalue":"1"}]},{"classproperty":[{"name":"ReverseCost","purpose":"Cost multiplier to travel in reverse direction","htmlid":"mw_a346f6d9-1103-4920-9055-7e4b65a27c7e","value":["3","positive scalar"],"defaultvalue":"3"}]},{"classproperty":[{"name":"DirectionSwitchingCost","purpose":"Additive cost for switching direction of motion","htmlid":"mw_c53c030a-aacc-463e-b2d7-0c827d723ea1","value":["0","positive scalar"],"defaultvalue":"0"}]},{"classproperty":[{"name":"AnalyticExpansionInterval","purpose":"Interval for attempting analytic expansion from lowest cost node available","htmlid":"mw_1c801c4a-c155-435d-86e8-0195aea7b263","value":["5","positive integer scalar"],"defaultvalue":"5"}]},{"classproperty":[{"name":"InterpolationDistance","purpose":"Distance between interpolated poses in output path","htmlid":"mw_4d22acc6-76c5-4cce-a86b-a1cde4608ef1","value":["1","positive scalar"],"defaultvalue":"1"},{"name":"TransitionCostFcn","purpose":"Transition cost function","htmlid":"mw_38d8ad9a-3b74-4b3c-a46a-b6564936c275","value":["function handle"]},{"name":"AnalyticalExpansionCostFcn","purpose":"Cost for analytic expansion","htmlid":"mw_aed95a5c-8721-41e0-a3c2-68a55d314052","value":["function handle"]}]}],"objectfunctions":[{"title":"","functions":[{"name":"plan","url":"plannerhybridastar.plan.html","description":"Find obstacle-free path between two poses"},{"name":"show","url":"plannerhybridastar.show.html","description":"Visualize the planned path"}]}],"examples":[{"url":"plannerhybridastar.html#mw_00a594aa-d19a-4473-b21a-4dd80452070f","open_command":"openExample('nav\/ObstacleFreePathPlanningUsingHybridAStarExample')","title":"Obstacle-Free Path Planning Using Hybrid A Star"}],"seealso":[{"url":"validatoroccupancymap.html","name":"validatorOccupancyMap"},{"url":"validatorvehiclecostmap.html","name":"validatorVehicleCostmap"},{"url":"navpath.html","name":"navPath"}]},{"href":"ref\/plannerhybridastar.plan.html","refentity":[{"type":"function","name":"plan","fcntype":"instancemethod"},{"type":"method","name":"plannerHybridAStar.plan","fcntype":"instancemethod"}],"refpurpose":"Find obstacle-free path between two poses","introduced":"R2019b","description":"This MATLAB function computes an obstacle-free path between start and goal poses, specified as [x y theta] vectors, using the input plannerHybridAStar object.","syntaxgroup":[{"title":"","syntax":["path = plan(planner,start,goal)","[path,directions] = plan(planner,start,goal)","[path,directions,solutionInfo] = plan(planner,start,goal)","[___] = plan(___,\"SearchMode\",mode)"]}],"inputgroup":[{"title":"","inputs":[{"name":"planner","purpose":"Hybrid A* path planner","htmlid":"mw_7f99d65b-c4c5-4fbe-b8fb-fbb69461fd36","value":["plannerHybridAStar object"]},{"name":"start","purpose":"Start location of path","htmlid":"mw_a89e5b91-38ee-4b07-a4fe-24ccf4eeeb8f","value":["three-element vector"]},{"name":"goal","purpose":"Final location of path","htmlid":"mw_659a4997-de96-42fd-9fc2-18854dac5021","value":["three-element vector"]},{"name":"mode","purpose":"Search algorithm mode","htmlid":"mw_bc94e454-a134-475a-9139-8bb46f5008b8","value":["\"greedy\"","\"exhaustive\""],"defaultvalue":"\"greedy\""}]}],"outputs":[{"name":"path","purpose":"Obstacle-free path","htmlid":"mw_056247c9-a987-495f-a5d8-22a6d188a7c2","value":["navPath object"]},{"name":"directions","purpose":"Directions of motion","htmlid":"mw_04c2c93b-4a86-47d0-8146-e93134c174a9","value":["column vector of 1s (forward) and –1s (reverse)"]},{"name":"solutionInfo","purpose":"Solution Information","htmlid":"mw_6233408a-90f9-4d9a-8230-147ab6d0ec74","value":["structure"]}],"examples":[{"url":"plannerhybridastar.plan.html#mw_6412993c-ed40-4096-b027-1c004a370389","open_command":"openExample('nav\/ObstacleFreePathPlanningUsingHybridAStarExample')","title":"Obstacle-Free Path Planning Using Hybrid A Star"}],"seealso":[{"url":"validatoroccupancymap.html","name":"validatorOccupancyMap"},{"url":"validatorvehiclecostmap.html","name":"validatorVehicleCostmap"},{"url":"navpath.html","name":"navPath"},{"url":"shortenpath.html","name":"shortenpath"}]},{"href":"ref\/plannerhybridastar.show.html","refentity":[{"type":"function","name":"show","fcntype":"instancemethod"},{"type":"method","name":"plannerHybridAStar.show","fcntype":"instancemethod"}],"refpurpose":"Visualize the planned path","introduced":"R2019b","description":"This MATLAB function plots the Hybrid A* expansion tree and the planned path in the map.","syntaxgroup":[{"title":"","syntax":["show(planner)","show(planner,Name,Value)","axHandle = show(planner)"]}],"inputgroup":[{"title":"","inputs":[{"name":"planner","purpose":"Hybrid A* path planner","htmlid":"mw_54e1b985-1f3e-4baa-ad97-4927e82175e5","value":["plannerHybridAStar object"]}]},{"namevaluepairs":[{"title":"","inputs":[{"name":"Parent","purpose":"Axes used to plot path","htmlid":"mw_31ca4021-4207-4f4e-b14f-403d98c18583","value":["Axes object","UIAxes object"]},{"name":"Tree","purpose":"Display expansion tree","htmlid":"mw_02221395-635e-4f81-91b2-9944196f9265","value":["'on'","'off'"],"defaultvalue":"'on'"},{"name":"Path","purpose":"Display planned path","htmlid":"mw_d97c5efa-74d9-402e-a6f8-d6d961ed153e","value":["'on'","'off'"],"defaultvalue":"'on'"},{"name":"Positions","purpose":"Display start and goal points","htmlid":"mw_069c7a35-a430-4e38-b478-052c7b262298","value":["'both'","'start'","'goal'","'none'"],"defaultvalue":"'both'"},{"name":"HeadingLength","purpose":"Length of heading","htmlid":"mw_4cb7ab84-b0e9-42bb-a605-a10951ea0021","value":["0.4*InterpolationDistance","positive numeric scalar"],"defaultvalue":"0.4*InterpolationDistance"}]}]}],"outputs":[{"name":"axHandle","purpose":"Axes used to plot path","htmlid":"mw_e354a5a3-502e-4f87-8fa3-37a5f0ed1d34","value":["Axes object","UIAxes object"]}],"examples":[{"url":"plannerhybridastar.show.html#mw_1097d3c6-3aa0-4ec0-9a7c-6f66a2ca2337","open_command":"openExample('nav\/ObstacleFreePathPlanningUsingHybridAStarExample')","title":"Obstacle-Free Path Planning Using Hybrid A Star"}],"seealso":[{"url":"validatoroccupancymap.html","name":"validatorOccupancyMap"},{"url":"validatorvehiclecostmap.html","name":"validatorVehicleCostmap"},{"url":"navpath.html","name":"navPath"}]},{"href":"ref\/plannerlinespec.goal.html","refentity":[{"type":"function","name":"plannerLineSpec.goal","fcntype":"simple"}],"refpurpose":"Specifications for plotting goal state","introduced":"R2023b","description":"This MATLAB function specifies default color, line, and marker properties for plotting the goal state.","syntaxgroup":[{"title":"","syntax":["spec = plannerLineSpec.goal","spec = plannerLineSpec.goal(Name=Value)","[spec,structData] = plannerLineSpec.goal(___)"]}],"inputgroup":[{"namevaluepairs":[{"title":"","inputs":[{"name":"Color","purpose":"Line color","htmlid":"mw_d33ad548-09bb-44ac-b9e8-c6472e992a2d","value":["\"#0072BD\"","RGB triplet","character vector","string scalar"],"defaultvalue":"\"#0072BD\""},{"name":"LineStyle","purpose":"Line style","htmlid":"mw_d4841387-ed49-4696-afca-05950b18b43b","value":["\"none\"","\"-\"","\"--\"","\":\"","\"-.\""],"defaultvalue":"\"none\""},{"name":"LineWidth","purpose":"Line width","htmlid":"mw_f0d70fb7-3b48-40c4-a2ce-11ae0de1e5de","value":["1","positive numeric scalar"],"defaultvalue":"1"},{"name":"Marker","purpose":"Marker symbol","htmlid":"mw_8d444ccc-e86c-4a08-9d64-51630b39d21b","value":["\"pentagram\"","\".\"","\"o\"","\"+\"","\"*\"","\"x\"","..."],"defaultvalue":"\"pentagram\""},{"name":"MarkerSize","purpose":"Marker size","htmlid":"mw_2894909c-46ca-4a9e-b7dc-554036275a05","value":["15","positive numeric scalar"],"defaultvalue":"15"},{"name":"MarkerEdgeColor","purpose":"Marker outline color","htmlid":"mw_2d5410ca-3571-4d42-966e-64e231b2e129","value":["\"#0072BD\"","RGB triplet","character vector","string scalar"],"defaultvalue":"\"#0072BD\""},{"name":"MarkerFaceColor","purpose":"Marker fill color","htmlid":"mw_ea202717-cec6-46f9-bacb-380d47f64022","value":["\"#0072BD\"","RGB triplet","character vector","string scalar"],"defaultvalue":"\"#0072BD\""},{"name":"DisplayName","purpose":"Label to include in legend","htmlid":"mw_cf1c41f1-0313-4836-bf32-bac56c2824ec","value":["\"Goal\"","character vector","string scalar"],"defaultvalue":"\"Goal\""}]}]}],"outputs":[{"name":"spec","purpose":"Color, line, and marker specifications","htmlid":"mw_d6d5b466-9374-4833-8c79-b8427c14e06d","value":["cell array"]},{"name":"structData","purpose":"Specifications for the plot","htmlid":"mw_191a6fd8-ca60-4689-9262-55e399eab09a","value":["structure"]}],"examples":[{"url":"plannerlinespec.goal.html#mw_87269ac1-ce52-4e9d-9b1e-dc3d80e6d601","open_command":"openExample('nav\/VisualizeBiRRTPlannerOutputUsingDefaultPlotSpecExample')","title":"Visualize Bi-RRT Path Planner Output Using Predefined Plot Specifications"},{"url":"plannerlinespec.goal.html#mw_cb414aea-9671-45be-ac5c-233e784acf7d","open_command":"openExample('nav\/VisualizeRRTPlannerOutputUsingCustomPlotSpecExample')","title":"Visualize RRT Path Planner Output Using Custom Plot Specifications"}],"seealso":[{"url":"plannerlinespec.goaltree.html","name":"plannerLineSpec.goalTree"},{"url":"plannerlinespec.heading.html","name":"plannerLineSpec.heading"},{"url":"plannerlinespec.path.html","name":"plannerLineSpec.path"},{"url":"plannerlinespec.reversepath.html","name":"plannerLineSpec.reversePath"},{"url":"plannerlinespec.reversetree.html","name":"plannerLineSpec.reverseTree"},{"url":"plannerlinespec.start.html","name":"plannerLineSpec.start"},{"url":"plannerlinespec.state.html","name":"plannerLineSpec.state"},{"url":"plannerlinespec.tree.html","name":"plannerLineSpec.tree"}]},{"href":"ref\/plannerlinespec.goaltree.html","refentity":[{"type":"function","name":"plannerLineSpec.goalTree","fcntype":"simple"}],"refpurpose":"Specifications for plotting search tree from goal to start","introduced":"R2023b","description":"This MATLAB function specifies default color, line, and marker properties for plotting the search tree from goal to start.","syntaxgroup":[{"title":"","syntax":["spec = plannerLineSpec.goalTree","spec = plannerLineSpec.goalTree(Name=Value)","[spec,structData] = plannerLineSpec.goalTree(___)"]}],"inputgroup":[{"namevaluepairs":[{"title":"","inputs":[{"name":"Color","purpose":"Line color","htmlid":"mw_fcdfcfcb-74aa-439c-aaee-74e6dd61ef36","value":["\"#B3882A\"","RGB triplet","character vector","string scalar"],"defaultvalue":"\"#B3882A\""},{"name":"LineStyle","purpose":"Line style","htmlid":"mw_708bff94-3475-45ae-ae62-6ad839c7ecfd","value":["\"-\"","\"--\"","\":\"","\"-.\"","\"none\""],"defaultvalue":"\"-\""},{"name":"LineWidth","purpose":"Line width","htmlid":"mw_6d957cce-31b5-447d-b43f-72f33709024c","value":["1","positive numeric scalar"],"defaultvalue":"1"},{"name":"Marker","purpose":"Marker symbol","htmlid":"mw_6c4b9718-1b85-49e5-b73b-dca31993915d","value":["\".\"","\"o\"","\"+\"","\"*\"","\"x\"","..."],"defaultvalue":"\".\""},{"name":"MarkerSize","purpose":"Marker size","htmlid":"mw_b1c0faa9-017e-4e93-bc2a-6f86d4e1a002","value":["2","positive numeric scalar"],"defaultvalue":"2"},{"name":"MarkerEdgeColor","purpose":"Marker outline color","htmlid":"mw_8438f205-8bb3-4d91-a8d9-13be77dd02a7","value":["\"#B3882A\"","RGB triplet","character vector","string scalar"],"defaultvalue":"\"#B3882A\""},{"name":"MarkerFaceColor","purpose":"Marker fill color","htmlid":"mw_f4d31150-0e2f-4f8f-9062-c931e3537ff0","value":["\"#B3882A\"","RGB triplet","character vector","string scalar"],"defaultvalue":"\"#B3882A\""},{"name":"DisplayName","purpose":"Label to include in legend","htmlid":"mw_5bc9c43f-08b5-481b-9b59-e8102012390e","value":["\"Goal Tree\"","character vector","string scalar"],"defaultvalue":"\"Goal Tree\""}]}]}],"outputs":[{"name":"spec","purpose":"Color, line, and marker specifications","htmlid":"mw_0acb38fc-3afb-4ae6-bbab-b24e58c82df6","value":["cell array"]},{"name":"structData","purpose":"Specifications for the plot","htmlid":"mw_b78f5bb3-b314-4297-aa15-05efdf98f947","value":["structure"]}],"examples":[{"url":"plannerlinespec.goaltree.html#mw_0a372f28-638d-426f-af0d-2ccca0b061b4","open_command":"openExample('nav\/VisualizeBiRRTPlannerOutputUsingDefaultPlotSpecExample')","title":"Visualize Bi-RRT Path Planner Output Using Predefined Plot Specifications"}],"seealso":[{"url":"plannerlinespec.goal.html","name":"plannerLineSpec.goal"},{"url":"plannerlinespec.heading.html","name":"plannerLineSpec.heading"},{"url":"plannerlinespec.path.html","name":"plannerLineSpec.path"},{"url":"plannerlinespec.reversepath.html","name":"plannerLineSpec.reversePath"},{"url":"plannerlinespec.reversetree.html","name":"plannerLineSpec.reverseTree"},{"url":"plannerlinespec.start.html","name":"plannerLineSpec.start"},{"url":"plannerlinespec.state.html","name":"plannerLineSpec.state"},{"url":"plannerlinespec.tree.html","name":"plannerLineSpec.tree"}]},{"href":"ref\/plannerlinespec.heading.html","refentity":[{"type":"function","name":"plannerLineSpec.heading","fcntype":"simple"}],"refpurpose":"Specifications for plotting heading angle","introduced":"R2023b","description":"This MATLAB function specifies default color, line, and marker properties for plotting heading angle.","syntaxgroup":[{"title":"","syntax":["spec = plannerLineSpec.heading","spec = plannerLineSpec.heading(Name=Value)","[spec,structData] = plannerLineSpec.heading(___)"]}],"inputgroup":[{"namevaluepairs":[{"title":"","inputs":[{"name":"Color","purpose":"Line color","htmlid":"mw_c590057c-ebd8-49ac-afaa-cddf80ac166f","value":["\"#823400\"","RGB triplet","character vector","string scalar"],"defaultvalue":"\"#823400\""},{"name":"LineStyle","purpose":"Line style","htmlid":"mw_a537a03e-52a7-4f48-a0dc-87a422322c54","value":["\"-\"","\"--\"","\":\"","\"-.\"","\"none\""],"defaultvalue":"\"-\""},{"name":"LineWidth","purpose":"Line width","htmlid":"mw_10ec7b78-4457-4c9b-b2c0-980ffedee050","value":["2","positive numeric scalar"],"defaultvalue":"2"},{"name":"Marker","purpose":"Marker symbol","htmlid":"mw_65c457a1-474f-4026-be0b-b9ff5998108b","value":["\"o\"","\"+\"","\"*\"","\".\"","\"x\"","..."],"defaultvalue":"\"o\""},{"name":"MarkerSize","purpose":"Marker size","htmlid":"mw_a2719b53-6c79-454a-bbc5-3e1397779727","value":["2","positive numeric scalar"],"defaultvalue":"2"},{"name":"MarkerEdgeColor","purpose":"Marker outline color","htmlid":"mw_383412a5-25b1-415d-9550-8c2bc8adfe77","value":["\"#823400\"","RGB triplet","character vector","string scalar"],"defaultvalue":"\"#823400\""},{"name":"MarkerFaceColor","purpose":"Marker fill color","htmlid":"mw_3d307e52-357f-45fe-9904-92c79c6f1e38","value":["\"#823400\"","RGB triplet","character vector","string scalar"],"defaultvalue":"\"#823400\""},{"name":"DisplayName","purpose":"Label to include in legend","htmlid":"mw_efb284a1-83a6-40e6-9592-b6f9ff352189","value":["\"Heading\"","character vector","string scalar"],"defaultvalue":"\"Heading\""}]}]}],"outputs":[{"name":"spec","purpose":"Color, line, and marker specifications","htmlid":"mw_8e9bd05a-0d29-4f9c-b368-49a61b4c2739","value":["cell array"]},{"name":"structData","purpose":"Specifications for the plot","htmlid":"mw_265765a0-7813-47e2-b0c7-84b61a1a3f73","value":["structure"]}],"examples":[{"url":"plannerlinespec.heading.html#mw_5327b5cf-bbf3-48a5-afb3-98f993824638","open_command":"openExample('nav\/VisualizePRMPlannerOutputUsingPredefinedPlotSpecExample')","title":"Visualize PRM Path Planner Output Using Predefined Plot Specifications"}],"seealso":[{"url":"plannerlinespec.goaltree.html","name":"plannerLineSpec.goalTree"},{"url":"plannerlinespec.goal.html","name":"plannerLineSpec.goal"},{"url":"plannerlinespec.path.html","name":"plannerLineSpec.path"},{"url":"plannerlinespec.reversepath.html","name":"plannerLineSpec.reversePath"},{"url":"plannerlinespec.reversetree.html","name":"plannerLineSpec.reverseTree"},{"url":"plannerlinespec.start.html","name":"plannerLineSpec.start"},{"url":"plannerlinespec.state.html","name":"plannerLineSpec.state"},{"url":"plannerlinespec.tree.html","name":"plannerLineSpec.tree"}]},{"href":"ref\/plannerlinespec.path.html","refentity":[{"type":"function","name":"plannerLineSpec.path","fcntype":"simple"}],"refpurpose":"Specifications for plotting forward path","introduced":"R2023b","description":"This MATLAB function specifies default color, line, and marker properties for plotting the forward path.","syntaxgroup":[{"title":"","syntax":["spec = plannerLineSpec.path","spec = plannerLineSpec.path(Name=Value)","[spec,structData] = plannerLineSpec.path(___)"]}],"inputgroup":[{"namevaluepairs":[{"title":"","inputs":[{"name":"Color","purpose":"Line color","htmlid":"mw_f29992ec-2d90-4f40-a4ed-ad1325fb8a64","value":["\"#D95319\"","RGB triplet","character vector","string scalar"],"defaultvalue":"\"#D95319\""},{"name":"LineStyle","purpose":"Line style","htmlid":"mw_d88bb096-c463-4299-b203-9bfe42384d05","value":["\"-\"","\"--\"","\":\"","\"-.\"","\"none\""],"defaultvalue":"\"-\""},{"name":"LineWidth","purpose":"Line width","htmlid":"mw_aba87146-e05d-4c09-888e-67d68b1980ab","value":["3","positive numeric scalar"],"defaultvalue":"3"},{"name":"Marker","purpose":"Marker symbol","htmlid":"mw_3e1908e1-c245-4e1b-9205-128c8883a37d","value":["\".\"","\"o\"","\"+\"","\"*\"","\"x\"","..."],"defaultvalue":"\".\""},{"name":"MarkerSize","purpose":"Marker size","htmlid":"mw_3ae2b1c5-8823-42ec-b44a-08395b27d737","value":["5","positive numeric scalar"],"defaultvalue":"5"},{"name":"MarkerEdgeColor","purpose":"Marker outline color","htmlid":"mw_2d178f8f-f7f6-43cb-be00-e49da929fe48","value":["\"#D95319\"","RGB triplet","character vector","string scalar"],"defaultvalue":"\"#D95319\""},{"name":"MarkerFaceColor","purpose":"Marker fill color","htmlid":"mw_87af8413-bf8b-4b68-8cb6-10e62ca3044f","value":["\"#D95319\"","RGB triplet","character vector","string scalar"],"defaultvalue":"\"#D95319\""},{"name":"DisplayName","purpose":"Label to include in legend","htmlid":"mw_6f8b0f47-c50e-497a-8704-ebde1e29b274","value":["\"Path\"","character vector","string scalar"],"defaultvalue":"\"Path\""}]}]}],"outputs":[{"name":"spec","purpose":"Color, line, and marker specifications","htmlid":"mw_8a32878c-fa1e-48f1-8381-c9b649ad0052","value":["cell array"]},{"name":"structData","purpose":"Specifications for the plot","htmlid":"mw_e8b86524-ba66-4ee1-acc3-757aa9d96a5b","value":["structure"]}],"examples":[{"url":"plannerlinespec.path.html#mw_cd40f5e6-6834-4d01-93ba-57e0fb4e9515","open_command":"openExample('nav\/VisualizeBiRRTPlannerOutputUsingDefaultPlotSpecExample')","title":"Visualize Bi-RRT Path Planner Output Using Predefined Plot Specifications"},{"url":"plannerlinespec.path.html#mw_50ec50dd-c876-4041-a184-655420f70e1c","open_command":"openExample('nav\/VisualizeRRTPlannerOutputUsingCustomPlotSpecExample')","title":"Visualize RRT Path Planner Output Using Custom Plot Specifications"}],"seealso":[{"url":"plannerlinespec.goal.html","name":"plannerLineSpec.goal"},{"url":"plannerlinespec.goaltree.html","name":"plannerLineSpec.goalTree"},{"url":"plannerlinespec.heading.html","name":"plannerLineSpec.heading"},{"url":"plannerlinespec.reversepath.html","name":"plannerLineSpec.reversePath"},{"url":"plannerlinespec.reversetree.html","name":"plannerLineSpec.reverseTree"},{"url":"plannerlinespec.start.html","name":"plannerLineSpec.start"},{"url":"plannerlinespec.state.html","name":"plannerLineSpec.state"},{"url":"plannerlinespec.tree.html","name":"plannerLineSpec.tree"}]},{"href":"ref\/plannerlinespec.reversepath.html","refentity":[{"type":"function","name":"plannerLineSpec.reversePath","fcntype":"simple"}],"refpurpose":"Specifications for plotting reverse path","introduced":"R2023b","description":"This MATLAB function specifies default color, line, and marker properties for plotting the reverse path.","syntaxgroup":[{"title":"","syntax":["spec = plannerLineSpec.reversePath","spec = plannerLineSpec.reversePath(Name=Value)","[spec,structData] = plannerLineSpec.reversePath(___)"]}],"inputgroup":[{"namevaluepairs":[{"title":"","inputs":[{"name":"Color","purpose":"Line color","htmlid":"mw_61f9a3b3-f617-4d5c-8e3e-e8278b350c0d","value":["\"#7E2F8E\"","RGB triplet","character vector","string scalar"],"defaultvalue":"\"#7E2F8E\""},{"name":"LineStyle","purpose":"Line style","htmlid":"mw_0ede923c-99d7-4c17-8435-8f19f961027f","value":["\"-\"","\"--\"","\":\"","\"-.\"","\"none\""],"defaultvalue":"\"-\""},{"name":"LineWidth","purpose":"Line width","htmlid":"mw_79b5016b-a4b0-4726-acc0-1eceb4324a5a","value":["3","positive numeric scalar"],"defaultvalue":"3"},{"name":"Marker","purpose":"Marker symbol","htmlid":"mw_e07ea8b2-2dee-4b02-a7a4-07bd5d4b089a","value":["\".\"","\"o\"","\"+\"","\"*\"","\"x\"","..."],"defaultvalue":"\".\""},{"name":"MarkerSize","purpose":"Marker size","htmlid":"mw_c884a094-b758-459c-8f29-1669b95ea726","value":["5","positive numeric scalar"],"defaultvalue":"5"},{"name":"MarkerEdgeColor","purpose":"Marker outline color","htmlid":"mw_0ded2fba-abc6-49bf-9904-0cc2e0357b9f","value":["\"#7E2F8E\"","RGB triplet","character vector","string scalar"],"defaultvalue":"\"#7E2F8E\""},{"name":"MarkerFaceColor","purpose":"Marker fill color","htmlid":"mw_f9ca45a0-f367-4410-8361-a559b7ea02e0","value":["\"#7E2F8E\"","RGB triplet","character vector","string scalar"],"defaultvalue":"\"#7E2F8E\""},{"name":"DisplayName","purpose":"Label to include in legend","htmlid":"mw_66767d36-4834-476a-8261-8060601cdd9e","value":["\"Reverse Path\"","character vector","string scalar"],"defaultvalue":"\"Reverse Path\""}]}]}],"outputs":[{"name":"spec","purpose":"Color, line, and marker specifications","htmlid":"mw_6b2eaecc-2460-40bb-9599-1725bb5dc32a","value":["cell array"]},{"name":"structData","purpose":"Specifications for the plot","htmlid":"mw_282bf8d6-2c18-49cc-9962-c6672fe42684","value":["structure"]}],"seealso":[{"url":"plannerlinespec.goal.html","name":"plannerLineSpec.goal"},{"url":"plannerlinespec.goaltree.html","name":"plannerLineSpec.goalTree"},{"url":"plannerlinespec.heading.html","name":"plannerLineSpec.heading"},{"url":"plannerlinespec.path.html","name":"plannerLineSpec.path"},{"url":"plannerlinespec.reversetree.html","name":"plannerLineSpec.reverseTree"},{"url":"plannerlinespec.start.html","name":"plannerLineSpec.start"},{"url":"plannerlinespec.state.html","name":"plannerLineSpec.state"},{"url":"plannerlinespec.tree.html","name":"plannerLineSpec.tree"}]},{"href":"ref\/plannerlinespec.reversetree.html","refentity":[{"type":"function","name":"plannerLineSpec.reverseTree","fcntype":"simple"}],"refpurpose":"Specifications for plotting reverse search tree","introduced":"R2023b","description":"This MATLAB function specifies default color, line, and marker properties for plotting the reverse search tree.","syntaxgroup":[{"title":"","syntax":["spec = plannerLineSpec.reverseTree","spec = plannerLineSpec.reverseTree(Name=Value)","[spec,structData] = plannerLineSpec.reverseTree(___)"]}],"inputgroup":[{"namevaluepairs":[{"title":"","inputs":[{"name":"Color","purpose":"Line color","htmlid":"mw_d584fb00-a362-4c35-969d-4f499002ba4e","value":["\"#5E2296\"","RGB triplet","character vector","string scalar"],"defaultvalue":"\"#5E2296\""},{"name":"LineStyle","purpose":"Line style","htmlid":"mw_868095df-377c-4c42-b960-1d1286f54ad0","value":["\"-\"","\"--\"","\":\"","\"-.\"","\"none\""],"defaultvalue":"\"-\""},{"name":"LineWidth","purpose":"Line width","htmlid":"mw_f3543dff-0b12-477e-94da-b60f6c7d9c37","value":["1","positive numeric scalar"],"defaultvalue":"1"},{"name":"Marker","purpose":"Marker symbol","htmlid":"mw_6596db9a-a6d2-4af9-9e75-286860985621","value":["\".\"","\"o\"","\"+\"","\"*\"","\"x\"","..."],"defaultvalue":"\".\""},{"name":"MarkerSize","purpose":"Marker size","htmlid":"mw_1d7ee390-fa31-4ae3-9d23-10ed928a3572","value":["2","positive numeric scalar"],"defaultvalue":"2"},{"name":"MarkerEdgeColor","purpose":"Marker outline color","htmlid":"mw_332464f2-eb6e-45da-b87a-27671543d705","value":["\"#5E2296\"","RGB triplet","character vector","string scalar"],"defaultvalue":"\"#5E2296\""},{"name":"MarkerFaceColor","purpose":"Marker fill color","htmlid":"mw_0c5a3f56-08df-4934-bb77-7a74468f9b56","value":["\"#5E2296\"","RGB triplet","character vector","string scalar"],"defaultvalue":"\"#5E2296\""},{"name":"DisplayName","purpose":"Label to include in legend","htmlid":"mw_f6c615dd-88be-452d-bb2c-b9e844d4aff6","value":["\"Reverse Tree\"","character vector","string scalar"],"defaultvalue":"\"Reverse Tree\""}]}]}],"outputs":[{"name":"spec","purpose":"Color, line, and marker specifications","htmlid":"mw_fa76073e-9f87-4650-8af9-b8d7caefb1f4","value":["cell array"]},{"name":"structData","purpose":"Specifications for the plot","htmlid":"mw_37eaa08a-b8d8-422a-b1dd-c490ca60e187","value":["structure"]}],"seealso":[{"url":"plannerlinespec.goal.html","name":"plannerLineSpec.goal"},{"url":"plannerlinespec.goaltree.html","name":"plannerLineSpec.goalTree"},{"url":"plannerlinespec.heading.html","name":"plannerLineSpec.heading"},{"url":"plannerlinespec.path.html","name":"plannerLineSpec.path"},{"url":"plannerlinespec.reversepath.html","name":"plannerLineSpec.reversePath"},{"url":"plannerlinespec.start.html","name":"plannerLineSpec.start"},{"url":"plannerlinespec.state.html","name":"plannerLineSpec.state"},{"url":"plannerlinespec.tree.html","name":"plannerLineSpec.tree"}]},{"href":"ref\/plannerlinespec.start.html","refentity":[{"type":"function","name":"plannerLineSpec.start","fcntype":"simple"}],"refpurpose":"Specifications for plotting start state","introduced":"R2023b","description":"This MATLAB function specifies default color, line, and marker properties for plotting the start state.","syntaxgroup":[{"title":"","syntax":["spec = plannerLineSpec.start","spec = plannerLineSpec.start(Name=Value)","[spec,structData] = plannerLineSpec.start(___)"]}],"inputgroup":[{"namevaluepairs":[{"title":"","inputs":[{"name":"Color","purpose":"Line color","htmlid":"mw_3e4e2329-d62a-4e52-8495-db3b6963d2c4","value":["\"#0072BD\"","RGB triplet","character vector","string scalar"],"defaultvalue":"\"#0072BD\""},{"name":"LineStyle","purpose":"Line style","htmlid":"mw_4f6c3830-ae77-4b7a-a60c-a7c95dbd67c1","value":["\"none\"","\"-\"","\"--\"","\":\"","\"-.\"","..."],"defaultvalue":"\"none\""},{"name":"LineWidth","purpose":"Line width","htmlid":"mw_578e3d37-9038-452e-93bd-184bbf66cb2d","value":["1","positive numeric scalar"],"defaultvalue":"1"},{"name":"Marker","purpose":"Marker symbol","htmlid":"mw_88e490d7-7194-4393-b1d6-23d892711901","value":["\"square\"","\".\"","\"o\"","\"+\"","\"*\"","\"x\"","..."],"defaultvalue":"\"square\""},{"name":"MarkerSize","purpose":"Marker size","htmlid":"mw_238cd2ff-21fd-495e-ac86-4d2adeaab01b","value":["10","positive numeric scalar"],"defaultvalue":"10"},{"name":"MarkerEdgeColor","purpose":"Marker outline color","htmlid":"mw_c6e52551-9863-4dff-bcba-0cc077efeb15","value":["\"#0072BD\"","RGB triplet","character vector","string scalar"],"defaultvalue":"\"#0072BD\""},{"name":"MarkerFaceColor","purpose":"Marker fill color","htmlid":"mw_f7b3489e-b145-4169-8d49-48c787f1a943","value":["\"#0072BD\"","RGB triplet","character vector","string scalar"],"defaultvalue":"\"#0072BD\""},{"name":"DisplayName","purpose":"Label to include in legend","htmlid":"mw_e137eac9-244e-44b5-bb8e-e833213676b6","value":["\"Start\"","character vector","string scalar"],"defaultvalue":"\"Start\""}]}]}],"outputs":[{"name":"spec","purpose":"Color, line, and marker specifications","htmlid":"mw_ce6d3de5-7ed9-43aa-9f5d-fb9fad15e55e","value":["cell array"]},{"name":"structData","purpose":"Specifications for the plot","htmlid":"mw_5e9f9e85-9ce3-41f0-bb57-8ef7ea3ed2e6","value":["structure"]}],"examples":[{"url":"plannerlinespec.start.html#mw_e1178cd6-113f-4a20-9c36-fde304e38a61","open_command":"openExample('nav\/VisualizeBiRRTPlannerOutputUsingDefaultPlotSpecExample')","title":"Visualize Bi-RRT Path Planner Output Using Predefined Plot Specifications"},{"url":"plannerlinespec.start.html#mw_dd1f4ede-fd46-43e4-b75e-0ce3e80b14a1","open_command":"openExample('nav\/VisualizeRRTPlannerOutputUsingCustomPlotSpecExample')","title":"Visualize RRT Path Planner Output Using Custom Plot Specifications"}],"seealso":[{"url":"plannerlinespec.goal.html","name":"plannerLineSpec.goal"},{"url":"plannerlinespec.goaltree.html","name":"plannerLineSpec.goalTree"},{"url":"plannerlinespec.heading.html","name":"plannerLineSpec.heading"},{"url":"plannerlinespec.path.html","name":"plannerLineSpec.path"},{"url":"plannerlinespec.reversepath.html","name":"plannerLineSpec.reversePath"},{"url":"plannerlinespec.reversetree.html","name":"plannerLineSpec.reverseTree"},{"url":"plannerlinespec.state.html","name":"plannerLineSpec.state"},{"url":"plannerlinespec.tree.html","name":"plannerLineSpec.tree"}]},{"href":"ref\/plannerlinespec.state.html","refentity":[{"type":"function","name":"plannerLineSpec.state","fcntype":"simple"}],"refpurpose":"Specifications for plotting generic states","introduced":"R2023b","description":"This MATLAB function specifies default color, line, and marker properties for plotting the generic states in the input state space.","syntaxgroup":[{"title":"","syntax":["spec = plannerLineSpec.state","spec = plannerLineSpec.state(Name=Value)","[spec,structData] = plannerLineSpec.state(___)"]}],"inputgroup":[{"namevaluepairs":[{"title":"","inputs":[{"name":"Color","purpose":"Line color","htmlid":"mw_8c17c4b2-5f68-49d1-b9d5-255cc0fed253","value":["#104280","RGB triplet","character vector","string scalar"],"defaultvalue":"#104280"},{"name":"LineStyle","purpose":"Line style","htmlid":"mw_8561b779-e822-46ce-99af-d77cc25a4522","value":["\"none\"","\"-\"","\"--\"","\":\"","\"-.\""],"defaultvalue":"\"none\""},{"name":"LineWidth","purpose":"Line width","htmlid":"mw_67e539a9-c357-45c4-a9f4-41b03b4bc4ae","value":["1","positive numeric scalar"],"defaultvalue":"1"},{"name":"Marker","purpose":"Marker symbol","htmlid":"mw_49fdd861-49c5-4323-bb94-f7666c6548c6","value":["\"o\"","\".\"","\"+\"","\"*\"","\"x\"","..."],"defaultvalue":"\"o\""},{"name":"MarkerSize","purpose":"Marker size","htmlid":"mw_8a3b251f-7009-4b9b-b60d-ff64bf0aa3d8","value":["2","positive numeric scalar"],"defaultvalue":"2"},{"name":"MarkerEdgeColor","purpose":"Marker outline color","htmlid":"mw_e9af0196-a85f-436f-b268-365436e79eaf","value":["#104280","RGB triplet","character vector","string scalar"],"defaultvalue":"#104280"},{"name":"MarkerFaceColor","purpose":"Marker fill color","htmlid":"mw_4341de13-4945-4504-be9d-694a2e32cc9e","value":["#104280","RGB triplet","character vector","string scalar"],"defaultvalue":"#104280"},{"name":"DisplayName","purpose":"Label to include in legend","htmlid":"mw_b918df75-2ebe-4fa3-a97c-52393326d30a","value":["\"State\"","character vector","string scalar"],"defaultvalue":"\"State\""}]}]}],"outputs":[{"name":"spec","purpose":"Color, line, and marker specifications","htmlid":"mw_0185e852-d302-4f7e-ba0e-623a361c7ce0","value":["cell array"]},{"name":"structData","purpose":"Specifications for the plot","htmlid":"mw_eb5949a5-f85f-4289-b18d-b3456544ce1c","value":["structure"]}],"examples":[{"url":"plannerlinespec.state.html#mw_b114bb5b-2558-4574-b165-92015859a694","open_command":"openExample('nav\/VisualizePRMPlannerOutputUsingPredefinedPlotSpecExample')","title":"Visualize PRM Path Planner Output Using Predefined Plot Specifications"}],"seealso":[{"url":"plannerlinespec.goal.html","name":"plannerLineSpec.goal"},{"url":"plannerlinespec.goaltree.html","name":"plannerLineSpec.goalTree"},{"url":"plannerlinespec.heading.html","name":"plannerLineSpec.heading"},{"url":"plannerlinespec.path.html","name":"plannerLineSpec.path"},{"url":"plannerlinespec.reversepath.html","name":"plannerLineSpec.reversePath"},{"url":"plannerlinespec.reversetree.html","name":"plannerLineSpec.reverseTree"},{"url":"plannerlinespec.start.html","name":"plannerLineSpec.start"},{"url":"plannerlinespec.tree.html","name":"plannerLineSpec.tree"}]},{"href":"ref\/plannerlinespec.tree.html","refentity":[{"type":"function","name":"plannerLineSpec.tree","fcntype":"simple"}],"refpurpose":"Specifications for plotting forward search tree","introduced":"R2023b","description":"This MATLAB function specifies default color, line, and marker properties for plotting the forward search tree.","syntaxgroup":[{"title":"","syntax":["spec = plannerLineSpec.tree","spec = plannerLineSpec.tree(Name=Value)","[spec,structData] = plannerLineSpec.tree(___)"]}],"inputgroup":[{"namevaluepairs":[{"title":"","inputs":[{"name":"Color","purpose":"Line color","htmlid":"mw_6a80f065-9d32-4f07-ae44-a314d2b80798","value":["\"#FFAB66\"","RGB triplet","character vector","string scalar"],"defaultvalue":"\"#FFAB66\""},{"name":"LineStyle","purpose":"Line style","htmlid":"mw_168f8673-c44c-4bc0-a6d8-bf6b5acf7ca5","value":["\"-\"","\"--\"","\":\"","\"-.\"","\"none\""],"defaultvalue":"\"-\""},{"name":"LineWidth","purpose":"Line width","htmlid":"mw_e1e35537-7e18-4da8-8d30-7f4d8094316a","value":["1","positive numeric scalar"],"defaultvalue":"1"},{"name":"Marker","purpose":"Marker symbol","htmlid":"mw_a03004a4-90f1-471b-bf8c-bca7b10203c2","value":["\".\"","\"o\"","\"+\"","\"*\"","\"x\"","..."],"defaultvalue":"\".\""},{"name":"MarkerSize","purpose":"Marker size","htmlid":"mw_aaefe3fe-6a50-4728-91ef-7283d406d9f3","value":["2","positive numeric scalar"],"defaultvalue":"2"},{"name":"MarkerEdgeColor","purpose":"Marker outline color","htmlid":"mw_f2dee5b7-6502-4755-b043-7b37879b2834","value":["\"#FFAB66\"","RGB triplet","character vector","string scalar"],"defaultvalue":"\"#FFAB66\""},{"name":"MarkerFaceColor","purpose":"Marker fill color","htmlid":"mw_8909d314-8d17-45dd-b419-5f4ef606d490","value":["\"#FFAB66\"","RGB triplet","character vector","string scalar"],"defaultvalue":"\"#FFAB66\""},{"name":"DisplayName","purpose":"Label to include in legend","htmlid":"mw_2a7dec3b-97dd-4085-9344-36f399852778","value":["\"Tree\"","character vector","string scalar"],"defaultvalue":"\"Tree\""}]}]}],"outputs":[{"name":"spec","purpose":"Color, line, and marker specifications","htmlid":"mw_bd99ba26-943c-45bd-9b92-e360964dd84c","value":["cell array"]},{"name":"structData","purpose":"Specifications for the plot","htmlid":"mw_ab1913db-68d3-4075-b1eb-c97c225a4054","value":["structure"]}],"examples":[{"url":"plannerlinespec.tree.html#mw_95a842bd-b374-4278-9a2d-34b0df21bbe7","open_command":"openExample('nav\/VisualizeBiRRTPlannerOutputUsingDefaultPlotSpecExample')","title":"Visualize Bi-RRT Path Planner Output Using Predefined Plot Specifications"},{"url":"plannerlinespec.tree.html#mw_62d2467a-5a32-4b88-8e2c-cc15ca5a304f","open_command":"openExample('nav\/VisualizeRRTPlannerOutputUsingCustomPlotSpecExample')","title":"Visualize RRT Path Planner Output Using Custom Plot Specifications"}],"seealso":[{"url":"plannerlinespec.goal.html","name":"plannerLineSpec.goal"},{"url":"plannerlinespec.goaltree.html","name":"plannerLineSpec.goalTree"},{"url":"plannerlinespec.heading.html","name":"plannerLineSpec.heading"},{"url":"plannerlinespec.path.html","name":"plannerLineSpec.path"},{"url":"plannerlinespec.reversepath.html","name":"plannerLineSpec.reversePath"},{"url":"plannerlinespec.reversetree.html","name":"plannerLineSpec.reverseTree"},{"url":"plannerlinespec.start.html","name":"plannerLineSpec.start"},{"url":"plannerlinespec.state.html","name":"plannerLineSpec.state"}]},{"href":"ref\/plannermpnet.copy.html","refentity":[{"type":"function","name":"copy","fcntype":"instancemethod"},{"type":"method","name":"plannerMPNET.copy","fcntype":"instancemethod"}],"refpurpose":"Create deep copy of MPNet path planner object","introduced":"R2024a","description":"This MATLAB function creates a deep copy of the MPNet planner object with the same properties.","syntaxgroup":[{"title":"","syntax":["plannerCopy = copy(planner)"]}],"inputgroup":[{"title":"","inputs":[{"name":"planner","purpose":"Path planner","htmlid":"mw_deb809a2-9519-43fc-8591-bcb927b9faf5","value":["plannerMPNET object"]}]}],"outputs":[{"name":"plannerCopy","purpose":"Copy of path planner","htmlid":"mw_ac24d6c9-e76a-4bd9-b0d9-3c35178f0408","value":["plannerMPNET object"]}],"examples":[{"url":"plannermpnet.copy.html#mw_bb076ed7-b7f6-4608-96dd-e3cb6b6fb034","open_command":"openExample('nav\/ModifyClassicalPlanningApproachForMPNetPlannerExample')","title":"Modify Classical Planning Approach for MPNet Path Planner"}],"seealso":[{"url":"mpnetse2.html","name":"mpnetSE2"},{"url":"plannerrrt.html","name":"plannerRRT"},{"url":"plannerrrtstar.html","name":"plannerRRTStar"},{"url":"plannerbirrt.html","name":"plannerBiRRT"},{"url":"plannercontrolrrt.html","name":"plannerControlRRT"},{"url":"plannermpnet.html","name":"plannerMPNET"},{"url":"mpnetlayers.html","name":"mpnetLayers"},{"url":"samplestartgoal.html","name":"sampleStartGoal"},{"url":"plannermpnet.plan.html","name":"plan"}]},{"href":"ref\/plannermpnet.html","refentity":[{"type":"object","name":"plannerMPNET"},{"type":"function","name":"plannerMPNET","fcntype":"constructor"}],"refpurpose":"Create MPNet based bidirectional path planner","introduced":"R2024a","description":"The plannerMPNET object stores a pretrained motion planning networks (MPNet) to use for path planning.","syntaxgroup":[{"title":"","syntax":["planner = plannerMPNET(stateValidator,mpnet)","planner = plannerMPNET(___,Name=Value)"]}],"classpropertygroup":[{"classproperty":[{"name":"StateValidator","readonly":true,"purpose":"State validator for planner","htmlid":"mw_75e66e56-1262-4271-8566-948f9eb71958","value":["validatorVehicleCostmap","validatorOccupancyMap","object of a subclass from nav.StateValidator class"]},{"name":"MotionPlanningNetwork","readonly":true,"purpose":"Pretrained MPNet","htmlid":"mw_c7176ca5-d842-4497-be41-38cc8de50b95","value":["mpnetSE2 object"]},{"name":"MaxLearnedStates","purpose":"Maximum number of learned states","htmlid":"mw_b7a65c59-7e80-4055-96fe-fa8ed691b229","value":["50","positive scalar integer"],"defaultvalue":"50"},{"name":"ClassicalPlannerFcn","purpose":"Classical planner for planning","htmlid":"mw_148ab82c-c63b-4ef8-84da-f39634733b11","value":["plannerRRTStar","function handle"],"defaultvalue":"plannerRRTStar"}]}],"objectfunctions":[{"title":"","functions":[{"name":"plan","url":"plannermpnet.plan.html","description":"Find obstacle-free path between two states"},{"name":"copy","url":"plannermpnet.copy.html","description":"Create deep copy of MPNet path planner object"}]}],"examples":[{"url":"plannermpnet.html#mw_355f8a63-db06-48bd-b901-e8e3094f7a82","open_command":"openExample('nav\/PlanPathBetweenTwoStatesUsingMPNetPathPlannerExample')","title":"Plan Path Between Two States Using MPNet Path Planner"},{"url":"plannermpnet.html#mw_05e979d0-bc03-4f18-b26e-ef887d826b18","open_command":"openExample('nav\/ModifyClassicalPlanningApproachForMPNetPlannerExample')","title":"Modify Classical Planning Approach for MPNet Path Planner"},{"url":"plannermpnet.html#mw_7f4280bc-3bb2-4e0f-a4c1-f556ef10c5fb","open_command":"openExample('nav\/PlanPathInDubinsStateSpaceUsingMPNetPathPlannerExample')","title":"Plan Path in Dubins State Space Using MPNet Path Planner"},{"url":"plannermpnet.html#mw_2ef7810b-702c-4c71-8a36-5c9874feedd2","open_command":"openExample('nav\/TrainMPNetOnCustomDataForMotionPlanningExample')","title":"Train MPNet on Custom Data for Motion Planning"}],"seealso":[{"url":"mpnetse2.html","name":"mpnetSE2"},{"url":"plannerrrt.html","name":"plannerRRT"},{"url":"plannerrrtstar.html","name":"plannerRRTStar"},{"url":"plannerbirrt.html","name":"plannerBiRRT"},{"url":"plannercontrolrrt.html","name":"plannerControlRRT"},{"url":"mpnetlayers.html","name":"mpnetLayers"},{"url":"samplestartgoal.html","name":"sampleStartGoal"}]},{"href":"ref\/plannermpnet.plan.html","refentity":[{"type":"function","name":"plan","fcntype":"instancemethod"},{"type":"method","name":"plannerMPNET.plan","fcntype":"instancemethod"}],"refpurpose":"Find obstacle-free path between two states","introduced":"R2024a","description":"This MATLAB function computes an obstacle-free path between start and goal states using MPNet (Motion Planning Networks) path planner.","syntaxgroup":[{"title":"","syntax":["path = plan(planner,start,goal)","[path,solutionInfo] = plan(planner,start,goal)"]}],"inputgroup":[{"title":"","inputs":[{"name":"planner","purpose":"MPNet path planner","htmlid":"mw_89e6cc60-3aca-4292-a442-568dc1e0b5da","value":["plannerMPNET object"]},{"name":"start","purpose":"Start state","htmlid":"mw_8b635955-b694-4036-adfe-b3984146ad1b","value":["three-element vector"]},{"name":"goal","purpose":"Goal state","htmlid":"mw_a274adc6-2967-4854-a388-1f3535c4df98","value":["three-element vector"]}]}],"outputs":[{"name":"path","purpose":"Obstacle-free path","htmlid":"mw_836524d3-9c72-4d76-9c65-767a37f947d2","value":["navPath object"]},{"name":"solutionInfo","purpose":"Information about path and states in the path","htmlid":"mw_5e7aa86e-2d4e-427e-8c02-6a87a09f64cd","value":["structure"]}],"examples":[{"url":"plannermpnet.plan.html#mw_105ff194-b41a-46b9-9365-e3beadde18fa","open_command":"openExample('nav\/PlanPathBetweenTwoStatesUsingMPNetPathPlannerExample')","title":"Plan Path Between Two States Using MPNet Path Planner"},{"url":"plannermpnet.plan.html#mw_f0964b1a-b64d-4b82-81c4-3501ff42392b","open_command":"openExample('nav\/PlanPathInDubinsStateSpaceUsingMPNetPathPlannerExample')","title":"Plan Path in Dubins State Space Using MPNet Path Planner"}],"seealso":[{"url":"mpnetse2.html","name":"mpnetSE2"},{"url":"plannerrrt.html","name":"plannerRRT"},{"url":"plannerrrtstar.html","name":"plannerRRTStar"},{"url":"plannerbirrt.html","name":"plannerBiRRT"},{"url":"plannercontrolrrt.html","name":"plannerControlRRT"},{"url":"plannermpnet.html","name":"plannerMPNET"},{"url":"mpnetlayers.html","name":"mpnetLayers"},{"url":"samplestartgoal.html","name":"sampleStartGoal"},{"url":"plannermpnet.copy.html","name":"copy"},{"url":"shortenpath.html","name":"shortenpath"}]},{"href":"ref\/plannerprm.copy.html","refentity":[{"type":"function","name":"copy","fcntype":"instancemethod"},{"type":"method","name":"plannerPRM.copy","fcntype":"instancemethod"}],"refpurpose":"Create deep copy of plannerPRM object","introduced":"R2022a","description":"This MATLAB function creates a deep copy of the plannerPRM object with the same properties.","syntaxgroup":[{"title":"","syntax":["planner2 = copy(planner1)"]}],"inputgroup":[{"title":"","inputs":[{"name":"planner1","purpose":"Path planner","htmlid":"mw_0e7bc5ef-85b9-439e-b059-d9ba1f0c208c","value":["plannerPRM object"]}]}],"outputs":[{"name":"planner2","purpose":"Copy of path planner","htmlid":"mw_5eeeff2e-c919-4df6-8598-1228837a2d6b","value":["plannerPRM object"]}],"examples":[{"url":"plannerprm.copy.html#mw_75d15903-1eab-4a09-a94f-3770f5649101","open_command":"openExample('nav\/CreateCopyOfPlannerPRMObjectExample')","title":"Create Copy of plannerPRM Object"}],"seealso":[{"url":"plannerprm.html","name":"plannerPRM"},{"url":"plannerprm.graphdata.html","name":"graphData"},{"url":"plannerprm.plan.html","name":"plan"}]},{"href":"ref\/plannerprm.graphdata.html","refentity":[{"type":"function","name":"graphData","fcntype":"instancemethod"},{"type":"method","name":"plannerPRM.graphData","fcntype":"instancemethod"}],"refpurpose":"Retrieve graph as digraph object","introduced":"R2022a","description":"This MATLAB function retrieves graph as a digraph object.","syntaxgroup":[{"title":"","syntax":["graph = graphData(planner)"]}],"inputgroup":[{"title":"","inputs":[{"name":"planner","purpose":"Path planner","htmlid":"mw_0b91da47-4ae9-4452-add7-45b2c6459898","value":["plannerPRM object"]}]}],"outputs":[{"name":"graph","purpose":"Graph data","htmlid":"mw_3ba1123a-7a63-4d68-8365-1499776db988","value":["digraph object"]}],"examples":[{"url":"plannerprm.graphdata.html#mw_0170568d-9f77-4084-92af-d14b451975a1","open_command":"openExample('nav\/RetrieveGraphFromProbabilisticRoadmapPathPlannerExample')","title":"Retrieve Graph from Probabilistic Roadmap Path Planner"}],"seealso":[{"url":"plannerprm.html","name":"plannerPRM"},{"url":"..\/..\/matlab\/ref\/digraph.html","name":"digraph"},{"url":"plannerprm.copy.html","name":"copy"},{"url":"plannerprm.plan.html","name":"plan"}]},{"href":"ref\/plannerprm.html","refentity":[{"type":"object","name":"plannerPRM"},{"type":"function","name":"plannerPRM","fcntype":"constructor"}],"refpurpose":"Create probabilistic roadmap path planner","introduced":"R2022a","description":"The probabilistic roadmap path planner constructs a roadmap without start and goal states.","syntaxgroup":[{"title":"","syntax":["planner = plannerPRM(stateSpace,stateVal)","planner = plannerPRM(___,Name=Value)"]}],"classpropertygroup":[{"classproperty":[{"name":"StateSpace","purpose":"State space for planner","htmlid":"mw_ef08f604-e4d5-474f-8774-aaedca6386fc","value":["state space object"]},{"name":"StateValidator","purpose":"State validator for planner","htmlid":"mw_b8cea629-beb3-4f97-8703-d4ead6e8c7ca","value":["state validator object"]},{"name":"StateSampler","purpose":"State space sampler for sampling input space","htmlid":"mw_24408fff-132d-4c3d-bbe3-ccd9423e56a4","value":["stateSamplerUniform object","stateSamplerGaussian object","stateSamplerMPNET object","nav.StateSampler object"],"defaultvalue":"stateSamplerUniform object"},{"name":"MaxNumNodes","purpose":"Maximum number of nodes in graph","htmlid":"mw_052e019b-a3c3-4925-85bd-99d5c7ce53c2","value":["50","positive scalar"],"defaultvalue":"50"},{"name":"MaxConnectionDistance","purpose":"Maximum connection distance between two states","htmlid":"mw_baa5485c-d26e-435a-9c20-8e0584ac3970","value":["inf","positive scalar"],"defaultvalue":"inf"}]}],"objectfunctions":[{"title":"","functions":[{"name":"copy","url":"plannerprm.copy.html","description":"Create deep copy of plannerPRM object"},{"name":"graphData","url":"plannerprm.graphdata.html","description":"Retrieve graph as digraph object"},{"name":"plan","url":"plannerprm.plan.html","description":"Plan path between start and goal states on roadmap"}]}],"examples":[{"url":"plannerprm.html#mw_d2333c9e-742c-4efb-a020-ed62da0f2424","open_command":"openExample('nav\/PlanObstacleFreePathUsingProbabilisticRoadmapPathPlannerExample')","title":"Plan Obstacle-Free Path Using Probabilistic Roadmap Path Planner"},{"url":"plannerprm.html#mw_0d3e1263-2d08-4f14-9fc8-d60e2759c453","open_command":"openExample('nav\/PlanPathThrough3DOccupancyMapProbabilisticRoadmapPlannerExample')","title":"Plan Path Through 3-D Occupancy Map Using Probabilistic Roadmap Planner"}],"seealso":[{"url":"statespacese2.html","name":"stateSpaceSE2"},{"url":"statespacedubins.html","name":"stateSpaceDubins"},{"url":"statespacereedsshepp.html","name":"stateSpaceReedsShepp"},{"url":"validatoroccupancymap.html","name":"validatorOccupancyMap"},{"url":"validatorvehiclecostmap.html","name":"validatorVehicleCostmap"},{"url":"statesampleruniform.html","name":"stateSamplerUniform"},{"url":"plannerprm.copy.html","name":"copy"},{"url":"plannerprm.graphdata.html","name":"graphData"},{"url":"plannerprm.plan.html","name":"plan"}]},{"href":"ref\/plannerprm.plan.html","refentity":[{"type":"function","name":"plan","fcntype":"instancemethod"},{"type":"method","name":"plannerPRM.plan","fcntype":"instancemethod"}],"refpurpose":"Plan path between start and goal states on roadmap","introduced":"R2022a","description":"This MATLAB function returns an obstacle-free path as a navPath object between the start state and the goal state within a roadmap that contains a network graph of connected nodes.","syntaxgroup":[{"title":"","syntax":["path = plan(planner,startState,goalState)","[path,solutionInfo] = plan(planner,startState,goalState)"]}],"inputgroup":[{"title":"","inputs":[{"name":"planner","purpose":"Path planner","htmlid":"mw_01899755-9fe0-4960-be91-2642ed15ee18","value":["plannerPRM object"]},{"name":"startState","purpose":"Start state of the path","htmlid":"mw_42c3ecdd-bde4-4f04-89cc-f5c964e86873","value":["N-element real-valued row vector"]},{"name":"goalState","purpose":"Goal state of the path","htmlid":"mw_c366d2d0-4d50-4b64-9f1f-591e51dda08e","value":["N-element real-valued row vector"]}]}],"outputs":[{"name":"path","purpose":"Planned path information","htmlid":"mw_b9273fc2-8b90-44dc-802f-f9fa4aeb1c67","value":["navPath object"]},{"name":"solutionInfo","purpose":"Solution information","htmlid":"mw_3de6df9a-0d9e-4b5a-96ef-790763021dc1","value":["structure"]}],"examples":[{"url":"plannerprm.plan.html#mw_c4906921-b9da-456f-a674-084be286e799","open_command":"openExample('nav\/PlanObstacleFreePathUsingProbabilisticRoadmapPathPlannerExample')","title":"Plan Obstacle-Free Path Using Probabilistic Roadmap Path Planner"},{"url":"plannerprm.plan.html#mw_16778b8f-135d-4b67-8256-a846f6ed0e95","open_command":"openExample('nav\/PlanPathThrough3DOccupancyMapProbabilisticRoadmapPlannerExample')","title":"Plan Path Through 3-D Occupancy Map Using Probabilistic Roadmap Planner"}],"seealso":[{"url":"plannerprm.html","name":"plannerPRM"},{"url":"navpath.html","name":"navPath"},{"url":"plannerprm.copy.html","name":"copy"},{"url":"plannerprm.graphdata.html","name":"graphData"},{"url":"shortenpath.html","name":"shortenpath"}]},{"href":"ref\/plannerrrt.copy.html","refentity":[{"type":"function","name":"copy","fcntype":"instancemethod"},{"type":"method","name":"plannerRRT.copy","fcntype":"instancemethod"},{"type":"method","name":"plannerRRTStar.copy","fcntype":"instancemethod"}],"refpurpose":"Create copy of planner object","introduced":"R2018b","description":"This MATLAB function creates a planner object, planner2, form a planner object, planner1.","syntaxgroup":[{"title":"","syntax":["planner2 = copy(planner1)"]}],"inputgroup":[{"title":"","inputs":[{"name":"planner1","purpose":"Path planner","htmlid":"mw_c59de8b6-13f4-4c5c-8145-270a73bf88ff","value":["plannerRRT object","plannerRRTStar object"]}]}],"outputs":[{"name":"planner2","purpose":"Path planner","htmlid":"mw_01d2389f-20c1-49b3-b445-0cbfb42cbe5e","value":["plannerRRT object","plannerRRTStar object"]}],"examples":[{"url":"plannerrrt.copy.html#mw_fc11e4e6-c3b2-4956-93cf-9df8c68c1202","open_command":"openExample('nav\/CreateCopyOfPlannerRRTObjectExample')","title":"Create Copy of plannerRRT Object"}],"seealso":[{"url":"plannerrrt.html","name":"plannerRRT"},{"url":"plannerrrtstar.html","name":"plannerRRTStar"},{"url":"plannerrrt.plan.html","name":"plan"}]},{"href":"ref\/plannerrrt.html","refentity":[{"type":"object","name":"plannerRRT"},{"type":"function","name":"plannerRRT","fcntype":"constructor"}],"refpurpose":"Create an RRT planner for geometric planning","introduced":"R2019b","description":"The plannerRRT object creates a rapidly-exploring random tree (RRT) planner for solving geometric planning problems.","syntaxgroup":[{"title":"","syntax":["planner = plannerRRT(stateSpace,stateVal)","planner = plannerRRT(___,Name=Value)"]}],"classpropertygroup":[{"classproperty":[{"name":"StateSpace","purpose":"State space for planner","htmlid":"mw_c10a667f-57da-4538-abcc-07b82cd51dcc","value":["state space object"]},{"name":"StateValidator","purpose":"State validator for planner","htmlid":"mw_4dbe994d-0682-4140-b85f-dd21fe63e5eb","value":["state validator object"]},{"name":"StateSampler","purpose":"State space sampler for sampling input space","htmlid":"mw_f559795f-6cb2-4a22-9501-bfb1801ee2a3","value":["stateSamplerUniform object","stateSamplerGaussian object","stateSamplerMPNET object","nav.StateSampler object"],"defaultvalue":"stateSamplerUniform object"},{"name":"MaxNumTreeNodes","purpose":"Maximum number of nodes in the search tree","htmlid":"mw_8c1c5a58-882e-46e5-a25b-b9e63e1dc9c0","value":["1e4","positive integer"],"defaultvalue":"1e4"},{"name":"MaxIterations","purpose":"Maximum number of iterations","htmlid":"mw_b3bc9550-011d-41d3-aa1e-23a37f61ea88","value":["1e4","positive integer"],"defaultvalue":"1e4"},{"name":"MaxConnectionDistance","purpose":"Maximum length of motion","htmlid":"mw_d94a6ae3-1fde-4312-a4be-e7f4d3103e35","value":["0.1","positive scalar"],"defaultvalue":"0.1"},{"name":"GoalReachedFcn","purpose":"Callback function to evaluate whether goal is reached","htmlid":"mw_c712f73f-fa66-4832-97f7-7285438e9ceb","value":["@nav.algs.checkIfGoalIsReached","function handle"]},{"name":"GoalBias","purpose":"Probability of choosing goal state during state sampling","htmlid":"mw_eb1040cf-6a93-4b45-9d38-43928aeef845","value":["0.05","real scalar in range [0,1]"],"defaultvalue":"0.05"}]}],"objectfunctions":[{"title":"","functions":[{"name":"plan","url":"plannerrrt.plan.html","description":"Plan path between two states"},{"name":"copy","url":"plannerrrt.copy.html","description":"Create copy of planner object"}]}],"examples":[{"url":"plannerrrt.html#mw_0edfa51a-6e3d-4e8e-8dff-f3e320402d86","open_command":"openExample('nav\/PlanPathBetweenTwoStatesExample')","title":"Plan Path Between Two States"},{"url":"plannerrrt.html#mw_8267d006-db8d-4851-8362-dea162048032","open_command":"openExample('nav\/PlanPathThrough3DOccupancyMapUsingRRTPlannerExample')","title":"Plan Path Through 3-D Occupancy Map Using RRT Planner"}],"seealso":[{"url":"plannerrrtstar.html","name":"plannerRRTStar"},{"url":"plannerbirrt.html","name":"plannerBiRRT"},{"url":"statespacereedsshepp.html","name":"stateSpaceReedsShepp"},{"url":"statespacedubins.html","name":"stateSpaceDubins"},{"url":"statespacese2.html","name":"stateSpaceSE2"},{"url":"statespacese3.html","name":"stateSpaceSE3"},{"url":"validatoroccupancymap.html","name":"validatorOccupancyMap"},{"url":"validatorvehiclecostmap.html","name":"validatorVehicleCostmap"},{"url":"validatoroccupancymap3d.html","name":"validatorOccupancyMap3D"},{"url":"statesampleruniform.html","name":"stateSamplerUniform"},{"url":"plannerrrt.plan.html","name":"plan"},{"url":"plannerrrt.copy.html","name":"copy"}]},{"href":"ref\/plannerrrt.plan.html","refentity":[{"type":"function","name":"plan","fcntype":"instancemethod"},{"type":"method","name":"plannerRRT.plan","fcntype":"instancemethod"},{"type":"method","name":"plannerRRTStar.plan","fcntype":"instancemethod"}],"refpurpose":"Plan path between two states","introduced":"R2019b","description":"This MATLAB function returns a path from the start state to the goal state.","syntaxgroup":[{"title":"","syntax":["path = plan(planner,startState,goalState)","[path,solutionInfo] = plan(planner,startState,goalState)"]}],"inputgroup":[{"title":"","inputs":[{"name":"planner","purpose":"Path planner","htmlid":"mw_97bf5754-d772-4f88-ad2a-49a14380b906","value":["plannerRRT object","plannerRRTStar object"]},{"name":"startState","purpose":"Start state of the path","htmlid":"mw_9068a734-aaec-4f72-b146-a2e0be4a6638","value":["N-element real-valued vector"]},{"name":"goalState","purpose":"Goal state of the path","htmlid":"mw_811560e8-fc06-44af-bdce-8b1d08e4d29e","value":["N-element real-valued vector"]}]}],"outputs":[{"name":"path","purpose":"Object that holds planned path information","htmlid":"mw_dfea87b2-1f43-4fe8-b47f-371b494311ab","value":["navPath object"]},{"name":"solutionInfo","purpose":"Solution Information","htmlid":"mw_48f98475-cef2-4646-96be-b4b217d9dba1","value":["structure"]}],"examples":[{"url":"plannerrrt.plan.html#mw_10058baa-c7c7-4482-a31b-2426dcc84222","open_command":"openExample('nav\/PlanPathBetweenTwoStatesExample')","title":"Plan Path Between Two States"},{"url":"plannerrrt.plan.html#mw_a455c8c2-ae7b-4895-b4e7-491969b63df4","open_command":"openExample('nav\/PlanPathThrough3DOccupancyMapUsingRRTPlannerExample')","title":"Plan Path Through 3-D Occupancy Map Using RRT Planner"}],"seealso":[{"url":"navpath.html","name":"navPath"},{"url":"plannerrrt.html","name":"plannerRRT"},{"url":"plannerrrtstar.html","name":"plannerRRTStar"},{"url":"plannerrrt.copy.html","name":"copy"},{"url":"shortenpath.html","name":"shortenpath"}]},{"href":"ref\/plannerrrtstar.html","refentity":[{"type":"object","name":"plannerRRTStar"},{"type":"function","name":"plannerRRTStar","fcntype":"constructor"}],"refpurpose":"Create an optimal RRT path planner (RRT*)","introduced":"R2019b","description":"The plannerRRTStar object creates an asymptotically-optimal RRT planner, RRT*.","syntaxgroup":[{"title":"","syntax":["planner = plannerRRTStar(stateSpace,stateVal)","planner = plannerRRTStar(___,Name=Value)"]}],"classpropertygroup":[{"classproperty":[{"name":"StateSpace","purpose":"State space for planner","htmlid":"mw_e257d324-7943-4ffb-8107-bbed47ac1697","value":["state space object"]},{"name":"StateValidator","purpose":"State validator for planner","htmlid":"mw_72c3b114-c33d-499f-856b-76c6dff6f8f9","value":["state validator object"]},{"name":"StateSampler","purpose":"State space sampler for sampling input space","htmlid":"mw_3f59bcf7-6b23-481f-8f32-d5a7330b8228","value":["stateSamplerUniform object","stateSamplerGaussian object","stateSamplerMPNET object","nav.StateSampler object"],"defaultvalue":"stateSamplerUniform object"},{"name":"BallRadiusConstant","purpose":"Constant used to estimate the near neighbors search radius","htmlid":"mw_a79c824b-ae4a-47c1-8d25-37d7e6b0c44e","value":["100","positive scalar"],"defaultvalue":"100"},{"name":"ContinueAfterGoalReached","purpose":"Continue to optimize after goal is reached","htmlid":"mw_0c60878b-bd7c-40ac-8ca2-b763b2e0d781","value":["false","true"],"defaultvalue":"false"},{"name":"MaxNumTreeNodes","purpose":"Maximum number of nodes in the search tree","htmlid":"mw_351038b4-5135-44ed-964f-915cf5652260","value":["1e4","positive integer"],"defaultvalue":"1e4"},{"name":"MaxIterations","purpose":"Maximum number of iterations","htmlid":"mw_0ed194f8-baa5-4930-a266-243b3866426a","value":["1e4","positive integer"],"defaultvalue":"1e4"},{"name":"MaxConnectionDistance","purpose":"Maximum length of motion","htmlid":"mw_d2dddaa1-74ad-4c36-a897-41096a0da006","value":["0.1","positive scalar"],"defaultvalue":"0.1"},{"name":"GoalReachedFcn","purpose":"Callback function to determine whether goal is reached","htmlid":"mw_d9368d69-6e6f-4930-a905-b079e731fc14","value":["@nav.algs.checkIfGoalIsReached","function handle"]},{"name":"GoalBias","purpose":"Probability of choosing goal state during state sampling","htmlid":"mw_e9e73056-44cd-404d-9221-746d7dfea6c4","value":["0.05","real scalar in range [0,1]"],"defaultvalue":"0.05"}]}],"objectfunctions":[{"title":"","functions":[{"name":"plan","url":"plannerrrt.plan.html","description":"Plan path between two states"},{"name":"copy","url":"plannerrrt.copy.html","description":"Create copy of planner object"}]}],"examples":[{"url":"plannerrrtstar.html#mw_39a1edd2-0698-4262-9347-8eb735429192","open_command":"openExample('nav\/PlanOptimalPathBetweenTwoStatesExample')","title":"Plan Optimal Path Between Two States"},{"url":"plannerrrtstar.html#mw_9083e5a1-3524-4a84-ab65-aa30d61956f2","open_command":"openExample('nav\/PlanPathThrough3DOccupancyMapUsingRRTStarPlannerExample')","title":"Plan Path Through 3-D Occupancy Map Using RRT Star Planner"}],"seealso":[{"url":"plannerrrt.html","name":"plannerRRT"},{"url":"plannerbirrt.html","name":"plannerBiRRT"},{"url":"statespacereedsshepp.html","name":"stateSpaceReedsShepp"},{"url":"statespacedubins.html","name":"stateSpaceDubins"},{"url":"statespacese2.html","name":"stateSpaceSE2"},{"url":"statespacese3.html","name":"stateSpaceSE3"},{"url":"validatoroccupancymap.html","name":"validatorOccupancyMap"},{"url":"validatorvehiclecostmap.html","name":"validatorVehicleCostmap"},{"url":"validatoroccupancymap3d.html","name":"validatorOccupancyMap3D"},{"url":"statesampleruniform.html","name":"stateSamplerUniform"},{"url":"plannerrrt.plan.html","name":"plan"},{"url":"plannerrrt.copy.html","name":"copy"}]},{"href":"ref\/plottransforms.html","refentity":[{"type":"function","name":"plotTransforms","fcntype":"simple"}],"refpurpose":"Plot 3-D transforms from translations and rotations","introduced":"R2018b","description":"This MATLAB function draws transform frames in a 3-D figure window using the specified translations translations, and rotations, rotations.","syntaxgroup":[{"title":"","syntax":["ax = plotTransforms(translations,rotations)","ax = plotTransforms(transformations)","ax = plotTransforms(___,Name,Value)"]}],"inputgroup":[{"title":"","inputs":[{"name":"translations","purpose":"xyz-positions","htmlid":"mw_756561c2-b554-4aa9-ade4-ace059d7c774","value":["[x y z] vector","matrix of [x y z] vectors"]},{"name":"rotations","purpose":"Rotations of xyz-positions","htmlid":"mw_1e752887-1492-4302-876a-802bde85e46f","value":["quaternion array","matrix of [w x y z] quaternion vectors","N-element array of so2 or so3 objects"]},{"name":"transformations","purpose":"Transformation","htmlid":"mw_d15f71a3-1d77-4c0a-84df-d291f0a3f749","value":["se2 object","se3 object","M-element array of se2 or se3 objects"]}]},{"namevaluepairs":[{"title":"","inputs":[{"name":"FrameSize","purpose":"Size of frames and attached meshes","htmlid":"mw_fb8e5996-4d10-48ae-986e-b46f4150eb93","value":["positive numeric scalar"]},{"name":"FrameColor","purpose":"Color of frames","htmlid":"mw_4924b203-91d4-4250-b4b8-99512686fb8b","value":["\"rgb\"","RGB triplet","string scalar"],"defaultvalue":"\"rgb\""},{"name":"FrameAxisLabels","purpose":"xyz labels of coordinate frame","htmlid":"mw_f64dc21e-009c-479c-bd54-bd3390ae4244","value":["\"off\"","\"on\""],"defaultvalue":"\"off\""},{"name":"FrameLabel","purpose":"Frame labels","htmlid":"mw_eaaf4ecd-6b78-4bde-b602-b50dfc7988e9","value":["\"\"","string","N-element array of strings"],"defaultvalue":"\"\""},{"name":"AxisLabels","purpose":"xyz labels of plotting axes","htmlid":"mw_12b85249-76c2-42da-926b-a23c12265e35","value":["\"off\"","\"on\""],"defaultvalue":"\"off\""},{"name":"InertialZDirection","purpose":"Direction of positive z-axis of inertial frame","htmlid":"mw_bdc28904-73ec-4bcf-8230-55a2116ee194","value":["\"up\"","\"down\""],"defaultvalue":"\"up\""},{"name":"MeshFilePath","purpose":"File path of mesh file attached to frames","htmlid":"mw_2f843441-a327-4a2b-877f-36d6a46208e7","value":["character vector","string scalar"]},{"name":"MeshColor","purpose":"Color of attached mesh","htmlid":"mw_5193f585-bf42-4540-ba35-5c3b6d8a2815","value":["\"red\"","RGB triplet","string scalar"],"defaultvalue":"\"red\""},{"name":"View","purpose":"Plot view","htmlid":"mw_5b9e2574-f974-46d3-959f-883546a1967b","value":["\"3D\"","\"2D\"","three-element vector"],"defaultvalue":"\"3D\""},{"name":"Parent","purpose":"Axes used to plot transforms","htmlid":"mw_c45a95f3-1d72-476f-88ec-99a5e13ac574","value":["Axes object","UIAxes object"]}]}]}],"outputs":[{"name":"ax","purpose":"Axes used to plot transforms","htmlid":"mw_a4e68094-b060-4e84-b076-8c995e6f063b","value":["Axes object","UIAxes object"]}],"seealso":[{"url":"quaternion.html","name":"quaternion"},{"url":"hom2cart.html","name":"hom2cart"},{"url":"eul2quat.html","name":"eul2quat"},{"url":"tform2quat.html","name":"tform2quat"},{"url":"rotm2quat.html","name":"rotm2quat"},{"url":"se2.html","name":"se2"},{"url":"se3.html","name":"se3"},{"url":"so2.html","name":"so2"},{"url":"so3.html","name":"so3"}]},{"href":"ref\/polygondecomposition.html","refentity":[{"type":"function","name":"polygonDecomposition","fcntype":"simple"}],"refpurpose":"Decompose polygon into nonoverlapping polygons","introduced":"R2025a","description":"This MATLAB function decomposes a polygon into a set of nonoverlapping polygons whose union is equivalent to the original polygon using the boustrophedon decomposition algorithm.","syntaxgroup":[{"title":"","syntax":["polySet = polygonDecomposition(poly)","[polySet,solnInfo] = polygonDecomposition(poly)","[___,solnInfo] = polygonDecomposition(poly,options)"]}],"inputgroup":[{"title":"","inputs":[{"name":"poly","purpose":"Polygon to decompose","htmlid":"mw_2627446b-ac6c-4264-8d97-4737ff07a09d","value":["polyshape object"]},{"name":"options","purpose":"Decomposition algorithm options","htmlid":"mw_4b8f8d14-a6aa-4fd9-b2f3-c6e093db34e9","value":["boustrophedonOptions object"],"defaultvalue":"boustrophedonOptions object"}]}],"outputs":[{"name":"polySet","purpose":"Decomposed nonoverlapping polygons","htmlid":"mw_df2d3db8-6805-48f7-81f4-a20caa5af5ba","value":["N-element array of polyshape objects"]},{"name":"solnInfo","purpose":"Decomposition solution information","htmlid":"mw_93fc45e2-4b42-40d1-a7e7-67acfda46ac3","value":["structure"]}],"examples":[{"url":"polygondecomposition.html#mw_22c400df-3575-4f50-8b85-84cd01d7ebbd","open_command":"openExample('nav\/DecomposePolygonIntoSetOfNonoverlappingPolygonsExample')","title":"Decompose Polygon into Set of Nonoverlapping Polygons"},{"url":"polygondecomposition.html#mw_05833d0d-916c-4447-94ed-cc72c97f2df2","open_command":"openExample('nav\/SpecifyBoustrophedonOptionsForPolygonDecompositionExample')","title":"Specify Options for Polygon Decomposition"},{"url":"polygondecomposition.html#mw_a1111095-1e70-4f4c-a455-8c16177c6169","open_command":"openExample('shared_nav_uav\/DecomposePolygonsForUAVCoveragePlanningExample')","title":"Decompose Polygons for UAV Coverage Planning"}],"seealso":[{"url":"boustrophedonoptions.html","name":"boustrophedonOptions"},{"url":"..\/..\/matlab\/ref\/polyshape.html","name":"polyshape"}]},{"href":"ref\/posegraph.addpointlandmark.html","refentity":[{"type":"function","name":"addPointLandmark","fcntype":"instancemethod"},{"type":"method","name":"poseGraph.addPointLandmark","fcntype":"instancemethod"},{"type":"method","name":"poseGraph3D.addPointLandmark","fcntype":"instancemethod"}],"refpurpose":"Add landmark point node to pose graph","introduced":"R2021a","description":"This MATLAB function adds a landmark point node, based on the input position measurement that connects to the last pose node in the pose graph.","syntaxgroup":[{"title":"","syntax":["addPointLandmark(poseGraph,measurement)","addPointLandmark(poseGraph,measurement,infoMat)","addPointLandmark(poseGraph,measurement,infoMat,poseNodeID)","addPointLandmark(poseGraph,measurement,infoMat,poseNodeID,pointNodeID)","[nodePair,edgeID] = addPointLandmark(___)"]}],"inputgroup":[{"title":"","inputs":[{"name":"poseGraph","purpose":"Pose graph","htmlid":"mw_b4cfd4d1-1ad9-4ac3-88aa-bc95d1c586e4","value":["poseGraph object","poseGraph3D object"]},{"name":"measurement","purpose":"Relative position of landmark point","htmlid":"mw_ee5e8a37-9d70-4f74-ab7c-af42b0a0f04b","value":["two-element vector of form [x y]","three-element vector of form [x y z]"]},{"name":"infoMat","purpose":"Information matrix for landmark","htmlid":"mw_454b8e77-2a3c-4073-88f0-92141a5b7168_sep_mw_0283b635-222d-4d06-a186-81d97403612b","value":["three-element vector","six-element vector"]},{"name":"poseNodeID","purpose":"Pose node to attach from","htmlid":"mw_c39267c5-7194-4b2a-b157-05ca274936a6","value":["positive integer"]},{"name":"pointNodeID","purpose":"Landmark point node to attach to","htmlid":"mw_4b63f213-fd30-469c-be61-29667839e65d","value":["positive integer"]}]}],"outputs":[{"name":"nodePair","purpose":"Edge node pair in pose graph","htmlid":"mw_16b6877a-0455-49cf-9340-7c66ec47687d","value":["two-element vector"]},{"name":"edgeID","purpose":"ID of added edge","htmlid":"mw_55e8c407-fb43-49d2-a6b9-fed1de79443f","value":["positive integer"]}],"examples":[{"url":"posegraph.addpointlandmark.html#mw_e79a4c39-f764-46f9-a861-f4503c4831a4","open_command":"openExample('nav\/AddLandmarkPointNodeToPoseGraphExample')","title":"Add Landmark Point Node to Pose Graph"}],"seealso":[{"url":"optimizeposegraph.html","name":"optimizePoseGraph"},{"url":"posegraph.findedgeid.html","name":"findEdgeID"},{"url":"posegraph.edgenodepairs.html","name":"edgeNodePairs"},{"url":"posegraph.edgeconstraints.html","name":"edgeConstraints"},{"url":"posegraph.nodeestimates.html","name":"nodeEstimates"},{"url":"posegraph.removeedges.html","name":"removeEdges"},{"url":"posegraph.html","name":"poseGraph"},{"url":"posegraph3d.html","name":"poseGraph3D"},{"url":"lidarslam.html","name":"lidarSLAM"}]},{"href":"ref\/posegraph.addrelativepose.html","refentity":[{"type":"function","name":"addRelativePose","fcntype":"instancemethod"},{"type":"method","name":"poseGraph.addRelativePose","fcntype":"instancemethod"},{"type":"method","name":"poseGraph3D.addRelativePose","fcntype":"instancemethod"}],"refpurpose":"Add relative pose to pose graph","introduced":"R2019b","description":"This MATLAB function creates a node based on the input measurement that connects to the last pose node in the pose graph.","syntaxgroup":[{"title":"","syntax":["addRelativePose(poseGraph,measurement)","addRelativePose(poseGraph,measurement,infoMat)","addRelativePose(poseGraph,measurement,infoMat,fromNodeID)","addRelativePose(poseGraph,measurement,infoMat,fromNodeID,toNodeID)","[nodePair,edgeID] = addRelativePose(___)"]}],"inputgroup":[{"title":"","inputs":[{"name":"poseGraph","purpose":"Pose graph","htmlid":"d126e175653","value":["poseGraph object","poseGraph3D object"]},{"name":"measurement","purpose":"Relative pose between nodes","htmlid":"d126e175683","value":["[x y theta] vector","[x y z qw qx qy qz] vector"]},{"name":"infoMat","purpose":"Information matrix","htmlid":"mw_32cae891-7154-4361-9e77-405c8153f0a1_sep_mw_0283b635-222d-4d06-a186-81d97403612b","value":["six-element vector","21-element vector"]},{"name":"fromNodeID","purpose":"Node to attach from","htmlid":"d126e175781","value":["positive integer"]},{"name":"toNodeID","purpose":"Node to attach to","htmlid":"d126e175807","value":["positive integer"]}]}],"outputs":[{"name":"nodePair","purpose":"Edge node pair in pose graph","htmlid":"mw_aa315529-0487-4b34-9983-3afc333cb6ec","value":["two-element vector"]},{"name":"edgeID","purpose":"ID of added edge","htmlid":"d126e175852","value":["positive integer"]}],"examples":[{"url":"posegraph.addrelativepose.html#mw_25a15c3e-1a0d-48ff-a174-95f1535861e3","open_command":"openExample('nav\/IdentifyAndRemoveSpuriousLoopClosuresFromPoseGraphExample')","title":"Identify and Remove Spurious Loop Closures from Pose Graph"}],"seealso":[{"url":"optimizeposegraph.html","name":"optimizePoseGraph"},{"url":"posegraph.findedgeid.html","name":"findEdgeID"},{"url":"posegraph.edgenodepairs.html","name":"edgeNodePairs"},{"url":"posegraph.edgeconstraints.html","name":"edgeConstraints"},{"url":"posegraph.nodeestimates.html","name":"nodeEstimates"},{"url":"posegraph.removeedges.html","name":"removeEdges"},{"url":"posegraph.html","name":"poseGraph"},{"url":"posegraph3d.html","name":"poseGraph3D"},{"url":"lidarslam.html","name":"lidarSLAM"}]},{"href":"ref\/posegraph.copy.html","refentity":[{"type":"function","name":"copy","fcntype":"instancemethod"},{"type":"method","name":"poseGraph.copy","fcntype":"instancemethod"},{"type":"method","name":"poseGraph3D.copy","fcntype":"instancemethod"}],"refpurpose":"Create copy of pose graph","introduced":"R2019b","description":"This MATLAB function creates a deep copy of the pose graph object with the same properties.","syntaxgroup":[{"title":"","syntax":["poseGraph2 = copy(poseGraph1)"]}],"inputgroup":[{"title":"","inputs":[{"name":"poseGraph1","purpose":"Pose graph","htmlid":"mw_183cfd94-315b-46b9-8b5d-5db333014b26","value":["poseGraph object","poseGraph3D object"]}]}],"outputs":[{"name":"poseGraph2","purpose":"Copy of pose graph","htmlid":"mw_754d1222-c8ac-41c6-b694-3c6e4a7dbea0","value":["poseGraph object","poseGraph3D object"]}],"examples":[{"url":"posegraph.copy.html#mw_6aba706a-b0be-41bf-a938-56e952f01070","open_command":"openExample('nav\/CreateCopyOfPoseGraphExample')","title":"Create Copy of Pose Graph"}],"seealso":[{"url":"posegraph.html","name":"poseGraph"},{"url":"posegraph3d.html","name":"poseGraph3D"}]},{"href":"ref\/posegraph.edgeconstraints.html","refentity":[{"type":"function","name":"edgeConstraints","fcntype":"instancemethod"},{"type":"method","name":"poseGraph.edgeConstraints","fcntype":"instancemethod"},{"type":"method","name":"poseGraph3D.edgeConstraints","fcntype":"instancemethod"}],"refpurpose":"Edge constraints in pose graph","introduced":"R2019b","description":"This MATLAB function lists all edge constraints in the specified pose graph as a relative pose.","syntaxgroup":[{"title":"","syntax":["measurements = edgeConstraints(poseGraph)","[measurements,infoMats] = edgeConstraints(poseGraph)","[measurements,infoMats] = edgeConstraints(poseGraph,edgeIDs)"]}],"inputgroup":[{"title":"","inputs":[{"name":"poseGraph","purpose":"Pose graph","htmlid":"d126e176212","value":["poseGraph object","poseGraph3D object"]}]},{"title":"","inputs":[{"name":"edgeIDs","purpose":"Edge IDs","htmlid":"d126e176244","value":["vector of positive integers"]}]}],"outputs":[{"name":"measurements","purpose":"Measurements between nodes","htmlid":"d126e176265","value":["n-by-3 matrix","n-by-7 matrix"]},{"name":"infoMats","purpose":"Information matrices","htmlid":"d126e176332","value":["n-by-6 matrix","n-by-21 matrix"]}],"examples":[{"url":"posegraph.edgeconstraints.html#mw_8afe6a94-9657-4e77-837c-886454eb0833","open_command":"openExample('nav\/IdentifyAndRemoveSpuriousLoopClosuresFromPoseGraphExample')","title":"Identify and Remove Spurious Loop Closures from Pose Graph"}],"seealso":[{"url":"posegraph.edgenodepairs.html","name":"edgeNodePairs"},{"url":"optimizeposegraph.html","name":"optimizePoseGraph"},{"url":"posegraph.addrelativepose.html","name":"addRelativePose"},{"url":"posegraph.findedgeid.html","name":"findEdgeID"},{"url":"posegraph.nodeestimates.html","name":"nodeEstimates"},{"url":"posegraph.removeedges.html","name":"removeEdges"},{"url":"posegraph.html","name":"poseGraph"},{"url":"posegraph3d.html","name":"poseGraph3D"},{"url":"lidarslam.html","name":"lidarSLAM"}]},{"href":"ref\/posegraph.edgenodepairs.html","refentity":[{"type":"function","name":"edgeNodePairs","fcntype":"instancemethod"},{"type":"method","name":"poseGraph.edgeNodePairs","fcntype":"instancemethod"},{"type":"method","name":"poseGraph3D.edgeNodePairs","fcntype":"instancemethod"}],"refpurpose":"Edge node pairs in pose graph","introduced":"R2019b","description":"This MATLAB function returns all edges in the specified pose graph as a list of node ID pairs.","syntaxgroup":[{"title":"","syntax":["nodePairs = edgeNodePairs(poseGraph)","nodePairs = edgeNodePairs(poseGraph,edgeIDs)"]}],"inputgroup":[{"title":"","inputs":[{"name":"poseGraph","purpose":"Pose graph","htmlid":"d126e176567","value":["poseGraph object","poseGraph3D object"]}]},{"title":"","inputs":[{"name":"edgeIDs","purpose":"Edge IDs","htmlid":"d126e176599","value":["vector of positive integers"]}]}],"outputs":[{"name":"nodePairs","purpose":"Edge node pairs in pose graph","htmlid":"d126e176620","value":["n-by-2 matrix"]}],"examples":[{"url":"posegraph.edgenodepairs.html#mw_f8972ffe-91a4-4d0a-a7fb-d0ed56f43c10","open_command":"openExample('nav\/IdentifyAndRemoveSpuriousLoopClosuresFromPoseGraphExample')","title":"Identify and Remove Spurious Loop Closures from Pose Graph"}],"seealso":[{"url":"optimizeposegraph.html","name":"optimizePoseGraph"},{"url":"posegraph.addrelativepose.html","name":"addRelativePose"},{"url":"posegraph.findedgeid.html","name":"findEdgeID"},{"url":"posegraph.edgeconstraints.html","name":"edgeConstraints"},{"url":"posegraph.nodeestimates.html","name":"nodeEstimates"},{"url":"posegraph.removeedges.html","name":"removeEdges"},{"url":"posegraph.html","name":"poseGraph"},{"url":"posegraph3d.html","name":"poseGraph3D"},{"url":"lidarslam.html","name":"lidarSLAM"}]},{"href":"ref\/posegraph.edgeresidualerrors.html","refentity":[{"type":"function","name":"edgeResidualErrors","fcntype":"instancemethod"},{"type":"method","name":"poseGraph.edgeResidualErrors","fcntype":"instancemethod"},{"type":"method","name":"poseGraph3D.edgeResidualErrors","fcntype":"instancemethod"}],"refpurpose":"Compute pose graph edge residual errors","introduced":"R2020b","description":"This MATLAB function returns the residual errors for each edge in the pose graph with the current pose node estimates.","syntaxgroup":[{"title":"","syntax":["resErrorVec = edgeResidualErrors(poseGraphObj)"]}],"inputgroup":[{"title":"","inputs":[{"name":"poseGraphObj","purpose":"Pose graph","htmlid":"mw_c22f9a89-0357-4cdf-9842-64df15d4ab79","value":["poseGraph object","poseGraph3D object"]}]}],"outputs":[{"name":"resErrorVec","purpose":"Edge residual errors for pose graph","htmlid":"mw_76ac6b61-9891-4657-a84e-1a187f20158b","value":["vector of positive scalars"]}],"examples":[{"url":"posegraph.edgeresidualerrors.html#mw_0ca6a0ff-2bf8-4a37-8829-a9a60f81eacd","open_command":"openExample('nav\/OptimizePoseGraphAndTrimLoopClosuresFor2DPoseGraphsExample')","title":"Optimize and Trim Loop Closures for 2-D Pose Graphs"}],"seealso":[{"url":"posegraph.edgenodepairs.html","name":"edgeNodePairs"},{"url":"optimizeposegraph.html","name":"optimizePoseGraph"},{"url":"posegraph.addrelativepose.html","name":"addRelativePose"},{"url":"posegraph.findedgeid.html","name":"findEdgeID"},{"url":"posegraph.nodeestimates.html","name":"nodeEstimates"},{"url":"posegraph.removeedges.html","name":"removeEdges"},{"url":"posegraph.html","name":"poseGraph"},{"url":"posegraph3d.html","name":"poseGraph3D"},{"url":"lidarslam.html","name":"lidarSLAM"}]},{"href":"ref\/posegraph.findedgeid.html","refentity":[{"type":"function","name":"findEdgeID","fcntype":"instancemethod"},{"type":"method","name":"poseGraph.findEdgeID","fcntype":"instancemethod"},{"type":"method","name":"poseGraph3D.findEdgeID","fcntype":"instancemethod"}],"refpurpose":"Find edge ID of edge","introduced":"R2019b","description":"This MATLAB function finds the edge ID for a specified edge.","syntaxgroup":[{"title":"","syntax":["edgeID = findEdgeID(poseGraph,nodePairs)"]}],"inputgroup":[{"title":"","inputs":[{"name":"poseGraph","purpose":"Pose graph","htmlid":"d126e177037","value":["poseGraph object","poseGraph3D object"]}]},{"title":"","inputs":[{"name":"nodePairs","purpose":"Edge node pairs in pose graph","htmlid":"d126e177069","value":["two-element vector"]}]}],"outputs":[{"name":"edgeID","purpose":"Edge ID","htmlid":"d126e177090","value":["positive integer","vector"]}],"examples":[{"url":"posegraph.findedgeid.html#mw_644b0aa7-c569-4345-b6d2-6c31c790e80e","open_command":"openExample('nav\/RemoveLoopClosureEdgesFromPoseGraphExample')","title":"Remove Loop Closure Edges from Pose Graph"}],"seealso":[{"url":"optimizeposegraph.html","name":"optimizePoseGraph"},{"url":"posegraph.addrelativepose.html","name":"addRelativePose"},{"url":"posegraph.edgenodepairs.html","name":"edgeNodePairs"},{"url":"posegraph.edgeconstraints.html","name":"edgeConstraints"},{"url":"posegraph.nodeestimates.html","name":"nodeEstimates"},{"url":"posegraph.removeedges.html","name":"removeEdges"},{"url":"posegraph.html","name":"poseGraph"},{"url":"posegraph3d.html","name":"poseGraph3D"},{"url":"lidarslam.html","name":"lidarSLAM"}]},{"href":"ref\/posegraph.html","refentity":[{"type":"object","name":"poseGraph"},{"type":"function","name":"poseGraph","fcntype":"constructor"}],"refpurpose":"Create 2-D pose graph","introduced":"R2019b","description":"A poseGraph object stores information for a 2-D pose graph representation.","syntaxgroup":[{"title":"","syntax":["poseGraph = poseGraph","poseGraph = poseGraph('MaxNumEdges',maxEdges,'MaxNumNodes',maxNodes)"]}],"classpropertygroup":[{"classproperty":[{"name":"NumNodes","readonly":true,"purpose":"Number of nodes in pose graph","htmlid":"d126e174802","value":["1","positive integer"],"defaultvalue":"1"},{"name":"NumEdges","readonly":true,"purpose":"Number of edges in pose graph","htmlid":"d126e174831","value":["0","nonnegative integer"],"defaultvalue":"0"},{"name":"NumLoopClosureEdges","readonly":true,"purpose":"Number of loop closures","htmlid":"d126e174851","value":["0","nonnegative integer"],"defaultvalue":"0"},{"name":"LoopClosureEdgeIDs","readonly":true,"purpose":"Loop closure edge IDs","htmlid":"d126e174874","value":["vector"]},{"name":"LandmarkNodeIDs","readonly":true,"purpose":"Landmark node IDs","htmlid":"mw_7bfdc4cd-f8b1-432f-8743-79dd153d593c","value":["vector"]}]}],"objectfunctions":[{"title":"","functions":[{"name":"addPointLandmark","url":"posegraph.addpointlandmark.html","description":"Add landmark point node to pose graph"},{"name":"addRelativePose","url":"posegraph.addrelativepose.html","description":"Add relative pose to pose graph"},{"name":"copy","url":"posegraph.copy.html","description":"Create copy of pose graph"},{"name":"edgeNodePairs","url":"posegraph.edgenodepairs.html","description":"Edge node pairs in pose graph"},{"name":"edgeConstraints","url":"posegraph.edgeconstraints.html","description":"Edge constraints in pose graph"},{"name":"edgeResidualErrors","url":"posegraph.edgeresidualerrors.html","description":"Compute pose graph edge residual errors"},{"name":"findEdgeID","url":"posegraph.findedgeid.html","description":"Find edge ID of edge"},{"name":"nodeEstimates","url":"posegraph.nodeestimates.html","description":"Poses of nodes in pose graph"},{"name":"removeEdges","url":"posegraph.removeedges.html","description":"Remove loop closure edges from graph"},{"name":"show","url":"posegraph.show.html","description":"Plot pose graph"}]}],"examples":[{"url":"posegraph.html#mw_0f83e8b1-340f-48d0-af08-0c78baaa1dde","open_command":"openExample('nav\/OptimizeA2DPoseGraphExample')","title":"Optimize a 2-D Pose Graph"}],"seealso":[{"url":"optimizeposegraph.html","name":"optimizePoseGraph"},{"url":"posegraph.addrelativepose.html","name":"addRelativePose"},{"url":"posegraph.addpointlandmark.html","name":"addPointLandmark"},{"url":"posegraph.show.html","name":"show"},{"url":"lidarslam.html","name":"lidarSLAM"},{"url":"posegraph3d.html","name":"poseGraph3D"}]},{"href":"ref\/posegraph.nodeestimates.html","refentity":[{"type":"function","name":"nodeEstimates","fcntype":"instancemethod"},{"type":"method","name":"poseGraph.nodeEstimates","fcntype":"instancemethod"},{"type":"method","name":"poseGraph3D.nodeEstimates","fcntype":"instancemethod"}],"refpurpose":"Poses of nodes in pose graph","introduced":"R2019b","description":"This MATLAB function lists all poses in the specified pose graph.","syntaxgroup":[{"title":"","syntax":["measurements = nodeEstimates(poseGraph)","measurements = nodeEstimates(poseGraph,nodeIDs)"]}],"inputgroup":[{"title":"","inputs":[{"name":"poseGraph","purpose":"Pose graph","htmlid":"mw_cd04180d-8cc6-412d-8ebe-eb947f0e90b4","value":["poseGraph object","poseGraph3D object"]}]},{"title":"","inputs":[{"name":"nodeIDs","purpose":"Node IDs","htmlid":"mw_fa292d80-b08a-48a7-9ce5-c22a10dd783c","value":["positive integer","vector of positive integers"]}]}],"outputs":[{"name":"measurements","purpose":"Measurements between nodes","htmlid":"mw_23e02b89-6dec-4004-a22f-4db1205fccb8","value":["n-by-3 matrix","n-by-7 matrix"]}],"examples":[{"url":"posegraph.nodeestimates.html#mw_a70e4b2a-c793-4a08-bd22-dbb3fed99b02","open_command":"openExample('nav\/AddLandmarkPointNodeToPoseGraphExample')","title":"Add Landmark Point Node to Pose Graph"}],"seealso":[{"url":"optimizeposegraph.html","name":"optimizePoseGraph"},{"url":"posegraph.addrelativepose.html","name":"addRelativePose"},{"url":"posegraph.edgenodepairs.html","name":"edgeNodePairs"},{"url":"posegraph.findedgeid.html","name":"findEdgeID"},{"url":"posegraph.removeedges.html","name":"removeEdges"},{"url":"posegraph.edgeconstraints.html","name":"edgeConstraints"},{"url":"posegraph.html","name":"poseGraph"},{"url":"posegraph3d.html","name":"poseGraph3D"},{"url":"lidarslam.html","name":"lidarSLAM"}]},{"href":"ref\/posegraph.removeedges.html","refentity":[{"type":"function","name":"removeEdges","fcntype":"instancemethod"},{"type":"method","name":"poseGraph.removeEdges","fcntype":"instancemethod"},{"type":"method","name":"poseGraph3D.removeEdges","fcntype":"instancemethod"}],"refpurpose":"Remove loop closure edges from graph","introduced":"R2019b","description":"This MATLAB function removes loop closure edges, landmark edges, or duplicate incremental edges from the pose graph.","syntaxgroup":[{"title":"","syntax":["removeEdges(poseGraph,edgeIDs)"]}],"inputgroup":[{"title":"","inputs":[{"name":"poseGraph","purpose":"Pose graph","htmlid":"d126e177537","value":["poseGraph object","poseGraph3D object"]}]},{"title":"","inputs":[{"name":"edgeIDs","purpose":"Edge IDs","htmlid":"d126e177569","value":["vector of positive integers"]}]}],"examples":[{"url":"posegraph.removeedges.html#mw_b3ba5d7b-f473-40b1-a782-1c2e531ad36a","open_command":"openExample('nav\/RemoveLoopClosureEdgesFromPoseGraphExample')","title":"Remove Loop Closure Edges from Pose Graph"}],"seealso":[{"url":"optimizeposegraph.html","name":"optimizePoseGraph"},{"url":"posegraph.findedgeid.html","name":"findEdgeID"},{"url":"posegraph.addrelativepose.html","name":"addRelativePose"},{"url":"posegraph.edgenodepairs.html","name":"edgeNodePairs"},{"url":"posegraph.edgeconstraints.html","name":"edgeConstraints"},{"url":"posegraph.nodeestimates.html","name":"nodeEstimates"},{"url":"posegraph.html","name":"poseGraph"},{"url":"posegraph3d.html","name":"poseGraph3D"},{"url":"lidarslam.html","name":"lidarSLAM"}]},{"href":"ref\/posegraph.show.html","refentity":[{"type":"function","name":"show","fcntype":"instancemethod"},{"type":"method","name":"poseGraph.show","fcntype":"instancemethod"},{"type":"method","name":"poseGraph3D.show","fcntype":"instancemethod"}],"refpurpose":"Plot pose graph","introduced":"R2019b","description":"This MATLAB function plots the specified pose graph in a figure.","syntaxgroup":[{"title":"","syntax":["show(poseGraph)","show(poseGraph,Name,Value)","axes = show(___)"]}],"inputgroup":[{"title":"","inputs":[{"name":"poseGraph","purpose":"Pose graph","htmlid":"d126e177804","value":["poseGraph object","poseGraph3D object"]}]},{"namevaluepairs":[{"title":"","inputs":[{"name":"Parent","purpose":"Axes used to plot pose graph","htmlid":"d126e177857","value":["Axes object","UIAxes object"]},{"name":"IDs","purpose":"Display of IDs on pose graph","htmlid":"d126e177893","value":["'loopclosures'","'all'","'nodes'","'off'"],"defaultvalue":"'loopclosures'"}]}]}],"outputs":[{"name":"axes","purpose":"Axes used to plot the map","htmlid":"d126e177944","value":["Axes object","UIAxes object"]}],"examples":[{"url":"posegraph.show.html#d126e177702","open_command":"openExample('nav\/OptimizeA2DPoseGraphExample')","title":"Optimize a 2-D Pose Graph"},{"url":"posegraph.show.html#mw_63a6dd09-6f2c-42d2-88d4-5da0c5d88403","open_command":"openExample('nav\/OptimizeA3DPoseGraphExample')","title":"Optimize a 3-D Pose Graph"}],"seealso":[{"url":"optimizeposegraph.html","name":"optimizePoseGraph"},{"url":"posegraph.addrelativepose.html","name":"addRelativePose"},{"url":"posegraph.html","name":"poseGraph"},{"url":"posegraph3d.html","name":"poseGraph3D"},{"url":"lidarslam.html","name":"lidarSLAM"}]},{"href":"ref\/posegraph3d.html","refentity":[{"type":"object","name":"poseGraph3D"},{"type":"function","name":"poseGraph3D","fcntype":"constructor"}],"refpurpose":"Create 3-D pose graph","introduced":"R2019b","description":"A poseGraph3D object stores information for a 3-D pose graph representation.","syntaxgroup":[{"title":"","syntax":["poseGraph = poseGraph3D","poseGraph = poseGraph3D('MaxNumEdges',maxEdges,'MaxNumNodes',maxNodes)"]}],"classpropertygroup":[{"classproperty":[{"name":"NumNodes","readonly":true,"purpose":"Number of nodes in pose graph","htmlid":"mw_f2ba887b-faa4-4e6c-a618-e52f304aaa53","value":["1","positive integer"],"defaultvalue":"1"},{"name":"NumEdges","readonly":true,"purpose":"Number of edges in pose graph","htmlid":"d126e178152","value":["0","nonnegative integer"],"defaultvalue":"0"},{"name":"NumLoopClosureEdges","readonly":true,"purpose":"Number of loop closures","htmlid":"d126e178172","value":["0","nonnegative integer"],"defaultvalue":"0"},{"name":"LoopClosureEdgeIDs","readonly":true,"purpose":"Loop closure edge IDs","htmlid":"d126e178195","value":["vector"]},{"name":"LandmarkNodeIDs","readonly":true,"purpose":"Landmark node IDs","htmlid":"mw_0cc464ed-c876-499d-aaf9-ab99dcf53931","value":["vector"]}]}],"objectfunctions":[{"title":"","functions":[{"name":"addPointLandmark","url":"posegraph.addpointlandmark.html","description":"Add landmark point node to pose graph"},{"name":"addRelativePose","url":"posegraph.addrelativepose.html","description":"Add relative pose to pose graph"},{"name":"copy","url":"posegraph.copy.html","description":"Create copy of pose graph"},{"name":"edgeNodePairs","url":"posegraph.edgenodepairs.html","description":"Edge node pairs in pose graph"},{"name":"edgeConstraints","url":"posegraph.edgeconstraints.html","description":"Edge constraints in pose graph"},{"name":"edgeResidualErrors","url":"posegraph.edgeresidualerrors.html","description":"Compute pose graph edge residual errors"},{"name":"findEdgeID","url":"posegraph.findedgeid.html","description":"Find edge ID of edge"},{"name":"nodeEstimates","url":"posegraph.nodeestimates.html","description":"Poses of nodes in pose graph"},{"name":"removeEdges","url":"posegraph.removeedges.html","description":"Remove loop closure edges from graph"},{"name":"show","url":"posegraph.show.html","description":"Plot pose graph"}]}],"examples":[{"url":"posegraph3d.html#mw_ff7b3a16-9a73-4c76-8149-7139598f8682","open_command":"openExample('nav\/OptimizeA3DPoseGraphExample')","title":"Optimize a 3-D Pose Graph"}],"seealso":[{"url":"optimizeposegraph.html","name":"optimizePoseGraph"},{"url":"posegraph.addrelativepose.html","name":"addRelativePose"},{"url":"posegraph.addpointlandmark.html","name":"addPointLandmark"},{"url":"posegraph.html","name":"poseGraph"},{"url":"lidarslam.html","name":"lidarSLAM"}]},{"href":"ref\/posegraphsolveroptions.html","refentity":[{"type":"function","name":"poseGraphSolverOptions","fcntype":"simple"}],"refpurpose":"Solver options for pose graph optimization","introduced":"R2020b","description":"This MATLAB function returns the set of solver options with default values for the specified pose graph solver type.","syntaxgroup":[{"title":"","syntax":["solverOptions = poseGraphSolverOptions(solverType)"]}],"inputgroup":[{"title":"","inputs":[{"name":"solverType","purpose":"Pose graph solver type","htmlid":"mw_7a803168-9736-4b16-b8a9-22993b2a20f3","value":["'builtin-trust-region'","'g2o-levenberg-marquardt'"],"defaultvalue":"'builtin-trust-region'"}]}],"outputs":[{"name":"solverOptions","purpose":"Pose graph solver options","htmlid":"mw_cbe6162a-8bc6-4ac8-9fd6-5847023fe2c9","value":["poseGraphSolverOptions parameters"]}],"examples":[{"url":"posegraphsolveroptions.html#mw_b8697739-b838-4cdf-aaef-5b0864839ac5","open_command":"openExample('nav\/OptimizePoseGraphAndTrimLoopClosuresFor2DPoseGraphsExample')","title":"Optimize and Trim Loop Closures for 2-D Pose Graphs"}],"seealso":[{"url":"trimloopclosures.html","name":"trimLoopClosures"},{"url":"posegraph.edgeresidualerrors.html","name":"edgeResidualErrors"},{"url":"posegraph.edgeresidualerrors.html","name":"edgeResidualErrors"},{"url":"posegraph.removeedges.html","name":"removeEdges"},{"url":"posegraph.edgenodepairs.html","name":"edgeNodePairs"},{"url":"posegraph.edgeconstraints.html","name":"edgeConstraints"},{"url":"posegraph.html","name":"poseGraph"},{"url":"posegraph3d.html","name":"poseGraph3D"},{"url":"lidarslam.html","name":"lidarSLAM"}]},{"href":"ref\/poseplot.html","refentity":[{"type":"function","name":"poseplot","fcntype":"simple"}],"refpurpose":"3-D pose plot","introduced":"R2021b","description":"The poseplot function plots a specified 3-D pose (position and orientation) as a patch with an xyz-frame at the patch origin.","syntaxgroup":[{"title":"","syntax":["poseplot","poseplot(orientation)","poseplot(___,position)","poseplot(___,frame)","poseplot(___,Name=Value)","poseplot(ax,___)","p = poseplot(___)"]}],"inputgroup":[{"title":"","inputs":[{"name":"orientation","purpose":"Orientation","htmlid":"mw_2304c8a8-31b8-4098-b1e4-34fdf8e0c5b7","value":["quaternion object","3-by-3 orthonormal matrix"]},{"name":"position","purpose":"Position of pose plot","htmlid":"mw_8b6a9edc-2d2e-4150-b7f0-be859fe41fa4","value":["three-element real-valued vector"]},{"name":"frame","purpose":"Navigation frame of pose plot","htmlid":"mw_c0557753-6e2b-4c03-9e24-e56944401039","value":["\"NED\"","\"ENU\""],"defaultvalue":"\"NED\""},{"name":"ax","purpose":"Parent axes of pose plot","htmlid":"mw_7d4de4d7-0991-4513-a16b-32ad4be7d362","value":["Axes object"]}]},{"namevaluepairs":[{"title":"","inputs":[{"name":"Orientation","purpose":"Orientation of pose plot","htmlid":"mw_fe8adc20-0f06-4184-a24c-d5a4221e4f6f_sep_mw_79b90029-af75-4a5f-82cc-9706f6809ac3","value":["quaternion object","rotation matrix"],"defaultvalue":"quaternion object"},{"name":"Position","purpose":"Position of pose plot","htmlid":"mw_fe8adc20-0f06-4184-a24c-d5a4221e4f6f_sep_mw_3fb13726-4f58-4df6-9cde-452bef16ddb0","value":["[0 0 0]","three-element real-valued vector"],"defaultvalue":"[0 0 0]"},{"name":"MeshFileName","purpose":"Name of STL mesh file","htmlid":"mw_fe8adc20-0f06-4184-a24c-d5a4221e4f6f_sep_mw_573a2b2a-7e42-47b8-aee4-1d957009a70c","value":["string scalar","character vector"]},{"name":"ScaleFactor","purpose":"Scale factor of pose plot","htmlid":"mw_fe8adc20-0f06-4184-a24c-d5a4221e4f6f_sep_mw_d0e8207c-c6e8-4381-b548-86f060b1e0de","value":["1","nonnegative scalar"],"defaultvalue":"1"},{"name":"PatchFaceColor","purpose":"Patch face color","htmlid":"mw_fe8adc20-0f06-4184-a24c-d5a4221e4f6f_sep_mw_d7096168-38b1-4e55-80c7-206565549ab0","value":["[0 0 0]","RGB triplet","hexadecimal color code","\"r\"","\"g\"","\"b\"","..."],"defaultvalue":"[0 0 0]"},{"name":"PatchFaceAlpha","purpose":"Patch face transparency","htmlid":"mw_fe8adc20-0f06-4184-a24c-d5a4221e4f6f_sep_mw_0379245f-b0fc-4ccf-8f52-6ea252f08950","value":["0.1","scalar in range [0, 1]"],"defaultvalue":"0.1"}]}]}],"outputs":[{"name":"p","purpose":"Pose patch object","htmlid":"mw_8b0c807e-303d-4564-9bff-8c456c0f37a3","value":["PosePatch object"]}],"examples":[{"url":"poseplot.html#mw_d087e509-aa5e-4c09-b0eb-eb6226cd62a5","open_command":"openExample('shared_positioning\/VisualizePoseUsingPoseplotExample')","title":"Visualize Pose Using poseplot"},{"url":"poseplot.html#mw_15e714c0-8592-40a8-a3a2-c9495eb6e34f","open_command":"openExample('shared_positioning\/AnimatePoseUsingPoseplotExample')","title":"Animate Pose Using poseplot"},{"url":"poseplot.html#mw_6fb53a40-ae22-466b-8818-3ca6e3cfbf0b","open_command":"openExample('shared_positioning\/ShowPoseUsingMeshesExample')","title":"Show Poses with Meshes"}],"seealso":[{"url":"positioning.graphics.chart.posepatch-properties.html","name":"PosePatch Properties"}]},{"href":"ref\/positioning.graphics.chart.posepatch-properties.html","refentity":[{"type":"properties","name":"PosePatch"},{"type":"properties","name":"positioning.graphics.chart.PosePatch"}],"packagename":"positioning.graphics.chart","refpurpose":"Pose plot appearance and behavior","introduced":"R2021b","description":"PosePatch properties control the appearance and behavior of a PosePatch object.","classpropertygroup":[{"title":"Position and Orientation","classproperty":[{"name":"Orientation","purpose":"Orientation of pose plot","htmlid":"mw_32183741-c50d-4034-bc7b-7979b2f7e955_sep_mw_79b90029-af75-4a5f-82cc-9706f6809ac3","value":["quaternion object","rotation matrix"],"defaultvalue":"quaternion object"},{"name":"Position","purpose":"Position of pose plot","htmlid":"mw_32183741-c50d-4034-bc7b-7979b2f7e955_sep_mw_3fb13726-4f58-4df6-9cde-452bef16ddb0","value":["[0 0 0]","three-element real-valued vector"],"defaultvalue":"[0 0 0]"}]},{"title":"Color and Styling","classproperty":[{"name":"ScaleFactor","purpose":"Scale factor of pose plot","htmlid":"mw_32183741-c50d-4034-bc7b-7979b2f7e955_sep_mw_d0e8207c-c6e8-4381-b548-86f060b1e0de","value":["1","nonnegative scalar"],"defaultvalue":"1"},{"name":"PatchFaceColor","purpose":"Patch face color","htmlid":"mw_32183741-c50d-4034-bc7b-7979b2f7e955_sep_mw_d7096168-38b1-4e55-80c7-206565549ab0","value":["[0 0 0]","RGB triplet","hexadecimal color code","\"r\"","\"g\"","\"b\"","..."],"defaultvalue":"[0 0 0]"},{"name":"MeshFileName","purpose":"Name of STL mesh file","htmlid":"mw_32183741-c50d-4034-bc7b-7979b2f7e955_sep_mw_573a2b2a-7e42-47b8-aee4-1d957009a70c","value":["string scalar","character vector"]},{"name":"PatchFaceAlpha","purpose":"Patch face transparency","htmlid":"mw_32183741-c50d-4034-bc7b-7979b2f7e955_sep_mw_0379245f-b0fc-4ccf-8f52-6ea252f08950","value":["0.1","scalar in range [0, 1]"],"defaultvalue":"0.1"}]},{"title":"Parent\/Children","classproperty":[{"name":"Parent","purpose":"Parent axes","htmlid":"mw_b712a68c-5569-4915-aaf3-0917e855f61e","value":["Axes object"]},{"name":"Children","purpose":"Children","htmlid":"mw_e23abcf4-df7d-49c9-8553-13c54f6db73c","value":["empty GraphicsPlaceholder array","DataTip object array"]}]},{"title":"Interactivity","classproperty":[{"name":"Visible","purpose":"Pose plot visibility","htmlid":"mw_aff16c87-c997-474d-9a0d-8cac45c71ea5","value":["\"on\"","\"off\"","on\/off logical value"],"defaultvalue":"\"on\""},{"name":"HandleVisibility","purpose":"Visibility of pose patch object handle","htmlid":"mw_54859717-ce2f-4df7-a330-ae07855939e0","value":["\"on\"","\"off\"","\"callback\""],"defaultvalue":"\"on\""}]},{"title":"Standard Chart Properties","classproperty":[{"name":"DisplayName","purpose":"Pose plot name to display in legend","htmlid":"mw_fc81cb4b-d5dc-4c3d-b1c8-28663b97e569","value":["string scalar","character vector"]},{"name":"Type","readonly":true,"purpose":"Type of pose plot object","htmlid":"mw_e75463a8-a505-4e07-b6a9-5e7d37908eab","value":["'PosePatch'"],"defaultvalue":"'PosePatch'"},{"name":"Annotation","readonly":true,"purpose":"Control for including or excluding object from legend","htmlid":"mw_0bd709c2-481a-4daa-9e18-00f25d409f26","value":["Annotation object"]},{"name":"SeriesIndex","purpose":"Pose plot series index","htmlid":"mw_fedf4e66-a502-4c03-bd19-034f15978999","value":["1","nonnegative integer"],"defaultvalue":"1"}]}],"seealso":[{"url":"poseplot.html","name":"poseplot"}]},{"href":"ref\/positioning.insmotionmodel-class.html","refentity":[{"type":"class","name":"positioning.INSMotionModel"}],"packagename":"positioning","refpurpose":"Base class for defining motion models used with insEKF","introduced":"R2022a","description":"The positioning.INSMotionModel class defines the base class for motion models used with INS filters.","syntaxgroup":[{"title":"","syntax":["sensor = positioning.INSMotionModel()"]}],"examples":[{"url":"positioning.insmotionmodel-class.html#mw_00f19d59-1e2a-4214-a2c6-32e58ab3b881","open_command":"openExample('shared_positioning\/CustomizeMotionModelUsedWithInsEKFExample')","title":"Customize Motion Model Used with insEKF"}],"seealso":[{"url":"insekf.html","name":"insEKF"},{"url":"insoptions.html","name":"insOptions"}]},{"href":"ref\/positioning.insmotionmodel.copy.html","refentity":[{"type":"function","name":"copy","fcntype":"instancemethod"},{"type":"method","name":"positioning.INSMotionModel.copy","fcntype":"instancemethod"}],"packagename":"positioning","refpurpose":"Create copy of motion model","introduced":"R2022b","description":"This MATLAB function creates a copy of the motion model.","syntaxgroup":[{"title":"","syntax":["newModel=copy(model)"]}],"inputgroup":[{"title":"","inputs":[{"name":"model","purpose":"Motion model used with INS filter","htmlid":"mw_b3a69454-268f-4b5f-a64b-0d598d88076e_sep_mw_4ed9029b-45ae-463f-bccc-8dd7a793b466","value":["object inherited from positioning.INSMotionModel class"]}]}],"outputs":[{"name":"newModel","purpose":"Copy of motion model","htmlid":"mw_f33850ff-e467-4889-a2a9-32321de94800","value":["object inherited from positioning.INSMotionModel class"]}],"examples":[{"url":"positioning.insmotionmodel.copy.html#mw_417041da-0bf4-4d9a-8679-066e9e48ec8a","title":"Implement copy Method of positioning.INSMotionModel"}]},{"href":"ref\/positioning.insmotionmodel.modelstates.html","refentity":[{"type":"function","name":"modelstates","fcntype":"instancemethod"},{"type":"method","name":"positioning.insMotionModel.modelstates","fcntype":"instancemethod"}],"packagename":"positioning","refpurpose":"States for motion model","introduced":"R2022a","description":"This MATLAB function returns a structure that describes the motion model states tracked by the insEKF filter object.","syntaxgroup":[{"title":"","syntax":["s = modelstates(filter,options)"]}],"inputgroup":[{"title":"","inputs":[{"name":"filter","purpose":"INS filter","htmlid":"mw_a4a01864-2ee1-41ad-9e2b-c513ed21909b_sep_mw_dda2a0f7-bbc8-4ef4-be27-609fd8a82962","value":["insEKF object"]},{"name":"options","purpose":"Options for INS filter","htmlid":"mw_a4a01864-2ee1-41ad-9e2b-c513ed21909b_sep_mw_b3bc194b-0041-4d6a-a5e9-606c6c4b7fda","value":["insOptions object"]}]}],"outputs":[{"name":"s","purpose":"State structure","htmlid":"mw_55376ead-64c8-4555-b4a8-efc7a4864347","value":["structure"]}],"examples":[{"url":"positioning.insmotionmodel.modelstates.html#mw_2c420ac2-893d-4f52-87a5-abef68cc78e9","open_command":"openExample('shared_positioning\/CustomizeMotionModelUsedWithInsEKFExample')","title":"Customize Motion Model Used with insEKF"}],"seealso":[{"url":"positioning.insmotionmodel.statetransition.html","name":"stateTransition"},{"url":"positioning.insmotionmodel.statetransitionjacobian.html","name":"stateTransitionJacobian"}]},{"href":"ref\/positioning.insmotionmodel.statetransition.html","refentity":[{"type":"function","name":"stateTransition","fcntype":"instancemethod"},{"type":"method","name":"positioning.insMotionModel.stateTransition","fcntype":"instancemethod"}],"packagename":"positioning","refpurpose":"State transition of motion model","introduced":"R2022a","description":"This MATLAB function returns the derivatives of the states of the motion model used with the INS filter.","syntaxgroup":[{"title":"","syntax":["statedot = stateTransition(model,filter,dt,varargin)"]}],"inputgroup":[{"title":"","inputs":[{"name":"model","purpose":"Motion model used with INS filter","htmlid":"mw_219f744c-a420-4ea8-bc9e-9ce15ecc546e_sep_mw_4ed9029b-45ae-463f-bccc-8dd7a793b466","value":["object inherited from positioning.INSMotionModel class"]},{"name":"filter","purpose":"INS filter","htmlid":"mw_219f744c-a420-4ea8-bc9e-9ce15ecc546e_sep_mw_dda2a0f7-bbc8-4ef4-be27-609fd8a82962","value":["insEKF object"]},{"name":"dt","purpose":"Filter time step","htmlid":"mw_219f744c-a420-4ea8-bc9e-9ce15ecc546e_sep_mw_22f4ef44-8d51-4cb6-9d3b-4cbe3b2727b9","value":["positive scalar"]},{"name":"varargin","purpose":"Additional inputs","htmlid":"mw_219f744c-a420-4ea8-bc9e-9ce15ecc546e_sep_mw_d678c629-55a5-4b02-810e-041c205eb51c","value":["any data type"]}]}],"outputs":[{"name":"statedot","purpose":"Derivatives of states","htmlid":"mw_7810ff9b-7786-4b68-8e23-990ba5ac9f9e","value":["structure"]}],"examples":[{"url":"positioning.insmotionmodel.statetransition.html#mw_bddcfab2-cee7-46e0-aa15-d18bcc7c8dd5","open_command":"openExample('shared_positioning\/CustomizeMotionModelUsedWithInsEKFExample')","title":"Customize Motion Model Used with insEKF"}],"seealso":[{"url":"positioning.insmotionmodel.modelstates.html","name":"modelstates"},{"url":"positioning.insmotionmodel.statetransitionjacobian.html","name":"stateTransitionJacobian"}]},{"href":"ref\/positioning.insmotionmodel.statetransitionjacobian.html","refentity":[{"type":"function","name":"stateTransitionJacobian","fcntype":"instancemethod"},{"type":"method","name":"positioning.insMotionModel.stateTransitionJacobian","fcntype":"instancemethod"}],"packagename":"positioning","refpurpose":"Jacobian of state transition function","introduced":"R2022a","description":"This MATLAB function returns the Jacobian matrix for the state transition function of the model object inherited from the positioning.INSMotionModel abstract class.","syntaxgroup":[{"title":"","syntax":["jac = stateTransitionJacobian(model,filter,dt,varargin)"]}],"inputgroup":[{"title":"","inputs":[{"name":"model","purpose":"Motion model used with INS filter","htmlid":"mw_13783889-b347-4324-beaf-0d5693ae3830_sep_mw_4ed9029b-45ae-463f-bccc-8dd7a793b466","value":["object inherited from positioning.INSMotionModel class"]},{"name":"filter","purpose":"INS filter","htmlid":"mw_13783889-b347-4324-beaf-0d5693ae3830_sep_mw_dda2a0f7-bbc8-4ef4-be27-609fd8a82962","value":["insEKF object"]},{"name":"dt","purpose":"Filter time step","htmlid":"mw_13783889-b347-4324-beaf-0d5693ae3830_sep_mw_22f4ef44-8d51-4cb6-9d3b-4cbe3b2727b9","value":["positive scalar"]},{"name":"varargin","purpose":"Additional inputs","htmlid":"mw_13783889-b347-4324-beaf-0d5693ae3830_sep_mw_d678c629-55a5-4b02-810e-041c205eb51c","value":["any data type"]}]}],"outputs":[{"name":"jac","purpose":"Jacobian matrix for state transition equation","htmlid":"mw_5336975d-2def-4bfe-9761-c060a13f18f3","value":["S-by-N real-valued matrix"]}],"examples":[{"url":"positioning.insmotionmodel.statetransitionjacobian.html#mw_b8fde8a1-f963-4794-ba1f-2280f53cc5a4","open_command":"openExample('shared_positioning\/CustomizeMotionModelUsedWithInsEKFExample')","title":"Customize Motion Model Used with insEKF"}],"seealso":[{"url":"positioning.insmotionmodel.modelstates.html","name":"modelstates"},{"url":"positioning.insmotionmodel.statetransition.html","name":"stateTransition"}]},{"href":"ref\/positioning.inssensormodel-class.html","refentity":[{"type":"class","name":"positioning.INSSensorModel"}],"packagename":"positioning","refpurpose":"Base class for defining sensor models used with insEKF","introduced":"R2022a","description":"The positioning.INSSensorModel class defines the base class for sensor models used with INS filters.","syntaxgroup":[{"title":"","syntax":["sensor = positioning.INSSensorModel()"]}],"examples":[{"url":"positioning.inssensormodel-class.html#mw_9cda24f9-fc7a-461d-bc49-b1e100aab54d","open_command":"openExample('shared_positioning\/CustomizeSensorModelUsedWithInsEKFExample')","title":"Customize Sensor Model Used with insEKF"}],"seealso":[{"url":"insoptions.html","name":"insOptions"},{"url":"insekf.html","name":"insEKF"}]},{"href":"ref\/positioning.inssensormodel.copy.html","refentity":[{"type":"function","name":"copy","fcntype":"instancemethod"},{"type":"method","name":"positioning.INSSensorModel.copy","fcntype":"instancemethod"}],"packagename":"positioning","refpurpose":"Create copy of sensor model","introduced":"R2022b","description":"This MATLAB function creates a copy of the sensor model.","syntaxgroup":[{"title":"","syntax":["newSensor = copy(sensor)"]}],"inputgroup":[{"title":"","inputs":[{"name":"sensor","purpose":"Sensor model used with INS filter","htmlid":"mw_3b9c914a-88fc-41ec-be06-9a7b4f86ca03","value":["object inherited from positioning.INSSensorModel class"]}]}],"outputs":[{"name":"newSensor","purpose":"Copy of sensor model","htmlid":"mw_292a2e5a-a373-4e3d-ab95-9a3bea9571c1","value":["object inherited from positioning.INSSensorModel class"]}],"examples":[{"url":"positioning.inssensormodel.copy.html#mw_01965744-5bf1-433b-9f71-6868488647bd","title":"Implement copy Method of positioning.INSSensorModel"}]},{"href":"ref\/positioning.inssensormodel.measurement.html","refentity":[{"type":"function","name":"measurement","fcntype":"instancemethod"},{"type":"method","name":"positioning.insSensorModel.measurement","fcntype":"instancemethod"}],"packagename":"positioning","refpurpose":"Sensor measurement from states","introduced":"R2022a","description":"This MATLAB function returns the measurement z from the state maintained in the filter object.","syntaxgroup":[{"title":"","syntax":["z = measurement(sensor,filter)"]}],"inputgroup":[{"title":"","inputs":[{"name":"sensor","purpose":"Sensor model used with INS filter","htmlid":"mw_d1c69682-7632-4067-9dcf-a3025319dde6_sep_mw_486b96e8-0328-4e1e-b2d4-af2da9abca12","value":["object inherited from positioning.INSSensorModel class"]},{"name":"filter","purpose":"INS filter","htmlid":"mw_d1c69682-7632-4067-9dcf-a3025319dde6_sep_mw_dda2a0f7-bbc8-4ef4-be27-609fd8a82962","value":["insEKF object"]}]}],"outputs":[{"name":"z","purpose":"Measurement","htmlid":"mw_94ac83c8-d388-4862-a0d3-695a066a4d9d","value":["M-by-1 real-valued vector"]}],"examples":[{"url":"positioning.inssensormodel.measurement.html#mw_2606c1c9-fcfd-4285-b87d-91529c5fc8be","open_command":"openExample('shared_positioning\/CustomizeSensorModelUsedWithInsEKFExample')","title":"Customize Sensor Model Used with insEKF"}],"seealso":[{"url":"positioning.inssensormodel.measurementjacobian.html","name":"measurementJacobian"},{"url":"positioning.inssensormodel.sensorstates.html","name":"sensorstates"},{"url":"positioning.inssensormodel.statetransition.html","name":"stateTransition"},{"url":"positioning.inssensormodel.statetransitionjacobian.html","name":"stateTransitionJacobian"}]},{"href":"ref\/positioning.inssensormodel.measurementjacobian.html","refentity":[{"type":"function","name":"measurementJacobian","fcntype":"instancemethod"},{"type":"method","name":"positioning.insSensorModel.measurementJacobian","fcntype":"instancemethod"}],"packagename":"positioning","refpurpose":"Jacobian of measurement function","introduced":"R2022a","description":"This MATLAB function returns the Jacobian matrix for the measurement function of the sensor object, inherited from the positioning.INSSensorModel abstract class.","syntaxgroup":[{"title":"","syntax":["jac = measurementJacobian(sensor,filter)"]}],"inputgroup":[{"title":"","inputs":[{"name":"sensor","purpose":"Sensor model used with INS filter","htmlid":"mw_0616040c-dfec-4241-bb6b-2c4e8adae747_sep_mw_486b96e8-0328-4e1e-b2d4-af2da9abca12","value":["object inherited from positioning.INSSensorModel class"]},{"name":"filter","purpose":"INS filter","htmlid":"mw_0616040c-dfec-4241-bb6b-2c4e8adae747_sep_mw_dda2a0f7-bbc8-4ef4-be27-609fd8a82962","value":["insEKF object"]}]}],"outputs":[{"name":"jac","purpose":"Jacobian matrix for measurement equation","htmlid":"mw_141be9d6-bc84-454c-9506-04e4dd0dc485","value":["M-by-N real-valued matrix"]}],"examples":[{"url":"positioning.inssensormodel.measurementjacobian.html#mw_b52f8ac1-2ce8-490a-8ae9-8e48b294a770","open_command":"openExample('shared_positioning\/CustomizeSensorModelUsedWithInsEKFExample')","title":"Customize Sensor Model Used with insEKF"}],"seealso":[{"url":"positioning.inssensormodel.measurement.html","name":"measurement"},{"url":"positioning.inssensormodel.sensorstates.html","name":"sensorstates"},{"url":"positioning.inssensormodel.statetransition.html","name":"stateTransition"},{"url":"positioning.inssensormodel.statetransitionjacobian.html","name":"stateTransitionJacobian"}]},{"href":"ref\/positioning.inssensormodel.sensorstates.html","refentity":[{"type":"function","name":"sensorstates","fcntype":"instancemethod"},{"type":"method","name":"positioning.insSensorModel.sensorstates","fcntype":"instancemethod"}],"packagename":"positioning","refpurpose":"Sensor states","introduced":"R2022a","description":"This MATLAB function returns a structure that describes the states used by the sensor model and tracked by the insEKF filter object.","syntaxgroup":[{"title":"","syntax":["s = sensorstates(filter,options)"]}],"inputgroup":[{"title":"","inputs":[{"name":"filter","purpose":"INS filter","htmlid":"mw_49c6e0dc-f462-4f75-89a5-bcd13dcadada_sep_mw_dda2a0f7-bbc8-4ef4-be27-609fd8a82962","value":["insEKF object"]},{"name":"options","purpose":"Options for INS filter","htmlid":"mw_49c6e0dc-f462-4f75-89a5-bcd13dcadada_sep_mw_b3bc194b-0041-4d6a-a5e9-606c6c4b7fda","value":["insOptions object"]}]}],"outputs":[{"name":"s","purpose":"State structure","htmlid":"mw_221f23cc-4a91-45b8-99ce-bf239d4ca727","value":["structure"]}],"examples":[{"url":"positioning.inssensormodel.sensorstates.html#mw_841178b7-3696-4f95-8568-6c51ccea462f","open_command":"openExample('shared_positioning\/CustomizeSensorModelUsedWithInsEKFExample')","title":"Customize Sensor Model Used with insEKF"}],"seealso":[{"url":"positioning.inssensormodel.measurement.html","name":"measurement"},{"url":"positioning.inssensormodel.measurementjacobian.html","name":"measurementJacobian"},{"url":"positioning.inssensormodel.statetransition.html","name":"stateTransition"},{"url":"positioning.inssensormodel.statetransitionjacobian.html","name":"stateTransitionJacobian"}]},{"href":"ref\/positioning.inssensormodel.statetransition.html","refentity":[{"type":"function","name":"stateTransition","fcntype":"instancemethod"},{"type":"method","name":"positioning.insSensorModel.stateTransition","fcntype":"instancemethod"}],"packagename":"positioning","refpurpose":"State transition of sensor states","introduced":"R2022a","description":"This MATLAB function returns the derivatives of the states of the sensor used in the INS filter.","syntaxgroup":[{"title":"","syntax":["statedot = stateTransition(sensor,filter,dt,varargin)"]}],"inputgroup":[{"title":"","inputs":[{"name":"sensor","purpose":"Sensor model used with INS filter","htmlid":"mw_b06e0c9b-90d1-422a-a7c3-406ed0284611_sep_mw_486b96e8-0328-4e1e-b2d4-af2da9abca12","value":["object inherited from positioning.INSSensorModel class"]},{"name":"filter","purpose":"INS filter","htmlid":"mw_b06e0c9b-90d1-422a-a7c3-406ed0284611_sep_mw_dda2a0f7-bbc8-4ef4-be27-609fd8a82962","value":["insEKF object"]},{"name":"dt","purpose":"Filter time step","htmlid":"mw_b06e0c9b-90d1-422a-a7c3-406ed0284611_sep_mw_22f4ef44-8d51-4cb6-9d3b-4cbe3b2727b9","value":["positive scalar"]},{"name":"varargin","purpose":"Additional inputs","htmlid":"mw_b06e0c9b-90d1-422a-a7c3-406ed0284611_sep_mw_d678c629-55a5-4b02-810e-041c205eb51c","value":["any data type"]}]}],"outputs":[{"name":"statedot","purpose":"Derivatives of sensor states","htmlid":"mw_0cccd67f-5847-4d85-aa3b-fec9efb34e62","value":["structure"]}],"examples":[{"url":"positioning.inssensormodel.statetransition.html#mw_05725c3a-ef2d-4b7e-89a6-6be4527b8e89","open_command":"openExample('shared_positioning\/CustomizeSensorModelUsedWithInsEKFExample')","title":"Customize Sensor Model Used with insEKF"}],"seealso":[{"url":"positioning.inssensormodel.measurement.html","name":"measurement"},{"url":"positioning.inssensormodel.measurementjacobian.html","name":"measurementJacobian"},{"url":"positioning.inssensormodel.sensorstates.html","name":"sensorstates"},{"url":"positioning.inssensormodel.statetransitionjacobian.html","name":"stateTransitionJacobian"}]},{"href":"ref\/positioning.inssensormodel.statetransitionjacobian.html","refentity":[{"type":"function","name":"stateTransitionJacobian","fcntype":"instancemethod"},{"type":"method","name":"positioning.insSensorModel.stateTransitionJacobian","fcntype":"instancemethod"}],"packagename":"positioning","refpurpose":"Jacobian of sensor state transition function","introduced":"R2022a","description":"This MATLAB function returns the Jacobian matrix for the state transition function of the sensor object inherited from the positioning.INSSensorModel (Sensor Fusion and Tracking Toolbox) abstract class.","syntaxgroup":[{"title":"","syntax":["jac = stateTransitionJacobian(sensor,filter,dt,varargin)"]}],"inputgroup":[{"title":"","inputs":[{"name":"sensor","purpose":"Sensor model used with INS filter","htmlid":"mw_f13e697d-2a59-4737-af56-ac09ce02c0d7_sep_mw_486b96e8-0328-4e1e-b2d4-af2da9abca12","value":["object inherited from positioning.INSSensorModel class"]},{"name":"filter","purpose":"INS filter","htmlid":"mw_f13e697d-2a59-4737-af56-ac09ce02c0d7_sep_mw_dda2a0f7-bbc8-4ef4-be27-609fd8a82962","value":["insEKF object"]},{"name":"dt","purpose":"Filter time step","htmlid":"mw_f13e697d-2a59-4737-af56-ac09ce02c0d7_sep_mw_22f4ef44-8d51-4cb6-9d3b-4cbe3b2727b9","value":["positive scalar"]},{"name":"varargin","purpose":"Additional inputs","htmlid":"mw_f13e697d-2a59-4737-af56-ac09ce02c0d7_sep_mw_d678c629-55a5-4b02-810e-041c205eb51c","value":["any data type"]}]}],"outputs":[{"name":"jac","purpose":"Jacobian matrix for state transition equation","htmlid":"mw_5b2242e9-243b-4b17-ad8f-7504e971c4ae","value":["S-by-N real-valued matrix"]}],"examples":[{"url":"positioning.inssensormodel.statetransitionjacobian.html#mw_327108fd-318d-4882-81c1-319086d4cd25","open_command":"openExample('shared_positioning\/CustomizeSensorModelUsedWithInsEKFExample')","title":"Customize Sensor Model Used with insEKF"}],"seealso":[{"url":"..\/..\/fusion\/ref\/positioning.inssensormodel.measurement.html","name":"measurement"},{"url":"..\/..\/fusion\/ref\/positioning.inssensormodel.measurementjacobian.html","name":"measurementJacobian"},{"url":"..\/..\/fusion\/ref\/positioning.inssensormodel.sensorstates.html","name":"sensorstates"},{"url":"..\/..\/fusion\/ref\/positioning.inssensormodel.statetransition.html","name":"stateTransition"}]},{"href":"ref\/pseudoranges.html","refentity":[{"type":"function","name":"pseudoranges","fcntype":"simple"}],"refpurpose":"Pseudoranges between GNSS receiver and satellites","introduced":"R2021a","description":"This MATLAB function returns the pseudoranges between the receiver at position recPos and the satellites at positions satPos.","syntaxgroup":[{"title":"","syntax":["p = pseudoranges(recPos,satPos)","[p,pdot] = pseudoranges(___,recVel,satVel)","[p,pdot] = pseudoranges(___,Name,Value)"]}],"inputgroup":[{"title":"","inputs":[{"name":"recPos","purpose":"Receiver position","htmlid":"mw_3b2e9247-ecc4-4a9f-93c8-e774874d33d4","value":["three-element vector of the form [latitude longitude altitude]"]},{"name":"satPos","purpose":"Satellite positions","htmlid":"mw_c23b2222-fdb5-4a4a-b29b-2ae4386ac4a0","value":["N-by-3 matrix of scalars"]},{"name":"recVel","purpose":"Receiver velocity","htmlid":"mw_06c81ef7-d1d1-4d7b-8147-c0b2a9d0d3a9","value":["three-element vector of the form [vx vy vz]"]},{"name":"satVel","purpose":"Satellite velocities","htmlid":"mw_d9e0908e-644c-46ac-9df8-b4b6f0efd972","value":["N-by-3 matrix of scalars"]}]},{"namevaluepairs":[{"title":"","inputs":[{"name":"RangeAccuracy","purpose":"Measurement noise in pseudoranges","htmlid":"mw_95012cf9-f039-4aaa-8c25-cc237a1f9b47","value":["1","scalar"],"defaultvalue":"1"},{"name":"RangeRateAccuracy","purpose":"Measurement noise in pseudorange rates","htmlid":"mw_6f2d28f4-a6ab-4981-80a6-a956369c637e","value":["0.02","scalar"],"defaultvalue":"0.02"}]}]}],"outputs":[{"name":"p","purpose":"Pseudoranges between satellites and receiver","htmlid":"mw_e86c3e5d-3605-4ec9-a204-5d89c701c963","value":["n-element vector"]},{"name":"pdot","purpose":"Pseudorange rates between satellites and receiver","htmlid":"mw_69c0e605-28d9-49eb-bb0f-e1c71de7c8dc","value":["zeros(n,1)","n-element vector"]}],"examples":[{"url":"pseudoranges.html#mw_fac578cb-afe6-432c-9680-155680ee8d83","open_command":"openExample('nav\/GetSatellitePseudoRangesForReceiverPositionAndVelocityExample')","title":"Get Satellite Pseudoranges for Receiver Position and Velocity"}],"seealso":[{"url":"gnsssensor-system-object.html","name":"gnssSensor"},{"url":"gpssensor-system-object.html","name":"gpsSensor"},{"url":"imusensor-system-object.html","name":"imuSensor"},{"url":"skyplot.html","name":"skyplot"},{"url":"gnssconstellation.html","name":"gnssconstellation"},{"url":"lookangles.html","name":"lookangles"},{"url":"receiverposition.html","name":"receiverposition"}]},{"href":"ref\/purepursuit.html","refentity":[{"type":"block","name":"Pure Pursuit"}],"refpurpose":"Linear and angular velocity control commands","introduced":"R2019b","description":"The Pure Pursuit block computes linear and angular velocity commands for following a path using a set of waypoints and the current pose of a differential drive vehicle.","icon":{"fileref":"ref\/pure_pursuit_block_24a.png","alt":"Pure Pursuit block"},"libraries":["Robotics System Toolbox \/ Mobile Robot Algorithms","Navigation Toolbox \/ Control Algorithms"],"inputgroup":[{"title":"","inputs":[{"name":"Pose","purpose":"Current vehicle pose","htmlid":"bvam7ty-1-Pose","value":["[x y theta] vector"]},{"name":"Waypoints","purpose":"Waypoints","htmlid":"bvam7ty-1-Waypoints","value":["[ ]","n-by-2 array"],"defaultvalue":"[ ]"},{"name":"Desired Linear Velocity","purpose":"Linear velocity","htmlid":"mw_c67c991e-6eb7-4028-a0d8-6aa9188d4491","value":["scalar in meters per second"]},{"name":"Lookahead Distance","purpose":"Look-ahead distance","htmlid":"mw_58fa5bed-1735-4ec0-85df-80993bc363ca","value":["scalar in meters per second"]}]}],"outputs":[{"name":"Linear Velocity","purpose":"Linear velocity","htmlid":"bvam7ty-1-LinVel","value":["scalar in meters per second"]},{"name":"Angular Velocity","purpose":"Angular velocity","htmlid":"bvam7ty-1-AngVel","value":["scalar in radians per second"]},{"name":"Target Direction","purpose":"Target direction for vehicle","htmlid":"bvam7ty-1-TargetDir","value":["scalar in radians"]}],"parameters":[{"name":"Specify desired linear velocity from input port","purpose":"Enable input port for desired linear velocities","htmlid":"mw_2c6004ce-ca7e-46b1-b9bb-abc31a28518e","value":["off","on"],"defaultvalue":"off"},{"name":"Desired linear velocity (m\/s)","purpose":"Linear velocity","htmlid":"bvam7ty-1-Desiredlinearvelocityms","value":["0.1","scalar"],"defaultvalue":"0.1"},{"name":"Maximum angular velocity (rad\/s)","purpose":"Angular velocity","htmlid":"bvam7ty-1-Maximumangularvelocityrads","value":["1.0","scalar"],"defaultvalue":"1.0"},{"name":"Specify lookahead distance from input port","purpose":"Enable input port for look-ahead distances","htmlid":"mw_8e8f717b-d39d-4198-95ea-a17258658088","value":["off","on"],"defaultvalue":"off"},{"name":"Lookahead distance (m)","purpose":"Look-ahead distance","htmlid":"bvam7ty-1-Lookaheaddistancem","value":["1.0","scalar"],"defaultvalue":"1.0"},{"name":"Show Target Direction output port","purpose":"Target direction indicator","htmlid":"bvam7ty-1-ShowTargetDiroutputport","value":["on","off"],"defaultvalue":"off"},{"name":"Simulate using","purpose":"Type of simulation to run","htmlid":"mw_1cc0d0d9-aec1-41a2-a6ce-8cb0be0f4265","value":["Interpreted execution","Code generation"],"defaultvalue":"Code generation"}],"examples":[{"url":"..\/ug\/path-following-with-obstacle-avoidance-in-simulink.html","open_command":"openExample('nav\/PathFollowingWithObstacleAvoidanceInSimulinkExample')","title":"Path Following with Obstacle Avoidance in Simulink"}],"seealso":[{"url":"vectorfieldhistogram.html","name":"Vector Field Histogram"},{"url":"timedelasticband.html","name":"Timed Elastic Band"},{"url":"binaryoccupancymap.html","name":"binaryOccupancyMap"},{"url":"occupancymap.html","name":"occupancyMap"},{"url":"controllervfh-system-object.html","name":"controllerVFH"}]},{"href":"ref\/quat2axang.html","refentity":[{"type":"function","name":"quat2axang","fcntype":"simple"}],"refpurpose":"Convert quaternion to axis-angle rotation","introduced":"R2015a","description":"This MATLAB function converts a quaternion, quat, to the equivalent axis-angle rotation, axang.","syntaxgroup":[{"title":"","syntax":["axang = quat2axang(quat)"]}],"inputgroup":[{"title":"","inputs":[{"name":"quat","purpose":"Unit quaternion","htmlid":"buofkmk-quat","value":["n-by-4 matrix","n-element vector of quaternion objects"]}]}],"outputs":[{"name":"axang","purpose":"Rotation given in axis-angle form","htmlid":"buofkmk-axang","value":["n-by-4 matrix"]}],"examples":[{"url":"quat2axang.html#bupm7qy-2","open_command":"openExample('nav_robotics\/ConvertQuaternionToAxisAngleRotationExample')","title":"Convert Quaternion to Axis-Angle Rotation"}],"seealso":[{"url":"axang2quat.html","name":"axang2quat"},{"url":"quaternion.html","name":"quaternion"}]},{"href":"ref\/quat2eul.html","refentity":[{"type":"function","name":"quat2eul","fcntype":"simple"}],"refpurpose":"Convert quaternion to Euler angles","introduced":"R2015a","description":"This MATLAB function converts a quaternion rotation, quat, to the corresponding Euler angles, eul.","syntaxgroup":[{"title":"","syntax":["eul = quat2eul(quat)","eul = quat2eul(quat,sequence)","[eul,eulAlt] = quat2eul(___)"]}],"inputgroup":[{"title":"","inputs":[{"name":"quat","purpose":"Unit quaternion","htmlid":"d126e31930","value":["n-by-4 matrix","n-element vector of quaternion objects"]},{"name":"sequence","purpose":"Axis-rotation sequence","htmlid":"buofjpw_sep_mw_e1ec5f45-aa43-4f3a-bcc6-bc10914e150d","value":["\"ZYX\"","\"ZYZ\"","\"ZXY\"","\"ZXZ\"","\"YXY\"","\"YZX\"","\"YXZ\"","\"YZY\"","\"XYX\"","\"XYZ\"","\"XZX\"","\"XZY\""],"defaultvalue":"\"ZYX\""}]}],"outputs":[{"name":"eul","purpose":"Euler rotation angles","htmlid":"buofjpw-eul","value":["n-by-3 matrix"]},{"name":"eulAlt","purpose":"Alternate Euler rotation angle solution","htmlid":"mw_05eabf30-7dd0-4934-96ae-57373e3203c7","value":["n-by-3 matrix"]}],"examples":[{"url":"quat2eul.html#buofj88-2","open_command":"openExample('nav_robotics\/ConvertQuaternionToEulerAnglesExample')","title":"Convert Quaternion to Euler Angles"},{"url":"quat2eul.html#buofj88-3","open_command":"openExample('nav_robotics\/ConvertQuaternionToEulerAnglesUsingZYZAxisOrderExample')","title":"Convert Quaternion to Euler Angles Using ZYZ Axis Order"}],"seealso":[{"url":"eul2quat.html","name":"eul2quat"},{"url":"quaternion.html","name":"quaternion"}]},{"href":"ref\/quat2rotm.html","refentity":[{"type":"function","name":"quat2rotm","fcntype":"simple"}],"refpurpose":"Convert quaternion to rotation matrix","introduced":"R2015a","description":"This MATLAB function converts a quaternion quat to an orthonormal rotation matrix, rotm.","syntaxgroup":[{"title":"","syntax":["rotm = quat2rotm(quat)"]}],"inputgroup":[{"title":"","inputs":[{"name":"quat","purpose":"Unit quaternion","htmlid":"d126e32257","value":["n-by-4 matrix","n-element vector of quaternion objects"]}]}],"outputs":[{"name":"rotm","purpose":"Rotation matrix","htmlid":"buofkz6-rotm","value":["3-by-3-by-n matrix"]}],"examples":[{"url":"quat2rotm.html#buofk5o-2","open_command":"openExample('nav_robotics\/ConvertQuaternionToRotationMatrixExample')","title":"Convert Quaternion to Rotation Matrix"}],"seealso":[{"url":"rotm2quat.html","name":"rotm2quat"},{"url":"quaternion.html","name":"quaternion"},{"url":"so2.html","name":"so2"},{"url":"so3.html","name":"so3"}]},{"href":"ref\/quat2tform.html","refentity":[{"type":"function","name":"quat2tform","fcntype":"simple"}],"refpurpose":"Convert quaternion to homogeneous transformation","introduced":"R2015a","description":"This MATLAB function converts a quaternion, quat, to a homogeneous transformation matrix, tform.","syntaxgroup":[{"title":"","syntax":["tform = quat2tform(quat)"]}],"inputgroup":[{"title":"","inputs":[{"name":"quat","purpose":"Unit quaternion","htmlid":"d126e32418","value":["n-by-4 matrix","n-element vector of quaternion objects"]}]}],"outputs":[{"name":"tform","purpose":"Homogeneous transformation","htmlid":"buofjcw-tform","value":["4-by-4-by-n matrix"]}],"examples":[{"url":"quat2tform.html#buofjks-2","open_command":"openExample('nav_robotics\/ConvertQuaternionToHomogeneousTransformationExample')","title":"Convert Quaternion to Homogeneous Transformation"}],"seealso":[{"url":"tform2quat.html","name":"tform2quat"},{"url":"quaternion.html","name":"quaternion"},{"url":"se2.html","name":"se2"},{"url":"se3.html","name":"se3"}]},{"href":"ref\/quaternion.angvel.html","refentity":[{"type":"function","name":"angvel","fcntype":"instancemethod"},{"type":"method","name":"quaternion.angvel","fcntype":"instancemethod"}],"refpurpose":"Angular velocity from quaternion array","introduced":"R2020a","description":"This MATLAB function returns the angular velocity array from an array of quaternions, quat.","syntaxgroup":[{"title":"","syntax":["AV = angvel(quat,dt,\"frame\")","AV = angvel(quat,dt,\"point\")","[AV,qf] = angvel(quat,dt,fp,qi)"]}],"inputgroup":[{"title":"","inputs":[{"name":"quat","purpose":"Quaternions","htmlid":"mw_b0408df9-6988-40a3-9941-346411f7ba38","value":["N-by-1 vector of quaternion objects"]},{"name":"dt","purpose":"Time step","htmlid":"mw_bad02241-2bec-48df-abe8-b9782de67fd8","value":["nonnegative scalar"]},{"name":"fp","purpose":"Type of rotation","htmlid":"mw_7d2c9f0c-d91d-424b-a064-a12a02cefde5","value":["\"frame\"","\"point\""]},{"name":"qi","purpose":"Initial quaternion","htmlid":"mw_efb6701a-12c4-4e89-8132-e2444bb4ee68","value":["quaternion object"]}]}],"outputs":[{"name":"AV","purpose":"Angular velocity","htmlid":"mw_36979e39-bdf0-4392-a835-82bdaae2e45d","value":["N-by-3 real matrix"]},{"name":"qf","purpose":"Final quaternion","htmlid":"mw_40b1da2f-1496-45ab-9884-5789adfb990c","value":["quaternion object"]}],"examples":[{"url":"quaternion.angvel.html#mw_2c00a728-21c6-40ce-8b35-83af01f04965","open_command":"openExample('shared_rotations\/GenerateAngularVelocityFromQuaternionArrayExample')","title":"Generate Angular Velocity From Quaternion Array"}],"seealso":[{"url":"quaternion.html","name":"quaternion"}]},{"href":"ref\/quaternion.classunderlying.html","refentity":[{"type":"function","name":"classUnderlying","fcntype":"instancemethod"},{"type":"method","name":"quaternion.classUnderlying","fcntype":"instancemethod"}],"refpurpose":"Class of parts within quaternion","introduced":"R2019b","description":"This MATLAB function returns the name of the class of the parts of the quaternion quat.","syntaxgroup":[{"title":"","syntax":["underlyingClass = classUnderlying(quat)"]}],"inputgroup":[{"title":"","inputs":[{"name":"quat","purpose":"Quaternion to investigate","htmlid":"d126e180317","value":["quaternion object","array of quaternion objects"]}]}],"outputs":[{"name":"underlyingClass","purpose":"Underlying class of quaternion object","htmlid":"d126e180351","value":["'single'","'double'"]}],"examples":[{"url":"quaternion.classunderlying.html#mw_a337fc94-75d1-4be2-9d07-704052ddddfb","open_command":"openExample('shared_rotations\/GetUnderlyingClassOfQuaternionExample')","title":"Get Underlying Class of Quaternion"}],"seealso":[{"url":"quaternion.compact.html","name":"compact"},{"url":"quaternion.parts.html","name":"parts"},{"url":"quaternion.html","name":"quaternion"}]},{"href":"ref\/quaternion.compact.html","refentity":[{"type":"function","name":"compact","fcntype":"instancemethod"},{"type":"method","name":"quaternion.compact","fcntype":"instancemethod"}],"refpurpose":"Convert quaternion array to N-by-4 matrix","introduced":"R2019b","description":"This MATLAB function converts the quaternion array, quat, to an N-by-4 matrix.","syntaxgroup":[{"title":"","syntax":["matrix = compact(quat)"]}],"inputgroup":[{"title":"","inputs":[{"name":"quat","purpose":"Quaternion to convert","htmlid":"d126e180519","value":["quaternion object","array of quaternion objects"]}]}],"outputs":[{"name":"matrix","purpose":"Quaternion in matrix form","htmlid":"d126e180553","value":["N-by-4 numeric matrix"]}],"examples":[{"url":"quaternion.compact.html#mw_9b800478-7fe8-4e60-b4fb-d9856c97f15e","open_command":"openExample('shared_rotations\/ConvertQuaternionArrayToCompactRepresentationOfPartsExample')","title":"Convert Quaternion Array to Compact Representation of Parts"}],"seealso":[{"url":"quaternion.parts.html","name":"parts"},{"url":"quaternion.classunderlying.html","name":"classUnderlying"},{"url":"quaternion.html","name":"quaternion"}]},{"href":"ref\/quaternion.conj.html","refentity":[{"type":"function","name":"conj","fcntype":"instancemethod"},{"type":"method","name":"quaternion.conj","fcntype":"instancemethod"}],"refpurpose":"Complex conjugate of quaternion","introduced":"R2019b","description":"This MATLAB function returns the complex conjugate of the quaternion, quat.","syntaxgroup":[{"title":"","syntax":["quatConjugate = conj(quat)"]}],"inputgroup":[{"title":"","inputs":[{"name":"quat","purpose":"Quaternion","htmlid":"d126e180715","value":["quaternion object","array of quaternion objects"]}]}],"outputs":[{"name":"quatConjugate","purpose":"Quaternion conjugate","htmlid":"d126e180749","value":["quaternion object","array of quaternion objects"]}],"examples":[{"url":"quaternion.conj.html#mw_199deff2-b9d7-4fc5-a636-856dfc2dc9ef","open_command":"openExample('shared_rotations\/ComplexConjugateOfQuaternionExample')","title":"Complex Conjugate of Quaternion"}],"seealso":[{"url":"quaternion.norm.html","name":"norm"},{"url":"quaternion.times.html","name":".*,times"},{"url":"quaternion.html","name":"quaternion"}]},{"href":"ref\/quaternion.ctranspose.html","refentity":[{"type":"function","name":"ctranspose","fcntype":"instancemethod"},{"type":"function","name":"'","fcntype":"instancemethod"},{"type":"method","name":"quaternion.ctranspose","fcntype":"instancemethod"}],"refpurpose":"Complex conjugate transpose of quaternion array","introduced":"R2019b","description":"This MATLAB function returns the complex conjugate transpose of the quaternion, quat.","syntaxgroup":[{"title":"","syntax":["quatTransposed = quat'"]}],"inputgroup":[{"title":"","inputs":[{"name":"quat","purpose":"Quaternion to transpose","htmlid":"d126e180920","value":["quaternion object","vector of quaternion objects","matrix of quaternion objects"]}]}],"outputs":[{"name":"quatTransposed","purpose":"Conjugate transposed quaternion","htmlid":"d126e180959","value":["quaternion object","vector of quaternion objects","matrix of quaternion objects"]}],"examples":[{"url":"quaternion.ctranspose.html#mw_a9956ffa-3a9c-4c96-a811-795e6459d4b3","open_command":"openExample('shared_rotations\/VectorComplexConjugateTransposeExample')","title":"Vector Complex Conjugate Transpose"},{"url":"quaternion.ctranspose.html#mw_309a0007-a879-49e9-a5f3-8f93b0455967","open_command":"openExample('shared_rotations\/MatrixComplexConjugateTransposeExample')","title":"Matrix Complex Conjugate Transpose"}],"seealso":[{"url":"quaternion.transpose.html","name":"transpose, .'"},{"url":"quaternion.html","name":"quaternion"}]},{"href":"ref\/quaternion.dist.html","refentity":[{"type":"function","name":"dist","fcntype":"instancemethod"},{"type":"method","name":"quaternion.dist","fcntype":"instancemethod"}],"refpurpose":"Angular distance in radians","introduced":"R2019b","description":"This MATLAB function returns the angular distance in radians between two quaternions, quatA and quatB.","syntaxgroup":[{"title":"","syntax":["distance = dist(quatA,quatB)"]}],"inputgroup":[{"title":"","inputs":[{"name":"quatA,quatB","purpose":"Quaternions to calculate distance between","htmlid":"d126e181146","value":["quaternion objects","arrays of quaternion objects"]}]}],"outputs":[{"name":"distance","purpose":"Angular distance (radians)","htmlid":"d126e181215","value":["numeric scalar","numeric array"]}],"examples":[{"url":"quaternion.dist.html#mw_246cfba5-1d77-4c78-8d16-72e4d672b523","open_command":"openExample('shared_rotations\/CalculateQuaternionDistanceExample')","title":"Calculate Quaternion Distance"}],"seealso":[{"url":"quaternion.parts.html","name":"parts"},{"url":"quaternion.conj.html","name":"conj"},{"url":"quaternion.html","name":"quaternion"}]},{"href":"ref\/quaternion.euler.html","refentity":[{"type":"function","name":"euler","fcntype":"instancemethod"},{"type":"method","name":"quaternion.euler","fcntype":"instancemethod"}],"refpurpose":"Convert quaternion to Euler angles (radians)","introduced":"R2019b","description":"This MATLAB function converts the quaternion, quat, to an N-by-3 matrix of Euler angles.","syntaxgroup":[{"title":"","syntax":["eulerAngles = euler(quat,rotationSequence,rotationType)"]}],"inputgroup":[{"title":"","inputs":[{"name":"quat","purpose":"Quaternion to convert to Euler angles","htmlid":"d126e181439","value":["quaternion object","array of quaternion objects"]}]},{"title":"","inputs":[{"name":"rotationSequence","purpose":"Rotation sequence","htmlid":"d126e181471","value":["\"ZYX\"","\"ZYZ\"","\"ZXY\"","\"ZXZ\"","\"YXZ\"","\"YXY\"","\"YZX\"","\"YZY\"","\"XYZ\"","\"XYX\"","\"XZY\"","\"XZX\""]}]},{"title":"","inputs":[{"name":"rotationType","purpose":"Type of rotation","htmlid":"d126e181593","value":["\"point\"","\"frame\""]}]}],"outputs":[{"name":"eulerAngles","purpose":"Euler angle representation (radians)","htmlid":"d126e181638","value":["N-by-3 numeric matrix"]}],"examples":[{"url":"quaternion.euler.html#mw_459b8adb-3e17-4675-81c0-0562481ae8e3","open_command":"openExample('shared_rotations\/ConvertQuaternionToEulerExample')","title":"Convert Quaternion to Euler Angles in Radians"}],"seealso":[{"url":"quaternion.eulerd.html","name":"eulerd"},{"url":"quaternion.rotateframe.html","name":"rotateframe"},{"url":"quaternion.rotatepoint.html","name":"rotatepoint"},{"url":"quaternion.html","name":"quaternion"}]},{"href":"ref\/quaternion.eulerd.html","refentity":[{"type":"function","name":"eulerd","fcntype":"instancemethod"},{"type":"method","name":"quaternion.eulerd","fcntype":"instancemethod"}],"refpurpose":"Convert quaternion to Euler angles (degrees)","introduced":"R2019b","description":"This MATLAB function converts the quaternion, quat, to an N-by-3 matrix of Euler angles in degrees.","syntaxgroup":[{"title":"","syntax":["eulerAngles = eulerd(quat,rotationSequence,rotationType)"]}],"inputgroup":[{"title":"","inputs":[{"name":"quat","purpose":"Quaternion to convert to Euler angles","htmlid":"d126e181789","value":["quaternion object","array of quaternion objects"]}]},{"title":"","inputs":[{"name":"rotationSequence","purpose":"Rotation sequence","htmlid":"d126e181821","value":["\"ZYX\"","\"ZYZ\"","\"ZXY\"","\"ZXZ\"","\"YXZ\"","\"YXY\"","\"YZX\"","\"YZY\"","\"XYZ\"","\"XYX\"","\"XZY\"","\"XZX\""]}]},{"title":"","inputs":[{"name":"rotationType","purpose":"Type of rotation","htmlid":"d126e181943","value":["\"point\"","\"frame\""]}]}],"outputs":[{"name":"eulerAngles","purpose":"Euler angle representation (degrees)","htmlid":"d126e181988","value":["N-by-3 numeric matrix"]}],"examples":[{"url":"quaternion.eulerd.html#mw_67edd852-dfe6-400a-9a51-5eba03aab1cb","open_command":"openExample('shared_rotations\/ConvertQuaternionToEulerAnglesInDegreesExample')","title":"Convert Quaternion to Euler Angles in Degrees"}],"seealso":[{"url":"quaternion.euler.html","name":"euler"},{"url":"quaternion.rotateframe.html","name":"rotateframe"},{"url":"quaternion.rotatepoint.html","name":"rotatepoint"},{"url":"quaternion.html","name":"quaternion"}]},{"href":"ref\/quaternion.exp.html","refentity":[{"type":"function","name":"exp","fcntype":"instancemethod"},{"type":"method","name":"quaternion.exp","fcntype":"instancemethod"}],"refpurpose":"Exponential of quaternion array","introduced":"R2019b","description":"This MATLAB function computes the exponential of the elements of the quaternion array A.","syntaxgroup":[{"title":"","syntax":["B = exp(A)"]}],"inputgroup":[{"title":"","inputs":[{"name":"A","purpose":"Input quaternion","htmlid":"mw_2c7bf443-4e4f-4d57-91cf-422ac56e3a64","value":["quaternion object","array of quaternion objects"]}]}],"outputs":[{"name":"B","purpose":"Result","htmlid":"mw_f5453eef-b474-4f10-8920-41501a4540a0","value":["quaternion object","array of quaternion objects"]}],"examples":[{"url":"quaternion.exp.html#mw_2da0838c-e794-4d6f-9779-b16d0fc53262","open_command":"openExample('shared_rotations\/ExponentialOfAQuaternionArrayExample')","title":"Exponential of Quaternion Array"}],"seealso":[{"url":"quaternion.power.html","name":".^,power"},{"url":"quaternion.log.html","name":"log"},{"url":"quaternion.html","name":"quaternion"}]},{"href":"ref\/quaternion.interp1.html","refentity":[{"type":"function","name":"interp1","fcntype":"instancemethod"},{"type":"method","name":"quaternion.interp1","fcntype":"instancemethod"}],"refpurpose":"Quaternion interpolation (table lookup)","introduced":"R2025a","description":"This MATLAB function interpolates the quaternion values of a 1-D function at specific query points using spherical linear interpolation (SLERP).","syntaxgroup":[{"title":"","syntax":["vq = interp1(x,v,xq)","vq = interp1(x,v,xq,method)","vq = interp1(x,v,xq,method,extrapolation)"]},{"title":"","syntax":["vq = interp1(v,xq)","vq = interp1(v,xq,method)","vq = interp1(v,xq,method,extrapolation)"]}],"inputgroup":[{"title":"","inputs":[{"name":"x","purpose":"Sample points","htmlid":"mw_ed999762-5c0d-4c98-8ee7-bd3f041690fe","value":["N-element vector"]},{"name":"v","purpose":"Sample quaternions","htmlid":"mw_5d19fd6f-0fd0-453b-ab42-a7a46fa58474","value":["N-element array of quaternion objects","array of quaternion objects"]},{"name":"xq","purpose":"Query points","htmlid":"mw_1e661c85-7703-4098-ae39-8fff1d87c333","value":["scalar","vector","matrix","array"]},{"name":"method","purpose":"Interpolation method","htmlid":"mw_53e2707c-288a-48f7-8d81-dde89a4f418b","value":["\"slerp-short\"","\"slerp-natural\"","\"squad-natural\"","\"nearest\"","\"next\"","\"previous\""],"defaultvalue":"\"slerp-short\""},{"name":"extrapolation","purpose":"Extrapolation quaternion","htmlid":"mw_f0309899-8793-4dd6-ac05-75db36cec37a","value":["nan(\"quaternion\")","quaternion object"],"defaultvalue":"nan(\"quaternion\")"}]}],"outputs":[{"name":"vq","purpose":"Interpolated quaternions","htmlid":"mw_c7c242de-0101-4382-9440-997f892850ab","value":["scalar","vector","matrix","array"]}],"examples":[{"url":"quaternion.interp1.html#mw_d48a5588-67d6-4b4f-aa4f-3b991c222f58","open_command":"openExample('shared_rotations\/InterpolateQuaternionFunctionDefinedUsingSamplePointsExample')","title":"Interpolate Quaternion Function Defined Using Sample Points"},{"url":"quaternion.interp1.html#mw_3a23b2cf-43a8-4c4a-ad35-66850160dc22","open_command":"openExample('shared_rotations\/InterpolateQuaternionsWithoutSpecifyingSamplePointsExample')","title":"Interpolate Quaternions Without Specifying Sample Points"},{"url":"quaternion.interp1.html#mw_fc1369b5-0ec3-47a2-b713-652f972d20b3","open_command":"openExample('shared_rotations\/GetSmootherAngularVelocityUsingSQUADInterpolationExample')","title":"Get Smoother Angular Velocity Using SQUAD Interpolation"},{"url":"quaternion.interp1.html#mw_12b452e7-348c-44cb-9ec9-0c044465d223","open_command":"openExample('shared_rotations\/DesignateConstantValueForAllQueriesOutsideDomainOfXExample')","title":"Designate Constant Value for All Queries Outside Domain of x"}],"seealso":[{"url":"quaternion.html","name":"quaternion"},{"url":"quaternion.slerp.html","name":"slerp"}]},{"href":"ref\/quaternion.html","refentity":[{"type":"object","name":"quaternion"},{"type":"function","name":"quaternion","fcntype":"constructor"}],"refpurpose":"Create quaternion array","introduced":"R2019b","description":"A quaternion is a four-part hyper-complex number used in three-dimensional rotations and orientations.","syntaxgroup":[{"title":"","syntax":["quat = quaternion()","quat = quaternion(A,B,C,D)","quat = quaternion(matrix)","quat = quaternion(RV,\"rotvec\")","quat = quaternion(RV,\"rotvecd\")","quat = quaternion(RM,\"rotmat\",PF)","quat = quaternion(E,\"euler\",RS,PF)","quat = quaternion(E,\"eulerd\",RS,PF)","quat = quaternion(transformation)","quat = quaternion(rotation)"]}],"inputgroup":[{"title":"","inputs":[{"name":"A,B,C,D","purpose":"Quaternion parts","htmlid":"d126e178697","value":["comma-separated arrays of the same size"]},{"name":"matrix","purpose":"Matrix of quaternion parts","htmlid":"d126e178732","value":["N-by-4 matrix"]},{"name":"RV","purpose":"Matrix of rotation vectors","htmlid":"d126e178765","value":["N-by-3 matrix"]},{"name":"RM","purpose":"Rotation matrices","htmlid":"d126e178807","value":["3-by-3 matrix","3-by-3-by-N array"]},{"name":"PF","purpose":"Type of rotation matrix","htmlid":"mw_9c239f4e-9f4d-4cc5-9f00-ed1f59f90c4f","value":["\"point\"","\"frame\""]},{"name":"E","purpose":"Matrix of Euler angles","htmlid":"d126e178893","value":["N-by-3 matrix"]},{"name":"RS","purpose":"Rotation sequence","htmlid":"d126e178944","value":["character vector","scalar string"]},{"name":"transformation","purpose":"Homogeneous transformation","htmlid":"mw_fae41e92-b1f5-4735-a16a-cfe84d154314","value":["se3 object","N-element array of se3 objects"]},{"name":"rotation","purpose":"Orthonormal rotation","htmlid":"mw_1f140632-ae02-4e38-84c8-a693b0f05956","value":["so3 object","N-element array of so3 objects"]}]}],"objectfunctions":[{"title":"Construction and Conversion","functions":[{"name":"compact","url":"quaternion.compact.html","description":"Convert quaternion array to N-by-4 matrix"},{"name":"eulerd","url":"quaternion.eulerd.html","description":"Convert quaternion to Euler angles (degrees)"},{"name":"euler","url":"quaternion.euler.html","description":"Convert quaternion to Euler angles (radians)"},{"name":"rotmat","url":"quaternion.rotmat.html","description":"Convert quaternion to rotation matrix"},{"name":"rotvec","url":"quaternion.rotvec.html","description":"Convert quaternion to rotation vector (radians)"},{"name":"rotvecd","url":"quaternion.rotvecd.html","description":"Convert quaternion to rotation vector (degrees)"},{"name":"ones","url":"quaternion.ones.html","description":"Create quaternion array with real parts set to one and imaginary parts set to\n            zero"},{"name":"parts","url":"quaternion.parts.html","description":"Extract quaternion parts"},{"name":"randrot","url":"quaternion.randrot.html","description":"Uniformly distributed random rotations"},{"name":"zeros","url":"quaternion.zeros.html","description":"Create quaternion array with all parts set to zero"}]},{"title":"Rotation","functions":[{"name":"rotateframe","url":"quaternion.rotateframe.html","description":"Quaternion frame rotation"},{"name":"rotatepoint","url":"quaternion.rotatepoint.html","description":"Quaternion point rotation"}]},{"title":"Normalization","functions":[{"name":"norm","url":"quaternion.norm.html","description":"Quaternion norm"},{"name":"normalize","url":"quaternion.normalize.html","description":"Quaternion normalization"}]},{"title":"Computations on Quaternions","functions":[{"name":"angvel","url":"quaternion.angvel.html","description":"Angular velocity from quaternion array"},{"name":"dist","url":"quaternion.dist.html","description":"Angular distance in radians"},{"name":"exp","url":"quaternion.exp.html","description":"Exponential of quaternion array"},{"name":"interp1","url":"quaternion.interp1.html","description":"Quaternion interpolation (table lookup)"},{"name":"log","url":"quaternion.log.html","description":"Natural logarithm of quaternion array"},{"name":"meanrot","url":"quaternion.meanrot.html","description":"Quaternion mean rotation"},{"name":"slerp","url":"quaternion.slerp.html","description":"Spherical linear interpolation"}]},{"title":"Arithmetic Operations","functions":[{"name":"conj","url":"quaternion.conj.html","description":"Complex conjugate of quaternion"},{"name":"ctranspose, '","url":"quaternion.ctranspose.html","description":"Complex conjugate transpose of quaternion array"},{"name":"ldivide, .\\","url":"quaternion.ldivide.html","description":"Element-wise quaternion left division"},{"name":"minus, -","url":"quaternion.minus.html","description":"Quaternion subtraction"},{"name":"mldivide, \\","url":"quaternion.mldivide.html","description":"Quaternion left division for scalars"},{"name":"mrdivide, \/","url":"quaternion.mrdivide.html","description":"Quaternion right division for scalars"},{"name":"mtimes, *","url":"quaternion.mtimes.html","description":"Quaternion multiplication"},{"name":"power","url":"quaternion.power.html","description":"Element-wise quaternion power"},{"name":"prod","url":"quaternion.prod.html","description":"Product of quaternion array"},{"name":"rdivide, .\/","url":"quaternion.rdivide.html","description":"Element-wise quaternion right division"},{"name":"times","url":"quaternion.times.html","description":"Element-wise quaternion multiplication"},{"name":"transpose, .'","url":"quaternion.transpose.html","description":"Transpose quaternion array"},{"name":"uminus, -","url":"quaternion.uminus.html","description":"Quaternion unary minus"}]}],"examples":[{"url":"quaternion.html#mw_d1d6005d-faaf-485e-9d2c-d0196f9acf45","open_command":"openExample('shared_rotations\/CreateEmptyQuaternionExample')","title":"Create Empty Quaternion"},{"url":"quaternion.html#mw_5e8d12c0-3db1-4db9-8399-4ed59877ec05","open_command":"openExample('shared_rotations\/CreateQuaternionBySpecifyingIndividualQuaternionPartsExample')","title":"Create Quaternion by Specifying Individual Quaternion Parts"},{"url":"quaternion.html#mw_35eacfbc-939e-4a25-8f01-bb113f7a8f16","open_command":"openExample('shared_rotations\/CreateQuaternionBySpecifyingQuaternionPartsMatrixExample')","title":"Create Quaternion by Specifying Quaternion Parts Matrix"},{"url":"quaternion.html#mw_639cdfda-4a4d-4497-bb4e-77b2f2a6f5c0","open_command":"openExample('shared_rotations\/CreateQuaternionBySpecifyingRotationVectorsExample')","title":"Create Quaternion by Specifying Rotation Vectors"},{"url":"quaternion.html#mw_6de81a7f-46bc-4a78-bea1-48d1e0b156f3","open_command":"openExample('shared_rotations\/CreateQuaternionBySpecifyingRotationMatricesExample')","title":"Create Quaternion by Specifying Rotation Matrices"},{"url":"quaternion.html#mw_54b60363-8447-46b1-b461-b50aef77772d","open_command":"openExample('shared_rotations\/CreateQuaternionBySpecifyingEulerAnglesExample')","title":"Create Quaternion by Specifying Euler Angles"},{"url":"quaternion.html#mw_169668c5-2977-40d3-80fc-50811117ab4e","open_command":"openExample('shared_rotations\/QuaternionAlgebraExample')","title":"Quaternion Algebra"},{"url":"quaternion.html#mw_2279179f-85a4-47fd-ab93-dd5b2b963144","open_command":"openExample('shared_rotations\/QuaternionArrayManipulationExample')","title":"Quaternion Array Manipulation"}],"seealso":[{"url":"se3.html","name":"se3"},{"url":"so3.html","name":"so3"}]},{"href":"ref\/quaternion.ldivide.html","refentity":[{"type":"function","name":"ldivide","fcntype":"instancemethod"},{"type":"function","name":".\\","fcntype":"instancemethod"},{"type":"method","name":"quaternion.ldivide","fcntype":"instancemethod"}],"refpurpose":"Element-wise quaternion left division","introduced":"R2019b","description":"This MATLAB function performs quaternion element-wise division by dividing each element of B by the corresponding element of A.","syntaxgroup":[{"title":"","syntax":["C = A.\\B"]}],"inputgroup":[{"title":"","inputs":[{"name":"A","purpose":"Divisor","htmlid":"mw_2118f4c3-673a-40c0-b03b-fd6f47ab697d","value":["quaternion object","array of quaternion objects","real scalar","array of real numbers"]}]},{"title":"","inputs":[{"name":"B","purpose":"Dividend","htmlid":"mw_0e085621-fe65-41ed-8a92-827fda3e0f17","value":["quaternion object","array of quaternion objects","real scalar","array of real numbers"]}]}],"outputs":[{"name":"C","purpose":"Result","htmlid":"mw_a1a72c6b-4f2f-471c-9082-50d8f0b80ef6","value":["quaternion object","array of quaternion objects"]}],"examples":[{"url":"quaternion.ldivide.html#mw_f63dc8b3-5370-4fad-adda-33ee2c46f65c","open_command":"openExample('shared_rotations\/LDivideAQuaternionArrayByARealScalarExample')","title":"Divide a Quaternion Array by a Real Scalar"},{"url":"quaternion.ldivide.html#mw_9d24adba-9443-4ba8-bb0c-892b221f1dda","open_command":"openExample('shared_rotations\/LDivideAQuaternionArrayByAnotherQuaternionArrayExample')","title":"Divide a Quaternion Array by Another Quaternion Array"}],"seealso":[{"url":"quaternion.times.html","name":".*,times"},{"url":"quaternion.conj.html","name":"conj"},{"url":"quaternion.norm.html","name":"norm"},{"url":"quaternion.rdivide.html","name":".\/,rdivide"},{"url":"quaternion.mldivide.html","name":"\\,mldivide"},{"url":"quaternion.html","name":"quaternion"}]},{"href":"ref\/quaternion.log.html","refentity":[{"type":"function","name":"log","fcntype":"instancemethod"},{"type":"method","name":"quaternion.log","fcntype":"instancemethod"}],"refpurpose":"Natural logarithm of quaternion array","introduced":"R2019b","description":"This MATLAB function computes the natural logarithm of the elements of the quaternion array A.","syntaxgroup":[{"title":"","syntax":["B = log(A)"]}],"inputgroup":[{"title":"","inputs":[{"name":"A","purpose":"Input quaternion","htmlid":"mw_9e2914d6-0515-448e-9a49-3d468f19671f","value":["quaternion object","array of quaternion objects"]}]}],"outputs":[{"name":"B","purpose":"Natural logarithm values","htmlid":"mw_32359097-d5c2-4c25-b66a-d8d17c2538ee","value":["quaternion object","array of quaternion objects"]}],"examples":[{"url":"quaternion.log.html#mw_50939f8a-e9cc-4764-95be-936d7388b5cf","open_command":"openExample('shared_rotations\/LogarithmicValuesOfAQuaternionArrayExample')","title":"Logarithmic Values of Quaternion Array"}],"seealso":[{"url":"quaternion.exp.html","name":"exp"},{"url":"quaternion.power.html","name":".^,power"},{"url":"quaternion.html","name":"quaternion"}]},{"href":"ref\/quaternion.meanrot.html","refentity":[{"type":"function","name":"meanrot","fcntype":"instancemethod"},{"type":"method","name":"quaternion.meanrot","fcntype":"instancemethod"}],"refpurpose":"Quaternion mean rotation","introduced":"R2019b","description":"This MATLAB function returns the average rotation of the elements of quat along the first array dimension whose size not does equal 1.","syntaxgroup":[{"title":"","syntax":["quatAverage = meanrot(quat)","quatAverage = meanrot(quat,dim)","quatAverage = meanrot(___,nanflag)"]}],"inputgroup":[{"title":"","inputs":[{"name":"quat","purpose":"Quaternion","htmlid":"d126e184130","value":["quaternion object","array of quaternion objects"]},{"name":"dim","purpose":"Dimension to operate along","htmlid":"mw_b88fdbfc-9e0b-46bb-b36f-d7fc433dd027","value":["positive integer scalar"]},{"name":"nanflag","purpose":"NaN condition","htmlid":"mw_359c754a-22c5-4b06-bf50-efdbce75c6ea","value":["\"includenan\"","\"omitnan\""],"defaultvalue":"\"includenan\""}]}],"outputs":[{"name":"quatAverage","purpose":"Quaternion average rotation","htmlid":"d126e184244","value":["quaternion object","array of quaternion objects"]}],"examples":[{"url":"quaternion.meanrot.html#mw_92c5c729-698f-4f23-a26e-684bc30b00fa","open_command":"openExample('shared_rotations\/QuaternionMeanRotationExample')","title":"Quaternion Mean Rotation"},{"url":"quaternion.meanrot.html#mw_883c15a1-80f9-475a-bb41-d963bde26068","open_command":"openExample('shared_rotations\/AverageOutRotationalNoiseExample')","title":"Average Out Rotational Noise"},{"url":"quaternion.meanrot.html#mw_f61856ea-a5d2-4569-a8c2-6b3c33fb8740","open_command":"openExample('shared_rotations\/EdgeCaseExample')","title":"The meanrot Algorithm and Limitations"}],"seealso":[{"url":"quaternion.dist.html","name":"dist"},{"url":"quaternion.slerp.html","name":"slerp"},{"url":"quaternion.html","name":"quaternion"}]},{"href":"ref\/quaternion.minus.html","refentity":[{"type":"function","name":"minus","fcntype":"instancemethod"},{"type":"function","name":"-","fcntype":"instancemethod"},{"type":"method","name":"quaternion.minus","fcntype":"instancemethod"}],"refpurpose":"Quaternion subtraction","introduced":"R2019b","description":"This MATLAB function subtracts quaternion B from quaternion A using quaternion subtraction.","syntaxgroup":[{"title":"","syntax":["C = A - B"]}],"inputgroup":[{"title":"","inputs":[{"name":"A","purpose":"Input","htmlid":"d126e184441","value":["quaternion object","array of quaternion objects","real scalar","array of real numbers"]}]},{"title":"","inputs":[{"name":"B","purpose":"Input","htmlid":"d126e184487","value":["quaternion object","array of quaternion objects","real scalar","array of real numbers"]}]}],"outputs":[{"name":"C","purpose":"Result","htmlid":"d126e184535","value":["quaternion object","array of quaternion objects"]}],"examples":[{"url":"quaternion.minus.html#mw_03b9842d-39b1-407a-afd0-5fbb94a64879","open_command":"openExample('shared_rotations\/SubtractAQuaternionFromAQuaternionExample')","title":"Subtract a Quaternion from a Quaternion"},{"url":"quaternion.minus.html#mw_efc23c18-99d1-4c00-b2c5-59e8e4e9bb9f","open_command":"openExample('shared_rotations\/SubtractARealNumberFromAQuaternionExample')","title":"Subtract a Real Number from a Quaternion"}],"seealso":[{"url":"quaternion.uminus.html","name":"uminus, -"},{"url":"quaternion.times.html","name":"times, .*"},{"url":"quaternion.mtimes.html","name":"mtimes, *"},{"url":"quaternion.html","name":"quaternion"}]},{"href":"ref\/quaternion.mldivide.html","refentity":[{"type":"function","name":"mldivide","fcntype":"instancemethod"},{"type":"function","name":"\\","fcntype":"instancemethod"},{"type":"method","name":"quaternion.mldivide","fcntype":"instancemethod"}],"refpurpose":"Quaternion left division for scalars","introduced":"R2024a","description":"This MATLAB function performs left division between a scalar and a quaternion or array of quaternions.","syntaxgroup":[{"title":"","syntax":["C = A\\B"]}],"inputgroup":[{"title":"","inputs":[{"name":"A","purpose":"Divisor","htmlid":"mw_1404e086-395e-4bf6-a011-c5465c944426","value":["quaternion object","array of quaternion objects","real scalar","array of real numbers"]},{"name":"B","purpose":"Dividend","htmlid":"mw_dcf7b5b7-ef89-41e2-a1ea-1657a9ff122d","value":["quaternion object","array of quaternion objects","real scalar","array of real numbers"]}]}],"outputs":[{"name":"C","purpose":"Result","htmlid":"mw_0061345a-6826-485c-8cde-7d828e851249","value":["quaternion object","array of quaternion objects"]}],"examples":[{"url":"quaternion.mldivide.html#mw_52a048e8-398d-460a-ba03-771c3fc947a6","title":"Left Divide Quaternion Array by Real Scalar"},{"url":"quaternion.mldivide.html#mw_80bf7077-3ad3-466e-b28d-6e88a0a1e71a","title":"Left Divide Quaternion Array by Quaternion Scalar"}],"seealso":[{"url":"quaternion.times.html","name":".*,times"},{"url":"quaternion.conj.html","name":"conj"},{"url":"quaternion.norm.html","name":"norm"},{"url":"quaternion.ldivide.html","name":".\\,ldivide"},{"url":"quaternion.mrdivide.html","name":"\/,mrdivide"},{"url":"quaternion.html","name":"quaternion"}]},{"href":"ref\/quaternion.mrdivide.html","refentity":[{"type":"function","name":"mrdivide","fcntype":"instancemethod"},{"type":"function","name":"\/","fcntype":"instancemethod"},{"type":"method","name":"quaternion.mrdivide","fcntype":"instancemethod"}],"refpurpose":"Quaternion right division for scalars","introduced":"R2024a","description":"This MATLAB function performs right division between a scalar and a quaternion or array of quaternions.","syntaxgroup":[{"title":"","syntax":["C = A\/B"]}],"inputgroup":[{"title":"","inputs":[{"name":"A","purpose":"Divisor","htmlid":"mw_f4865807-72d5-47a9-98f7-a8b6de7bbb95","value":["quaternion object","array of quaternion objects","real numeric scalar","array of real numbers"]},{"name":"B","purpose":"Dividend","htmlid":"mw_7ad04139-b7fc-45a9-b67d-b5816e6a1b5c","value":["quaternion object","array of quaternion objects","real scalar","array of real numbers"]}]}],"outputs":[{"name":"C","purpose":"Result","htmlid":"mw_b188b187-7418-49e1-aa61-8c44787dda38","value":["quaternion object","array of quaternion objects"]}],"examples":[{"url":"quaternion.mrdivide.html#mw_8e0f47b8-33b0-4be2-9fa3-94e646a69e98","title":"Divide Quaternion Array by Real Scalar"},{"url":"quaternion.mrdivide.html#mw_91170faa-4bcd-4f85-9ec6-0519145dd3ac","title":"Right Divide Quaternion Array by Quaternion Scalar"}],"seealso":[{"url":"quaternion.times.html","name":".*,times"},{"url":"quaternion.conj.html","name":"conj"},{"url":"quaternion.norm.html","name":"norm"},{"url":"quaternion.mldivide.html","name":"\\,mldivide"},{"url":"quaternion.rdivide.html","name":".\/,rdivide"},{"url":"quaternion.html","name":"quaternion"}]},{"href":"ref\/quaternion.mtimes.html","refentity":[{"type":"function","name":"mtimes","fcntype":"instancemethod"},{"type":"function","name":"*","fcntype":"instancemethod"},{"type":"method","name":"quaternion.mtimes","fcntype":"instancemethod"}],"refpurpose":"Quaternion multiplication","introduced":"R2019b","description":"This MATLAB function implements quaternion multiplication if either A or B is a quaternion.","syntaxgroup":[{"title":"","syntax":["quatC = A*B"]}],"inputgroup":[{"title":"","inputs":[{"name":"A","purpose":"Input to multiply","htmlid":"d126e185336","value":["quaternion object","array of quaternion objects","real scalar","array of real numbers"]}]},{"title":"","inputs":[{"name":"B","purpose":"Input to multiply","htmlid":"d126e185383","value":["quaternion object","array of quaternion objects","real scalar","array of real numbers"]}]}],"outputs":[{"name":"quatC","purpose":"Quaternion product","htmlid":"d126e185432","value":["quaternion object","array of quaternion objects"]}],"examples":[{"url":"quaternion.mtimes.html#mw_497bfa74-a2d6-44b3-9c3d-62f6aaae250f","open_command":"openExample('shared_rotations\/MultiplyQuaternionScalarAndQuaternionVectorExample')","title":"Multiply Quaternion Scalar and Quaternion Vector"}],"seealso":[{"url":"quaternion.times.html","name":".*,times"},{"url":"quaternion.html","name":"quaternion"}]},{"href":"ref\/quaternion.norm.html","refentity":[{"type":"function","name":"norm","fcntype":"instancemethod"},{"type":"method","name":"quaternion.norm","fcntype":"instancemethod"}],"refpurpose":"Quaternion norm","introduced":"R2019b","description":"This MATLAB function returns the quaternion's norm, quat, as the square root of the sum of its component squared.","syntaxgroup":[{"title":"","syntax":["N = norm(quat)"]}],"inputgroup":[{"title":"","inputs":[{"name":"quat","purpose":"Quaternion","htmlid":"d126e185697","value":["quaternion object","array of quaternion objects"]}]}],"outputs":[{"name":"N","purpose":"Quaternion norm","htmlid":"d126e185731","value":["real scalar","array of real numbers"]}],"examples":[{"url":"quaternion.norm.html#mw_766dcb78-c9d3-4fb4-ae92-621fd89b4f6d","open_command":"openExample('shared_rotations\/GetTheQuaternionNormExample')","title":"Calculate Quaternion Norm"}],"seealso":[{"url":"quaternion.normalize.html","name":"normalize"},{"url":"quaternion.parts.html","name":"parts"},{"url":"quaternion.conj.html","name":"conj"},{"url":"quaternion.html","name":"quaternion"}]},{"href":"ref\/quaternion.normalize.html","refentity":[{"type":"function","name":"normalize","fcntype":"instancemethod"},{"type":"method","name":"quaternion.normalize","fcntype":"instancemethod"}],"refpurpose":"Quaternion normalization","introduced":"R2019b","description":"This MATLAB function normalizes the quaternion.","syntaxgroup":[{"title":"","syntax":["quatNormalized = normalize(quat)"]}],"inputgroup":[{"title":"","inputs":[{"name":"quat","purpose":"Quaternion to normalize","htmlid":"d126e185879","value":["quaternion object","array of quaternion objects"]}]}],"outputs":[{"name":"quatNormalized","purpose":"Normalized quaternion","htmlid":"d126e185913","value":["quaternion object","array of quaternion objects"]}],"examples":[{"url":"quaternion.normalize.html#mw_adb8f92e-eeec-4fb3-9667-7c71739a5981","open_command":"openExample('shared_rotations\/NormalizeElementsOfAQuaternionVectorExample')","title":"Normalize Elements of Quaternion Vector"}],"seealso":[{"url":"quaternion.norm.html","name":"norm"},{"url":"quaternion.times.html","name":".*,times"},{"url":"quaternion.conj.html","name":"conj"},{"url":"quaternion.html","name":"quaternion"}]},{"href":"ref\/quaternion.ones.html","refentity":[{"type":"function","name":"ones","fcntype":"instancemethod"},{"type":"method","name":"quaternion.ones","fcntype":"instancemethod"}],"refpurpose":"Create quaternion array with real parts set to one and imaginary parts set to zero","introduced":"R2019b","description":"This MATLAB function returns a scalar quaternion with the real part set to 1 and the imaginary parts set to 0.","syntaxgroup":[{"title":"","syntax":["quatOnes = ones(\"quaternion\")","quatOnes = ones(n,\"quaternion\")","quatOnes = ones(sz,\"quaternion\")","quatOnes = ones(sz1,...,szN,\"quaternion\")"]},{"title":"","syntax":["quatOnes = ones(___,\"like\",prototype,\"quaternion\")"]}],"inputgroup":[{"title":"","inputs":[{"name":"n","purpose":"Size of square quaternion matrix","htmlid":"d126e186251","value":["integer value"]}]},{"title":"","inputs":[{"name":"sz","purpose":"Output size","htmlid":"d126e186309","value":["row vector of integer values"]},{"name":"prototype","purpose":"Quaternion prototype","htmlid":"d126e186359","value":["quaternion object"]}]},{"title":"","inputs":[{"name":"sz1,...,szN","purpose":"Size of each dimension","htmlid":"d126e186390","value":["two or more integer values"]}]}],"outputs":[{"name":"quatOnes","purpose":"Quaternion ones","htmlid":"d126e186448","value":["quaternion object","array of quaternion objects"]}],"examples":[{"url":"quaternion.ones.html#mw_699035d1-9b2f-4130-8bf4-9eb5cff89640","open_command":"openExample('shared_rotations\/QuaternionScalarOneExample')","title":"Quaternion Scalar One"},{"url":"quaternion.ones.html#mw_0c23f5bb-ceae-4778-86ca-40da8da6cf11","open_command":"openExample('shared_rotations\/SquareMatrixOfQuaternionOnesExample')","title":"Square Matrix of Quaternion Ones"},{"url":"quaternion.ones.html#mw_5841b395-190c-42f1-8b8f-7a548e207567","open_command":"openExample('shared_rotations\/MultiDimensionalArrayOfQuaternionOnesExample')","title":"Multidimensional Array of Quaternion Ones"},{"url":"quaternion.ones.html#mw_6f5130ed-62ad-4687-8d65-f8b88a05584a","open_command":"openExample('shared_rotations\/UnderlyingClassOfQuaternionOnesExample')","title":"Underlying Class of Quaternion Ones"}],"seealso":[{"url":"quaternion.zeros.html","name":"zeros"},{"url":"quaternion.html","name":"quaternion"}]},{"href":"ref\/quaternion.parts.html","refentity":[{"type":"function","name":"parts","fcntype":"instancemethod"},{"type":"method","name":"quaternion.parts","fcntype":"instancemethod"}],"refpurpose":"Extract quaternion parts","introduced":"R2019b","description":"This MATLAB function returns the parts of the quaternion array as arrays, each the same size as quat.","syntaxgroup":[{"title":"","syntax":["[a,b,c,d] = parts(quat)"]}],"inputgroup":[{"title":"","inputs":[{"name":"quat","purpose":"Quaternion","htmlid":"d126e186611","value":["quaternion object","array of quaternion objects"]}]}],"outputs":[{"name":"[a,b,c,d]","purpose":"Quaternion parts","htmlid":"d126e186645","value":["numeric array"]}],"examples":[{"url":"quaternion.parts.html#mw_cd8c3406-404e-4e58-9ebc-96f77bc287bc","open_command":"openExample('shared_rotations\/ConvertQuaternionToMatrixOfQuaternionPartsExample')","title":"Convert Quaternion to Matrix of Quaternion Parts"}],"seealso":[{"url":"quaternion.classunderlying.html","name":"classUnderlying"},{"url":"quaternion.compact.html","name":"compact"},{"url":"quaternion.html","name":"quaternion"}]},{"href":"ref\/quaternion.power.html","refentity":[{"type":"function","name":"power","fcntype":"instancemethod"},{"type":"function","name":".^","fcntype":"instancemethod"},{"type":"method","name":"quaternion.power","fcntype":"instancemethod"}],"refpurpose":"Element-wise quaternion power","introduced":"R2019b","description":"This MATLAB function raises each element of A to the corresponding power in b.","syntaxgroup":[{"title":"","syntax":["C = A.^b"]}],"inputgroup":[{"title":"","inputs":[{"name":"A","purpose":"Base","htmlid":"mw_a40aaaee-8702-4b88-8d18-34c2c0f8d9a8","value":["quaternion object","array of quaternion objects"]}]},{"title":"","inputs":[{"name":"b","purpose":"Exponent","htmlid":"mw_fa600ddc-a3da-4e11-9608-951c46f79813","value":["real scalar","array of real numbers"]}]}],"outputs":[{"name":"C","purpose":"Result","htmlid":"mw_0cac62b2-2ad7-4e65-b7d0-2ee975636940","value":["quaternion object","array of quaternion objects"]}],"examples":[{"url":"quaternion.power.html#mw_5fd7e676-406f-4d66-990d-21efe86f50ad","open_command":"openExample('shared_rotations\/RaiseAQuaternionToARealScalarPowerExample')","title":"Raise a Quaternion to a Real Scalar Power"},{"url":"quaternion.power.html#mw_32bbddf1-6382-47f8-b35a-f675bd898d7b","open_command":"openExample('shared_rotations\/RaiseAQuaternionArrayToPowersFromAMultidimensionalArrayExample')","title":"Raise a Quaternion Array to Powers from a Multidimensional Array"}],"seealso":[{"url":"quaternion.log.html","name":"log"},{"url":"quaternion.exp.html","name":"exp"},{"url":"quaternion.html","name":"quaternion"}]},{"href":"ref\/quaternion.prod.html","refentity":[{"type":"function","name":"prod","fcntype":"instancemethod"},{"type":"method","name":"quaternion.prod","fcntype":"instancemethod"}],"refpurpose":"Product of quaternion array","introduced":"R2019b","description":"This MATLAB function returns the quaternion product of the elements of the array.","syntaxgroup":[{"title":"","syntax":["quatProd = prod(quat)","quatProd = prod(quat,dim)"]}],"inputgroup":[{"title":"","inputs":[{"name":"quat","purpose":"Quaternions","htmlid":"d126e187134","value":["array of quaternion objects"]}]},{"title":"","inputs":[{"name":"dim","purpose":"Dimension","htmlid":"d126e187166","value":["positive integer"]}]}],"outputs":[{"name":"quatProd","purpose":"Quaternion product","htmlid":"d126e187218","value":["array of quaternion objects"]}],"examples":[{"url":"quaternion.prod.html#mw_54c2c0c9-6b81-41ee-a979-1e4073423d45","open_command":"openExample('shared_rotations\/ProductOfQuaternionsInEachColumnExample')","title":"Product of Quaternions in Each Column"},{"url":"quaternion.prod.html#mw_a4b6679d-eec8-4b4c-94e5-98d7613f081c","open_command":"openExample('shared_rotations\/ProductOfSpecifiedDimensionOfQuaternionArrayExample')","title":"Product of Specified Dimension of Quaternion Array"}],"seealso":[{"url":"quaternion.mtimes.html","name":"mtimes, *"},{"url":"quaternion.times.html","name":"times, .*"},{"url":"quaternion.html","name":"quaternion"}]},{"href":"ref\/quaternion.randrot.html","refentity":[{"type":"function","name":"randrot","fcntype":"instancemethod"},{"type":"method","name":"quaternion.randrot","fcntype":"instancemethod"}],"refpurpose":"Uniformly distributed random rotations","introduced":"R2019b","description":"This MATLAB function returns a unit quaternion drawn from a uniform distribution of random rotations.","syntaxgroup":[{"title":"","syntax":["R = randrot","R = randrot(m)","R = randrot(m1,...,mN)","R = randrot([m1,...,mN])"]}],"inputgroup":[{"title":"","inputs":[{"name":"m","purpose":"Size of square matrix","htmlid":"mw_22ec6570-ab4b-4b80-8c8b-6d6c99defcbf","value":["integer"]},{"name":"m1,...,mN","purpose":"Size of each dimension","htmlid":"mw_fd0bff8d-df2a-4d85-9351-fa6a9d247add","value":["two or more integer values"]},{"name":"[m1,...,mN]","purpose":"Vector of size of each dimension","htmlid":"mw_e72016de-5882-412c-8712-ac4dd8cb215c","value":["row vector of integer values"]}]}],"outputs":[{"name":"R","purpose":"Random quaternions","htmlid":"mw_0cb7bb78-237d-45e3-9e87-05b1a0c5e211","value":["quaternion object","array of quaternion objects"]}],"examples":[{"url":"quaternion.randrot.html#mw_0a2f31e7-5375-4bf0-8807-a0b19968383b","open_command":"openExample('shared_rotations\/MatrixOfRandomRotationsExample')","title":"Matrix of Random Rotations"},{"url":"quaternion.randrot.html#mw_a5272469-3675-455c-a1f8-9a20101e6bf1","open_command":"openExample('shared_rotations\/CreateUniformDistributionOfRandomRotationsExample')","title":"Create Uniform Distribution of Random Rotations"}],"seealso":[{"url":"quaternion.html","name":"quaternion"}]},{"href":"ref\/quaternion.rdivide.html","refentity":[{"type":"function","name":"rdivide","fcntype":"instancemethod"},{"type":"function","name":".\/","fcntype":"instancemethod"},{"type":"method","name":"quaternion.rdivide","fcntype":"instancemethod"}],"refpurpose":"Element-wise quaternion right division","introduced":"R2019b","description":"This MATLAB function performs quaternion element-wise division by dividing each element of quaternion A by the corresponding element of quaternion B.","syntaxgroup":[{"title":"","syntax":["C = A.\/B"]}],"inputgroup":[{"title":"","inputs":[{"name":"A","purpose":"Dividend","htmlid":"mw_fea38977-eec9-4aff-a828-31b16a603521","value":["quaternion object","array of quaternion objects","real scalar","array of real numbers"]}]},{"title":"","inputs":[{"name":"B","purpose":"Divisor","htmlid":"mw_51ddebb7-1ea0-4f11-999c-03714000057b","value":["quaternion object","array of quaternion objects","real scalar","array of real numbers"]}]}],"outputs":[{"name":"C","purpose":"Result","htmlid":"mw_8f55ceca-c1c6-4208-9d63-f39f358cfbc0","value":["quaternion object","array of quaternion objects"]}],"examples":[{"url":"quaternion.rdivide.html#mw_03a5eec9-ff14-4595-ad4f-4ed262c15044","open_command":"openExample('shared_rotations\/RDivideAQuaternionArrayByARealScalarExample')","title":"Divide a Quaternion Array by a Real Scalar"},{"url":"quaternion.rdivide.html#mw_aa86a781-bcdc-4513-955e-891d050ac304","open_command":"openExample('shared_rotations\/DivideARQuaternionArrayByAnotherQuaternionArrayExample')","title":"Divide a Quaternion Array by Another Quaternion Array"}],"seealso":[{"url":"quaternion.ldivide.html","name":".\\,ldivide"},{"url":"quaternion.mrdivide.html","name":"\/,mrdivide"},{"url":"quaternion.times.html","name":".*,times"},{"url":"quaternion.norm.html","name":"norm"},{"url":"quaternion.conj.html","name":"conj"},{"url":"quaternion.html","name":"quaternion"}]},{"href":"ref\/quaternion.rotateframe.html","refentity":[{"type":"function","name":"rotateframe","fcntype":"instancemethod"},{"type":"method","name":"quaternion.rotateframe","fcntype":"instancemethod"}],"refpurpose":"Quaternion frame rotation","introduced":"R2019b","description":"This MATLAB function rotates the frame of reference for the Cartesian points using the quaternion, quat.","syntaxgroup":[{"title":"","syntax":["rotationResult = rotateframe(quat,cartesianPoints)"]}],"inputgroup":[{"title":"","inputs":[{"name":"quat","purpose":"Quaternion that defines rotation","htmlid":"d126e188141","value":["quaternion object","vector of quaternion objects"]},{"name":"cartesianPoints","purpose":"Three-dimensional Cartesian points","htmlid":"d126e188187","value":["1-by-3 numeric vector","N-by-3 numeric matrix"]}]}],"outputs":[{"name":"rotationResult","purpose":"Re-referenced Cartesian points","htmlid":"d126e188240","value":["1-by-3 numeric vector","numeric matrix"]}],"examples":[{"url":"quaternion.rotateframe.html#mw_989d0b3d-c1f4-46cf-92b1-5692e6d6f3bf","open_command":"openExample('shared_rotations\/RotateFrameUsingQuaternionVectorExample')","title":"Rotate Frame Using Quaternion Vector"},{"url":"quaternion.rotateframe.html#mw_4b718b09-2f9d-40ec-8c2e-33567b2fd94e","open_command":"openExample('shared_rotations\/RereferenceGroupOfPointsUsingQuaternionExample')","title":"Re-reference Group of Points using Quaternion"}],"seealso":[{"url":"quaternion.rotatepoint.html","name":"rotatepoint"},{"url":"quaternion.html","name":"quaternion"}]},{"href":"ref\/quaternion.rotatepoint.html","refentity":[{"type":"function","name":"rotatepoint","fcntype":"instancemethod"},{"type":"method","name":"quaternion.rotatepoint","fcntype":"instancemethod"}],"refpurpose":"Quaternion point rotation","introduced":"R2019b","description":"This MATLAB function rotates the Cartesian points using the quaternion, quat.","syntaxgroup":[{"title":"","syntax":["rotationResult = rotatepoint(quat,cartesianPoints)"]}],"inputgroup":[{"title":"","inputs":[{"name":"quat","purpose":"Quaternion that defines rotation","htmlid":"d126e188576","value":["quaternion object","vector of quaternion objects"]},{"name":"cartesianPoints","purpose":"Three-dimensional Cartesian points","htmlid":"d126e188622","value":["1-by-3 numeric vector","N-by-3 numeric matrix"]}]}],"outputs":[{"name":"rotationResult","purpose":"Repositioned Cartesian points","htmlid":"d126e188675","value":["1-by-3 numeric vector","numeric matrix"]}],"examples":[{"url":"quaternion.rotatepoint.html#mw_509e754c-0fe9-47af-ab4c-f52acbfe2a6a","open_command":"openExample('shared_rotations\/RotatePointUsingQuaternionVectorExample')","title":"Rotate Point Using Quaternion Vector"},{"url":"quaternion.rotatepoint.html#mw_045253e7-ade6-4def-ab49-e476428f9f1c","open_command":"openExample('shared_rotations\/RotateGroupOfPointsUsingQuaternionExample')","title":"Rotate Group of Points Using Quaternion"}],"seealso":[{"url":"quaternion.rotateframe.html","name":"rotateframe"},{"url":"quaternion.html","name":"quaternion"}]},{"href":"ref\/quaternion.rotmat.html","refentity":[{"type":"function","name":"rotmat","fcntype":"instancemethod"},{"type":"method","name":"quaternion.rotmat","fcntype":"instancemethod"}],"refpurpose":"Convert quaternion to rotation matrix","introduced":"R2019b","description":"This MATLAB function converts the quaternion, quat, to an equivalent rotation matrix representation.","syntaxgroup":[{"title":"","syntax":["rotationMatrix = rotmat(quat,rotationType)"]}],"inputgroup":[{"title":"","inputs":[{"name":"quat","purpose":"Quaternion to convert","htmlid":"d126e189044","value":["quaternion object","array of quaternion objects"]}]},{"title":"","inputs":[{"name":"rotationType","purpose":"Type or rotation","htmlid":"d126e189076","value":["\"frame\"","\"point\""]}]}],"outputs":[{"name":"rotationMatrix","purpose":"Rotation matrix representation","htmlid":"d126e189115","value":["3-by-3 numeric matrix","3-by-3-by-N numeric array"]}],"examples":[{"url":"quaternion.rotmat.html#mw_3a7747c0-6988-4d5c-9be2-bcdab49005d7","open_command":"openExample('shared_rotations\/ConvertQuaternionToRotationMatrixExample')","title":"Convert Quaternion to Rotation Matrix for Point Rotation"},{"url":"quaternion.rotmat.html#mw_4b1095d5-a95a-4173-915c-7de534b7affb","open_command":"openExample('shared_rotations\/ConvertFrameQuaternionToRotationMatrixExample')","title":"Convert Quaternion to Rotation Matrix for Frame Rotation"},{"url":"quaternion.rotmat.html#mw_1e4e6f8c-3388-4249-959f-4a5e5b62f069","open_command":"openExample('shared_rotations\/ConvertQuaternionVectorToRotationMatricesExample')","title":"Convert Quaternion Vector to Rotation Matrices"}],"seealso":[{"url":"quaternion.rotvec.html","name":"rotvec"},{"url":"quaternion.rotvecd.html","name":"rotvecd"},{"url":"quaternion.euler.html","name":"euler"},{"url":"quaternion.eulerd.html","name":"eulerd"},{"url":"quaternion.html","name":"quaternion"}]},{"href":"ref\/quaternion.rotvec.html","refentity":[{"type":"function","name":"rotvec","fcntype":"instancemethod"},{"type":"method","name":"quaternion.rotvec","fcntype":"instancemethod"}],"refpurpose":"Convert quaternion to rotation vector (radians)","introduced":"R2019b","description":"This MATLAB function converts the quaternion array, quat, to an N-by-3 matrix of equivalent rotation vectors in radians.","syntaxgroup":[{"title":"","syntax":["rotationVector = rotvec(quat)"]}],"inputgroup":[{"title":"","inputs":[{"name":"quat","purpose":"Quaternion to convert","htmlid":"d126e189305","value":["quaternion object","array of quaternion objects"]}]}],"outputs":[{"name":"rotationVector","purpose":"Rotation vector (radians)","htmlid":"d126e189339","value":["N-by-3 numeric matrix"]}],"examples":[{"url":"quaternion.rotvec.html#mw_84565ebf-500c-4d8b-ab6d-93a9c845fdb7","open_command":"openExample('shared_rotations\/ConvertQuaternionToRotationVectorExample')","title":"Convert Quaternion to Rotation Vector in Radians"}],"seealso":[{"url":"quaternion.rotvecd.html","name":"rotvecd"},{"url":"quaternion.euler.html","name":"euler"},{"url":"quaternion.eulerd.html","name":"eulerd"},{"url":"quaternion.html","name":"quaternion"}]},{"href":"ref\/quaternion.rotvecd.html","refentity":[{"type":"function","name":"rotvecd","fcntype":"instancemethod"},{"type":"method","name":"quaternion.rotvecd","fcntype":"instancemethod"}],"refpurpose":"Convert quaternion to rotation vector (degrees)","introduced":"R2019b","description":"This MATLAB function converts the quaternion array, quat, to an N-by-3 matrix of equivalent rotation vectors in degrees.","syntaxgroup":[{"title":"","syntax":["rotationVector = rotvecd(quat)"]}],"inputgroup":[{"title":"","inputs":[{"name":"quat","purpose":"Quaternion to convert","htmlid":"d126e189546","value":["quaternion object","array of quaternion objects"]}]}],"outputs":[{"name":"rotationVector","purpose":"Rotation vector representation (degrees)","htmlid":"d126e189580","value":["N-by-3 numeric matrix"]}],"examples":[{"url":"quaternion.rotvecd.html#mw_43fae9f4-9998-4fe6-b71e-b4279f84f024","open_command":"openExample('shared_rotations\/ConvertQuaternionToRotationVectorInDegreesExample')","title":"Convert Quaternion to Rotation Vector in Degrees"}],"seealso":[{"url":"quaternion.rotvec.html","name":"rotvec"},{"url":"quaternion.euler.html","name":"euler"},{"url":"quaternion.eulerd.html","name":"eulerd"},{"url":"quaternion.html","name":"quaternion"}]},{"href":"ref\/quaternion.slerp.html","refentity":[{"type":"function","name":"slerp","fcntype":"instancemethod"},{"type":"method","name":"quaternion.slerp","fcntype":"instancemethod"}],"refpurpose":"Spherical linear interpolation","introduced":"R2019b","description":"This MATLAB function spherically interpolates between q1 and q2 by the interpolation coefficient T.","syntaxgroup":[{"title":"","syntax":["q0 = slerp(q1,q2,T)","q0 = slerp(q1,q2,T,method)"]}],"inputgroup":[{"title":"","inputs":[{"name":"q1","purpose":"Quaternion to interpolate","htmlid":"d126e190033","value":["quaternion object","array of quaternion objects"]},{"name":"q2","purpose":"Quaternion to interpolate","htmlid":"mw_23bc0698-a0c5-40ac-8eb9-408ddfe6b0e4","value":["quaternion object","array of quaternion objects"]},{"name":"T","purpose":"Interpolation coefficient","htmlid":"mw_9a721721-1951-4442-8ff6-dabb566deafc","value":["scalar","vector","matrix","multidimensional array"]},{"name":"method","purpose":"Spherical interpolation method","htmlid":"mw_bc3d6cf5-1337-4c10-a23a-bf3a8f1c020d","value":["\"short\"","\"natural\""],"defaultvalue":"\"short\""}]}],"outputs":[{"name":"q0","purpose":"Interpolated quaternion","htmlid":"d126e190195","value":["quaternion object","array of quaternion objects"]}],"examples":[{"url":"quaternion.slerp.html#mw_8beaa619-675f-4ee7-a13f-a47ca866762b","open_command":"openExample('shared_rotations\/InterpolateBetweenTwoQuaternionsExample')","title":"Interpolate Between Two Quaternions"},{"url":"quaternion.slerp.html#mw_4d344204-e725-48ec-80bc-eb058be02e72","open_command":"openExample('shared_rotations\/SLERPMinimizesGreatCirclePathExample')","title":"SLERP Minimizes Great Circle Path"},{"url":"quaternion.slerp.html#mw_418acfd7-ac05-4ef5-8a6b-fe1a3a326a69","open_command":"openExample('shared_rotations\/ShowInterpolatedQuaternionsOnSphereExample')","title":"Show Interpolated Quaternions on Sphere"}],"seealso":[{"url":"quaternion.dist.html","name":"dist"},{"url":"quaternion.meanrot.html","name":"meanrot"},{"url":"quaternion.html","name":"quaternion"}]},{"href":"ref\/quaternion.times.html","refentity":[{"type":"function","name":"times","fcntype":"instancemethod"},{"type":"function","name":".*","fcntype":"instancemethod"},{"type":"method","name":"quaternion.times","fcntype":"instancemethod"}],"refpurpose":"Element-wise quaternion multiplication","introduced":"R2019b","description":"This MATLAB function returns the element-by-element quaternion multiplication of quaternion arrays.","syntaxgroup":[{"title":"","syntax":["quatC = A.*B"]}],"inputgroup":[{"title":"","inputs":[{"name":"A","purpose":"Input to multiply","htmlid":"d126e190520","value":["quaternion object","array of quaternion objects","real scalar","array of real numbers"]}]},{"title":"","inputs":[{"name":"B","purpose":"Input to multiply","htmlid":"d126e190566","value":["quaternion object","array of quaternion objects","real scalar","array of real numbers"]}]}],"outputs":[{"name":"quatC","purpose":"Quaternion product","htmlid":"d126e190614","value":["quaternion object","array of quaternion objects"]}],"examples":[{"url":"quaternion.times.html#mw_fb991289-0cb2-4bbd-b5be-06f3d466a420","open_command":"openExample('shared_rotations\/MultiplyTwoQuaternionVectorsExample')","title":"Multiply Two Quaternion Vectors"},{"url":"quaternion.times.html#mw_57cf5534-3bcf-4cb4-a3cf-1b644bfd26f0","open_command":"openExample('shared_rotations\/MultiplyTwoQuaternionArraysExample')","title":"Multiply Two Quaternion Arrays"},{"url":"quaternion.times.html#mw_89e75a44-c90a-4b92-8656-64a81ddb93fc","open_command":"openExample('shared_rotations\/MultiplyQuaternionRowAndColumnVectorsExample')","title":"Multiply Quaternion Row and Column Vectors"}],"seealso":[{"url":"quaternion.prod.html","name":"prod"},{"url":"quaternion.mtimes.html","name":"mtimes, *"},{"url":"quaternion.html","name":"quaternion"}]},{"href":"ref\/quaternion.transpose.html","refentity":[{"type":"function","name":"transpose","fcntype":"instancemethod"},{"type":"function","name":".'","fcntype":"instancemethod"},{"type":"method","name":"quaternion.transpose","fcntype":"instancemethod"}],"refpurpose":"Transpose quaternion array","introduced":"R2019b","description":"This MATLAB function returns the non-conjugate transpose of the quaternion array, quat.","syntaxgroup":[{"title":"","syntax":["Y = quat.'"]}],"inputgroup":[{"title":"","inputs":[{"name":"quat","purpose":"Quaternion array to transpose","htmlid":"d126e190904","value":["vector of quaternion objects","matrix of quaternion objects"]}]}],"outputs":[{"name":"Y","purpose":"Transposed quaternion array","htmlid":"d126e190941","value":["vector of quaternion objects","matrix of quaternion objects"]}],"examples":[{"url":"quaternion.transpose.html#mw_904e4962-e7f5-40a4-84df-3587408e4f9f","open_command":"openExample('shared_rotations\/VectorTransposeExample')","title":"Vector Transpose"},{"url":"quaternion.transpose.html#mw_608c7010-a4fe-40b4-9735-c22b5fa57c43","open_command":"openExample('shared_rotations\/MatrixTransposeExample')","title":"Matrix Transpose"}],"seealso":[{"url":"quaternion.ctranspose.html","name":"ctranspose, '"},{"url":"quaternion.html","name":"quaternion"}]},{"href":"ref\/quaternion.uminus.html","refentity":[{"type":"function","name":"uminus","fcntype":"instancemethod"},{"type":"function","name":"-","fcntype":"instancemethod"},{"type":"method","name":"quaternion.uminus","fcntype":"instancemethod"}],"refpurpose":"Quaternion unary minus","introduced":"R2019b","description":"This MATLAB function negates the elements of quat and stores the result in mQuat.","syntaxgroup":[{"title":"","syntax":["mQuat = -quat"]}],"inputgroup":[{"title":"","inputs":[{"name":"quat","purpose":"Input quaternion","htmlid":"d126e191092","value":["quaternion object","array of quaternion objects"]}]}],"outputs":[{"name":"mQuat","purpose":"Negated quaternion","htmlid":"d126e191126","value":["quaternion object","array of quaternion objects"]}],"examples":[{"url":"quaternion.uminus.html#mw_48a5982e-5302-476d-98ba-d88d40ecb206","open_command":"openExample('shared_rotations\/NegateElementsOfQuaternionMatrixExample')","title":"Negate Elements of Quaternion Matrix"}],"seealso":[{"url":"quaternion.minus.html","name":"minus, -"},{"url":"quaternion.html","name":"quaternion"}]},{"href":"ref\/quaternion.zeros.html","refentity":[{"type":"function","name":"zeros","fcntype":"instancemethod"},{"type":"method","name":"quaternion.zeros","fcntype":"instancemethod"}],"refpurpose":"Create quaternion array with all parts set to zero","introduced":"R2019b","description":"This MATLAB function returns a scalar quaternion with all parts set to zero.","syntaxgroup":[{"title":"","syntax":["quatZeros = zeros(\"quaternion\")","quatZeros = zeros(n,\"quaternion\")","quatZeros = zeros(sz,\"quaternion\")","quatZeros = zeros(sz1,...,szN,\"quaternion\")"]},{"title":"","syntax":["quatZeros = zeros(___,\"like\",prototype,\"quaternion\")"]}],"inputgroup":[{"title":"","inputs":[{"name":"n","purpose":"Size of square quaternion matrix","htmlid":"d126e191441","value":["integer value"]}]},{"title":"","inputs":[{"name":"sz","purpose":"Output size","htmlid":"d126e191495","value":["row vector of integer values"]},{"name":"prototype","purpose":"Quaternion prototype","htmlid":"d126e191549","value":["quaternion object"]}]},{"title":"","inputs":[{"name":"sz1,...,szN","purpose":"Size of each dimension","htmlid":"d126e191580","value":["two or more integer values"]}]}],"outputs":[{"name":"quatZeros","purpose":"Quaternion zeros","htmlid":"d126e191643","value":["quaternion object","array of quaternion objects"]}],"examples":[{"url":"quaternion.zeros.html#mw_c3f45630-2020-484d-8a77-ec63ae45dab1","open_command":"openExample('shared_rotations\/QuaternionScalarZeroExample')","title":"Quaternion Scalar Zero"},{"url":"quaternion.zeros.html#mw_6e063ff2-ca59-4d68-b29a-883d25fc489e","open_command":"openExample('shared_rotations\/SquareMatrixOfQuaternionsExample')","title":"Square Matrix of Quaternions"},{"url":"quaternion.zeros.html#mw_793bd4fd-ee58-4f70-af8e-f9d1641c66dd","open_command":"openExample('shared_rotations\/MultiDimensionalArrayOfQuaternionZerosExample')","title":"Multidimensional Array of Quaternion Zeros"},{"url":"quaternion.zeros.html#mw_2850f539-2a23-412a-98e9-4ab93a4ee21d","open_command":"openExample('shared_rotations\/UnderlyingClassOfQuaternionZerosExample')","title":"Underlying Class of Quaternion Zeros"}],"seealso":[{"url":"quaternion.ones.html","name":"ones"},{"url":"quaternion.html","name":"quaternion"}]},{"href":"ref\/rangesensor-system-object.html","refentity":[{"type":"sysobj","name":"rangeSensor"},{"type":"function","name":"rangeSensor","fcntype":"constructor"}],"refpurpose":"Simulate range-bearing sensor readings","introduced":"R2019b","description":"The rangeSensor System object is a range-bearing sensor that is capable of outputting range and angle measurements based on the given sensor pose and occupancy map.","syntaxgroup":[{"title":"","syntaxtype":"createobject","syntax":["rbsensor = rangeSensor","rbsensor = rangeSensor(Name,Value)"]},{"title":"","syntaxtype":"usage","syntax":["[ranges,angles] = rbsensor(pose,map)"]}],"inputgroup":[{"title":"","inputs":[{"name":"pose","purpose":"Pose of sensor in map","syntaxtype":"usage","htmlid":"mw_d36767b3-9d32-4d57-b9a8-a7d6e3af6e17","value":["N-by-3 real-valued matrix"]},{"name":"map","purpose":"Ground-truth map","syntaxtype":"usage","htmlid":"d126e157677","value":["occupancyMap object","binaryOccupancyMap object"]}]}],"outputs":[{"name":"ranges","purpose":"Range readings","syntaxtype":"usage","htmlid":"mw_d8b4f03a-680f-45c2-8de5-bb8efe971fc8","value":["R-by-N real-valued matrix"]},{"name":"angles","purpose":"Angle readings","syntaxtype":"usage","htmlid":"d126e157752","value":["R-by-1 real-valued vector"]}],"classpropertygroup":[{"classproperty":[{"name":"Range","purpose":"Minimum and maximum detectable range","htmlid":"mw_e4dfdd89-46c8-4033-af52-e0563e151502","value":["[0 20]","1-by-2 nonnegative real-valued vector"],"defaultvalue":"[0 20]"},{"name":"HorizontalAngle","purpose":"Minimum and maximum horizontal detection angle","htmlid":"d126e157448","value":["[-pi pi]","1-by-2 real-valued vector"],"defaultvalue":"[-pi pi]"},{"name":"HorizontalAngleResolution","purpose":"Resolution of horizontal angle readings","htmlid":"d126e157478","value":["0.0244","positive scalar"],"defaultvalue":"0.0244"},{"name":"RangeNoise","purpose":"Standard deviation of range noise","htmlid":"d126e157508","value":["0","nonnegative scalar"],"defaultvalue":"0"},{"name":"HorizontalAngleNoise","purpose":"Standard deviation of horizontal angle noise","htmlid":"mw_b2cce7a0-025d-4a0b-a21a-bf651ad4526d","value":["0","nonnegative scalar"],"defaultvalue":"0"},{"name":"NumReadings","readonly":true,"purpose":"Number of output readings","htmlid":"d126e157569","value":["258","positive integer"],"defaultvalue":"258"}]}],"objectfunctions":[{"title":"Common to All System Objects","functions":[{"name":"step","url":"..\/..\/matlab\/ref\/step.html","description":"Run System object algorithm"},{"name":"clone","url":"..\/..\/matlab\/ref\/matlab.system.clone.html","description":"Create duplicate System object"}]}],"examples":[{"url":"rangesensor-system-object.html#mw_b30c4cf0-fe50-43af-9e29-a2ca672078e5","open_command":"openExample('nav\/ObtainRangeAndBearingReadingsExample')","title":"Obtain Range and Bearing Readings"}],"seealso":[{"url":"occupancymap.html","name":"occupancyMap"},{"url":"binaryoccupancymap.html","name":"binaryOccupancyMap"},{"url":"lidarscan.html","name":"lidarScan"}]},{"href":"ref\/ratecontrol.html","refentity":[{"type":"object","name":"rateControl"},{"type":"function","name":"rateControl","fcntype":"constructor"}],"refpurpose":"Execute loop at fixed frequency","introduced":"R2016a","description":"The rateControl object enables you to run a loop at a fixed frequency.","syntaxgroup":[{"title":"","syntax":["rateObj = rateControl(desiredRate)"]}],"classpropertygroup":[{"classproperty":[{"name":"DesiredRate","purpose":"Desired execution rate","htmlid":"d126e191792","value":["scalar"]},{"name":"DesiredPeriod","purpose":"Desired time period between executions","htmlid":"d126e191817","value":["scalar"]},{"name":"TotalElapsedTime","purpose":"Elapsed time since construction or reset","htmlid":"d126e191837","value":["scalar"]},{"name":"LastPeriod","purpose":"Elapsed time between last two calls to waitfor","htmlid":"d126e191854","value":["scalar","NaN"],"defaultvalue":"NaN"},{"name":"OverrunAction","purpose":"Method for handling overruns","htmlid":"mw_89cdaf3a-9536-4cff-9819-f478fed9bd2e","value":["'drop'","'slip'"],"defaultvalue":"'slip'"}]}],"objectfunctions":[{"title":"","functions":[{"name":"waitfor","url":"robotics.rate.waitfor.html","description":"Pause code execution to achieve desired execution rate"},{"name":"statistics","url":"statistics.html","description":"Statistics of past execution periods"},{"name":"reset","url":"reset.html","description":"Reset Rate object"}]}],"examples":[{"url":"ratecontrol.html#mw_0cc63a5b-46ec-4ced-97d0-7085136dffb8","open_command":"openExample('nav_robotics\/RunLoopAtFixedRateExample')","title":"Run Loop at Fixed Rate"},{"url":"ratecontrol.html#d126e191981","open_command":"openExample('nav_robotics\/GetStatisticsFromRateObjectExecutionExample')","title":"Get Statistics from Rate Object Execution"},{"url":"ratecontrol.html#d126e192021","open_command":"openExample('nav_robotics\/RunLoopAtFixedRateAndResetRateObjectExample')","title":"Run Loop at Fixed Rate and Reset Rate Object"}],"seealso":[{"url":"..\/..\/ros\/ref\/rosrate.html","name":"rosrate"},{"url":"robotics.rate.waitfor.html","name":"waitfor"},{"url":"statistics.html","name":"statistics"},{"url":"reset.html","name":"reset"}]},{"href":"ref\/readbinaryoccupancygrid.html","refentity":[{"type":"function","name":"readBinaryOccupancyGrid","fcntype":"simple"}],"refpurpose":"(To be removed) Read binary occupancy grid","deprecationstatus":"warn","introduced":"R2015a","description":"This MATLAB function returns a binaryOccupancyMap object by reading the data inside a ROS message, msg, which must be a 'nav_msgs\/OccupancyGrid' message.","syntaxgroup":[{"title":"","syntax":["map = readBinaryOccupancyGrid(msg)","map = readBinaryOccupancyGrid(msg,thresh)","map = readBinaryOccupancyGrid(msg,thresh,val)"]}],"inputgroup":[{"title":"","inputs":[{"name":"msg","purpose":"'nav_msgs\/OccupancyGrid' ROS message","htmlid":"buqblh_-msg","value":["OccupancyGrid object handle"]},{"name":"thresh","purpose":"Threshold for occupied values","htmlid":"buqblh_-thresh","value":["50","scalar"],"defaultvalue":"50"},{"name":"val","purpose":"Value to replace unknown values","htmlid":"buqblh_-val","value":["0","1"],"defaultvalue":"0"}]}],"outputs":[{"name":"map","purpose":"Binary occupancy grid","htmlid":"buqblh_-map","value":["binaryOccupancyMap object handle"]}],"seealso":[{"url":"..\/..\/ros\/ref\/occupancygrid.html","name":"OccupancyGrid"},{"url":"occupancymap.html","name":"occupancyMap"},{"url":"binaryoccupancymap.html","name":"binaryOccupancyMap"},{"url":"..\/..\/ros\/ref\/rosreadoccupancygrid.html","name":"rosReadOccupancyGrid"},{"url":"..\/..\/ros\/ref\/roswritebinaryoccupancygrid.html","name":"rosWriteBinaryOccupancyGrid"},{"url":"..\/..\/ros\/ref\/roswriteoccupancygrid.html","name":"rosWriteOccupancyGrid"}]},{"href":"ref\/readoccupancygrid.html","refentity":[{"type":"function","name":"readOccupancyGrid","fcntype":"simple"}],"refpurpose":"(To be removed) Read occupancy grid message","deprecationstatus":"warn","introduced":"R2016b","description":"This MATLAB function returns an occupancyMap object by reading the data inside a ROS message, msg, which must be a 'nav_msgs\/OccupancyGrid' message.","syntaxgroup":[{"title":"","syntax":["map = readOccupancyGrid(msg)"]}],"inputgroup":[{"title":"","inputs":[{"name":"msg","purpose":"'nav_msgs\/OccupancyGrid' ROS message","htmlid":"mw_7367eb30-78b6-4e0b-a26e-8b0beb0ebd58","value":["OccupancyGrid object handle"]}]}],"outputs":[{"name":"map","purpose":"Occupancy map","htmlid":"mw_16720dde-51c9-401a-97de-a32209af93b7","value":["occupancyMap object handle"]}],"seealso":[{"url":"..\/..\/ros\/ref\/rosreadbinaryoccupancygrid.html","name":"rosReadBinaryOccupancyGrid"},{"url":"..\/..\/ros\/ref\/rosreadoccupancymap3d.html","name":"rosReadOccupancyMap3D"},{"url":"..\/..\/ros\/ref\/roswritebinaryoccupancygrid.html","name":"rosWriteBinaryOccupancyGrid"},{"url":"..\/..\/ros\/ref\/roswriteoccupancygrid.html","name":"rosWriteOccupancyGrid"}]},{"href":"ref\/readoccupancymap3d.html","refentity":[{"type":"function","name":"readOccupancyMap3D","fcntype":"simple"}],"refpurpose":"(To be removed) Read 3-D map from Octomap ROS message","deprecationstatus":"warn","introduced":"R2021a","description":"This MATLAB function reads the data inside a ROS 'octomap_msgs\/Octomap' message to return an occupancyMap3D object.","syntaxgroup":[{"title":"","syntax":["map = readOccupancyMap3D(msg)"]}],"inputgroup":[{"title":"","inputs":[{"name":"msg","purpose":"Octomap ROS message","htmlid":"mw_ec54552f-5b2c-4e42-823c-e778f15f73a6","value":["structure"]}]}],"outputs":[{"name":"map","purpose":"3-D occupancy map","htmlid":"mw_be5ecc34-ebd2-4d4e-98e6-39b1cc02f82a","value":["occupancyMap3D object handle"]}],"seealso":[{"url":"occupancymap3d.html","name":"occupancyMap3D"},{"url":"..\/..\/ros\/ref\/rosmessage.html","name":"rosmessage"},{"url":"..\/..\/ros\/ref\/subscriber.html","name":"rossubscriber"}]},{"href":"ref\/receiverposition.html","refentity":[{"type":"function","name":"receiverposition","fcntype":"simple"}],"refpurpose":"Estimate GNSS receiver position and velocity","introduced":"R2021a","description":"This MATLAB function returns the receiver position estimated from the pseudoranges and satellite positions.","syntaxgroup":[{"title":"","syntax":["recPos = receiverposition(p,satPos)","[recPos,recVel] = receiverposition(___,pdot,satVel)","[recPos,recVel,hdop,vdop] = receiverposition(___)","[recPos,recVel,hdop,vdop,info] = receiverposition(___)"]}],"inputgroup":[{"title":"","inputs":[{"name":"p","purpose":"Pseudoranges between satellites and receiver","htmlid":"mw_7e7f3a4b-d608-4831-89b2-3a5c08748134","value":["n-element vector"]},{"name":"satPos","purpose":"Satellite positions","htmlid":"mw_97f64c01-056f-4742-b2df-ff6a260a6237","value":["N-by-3 matrix of scalars"]},{"name":"pdot","purpose":"Pseudorange rates between satellites and receiver","htmlid":"mw_0f41de84-52b7-4f0f-ab86-f9b5ebcf4de8","value":["n-element vector"]},{"name":"satVel","purpose":"Velocity readings in Earth-centered Earth-fixed (ECEF) coordinate system (m\/s)","htmlid":"mw_991ce2b7-0e56-4722-860f-5b17fb87c73b","value":["N-by-3 matrix of scalar"]}]}],"outputs":[{"name":"recPos","purpose":"Receiver position","htmlid":"mw_53b043b3-eef1-4f37-a051-06fe9278a014","value":["three-element vector of the form [lat lon alt]"]},{"name":"recVel","purpose":"Receiver velocity","htmlid":"mw_d731abb3-6229-43ff-b5b2-4b753afa0548","value":["three-element vector of the form [vx vy vz]"]},{"name":"hdop","purpose":"Horizontal dilution of precision","htmlid":"mw_b8a43a89-082b-42f5-b169-6f63463a8954","value":["scalar"]},{"name":"vdop","purpose":"Vertical dilution of precision","htmlid":"mw_c0e63186-e0a9-4eb4-b148-33c3935e7140","value":["scalar"]},{"name":"info","purpose":"Information about clock bias, clock drift, and TDOP","htmlid":"mw_25fadae2-200f-423e-bcf4-351c4739ccff","value":["structure"]}],"examples":[{"url":"receiverposition.html#mw_7e718b25-08c5-488c-befa-74cab9dcf560","open_command":"openExample('nav\/EstimateReceiverPositionFromPseudorangesAndSatellitePosExample')","title":"Estimate Receiver Position from Pseudoranges and Satellite Positions"}],"seealso":[{"url":"gnsssensor-system-object.html","name":"gnssSensor"},{"url":"gpssensor-system-object.html","name":"gpsSensor"},{"url":"imusensor-system-object.html","name":"imuSensor"},{"url":"skyplot.html","name":"skyplot"},{"url":"gnssconstellation.html","name":"gnssconstellation"},{"url":"lookangles.html","name":"lookangles"},{"url":"pseudoranges.html","name":"pseudoranges"}]},{"href":"ref\/reedssheppconnection.html","refentity":[{"type":"object","name":"reedsSheppConnection"},{"type":"function","name":"reedsSheppConnection","fcntype":"constructor"}],"refpurpose":"Reeds-Shepp path connection type","introduced":"R2019b","description":"The reedSheppConnection object holds information for computing a reedsSheppPathSegment object to connect between poses.","syntaxgroup":[{"title":"","syntax":["reedsConnObj = reedsSheppConnection","reedsConnObj = reedsSheppConnection(Name,Value)"]}],"classpropertygroup":[{"classproperty":[{"name":"MinTurningRadius","purpose":"Minimum turning radius","htmlid":"d126e192663","value":["1","positive scalar in meters"],"defaultvalue":"1"},{"name":"DisabledPathTypes","purpose":"Path types to disable","htmlid":"d126e192688","value":["{}","vector of string scalars","cell array of character vectors"],"defaultvalue":"{}"},{"name":"AllPathTypes","readonly":true,"purpose":"All possible path types","htmlid":"d126e192779","value":["cell array of character vectors"]},{"name":"ForwardCost","purpose":"Cost multiplier to travel forward","htmlid":"mw_1f302079-67e1-4b69-b45d-24f16b8a2d73","value":["1","positive numeric scalar"],"defaultvalue":"1"},{"name":"ReverseCost","purpose":"Cost multiplier to travel in reverse","htmlid":"mw_54048aac-b929-4f01-b7f9-70fd1248e807","value":["1","positive numeric scalar"],"defaultvalue":"1"}]}],"objectfunctions":[{"title":"","functions":[{"name":"connect","url":"dubinsconnection.connect.html","description":"Connect poses for given connection type"}]}],"examples":[{"url":"reedssheppconnection.html#mw_486ce81b-499f-4d1d-bb13-a9d20a6722d3","open_command":"openExample('nav\/ConnectPosesUsingReedsSheppConnectionPathExample')","title":"Connect Poses Using ReedsShepp Connection Path"},{"url":"reedssheppconnection.html#mw_014da578-63fc-4509-99d5-c155b06adf8f","open_command":"openExample('nav\/ModifyConnectionTypesForReedsSheppPathExample')","title":"Modify Connection Types for Reeds-Shepp Path"}],"seealso":[{"url":"reedsshepppathsegment.html","name":"reedsSheppPathSegment"},{"url":"dubinsconnection.html","name":"dubinsConnection"},{"url":"dubinspathsegment.html","name":"dubinsPathSegment"},{"url":"dubinsconnection.connect.html","name":"connect"},{"url":"dubinspathsegment.interpolate.html","name":"interpolate"},{"url":"dubinspathsegment.show.html","name":"show"}]},{"href":"ref\/reedsshepppathsegment.html","refentity":[{"type":"object","name":"reedsSheppPathSegment"}],"refpurpose":"Reeds-Shepp path segment connecting two poses","introduced":"R2019b","description":"The reedSheppPathSegment object holds information for a Reeds-Shepp path segment to connect between poses.","syntaxgroup":[{"title":"","syntax":["reedsPathSegObj = connect(connectionObj,start,goal)","reedsPathSegObj = reedsSheppPathSegment(connectionObj,start,goal,motionLengths,motionTypes)"]}],"classpropertygroup":[{"classproperty":[{"name":"MinTurningRadius","readonly":true,"purpose":"Minimum turning radius of vehicle","htmlid":"mw_0426921f-c404-46e8-aee1-e75c3d949f18","value":["positive scalar"]},{"name":"StartPose","readonly":true,"purpose":"Initial pose of vehicle","htmlid":"mw_ccfa6e53-7b30-4a69-b082-43b9b0c551e8","value":["[x, y, Θ] vector"]},{"name":"GoalPose","readonly":true,"purpose":"Goal pose of vehicle","htmlid":"mw_f6dbff22-1530-4e4a-a397-d3e7b3b65a02","value":["[x, y, Θ] vector"]},{"name":"MotionLengths","readonly":true,"purpose":"Length of each motion","htmlid":"mw_6a7bb3b7-9605-4fdd-8e8f-566003c6e03e","value":["five-element numeric vector"]},{"name":"MotionTypes","readonly":true,"purpose":"Type of each motion","htmlid":"mw_6588e806-6a47-4468-9584-c1e69a29d849","value":["five-element string cell array"]},{"name":"MotionDirections","readonly":true,"purpose":"Direction of each motion","htmlid":"mw_c7571b7a-dd9a-4359-a299-4fe0cf14efeb","value":["five-element vector of 1s (forward motion) and –1s (reverse motion)"]},{"name":"Length","readonly":true,"purpose":"Length of path segment","htmlid":"mw_2f125b06-c488-4b2c-ab51-c6ee0db66042","value":["positive scalar"]}]}],"objectfunctions":[{"title":"","functions":[{"name":"interpolate","url":"dubinspathsegment.interpolate.html","description":"Interpolate poses along path segment"},{"name":"show","url":"dubinspathsegment.show.html","description":"Visualize path segment"}]}],"examples":[{"url":"reedsshepppathsegment.html#mw_f245fbc6-d128-4ae3-91f8-c2a02c4bfa5f","open_command":"openExample('nav\/ConnectPosesUsingReedsSheppConnectionPathExample')","title":"Connect Poses Using ReedsShepp Connection Path"}],"seealso":[{"url":"reedssheppconnection.html","name":"reedsSheppConnection"},{"url":"dubinsconnection.html","name":"dubinsConnection"},{"url":"dubinspathsegment.html","name":"dubinsPathSegment"},{"url":"dubinspathsegment.interpolate.html","name":"interpolate"},{"url":"dubinspathsegment.show.html","name":"show"},{"url":"dubinsconnection.connect.html","name":"connect"}]},{"href":"ref\/referencepathfrenet.changeincurvature.html","refentity":[{"type":"function","name":"changeInCurvature","fcntype":"instancemethod"},{"type":"method","name":"referencePathFrenet.changeInCurvature","fcntype":"instancemethod"}],"refpurpose":"Return change-in-curvature at arclength","introduced":"R2022a","description":"This MATLAB function calculates the change-in-curvature with respect to change-in-arclength, dkappa, of the reference path at a given arclength, S.","syntaxgroup":[{"title":"","syntax":["dkappa = changeInCurvature(refPath,S)"]}],"inputgroup":[{"title":"","inputs":[{"name":"refPath","purpose":"Reference path","htmlid":"mw_dde3f58e-4601-4a9f-8a27-c08db14882b5_sep_mw_7ca4f8b5-8b57-496b-bfec-36958b45fda1","value":["referencePathFrenet object"]},{"name":"S","purpose":"Path arclengths","htmlid":"mw_dde3f58e-4601-4a9f-8a27-c08db14882b5_sep_mw_ff6861b7-228e-4ea5-a26a-c8b7c70baf1b","value":["N-element column vector"]}]}],"outputs":[{"name":"dkappa","purpose":"Change-in-curvature angles","htmlid":"mw_7ada4f2a-00c1-4d3e-af7b-2d4d4a7f2676","value":["N-element vector"]}],"seealso":[{"url":"referencepathfrenet.html","name":"referencePathFrenet"},{"url":"trajectorygeneratorfrenet.html","name":"trajectoryGeneratorFrenet"},{"url":"navpath.html","name":"navPath"},{"url":"referencepathfrenet.frenet2global.html","name":"frenet2global"},{"url":"referencepathfrenet.global2frenet.html","name":"global2frenet"},{"url":"referencepathfrenet.closestpoint.html","name":"closestPoint"},{"url":"referencepathfrenet.closestpointstosequence.html","name":"closestPointsToSequence"},{"url":"referencepathfrenet.closestprojections.html","name":"closestProjections"},{"url":"referencepathfrenet.curvature.html","name":"curvature"},{"url":"referencepathfrenet.tangentangle.html","name":"tangentAngle"},{"url":"referencepathfrenet.interpolate.html","name":"interpolate"},{"url":"referencepathfrenet.position.html","name":"position"},{"url":"referencepathfrenet.show.html","name":"show"}]},{"href":"ref\/referencepathfrenet.closestpoint.html","refentity":[{"type":"function","name":"closestPoint","fcntype":"instancemethod"},{"type":"method","name":"referencePathFrenet.closestPoint","fcntype":"instancemethod"}],"refpurpose":"Find closest point on reference path to global point","introduced":"R2020b","description":"This MATLAB function finds the closest point on the reference path to each of the specified (x,y)-positions points.","syntaxgroup":[{"title":"","syntax":["pathPoints = closestPoint(refPath,points)","[pathPoints,inWindow] = closestPoint(refPath,points)","[_] = closestPoint(refPath,points,searchWindow)"]}],"inputgroup":[{"title":"","inputs":[{"name":"refPath","purpose":"Reference path","htmlid":"mw_9b363272-3a47-45ea-8b0a-20041c366c61_sep_mw_7ca4f8b5-8b57-496b-bfec-36958b45fda1","value":["referencePathFrenet object"]},{"name":"points","purpose":"Global points","htmlid":"mw_9b363272-3a47-45ea-8b0a-20041c366c61_sep_mw_b4980125-f70a-4b55-97da-a50d971ce8b2","value":["P-by-2 numeric matrix"]},{"name":"searchWindow","purpose":"Search window","htmlid":"mw_cc61d5b1-1a1f-4e26-8d6b-125826293b72","value":["two-element row vector"]}]}],"outputs":[{"name":"pathPoints","purpose":"Closest points on reference path","htmlid":"mw_d632cdca-c618-4496-b5f4-7e6a7a4cdbbf","value":["N-by-6 numeric matrix"]},{"name":"inWindow","purpose":"Indicator of points being in search window","htmlid":"mw_9b363272-3a47-45ea-8b0a-20041c366c61_sep_mw_22f8704c-9cd2-49de-87cc-aca24f7a0460","value":["N-element logical column vector"]}],"examples":[{"url":"referencepathfrenet.closestpoint.html#mw_5e488cf9-3e7d-487a-a8ec-c0a984343f41","open_command":"openExample('nav\/GenerateTrajectoryFromReferencePathExample')","title":"Generate Trajectory from Reference Path"},{"url":"referencepathfrenet.closestpoint.html#mw_be889a3c-9f9a-4f6f-bee6-cfa80d8bbda7","open_command":"openExample('nav\/GetClosestPointsAtPathIntersectionExample')","title":"Get Closest Points at Path Intersections"}],"seealso":[{"url":"referencepathfrenet.html","name":"referencePathFrenet"},{"url":"trajectorygeneratorfrenet.html","name":"trajectoryGeneratorFrenet"},{"url":"navpath.html","name":"navPath"},{"url":"referencepathfrenet.frenet2global.html","name":"frenet2global"},{"url":"referencepathfrenet.global2frenet.html","name":"global2frenet"},{"url":"referencepathfrenet.closestpointstosequence.html","name":"closestPointsToSequence"},{"url":"referencepathfrenet.closestprojections.html","name":"closestProjections"},{"url":"referencepathfrenet.curvature.html","name":"curvature"},{"url":"referencepathfrenet.changeincurvature.html","name":"changeInCurvature"},{"url":"referencepathfrenet.tangentangle.html","name":"tangentAngle"},{"url":"referencepathfrenet.interpolate.html","name":"interpolate"},{"url":"referencepathfrenet.position.html","name":"position"},{"url":"referencepathfrenet.show.html","name":"show"}]},{"href":"ref\/referencepathfrenet.closestpointstosequence.html","refentity":[{"type":"function","name":"closestPointsToSequence","fcntype":"instancemethod"},{"type":"method","name":"referencePathFrenet.closestPointsToSequence","fcntype":"instancemethod"}],"refpurpose":"Projects sequence of points onto path","introduced":"R2022a","description":"This MATLAB function uses the closest point within a sequence of points, points, to be within the valid search window, initWindow.","syntaxgroup":[{"title":"","syntax":["pathPoints = closestPointsToSequence(refPath,points,initWindow)","[pathPoints,inWindow] = closestPointsToSequence(refPath,points,initWindow)"]}],"inputgroup":[{"title":"","inputs":[{"name":"refPath","purpose":"Reference path","htmlid":"mw_a70a1cdf-2a81-4ecd-9a33-78c50730446d_sep_mw_7ca4f8b5-8b57-496b-bfec-36958b45fda1","value":["referencePathFrenet object"]},{"name":"points","purpose":"Global points","htmlid":"mw_a70a1cdf-2a81-4ecd-9a33-78c50730446d_sep_mw_b4980125-f70a-4b55-97da-a50d971ce8b2","value":["P-by-2 numeric matrix"]},{"name":"initWindow","purpose":"Initial search window","htmlid":"mw_5adf8ac5-bc2d-40a3-a705-4dcbcd7e8217","value":["two-element row vector"]}]}],"outputs":[{"name":"pathPoints","purpose":"Closest points on reference path","htmlid":"mw_889683cc-088b-48cf-a66b-b79a02b63ed8","value":["N-by-6 numeric matrix"]},{"name":"inWindow","purpose":"Indicator of points being in search window","htmlid":"mw_a70a1cdf-2a81-4ecd-9a33-78c50730446d_sep_mw_22f8704c-9cd2-49de-87cc-aca24f7a0460","value":["N-element logical column vector"]}],"examples":[{"url":"referencepathfrenet.closestpointstosequence.html#mw_b84bc175-7e94-415e-a2f4-7ef4f7aaebbc","open_command":"openExample('nav\/GetClosestPointsInSlidingWindowForIntersectionExample')","title":"Get Closest Points in Sliding Window for Intersections"}],"seealso":[{"url":"referencepathfrenet.html","name":"referencePathFrenet"},{"url":"trajectorygeneratorfrenet.html","name":"trajectoryGeneratorFrenet"},{"url":"navpath.html","name":"navPath"},{"url":"referencepathfrenet.frenet2global.html","name":"frenet2global"},{"url":"referencepathfrenet.global2frenet.html","name":"global2frenet"},{"url":"referencepathfrenet.closestpoint.html","name":"closestPoint"},{"url":"referencepathfrenet.closestprojections.html","name":"closestProjections"},{"url":"referencepathfrenet.curvature.html","name":"curvature"},{"url":"referencepathfrenet.changeincurvature.html","name":"changeInCurvature"},{"url":"referencepathfrenet.tangentangle.html","name":"tangentAngle"},{"url":"referencepathfrenet.interpolate.html","name":"interpolate"},{"url":"referencepathfrenet.position.html","name":"position"},{"url":"referencepathfrenet.show.html","name":"show"}]},{"href":"ref\/referencepathfrenet.closestprojections.html","refentity":[{"type":"function","name":"closestProjections","fcntype":"instancemethod"},{"type":"method","name":"referencePathFrenet.closestProjections","fcntype":"instancemethod"}],"refpurpose":"Find orthogonal projections between path tangent vector and query point","introduced":"R2022a","description":"This MATLAB function attempts to project each xy point in the points matrix, onto each clothoid segment contained in the reference path, refPath, such that the projection vector is orthogonal to the path tangent-angle.","syntaxgroup":[{"title":"","syntax":["[arclengths,distances] = closestProjections(refPath,points)","[___,projPoints] = closestProjections(refPath,points)","[___] = closestProjections(refPath,points,bestN)","[___] = closestProjections(refPath,points,intervals)","[___] = closestProjections(refPath,points,intervals,bestN)"]}],"inputgroup":[{"title":"","inputs":[{"name":"refPath","purpose":"Reference path","htmlid":"mw_f1c7cb11-af58-42f8-bec8-0a309dd2cd13_sep_mw_7ca4f8b5-8b57-496b-bfec-36958b45fda1","value":["referencePathFrenet object"]},{"name":"points","purpose":"Global points","htmlid":"mw_f1c7cb11-af58-42f8-bec8-0a309dd2cd13_sep_mw_b4980125-f70a-4b55-97da-a50d971ce8b2","value":["P-by-2 numeric matrix"]},{"name":"bestN","purpose":"Best N projections","htmlid":"mw_96b2ca4a-7872-4401-b896-d5da28e3f545","value":["scalar in the range [1,N]"]},{"name":"intervals","purpose":"Arclength intervals","htmlid":"mw_bff5dbcc-1f6e-4798-aee5-39814a729b39","value":["N-by-2 matrix"]}]}],"outputs":[{"name":"arclengths","purpose":"Arclengths between curve and query points","htmlid":"mw_5404b998-f7aa-4d5d-a3f1-b270f4b02059","value":["M-element cell array"]},{"name":"distances","purpose":"Distances between curve and query points","htmlid":"mw_ad8a588a-f569-43d2-a2a1-6c1fdb1dce98","value":["M-element cell array"]},{"name":"projPoints","purpose":"Projected points","htmlid":"mw_52b28a92-a74f-4cff-abd6-0d0e2c3317db","value":["M-element cell array"]}],"examples":[{"url":"referencepathfrenet.closestprojections.html#mw_272410aa-b148-43d2-b606-6b3e8137a799","open_command":"openExample('nav\/CreateReferencePathWithMultipleIntersectionExample')","title":"Create Reference Path with Multiple Intersections"}],"seealso":[{"url":"referencepathfrenet.html","name":"referencePathFrenet"},{"url":"trajectorygeneratorfrenet.html","name":"trajectoryGeneratorFrenet"},{"url":"navpath.html","name":"navPath"},{"url":"referencepathfrenet.frenet2global.html","name":"frenet2global"},{"url":"referencepathfrenet.global2frenet.html","name":"global2frenet"},{"url":"referencepathfrenet.closestpoint.html","name":"closestPoint"},{"url":"referencepathfrenet.closestpointstosequence.html","name":"closestPointsToSequence"},{"url":"referencepathfrenet.curvature.html","name":"curvature"},{"url":"referencepathfrenet.changeincurvature.html","name":"changeInCurvature"},{"url":"referencepathfrenet.tangentangle.html","name":"tangentAngle"},{"url":"referencepathfrenet.interpolate.html","name":"interpolate"},{"url":"referencepathfrenet.position.html","name":"position"},{"url":"referencepathfrenet.show.html","name":"show"}]},{"href":"ref\/referencepathfrenet.copy.html","refentity":[{"type":"function","name":"copy","fcntype":"instancemethod"},{"type":"method","name":"referencePathFrenet.copy","fcntype":"instancemethod"}],"refpurpose":"Copy reference path","introduced":"R2022a","description":"This MATLAB function creates a deep copy of the referencePathFrenet object refPath with the same properties.","syntaxgroup":[{"title":"","syntax":["refPathCopy = copy(refPath)"]}],"inputgroup":[{"title":"","inputs":[{"name":"refPath","purpose":"Reference path","htmlid":"mw_488235f4-186b-447f-a98b-8aac54294e00_sep_mw_7ca4f8b5-8b57-496b-bfec-36958b45fda1","value":["referencePathFrenet object"]}]}],"outputs":[{"name":"refPathCopy","purpose":"Deep copy of reference path","htmlid":"mw_114c4f9e-b6b9-4473-9d60-c032bb4f0ffc","value":["referencePathFrenet object"]}],"seealso":[{"url":"referencepathfrenet.html","name":"referencePathFrenet"}]},{"href":"ref\/referencepathfrenet.curvature.html","refentity":[{"type":"function","name":"curvature","fcntype":"instancemethod"},{"type":"method","name":"referencePathFrenet.curvature","fcntype":"instancemethod"}],"refpurpose":"Return curvature at arclength","introduced":"R2022a","description":"This MATLAB function calculates the curvature angle, kappa of the reference path at a given arclength, S.","syntaxgroup":[{"title":"","syntax":["kappa = curvature(refPath,S)"]}],"inputgroup":[{"title":"","inputs":[{"name":"refPath","purpose":"Reference path","htmlid":"mw_73a3c082-6f6f-49ef-a679-bb5f8f1e58da_sep_mw_7ca4f8b5-8b57-496b-bfec-36958b45fda1","value":["referencePathFrenet object"]},{"name":"S","purpose":"Path arclengths","htmlid":"mw_73a3c082-6f6f-49ef-a679-bb5f8f1e58da_sep_mw_ff6861b7-228e-4ea5-a26a-c8b7c70baf1b","value":["N-element column vector"]}]}],"outputs":[{"name":"kappa","purpose":"Curvature angles","htmlid":"mw_f9fd1da7-e4b5-4381-82dd-6ac7031809e1","value":["N-element vector"]}],"seealso":[{"url":"referencepathfrenet.html","name":"referencePathFrenet"},{"url":"trajectorygeneratorfrenet.html","name":"trajectoryGeneratorFrenet"},{"url":"navpath.html","name":"navPath"},{"url":"referencepathfrenet.frenet2global.html","name":"frenet2global"},{"url":"referencepathfrenet.global2frenet.html","name":"global2frenet"},{"url":"referencepathfrenet.closestpoint.html","name":"closestPoint"},{"url":"referencepathfrenet.closestpointstosequence.html","name":"closestPointsToSequence"},{"url":"referencepathfrenet.closestprojections.html","name":"closestProjections"},{"url":"referencepathfrenet.changeincurvature.html","name":"changeInCurvature"},{"url":"referencepathfrenet.tangentangle.html","name":"tangentAngle"},{"url":"referencepathfrenet.interpolate.html","name":"interpolate"},{"url":"referencepathfrenet.position.html","name":"position"},{"url":"referencepathfrenet.show.html","name":"show"}]},{"href":"ref\/referencepathfrenet.frenet2global.html","refentity":[{"type":"function","name":"frenet2global","fcntype":"instancemethod"},{"type":"method","name":"referencePathFrenet.frenet2global","fcntype":"instancemethod"}],"refpurpose":"Convert Frenet states to global states","introduced":"R2020b","description":"This MATLAB function converts Frenet trajectory states to global states.","syntaxgroup":[{"title":"","syntax":["globalState = frenet2global(refPath,frenetState)","globalState = frenet2global(refPath,frenetState,latTimeDerivatives)"]}],"inputgroup":[{"title":"","inputs":[{"name":"refPath","purpose":"Reference path","htmlid":"mw_fb69391f-b018-446b-8522-444bdb276028_sep_mw_7ca4f8b5-8b57-496b-bfec-36958b45fda1","value":["referencePathFrenet object"]},{"name":"frenetState","purpose":"States in Frenet coordinate frame","htmlid":"mw_fb69391f-b018-446b-8522-444bdb276028_sep_mw_d3a9d3b3-361b-44b8-936f-6b67ee68b7d2","value":["P-by-6 numeric matrix"]},{"name":"latTimeDerivatives","purpose":"Lateral time derivatives","htmlid":"mw_fb69391f-b018-446b-8522-444bdb276028_sep_mw_b5d0f538-27e7-4351-9ff3-152584f29ffc","value":["N-by-3 matrix"]}]}],"outputs":[{"name":"globalState","purpose":"States in global coordinate frame","htmlid":"mw_fb69391f-b018-446b-8522-444bdb276028_sep_mw_0f060c9c-37a4-44f4-8f78-edb39f885f57","value":["P-by-6 numeric matrix"]}],"examples":[{"url":"referencepathfrenet.frenet2global.html#mw_438878f8-2831-4519-b2e7-b20a1bdf7765","open_command":"openExample('nav\/GenerateTrajectoryFromReferencePathExample')","title":"Generate Trajectory from Reference Path"}],"seealso":[{"url":"referencepathfrenet.html","name":"referencePathFrenet"},{"url":"trajectorygeneratorfrenet.html","name":"trajectoryGeneratorFrenet"},{"url":"navpath.html","name":"navPath"},{"url":"referencepathfrenet.global2frenet.html","name":"global2frenet"},{"url":"referencepathfrenet.closestpoint.html","name":"closestPoint"},{"url":"referencepathfrenet.closestpointstosequence.html","name":"closestPointsToSequence"},{"url":"referencepathfrenet.closestprojections.html","name":"closestProjections"},{"url":"referencepathfrenet.curvature.html","name":"curvature"},{"url":"referencepathfrenet.changeincurvature.html","name":"changeInCurvature"},{"url":"referencepathfrenet.tangentangle.html","name":"tangentAngle"},{"url":"referencepathfrenet.interpolate.html","name":"interpolate"},{"url":"referencepathfrenet.position.html","name":"position"},{"url":"referencepathfrenet.show.html","name":"show"}]},{"href":"ref\/referencepathfrenet.global2frenet.html","refentity":[{"type":"function","name":"global2frenet","fcntype":"instancemethod"},{"type":"method","name":"referencePathFrenet.global2frenet","fcntype":"instancemethod"}],"refpurpose":"Convert global states to Frenet states","introduced":"R2020b","description":"This MATLAB function converts global states to Frenet trajectory states.","syntaxgroup":[{"title":"","syntax":["frenetState = global2frenet(refPath,globalState)","[___,latTimeDerivatives] = global2frenet(refPath,globalState)","[___] = global2frenet(refPath,globalState,sFrame)"]}],"inputgroup":[{"title":"","inputs":[{"name":"refPath","purpose":"Reference path","htmlid":"mw_127274b4-75dc-4151-8800-68e317175f76_sep_mw_7ca4f8b5-8b57-496b-bfec-36958b45fda1","value":["referencePathFrenet object"]},{"name":"globalState","purpose":"States in global coordinate frame","htmlid":"mw_127274b4-75dc-4151-8800-68e317175f76_sep_mw_0f060c9c-37a4-44f4-8f78-edb39f885f57","value":["P-by-6 numeric matrix"]},{"name":"sFrame","purpose":"Arc length frame locations","htmlid":"mw_2baf074a-f748-4c23-8034-c450fa494c12","value":["N-element vector"]}]}],"outputs":[{"name":"frenetState","purpose":"States in Frenet coordinate frame","htmlid":"mw_127274b4-75dc-4151-8800-68e317175f76_sep_mw_d3a9d3b3-361b-44b8-936f-6b67ee68b7d2","value":["P-by-6 numeric matrix"]},{"name":"latTimeDerivatives","purpose":"Lateral time derivatives","htmlid":"mw_127274b4-75dc-4151-8800-68e317175f76_sep_mw_b5d0f538-27e7-4351-9ff3-152584f29ffc","value":["N-by-3 matrix"]}],"examples":[{"url":"referencepathfrenet.global2frenet.html#mw_8a2bc4bd-37bc-4030-bf39-65a5e494960c","open_command":"openExample('nav\/GenerateTrajectoryFromReferencePathExample')","title":"Generate Trajectory from Reference Path"}],"seealso":[{"url":"referencepathfrenet.html","name":"referencePathFrenet"},{"url":"trajectorygeneratorfrenet.html","name":"trajectoryGeneratorFrenet"},{"url":"navpath.html","name":"navPath"},{"url":"referencepathfrenet.frenet2global.html","name":"frenet2global"},{"url":"referencepathfrenet.closestpoint.html","name":"closestPoint"},{"url":"referencepathfrenet.closestpointstosequence.html","name":"closestPointsToSequence"},{"url":"referencepathfrenet.closestprojections.html","name":"closestProjections"},{"url":"referencepathfrenet.curvature.html","name":"curvature"},{"url":"referencepathfrenet.changeincurvature.html","name":"changeInCurvature"},{"url":"referencepathfrenet.tangentangle.html","name":"tangentAngle"},{"url":"referencepathfrenet.interpolate.html","name":"interpolate"},{"url":"referencepathfrenet.position.html","name":"position"},{"url":"referencepathfrenet.show.html","name":"show"}]},{"href":"ref\/referencepathfrenet.interpolate.html","refentity":[{"type":"function","name":"interpolate","fcntype":"instancemethod"},{"type":"method","name":"referencePathFrenet.interpolate","fcntype":"instancemethod"}],"refpurpose":"Interpolate reference path at provided arc lengths","introduced":"R2020b","description":"This MATLAB function interpolates the reference path at the provided arc lengths and returns the interpolated points on the path in global coordinates.","syntaxgroup":[{"title":"","syntax":["pathPoints = interpolate(refPath,arclengths)"]}],"inputgroup":[{"title":"","inputs":[{"name":"refPath","purpose":"Reference path","htmlid":"mw_e1bbedc6-1472-4569-a60b-2a8e8d08a395_sep_mw_7ca4f8b5-8b57-496b-bfec-36958b45fda1","value":["referencePathFrenet object"]}]},{"title":"","inputs":[{"name":"arclengths","purpose":"Distances along reference path","htmlid":"mw_474c16c5-729e-47c1-90ff-04922f0bda45","value":["N-element vector"]}]}],"outputs":[{"name":"pathPoints","purpose":"Points on reference path","htmlid":"mw_bb76bafd-ec6c-4527-bfcb-72c07064a4a1","value":["N-by-6 numeric matrix"]}],"examples":[{"url":"referencepathfrenet.interpolate.html#mw_bc70736e-fc9d-4106-a970-52274057aa43","open_command":"openExample('nav\/GenerateTrajectoryFromReferencePathExample')","title":"Generate Trajectory from Reference Path"}],"seealso":[{"url":"referencepathfrenet.html","name":"referencePathFrenet"},{"url":"trajectorygeneratorfrenet.html","name":"trajectoryGeneratorFrenet"},{"url":"navpath.html","name":"navPath"},{"url":"referencepathfrenet.closestpoint.html","name":"closestPoint"},{"url":"referencepathfrenet.closestpointstosequence.html","name":"closestPointsToSequence"},{"url":"referencepathfrenet.closestprojections.html","name":"closestProjections"},{"url":"referencepathfrenet.curvature.html","name":"curvature"},{"url":"referencepathfrenet.changeincurvature.html","name":"changeInCurvature"},{"url":"referencepathfrenet.tangentangle.html","name":"tangentAngle"},{"url":"referencepathfrenet.frenet2global.html","name":"frenet2global"},{"url":"referencepathfrenet.global2frenet.html","name":"global2frenet"},{"url":"referencepathfrenet.position.html","name":"position"},{"url":"referencepathfrenet.show.html","name":"show"}]},{"href":"ref\/referencepathfrenet.html","refentity":[{"type":"object","name":"referencePathFrenet"},{"type":"function","name":"referencePathFrenet","fcntype":"constructor"}],"refpurpose":"Smooth reference path fit to waypoints","introduced":"R2020b","description":"The referencePathFrenet object fits a smooth, piecewise, continuous curve to a set of waypoints given as [x y] or [x y theta].","syntaxgroup":[{"title":"","syntax":["refPathObj = referencePathFrenet(waypoints)","refPathObj = referencePathFrenet(___,Name,Value)"]}],"classpropertygroup":[{"classproperty":[{"name":"Waypoints","purpose":"Presampled points along path","htmlid":"mw_f0fa96c8-b260-4273-9ab6-c02546dee610","value":["P-by-2 numeric matrix","P-by-3 numeric matrix"]},{"name":"PathLength","readonly":true,"purpose":"Total arclength along the path","htmlid":"mw_e3b0ac66-f025-4a56-b504-56d2e349515e","value":["nonnegative scalar"]},{"name":"SegmentParameters","readonly":true,"purpose":"Clothoid parameters at start of segments","htmlid":"mw_095aa10e-e4f6-4150-8173-bdd616d10678","value":["N-by-6 matrix"]},{"name":"DiscretizationDistance","purpose":"Arc length between interpolated path points","htmlid":"mw_d14f3ec1-c5a5-41d4-a2a1-9b3055d015dd","value":["0.05","positive scalar"],"defaultvalue":"0.05"},{"name":"MaxNumWaypoints","purpose":"Maximum waypoints allowed in path","htmlid":"mw_fbcefa69-bd5c-4e84-8899-27dc59cc8a5c","value":["Inf","positive integer"],"defaultvalue":"Inf"}]}],"objectfunctions":[{"title":"","functions":[{"name":"closestPoint","url":"referencepathfrenet.closestpoint.html","description":"Find closest point on reference path to global point"},{"name":"closestPointsToSequence","url":"referencepathfrenet.closestpointstosequence.html","description":"Projects sequence of points onto path"},{"name":"closestProjections","url":"referencepathfrenet.closestprojections.html","description":"Find orthogonal projections between path tangent vector and query point"},{"name":"curvature","url":"referencepathfrenet.curvature.html","description":"Return curvature at arclength"},{"name":"changeInCurvature","url":"referencepathfrenet.changeincurvature.html","description":"Return change-in-curvature at arclength"},{"name":"frenet2global","url":"referencepathfrenet.frenet2global.html","description":"Convert Frenet states to global states"},{"name":"global2frenet","url":"referencepathfrenet.global2frenet.html","description":"Convert global states to Frenet states"},{"name":"interpolate","url":"referencepathfrenet.interpolate.html","description":"Interpolate reference path at provided arc lengths"},{"name":"position","url":"referencepathfrenet.position.html","description":"Return xy-position at arclength"},{"name":"tangentAngle","url":"referencepathfrenet.tangentangle.html","description":"Return tangent angle at arclength"},{"name":"show","url":"referencepathfrenet.show.html","description":"Display reference path in figure"},{"name":"copy","url":"referencepathfrenet.copy.html","description":"Copy reference path"}]}],"examples":[{"url":"referencepathfrenet.html#mw_b2065346-246d-44f7-b024-1de3b5e16c85","open_command":"openExample('nav\/GenerateAlternativeTrajectoriesForReferencePathExample')","title":"Generate Alternative Trajectories for Reference Path"}],"seealso":[{"url":"trajectorygeneratorfrenet.html","name":"trajectoryGeneratorFrenet"},{"url":"navpath.html","name":"navPath"},{"url":"referencepathfrenet.closestpoint.html","name":"closestPoint"},{"url":"referencepathfrenet.frenet2global.html","name":"frenet2global"},{"url":"referencepathfrenet.global2frenet.html","name":"global2frenet"},{"url":"referencepathfrenet.interpolate.html","name":"interpolate"},{"url":"referencepathfrenet.show.html","name":"show"}]},{"href":"ref\/referencepathfrenet.position.html","refentity":[{"type":"function","name":"position","fcntype":"instancemethod"},{"type":"method","name":"referencePathFrenet.position","fcntype":"instancemethod"}],"refpurpose":"Return xy-position at arclength","introduced":"R2022b","description":"This MATLAB function calculates the xy-position pos of the reference path refPath at the specified arclength, S.","syntaxgroup":[{"title":"","syntax":["pos = position(refPath,S)"]}],"inputgroup":[{"title":"","inputs":[{"name":"refPath","purpose":"Reference path","htmlid":"mw_4fe9a061-c167-4843-8343-179a0d826ee1_sep_mw_7ca4f8b5-8b57-496b-bfec-36958b45fda1","value":["referencePathFrenet object"]},{"name":"S","purpose":"Path arclengths","htmlid":"mw_4fe9a061-c167-4843-8343-179a0d826ee1_sep_mw_ff6861b7-228e-4ea5-a26a-c8b7c70baf1b","value":["N-element column vector"]}]}],"outputs":[{"name":"pos","purpose":"xy-position","htmlid":"mw_65e03774-60e8-448a-b671-e61162ed58f0","value":["N-by-2 matrix"]}],"seealso":[{"url":"referencepathfrenet.html","name":"referencePathFrenet"},{"url":"referencepathfrenet.closestpoint.html","name":"closestPoint"},{"url":"referencepathfrenet.closestpointstosequence.html","name":"closestPointsToSequence"},{"url":"referencepathfrenet.closestprojections.html","name":"closestProjections"},{"url":"referencepathfrenet.curvature.html","name":"curvature"},{"url":"referencepathfrenet.changeincurvature.html","name":"changeInCurvature"},{"url":"referencepathfrenet.frenet2global.html","name":"frenet2global"},{"url":"referencepathfrenet.global2frenet.html","name":"global2frenet"},{"url":"referencepathfrenet.interpolate.html","name":"interpolate"},{"url":"referencepathfrenet.tangentangle.html","name":"tangentAngle"},{"url":"referencepathfrenet.show.html","name":"show"}]},{"href":"ref\/referencepathfrenet.show.html","refentity":[{"type":"function","name":"show","fcntype":"instancemethod"},{"type":"method","name":"referencePathFrenet.show","fcntype":"instancemethod"}],"refpurpose":"Display reference path in figure","introduced":"R2020b","description":"This MATLAB function displays the reference path and its lateral states in the current figure.","syntaxgroup":[{"title":"","syntax":["show(refPath)","show(refPath,'Parent',parentAx)","ax = show(___)"]}],"inputgroup":[{"title":"","inputs":[{"name":"refPath","purpose":"Reference path","htmlid":"mw_a41972b5-5470-45a9-a9a0-cffa4365b296_sep_mw_7ca4f8b5-8b57-496b-bfec-36958b45fda1","value":["referencePathFrenet object"]}]}],"outputs":[{"name":"ax","purpose":"Axes on which the reference path is plotted","htmlid":"mw_5757fe69-e6f2-4dbf-be06-9447dc30eb44","value":["Axes handle"]}],"examples":[{"url":"referencepathfrenet.show.html#mw_ba0c6461-dff9-4c05-b29f-9b041a214cec","open_command":"openExample('nav\/GenerateAlternativeTrajectoriesForReferencePathExample')","title":"Generate Alternative Trajectories for Reference Path"}],"seealso":[{"url":"referencepathfrenet.html","name":"referencePathFrenet"},{"url":"trajectorygeneratorfrenet.html","name":"trajectoryGeneratorFrenet"},{"url":"navpath.html","name":"navPath"},{"url":"referencepathfrenet.closestpoint.html","name":"closestPoint"},{"url":"referencepathfrenet.closestpoint.html","name":"closestPoint"},{"url":"referencepathfrenet.closestpointstosequence.html","name":"closestPointsToSequence"},{"url":"referencepathfrenet.closestprojections.html","name":"closestProjections"},{"url":"referencepathfrenet.curvature.html","name":"curvature"},{"url":"referencepathfrenet.changeincurvature.html","name":"changeInCurvature"},{"url":"referencepathfrenet.tangentangle.html","name":"tangentAngle"},{"url":"referencepathfrenet.frenet2global.html","name":"frenet2global"},{"url":"referencepathfrenet.global2frenet.html","name":"global2frenet"},{"url":"referencepathfrenet.interpolate.html","name":"interpolate"},{"url":"referencepathfrenet.position.html","name":"position"}]},{"href":"ref\/referencepathfrenet.tangentangle.html","refentity":[{"type":"function","name":"tangentAngle","fcntype":"instancemethod"},{"type":"method","name":"referencePathFrenet.tangentAngle","fcntype":"instancemethod"}],"refpurpose":"Return tangent angle at arclength","introduced":"R2022a","description":"This MATLAB function calculates the tangent angle, theta, of the reference path at specified arclength, S.","syntaxgroup":[{"title":"","syntax":["theta = tangentAngle(refPath,S)"]}],"inputgroup":[{"title":"","inputs":[{"name":"refPath","purpose":"Reference path","htmlid":"mw_64ecdf85-5e35-4ad7-bda4-19474a28341c_sep_mw_7ca4f8b5-8b57-496b-bfec-36958b45fda1","value":["referencePathFrenet object"]},{"name":"S","purpose":"Path arclengths","htmlid":"mw_64ecdf85-5e35-4ad7-bda4-19474a28341c_sep_mw_ff6861b7-228e-4ea5-a26a-c8b7c70baf1b","value":["N-element column vector"]}]}],"outputs":[{"name":"theta","purpose":"Path tangent angles","htmlid":"mw_7452fad7-b42e-494c-aa25-7d65e59775dd","value":["N-element vector"]}],"seealso":[{"url":"referencepathfrenet.html","name":"referencePathFrenet"},{"url":"trajectorygeneratorfrenet.html","name":"trajectoryGeneratorFrenet"},{"url":"navpath.html","name":"navPath"},{"url":"referencepathfrenet.frenet2global.html","name":"frenet2global"},{"url":"referencepathfrenet.global2frenet.html","name":"global2frenet"},{"url":"referencepathfrenet.closestpoint.html","name":"closestPoint"},{"url":"referencepathfrenet.closestpointstosequence.html","name":"closestPointsToSequence"},{"url":"referencepathfrenet.closestprojections.html","name":"closestProjections"},{"url":"referencepathfrenet.curvature.html","name":"curvature"},{"url":"referencepathfrenet.changeincurvature.html","name":"changeInCurvature"},{"url":"referencepathfrenet.interpolate.html","name":"interpolate"},{"url":"referencepathfrenet.position.html","name":"position"},{"url":"referencepathfrenet.show.html","name":"show"}]},{"href":"ref\/removeinvaliddata.html","refentity":[{"type":"function","name":"removeInvalidData","fcntype":"simple"}],"refpurpose":"Remove invalid range and angle data","introduced":"R2019b","description":"This MATLAB functionreturns a new lidarScan object with all Inf and NaN values from the input scan removed.","syntaxgroup":[{"title":"","syntax":["validScan = removeInvalidData(scan)","validScan = removeInvalidData(scan,Name,Value)"]}],"inputgroup":[{"title":"","inputs":[{"name":"scan","purpose":"Lidar scan readings","htmlid":"d126e35004","value":["lidarScan object"]}]},{"namevaluepairs":[{"title":"","inputs":[{"name":"RangeLimits","purpose":"Range reading limits","htmlid":"d126e35050","value":["two-element vector"]}]},{"title":"","inputs":[{"name":"AngleLimits","purpose":"Angle limits","htmlid":"d126e35079","value":["two-element vector"]}]}]}],"outputs":[{"name":"validScan","purpose":"Lidar scan readings","htmlid":"d126e35115","value":["lidarScan object"]}],"examples":[{"url":"removeinvaliddata.html#mw_9caa3e53-75b0-457a-ae80-388e5e20c887","open_command":"openExample('nav\/PlotLidarScanAndRemoveInvalidPointsExample')","title":"Plot Lidar Scan and Remove Invalid Points"}],"seealso":[{"url":"lidarscan.html","name":"lidarScan"},{"url":"lidarscan.transformscan.html","name":"transformScan"},{"url":"matchscans.html","name":"matchScans"}]},{"href":"ref\/resamplingpolicypf.html","refentity":[{"type":"object","name":"resamplingPolicyPF"},{"type":"function","name":"resamplingPolicyPF","fcntype":"constructor"}],"refpurpose":"Create resampling policy object with resampling settings","introduced":"R2019b","description":"The resamplingPolicyPF object stores settings for when resampling should occur when using a particle filter for state estimation.","syntaxgroup":[{"title":"","syntax":["policy = resamplingPolicyPF"]}],"classpropertygroup":[{"classproperty":[{"name":"TriggerMethod","purpose":"Method for determining if resampling should occur","htmlid":"bu31eos-1-TriggerMethod","value":["'ratio'","character vector"],"defaultvalue":"'ratio'"},{"name":"SamplingInterval","purpose":"Fixed interval between resampling","htmlid":"bu31eos-1-SamplingInterval","value":["1","scalar"],"defaultvalue":"1"},{"name":"MinEffectiveParticleRatio","purpose":"Minimum desired ratio of effective to total particles","htmlid":"bu31eos-1-MinEffectiveParticleRatio","value":["0.5","scalar"],"defaultvalue":"0.5"}]}],"examples":[{"url":"resamplingpolicypf.html#mw_0920bd51-ad51-4faf-bb91-b0cad38e6f75","open_command":"openExample('nav_robotics\/UpdatePolicySettingsOfParticleFilterExample')","title":"Update Policy Settings of Particle Filter"}],"seealso":[{"url":"stateestimatorpf.html","name":"stateEstimatorPF"},{"url":"stateestimatorpf.correct.html","name":"correct"}]},{"href":"ref\/reset.html","refentity":[{"type":"method","name":"robotics.Rate.reset","fcntype":"instancemethod"}],"packagename":"robotics","refpurpose":"Reset Rate object","introduced":"R2016a","description":"This MATLAB function resets the state of the Rate object, including the elapsed time and all statistics about previous periods.","syntaxgroup":[{"title":"","syntax":["reset(rate)"]}],"inputgroup":[{"title":"","inputs":[{"name":"rate","purpose":"Rate object","htmlid":"d126e192143","value":["handle"]}]}],"examples":[{"url":"reset.html#mw_354545e2-ef1f-465f-97b4-40b409ac4bf3","open_command":"openExample('nav_robotics\/RunLoopAtFixedRateAndResetRateObjectExample')","title":"Run Loop at Fixed Rate and Reset Rate Object"}],"seealso":[{"url":"ratecontrol.html","name":"rateControl"},{"url":"robotics.rate.waitfor.html","name":"waitfor"}]},{"href":"ref\/rgbdvslam.addframe.html","refentity":[{"type":"function","name":"addFrame","fcntype":"instancemethod"},{"type":"method","name":"rgbdvslam.addFrame","fcntype":"instancemethod"}],"refpurpose":"Add pair of color and depth images to RGB-D visual SLAM object","introduced":"R2025a","description":"This MATLAB function adds the pair of color and depth images, colorImage and depthImage respectively, to the RGB-D visual SLAM object vslam.","syntaxgroup":[{"title":"","syntax":["addFrame(vslam,colorImage,depthImage)","addFrame(___,gyro,accel)"]}],"inputgroup":[{"title":"","inputs":[{"name":"vslam","purpose":"RGB-D visual SLAM object","htmlid":"mw_18a75873-3226-4cd0-802b-7a13489357ba_sep_mw_502bd92c-b78c-479f-9de7-0b90442f0fc3","value":["rgbdvslam object"]},{"name":"colorImage","purpose":"Color image","htmlid":"mw_18a75873-3226-4cd0-802b-7a13489357ba_sep_mw_eb816541-670f-4bf5-8f53-daaf0cf67076","value":["RGB image","grayscale image"]},{"name":"depthImage","purpose":"Depth image","htmlid":"mw_b962ca47-15ae-4600-a49f-0378d320b8c5","value":["grayscale image"]},{"name":"gyro","purpose":"Gyroscope measurement","htmlid":"mw_79f82609-f677-4f04-98bd-dad121360633","value":["N-by-3 matrix"]},{"name":"accel","purpose":"Acceleration measurement","htmlid":"mw_1b285c33-7a65-496d-90e3-80b066576408","value":["N-by-3 matrix"]}]}],"examples":[{"url":"rgbdvslam.addframe.html#mw_abafb646-3b1b-49bf-b614-be9fde76226e","open_command":"openExample('slam\/RGBDVisualSLAMUsingTUMRGBDDataSetExample')","title":"RGB-D Visual SLAM Using TUM RGB-D Data Set"},{"url":"rgbdvslam.addframe.html#mw_5dedd06d-acc6-44fe-83f6-dad07ca2173f","open_command":"openExample('slam\/RGBDVisualInertialSLAMUsingOpenLORISSceneDataSetExample')","title":"RGB-D Visual-Inertial SLAM Using OpenLORIS-Scene Data Set"}],"seealso":[{"url":"rgbdvslam.html","name":"rgbdvslam"},{"url":"rgbdvslam.hasnewkeyframe.html","name":"hasNewKeyFrame"},{"url":"rgbdvslam.checkstatus.html","name":"checkStatus"},{"url":"rgbdvslam.isdone.html","name":"isDone"},{"url":"rgbdvslam.mappoints.html","name":"mapPoints"},{"url":"rgbdvslam.poses.html","name":"poses"},{"url":"rgbdvslam.plot.html","name":"plot"},{"url":"rgbdvslam.reset.html","name":"reset"}]},{"href":"ref\/rgbdvslam.checkstatus.html","refentity":[{"type":"function","name":"checkStatus","fcntype":"instancemethod"},{"type":"method","name":"rgbdvslam.checkStatus","fcntype":"instancemethod"}],"refpurpose":"Check status of visual RGB-D SLAM object","introduced":"R2025a","description":"This MATLAB function returns the current status of the RGB-D visual SLAM object.","syntaxgroup":[{"title":"","syntax":["status = checkStatus(vslam)"]}],"inputgroup":[{"title":"","inputs":[{"name":"vslam","purpose":"RGB-D visual SLAM object","htmlid":"mw_20998c3e-4522-411b-8b16-c7796fc95f9b_sep_mw_502bd92c-b78c-479f-9de7-0b90442f0fc3","value":["rgbdvslam object"]}]}],"outputs":[{"name":"status","purpose":"Current status of RGB-D visual SLAM object","htmlid":"mw_20998c3e-4522-411b-8b16-c7796fc95f9b_sep_mw_842541e7-ef33-4efa-931d-904c48edb18a","value":["TrackingLost enumeration","TrackingSuccessful enumeration","FrequentKeyFrames enumeration"]}],"examples":[{"url":"rgbdvslam.checkstatus.html#mw_b3a39af3-61aa-401d-8ea4-233b0c945b37","open_command":"openExample('slam\/RGBDVisualSLAMUsingTUMRGBDDataSetExample')","title":"RGB-D Visual SLAM Using TUM RGB-D Data Set"}],"seealso":[{"url":"rgbdvslam.html","name":"rgbdvslam"},{"url":"rgbdvslam.addframe.html","name":"addFrame"},{"url":"rgbdvslam.hasnewkeyframe.html","name":"hasNewKeyFrame"},{"url":"rgbdvslam.isdone.html","name":"isDone"},{"url":"rgbdvslam.mappoints.html","name":"mapPoints"},{"url":"rgbdvslam.poses.html","name":"poses"},{"url":"rgbdvslam.plot.html","name":"plot"},{"url":"rgbdvslam.reset.html","name":"reset"}]},{"href":"ref\/rgbdvslam.hasnewkeyframe.html","refentity":[{"type":"function","name":"hasNewKeyFrame","fcntype":"instancemethod"},{"type":"method","name":"rgbdvslam.hasNewKeyFrame","fcntype":"instancemethod"}],"refpurpose":"Check if new key frame added in RGB-D visual SLAM object","introduced":"R2025a","description":"This MATLAB function returns a logical value that indicates if a new key frame has been added within the RGB-D visual simultaneous localization and mapping (vSLAM) object vslam.","syntaxgroup":[{"title":"","syntax":["hasAdded = hasNewKeyFrame(vslam)"]}],"inputgroup":[{"title":"","inputs":[{"name":"vslam","purpose":"RGB-D visual SLAM object","htmlid":"mw_11ef79c4-2530-498b-934e-8bcb41756fa0_sep_mw_502bd92c-b78c-479f-9de7-0b90442f0fc3","value":["rgbdvslam object"]}]}],"outputs":[{"name":"hasAdded","purpose":"New key frame status","htmlid":"mw_11ef79c4-2530-498b-934e-8bcb41756fa0_sep_mw_4f3619e5-6b1f-4cca-9b17-fdbe35a4d5c5","value":["false or 0","true or 1"]}],"examples":[{"url":"rgbdvslam.hasnewkeyframe.html#mw_c84c275c-8dc0-4ab7-89e4-880fe5a7b96f","open_command":"openExample('slam\/RGBDVisualSLAMUsingTUMRGBDDataSetExample')","title":"RGB-D Visual SLAM Using TUM RGB-D Data Set"},{"url":"rgbdvslam.hasnewkeyframe.html#mw_b90abf70-46af-4015-a030-35af02f6b292","open_command":"openExample('slam\/RGBDVisualInertialSLAMUsingOpenLORISSceneDataSetExample')","title":"RGB-D Visual-Inertial SLAM Using OpenLORIS-Scene Data Set"}],"seealso":[{"url":"rgbdvslam.html","name":"rgbdvslam"},{"url":"rgbdvslam.addframe.html","name":"addFrame"},{"url":"rgbdvslam.checkstatus.html","name":"checkStatus"},{"url":"rgbdvslam.isdone.html","name":"isDone"},{"url":"rgbdvslam.mappoints.html","name":"mapPoints"},{"url":"rgbdvslam.poses.html","name":"poses"},{"url":"rgbdvslam.plot.html","name":"plot"},{"url":"rgbdvslam.reset.html","name":"reset"}]},{"href":"ref\/rgbdvslam.isdone.html","refentity":[{"type":"function","name":"isDone","fcntype":"instancemethod"},{"type":"method","name":"rgbdvslam.isDone","fcntype":"instancemethod"}],"refpurpose":"End-of-processing status for RGB-D visual SLAM object","introduced":"R2025a","description":"This MATLAB function returns a logical value indicating whether the RGB-D visual SLAM object has finished processing its frames.","syntaxgroup":[{"title":"","syntax":["done = isDone(vslam)"]}],"inputgroup":[{"title":"","inputs":[{"name":"vslam","purpose":"RGB-D visual SLAM object","htmlid":"mw_5f3ad1af-b1d3-4e1f-b29f-bbb152552f9f_sep_mw_502bd92c-b78c-479f-9de7-0b90442f0fc3","value":["rgbdvslam object"]}]}],"examples":[{"url":"rgbdvslam.isdone.html#mw_5f3ad1af-b1d3-4e1f-b29f-bbb152552f9f_sep_mw_1e38cc59-15ed-4030-86d6-496e72d3501e","open_command":"openExample('slam\/RGBDVisualSLAMUsingTUMRGBDDataSetExample')","title":"RGB-D Visual SLAM Using TUM RGB-D Data Set"},{"url":"rgbdvslam.isdone.html#mw_a4755ef7-29b3-4f5b-a984-7f106999f434","open_command":"openExample('slam\/RGBDVisualInertialSLAMUsingOpenLORISSceneDataSetExample')","title":"RGB-D Visual-Inertial SLAM Using OpenLORIS-Scene Data Set"}],"seealso":[{"url":"rgbdvslam.html","name":"rgbdvslam"},{"url":"rgbdvslam.addframe.html","name":"addFrame"},{"url":"rgbdvslam.hasnewkeyframe.html","name":"hasNewKeyFrame"},{"url":"rgbdvslam.checkstatus.html","name":"checkStatus"},{"url":"rgbdvslam.mappoints.html","name":"mapPoints"},{"url":"rgbdvslam.poses.html","name":"poses"},{"url":"rgbdvslam.plot.html","name":"plot"},{"url":"rgbdvslam.reset.html","name":"reset"}]},{"href":"ref\/rgbdvslam.html","refentity":[{"type":"object","name":"rgbdvslam"},{"type":"function","name":"rgbdvslam","fcntype":"constructor"}],"refpurpose":"Feature-based visual simultaneous localization and mapping (vSLAM) and visual-inertial sensor fusion with RGB-D camera","introduced":"R2025a","description":"Use the rgbdvslam object to perform visual simultaneous localization and mapping (vSLAM) with RGB-D camera data.","syntaxgroup":[{"title":"","syntax":["vslam = rgbdvslam(intrinsics)","vslam = rgbdvslam(intrinsics,depthScaleFactor)","vslam = rgbdvslam(___,imuParameters)","vslam = rgbdvslam(intrinsics,PropertyName=Value)"]}],"inputgroup":[{"title":"","inputs":[{"name":"intrinsics","purpose":"Camera intrinsic parameters","htmlid":"mw_a7065ece-a008-4109-842b-53981cdf714d_sep_mw_d40da1b6-7338-4a29-bb42-0bd7291f1582","value":["cameraIntrinsics object"]},{"name":"depthScaleFactor","purpose":"Depth scale factor","htmlid":"mw_897e41a0-1d5c-4c9e-bce2-3ec5c5e86200","value":["scalar"]},{"name":"imuParameters","purpose":"IMU parameters","htmlid":"mw_a7065ece-a008-4109-842b-53981cdf714d_sep_mw_845fd001-88b5-4be4-8eba-3becec592087","value":["factorIMUParameters object"]}]}],"classpropertygroup":[{"title":"Camera Parameters","classproperty":[{"name":"Intrinsics","readonly":true,"purpose":"Camera intrinsic parameters","htmlid":"mw_a7065ece-a008-4109-842b-53981cdf714d_sep_mw_a682c3c9-92b5-4cdc-bc24-c63f98851382","value":["cameraIntrinsics object"]},{"name":"DepthScaleFactor","purpose":"Depth scale factor","htmlid":"mw_5a629352-6cae-4461-808f-a3223b09eac4","value":["scalar"]},{"name":"DepthRange","purpose":"Depth range of RGB-D camera","htmlid":"mw_2638f6f8-a327-4ffe-aae2-38e2a581ea39","value":["[0.5 5]","two-element vector"],"defaultvalue":"[0.5 5]"}]},{"title":"Feature Extraction","classproperty":[{"name":"ScaleFactor","purpose":"Scale factor for image decomposition","htmlid":"mw_a7065ece-a008-4109-842b-53981cdf714d_sep_mw_03812a39-3e15-4b59-b3f6-f8d71bde1650","value":["1.2","scalar greater than 1"],"defaultvalue":"1.2"},{"name":"NumLevels","purpose":"Number of decomposition levels","htmlid":"mw_a7065ece-a008-4109-842b-53981cdf714d_sep_mw_629e4ba6-f7b2-4aa4-9cb0-b477216a6086","value":["8","integer greater than or equal to 1"],"defaultvalue":"8"},{"name":"MaxNumPoints","purpose":"Maximum number of ORB feature points uniformly extracted from each image","htmlid":"mw_a7065ece-a008-4109-842b-53981cdf714d_sep_mw_b481d5a7-a377-473c-aa91-f34b2ee20e81","value":["1000","positive integer"]}]},{"title":"Tracking","classproperty":[{"name":"TrackFeatureRange","purpose":"Range for the number of feature points to identify key frame","htmlid":"mw_a7065ece-a008-4109-842b-53981cdf714d_sep_mw_1a6ca41e-6cad-459d-a74f-8c877953d54f","value":["[30 100]","two-element vector of positive integers"]},{"name":"SkipMaxFrames","purpose":"Maximum number of skipped frames","htmlid":"mw_a7065ece-a008-4109-842b-53981cdf714d_sep_mw_ed1068b3-dd06-48cc-b751-47475a33b525","value":["20","positive integer"]},{"name":"LoopClosureThreshold","purpose":"Minimum number of matched feature points between loop closure key frames","htmlid":"mw_a7065ece-a008-4109-842b-53981cdf714d_sep_mw_6c1b9a99-7d34-4c9b-bdbe-6a1d2b790fe1","value":["60","positive integer"]},{"name":"CustomBagOfFeatures","purpose":"Custom bag of features for loop detection","htmlid":"mw_a7065ece-a008-4109-842b-53981cdf714d_sep_mw_d4b0eadc-5e52-424f-9710-38483c5fde94","value":["[]","bagOfFeaturesDBoW object"],"defaultvalue":"[]"},{"name":"Verbose","purpose":"Progress information display","htmlid":"mw_a7065ece-a008-4109-842b-53981cdf714d_sep_mw_57f6c40e-b880-4896-b130-cb32c04fff4d","value":["[]","1","2","3"],"defaultvalue":"[]"}]},{"title":"IMU Fusion","classproperty":[{"name":"CameraToIMUTransform","purpose":"IMU sensor transformation","htmlid":"mw_a7065ece-a008-4109-842b-53981cdf714d_sep_mw_d6e70d99-c8a0-4090-84f0-30c9cb2073eb","value":["rigidtform3d"]},{"name":"NumPosesThreshold","purpose":"Number of estimated camera poses to trigger camera-IMU alignment","htmlid":"mw_a7065ece-a008-4109-842b-53981cdf714d_sep_mw_d33c0a5e-42e7-4708-a41d-56aea2ead91d","value":["30","integer equal to or greater than 2"],"defaultvalue":"30"},{"name":"AlignmentFraction","purpose":"Subset of pose estimates","htmlid":"mw_a7065ece-a008-4109-842b-53981cdf714d_sep_mw_f2cb1eb7-2ba9-453c-b686-11864a1f0294","value":["0.8","scalar in the range (0,1]"],"defaultvalue":"0.8"}]}],"objectfunctions":[{"title":"","functions":[{"name":"addFrame","url":"rgbdvslam.addframe.html","description":"Add pair of color and depth images to RGB-D visual SLAM object"},{"name":"hasNewKeyFrame","url":"rgbdvslam.hasnewkeyframe.html","description":"Check if new key frame added in RGB-D visual SLAM object"},{"name":"checkStatus","url":"rgbdvslam.checkstatus.html","description":"Check status of visual RGB-D SLAM object"},{"name":"isDone","url":"rgbdvslam.isdone.html","description":"End-of-processing status for RGB-D visual SLAM object"},{"name":"mapPoints","url":"rgbdvslam.mappoints.html","description":"Build 3-D map of world points from RGB-D vSLAM object"},{"name":"poses","url":"rgbdvslam.poses.html","description":"Absolute camera poses of RGB-D vSLAM key frames"},{"name":"plot","url":"rgbdvslam.plot.html","description":"Plot 3-D map points and estimated camera trajectory in RGB-D visual SLAM "},{"name":"reset","url":"rgbdvslam.reset.html","description":"Reset RGB-D visual SLAM object"}]}],"examples":[{"url":"rgbdvslam.html#mw_7af0226d-db39-4047-b355-47c638d5f775","open_command":"openExample('slam\/RGBDVisualSLAMUsingTUMRGBDDataSetExample')","title":"RGB-D Visual SLAM Using TUM RGB-D Data Set"},{"url":"rgbdvslam.html#mw_652145cc-71f8-4054-8156-175819265c35","open_command":"openExample('slam\/RGBDVisualInertialSLAMUsingOpenLORISSceneDataSetExample')","title":"RGB-D Visual-Inertial SLAM Using OpenLORIS-Scene Data Set"}],"seealso":[{"url":"monovslam.html","name":"monovslam"},{"url":"factorgraph.html","name":"factorGraph"},{"url":"factorimuparameters.html","name":"factorIMUParameters"},{"url":"..\/..\/vision\/ref\/cameraintrinsics.html","name":"cameraIntrinsics"},{"url":"..\/..\/matlab\/ref\/matlab.io.datastore.imagedatastore.html","name":"imageDatastore"},{"url":"..\/..\/vision\/ref\/detectorbfeatures.html","name":"detectORBFeatures"}]},{"href":"ref\/rgbdvslam.mappoints.html","refentity":[{"type":"function","name":"mapPoints","fcntype":"instancemethod"},{"type":"method","name":"rgbdvslam.mapPoints","fcntype":"instancemethod"}],"refpurpose":"Build 3-D map of world points from RGB-D vSLAM object","introduced":"R2025a","description":"This MATLAB function builds a sparse 3-D map of world points, xyzPoints, from the input images in the RGB-D visual simultaneous localization and mapping (vSLAM) object vslam.","syntaxgroup":[{"title":"","syntax":["xyzPoints = mapPoints(vslam)"]}],"inputgroup":[{"title":"","inputs":[{"name":"vslam","purpose":"RGB-D visual SLAM object","htmlid":"mw_e17a87ed-8bd4-431e-b946-95df16ae8350_sep_mw_502bd92c-b78c-479f-9de7-0b90442f0fc3","value":["rgbdvslam object"]}]}],"outputs":[{"name":"xyzPoints","purpose":"World point coordinates of 3-D map","htmlid":"mw_e17a87ed-8bd4-431e-b946-95df16ae8350_sep_mw_4f3619e5-6b1f-4cca-9b17-fdbe35a4d5c5","value":["M-by-3 matrix"]}],"examples":[{"url":"rgbdvslam.mappoints.html#mw_94e8c493-7405-4b54-ac9c-2a0913263922","open_command":"openExample('slam\/RGBDVisualSLAMUsingTUMRGBDDataSetExample')","title":"RGB-D Visual SLAM Using TUM RGB-D Data Set"}],"seealso":[{"url":"rgbdvslam.html","name":"rgbdvslam"},{"url":"rgbdvslam.addframe.html","name":"addFrame"},{"url":"rgbdvslam.hasnewkeyframe.html","name":"hasNewKeyFrame"},{"url":"rgbdvslam.checkstatus.html","name":"checkStatus"},{"url":"rgbdvslam.isdone.html","name":"isDone"},{"url":"rgbdvslam.poses.html","name":"poses"},{"url":"rgbdvslam.plot.html","name":"plot"},{"url":"rgbdvslam.reset.html","name":"reset"}]},{"href":"ref\/rgbdvslam.plot.html","refentity":[{"type":"function","name":"plot","fcntype":"instancemethod"},{"type":"method","name":"rgbdvslam.plot","fcntype":"instancemethod"}],"refpurpose":"Plot 3-D map points and estimated camera trajectory in RGB-D visual SLAM","introduced":"R2025a","description":"This MATLAB function plots the 3-D map points and estimated camera trajectory from the RGB-D visual SLAM object vslam.","syntaxgroup":[{"title":"","syntax":["plot(vslam)","plot(vslam,Name=Value)","ax = plot(___)"]}],"inputgroup":[{"title":"","inputs":[{"name":"vslam","purpose":"RGB-D visual SLAM object","htmlid":"mw_98fcd080-fa33-4751-8046-126c117e97eb_sep_mw_502bd92c-b78c-479f-9de7-0b90442f0fc3","value":["rgbdvslam object"]}]},{"namevaluepairs":[{"title":"","inputs":[{"name":"MarkerSize","purpose":"Diameter of markers for 3-D map points","htmlid":"mw_98fcd080-fa33-4751-8046-126c117e97eb_sep_mw_5bb956f8-32f3-462e-a9fd-887ee3bb6a21","value":["6","positive integer"],"defaultvalue":"6"},{"name":"MarkerColor","purpose":"Color of markers for 3-D map points","htmlid":"mw_98fcd080-fa33-4751-8046-126c117e97eb_sep_mw_a5b5de91-219d-4606-baf7-d60c7582d9c3","value":["[0 1 0]","RGB triplet","short or long color name"],"defaultvalue":"[0 1 0]"},{"name":"ColorSource","purpose":"Colormap source for the markers","htmlid":"mw_98fcd080-fa33-4751-8046-126c117e97eb_sep_mw_b260eac1-b891-42cb-8991-095cafdd757a","value":["\"Y\"","\"X\"","\"Z\"","\"MarkerColor\""],"defaultvalue":"\"Y\""},{"name":"CameraSize","purpose":"Width of camera base","htmlid":"mw_98fcd080-fa33-4751-8046-126c117e97eb_sep_mw_a2655efa-affb-4ca8-9510-b6641c9ff043","value":["0.1","positive scalar"],"defaultvalue":"0.1"},{"name":"CameraColor","purpose":"Color of camera","htmlid":"mw_98fcd080-fa33-4751-8046-126c117e97eb_sep_mw_ba5f77ce-25a5-4baa-8ad6-f26f98461211","value":["[1 0 0]","RGB triplet","short or long color name"],"defaultvalue":"[1 0 0]"},{"name":"Parent","purpose":"Axes for visualization","htmlid":"mw_98fcd080-fa33-4751-8046-126c117e97eb_sep_mw_d7a28e44-7531-4b6d-abea-86e4532d06d0","value":["Axes object","UIAxes object"]}]}]}],"outputs":[{"name":"ax","purpose":"Axes handle","htmlid":"mw_98fcd080-fa33-4751-8046-126c117e97eb_sep_mw_4f3619e5-6b1f-4cca-9b17-fdbe35a4d5c5","value":["Axes graphics object"]}],"examples":[{"url":"rgbdvslam.plot.html#mw_a12770b2-0bf5-4e69-9b4c-514d1645398c","open_command":"openExample('slam\/RGBDVisualSLAMUsingTUMRGBDDataSetExample')","title":"RGB-D Visual SLAM Using TUM RGB-D Data Set"},{"url":"rgbdvslam.plot.html#mw_d52928b7-567b-4cc0-97bb-328b0b38263d","open_command":"openExample('slam\/RGBDVisualInertialSLAMUsingOpenLORISSceneDataSetExample')","title":"RGB-D Visual-Inertial SLAM Using OpenLORIS-Scene Data Set"}],"seealso":[{"url":"rgbdvslam.html","name":"rgbdvslam"},{"url":"rgbdvslam.addframe.html","name":"addFrame"},{"url":"rgbdvslam.hasnewkeyframe.html","name":"hasNewKeyFrame"},{"url":"rgbdvslam.checkstatus.html","name":"checkStatus"},{"url":"rgbdvslam.isdone.html","name":"isDone"},{"url":"rgbdvslam.mappoints.html","name":"mapPoints"},{"url":"rgbdvslam.poses.html","name":"poses"},{"url":"rgbdvslam.reset.html","name":"reset"}]},{"href":"ref\/rgbdvslam.poses.html","refentity":[{"type":"function","name":"poses","fcntype":"instancemethod"},{"type":"method","name":"rgbdvslam.poses","fcntype":"instancemethod"}],"refpurpose":"Absolute camera poses of RGB-D vSLAM key frames","introduced":"R2025a","description":"This MATLAB function returns the absolute camera poses camPoses of the key frames from the RGB-D visual simultaneous localization and mapping (vSLAM) object vslam.","syntaxgroup":[{"title":"","syntax":["camPoses = poses(vslam)","[camPoses,keyFrameIDs] = poses(vslam)"]}],"inputgroup":[{"title":"","inputs":[{"name":"vslam","purpose":"RGB-D visual SLAM object","htmlid":"mw_643b8dd7-4381-4539-9667-e7d641b3aab5_sep_mw_502bd92c-b78c-479f-9de7-0b90442f0fc3","value":["rgbdvslam object"]}]}],"outputs":[{"name":"camPoses","purpose":"Absolute camera poses of key frames","htmlid":"mw_643b8dd7-4381-4539-9667-e7d641b3aab5_sep_mw_4f3619e5-6b1f-4cca-9b17-fdbe35a4d5c5","value":["M-element array of rigidtform3d objects"]},{"name":"keyFrameIDs","purpose":"Key frame IDs for absolute camera poses","htmlid":"mw_643b8dd7-4381-4539-9667-e7d641b3aab5_sep_mw_0b4d223c-07ac-476e-a391-c1b291cca5db","value":["M-element array of integers"]}],"examples":[{"url":"rgbdvslam.poses.html#mw_08f9a2f5-9d4d-4e3d-837f-b549a34e076e","open_command":"openExample('slam\/RGBDVisualSLAMUsingTUMRGBDDataSetExample')","title":"RGB-D Visual SLAM Using TUM RGB-D Data Set"}],"seealso":[{"url":"rgbdvslam.html","name":"rgbdvslam"},{"url":"rgbdvslam.addframe.html","name":"addFrame"},{"url":"rgbdvslam.hasnewkeyframe.html","name":"hasNewKeyFrame"},{"url":"rgbdvslam.checkstatus.html","name":"checkStatus"},{"url":"rgbdvslam.isdone.html","name":"isDone"},{"url":"rgbdvslam.mappoints.html","name":"mapPoints"},{"url":"rgbdvslam.plot.html","name":"plot"},{"url":"rgbdvslam.reset.html","name":"reset"}]},{"href":"ref\/rgbdvslam.reset.html","refentity":[{"type":"function","name":"reset","fcntype":"instancemethod"},{"type":"method","name":"rgbdvslam.reset","fcntype":"instancemethod"}],"refpurpose":"Reset RGB-D visual SLAM object","introduced":"R2025a","description":"This MATLAB function resets all internal processes and clears all data in the rgbdvslam object.","syntaxgroup":[{"title":"","syntax":["reset(vslam)"]}],"inputgroup":[{"title":"","inputs":[{"name":"vslam","purpose":"RGB-D visual SLAM object","htmlid":"mw_bb947f3a-93c0-43aa-b5b6-713f5f3a7bbf_sep_mw_502bd92c-b78c-479f-9de7-0b90442f0fc3","value":["rgbdvslam object"]}]}],"examples":[{"url":"rgbdvslam.reset.html#mw_2e415c00-77ad-4f39-8ead-473934793b1f","open_command":"openExample('slam\/RGBDVisualSLAMUsingTUMRGBDDataSetExample')","title":"RGB-D Visual SLAM Using TUM RGB-D Data Set"},{"url":"rgbdvslam.reset.html#mw_1e3be89a-4d16-4ce9-bd23-39f591eea5c9","open_command":"openExample('slam\/RGBDVisualInertialSLAMUsingOpenLORISSceneDataSetExample')","title":"RGB-D Visual-Inertial SLAM Using OpenLORIS-Scene Data Set"}],"seealso":[{"url":"rgbdvslam.html","name":"rgbdvslam"},{"url":"rgbdvslam.addframe.html","name":"addFrame"},{"url":"rgbdvslam.hasnewkeyframe.html","name":"hasNewKeyFrame"},{"url":"rgbdvslam.checkstatus.html","name":"checkStatus"},{"url":"rgbdvslam.isdone.html","name":"isDone"},{"url":"rgbdvslam.mappoints.html","name":"mapPoints"},{"url":"rgbdvslam.poses.html","name":"poses"},{"url":"rgbdvslam.plot.html","name":"plot"}]},{"href":"ref\/rinexinfo.html","refentity":[{"type":"function","name":"rinexinfo","fcntype":"simple"}],"refpurpose":"Get information about RINEX file","introduced":"R2022a","description":"This MATLAB function gets information about the specified RINEX version 3 file filename, and returns it as a structure, fileinfo.","syntaxgroup":[{"title":"","syntax":["fileinfo = rinexinfo(filename)"]}],"inputgroup":[{"title":"","inputs":[{"name":"filename","purpose":"Name of RINEX version 3 file","htmlid":"mw_618049fa-9879-4135-aa5d-3242f5f26614","value":["string scalar","character vector"]}]}],"outputs":[{"name":"fileinfo","purpose":"RINEX file contents","htmlid":"mw_fbb5c3f0-5fe7-4401-9b8b-f933b2664350","value":["structure"]}],"examples":[{"url":"rinexinfo.html#mw_23e9e6d8-a309-4870-8135-182b0f2b85b8","open_command":"openExample('nav\/QueryNavigationAndObservationMessagesFromRINEXFileExample')","title":"Query Navigation and Observation Messages from RINEX File"}],"seealso":[{"url":"rinexread.html","name":"rinexread"},{"url":"gnssconstellation.html","name":"gnssconstellation"},{"url":"pseudoranges.html","name":"pseudoranges"}]},{"href":"ref\/rinexread.html","refentity":[{"type":"function","name":"rinexread","fcntype":"simple"}],"refpurpose":"Read data from RINEX file","introduced":"R2022a","description":"This MATLAB function reads data from the RINEX version 3 file filename and returns a structure, data.","syntaxgroup":[{"title":"","syntax":["data = rinexread(filename)"]}],"inputgroup":[{"title":"","inputs":[{"name":"filename","purpose":"Name of RINEX version 3 file","htmlid":"mw_768c6716-c3d2-4dde-b06e-98ca4d8f63c9","value":["string scalar","character vector"]}]}],"outputs":[{"name":"data","purpose":"Satellite system data from RINEX version 3 file","htmlid":"mw_79d16322-ce60-4234-8309-f4ca5f28d1d0","value":["structure"]}],"examples":[{"url":"rinexread.html#mw_b91ab3e8-a86e-4325-b132-b4839befc28b","open_command":"openExample('nav\/ReadNavigationAndObservationDataFromRINEXFileExample')","title":"Read Navigation and Observation Data from RINEX File"}],"seealso":[{"url":"rinexinfo.html","name":"rinexinfo"},{"url":"gnssconstellation.html","name":"gnssconstellation"},{"url":"pseudoranges.html","name":"pseudoranges"}]},{"href":"ref\/robotics.rate.waitfor.html","refentity":[{"type":"function","name":"waitfor","fcntype":"instancemethod"},{"type":"method","name":"robotics.Rate.waitfor","fcntype":"instancemethod"}],"packagename":"robotics","refpurpose":"Pause code execution to achieve desired execution rate","introduced":"R2016a","description":"This MATLAB function pauses execution until the code reaches the desired execution rate.","syntaxgroup":[{"title":"","syntax":["waitfor(rate)","numMisses = waitfor(rate)"]}],"inputgroup":[{"title":"","inputs":[{"name":"rate","purpose":"Rate object","htmlid":"d126e192479","value":["handle"]}]}],"outputs":[{"name":"numMisses","purpose":"Number of missed task executions","htmlid":"d126e192507","value":["scalar"]}],"examples":[{"url":"robotics.rate.waitfor.html#mw_9900ae7b-3d33-47a3-b354-70147c8509cd","open_command":"openExample('nav_robotics\/RunLoopAtFixedRateExample')","title":"Run Loop at Fixed Rate"}],"seealso":[{"url":"ratecontrol.html","name":"rateControl"}]},{"href":"ref\/rotm2axang.html","refentity":[{"type":"function","name":"rotm2axang","fcntype":"simple"}],"refpurpose":"Convert rotation matrix to axis-angle rotation","introduced":"R2015a","description":"This MATLAB function converts a rotation given as an orthonormal rotation matrix, rotm, to the corresponding axis-angle representation, axang.","syntaxgroup":[{"title":"","syntax":["axang = rotm2axang(rotm)"]}],"inputgroup":[{"title":"","inputs":[{"name":"rotm","purpose":"Rotation matrix","htmlid":"bun29zm-1-rotm","value":["3-by-3-by-n matrix"]}]}],"outputs":[{"name":"axang","purpose":"Rotation given in axis-angle form","htmlid":"bun29zm-1-axang","value":["n-by-4 matrix"]}],"examples":[{"url":"rotm2axang.html#bun29zm-7","open_command":"openExample('nav_robotics\/ConvertRotationMatrixToAxisAngleRotationExample')","title":"Convert Rotation Matrix to Axis-Angle Rotation"}],"seealso":[{"url":"axang2rotm.html","name":"axang2rotm"},{"url":"so3.html","name":"so3"}]},{"href":"ref\/rotm2eul.html","refentity":[{"type":"function","name":"rotm2eul","fcntype":"simple"}],"refpurpose":"Convert rotation matrix to Euler angles","introduced":"R2015a","description":"This MATLAB function converts a rotation matrix, rotm, to the corresponding Euler angles, eul.","syntaxgroup":[{"title":"","syntax":["eul = rotm2eul(rotm)","eul = rotm2eul(rotm,sequence)","[eul,eulAlt] = rotm2eul(___)"]}],"inputgroup":[{"title":"","inputs":[{"name":"rotm","purpose":"Rotation matrix","htmlid":"bun4xye-1-rotm","value":["3-by-3-by-n matrix"]},{"name":"sequence","purpose":"Axis-rotation sequence","htmlid":"bun4xye-1_sep_mw_e1ec5f45-aa43-4f3a-bcc6-bc10914e150d","value":["\"ZYX\"","\"ZYZ\"","\"ZXY\"","\"ZXZ\"","\"YXY\"","\"YZX\"","\"YXZ\"","\"YZY\"","\"XYX\"","\"XYZ\"","\"XZX\"","\"XZY\""],"defaultvalue":"\"ZYX\""}]}],"outputs":[{"name":"eul","purpose":"Euler rotation angles","htmlid":"bun4xye-1-eul","value":["n-by-3 matrix"]},{"name":"eulAlt","purpose":"Alternate Euler rotation angle solution","htmlid":"mw_37b26f3e-7904-492e-8fee-38cdffe18a95","value":["n-by-3 matrix"]}],"examples":[{"url":"rotm2eul.html#bun4xye-7","open_command":"openExample('nav_robotics\/ConvertRotationMatrixToEulerAnglesExample')","title":"Convert Rotation Matrix to Euler Angles"},{"url":"rotm2eul.html#bun4x3u-1","open_command":"openExample('nav_robotics\/ConvertRotationMatrixToEulerAnglesUsingZYZAxisOrderExample')","title":"Convert Rotation Matrix to Euler Angles Using ZYZ Axis Order"}],"seealso":[{"url":"eul2rotm.html","name":"eul2rotm"},{"url":"so2.html","name":"so2"},{"url":"so3.html","name":"so3"}]},{"href":"ref\/rotm2quat.html","refentity":[{"type":"function","name":"rotm2quat","fcntype":"simple"}],"refpurpose":"Convert rotation matrix to quaternion","introduced":"R2015a","description":"This MATLAB function converts a rotation matrix, rotm, to the corresponding unit quaternion representation, quat.","syntaxgroup":[{"title":"","syntax":["quat = rotm2quat(rotm)"]}],"inputgroup":[{"title":"","inputs":[{"name":"rotm","purpose":"Rotation matrix","htmlid":"bun2_w_-1-rotm","value":["3-by-3-by-n matrix"]}]}],"outputs":[{"name":"quat","purpose":"Unit quaternion","htmlid":"bun2_w_-1-quat","value":["n-by-4 matrix"]}],"examples":[{"url":"rotm2quat.html#bun2_xa-7","open_command":"openExample('nav_robotics\/ConvertRotationMatrixToQuaternionExample')","title":"Convert Rotation Matrix to Quaternion"}],"seealso":[{"url":"quat2rotm.html","name":"quat2rotm"},{"url":"so3.html","name":"so3"},{"url":"quaternion.html","name":"quaternion"}]},{"href":"ref\/rotm2tform.html","refentity":[{"type":"function","name":"rotm2tform","fcntype":"simple"}],"refpurpose":"Convert rotation matrix to homogeneous transformation","introduced":"R2015a","description":"This MATLAB function converts the rotation matrix rotm into a homogeneous transformation matrix tform.","syntaxgroup":[{"title":"","syntax":["tform = rotm2tform(rotm)"]}],"inputgroup":[{"title":"","inputs":[{"name":"rotm","purpose":"Rotation matrix","htmlid":"mw_a5e9ae31-cf9a-44e5-b299-ea07a93174a3","value":["2-by-2-by-n array","3-by-3-by-n array"]}]}],"outputs":[{"name":"tform","purpose":"Homogeneous transformation","htmlid":"mw_73493236-9e87-407d-9513-c30a1920eafd","value":["3-by-3-by-n array","4-by-4-by-n array"]}],"examples":[{"url":"rotm2tform.html#bun27v5-2_1","open_command":"openExample('nav_robotics\/ConvertRotationMatrixToHomogeneousTransformationExample')","title":"Convert Rotation Matrix to Homogeneous Transformation"}],"seealso":[{"url":"tform2rotm.html","name":"tform2rotm"},{"url":"se2.html","name":"se2"},{"url":"se3.html","name":"se3"},{"url":"so2.html","name":"so2"},{"url":"so3.html","name":"so3"}]},{"href":"ref\/samplestartgoal.html","refentity":[{"type":"function","name":"sampleStartGoal","fcntype":"simple"}],"refpurpose":"Sample start and goal states for motion planning","introduced":"R2024a","description":"This MATLAB function selects a valid start and goal state from an input map environment.","syntaxgroup":[{"title":"","syntax":["[startState,goalState] = sampleStartGoal(stateValidator)","[startState,goalState] = sampleStartGoal(stateValidator,numStates)","[___] = sampleStartGoal(stateValidator,numStates,maxAttempts)"]}],"inputgroup":[{"title":"","inputs":[{"name":"stateValidator","purpose":"State validator","htmlid":"mw_a382e07e-9d74-48f1-9bba-df4b6d61cf69","value":["validatorVehicleCostmap","validatorOccupancyMap","validatorOccupancyMap3D","manipulatorCollisionBodyValidator","nav.StateValidator"]},{"name":"numStates","purpose":"Number of start and goal states to select","htmlid":"mw_d0428ef7-b94d-4fe7-b519-317931883ed7","value":["positive integer"]},{"name":"maxAttempts","purpose":"Maximum number of attempts","htmlid":"mw_154b6f15-c84d-4b5b-8332-ba0595e10b17","value":["positive integer"]}]}],"outputs":[{"name":"startState","purpose":"Start state","htmlid":"mw_f7791e58-7643-4ac4-bb9c-68130a42bc9c","value":["M-by-N matrix"]},{"name":"goalState","purpose":"Goal state","htmlid":"mw_3d70e476-2d80-422f-95e6-4e5bde3124b9","value":["M-by-N matrix"]}],"examples":[{"url":"samplestartgoal.html#mw_baef52d9-98f3-4479-882f-b91b04fff607","open_command":"openExample('nav\/SelectStartAndGoalStatesUsing2DCostmapExample')","title":"Sample Start and Goal States in 2-D Costmap"},{"url":"samplestartgoal.html#mw_0fabcdb3-8139-4e30-894e-3dd70ac32f31","open_command":"openExample('nav\/SelectStartAndGoalStatesUsing2DOccupancyMapExample')","title":"Sample Start and Goal States in 2-D Occupancy Map"},{"url":"samplestartgoal.html#mw_2f062b30-7dac-49f2-a9be-c1578db56929","open_command":"openExample('nav\/SelectStartAndGoalStatesUsing3DOccupancyMapExample')","title":"Sample Start and Goal States in 3-D Occupancy Map"}],"seealso":[{"url":"plannermpnet.html","name":"plannerMPNET"},{"url":"plannerrrt.html","name":"plannerRRT"},{"url":"plannerrrtstar.html","name":"plannerRRTStar"},{"url":"plannerbirrt.html","name":"plannerBiRRT"},{"url":"plannercontrolrrt.html","name":"plannerControlRRT"},{"url":"plannerastar.html","name":"plannerAStar"},{"url":"plannerastargrid.html","name":"plannerAStarGrid"},{"url":"plannerhybridastar.html","name":"plannerHybridAStar"},{"url":"plannerprm.html","name":"plannerPRM"}]},{"href":"ref\/se2.dist.html","refentity":[{"type":"function","name":"dist","fcntype":"instancemethod"},{"type":"method","name":"se2.dist","fcntype":"instancemethod"},{"type":"method","name":"se3.dist","fcntype":"instancemethod"},{"type":"method","name":"so2.dist","fcntype":"instancemethod"},{"type":"method","name":"so3.dist","fcntype":"instancemethod"}],"refpurpose":"Calculate distance between transformations","introduced":"R2022b","description":"This MATLAB function returns the distance distance between the poses represented by transformation transformation1 and transformation transformation2.","syntaxgroup":[{"title":"","syntax":["distance = dist(transformation1,transformation2)","distance = dist(transformation1,transformation2,weights)","distance = dist(rotation1,rotation2)"]}],"inputgroup":[{"title":"","inputs":[{"name":"transformation1","purpose":"First transformation","htmlid":"mw_7569af6e-7934-4eae-b238-be88e7fbaf2a_sep_mw_f39ce770-e588-4ce5-a7b0-d98e99de0018","value":["se2 object","se3 object","N-element array of transformation objects"]},{"name":"transformation2","purpose":"Last transformation","htmlid":"mw_7569af6e-7934-4eae-b238-be88e7fbaf2a_sep_mw_f7db4a94-001e-471e-8ed0-96c4b02a9df0","value":["se2 object","se3 object","N-element array of transformation objects"]},{"name":"rotation1","purpose":"First rotation","htmlid":"mw_7569af6e-7934-4eae-b238-be88e7fbaf2a_sep_mw_c5fe1308-8c99-4ced-8d00-3f3a7207af26","value":["so2 object","so3 object","N-element array of rotation objects"]},{"name":"rotation2","purpose":"Last rotation","htmlid":"mw_7569af6e-7934-4eae-b238-be88e7fbaf2a_sep_mw_8db14462-86da-4d5b-85ae-b89f3b1541ef","value":["so2 object","so3 object","N-element array of rotation objects"]},{"name":"weights","purpose":"Weights of translation and rotation in distance sum","htmlid":"mw_00035a99-a565-4c0f-8192-df1cd99ec24c","value":["[1.0 0.1]","two-element row vector"],"defaultvalue":"[1.0 0.1]"}]}],"outputs":[{"name":"distance","purpose":"Distance between transformations or rotations","htmlid":"mw_16344b3c-c068-4f3e-b5af-4734739ca36f","value":["nonnegative numeric scalar"]}],"seealso":[{"url":"se2.normalize.html","name":"normalize"},{"url":"se2.interp.html","name":"interp"},{"url":"se2.transform.html","name":"transform"},{"url":"plottransforms.html","name":"plotTransforms"},{"url":"se2.html","name":"se2"},{"url":"se3.html","name":"se3"},{"url":"so2.html","name":"so2"},{"url":"so3.html","name":"so3"},{"url":"quaternion.html","name":"quaternion"}]},{"href":"ref\/se2.interp.html","refentity":[{"type":"function","name":"interp","fcntype":"instancemethod"},{"type":"method","name":"se2.interp","fcntype":"instancemethod"},{"type":"method","name":"se3.interp","fcntype":"instancemethod"},{"type":"method","name":"so2.interp","fcntype":"instancemethod"},{"type":"method","name":"so3.interp","fcntype":"instancemethod"}],"refpurpose":"Interpolate between transformations","introduced":"R2022b","description":"This MATLAB function interpolates at normalized positions points between transformations transformation1 and transformation2.","syntaxgroup":[{"title":"","syntax":["transformation0 = interp(transformation1,transformation2,points)","rotation0 = interp(rotation1,rotation2,points)","___ = interp(___,transformation2,N)"]}],"inputgroup":[{"title":"","inputs":[{"name":"transformation1","purpose":"First transformation","htmlid":"mw_236fec97-274f-417d-8322-9c465a7ef06c_sep_mw_f39ce770-e588-4ce5-a7b0-d98e99de0018","value":["se2 object","se3 object","N-element array of transformation objects"]},{"name":"transformation2","purpose":"Last transformation","htmlid":"mw_236fec97-274f-417d-8322-9c465a7ef06c_sep_mw_f7db4a94-001e-471e-8ed0-96c4b02a9df0","value":["se2 object","se3 object","N-element array of transformation objects"]},{"name":"rotation1","purpose":"First rotation","htmlid":"mw_236fec97-274f-417d-8322-9c465a7ef06c_sep_mw_c5fe1308-8c99-4ced-8d00-3f3a7207af26","value":["so2 object","so3 object","N-element array of rotation objects"]},{"name":"rotation2","purpose":"Last rotation","htmlid":"mw_236fec97-274f-417d-8322-9c465a7ef06c_sep_mw_8db14462-86da-4d5b-85ae-b89f3b1541ef","value":["so2 object","so3 object","N-element array of rotation objects"]},{"name":"points","purpose":"Normalized positions","htmlid":"mw_38874f5c-731f-432c-bf5e-90e0125c9279","value":["N-element row vector of values in range [0, 1]"]},{"name":"N","purpose":"Number of interpolated positions","htmlid":"mw_20123d87-8833-4d52-bbf6-3bc3e97ff152","value":["positive integer"]}]}],"outputs":[{"name":"transformation0","purpose":"Interpolated transformations","htmlid":"mw_605bb4fa-5fe9-4c7e-a58c-76d537b421b5","value":["N-by-M matrix"]},{"name":"rotation0","purpose":"Interpolated rotations","htmlid":"mw_619bf1de-519a-4a53-919d-95f1640ccea5","value":["N-by-M matrix"]}],"seealso":[{"url":"se2.dist.html","name":"dist"},{"url":"se2.normalize.html","name":"normalize"},{"url":"se2.transform.html","name":"transform"},{"url":"plottransforms.html","name":"plotTransforms"},{"url":"se2.html","name":"se2"},{"url":"se3.html","name":"se3"},{"url":"so2.html","name":"so2"},{"url":"so3.html","name":"so3"},{"url":"quaternion.html","name":"quaternion"}]},{"href":"ref\/se2.html","refentity":[{"type":"object","name":"se2"},{"type":"function","name":"se2","fcntype":"constructor"}],"refpurpose":"SE(2) homogeneous transformation","introduced":"R2022b","description":"The se2 object represents an SE(2) transformation as a 2-D homogeneous transformation matrix consisting of a translation and rotation.","syntaxgroup":[{"title":"Rotation Matrices, Translation Vectors, and Transformation Matrices","syntax":["transformation = se2","transformation = se2(rotation)","transformation = se2(rotation,translation)","transformation = se2(transformation)"]},{"title":"Other 2-D Rotations and Transformation Representations","syntax":["transformation = se2(angle,\"theta\")","transformation = se2(angle,\"theta\",translation)","transformation = se2(translation,\"trvec\")","transformation = se2(pose,\"xytheta\")"]}],"inputgroup":[{"title":"","inputs":[{"name":"rotation","purpose":"Orthonormal rotation","htmlid":"mw_0fe76e68-b3c5-4a8d-b9c4-c5ac48a91aef","value":["2-by-2 matrix","2-by-2-by-N matrix","so2 object","N-element array of so2 objects"]},{"name":"translation","purpose":"Translation","htmlid":"mw_3131c2a1-2fa4-4abb-8be5-2785c74f5ca3","value":["two-element row vector","N-by-2 matrix"]},{"name":"transformation","purpose":"Homogeneous transformation","htmlid":"mw_958e3220-cbe6-48e5-917a-cab647696817_sep_mw_e15d5e1e-9bb4-4b70-8313-532f9b184676","value":["3-by-3 matrix","3-by-3-by-N array","se2 object","N-element array of se2 objects"]},{"name":"angle","purpose":"z-axis rotation angle","htmlid":"mw_958e3220-cbe6-48e5-917a-cab647696817_sep_mw_8c49e4a3-ee8d-47c8-98d3-2f36d671277f","value":["N-by-M matrix"]},{"name":"pose","purpose":"2-D compact pose","htmlid":"mw_542a5fc9-bda0-4e96-aa5b-3fec142c7be0","value":["N-by-3 matrix"]}]}],"objectfunctions":[{"title":"Mathematical Operations","functions":[{"name":"mtimes, *","url":"se2.mtimes.html","description":"Transformation or rotation multiplication"},{"name":"mrdivide, \/","url":"se2.mrdivide.html","description":"Transformation or rotation right division"},{"name":"rdivide, .\/","url":"se2.rdivide.html","description":"Element-wise transformation or rotation right division"},{"name":"times, .*","url":"se2.times.html","description":"Element-wise transformation or rotation multiplication"}]},{"title":"Utilities","functions":[{"name":"interp","url":"se2.interp.html","description":"Interpolate between transformations"},{"name":"dist","url":"se2.dist.html","description":"Calculate distance between transformations"},{"name":"normalize","url":"se2.normalize.html","description":"Normalize transformation or rotation matrix"},{"name":"transform","url":"se2.transform.html","description":"Apply rigid body transformation to points"}]},{"title":"Numerical Conversions","functions":[{"name":"rotm","url":"se2.rotm.html","description":"Extract rotation matrix"},{"name":"trvec","url":"se2.trvec.html","description":"Extract translation vector"},{"name":"tform","url":"se2.tform.html","description":"Extract homogeneous transformation"},{"name":"theta","url":"se2.theta.html","description":"Convert transformation or rotation to 2-D rotation angle"},{"name":"xytheta","url":"se2.xytheta.html","description":"Convert transformation or rotation to compact 2-D pose representation"}]},{"title":"Object Conversions","functions":[{"name":"so2","url":"so2.html","description":"SO(2) rotation"}]}],"examples":[{"url":"se2.html#mw_577e4cad-82dc-4526-96d3-2934c5306d3b","open_command":"openExample('shared_spatial\/CreateSE2TransformationUsingAngleAndTranslationExample')","title":"Create SE(2) Transformation Using Angle and Translation"}],"seealso":[{"url":"axang2tform.html","name":"axang2tform"},{"url":"eul2tform.html","name":"eul2tform"},{"url":"quat2tform.html","name":"quat2tform"},{"url":"rotm2tform.html","name":"rotm2tform"},{"url":"trvec2tform.html","name":"trvec2tform"},{"url":"plottransforms.html","name":"plotTransforms"},{"url":"se3.html","name":"se3"},{"url":"so2.html","name":"so2"},{"url":"so3.html","name":"so3"}]},{"href":"ref\/se2.mrdivide.html","refentity":[{"type":"function","name":"mrdivide","fcntype":"instancemethod"},{"type":"function","name":"\/","fcntype":"instancemethod"},{"type":"method","name":"se2.mrdivide","fcntype":"instancemethod"},{"type":"method","name":"se3.mrdivide","fcntype":"instancemethod"},{"type":"method","name":"so2.mrdivide","fcntype":"instancemethod"},{"type":"method","name":"so3.mrdivide","fcntype":"instancemethod"}],"refpurpose":"Transformation or rotation right division","introduced":"R2022b","description":"This MATLAB function right divides transformation transformationA by transformation transformationB and returns the quotient, transformation transformationC.","syntaxgroup":[{"title":"","syntax":["transformationC = transformationA\/transformationB","rotationC = rotationA\/rotationB"]}],"inputgroup":[{"title":"","inputs":[{"name":"transformationA","purpose":"First transformation","htmlid":"mw_4d21ee32-b147-4f8a-b2b4-20d0fccffb01_sep_mw_16862489-a339-4649-b680-c5d2d88cf7c9","value":["se2 object","se3 object","N-element array of transformation objects"]},{"name":"transformationB","purpose":"Last transformation","htmlid":"mw_4d21ee32-b147-4f8a-b2b4-20d0fccffb01_sep_mw_9b7749c3-301b-49bd-b529-3bcf1b5b75be","value":["se2 object","se3 object","N-element array of transformation objects"]},{"name":"rotationA","purpose":"First rotation","htmlid":"mw_4d21ee32-b147-4f8a-b2b4-20d0fccffb01_sep_mw_bd6acbae-e538-4862-9186-fd02f3a30ce7","value":["so2 object","so3 object","N-element array of rotation objects"]},{"name":"rotationB","purpose":"Last rotation","htmlid":"mw_4d21ee32-b147-4f8a-b2b4-20d0fccffb01_sep_mw_cf0937a7-ee44-4009-92af-f272587b6168","value":["so2 object","so3 object","N-element array of rotation objects"]}]}],"outputs":[{"name":"transformationC","purpose":"Transformation quotient","htmlid":"mw_b3507b73-0851-41e1-b6db-a7eee1041fd8","value":["se2 object","se3 object","N-element array of transformation objects"]},{"name":"rotationC","purpose":"Rotation quotient","htmlid":"mw_6b94a3cb-d04f-44c4-be21-ec5fad646434","value":["so2 object","so3 object","N-element array of rotation objects"]}],"seealso":[{"url":"se2.rdivide.html","name":"rdivide, .\/"},{"url":"se2.mtimes.html","name":"mtimes, *"},{"url":"se2.times.html","name":"times, .*"},{"url":"se2.html","name":"se2"},{"url":"se3.html","name":"se3"},{"url":"so2.html","name":"so2"},{"url":"so3.html","name":"so3"}]},{"href":"ref\/se2.mtimes.html","refentity":[{"type":"function","name":"mtimes","fcntype":"instancemethod"},{"type":"function","name":"*","fcntype":"instancemethod"},{"type":"method","name":"se2.mtimes","fcntype":"instancemethod"},{"type":"method","name":"se3.mtimes","fcntype":"instancemethod"},{"type":"method","name":"so2.mtimes","fcntype":"instancemethod"},{"type":"method","name":"so3.mtimes","fcntype":"instancemethod"}],"refpurpose":"Transformation or rotation multiplication","introduced":"R2022b","description":"This MATLAB function performs transformation multiplication between transformation transformationA and transformation transformationB and returns the product, transformation transformationC.","syntaxgroup":[{"title":"","syntax":["transformationC = transformationA*transformationB","rotationC = rotationA*rotationB"]}],"inputgroup":[{"title":"","inputs":[{"name":"transformationA","purpose":"First transformation","htmlid":"mw_332afb40-bee2-4038-b649-f7a2fca04a5d_sep_mw_16862489-a339-4649-b680-c5d2d88cf7c9","value":["se2 object","se3 object","N-element array of transformation objects"]},{"name":"transformationB","purpose":"Last transformation","htmlid":"mw_332afb40-bee2-4038-b649-f7a2fca04a5d_sep_mw_9b7749c3-301b-49bd-b529-3bcf1b5b75be","value":["se2 object","se3 object","N-element array of transformation objects"]},{"name":"rotationA","purpose":"First rotation","htmlid":"mw_332afb40-bee2-4038-b649-f7a2fca04a5d_sep_mw_bd6acbae-e538-4862-9186-fd02f3a30ce7","value":["so2 object","so3 object","N-element array of rotation objects"]},{"name":"rotationB","purpose":"Last rotation","htmlid":"mw_332afb40-bee2-4038-b649-f7a2fca04a5d_sep_mw_cf0937a7-ee44-4009-92af-f272587b6168","value":["so2 object","so3 object","N-element array of rotation objects"]}]}],"outputs":[{"name":"transformationC","purpose":"Transformation product","htmlid":"mw_0021a594-0c80-4780-bf42-bd7fe4db0f6e","value":["se2 object","se3 object","N-element array of transformation objects"]},{"name":"rotationC","purpose":"Rotation product","htmlid":"mw_56757d70-a7b2-46b5-8a82-a8a9a7b390a8","value":["so2 object","so3 object","N-element array of rotation objects"]}],"seealso":[{"url":"se2.mrdivide.html","name":"mrdivide, \/"},{"url":"se2.rdivide.html","name":"rdivide, .\/"},{"url":"se2.times.html","name":"times, .*"},{"url":"se2.html","name":"se2"},{"url":"se3.html","name":"se3"},{"url":"so2.html","name":"so2"},{"url":"so3.html","name":"so3"}]},{"href":"ref\/se2.normalize.html","refentity":[{"type":"function","name":"normalize","fcntype":"instancemethod"},{"type":"method","name":"se2.normalize","fcntype":"instancemethod"},{"type":"method","name":"se3.normalize","fcntype":"instancemethod"},{"type":"method","name":"so2.normalize","fcntype":"instancemethod"},{"type":"method","name":"so3.normalize","fcntype":"instancemethod"}],"refpurpose":"Normalize transformation or rotation matrix","introduced":"R2022b","description":"This MATLAB function normalizes the rotation of the transformation transformation and returns a transformation, transformationN, that is equivalent to transformation, but with normalized rotation.","syntaxgroup":[{"title":"","syntax":["transformationN = normalize(transformation)","rotationN = normalize(rotation)","___ = normalize(___,Method=normMethod)"]}],"inputgroup":[{"title":"","inputs":[{"name":"transformation","purpose":"Transformation","htmlid":"mw_6ff4f44b-88b5-4d41-8eae-7f2aefbbaae4_sep_mw_2f2e2d9a-374b-4868-884e-7f52fd5257e2","value":["se2 object","se3 object","N-element array of transformation objects"]},{"name":"rotation","purpose":"Rotation","htmlid":"mw_6ff4f44b-88b5-4d41-8eae-7f2aefbbaae4_sep_mw_f18c4a61-9572-4245-93c1-400afdb4585d","value":["so2 object","so3 object","N-element array of rotation objects"]},{"name":"normMethod","purpose":"Normalization method","htmlid":"mw_f34a03e1-8139-4bef-b854-3c01ba87ff56","value":["\"quat\"","\"cross\"","\"svd\""],"defaultvalue":"\"quat\""}]}],"outputs":[{"name":"transformationN","purpose":"Normalized transformation","htmlid":"mw_f4479e27-3c5d-4119-89cb-4440d3fed070","value":["se2 object","se3 object"]},{"name":"rotationN","purpose":"Normalized rotation","htmlid":"mw_a99b3b5c-e64d-4482-ab49-53254c46ecf3","value":["so2 object","so3 object"]}],"seealso":[{"url":"se2.dist.html","name":"dist"},{"url":"se2.interp.html","name":"interp"},{"url":"se2.transform.html","name":"transform"},{"url":"plottransforms.html","name":"plotTransforms"},{"url":"se2.html","name":"se2"},{"url":"se3.html","name":"se3"},{"url":"so2.html","name":"so2"},{"url":"so3.html","name":"so3"},{"url":"quaternion.html","name":"quaternion"}]},{"href":"ref\/se2.rdivide.html","refentity":[{"type":"function","name":"rdivide","fcntype":"instancemethod"},{"type":"function","name":".\/","fcntype":"instancemethod"},{"type":"method","name":"se2.rdivide","fcntype":"instancemethod"},{"type":"method","name":"se3.rdivide","fcntype":"instancemethod"},{"type":"method","name":"so2.rdivide","fcntype":"instancemethod"},{"type":"method","name":"so3.rdivide","fcntype":"instancemethod"}],"refpurpose":"Element-wise transformation or rotation right division","introduced":"R2022b","description":"This MATLAB function divides transformations element-by-element by dividing each element of transformation transformationA with the corresponding element of transformation transformationB and returns the quotient, transformation transformationC.","syntaxgroup":[{"title":"","syntax":["transformationC = transformationA.\/transformationB","rotationC = rotationA.\/rotationB"]}],"inputgroup":[{"title":"","inputs":[{"name":"transformationA","purpose":"First transformation","htmlid":"mw_a5ebe03d-d797-48f8-bab0-012c14de39e4_sep_mw_16862489-a339-4649-b680-c5d2d88cf7c9","value":["se2 object","se3 object","N-element array of transformation objects"]},{"name":"transformationB","purpose":"Last transformation","htmlid":"mw_a5ebe03d-d797-48f8-bab0-012c14de39e4_sep_mw_9b7749c3-301b-49bd-b529-3bcf1b5b75be","value":["se2 object","se3 object","N-element array of transformation objects"]},{"name":"rotationA","purpose":"First rotation","htmlid":"mw_a5ebe03d-d797-48f8-bab0-012c14de39e4_sep_mw_bd6acbae-e538-4862-9186-fd02f3a30ce7","value":["so2 object","so3 object","N-element array of rotation objects"]},{"name":"rotationB","purpose":"Last rotation","htmlid":"mw_a5ebe03d-d797-48f8-bab0-012c14de39e4_sep_mw_cf0937a7-ee44-4009-92af-f272587b6168","value":["so2 object","so3 object","N-element array of rotation objects"]}]}],"outputs":[{"name":"transformationC","purpose":"Transformation quotient","htmlid":"mw_e0b1fc49-a853-4282-b619-56d022c56fe9","value":["se2 object","se3 object","N-element array of transformation objects"]},{"name":"rotationC","purpose":"Rotation quotient","htmlid":"mw_64e620da-102e-42b2-a722-05dad3e04b3a","value":["so2 object","so3 object","N-element array of rotation objects"]}],"seealso":[{"url":"se2.mrdivide.html","name":"mrdivide, \/"},{"url":"se2.mtimes.html","name":"mtimes, *"},{"url":"se2.times.html","name":"times, .*"},{"url":"se2.html","name":"se2"},{"url":"se3.html","name":"se3"},{"url":"so2.html","name":"so2"},{"url":"so3.html","name":"so3"}]},{"href":"ref\/se2.rotm.html","refentity":[{"type":"function","name":"rotm","fcntype":"instancemethod"},{"type":"method","name":"se2.rotm","fcntype":"instancemethod"},{"type":"method","name":"se3.rotm","fcntype":"instancemethod"},{"type":"method","name":"so2.rotm","fcntype":"instancemethod"},{"type":"method","name":"so3.rotm","fcntype":"instancemethod"}],"refpurpose":"Extract rotation matrix","introduced":"R2022b","description":"This MATLAB function returns the rotation matrix rotationMatrix from the SE(2) or SE(3) transformation transformation.","syntaxgroup":[{"title":"","syntax":["rotationMatrix = rotm(transformation)","rotationMatrix = rotm(rotation)"]}],"inputgroup":[{"title":"","inputs":[{"name":"transformation","purpose":"Transformation","htmlid":"mw_26271176-3a09-4dba-a308-5919e8b2c556_sep_mw_2f2e2d9a-374b-4868-884e-7f52fd5257e2","value":["se2 object","se3 object","N-element array of transformation objects"]},{"name":"rotation","purpose":"Rotation","htmlid":"mw_26271176-3a09-4dba-a308-5919e8b2c556_sep_mw_f18c4a61-9572-4245-93c1-400afdb4585d","value":["so2 object","so3 object","N-element array of rotation objects"]}]}],"outputs":[{"name":"rotationMatrix","purpose":"Rotation matrix","htmlid":"mw_525f2f6b-01ef-4ce8-b46a-09978f46f61f","value":["2-by-2-by-N array","3-by-3-by-N array"]}],"seealso":[{"url":"se2.tform.html","name":"tform"},{"url":"se2.trvec.html","name":"trvec"},{"url":"se2.html","name":"se2"},{"url":"se3.html","name":"se3"},{"url":"so2.html","name":"so2"},{"url":"so3.html","name":"so3"}]},{"href":"ref\/se2.tform.html","refentity":[{"type":"function","name":"tform","fcntype":"instancemethod"},{"type":"method","name":"se2.tform","fcntype":"instancemethod"},{"type":"method","name":"se3.tform","fcntype":"instancemethod"}],"refpurpose":"Extract homogeneous transformation","introduced":"R2022b","description":"This MATLAB function extracts the homogeneous transformation matrix transformationMatrix that corresponds to the SE(2) or SE(3) transformation transformation.","syntaxgroup":[{"title":"","syntax":["transformationMatrix = tform(transformation)","transformationMatrix = tform(rotation)"]}],"inputgroup":[{"title":"","inputs":[{"name":"transformation","purpose":"Transformation","htmlid":"mw_f6ef62f1-b4e7-4f14-acc9-de45c3367092_sep_mw_2f2e2d9a-374b-4868-884e-7f52fd5257e2","value":["se2 object","se3 object","N-element array of transformation objects"]},{"name":"rotation","purpose":"Rotation","htmlid":"mw_f6ef62f1-b4e7-4f14-acc9-de45c3367092_sep_mw_f18c4a61-9572-4245-93c1-400afdb4585d","value":["so2 object","so3 object","N-element array of rotation objects"]}]}],"outputs":[{"name":"transformationMatrix","purpose":"Homogeneous transformation matrix","htmlid":"mw_2e2bfa18-a5e0-4bd7-84b4-7644f7ef69fc","value":["3-by-3-by-N array","4-by-4-by-N array"]}],"seealso":[{"url":"se2.rotm.html","name":"rotm"},{"url":"se2.trvec.html","name":"trvec"},{"url":"se2.html","name":"se2"},{"url":"se3.html","name":"se3"},{"url":"so2.html","name":"so2"},{"url":"so3.html","name":"so3"}]},{"href":"ref\/se2.theta.html","refentity":[{"type":"function","name":"theta","fcntype":"instancemethod"},{"type":"method","name":"se2.theta","fcntype":"instancemethod"},{"type":"method","name":"so2.theta","fcntype":"instancemethod"}],"refpurpose":"Convert transformation or rotation to 2-D rotation angle","introduced":"R2023a","description":"This MATLAB function extracts the 2-D rotation angle angle from the transformation transformation.","syntaxgroup":[{"title":"","syntax":["angle = theta(transformation)","angle = theta(rotation)"]}],"inputgroup":[{"title":"","inputs":[{"name":"transformation","purpose":"Transformation","htmlid":"mw_d871e944-f6e0-4d0f-a6cb-a391948e988f","value":["se2 object","N-by-M array of se2 objects"]},{"name":"rotation","purpose":"Rotation","htmlid":"mw_21a3c799-bc9b-4aa5-bbf6-238e36b8198f","value":["so2 object","N-by-M array of so2 objects"]}]}],"outputs":[{"name":"angle","purpose":"Rotation angle","htmlid":"mw_a7da397d-0ba9-40ca-886f-9f8db91eb6c5","value":["numeric scalar","N-by-M matrix"]}],"examples":[{"url":"se2.theta.html#mw_c6f70fba-6940-454c-a5c8-590994f1a0e0","open_command":"openExample('shared_spatial\/ConvertSE2TransformationToAngleExample')","title":"Convert SE(2) Transformation to Angle"},{"url":"se2.theta.html#mw_444a5479-412d-4ced-b1e4-ca4e5eaeca0a","open_command":"openExample('shared_spatial\/ConvertSO2TransformationToAngleExample')","title":"Convert SO(2) Transformation to Angle"}],"seealso":[{"url":"se2.html","name":"se2"},{"url":"so2.html","name":"so2"}]},{"href":"ref\/se2.times.html","refentity":[{"type":"function","name":"times","fcntype":"instancemethod"},{"type":"function","name":".*","fcntype":"instancemethod"},{"type":"method","name":"se2.times","fcntype":"instancemethod"},{"type":"method","name":"se3.times","fcntype":"instancemethod"},{"type":"method","name":"so2.times","fcntype":"instancemethod"},{"type":"method","name":"so3.times","fcntype":"instancemethod"}],"refpurpose":"Element-wise transformation or rotation multiplication","introduced":"R2022b","description":"This MATLAB function multiplies transformations element-by-element by multiplying each element of transformation transformationA with the corresponding element of transformation transformationB and returns the product, transformation transformationC.","syntaxgroup":[{"title":"","syntax":["transformationC = transformationA.*transformationB","rotationC = rotationA.*rotationB"]}],"inputgroup":[{"title":"","inputs":[{"name":"transformationA","purpose":"First transformation","htmlid":"mw_9b96293d-c31c-4ff5-ba80-bf214d2ff7e3_sep_mw_16862489-a339-4649-b680-c5d2d88cf7c9","value":["se2 object","se3 object","N-element array of transformation objects"]},{"name":"transformationB","purpose":"Last transformation","htmlid":"mw_9b96293d-c31c-4ff5-ba80-bf214d2ff7e3_sep_mw_9b7749c3-301b-49bd-b529-3bcf1b5b75be","value":["se2 object","se3 object","N-element array of transformation objects"]},{"name":"rotationA","purpose":"First rotation","htmlid":"mw_9b96293d-c31c-4ff5-ba80-bf214d2ff7e3_sep_mw_bd6acbae-e538-4862-9186-fd02f3a30ce7","value":["so2 object","so3 object","N-element array of rotation objects"]},{"name":"rotationB","purpose":"Last rotation","htmlid":"mw_9b96293d-c31c-4ff5-ba80-bf214d2ff7e3_sep_mw_cf0937a7-ee44-4009-92af-f272587b6168","value":["so2 object","so3 object","N-element array of rotation objects"]}]}],"outputs":[{"name":"transformationC","purpose":"Transformation product","htmlid":"mw_3c354d97-f257-423a-9c78-b249ba7dd133","value":["se2 object","se3 object","N-element array of transformation objects"]},{"name":"rotationC","purpose":"Rotation product","htmlid":"mw_a4fd17a7-ae21-47da-8db4-c35138cc9e80","value":["so2 object","so3 object","N-element array of rotation objects"]}],"seealso":[{"url":"se2.mrdivide.html","name":"mrdivide, \/"},{"url":"se2.rdivide.html","name":"rdivide, .\/"},{"url":"se2.mtimes.html","name":"mtimes, *"},{"url":"se2.html","name":"se2"},{"url":"se3.html","name":"se3"},{"url":"so2.html","name":"so2"},{"url":"so3.html","name":"so3"}]},{"href":"ref\/se2.transform.html","refentity":[{"type":"function","name":"transform","fcntype":"instancemethod"},{"type":"method","name":"se2.transform","fcntype":"instancemethod"},{"type":"method","name":"se3.transform","fcntype":"instancemethod"},{"type":"method","name":"so2.transform","fcntype":"instancemethod"},{"type":"method","name":"so3.transform","fcntype":"instancemethod"}],"refpurpose":"Apply rigid body transformation to points","introduced":"R2022b","description":"This MATLAB function applies the rigid body transformation transformation to the input points points, and returns the transformed points tpoints.","syntaxgroup":[{"title":"","syntax":["tpoints = transform(transformation,points)","tpoints = transform(rotation,points)","tpoints = transform(___,isCol=format)"]}],"inputgroup":[{"title":"","inputs":[{"name":"transformation","purpose":"Transformation","htmlid":"mw_c249e805-1c7c-48fc-be1a-ac4c6b36dce2_sep_mw_2f2e2d9a-374b-4868-884e-7f52fd5257e2","value":["se2 object","se3 object","N-element array of transformation objects"]},{"name":"rotation","purpose":"Rotation","htmlid":"mw_624990d8-cbeb-419d-a6cc-ecd60bb1d1e5","value":["so2 object","so3 object","N-element array of rotation objects"]},{"name":"points","purpose":"Points to transform","htmlid":"mw_62e1b94c-9e38-45be-8919-d1d261716eef","value":["N-by-D-by-M array","D-by-N-by-M array"]},{"name":"format","purpose":"Point format","htmlid":"mw_dab90c7a-9534-4a41-a496-7d3b0e44233f","value":["false or 0","true or 1"],"defaultvalue":"false or 0"}]}],"outputs":[{"name":"tpoints","purpose":"Transformed points","htmlid":"mw_85aecc26-fb45-4baf-9247-2401b24e0ee9","value":["N-by-D-by-M array","D-by-N-by-M array"]}],"seealso":[{"url":"se2.dist.html","name":"dist"},{"url":"se2.interp.html","name":"interp"},{"url":"se2.normalize.html","name":"normalize"},{"url":"plottransforms.html","name":"plotTransforms"},{"url":"se2.html","name":"se2"},{"url":"se3.html","name":"se3"},{"url":"so2.html","name":"so2"},{"url":"so3.html","name":"so3"}]},{"href":"ref\/se2.trvec.html","refentity":[{"type":"function","name":"trvec","fcntype":"instancemethod"},{"type":"method","name":"se2.trvec","fcntype":"instancemethod"},{"type":"method","name":"se3.trvec","fcntype":"instancemethod"}],"refpurpose":"Extract translation vector","introduced":"R2022b","description":"This MATLAB function extracts the translation vector translationVector of the SE(2) or SE(3) transformation transformation.","syntaxgroup":[{"title":"","syntax":["translationVector = trvec(transformation)"]}],"inputgroup":[{"title":"","inputs":[{"name":"transformation","purpose":"Transformation","htmlid":"mw_f46fb34f-d189-449d-997d-100032834e9d_sep_mw_2f2e2d9a-374b-4868-884e-7f52fd5257e2","value":["se2 object","se3 object","N-element array of transformation objects"]}]}],"outputs":[{"name":"translationVector","purpose":"Translation vector","htmlid":"mw_52d6357b-9b67-4849-bb92-f95bf9c85430","value":["N-by-2 matrix","N-by-3 matrix"]}],"seealso":[{"url":"se2.rotm.html","name":"rotm"},{"url":"se2.tform.html","name":"tform"},{"url":"se2.html","name":"se2"},{"url":"se3.html","name":"se3"}]},{"href":"ref\/se2.xytheta.html","refentity":[{"type":"function","name":"xytheta","fcntype":"instancemethod"},{"type":"method","name":"se2.xytheta","fcntype":"instancemethod"},{"type":"method","name":"so2.xytheta","fcntype":"instancemethod"}],"refpurpose":"Convert transformation or rotation to compact 2-D pose representation","introduced":"R2023a","description":"This MATLAB function converts a transformation transformation to a compact 2-D pose representation pose.","syntaxgroup":[{"title":"","syntax":["pose = xytheta(transformation)","pose = xytheta(rotation)"]}],"inputgroup":[{"title":"","inputs":[{"name":"transformation","purpose":"Transformation","htmlid":"mw_6199d2ee-7f85-4315-afbb-31fcca64fe7e","value":["se2 object","N-element array of se2 objects"]},{"name":"rotation","purpose":"Rotation","htmlid":"mw_3364fe6f-88d2-43b7-98bf-6b402c4c94ec","value":["so2 object","N-element array of so2 objects"]}]}],"outputs":[{"name":"pose","purpose":"2-D compact pose","htmlid":"mw_59345fdc-3e6a-4991-99aa-b5b1ad739e02","value":["N-by-3 matrix"]}],"examples":[{"url":"se2.xytheta.html#mw_d72ca0c5-e6f1-4d04-ba21-92d2610a97cb","open_command":"openExample('shared_spatial\/ConvertSE2TransformationTo2DCompactPoseExample')","title":"Convert SE(2) Transformation to 2-D Compact Pose"},{"url":"se2.xytheta.html#mw_e89a5431-9ec5-4f89-9504-3c5310967136","open_command":"openExample('shared_spatial\/ConvertSO2RotationTo2DCompactPoseExample')","title":"Convert SO(2) Rotation to 2-D Compact Pose"}],"seealso":[{"url":"se2.html","name":"se2"},{"url":"so2.html","name":"so2"}]},{"href":"ref\/se3.axang.html","refentity":[{"type":"function","name":"axang","fcntype":"instancemethod"},{"type":"method","name":"se3.axang","fcntype":"instancemethod"},{"type":"method","name":"so3.axang","fcntype":"instancemethod"}],"refpurpose":"Convert transformation or rotation into axis-angle rotations","introduced":"R2023a","description":"This MATLAB function converts the rotation of the transformation transformation to the axis-angle rotations angles.","syntaxgroup":[{"title":"","syntax":["angles = axang(transformation)","angles = axang(rotation)"]}],"inputgroup":[{"title":"","inputs":[{"name":"transformation","purpose":"Transformation","htmlid":"mw_2fce0ac5-44bb-45fc-8d14-410146784549_sep_mw_98168a00-a004-4611-918d-eb035d5bd829","value":["se3 object","N-element array of se3 objects"]},{"name":"rotation","purpose":"Rotation","htmlid":"mw_2fce0ac5-44bb-45fc-8d14-410146784549_sep_mw_1c01c0bd-6e77-48f3-a133-bfd2b284af7c","value":["so3 object","N-element array of so3 objects"]}]}],"outputs":[{"name":"angles","purpose":"Axis-angle rotation angles","htmlid":"mw_13fc1aab-b413-48f6-a1a2-b9aa221c2027","value":["N-by-4 matrix"]}],"examples":[{"url":"se3.axang.html#mw_1caf27b7-077e-421c-9d23-07c124ba4943","open_command":"openExample('shared_spatial\/ConvertSE3TransformationToAxisAngleRotationExample')","title":"Convert SE(3) Transformation to Axis-Angle Rotation"},{"url":"se3.axang.html#mw_daa5ef17-7e16-4b31-82f9-9a5a8070230e","open_command":"openExample('shared_spatial\/ConvertSO3RotationToAxisAngleRotationExample')","title":"Convert SO(3) Rotation to Axis-Angle Rotation"}],"seealso":[{"url":"se3.html","name":"se3"},{"url":"so3.html","name":"so3"}]},{"href":"ref\/se3.eul.html","refentity":[{"type":"function","name":"eul","fcntype":"instancemethod"},{"type":"method","name":"se3.eul","fcntype":"instancemethod"},{"type":"method","name":"so3.eul","fcntype":"instancemethod"}],"refpurpose":"Convert transformation or rotation into Euler angles","introduced":"R2023a","description":"This MATLAB function converts the rotation of the transformation transformation to the Euler angles angles.","syntaxgroup":[{"title":"","syntax":["angles = eul(transformation)","angles = eul(rotation)","angles = eul(___,sequence)"]}],"inputgroup":[{"title":"","inputs":[{"name":"transformation","purpose":"Transformation","htmlid":"mw_a311008e-6481-4601-a2d6-83f7f2697c1f_sep_mw_98168a00-a004-4611-918d-eb035d5bd829","value":["se3 object","N-element array of se3 objects"]},{"name":"rotation","purpose":"Rotation","htmlid":"mw_a311008e-6481-4601-a2d6-83f7f2697c1f_sep_mw_1c01c0bd-6e77-48f3-a133-bfd2b284af7c","value":["so3 object","N-element array of so3 objects"]},{"name":"sequence","purpose":"Axis-rotation sequence","htmlid":"mw_a311008e-6481-4601-a2d6-83f7f2697c1f_sep_mw_e1ec5f45-aa43-4f3a-bcc6-bc10914e150d","value":["\"ZYX\"","\"ZYZ\"","\"ZXY\"","\"ZXZ\"","\"YXY\"","\"YZX\"","\"YXZ\"","\"YZY\"","\"XYX\"","\"XYZ\"","\"XZX\"","\"XZY\""],"defaultvalue":"\"ZYX\""}]}],"outputs":[{"name":"angles","purpose":"Euler angles","htmlid":"mw_3f101377-ef95-49cf-95ff-d570e6b2122d","value":["M-by-3 matrix"]}],"examples":[{"url":"se3.eul.html#mw_26fe1f95-893a-4eea-af82-3a16a56e0654","open_command":"openExample('shared_spatial\/ConvertSE3TransformationToEulerAnglesExample')","title":"Convert SE(3) Transformation to Euler Angles"},{"url":"se3.eul.html#mw_cf621c22-6437-44e0-85c3-9b07e5ded078","open_command":"openExample('shared_spatial\/ConvertSO3RotationToEulerAnglesExample')","title":"Convert SO(3) Rotation to Euler Angles"}],"seealso":[{"url":"se3.html","name":"se3"},{"url":"so3.html","name":"so3"}]},{"href":"ref\/se3.html","refentity":[{"type":"object","name":"se3"},{"type":"function","name":"se3","fcntype":"constructor"}],"refpurpose":"SE(3) homogeneous transformation","introduced":"R2022b","description":"The se3 object represents an SE(3) transformation as a 3-D homogeneous transformation matrix consisting of a translation and rotation for a right-handed Cartesian coordinate system.","syntaxgroup":[{"title":"Rotation Matrices, Translation Vectors, and Transformation Matrices","syntax":["transformation = se3","transformation = se3(rotation)","transformation = se3(rotation,translation)","transformation = se3(transformation)"]},{"title":"Other 3-D Rotation Representations","syntax":["transformation = se3(euler,\"eul\")","transformation = se3(euler,\"eul\",sequence)","transformation = se3(quat,\"quat\")","transformation = se3(quaternion)","transformation = se3(axang,\"axang\")","transformation = se3(angle,axis)","transformation = se3(___,translation)"]},{"title":"Other Translations and Transformation Representations","syntax":["transformation = se3(translation,\"trvec\")","transformation = se3(pose,\"xyzquat\")"]}],"inputgroup":[{"title":"","inputs":[{"name":"rotation","purpose":"Orthonormal rotation","htmlid":"mw_db3080db-9a94-410d-93dc-3af72381045e","value":["3-by-3 matrix","3-by-3-by-N matrix","so3 object","N-element array of so3 objects"]},{"name":"translation","purpose":"Translation","htmlid":"mw_8dd46541-0c35-49a9-afe6-0f4d965e8ad0","value":["three-element row vector","N-by-3 matrix"]},{"name":"transformation","purpose":"Homogeneous transformation","htmlid":"mw_ddd30db6-57b8-4a5f-8af1-7642f79dc91a_sep_mw_9470864c-9c03-43d3-bc26-88abd32d4037","value":["4-by-4 matrix","4-by-4-by-N array","se3 object","N-element array of se3 objects"]},{"name":"quaternion","purpose":"Quaternion","htmlid":"mw_ddd30db6-57b8-4a5f-8af1-7642f79dc91a_sep_mw_fd9e1a8e-a65a-4dd0-87dc-1941fc8ef247","value":["quaternion object","N-element array of quaternion objects"]},{"name":"euler","purpose":"Euler angles","htmlid":"mw_ddd30db6-57b8-4a5f-8af1-7642f79dc91a_sep_mw_209eee3f-e7ad-4554-9a8f-fe8cf4ca668f","value":["N-by-3 matrix"]},{"name":"sequence","purpose":"Axis-rotation sequence","htmlid":"mw_ddd30db6-57b8-4a5f-8af1-7642f79dc91a_sep_mw_299cebdb-d5ac-46af-90aa-c18a1ffbfe5b","value":["\"ZYX\"","\"ZYZ\"","\"ZXY\"","\"ZXZ\"","\"YXY\"","\"YZX\"","\"YXZ\"","\"YZY\"","\"XYX\"","\"XYZ\"","\"XZX\"","\"XZY\""],"defaultvalue":"\"ZYX\""},{"name":"quat","purpose":"Numeric quaternion","htmlid":"mw_ddd30db6-57b8-4a5f-8af1-7642f79dc91a_sep_mw_573c9d0b-a221-4b7c-ad8c-bdcbe44d4a56","value":["N-by-4 matrix"]},{"name":"axang","purpose":"Axis-angle rotation","htmlid":"mw_ddd30db6-57b8-4a5f-8af1-7642f79dc91a_sep_mw_595b6d84-7828-4d49-808c-189581a38513","value":["N-by-4 matrix"]},{"name":"angle","purpose":"Single-axis-angle rotation","htmlid":"mw_ddd30db6-57b8-4a5f-8af1-7642f79dc91a_sep_mw_09a2c056-9b03-46a2-9b39-876013b2d727","value":["N-by-M matrix"]},{"name":"axis","purpose":"Axis to rotate","htmlid":"mw_ddd30db6-57b8-4a5f-8af1-7642f79dc91a_sep_mw_be12c14e-010e-4c86-8034-78fdeb57d16e","value":["\"rotx\"","\"roty\"","\"rotz\""]},{"name":"pose","purpose":"3-D compact pose","htmlid":"mw_f9a9fe81-5547-4a22-a681-7c9c1b1f9bf5","value":["N-by-7 matrix"]}]}],"objectfunctions":[{"title":"Mathematical Operations","functions":[{"name":"mtimes, *","url":"se2.mtimes.html","description":"Transformation or rotation multiplication"},{"name":"mrdivide, \/","url":"se2.mrdivide.html","description":"Transformation or rotation right division"},{"name":"rdivide, .\/","url":"se2.rdivide.html","description":"Element-wise transformation or rotation right division"},{"name":"times, .*","url":"se2.times.html","description":"Element-wise transformation or rotation multiplication"}]},{"title":"Utilities","functions":[{"name":"interp","url":"se2.interp.html","description":"Interpolate between transformations"},{"name":"dist","url":"se2.dist.html","description":"Calculate distance between transformations"},{"name":"normalize","url":"se2.normalize.html","description":"Normalize transformation or rotation matrix"},{"name":"transform","url":"se2.transform.html","description":"Apply rigid body transformation to points"}]},{"title":"Numerical Conversions","functions":[{"name":"axang","url":"se3.axang.html","description":"Convert transformation or rotation into axis-angle rotations"},{"name":"eul","url":"se3.eul.html","description":"Convert transformation or rotation into Euler angles"},{"name":"rotm","url":"se2.rotm.html","description":"Extract rotation matrix"},{"name":"quat","url":"se3.quat.html","description":"Convert transformation or rotation to numeric quaternion"},{"name":"trvec","url":"se2.trvec.html","description":"Extract translation vector"},{"name":"tform","url":"se2.tform.html","description":"Extract homogeneous transformation"},{"name":"xyzquat","url":"se3.xyzquat.html","description":"Convert transformation or rotation to compact 3-D pose representation"}]},{"title":"Object Conversions","functions":[{"name":"so3","url":"so3.html","description":"SO(3) rotation"},{"name":"quaternion","url":"quaternion.html","description":"Create quaternion array"}]}],"examples":[{"url":"se3.html#mw_f657bfaf-7056-44a0-829b-b3c475a7b5bb","open_command":"openExample('shared_spatial\/CreateSE3TransformationUsingEulerAnglesAndTranslationExample')","title":"Create SE(3) Transformation Using Euler Angles and Translation"}],"seealso":[{"url":"axang2tform.html","name":"axang2tform"},{"url":"eul2tform.html","name":"eul2tform"},{"url":"quat2tform.html","name":"quat2tform"},{"url":"rotm2tform.html","name":"rotm2tform"},{"url":"trvec2tform.html","name":"trvec2tform"},{"url":"plottransforms.html","name":"plotTransforms"},{"url":"se2.html","name":"se2"},{"url":"so2.html","name":"so2"},{"url":"so3.html","name":"so3"},{"url":"quaternion.html","name":"quaternion"}]},{"href":"ref\/se3.quat.html","refentity":[{"type":"function","name":"quat","fcntype":"instancemethod"},{"type":"method","name":"se3.quat","fcntype":"instancemethod"},{"type":"method","name":"so3.quat","fcntype":"instancemethod"}],"refpurpose":"Convert transformation or rotation to numeric quaternion","introduced":"R2023a","description":"This MATLAB function creates a quaternion q from the rotation of the transformation transformation.","syntaxgroup":[{"title":"","syntax":["q = quat(transformation)","q = quat(rotation)"]}],"inputgroup":[{"title":"","inputs":[{"name":"transformation","purpose":"Transformation","htmlid":"mw_95c28eca-89c2-424c-bd3f-2ae4d6a84120_sep_mw_98168a00-a004-4611-918d-eb035d5bd829","value":["se3 object","N-element array of se3 objects"]},{"name":"rotation","purpose":"Rotation","htmlid":"mw_95c28eca-89c2-424c-bd3f-2ae4d6a84120_sep_mw_1c01c0bd-6e77-48f3-a133-bfd2b284af7c","value":["so3 object","N-element array of so3 objects"]}]}],"outputs":[{"name":"q","purpose":"Quaternion rotation angles","htmlid":"mw_35707512-fce0-40a6-8bc2-ad6dc5aa24df","value":["M-by-4 matrix"]}],"examples":[{"url":"se3.quat.html#mw_a25ba21a-fd35-429a-af46-c3cc8de946da","open_command":"openExample('shared_spatial\/ConvertSE3TransformationToNumericQuaternionExample')","title":"Convert SE(3) Transformation to Numeric Quaternion"},{"url":"se3.quat.html#mw_edf01c30-6295-41d9-9135-345de8a63749","open_command":"openExample('shared_spatial\/ConvertSO3RotationToNumericQuaternionExample')","title":"Convert SO(3) Rotation to Numeric Quaternion"}],"seealso":[{"url":"se3.html","name":"se3"},{"url":"so3.html","name":"so3"},{"url":"quaternion.html","name":"quaternion"}]},{"href":"ref\/se3.xyzquat.html","refentity":[{"type":"function","name":"xyzquat","fcntype":"instancemethod"},{"type":"method","name":"se3.xyzquat","fcntype":"instancemethod"},{"type":"method","name":"so3.xyzquat","fcntype":"instancemethod"}],"refpurpose":"Convert transformation or rotation to compact 3-D pose representation","introduced":"R2023a","description":"This MATLAB function converts a transformation transformation to a compact 3-D pose representation pose.","syntaxgroup":[{"title":"","syntax":["pose = xyzquat(transformation)","pose = xyzquat(rotation)"]}],"inputgroup":[{"title":"","inputs":[{"name":"transformation","purpose":"Transformation","htmlid":"mw_a10af64e-1602-47c0-a300-92e50e3e6b49_sep_mw_98168a00-a004-4611-918d-eb035d5bd829","value":["se3 object","N-element array of se3 objects"]},{"name":"rotation","purpose":"Rotation","htmlid":"mw_a10af64e-1602-47c0-a300-92e50e3e6b49_sep_mw_1c01c0bd-6e77-48f3-a133-bfd2b284af7c","value":["so3 object","N-element array of so3 objects"]}]}],"outputs":[{"name":"pose","purpose":"3-D compact pose","htmlid":"mw_104c0d44-ce53-4348-bb79-c287918addf0","value":["M-by-3 matrix"]}],"examples":[{"url":"se3.xyzquat.html#mw_c7a7a886-50ef-4068-8d79-e38b5e37a50d","open_command":"openExample('shared_spatial\/ConvertSE3TransformationTo3DCompactPoseExample')","title":"Convert SE(3) Transformation to 3-D Compact Pose"},{"url":"se3.xyzquat.html#mw_4368335f-bf51-4e3b-ac09-aa995f46c347","open_command":"openExample('shared_spatial\/ConvertSO3RotationTo3DCompactPoseExample')","title":"Convert SO(3) Rotation to 3-D Compact Pose"}],"seealso":[{"url":"se3.html","name":"se3"},{"url":"so3.html","name":"so3"}]},{"href":"ref\/semread.html","refentity":[{"type":"function","name":"semread","fcntype":"simple"}],"refpurpose":"Read data from SEM almanac file","introduced":"R2022b","description":"This MATLAB function reads data from the SEM (System Effectiveness Model) almanac file for the date specified by filename, and returns the parameters of each associated satellite as a timetable, as well as the almanac title.","syntaxgroup":[{"title":"","syntax":["[data,title] = semread(filename)","[data,title] = semread(filename,GPSWeekEpoch=refdate)"]}],"inputgroup":[{"title":"","inputs":[{"name":"filename","purpose":"SEM almanac file name","htmlid":"mw_40d0443b-5f8c-454a-ba19-2763be17bdb2","value":["string scalar","character vector"]},{"name":"refdate","purpose":"Reference date","htmlid":"mw_4cbba711-6bd9-416d-91b8-442f3c43f893","value":["\"06-Jan-1980\"","\"21-Aug-1999\"","\"06-Apr-2019\""]}]}],"outputs":[{"name":"data","purpose":"Parameters of each satellite","htmlid":"mw_2940a4d1-1c06-44e0-886f-62cf18b4c2a0","value":["timetable"]},{"name":"title","purpose":"Almanac title","htmlid":"mw_a5878385-7893-4af2-8d6c-97bc76bf070e","value":["character vector"]}],"examples":[{"url":"semread.html#mw_cd6a8275-7b6f-4d89-8fde-b89f85d1b772","open_command":"openExample('nav\/ReadGPSNavigationMessageDataFromSEMAlmanacFileExample')","title":"Read GPS Navigation Message Data from SEM Almanac File"},{"url":"semread.html#mw_86bf4310-8ce5-4422-9184-754fe9499d2e","open_command":"openExample('nav\/ViewSatellitePositionsFromSEMAlmanacForReceiverPositionExample')","title":"View Satellite Positions from SEM Almanac File for Receiver Position"},{"url":"semread.html#mw_bd1b91a2-320d-46f1-ae59-9315a4ab9a5a","open_command":"openExample('nav\/PlotTrajectoriesOfSatellitesOverTimeFromSEMAlmanacFileExample')","title":"Plot Trajectories of Satellites over Time from SEM Almanac File"}],"seealso":[{"url":"rinexread.html","name":"rinexread"},{"url":"yumaread.html","name":"yumaread"},{"url":"gnssconstellation.html","name":"gnssconstellation"},{"url":"skyplot.html","name":"skyplot"},{"url":"lookangles.html","name":"lookangles"},{"url":"..\/..\/matlab\/ref\/websave.html","name":"websave"}]},{"href":"ref\/shortenpath.html","refentity":[{"type":"function","name":"shortenpath","fcntype":"simple"}],"refpurpose":"Shorten path by removing redundant nodes","introduced":"R2024b","description":"This MATLAB function shortens the path between a start pose and goal pose by removing redundant nodes along the path.","syntaxgroup":[{"title":"","syntax":["outputPath = shortenpath(inputPath,sv)"]}],"inputgroup":[{"title":"","inputs":[{"name":"inputPath","purpose":"Input path","htmlid":"mw_5dc3e2a0-b3dd-4fca-8ba3-2efc123a7562","value":["navPath object"]},{"name":"sv","purpose":"State validator","htmlid":"mw_91252690-3b6a-4506-9e8e-90fb09e9f947","value":["validatorOccupancyMap object","validatorVehicleCostmap object","validatorOccupancyMap3D object","object from a subclass of nav.StateValidator"]}]}],"outputs":[{"name":"outputPath","purpose":"Shortened path","htmlid":"mw_c5607284-9900-498f-846a-45d581cc2186","value":["navPath object"]}],"examples":[{"url":"shortenpath.html#mw_8c4034b0-8dbb-49fe-9ad8-4d2d2a971cca","open_command":"openExample('nav\/ShortenDubinsPathExample')","title":"Shorten Dubins Path"},{"url":"shortenpath.html#mw_a7b75aaa-90d3-46fd-883c-49540d822976","open_command":"openExample('nav\/ShortenPathIn3DOccupancyMapEnvironmentExample')","title":"Shorten Path in 3-D Occupancy Map Environment"}],"seealso":[{"url":"navpath.html","name":"navPath"},{"url":"pathmetrics.ispathvalid.html","name":"isPathValid"},{"url":"navpath.pathlength.html","name":"pathLength"},{"url":"pathmetrics.smoothness.html","name":"smoothness"}]},{"href":"ref\/showcollisionarray.html","refentity":[{"type":"function","name":"showCollisionArray","fcntype":"simple"}],"refpurpose":"Show array of collision objects in figure","introduced":"R2023b","description":"This MATLAB function plots a collision object array in a figure and returns the axes that the collision objects are plotted on and the patches of each collision object.","syntaxgroup":[{"title":"","syntax":["[ax,patches] = showCollisionArray(collArray)","[___] = showCollisionArray(___,Name=Value)"]}],"inputgroup":[{"title":"","inputs":[{"name":"collArray","purpose":"Collision objects","htmlid":"mw_af953079-0651-4d20-9241-98024cf72a5a","value":["N-element cell array of collision geometry objects"]}]},{"namevaluepairs":[{"title":"","inputs":[{"name":"Parent","purpose":"Parent axes","htmlid":"mw_42736767-0fb6-4f6c-9c26-6653c3648771","value":["Axes object"]},{"name":"ColorOrder","purpose":"Color order","htmlid":"mw_96c546a3-5331-4171-9753-53427685c840","value":["three-column matrix of RGB triplets"]}]}]}],"outputs":[{"name":"ax","purpose":"Axes graphic handle","htmlid":"mw_9bbd3e90-e281-46c2-87a7-16dc091c36fb","value":["Axes object"]},{"name":"patches","purpose":"Patches of collision objects","htmlid":"mw_65704577-1592-49a9-ab38-e261d9187103","value":["N-element Patch array"]}],"examples":[{"url":"showcollisionarray.html#mw_40a24c2c-5ec5-4b3f-8829-b831c376d764","open_command":"openExample('nav_robotics\/DecomposeConcaveMeshesForCollisionCheckingExample')","title":"Decompose Non-Convex Meshes for Collision Checking"}],"seealso":[{"url":"vhacdoptions.html","name":"vhacdOptions"},{"url":"collisionvhacd.html","name":"collisionVHACD"}]},{"href":"ref\/showtransform.html","refentity":[{"type":"function","name":"showTransform","fcntype":"simple"}],"refpurpose":"Visualize estimated camera-to-IMU transformation","introduced":"R2024a","description":"This MATLAB function visualizes the estimated camera-to-IMU transformation.","syntaxgroup":[{"title":"","syntax":["showTransform(params)","showTransform(___,Name=Value)","ax = showTransform(___)"]}],"inputgroup":[{"title":"","inputs":[{"name":"params","purpose":"Estimated camera-to-IMU calibration parameters","htmlid":"mw_4bddf3cd-0acb-4a71-ae70-cd8b8e620c80_sep_mw_3e23a0f5-2bf5-4156-abf2-6deabb0159f6","value":["cameraIMUParameters object"]}]},{"namevaluepairs":[{"title":"","inputs":[{"name":"Parent","purpose":"Parent axes","htmlid":"mw_63504ddb-3ed8-4c41-b4c8-2e92e6af4e22","value":["Axes object"]},{"name":"ScaleFactor","purpose":"Scale factor for plotting camera and IMU sensor","htmlid":"mw_fd0f3328-2611-4cc5-9777-6cb5e12b0860","value":["0.1","positive numeric scalar"],"defaultvalue":"0.1"}]}]}],"outputs":[{"name":"ax","purpose":"Axes graphic handle","htmlid":"mw_4bddf3cd-0acb-4a71-ae70-cd8b8e620c80_sep_mw_a4370c33-215f-48a2-8a6a-f9980570517c","value":["Axes object"]}],"seealso":[{"url":"estimatecameraimutransform.html","name":"estimateCameraIMUTransform"},{"url":"cameraimuparameters.html","name":"cameraIMUParameters"},{"url":"cameraimuparameters.showimubiasestimates.html","name":"showIMUBiasEstimates"},{"url":"cameraimuparameters.showimupredictionerrors.html","name":"showIMUPredictionErrors"},{"url":"cameraimuparameters.showreprojectionerrors.html","name":"showReprojectionErrors"}]},{"href":"ref\/signalstatisticsconfiguration.html","refentity":[{"type":"object","name":"SignalStatisticsConfiguration"},{"type":"function","name":"SignalStatisticsConfiguration","fcntype":"constructor"}],"refpurpose":"Compute and display signal statistics","introduced":"R2022a","description":"Use the SignalStatisticsConfiguration object to measure signal statistics such as maximum, minimum, peak-to-peak value, mean, variance, standard deviation, median, RMS, and mean square.","syntaxgroup":[{"title":"","syntax":["signalStats = SignalStatisticsConfiguration()"]}],"classpropertygroup":[{"classproperty":[{"name":"ShowMax","purpose":"Compute and display maximum","htmlid":"mw_020d4ef5-0c18-4a11-bc46-a803799a2ccf","value":["true","false"],"defaultvalue":"true"},{"name":"ShowMin","purpose":"Compute and display minimum","htmlid":"mw_15330651-7df4-4be5-ab07-0c54a299f89d","value":["true","false"],"defaultvalue":"true"},{"name":"ShowPeakToPeak","purpose":"Compute and display peak-to-peak values","htmlid":"mw_04846f62-ca9b-4717-a7c7-48b92c19ae5d","value":["true","false"],"defaultvalue":"true"},{"name":"ShowMean","purpose":"Compute and display mean","htmlid":"mw_b9fb751d-5649-45e6-966b-3d0191294223","value":["true","false"],"defaultvalue":"true"},{"name":"ShowVariance","purpose":"Compute and display variance","htmlid":"mw_28f07654-f50e-4256-a4b3-b832d8cfe0c4","value":["false","true"],"defaultvalue":"false"},{"name":"ShowStandardDeviation","purpose":"Compute and display standard deviation","htmlid":"mw_14d69014-ec96-45f4-a135-99729395c8b9","value":["true","false"],"defaultvalue":"true"},{"name":"ShowMedian","purpose":"Compute and display median","htmlid":"mw_ffda56af-3941-41b4-9ed5-323beaa549cc","value":["true","false"],"defaultvalue":"true"},{"name":"ShowRMS","purpose":"Compute and display RMS","htmlid":"mw_bcb62e95-a57e-4a18-9716-dd1bcc4dc9b6","value":["true","false"],"defaultvalue":"true"},{"name":"ShowMeanSquare","purpose":"Compute and display mean square","htmlid":"mw_01e355c0-3bf0-4cc7-9276-4934e446cb84","value":["false","true"],"defaultvalue":"false"},{"name":"Enabled","purpose":"Enable signal statistics measurements","htmlid":"mw_34c492dd-7b6c-49ce-b841-3495a677e57d","value":["false","true"],"defaultvalue":"false"}]}],"examples":[{"url":"signalstatisticsconfiguration.html#mw_c4393e71-05e4-461f-856f-cc465b9ab59a","open_command":"openExample('dsp_nav_fusion\/ObtainSignalStatsProgrammUsingTimeScopeMATLABObjectExample')","title":"Configure Signal Statistics Programmatically in Time Scope MATLAB Object"}],"seealso":[{"url":"timescope.html","name":"timescope"}]},{"href":"ref\/signeddistancemap.closestboundary.html","refentity":[{"type":"function","name":"closestBoundary","fcntype":"instancemethod"},{"type":"method","name":"signedDistanceMap.closestBoundary","fcntype":"instancemethod"}],"refpurpose":"Get nearest boundary to location","introduced":"R2023a","description":"This MATLAB function returns the locations of the closest obstacles boundary for each cell of the specified signed distance map map.","syntaxgroup":[{"title":"","syntax":["boundary = closestBoundary(map)","boundary = closestBoundary(map,location)","boundary = closestBoundary(map,location,frame)","[boundary,isValid] = closestBoundary(map,location,___)","boundary = closestBoundary(map,cornerLocation,matSize)","boundary = closestBoundary(map,cornerLocation,matSize,frame)"]}],"inputgroup":[{"title":"","inputs":[{"name":"map","purpose":"Signed distance map","htmlid":"mw_d96b8f4d-3aef-4b3d-af19-54b7e45f84bb","value":["signedDistanceMap object"]},{"name":"location","purpose":"World or local coordinates, or grid locations","htmlid":"mw_2941a654-8ff5-448c-a7ae-871e204f7a08","value":["N-by-2 matrix"]},{"name":"cornerLocation","purpose":"Minimum corner location of output matrix","htmlid":"mw_b0531285-384e-4cdc-ab27-e8b32d26f92e","value":["two-element vector"]},{"name":"matSize","purpose":"Subregion map size","htmlid":"mw_7f2c0e05-6b41-4bb5-b65a-ab12dab3deb4","value":["two-element vector","[x y]"]},{"name":"frame","purpose":"Coordinate frame","htmlid":"mw_0b5eb168-20ba-4a83-a9c4-558d2f3787cd","value":["\"world\"","\"local\"","\"grid\""],"defaultvalue":"\"world\""}]}],"outputs":[{"name":"boundary","purpose":"Nearest boundary point","htmlid":"mw_424cabda-3028-4050-a5f7-7c3c7b53cb7a","value":["L-by-1-by-2 array","M-by-N-by-2 array"]},{"name":"isValid","purpose":"Points in boundary","htmlid":"mw_c6f1e532-2fe5-498b-83ff-58f08c86a84a_sep_mw_7ff020d9-3a65-4c22-b525-805f35dd9f88","value":["L-element vector"]}],"examples":[{"url":"signeddistancemap.closestboundary.html#mw_0b87acd4-bef2-471a-b4c8-e1d5cd88c4d8","open_command":"openExample('nav\/FindClosestBoundaryInSignedDistanceMapExample')","title":"Find Closest Boundary in Signed Distance Map"}],"seealso":[{"url":"signeddistancemap.html","name":"signedDistanceMap"},{"url":"signeddistancemap.gradient.html","name":"gradient"},{"url":"signeddistancemap.distance.html","name":"distance"}]},{"href":"ref\/signeddistancemap.copy.html","refentity":[{"type":"function","name":"copy","fcntype":"instancemethod"},{"type":"method","name":"signedDistanceMap.copy","fcntype":"instancemethod"}],"refpurpose":"Create copy of 2-D signed distance map","introduced":"R2023a","description":"This MATLAB function creates a deep copy of the signedDistanceMap object with the same properties.","syntaxgroup":[{"title":"","syntax":["copyMap = copy(map)"]}],"inputgroup":[{"title":"","inputs":[{"name":"map","purpose":"Signed distance map","htmlid":"mw_bce3cb27-6ac1-45f0-b650-7206611c7019","value":["signedDistanceMap object"]}]}],"outputs":[{"name":"copyMap","purpose":"Copied signed distance map","htmlid":"mw_4326d081-b087-49e7-abb9-c9b4f21aaa74","value":["signedDistanceMap object"]}],"seealso":[{"url":"signeddistancemap.html","name":"signedDistanceMap"}]},{"href":"ref\/signeddistancemap.distance.html","refentity":[{"type":"function","name":"distance","fcntype":"instancemethod"},{"type":"method","name":"signedDistanceMap.distance","fcntype":"instancemethod"}],"refpurpose":"Get distance at locations","introduced":"R2023a","description":"This MATLAB function returns the signed distances dist to the closest obstacle for all cells in the map map.","syntaxgroup":[{"title":"","syntax":["dist = distance(map)","dist = distance(map,location)","dist = distance(map,location,frame)","[dist,isValid] = distance(map,location,___)","dist = distance(map,cornerLocation,mapSize)","dist = distance(map,cornerLocation,mapSize,frame)"]}],"inputgroup":[{"title":"","inputs":[{"name":"map","purpose":"Signed distance map","htmlid":"mw_7e1f0790-87d6-4933-8171-d58228b63189","value":["signedDistanceMap object"]},{"name":"location","purpose":"World or local coordinates, or grid locations","htmlid":"mw_da575aab-6f49-4704-81e9-2e66f507655b","value":["N-by-2 matrix"]},{"name":"cornerLocation","purpose":"Location of output matrix","htmlid":"mw_86e58eca-463c-42eb-989a-0908dbe316a8","value":["two-element vector"]},{"name":"mapSize","purpose":"Subregion map size","htmlid":"mw_7294c639-16d6-4018-8b09-21daa6f52d06","value":["two-element vector","[x y]"]},{"name":"frame","purpose":"Coordinate frame","htmlid":"mw_6a0bc7e1-e100-4d31-bca6-6eb4e07f3f8c","value":["\"world\"","\"local\"","\"grid\""],"defaultvalue":"\"world\""}]}],"outputs":[{"name":"dist","purpose":"Distances to closest obstacles","htmlid":"mw_e6cce290-8210-496d-af74-907dd14b3dc1","value":["L-element column vector","M-by-N-by-2 array"]},{"name":"isValid","purpose":"Points in boundary","htmlid":"mw_2edce626-85a4-476a-8a16-da3dc946c092_sep_mw_7ff020d9-3a65-4c22-b525-805f35dd9f88","value":["L-element vector"]}],"examples":[{"url":"signeddistancemap.distance.html#mw_499ccf96-4afb-4432-9034-79e799c726c4","open_command":"openExample('nav\/CreateSignedDistanceMapExample')","title":"Get Distance to Nearest Obstacles in Signed Distance Map"}],"seealso":[{"url":"signeddistancemap.html","name":"signedDistanceMap"},{"url":"signeddistancemap.closestboundary.html","name":"closestBoundary"},{"url":"signeddistancemap.gradient.html","name":"gradient"}]},{"href":"ref\/signeddistancemap.gradient.html","refentity":[{"type":"function","name":"gradient","fcntype":"instancemethod"},{"type":"method","name":"signedDistanceMap.gradient","fcntype":"instancemethod"}],"refpurpose":"Get gradient at locations","introduced":"R2023a","description":"This MATLAB function returns the xy-gradients grad for the specified signed distance map map.","syntaxgroup":[{"title":"","syntax":["grad = gradient(map)","grad = gradient(map,location)","grad = gradient(map,location,frame)","[grad,isValid] = gradient(map,location,___)","grad = gradient(map,cornerLocation,mapSize)","grad = gradient(map,cornerLocation,mapSize,frame)"]}],"inputgroup":[{"title":"","inputs":[{"name":"map","purpose":"Signed distance map","htmlid":"mw_d0b166bf-1398-4ae5-a4c1-32c92e36b9fa","value":["signedDistanceMap object"]},{"name":"location","purpose":"World or local coordinates, or grid locations","htmlid":"mw_d90c1108-b521-4028-9aa3-d544ec66b62e","value":["N-by-2 matrix"]},{"name":"cornerLocation","purpose":"Location of output matrix","htmlid":"mw_ac1af3d6-754a-4b76-bf83-6325937a53e1","value":["two-element vector"]},{"name":"mapSize","purpose":"Subregion map size","htmlid":"mw_6414155e-1696-435e-842c-70c3d4b8cb73","value":["two-element vector","[x y]"]},{"name":"frame","purpose":"Coordinate frame","htmlid":"mw_86ac8de0-e5b2-4d3b-95fc-cfebeb5e5ea5","value":["\"world\"","\"local\"","\"grid\""],"defaultvalue":"\"world\""}]}],"outputs":[{"name":"grad","purpose":"xy-gradients","htmlid":"mw_9bb12000-e050-4980-a14b-f1f1a180b712","value":["L-by-1-by-2 array","M-by-N-by-2 array"]},{"name":"isValid","purpose":"Points in boundary","htmlid":"mw_940bac0c-bc4f-457a-be8e-9d7e6e9425fb_sep_mw_7ff020d9-3a65-4c22-b525-805f35dd9f88","value":["L-element vector"]}],"examples":[{"url":"signeddistancemap.gradient.html#mw_f4366457-7084-4c81-9a10-22577e435194","open_command":"openExample('nav\/CalculateGradientsUsingSignedDistanceMapExample')","title":"Calculate Gradients Using Signed Distance Map"}],"seealso":[{"url":"signeddistancemap.html","name":"signedDistanceMap"},{"url":"signeddistancemap.closestboundary.html","name":"closestBoundary"},{"url":"signeddistancemap.distance.html","name":"distance"}]},{"href":"ref\/signeddistancemap.html","refentity":[{"type":"object","name":"signedDistanceMap"},{"type":"function","name":"signedDistanceMap","fcntype":"constructor"}],"refpurpose":"Discrete signed distance map of 2-D region","introduced":"R2023a","description":"Use the signedDistanceMap object to represent distances to surfaces or contours in space using signed distance functions.","syntaxgroup":[{"title":"Dimensions","syntax":["map = signedDistanceMap","map = signedDistanceMap(width,height)","map = signedDistanceMap(width,height,resolution)","map = signedDistanceMap(width,height,resolution,\"world\")","map = signedDistanceMap(rows,cols,resolution,\"grid\")"]},{"title":"Other Maps","syntax":["map = signedDistanceMap(mapmatrix)","map = signedDistanceMap(mapmatrix,resolution)","map = signedDistanceMap(sourcemap)","map = signedDistanceMap(sourcemap,resolution)"]},{"title":"Additional Options","syntax":["map = signedDistanceMap(___,Name=Value)"]}],"inputgroup":[{"title":"","inputs":[{"name":"width","purpose":"Width of map","htmlid":"mw_cb4b5fcf-a30e-4cfa-bddd-22c782c1f292","value":["10","nonnegative numeric scalar"],"defaultvalue":"10"},{"name":"height","purpose":"Height of map","htmlid":"mw_741acff5-00ba-4d76-b2bd-6625946d551f","value":["nonnegative numeric scalar"]},{"name":"rows","purpose":"Number of rows in map","htmlid":"mw_d162bccd-2df0-4e97-beba-b86e37e161ce","value":["nonnegative numeric scalar"]},{"name":"cols","purpose":"Number of columns in map","htmlid":"mw_9ddb608d-b014-4d74-acb2-4b0f833ed0cb","value":["10","nonnegative numeric scalar"],"defaultvalue":"10"},{"name":"mapmatrix","purpose":"Occupancy map matrix","htmlid":"mw_6b6a76fe-aa9d-4992-a822-0c91cb4e84d1","value":["M-by-N binary-valued matrix"]},{"name":"sourcemap","purpose":"Signed distance map to copy values from","htmlid":"mw_0b690a44-3f9d-4e85-a180-a488543e75fd","value":["signedDistanceMap object"]}]}],"classpropertygroup":[{"classproperty":[{"name":"DataType","purpose":"Data type of the values stored","htmlid":"mw_60c6136c-5877-45d4-a193-c0ede01a4760","value":["'logical'","character vector"],"defaultvalue":"'logical'"},{"name":"DefaultValue","purpose":"Default value for unspecified map locations","htmlid":"mw_4e9c0e07-1ab9-42dd-a9b6-9ac71d74903c","value":["0","numeric scalar"],"defaultvalue":"0"},{"name":"InterpolationMethod","purpose":"Interpolation method for distance matrix","htmlid":"mw_a0dfef8e-3af5-4e09-97e6-ab6211885354","value":["\"linear\"","\"none\""],"defaultvalue":"\"linear\""},{"name":"GridLocationInWorld","purpose":"Location of bottom-left corner of grid in world coordinates","htmlid":"mw_57487520-cfa4-4d91-8916-e7a69cb4fa7a","value":["[0 0]","two-element vector","[xWorld yWorld]"],"defaultvalue":"[0 0]"},{"name":"GridOriginInLocal","purpose":"Location of bottom-left corner of grid in local coordinates","htmlid":"mw_39e793f8-f3c6-46fe-af34-551f91b82449","value":["[0 0]","two-element vector","[xLocal yLocal]"],"defaultvalue":"[0 0]"},{"name":"GridSize","purpose":"Number of rows and columns in grid","htmlid":"mw_a7f76c77-2b4f-4259-a410-a0b289acede7","value":["two-element integer-valued vector"]},{"name":"LayerName","purpose":"Name of map layer","htmlid":"mw_c23769b2-0c18-429c-a746-f848fce10892","value":["'distanceLayer'","character vector","string scalar"],"defaultvalue":"'distanceLayer'"},{"name":"LocalOriginInWorld","purpose":"Location of local frame origin in world coordinates","htmlid":"mw_0b596aba-942d-406e-a738-76b68be5aa11","value":["[0 0]","two-element vector","[xWorld yWorld]"],"defaultvalue":"[0 0]"},{"name":"Resolution","readonly":true,"purpose":"Grid resolution","htmlid":"mw_e28df13e-addd-4dc1-a13c-34572ee55ed0","value":["1","positive numeric scalar"],"defaultvalue":"1"},{"name":"XLocalLimits","readonly":true,"purpose":"Minimum and maximum values of x-coordinates in local frame","htmlid":"mw_33e1f92e-8b0d-41cc-ad27-32f9bacf3bce","value":["two-element row vector"]},{"name":"YLocalLimits","readonly":true,"purpose":"Minimum and maximum values of y-coordinates in local frame","htmlid":"mw_f73c87a5-34ae-4a97-b173-4ac0dca2fefd","value":["two-element row vector"]},{"name":"XWorldLimits","readonly":true,"purpose":"Minimum and maximum values of x-coordinates of world frame","htmlid":"mw_a3565fdc-c259-4091-ae2a-6757bce08b43","value":["two-element row vector"]},{"name":"YWorldLimits","readonly":true,"purpose":"Minimum and maximum values of y-coordinates of world frame","htmlid":"mw_441450ab-30a1-4146-8997-8a5a40b959fa","value":["two-element row vector"]}]}],"objectfunctions":[{"title":"","functions":[{"name":"copy","url":"signeddistancemap.copy.html","description":"Create copy of 2-D signed distance map"},{"name":"closestBoundary","url":"signeddistancemap.closestboundary.html","description":"Get nearest boundary to location"},{"name":"distance","url":"signeddistancemap.distance.html","description":"Get distance at locations"},{"name":"getMapData","url":"maplayer.getmapdata.html","description":"Retrieve data from map layer"},{"name":"gradient","url":"signeddistancemap.gradient.html","description":"Get gradient at locations"},{"name":"grid2world","url":"occupancymap.grid2world.html","description":"Convert grid indices to world coordinates"},{"name":"grid2local","url":"occupancymap.grid2local.html","description":"Convert grid indices to local coordinates"},{"name":"local2grid","url":"occupancymap.local2grid.html","description":"Convert local coordinates to grid indices"},{"name":"local2world","url":"occupancymap.local2world.html","description":"Convert local coordinates to world coordinates"},{"name":"move","url":"occupancymap.move.html","description":"Move map in world frame"},{"name":"setMapData","url":"maplayer.setmapdata.html","description":"Assign data to map layer"},{"name":"show","url":"signeddistancemap.show.html","description":"Display signed distance map"},{"name":"syncWith","url":"occupancymap.syncwith.html","description":"Sync map with overlapping map"},{"name":"world2grid","url":"occupancymap.world2grid.html","description":"Convert world coordinates to grid indices"},{"name":"world2local","url":"occupancymap.world2local.html","description":"Convert world coordinates to local coordinates"}]}],"examples":[{"url":"signeddistancemap.html#mw_b8727091-7c95-45e8-a779-33307d6e6cc3","open_command":"openExample('nav\/CreateSignedDistanceMapExample')","title":"Get Distance to Nearest Obstacles in Signed Distance Map"}],"seealso":[{"url":"multilayermap.html","name":"multiLayerMap"},{"url":"occupancymap3d.html","name":"occupancyMap3D"},{"url":"occupancymap.html","name":"occupancyMap"},{"url":"binaryoccupancymap.html","name":"binaryOccupancyMap"},{"url":"signeddistancemap.distance.html","name":"distance"},{"url":"maplayer.getmapdata.html","name":"getMapData"},{"url":"maplayer.setmapdata.html","name":"setMapData"},{"url":"occupancymap.move.html","name":"move"},{"url":"occupancymap.syncwith.html","name":"syncWith"}]},{"href":"ref\/signeddistancemap.show.html","refentity":[{"type":"function","name":"show","fcntype":"instancemethod"},{"type":"method","name":"signedDistanceMap.show","fcntype":"instancemethod"}],"refpurpose":"Display signed distance map","introduced":"R2023a","description":"This MATLAB function displays the occupancy grid map in the current axes, with the axes labels representing the world coordinates.","syntaxgroup":[{"title":"","syntax":["show(map)","show(map,frame)","show(___,Name=Value)","mapimage = show(___)","[mapimage,colorbar] = show(___)"]}],"inputgroup":[{"title":"","inputs":[{"name":"map","purpose":"Signed distance map","htmlid":"mw_5f3740ba-eddb-400e-ac05-b57e7dc4e2b4","value":["signedDistanceMap object"]},{"name":"frame","purpose":"Coordinate frame","htmlid":"mw_15074d8f-40d8-4082-9882-09e0441e1aaf","value":["\"local\"","\"grid\""]}]},{"namevaluepairs":[{"title":"","inputs":[{"name":"Parent","purpose":"Axes to plot the map","htmlid":"mw_a6bb2c99-4986-4f18-a8e0-ba2913e02eea","value":["gca","Axes object","UIAxes object"],"defaultvalue":"gca"},{"name":"Colormap","purpose":"Colormap values","htmlid":"mw_94e7c3f5-8b21-4077-8126-0abdc858ec5f","value":["three-column matrix of RGB triplets"]},{"name":"BoundaryColor","purpose":"Occupied boundary color","htmlid":"mw_3eed2787-d867-42e4-8a99-02a68e94fd4a","value":["RGB triplet"]},{"name":"Colorbar","purpose":"Use colorbar","htmlid":"mw_da3efa8a-4bdf-4fc1-9331-83b11b68d973","value":["false or 0","true or 1"],"defaultvalue":"false or 0"},{"name":"VectorField","purpose":"Vector field display type","htmlid":"mw_3fe21eea-4120-4ef5-a318-60baffa2c846","value":["\"off\"","\"Gradient\"","\"ClosestBoundary\""],"defaultvalue":"\"off\""},{"name":"FastUpdate","purpose":"Fast updates to existing plot","htmlid":"mw_9c2f7233-cbe5-4048-af53-94304c0d64c1","value":["false or 0","true or 1"],"defaultvalue":"false or 0"}]}]}],"outputs":[{"name":"mapimage","purpose":"Map image handle","htmlid":"mw_466af5b8-1312-473b-b173-3bb4ae71827f","value":["image object"]},{"name":"colorbar","purpose":"Colorbar handle","htmlid":"mw_33557ed4-3689-4cb0-9a52-39174a6f8aee","value":["colorbar object"]}],"examples":[{"url":"signeddistancemap.show.html#mw_9c98890e-63a7-468c-b158-8a93b4f9950b","open_command":"openExample('nav\/CreateSignedDistanceMapExample')","title":"Get Distance to Nearest Obstacles in Signed Distance Map"}],"seealso":[{"url":"signeddistancemap.html","name":"signedDistanceMap"}]},{"href":"ref\/signeddistancemap3d.activevoxels.html","refentity":[{"type":"function","name":"activeVoxels","fcntype":"instancemethod"},{"type":"method","name":"signedDistanceMap3D.activeVoxels","fcntype":"instancemethod"}],"refpurpose":"Information about active voxels","introduced":"R2024b","description":"This MATLAB function returns the center locations, sizes, and distance values of all active voxels in the map.","syntaxgroup":[{"title":"","syntax":["voxelStruct = activeVoxels(sdm3D)"]}],"inputgroup":[{"title":"","inputs":[{"name":"sdm3D","purpose":"3-D signed distance map","htmlid":"mw_sdm3d6e15fb02-8697-48f4-af69-14bed7830097_sep_mw_0d463721-c92e-41cf-9685-fc1a8c952fe9","value":["signedDistanceMap3D object"]}]}],"outputs":[{"name":"voxelStruct","purpose":"Active voxel information","htmlid":"mw_353bff55-150e-479d-8b26-e6b555d654a3","value":["structure"]}],"seealso":[{"url":"signeddistancemap3d.html","name":"signedDistanceMap3D"},{"url":"signeddistancemap3d.distance.html","name":"distance"},{"url":"signeddistancemap3d.insertpointcloud.html","name":"insertPointCloud"},{"url":"signeddistancemap3d.show.html","name":"show"}]},{"href":"ref\/signeddistancemap3d.distance.html","refentity":[{"type":"function","name":"distance","fcntype":"instancemethod"},{"type":"method","name":"signedDistanceMap3D.distance","fcntype":"instancemethod"}],"refpurpose":"Find distance to zero-level set for query points","introduced":"R2024b","description":"This MATLAB function returns the distance computed from the discrete distances in the signed distance field for each of the specified query points.","syntaxgroup":[{"title":"","syntax":["dist = distance(sdm3D,points)","dist = distance(sdm3D,points,InterpolationMethod=interp)"]}],"inputgroup":[{"title":"","inputs":[{"name":"sdm3D","purpose":"3-D signed distance map","htmlid":"mw_sdm3d5f65c71b-410c-40f3-9964-9ed1e126baec_sep_mw_0d463721-c92e-41cf-9685-fc1a8c952fe9","value":["signedDistanceMap3D object"]},{"name":"points","purpose":"Query points","htmlid":"mw_sdm3d5f65c71b-410c-40f3-9964-9ed1e126baec_sep_mw_596c9c95-0d78-4a21-9be7-14221f39033f","value":["N-by-3 matrix"]},{"name":"interp","purpose":"Interpolation method","htmlid":"mw_ee08c04f-c95d-4410-9bfd-60b076aa7b87","value":["\"nearest\"","\"linear\"","\"quadratic\""],"defaultvalue":"\"nearest\""}]}],"outputs":[{"name":"dist","purpose":"Distance value of voxel at each query point","htmlid":"mw_sdm3d5f65c71b-410c-40f3-9964-9ed1e126baec_sep_mw_22fed117-fc39-4a3a-8082-aa0bf8a86b53","value":["N-element vector"]}],"seealso":[{"url":"signeddistancemap3d.html","name":"signedDistanceMap3D"},{"url":"signeddistancemap3d.gradient.html","name":"gradient"}]},{"href":"ref\/signeddistancemap3d.gradient.html","refentity":[{"type":"function","name":"gradient","fcntype":"instancemethod"},{"type":"method","name":"signedDistanceMap3D.gradient","fcntype":"instancemethod"}],"refpurpose":"Find gradient for query points in 3-D signed distance map","introduced":"R2024b","description":"This MATLAB function finds the gradient from voxels in the vicinity of the specified query points in the 3-D signed distance field.","syntaxgroup":[{"title":"","syntax":["grad = gradient(sdm3D,points)","grad = gradient(sdm3D,points,InterpolationMethod=interp)"]}],"inputgroup":[{"title":"","inputs":[{"name":"sdm3D","purpose":"3-D signed distance map","htmlid":"mw_66406417-2d31-4eac-b59a-3354823d7777","value":["signedDistanceMap3D object"]},{"name":"points","purpose":"Query points","htmlid":"mw_sdm3d36152d4f-543b-4ad3-94e3-658db4028f78_sep_mw_596c9c95-0d78-4a21-9be7-14221f39033f","value":["N-by-3 matrix"]},{"name":"interp","purpose":"Interpolation method","htmlid":"mw_sdm3d36152d4f-543b-4ad3-94e3-658db4028f78_sep_mw_6848d353-d2b6-4297-8cb0-2d9ed32ebacb","value":["\"linear\"","\"quadratic\""],"defaultvalue":"\"linear\""}]}],"outputs":[{"name":"grad","purpose":"Gradient value of voxel at each query point","htmlid":"mw_sdm3d36152d4f-543b-4ad3-94e3-658db4028f78_sep_mw_ebceccc1-c8ee-4056-8766-cf17b86eb8ad","value":["N-element vector"]}],"seealso":[{"url":"signeddistancemap3d.html","name":"signedDistanceMap3D"},{"url":"signeddistancemap3d.distance.html","name":"distance"}]},{"href":"ref\/signeddistancemap3d.insertpointcloud.html","refentity":[{"type":"function","name":"insertPointCloud","fcntype":"instancemethod"},{"type":"method","name":"signedDistanceMap3D.insertPointCloud","fcntype":"instancemethod"}],"refpurpose":"Insert point cloud data into 3-D signed distance map","introduced":"R2024b","description":"This MATLAB function inserts a point cloud into the 3-D signed distance map by casting rays from the specified origin to each of the specified points, and updates the distance values of all voxels the digital differential analyzer (DDA) algorithm determines each ray hits..","syntaxgroup":[{"title":"","syntax":["insertPointCloud(sdm3D,origin,points)"]}],"inputgroup":[{"title":"","inputs":[{"name":"sdm3D","purpose":"3-D signed distance map","htmlid":"mw_sdm3de8cf1da9-4997-41b8-b983-fa509b844f3c_sep_mw_0d463721-c92e-41cf-9685-fc1a8c952fe9","value":["signedDistanceMap3D object"]},{"name":"origin","purpose":"Origin of point cloud data","htmlid":"mw_c9b47619-99b4-4554-9ea7-ecb211a553b6","value":["three-element vector"]},{"name":"points","purpose":"Point cloud data","htmlid":"mw_9fc6e869-270f-4386-87a3-5a1ce444e95d","value":["N-by-3 matrix"]}]}],"examples":[{"url":"signeddistancemap3d.insertpointcloud.html#mw_2cb4d15d-36b1-4ef9-9955-039f859728db","open_command":"openExample('nav\/BuildSignedDistanceMapFromPointCloudDataExample')","title":"Build Signed Distance Map from Point Cloud Data"}],"seealso":[{"url":"signeddistancemap3d.html","name":"signedDistanceMap3D"},{"url":"signeddistancemap3d.distance.html","name":"distance"},{"url":"signeddistancemap3d.gradient.html","name":"gradient"},{"url":"signeddistancemap3d.mesh.html","name":"mesh"}]},{"href":"ref\/signeddistancemap3d.html","refentity":[{"type":"object","name":"signedDistanceMap3D"},{"type":"function","name":"signedDistanceMap3D","fcntype":"constructor"}],"refpurpose":"Store signed distance over variably sized 3-D region","introduced":"R2024b","description":"The signedDistanceMap3D object creates and stores a truncated 3-D signed distance field over a voxelized 3-D space.","syntaxgroup":[{"title":"","syntax":["SDF = signedDistanceMap3D","SDF = signedDistanceMap3D(Name=Value)"]}],"classpropertygroup":[{"classproperty":[{"name":"Resolution","readonly":true,"purpose":"Grid resolution","htmlid":"mw_785289dc-f4ab-4e8e-a883-78402ac6694f","value":["1","positive numeric scalar"],"defaultvalue":"1"},{"name":"FullTracing","readonly":true,"purpose":"Raycasting type for voxel distance value updates","htmlid":"mw_b303be83-2cde-4c54-a22f-054dc2c7586d","value":["false or 0","true or 1"],"defaultvalue":"false or 0"},{"name":"TruncationDistance","readonly":true,"purpose":"Maximum distance from occupied boundary","htmlid":"mw_763eddbc-14b4-442b-a4f9-2533e600ae89","value":["3\/Resolution","numeric scalar greater than or equal to 3\/Resolution"],"defaultvalue":"3\/Resolution"},{"name":"NumActiveVoxels","readonly":true,"purpose":"Number of active voxels in map","htmlid":"mw_b95828c9-4299-4dc0-8114-32604f949e4a","value":["0","positive integer"]},{"name":"MapLimits","readonly":true,"purpose":"Limits of map that contains all active voxels","htmlid":"mw_85a61682-3d6a-4d89-a1d8-7ef289795b7b","value":["zeros(2,3)","2-by-3 matrix"],"defaultvalue":"zeros(2,3)"}]}],"objectfunctions":[{"title":"","functions":[{"name":"distance","url":"signeddistancemap3d.distance.html","description":"Find distance to zero-level set for query points"},{"name":"activeVoxels","url":"signeddistancemap3d.activevoxels.html","description":"Information about active voxels"},{"name":"gradient","url":"signeddistancemap3d.gradient.html","description":"Find gradient for query points in 3-D signed distance map"},{"name":"insertPointCloud","url":"signeddistancemap3d.insertpointcloud.html","description":"Insert point cloud data into 3-D signed distance map"},{"name":"mesh","url":"signeddistancemap3d.mesh.html","description":"Generate isosurface mesh from active voxels"},{"name":"show","url":"signeddistancemap3d.show.html","description":"Display 3-D signed distance map"}]}],"examples":[{"url":"signeddistancemap3d.html#mw_578c9032-77b5-4e6f-8812-a862719fa888","open_command":"openExample('nav\/BuildSignedDistanceMapFromPointCloudDataExample')","title":"Build Signed Distance Map from Point Cloud Data"}],"seealso":[{"url":"signeddistancemap.html","name":"signedDistanceMap"},{"url":"meshtsdf.html","name":"meshtsdf"}]},{"href":"ref\/signeddistancemap3d.mesh.html","refentity":[{"type":"function","name":"mesh","fcntype":"instancemethod"},{"type":"method","name":"signedDistanceMap3D.mesh","fcntype":"instancemethod"}],"refpurpose":"Generate isosurface mesh from active voxels","introduced":"R2024b","description":"This MATLAB function uses the Marching Cubes algorithm to generate an isosurface mesh from active voxels that define the zero-level set.","syntaxgroup":[{"title":"","syntax":["[vertices,faces] = mesh(sdm3D)"]}],"inputgroup":[{"title":"","inputs":[{"name":"sdm3D","purpose":"3-D signed distance map","htmlid":"mw_sdm3dc4c2df18-f94e-4d29-a9de-002da9ded587_sep_mw_0d463721-c92e-41cf-9685-fc1a8c952fe9","value":["signedDistanceMap3D object"]}]}],"outputs":[{"name":"vertices","purpose":"Vertices of generated isosurface mesh","htmlid":"mw_38df72b6-5204-4120-873e-62ca0bac9881","value":["V-by-3 matrix"]},{"name":"faces","purpose":"Faces of generated isosurface mesh","htmlid":"mw_988c9ed4-0992-4c82-aecd-ed9a0a4e771c","value":["F-by-3 matrix"]}],"examples":[{"url":"signeddistancemap3d.mesh.html#mw_c8489391-d441-4e98-bb38-e482ca58308a","open_command":"openExample('nav\/BuildSignedDistanceMapFromPointCloudDataExample')","title":"Build Signed Distance Map from Point Cloud Data"}],"seealso":[{"url":"signeddistancemap3d.html","name":"signedDistanceMap3D"},{"url":"signeddistancemap3d.insertpointcloud.html","name":"insertPointCloud"}]},{"href":"ref\/signeddistancemap3d.show.html","refentity":[{"type":"function","name":"show","fcntype":"instancemethod"},{"type":"method","name":"signedDistanceMap3D.show","fcntype":"instancemethod"}],"refpurpose":"Display 3-D signed distance map","introduced":"R2024b","description":"This MATLAB function displays all active voxels of the 3-D signed distance map as a 3-D scatter plot.","syntaxgroup":[{"title":"","syntax":["show(sdm3D)","show(sdm3D,Name=Value)","[h,hBar] = show(___)"]}],"inputgroup":[{"title":"","inputs":[{"name":"sdm3D","purpose":"3-D signed distance map","htmlid":"mw_sdm3d9d76c574-9e20-46ea-af87-a11b3499064a_sep_mw_0d463721-c92e-41cf-9685-fc1a8c952fe9","value":["signedDistanceMap3D object"]}]},{"namevaluepairs":[{"title":"","inputs":[{"name":"Parent","purpose":"Parent axes","htmlid":"mw_d5b38bf4-1b4a-4aa0-8db2-9ea813766da2","value":["gca","Axes object"],"defaultvalue":"gca"},{"name":"IsoRange","purpose":"Range of distance values to plot","htmlid":"mw_6109560e-9134-4210-bc75-2dfc73480649","value":["[-inf inf]","two-element vector"],"defaultvalue":"[-inf inf]"},{"name":"Colorbar","purpose":"Colorbar for voxel distance values","htmlid":"mw_be3445e7-7d15-427a-bd29-c0cbfdd02988","value":["\"on\"","\"off\""],"defaultvalue":"\"on\""},{"name":"FastUpdate","purpose":"Fast updates to existing plot","htmlid":"mw_d2a13c3e-91dd-4d01-9ace-2159d79a6ffe","value":["0 (false)","1 (true)"],"defaultvalue":"0 (false)"}]}]}],"outputs":[{"name":"h","purpose":"3-D scatter plot of active voxels","htmlid":"mw_c94be2ed-b29b-414c-8483-47216b085c6d","value":["Scatter object handle"]},{"name":"hBar","purpose":"Distance value color bar","htmlid":"mw_6ecb5abd-1e64-4d9a-9077-6c37349cdf28","value":["ColorBar object handle"]}],"seealso":[{"url":"signeddistancemap3d.html","name":"signedDistanceMap3D"},{"url":"signeddistancemap3d.distance.html","name":"distance"},{"url":"signeddistancemap3d.gradient.html","name":"gradient"},{"url":"signeddistancemap3d.activevoxels.html","name":"activeVoxels"},{"url":"signeddistancemap3d.insertpointcloud.html","name":"insertPointCloud"}]},{"href":"ref\/skyplot.html","refentity":[{"type":"function","name":"skyplot","fcntype":"simple"}],"refpurpose":"Plot satellite azimuth and elevation data","introduced":"R2021a","description":"This MATLAB function creates a sky plot using the azimuth and elevation data specified as matrices in degrees.","syntaxgroup":[{"title":"","syntax":["skyplot(azdata,eldata)","skyplot(azdata,eldata,labeldata)","skyplot(status)","skyplot(___,Name,Value)"]},{"title":"","syntax":["skyplot(parent,___)","h = skyplot(___)"]}],"inputgroup":[{"title":"","inputs":[{"name":"azdata","purpose":"Azimuth angles for visible satellite positions","htmlid":"mw_a98159a3-f638-4343-85da-889c9ddf8a05","value":["n-element vector of angles","t-by-n matrix of angles"]},{"name":"eldata","purpose":"Elevation angles for visible satellite positions","htmlid":"mw_6d349592-f2d1-4a68-a69f-3d7a7bd4ca6f","value":["n-element vector of angles","t-by-n matrix of angles"]},{"name":"labeldata","purpose":"Labels for visible satellite positions","htmlid":"mw_5cd1600e-0b73-4d57-8db4-39ff699b40a5","value":["n-element string array"]},{"name":"status","purpose":"Satellite status","htmlid":"mw_7002549b-ccdc-4ba0-92ff-e0beff88f44d","value":["structure","structure array"]},{"name":"parent","purpose":"Parent container","htmlid":"mw_01fc2d28-0a5f-40e7-a6f3-59d6b6f0104e","value":["Figure object","Panel object","Tab object","TiledChartLayout object","GridLayout object"]}]}],"outputs":[{"name":"h","purpose":"Sky plot chart","htmlid":"mw_79baa808-a75f-4e2c-81e3-3ecbc64abf08","value":["SkyPlotChart object"]}],"examples":[{"url":"skyplot.html#mw_c5fa4e0b-5af5-447d-aecc-7c33dcb113e2","open_command":"openExample('shared_nav_satcom\/ViewSatellitePositionsFromGNSSSensorExample')","title":"View Satellite Positions from GNSS Sensor"},{"url":"skyplot.html#mw_6861c468-e772-44a6-8a91-ca9a8b185859","open_command":"openExample('shared_nav_satcom\/PlotSeriesOfSatellitePositionsOverTimeExample')","title":"Plot Series of Satellite Positions over Time"},{"url":"skyplot.html#mw_2a795a75-26db-41ee-90b7-4e7c9ae040f8","open_command":"openExample('shared_nav_satcom\/ViewSatellitePositionsForDifferentGroupsExample')","title":"View Satellite Positions for Different Groups"},{"url":"skyplot.html#mw_cb7bfda4-2c26-4c99-af9e-b6a582aa2a8b","open_command":"openExample('shared_nav_satcom\/VisualizeSatelliteTrajectoriesInSkyplotExample')","title":"Visualize Satellite Trajectories in Skyplot"}],"seealso":[{"url":"..\/..\/matlab\/ref\/polarscatter.html","name":"polarscatter"},{"url":"nav.graphics.chart.skyplotchart-properties.html","name":"SkyPlotChart Properties"},{"url":"gnsssensor-system-object.html","name":"gnssSensor"},{"url":"nmeaparser-system-object.html","name":"nmeaParser"}]},{"href":"ref\/slammapbuilder-app.html","refentity":[{"type":"app","name":"SLAM Map Builder"},{"type":"function","name":"slamMapBuilder","fcntype":"applauncher"}],"refpurpose":"Build 2-D grid maps using lidar-based SLAM","introduced":"R2019b","description":"The SLAM Map Builder app loads recorded lidar scans and odometry sensor data to build a 2-D occupancy grid using simultaneous localization and mapping (SLAM) algorithms.","appthumbnail":{"fileref":"ref\/slammapbuilder_app_full.png","alt":"SLAM Map Builder app"},"syntaxgroup":[{"title":"","syntax":["slamMapBuilder(bag)","slamMapBuilder(sessionFile)","slamMapBuilder(scans)","slamMapBuilder(scans,poses)"]}],"parameters":[{"name":"Scans","purpose":"Lidar scans to import from workspace","htmlid":"mw_673590c3-edc7-4cdf-8115-a79e555bbf78","value":["N-element cell array of lidarScan objects"]},{"name":"Poses (Odometry)","purpose":"Poses to import from workspace","htmlid":"mw_cd5f755e-ca88-4df2-87a5-0cc8d4e603c6","value":["N-by-3 matrix","N-element cell array of three-element row vectors"]}],"examples":[{"url":"slammapbuilder-app.html#mw_571dbfca-d91c-42bd-afd2-ff546418a7ea","open_command":"openExample('nav\/BuildAndTuneAMapUsingLidarScansWithSLAMExample')","title":"Build and Tune Map Using Lidar Scans with SLAM"}],"seealso":[{"url":"buildmap.html","name":"buildMap"},{"url":"matchscans.html","name":"matchScans"},{"url":"matchscansgrid.html","name":"matchScansGrid"},{"url":"..\/..\/ros\/ref\/rosbag.html","name":"rosbag"},{"url":"optimizeposegraph.html","name":"optimizePoseGraph"},{"url":"lidarslam.html","name":"lidarSLAM"},{"url":"lidarscan.html","name":"lidarScan"},{"url":"occupancymap.html","name":"occupancyMap"},{"url":"posegraph.html","name":"poseGraph"},{"url":"factorgraph.html","name":"factorGraph"}]},{"href":"ref\/so2.html","refentity":[{"type":"object","name":"so2"},{"type":"function","name":"so2","fcntype":"constructor"}],"refpurpose":"SO(2) rotation","introduced":"R2022b","description":"The so2 object represents an SO(2) rotation in 2-D.","syntaxgroup":[{"title":"","syntax":["rotation = so2","rotation = so2(rotation)","rotation = so2(transformation)","rotation = so2(angle,\"theta\")"]}],"inputgroup":[{"title":"","inputs":[{"name":"rotation","purpose":"Orthonormal rotation","htmlid":"mw_dc35bab6-5257-4af8-b8ce-922406f4ced4","value":["2-by-2 matrix","2-by-2-by-N matrix","so2 object","N-element array of so2 objects"]},{"name":"transformation","purpose":"Homogeneous transformation","htmlid":"mw_e504dc24-c55b-407f-b30d-abc927ba2674_sep_mw_e15d5e1e-9bb4-4b70-8313-532f9b184676","value":["3-by-3 matrix","3-by-3-by-N array","se2 object","N-element array of se2 objects"]},{"name":"angle","purpose":"z-axis rotation angle","htmlid":"mw_e504dc24-c55b-407f-b30d-abc927ba2674_sep_mw_8c49e4a3-ee8d-47c8-98d3-2f36d671277f","value":["N-by-M matrix"]}]}],"objectfunctions":[{"title":"Mathematical Operations","functions":[{"name":"mtimes, *","url":"se2.mtimes.html","description":"Transformation or rotation multiplication"},{"name":"mrdivide, \/","url":"se2.mrdivide.html","description":"Transformation or rotation right division"},{"name":"rdivide, .\/","url":"se2.rdivide.html","description":"Element-wise transformation or rotation right division"},{"name":"times, .*","url":"se2.times.html","description":"Element-wise transformation or rotation multiplication"}]},{"title":"Utilities","functions":[{"name":"interp","url":"se2.interp.html","description":"Interpolate between transformations"},{"name":"dist","url":"se2.dist.html","description":"Calculate distance between transformations"},{"name":"normalize","url":"se2.normalize.html","description":"Normalize transformation or rotation matrix"},{"name":"transform","url":"se2.transform.html","description":"Apply rigid body transformation to points"}]},{"title":"Numerical Conversions","functions":[{"name":"rotm","url":"se2.rotm.html","description":"Extract rotation matrix"},{"name":"trvec","url":"se2.trvec.html","description":"Extract translation vector"},{"name":"tform","url":"se2.tform.html","description":"Extract homogeneous transformation"},{"name":"theta","url":"se2.theta.html","description":"Convert transformation or rotation to 2-D rotation angle"},{"name":"xytheta","url":"se2.xytheta.html","description":"Convert transformation or rotation to compact 2-D pose representation"}]},{"title":"Object Conversions","functions":[{"name":"so3","url":"so3.html","description":"SO(3) rotation"}]}],"examples":[{"url":"so2.html#mw_444dfbbc-a774-45c6-88ec-a1fa4b3d1b12","open_command":"openExample('shared_spatial\/CreateSO2RotationUsingAngleExample')","title":"Create SO(2) Rotation Using Angle"}],"seealso":[{"url":"axang2rotm.html","name":"axang2rotm"},{"url":"eul2rotm.html","name":"eul2rotm"},{"url":"quat2rotm.html","name":"quat2rotm"},{"url":"tform2rotm.html","name":"tform2rotm"},{"url":"plottransforms.html","name":"plotTransforms"},{"url":"se2.html","name":"se2"},{"url":"se3.html","name":"se3"},{"url":"so3.html","name":"so3"}]},{"href":"ref\/so3.html","refentity":[{"type":"object","name":"so3"},{"type":"function","name":"so3","fcntype":"constructor"}],"refpurpose":"SO(3) rotation","introduced":"R2022b","description":"The so3 object represents an SO(3) rotation in 3-D in a right-handed Cartesian coordinate system.","syntaxgroup":[{"title":"3-D Rotation Representations","syntax":["rotation = so3","rotation = so3(rotation)","rotation = so3(quaternion)","rotation = so3(transformation)"]},{"title":"Other Numeric 3-D Rotation Representations","syntax":["rotation = so3(euler,\"eul\")","rotation = so3(euler,\"eul\",sequence)","rotation = so3(quat,\"quat\")","rotation = so3(axang,\"axang\")","rotation = so3(angle,axis)"]}],"inputgroup":[{"title":"","inputs":[{"name":"rotation","purpose":"Orthonormal rotation","htmlid":"mw_9dbfb95e-36e7-46e2-9656-aacf861ac6a8","value":["3-by-3 matrix","3-by-3-by-N matrix","so3 object","N-element array of so3 objects"]},{"name":"transformation","purpose":"Homogeneous transformation","htmlid":"mw_25c51377-eb38-4590-9119-f62b83fbd161_sep_mw_9470864c-9c03-43d3-bc26-88abd32d4037","value":["4-by-4 matrix","4-by-4-by-N array","se3 object","N-element array of se3 objects"]},{"name":"quaternion","purpose":"Quaternion","htmlid":"mw_25c51377-eb38-4590-9119-f62b83fbd161_sep_mw_fd9e1a8e-a65a-4dd0-87dc-1941fc8ef247","value":["quaternion object","N-element array of quaternion objects"]},{"name":"euler","purpose":"Euler angles","htmlid":"mw_25c51377-eb38-4590-9119-f62b83fbd161_sep_mw_209eee3f-e7ad-4554-9a8f-fe8cf4ca668f","value":["N-by-3 matrix"]},{"name":"sequence","purpose":"Axis-rotation sequence","htmlid":"mw_25c51377-eb38-4590-9119-f62b83fbd161_sep_mw_299cebdb-d5ac-46af-90aa-c18a1ffbfe5b","value":["\"ZYX\"","\"ZYZ\"","\"ZXY\"","\"ZXZ\"","\"YXY\"","\"YZX\"","\"YXZ\"","\"YZY\"","\"XYX\"","\"XYZ\"","\"XZX\"","\"XZY\""],"defaultvalue":"\"ZYX\""},{"name":"quat","purpose":"Numeric quaternion","htmlid":"mw_25c51377-eb38-4590-9119-f62b83fbd161_sep_mw_573c9d0b-a221-4b7c-ad8c-bdcbe44d4a56","value":["N-by-4 matrix"]},{"name":"axang","purpose":"Axis-angle rotation","htmlid":"mw_25c51377-eb38-4590-9119-f62b83fbd161_sep_mw_595b6d84-7828-4d49-808c-189581a38513","value":["N-by-4 matrix"]},{"name":"angle","purpose":"Single-axis-angle rotation","htmlid":"mw_25c51377-eb38-4590-9119-f62b83fbd161_sep_mw_09a2c056-9b03-46a2-9b39-876013b2d727","value":["N-by-M matrix"]},{"name":"axis","purpose":"Axis to rotate","htmlid":"mw_25c51377-eb38-4590-9119-f62b83fbd161_sep_mw_be12c14e-010e-4c86-8034-78fdeb57d16e","value":["\"rotx\"","\"roty\"","\"rotz\""]}]}],"objectfunctions":[{"title":"Mathematical Operations","functions":[{"name":"mtimes, *","url":"se2.mtimes.html","description":"Transformation or rotation multiplication"},{"name":"mrdivide, \/","url":"se2.mrdivide.html","description":"Transformation or rotation right division"},{"name":"rdivide, .\/","url":"se2.rdivide.html","description":"Element-wise transformation or rotation right division"},{"name":"times, .*","url":"se2.times.html","description":"Element-wise transformation or rotation multiplication"}]},{"title":"Utilities","functions":[{"name":"interp","url":"se2.interp.html","description":"Interpolate between transformations"},{"name":"dist","url":"se2.dist.html","description":"Calculate distance between transformations"},{"name":"normalize","url":"se2.normalize.html","description":"Normalize transformation or rotation matrix"},{"name":"transform","url":"se2.transform.html","description":"Apply rigid body transformation to points"}]},{"title":"Numerical Conversions","functions":[{"name":"axang","url":"se3.axang.html","description":"Convert transformation or rotation into axis-angle rotations"},{"name":"eul","url":"se3.eul.html","description":"Convert transformation or rotation into Euler angles"},{"name":"rotm","url":"se2.rotm.html","description":"Extract rotation matrix"},{"name":"quat","url":"se3.quat.html","description":"Convert transformation or rotation to numeric quaternion"},{"name":"trvec","url":"se2.trvec.html","description":"Extract translation vector"},{"name":"tform","url":"se2.tform.html","description":"Extract homogeneous transformation"},{"name":"xyzquat","url":"se3.xyzquat.html","description":"Convert transformation or rotation to compact 3-D pose representation"}]},{"title":"Object Conversions","functions":[{"name":"se3","url":"se3.html","description":"SE(3) homogeneous transformation"},{"name":"quaternion","url":"quaternion.html","description":"Create quaternion array"}]}],"examples":[{"url":"so3.html#mw_4aab3a33-938c-4fff-bcb9-3700cff8f686","open_command":"openExample('shared_spatial\/ConvertSO3RotationToEulerAnglesExample')","title":"Convert SO(3) Rotation to Euler Angles"}],"seealso":[{"url":"axang2rotm.html","name":"axang2rotm"},{"url":"eul2rotm.html","name":"eul2rotm"},{"url":"quat2rotm.html","name":"quat2rotm"},{"url":"tform2rotm.html","name":"tform2rotm"},{"url":"plottransforms.html","name":"plotTransforms"},{"url":"se2.html","name":"se2"},{"url":"se3.html","name":"se3"},{"url":"so2.html","name":"so2"},{"url":"quaternion.html","name":"quaternion"}]},{"href":"ref\/stateestimatorpf.copy.html","refentity":[{"type":"function","name":"copy","fcntype":"instancemethod"},{"type":"method","name":"stateEstimatorPF.copy","fcntype":"instancemethod"}],"refpurpose":"Create copy of particle filter","introduced":"R2016a","description":"This MATLAB function copies each element in the array of handles, a, to the new array of handles, b.","syntaxgroup":[{"title":"","syntax":["b = copy(a)"]}],"inputgroup":[{"title":"","inputs":[{"name":"a","purpose":"Object array","htmlid":"bu357vq-1-a","value":["handle"]}]}],"outputs":[{"name":"b","purpose":"Object array containing copies of the objects in a","htmlid":"bu357vq-1-b","value":["handle"]}],"examples":[{"url":"stateestimatorpf.copy.html#mw_c9f66504-3a53-4701-9cd5-8803f6aa87c9","open_command":"openExample('nav_robotics\/UpdatePolicySettingsOfParticleFilterExample')","title":"Update Policy Settings of Particle Filter"}],"seealso":[{"url":"stateestimatorpf.html","name":"stateEstimatorPF"},{"url":"resamplingpolicypf.html","name":"resamplingPolicyPF"},{"url":"stateestimatorpf.initialize.html","name":"initialize"},{"url":"stateestimatorpf.getstateestimate.html","name":"getStateEstimate"},{"url":"stateestimatorpf.predict.html","name":"predict"},{"url":"stateestimatorpf.correct.html","name":"correct"}]},{"href":"ref\/stateestimatorpf.correct.html","refentity":[{"type":"function","name":"correct","fcntype":"instancemethod"},{"type":"method","name":"stateEstimatorPF.correct","fcntype":"instancemethod"}],"refpurpose":"Adjust state estimate based on sensor measurement","introduced":"R2016a","description":"This MATLAB function calculates the corrected system state and its associated uncertainty covariance based on a sensor measurement at the current time step.","syntaxgroup":[{"title":"","syntax":["[stateCorr,stateCov] = correct(pf,measurement)","[stateCorr,stateCov] = correct(pf,measurement,varargin)"]}],"inputgroup":[{"title":"","inputs":[{"name":"pf","purpose":"stateEstimatorPF object","htmlid":"bu357tj-1-pf","value":["handle"]},{"name":"measurement","purpose":"Sensor measurements","htmlid":"bu357tj-1-measurement","value":["array"]},{"name":"varargin","purpose":"Variable-length input argument list","htmlid":"bu357tj-1-varargin","value":["comma-separated list"]}]}],"outputs":[{"name":"stateCorr","purpose":"Corrected system state","htmlid":"bu357tj-1-stateCorr","value":["vector with length NumStateVariables"]},{"name":"stateCov","purpose":"Corrected system covariance","htmlid":"bu357tj-1-stateCov","value":["N-by-N matrix","[]"]}],"examples":[{"url":"stateestimatorpf.correct.html#mw_e5986fd0-1dba-4e21-a140-322bf8b6862a","open_command":"openExample('nav_robotics\/ParticleFilterPredictionAndCorrectionExample')","title":"Particle Filter Prediction and Correction"}],"seealso":[{"url":"stateestimatorpf.html","name":"stateEstimatorPF"},{"url":"resamplingpolicypf.html","name":"resamplingPolicyPF"},{"url":"stateestimatorpf.initialize.html","name":"initialize"},{"url":"stateestimatorpf.getstateestimate.html","name":"getStateEstimate"},{"url":"stateestimatorpf.predict.html","name":"predict"}]},{"href":"ref\/stateestimatorpf.getstateestimate.html","refentity":[{"type":"function","name":"getStateEstimate","fcntype":"instancemethod"},{"type":"method","name":"stateEstimatorPF.getStateEstimate","fcntype":"instancemethod"}],"refpurpose":"Extract best state estimate and covariance from particles","introduced":"R2016a","description":"This MATLAB function returns the best state estimate based on the current set of particles.","syntaxgroup":[{"title":"","syntax":["stateEst = getStateEstimate(pf)","[stateEst,stateCov] = getStateEstimate(pf)"]}],"inputgroup":[{"title":"","inputs":[{"name":"pf","purpose":"stateEstimatorPF object","htmlid":"bu357u2-1-pf","value":["handle"]}]}],"outputs":[{"name":"stateEst","purpose":"Best state estimate","htmlid":"bu357u2-1-stateEst","value":["vector"]},{"name":"stateCov","purpose":"Corrected system covariance","htmlid":"bu357u2-1-stateCov","value":["N-by-N matrix","[]"]}],"examples":[{"url":"stateestimatorpf.getstateestimate.html#mw_a035c485-309e-465d-be19-ee25121fcdc1","open_command":"openExample('nav_robotics\/ParticleFilterPredictionAndCorrectionExample')","title":"Particle Filter Prediction and Correction"}],"seealso":[{"url":"stateestimatorpf.html","name":"stateEstimatorPF"},{"url":"resamplingpolicypf.html","name":"resamplingPolicyPF"},{"url":"stateestimatorpf.initialize.html","name":"initialize"},{"url":"stateestimatorpf.predict.html","name":"predict"},{"url":"stateestimatorpf.correct.html","name":"correct"}]},{"href":"ref\/stateestimatorpf.initialize.html","refentity":[{"type":"function","name":"initialize","fcntype":"instancemethod"},{"type":"method","name":"stateEstimatorPF.initialize","fcntype":"instancemethod"}],"refpurpose":"Initialize the state of the particle filter","introduced":"R2016a","description":"This MATLAB function initializes the particle filter object, pf, with a specified number of particles, numParticles.","syntaxgroup":[{"title":"","syntax":["initialize(pf,numParticles,mean,covariance)","initialize(pf,numParticles,stateBounds)","initialize(___,Name,Value)"]}],"inputgroup":[{"title":"","inputs":[{"name":"pf","purpose":"stateEstimatorPF object","htmlid":"bu357pu-1-pf","value":["handle"]},{"name":"numParticles","purpose":"Number of particles used in the filter","htmlid":"bu357pu-1-numParticles","value":["scalar"]}]},{"title":"","inputs":[{"name":"mean","purpose":"Mean of particle distribution","htmlid":"bu357pu-1-mean","value":["vector"]},{"name":"covariance","purpose":"Covariance of particle distribution","htmlid":"bu357pu-1-covariance","value":["N-by-N matrix"]},{"name":"stateBounds","purpose":"Bounds of state variables","htmlid":"bu357pu-1-stateBounds","value":["n-by-2 matrix"]}]},{"namevaluepairs":[{"title":"","inputs":[{"name":"CircularVariables","purpose":"Circular variables","htmlid":"bu357pu-1-CircularVariables","value":["logical vector"]}]}]}],"examples":[{"url":"stateestimatorpf.initialize.html#mw_361e8e31-06c4-499d-be26-764af9018e4d","open_command":"openExample('nav_robotics\/ParticleFilterPredictionAndCorrectionExample')","title":"Particle Filter Prediction and Correction"}],"seealso":[{"url":"stateestimatorpf.html","name":"stateEstimatorPF"},{"url":"resamplingpolicypf.html","name":"resamplingPolicyPF"},{"url":"stateestimatorpf.getstateestimate.html","name":"getStateEstimate"},{"url":"stateestimatorpf.predict.html","name":"predict"},{"url":"stateestimatorpf.correct.html","name":"correct"}]},{"href":"ref\/stateestimatorpf.html","refentity":[{"type":"object","name":"stateEstimatorPF"},{"type":"function","name":"stateEstimatorPF","fcntype":"constructor"}],"refpurpose":"Create particle filter state estimator","introduced":"R2016a","description":"The stateEstimatorPF object is a recursive, Bayesian state estimator that uses discrete particles to approximate the posterior distribution of the estimated state.","syntaxgroup":[{"title":"","syntax":["pf = stateEstimatorPF"]}],"classpropertygroup":[{"classproperty":[{"name":"NumStateVariables","readonly":true,"purpose":"Number of state variables","htmlid":"bu31dpn-1-NumStateVariables","value":["3","scalar"],"defaultvalue":"3"},{"name":"NumParticles","readonly":true,"purpose":"Number of particles used in the filter","htmlid":"bu31dpn-1-NumParticles","value":["1000","scalar"],"defaultvalue":"1000"},{"name":"StateTransitionFcn","purpose":"Callback function for determining the state transition between particle filter steps","htmlid":"bu31dpn-1-StateTransitionFcn","value":["function handle"]},{"name":"MeasurementLikelihoodFcn","purpose":"Callback function calculating the likelihood of sensor measurements","htmlid":"bu31dpn-1-MeasurementLikelihoodFcn","value":["function handle"]},{"name":"IsStateVariableCircular","purpose":"Indicator if state variables have a circular distribution","htmlid":"bu31dpn-1-IsStateVariableCircular","value":["[0 0 0]","logical array"],"defaultvalue":"[0 0 0]"},{"name":"ResamplingPolicy","purpose":"Policy settings that determine when to trigger resampling","htmlid":"bu31dpn-1-ResamplingPolicy","value":["object"]},{"name":"ResamplingMethod","purpose":"Method used for particle resampling","htmlid":"bu31dpn-1-ResamplingMethod","value":["'multinomial'","'residual'","'stratified'","'systematic'"],"defaultvalue":"'multinomial'"},{"name":"StateEstimationMethod","purpose":"Method used for state estimation","htmlid":"bu31dpn-1-StateEstimationMethod","value":["'mean'","'maxweight'"],"defaultvalue":"'mean'"},{"name":"Particles","purpose":"Array of particle values","htmlid":"bu31dpn-1-Particles","value":["NumParticles-by-NumStateVariables matrix"]},{"name":"Weights","purpose":"Particle weights","htmlid":"bu31dpn-1-Weights","value":["NumParticles-by-1 vector"]},{"name":"State","readonly":true,"purpose":"Best state estimate","htmlid":"d126e207606","value":["vector"]},{"name":"State Covariance","readonly":true,"purpose":"Corrected system covariance","htmlid":"d126e207625","value":["N-by-N matrix","[]"]}]}],"objectfunctions":[{"title":"","functions":[{"name":"initialize","url":"stateestimatorpf.initialize.html","description":"Initialize the state of the particle filter"},{"name":"getStateEstimate","url":"stateestimatorpf.getstateestimate.html","description":"Extract best state estimate and covariance from particles"},{"name":"predict","url":"stateestimatorpf.predict.html","description":"Predict state of robot in next time step"},{"name":"correct","url":"stateestimatorpf.correct.html","description":"Adjust state estimate based on sensor measurement"}]}],"examples":[{"url":"stateestimatorpf.html#bu4himi","open_command":"openExample('nav_robotics\/ParticleFilterPredictionAndCorrectionExample')","title":"Particle Filter Prediction and Correction"},{"url":"stateestimatorpf.html#bu6sv0g","open_command":"openExample('nav_robotics\/EstimateRobotPositionInALoopUsingParticleFilterExample')","title":"Estimate Robot Position in a Loop Using Particle Filter"}],"seealso":[{"url":"resamplingpolicypf.html","name":"resamplingPolicyPF"},{"url":"stateestimatorpf.initialize.html","name":"initialize"},{"url":"stateestimatorpf.getstateestimate.html","name":"getStateEstimate"},{"url":"stateestimatorpf.predict.html","name":"predict"},{"url":"stateestimatorpf.correct.html","name":"correct"}]},{"href":"ref\/stateestimatorpf.predict.html","refentity":[{"type":"function","name":"predict","fcntype":"instancemethod"},{"type":"method","name":"stateEstimatorPF.predict","fcntype":"instancemethod"}],"refpurpose":"Predict state of robot in next time step","introduced":"R2016a","description":"This MATLAB function calculates the predicted system state and its associated uncertainty covariance.","syntaxgroup":[{"title":"","syntax":["[statePred,stateCov] = predict(pf)","[statePred,stateCov] = predict(pf,varargin)"]}],"inputgroup":[{"title":"","inputs":[{"name":"pf","purpose":"stateEstimatorPF object","htmlid":"bu357ss-1-pf","value":["handle"]},{"name":"varargin","purpose":"Variable-length input argument list","htmlid":"bu357ss-1-varargin","value":["comma-separated list"]}]}],"outputs":[{"name":"statePred","purpose":"Predicted system state","htmlid":"bu357ss-1-statePred","value":["vector"]},{"name":"stateCov","purpose":"Corrected system covariance","htmlid":"bu357ss-1-stateCov","value":["N-by-N matrix","[]"]}],"examples":[{"url":"stateestimatorpf.predict.html#mw_284630b2-6667-4e5a-b00f-291bec42d768","open_command":"openExample('nav_robotics\/ParticleFilterPredictionAndCorrectionExample')","title":"Particle Filter Prediction and Correction"}],"seealso":[{"url":"stateestimatorpf.html","name":"stateEstimatorPF"},{"url":"resamplingpolicypf.html","name":"resamplingPolicyPF"},{"url":"stateestimatorpf.initialize.html","name":"initialize"},{"url":"stateestimatorpf.getstateestimate.html","name":"getStateEstimate"},{"url":"stateestimatorpf.correct.html","name":"correct"}]},{"href":"ref\/statesamplergaussian.copy.html","refentity":[{"type":"function","name":"copy","fcntype":"instancemethod"},{"type":"method","name":"stateSamplerGaussian.copy","fcntype":"instancemethod"}],"refpurpose":"Create deep copy of Gaussian state sampler object","introduced":"R2023b","description":"This MATLAB function creates a deep copy of the Gaussian state sampler object.","syntaxgroup":[{"title":"","syntax":["sampler2 = copy(sampler1)"]}],"inputgroup":[{"title":"","inputs":[{"name":"sampler1","purpose":"State sampler object","htmlid":"mw_011197e7-6ac4-41d5-99a5-79f4d6cd0877","value":["stateSamplerGaussian object"]}]}],"outputs":[{"name":"sampler2","purpose":"Copy of state sampler object","htmlid":"mw_7e4da8c4-1dc0-4e23-a94b-64e30318071b","value":["stateSamplerGaussian object"]}],"examples":[{"url":"statesamplergaussian.copy.html#mw_cbc1a13f-6d13-437d-86f0-1a8617bb89a0","open_command":"openExample('nav\/SampleSE2StateSpaceUsingGaussianStateSamplerExample')","title":"Sample SE(2) State Space Using Gaussian State Sampler"},{"url":"statesamplergaussian.copy.html#mw_aa2cd3e9-92c8-4d62-a7d5-d2460fbcf2b4","open_command":"openExample('nav\/ModifyGaussianStateSamplerAndCompareResultsExample')","title":"Modify Gaussian State Sampler Parameters and Compare Results"}],"seealso":[{"url":"statesamplergaussian.html","name":"stateSamplerGaussian"},{"url":"statesamplermpnet.html","name":"stateSamplerMPNET"},{"url":"statesamplergaussian.sample.html","name":"sample"}]},{"href":"ref\/statesamplergaussian.html","refentity":[{"type":"object","name":"stateSamplerGaussian"},{"type":"function","name":"stateSamplerGaussian","fcntype":"constructor"}],"refpurpose":"Gaussian state sampler for sampling-based motion planning","introduced":"R2023b","description":"The stateSamplerGaussian object creates a state sampler for motion planning by using Gaussian distribution.","syntaxgroup":[{"title":"","syntax":["sampler = stateSamplerGaussian","sampler = stateSamplerGaussian(stateValidator)","sampler = stateSamplerGaussian(___,Name=Value)"]}],"classpropertygroup":[{"classproperty":[{"name":"StateSpace","readonly":true,"purpose":"SE(2) state space","htmlid":"mw_3263416c-65b5-4ee2-ba4b-397efe1da605","value":["stateSpaceSE2 object"]},{"name":"StateValidator","readonly":true,"purpose":"State validator definition","htmlid":"mw_10d4ef8a-f355-4189-baad-344446652216","value":["validatorOccupancyMap object","object of subclass of nav.StateValidator class"]},{"name":"StandardDeviation","purpose":"Standard deviation for Gaussian distribution","htmlid":"mw_87f7fca7-20fc-4f8d-b7fa-92d53ee1f7a9","value":["N-element row vector"]},{"name":"MaxAttempts","purpose":"Threshold for maximum number of attempts","htmlid":"mw_3fc90374-484f-43a7-93fc-7ea83b0664fc","value":["10","positive integer"],"defaultvalue":"10"}]}],"objectfunctions":[{"title":"","functions":[{"name":"sample","url":"statesamplergaussian.sample.html","description":"Sample states from Gaussian state sampler"},{"name":"copy","url":"statesamplergaussian.copy.html","description":"Create deep copy of Gaussian state sampler object"}]}],"examples":[{"url":"statesamplergaussian.html#mw_a0be7248-84e8-4fef-bb71-e516c412b6fd","open_command":"openExample('nav\/SampleSE2StateSpaceUsingGaussianStateSamplerExample')","title":"Sample SE(2) State Space Using Gaussian State Sampler"},{"url":"statesamplergaussian.html#mw_56b0764e-0abf-4820-a239-60365501e112","open_command":"openExample('nav\/PerformMotionPlanningUsingGaussianStateSamplingExample')","title":"Perform Motion Planning Using Gaussian State Space Sampling Approach"}],"seealso":[{"url":"statesamplergaussian.sample.html","name":"sample"},{"url":"statesamplergaussian.copy.html","name":"copy"},{"url":"statesampleruniform.html","name":"stateSamplerUniform"},{"url":"statesamplermpnet.html","name":"stateSamplerMPNET"}]},{"href":"ref\/statesamplergaussian.sample.html","refentity":[{"type":"function","name":"sample","fcntype":"instancemethod"},{"type":"method","name":"stateSamplerGaussian.sample","fcntype":"instancemethod"}],"refpurpose":"Sample states from Gaussian state sampler","introduced":"R2023b","description":"This MATLAB function returns a state sample selected using the Gaussian state sampling approach.","syntaxgroup":[{"title":"","syntax":["states = sample(sampler)","states = sample(sampler,numsamples)"]}],"inputgroup":[{"title":"","inputs":[{"name":"sampler","purpose":"State sampler object","htmlid":"mw_cedbcae2-1214-4e1e-876b-17a36ec8f27c","value":["stateSamplerGaussian object"]},{"name":"numsamples","purpose":"Number of samples","htmlid":"mw_5f110d2d-bbca-487a-8b11-dc9968c9723a","value":["1","positive integer"],"defaultvalue":"1"}]}],"outputs":[{"name":"states","purpose":"State samples","htmlid":"mw_0d953642-b149-44b8-b9e3-6e64357fbeab","value":["M-by-N matrix of real values"]}],"examples":[{"url":"statesamplergaussian.sample.html#mw_d27a5248-83ce-4cd3-b1ab-a45b6fbc6e1c","open_command":"openExample('nav\/SampleSE2StateSpaceUsingGaussianStateSamplerExample')","title":"Sample SE(2) State Space Using Gaussian State Sampler"}],"seealso":[{"url":"statesamplergaussian.html","name":"stateSamplerGaussian"},{"url":"statesamplergaussian.copy.html","name":"copy"}]},{"href":"ref\/statesamplermpnet.copy.html","refentity":[{"type":"function","name":"copy","fcntype":"instancemethod"},{"type":"method","name":"stateSamplerMPNET.copy","fcntype":"instancemethod"}],"refpurpose":"Create deep copy of MPNet state sampler object","introduced":"R2023b","description":"This MATLAB function creates a deep copy of the specified MPNet state sampler object.","syntaxgroup":[{"title":"","syntax":["sampler2 = copy(sampler1)"]}],"inputgroup":[{"title":"","inputs":[{"name":"sampler1","purpose":"MPNet state sampler object","htmlid":"mw_819ed950-2387-4e2a-b393-c292309b687b","value":["stateSamplerMPNET object"]}]}],"outputs":[{"name":"sampler2","purpose":"Copy of MPNet state sampler object","htmlid":"mw_43876e3b-0ce0-48f2-a927-8535df9e348d","value":["stateSamplerMPNET object"]}],"examples":[{"url":"statesamplermpnet.copy.html#mw_d5d131d4-cbfc-4db1-9425-530cf94b6a43","open_command":"openExample('nav\/PerformInformedSamplingWithMPNetExample')","title":"Perform Informed Sampling with MPNet"}],"seealso":[{"url":"statesamplermpnet.html","name":"stateSamplerMPNET"},{"url":"statesamplermpnet.sample.html","name":"sample"}]},{"href":"ref\/statesamplermpnet.html","refentity":[{"type":"object","name":"stateSamplerMPNET"},{"type":"function","name":"stateSamplerMPNET","fcntype":"constructor"}],"refpurpose":"MPNet state sampler for sampling-based motion planning","introduced":"R2023b","description":"The stateSamplerMPNET object creates a state sampler for motion planning by using Motion Planning Networks (MPNet).","syntaxgroup":[{"title":"","syntax":["statesampler = stateSamplerMPNET(statespace,mpnet)","statesampler = stateSamplerMPNET(___,Name=Value)"]}],"classpropertygroup":[{"classproperty":[{"name":"StateSpace","readonly":true,"purpose":"State space for sampling","htmlid":"mw_0ecd03d9-c9da-4bdd-baa1-351a9e813eef","value":["stateSpaceSE2 object","stateSpaceDubins object","stateSpaceReedsShepp object","object of a subclass from nav.StateSpace class"],"defaultvalue":"stateSpaceSE2 object"},{"name":"MotionPlanningNetwork","readonly":true,"purpose":"Pretrained MPNet","htmlid":"mw_84154d21-b0fa-49c0-90b2-2e4bad5c5aa2","value":["mpnetSE2 object"]},{"name":"Environment","purpose":"Map environment","htmlid":"mw_d3e86d98-d3d9-41e6-91bb-d28d4747b6ff","value":["binaryOccupancyMap object","occupancyMap object"]},{"name":"StartState","purpose":"Start state","htmlid":"mw_1e5edbef-6903-4069-b928-8fbee633a18a","value":["[0 0 -pi]","three-element vector"],"defaultvalue":"[0 0 -pi]"},{"name":"GoalState","purpose":"Goal state","htmlid":"mw_7edfa755-3bd0-40e9-92ff-fbf891b52090","value":["[0 0 -pi]","three-element vector"],"defaultvalue":"[0 0 -pi]"},{"name":"MaxLearnedSamples","purpose":"Maximum number of learned samples","htmlid":"mw_66adf249-a3a7-4317-a982-2e12262ddd94","value":["50","positive integer"],"defaultvalue":"50"},{"name":"GoalThreshold","purpose":"Distance threshold to goal","htmlid":"mw_92e97ff3-784e-4621-8826-c7e00d417a8b","value":["1","positive scalar"],"defaultvalue":"1"}]}],"objectfunctions":[{"title":"","functions":[{"name":"sample","url":"statesamplermpnet.sample.html","description":"Compute state samples using MPNet state sampler"},{"name":"copy","url":"statesamplermpnet.copy.html","description":"Create deep copy of MPNet state sampler object"}]}],"examples":[{"url":"statesamplermpnet.html#mw_f727cc1d-ec9d-44a2-878c-59ce9dd6084c","open_command":"openExample('nav\/PerformInformedSamplingWithMPNetExample')","title":"Perform Informed Sampling with MPNet"},{"url":"statesamplermpnet.html#mw_1287ec6d-eaf1-46de-9fd2-fcd09dc576f0","open_command":"openExample('nav\/SampleStateSpaceUsingMPNetAndPerformMotionPlanningExample')","title":"Sample State Space Using Pretrained MPNet and Perform Motion Planning"}],"seealso":[{"url":"mpnetse2.html","name":"mpnetSE2"},{"url":"statesampleruniform.html","name":"stateSamplerUniform"},{"url":"statesamplergaussian.html","name":"stateSamplerGaussian"}]},{"href":"ref\/statesamplermpnet.sample.html","refentity":[{"type":"function","name":"sample","fcntype":"instancemethod"},{"type":"method","name":"stateSamplerMPNET.sample","fcntype":"instancemethod"}],"refpurpose":"Compute state samples using MPNet state sampler","introduced":"R2023b","description":"This MATLAB functioncomputes a state sample using a Motion Planning Networks (MPNet) state sampler.","syntaxgroup":[{"title":"","syntax":["states = sample(sampler)","states = sample(sampler,numsamples)"]}],"inputgroup":[{"title":"","inputs":[{"name":"sampler","purpose":"MPNet state sampler","htmlid":"mw_7d117b0f-ef81-4152-8227-dfb2cdf21378","value":["stateSamplerMPNET object"]},{"name":"numsamples","purpose":"Number of samples","htmlid":"mw_b7cadbaa-9610-4741-97d9-b4c5d1ac6305","value":["1","positive integer"],"defaultvalue":"1"}]}],"outputs":[{"name":"states","purpose":"State samples","htmlid":"mw_e1536d5e-d900-4822-8245-7e74b09d4560","value":["M-by-N matrix of real values"]}],"examples":[{"url":"statesamplermpnet.sample.html#mw_f1d6864e-e5e2-4b56-a559-a08f9f444c92","open_command":"openExample('nav\/ComputeStateSamplesUsingMPNetStateSamplerExample')","title":"Compute State Samples Using MPNet State Sampler"}],"seealso":[{"url":"statesamplermpnet.html","name":"stateSamplerMPNET"},{"url":"statesamplermpnet.copy.html","name":"copy"}]},{"href":"ref\/statesampleruniform.copy.html","refentity":[{"type":"function","name":"copy","fcntype":"instancemethod"},{"type":"method","name":"stateSamplerUniform.copy","fcntype":"instancemethod"}],"refpurpose":"Create deep copy of uniform state sampler object","introduced":"R2023b","description":"This MATLAB function creates a deep copy of the uniform state sampler object.","syntaxgroup":[{"title":"","syntax":["sampler2 = copy(sampler1)"]}],"inputgroup":[{"title":"","inputs":[{"name":"sampler1","purpose":"State sampler object","htmlid":"mw_57aaeb5a-c6d5-472a-9256-99171f423420","value":["stateSamplerUniform object"]}]}],"outputs":[{"name":"sampler2","purpose":"Copy of state sampler object","htmlid":"mw_e2e8082f-91f7-4eb3-90e1-914eebf0f4fb","value":["stateSamplerUniform object"]}],"examples":[{"url":"statesampleruniform.copy.html#mw_e08ad041-6f0f-4b86-8aba-4404079129ab","open_command":"openExample('nav\/CreateCopiesOfUniformStateSamplerExample')","title":"Create Copies of Uniform State Sampler"}],"seealso":[{"url":"statesampleruniform.html","name":"stateSamplerUniform"},{"url":"statesamplergaussian.html","name":"stateSamplerGaussian"},{"url":"statesamplermpnet.html","name":"stateSamplerMPNET"},{"url":"statesampleruniform.sample.html","name":"sample"}]},{"href":"ref\/statesampleruniform.html","refentity":[{"type":"object","name":"stateSamplerUniform"},{"type":"function","name":"stateSamplerUniform","fcntype":"constructor"}],"refpurpose":"Uniform state sampler for sampling-based motion planning","introduced":"R2023b","description":"The stateSamplerUniform object generates uniformly distributed state samples using the sampleUniform object function of the state space object.","syntaxgroup":[{"title":"","syntax":["sampler = stateSamplerUniform","sampler = stateSamplerUniform(stateSpace)"]}],"classpropertygroup":[{"classproperty":[{"name":"StateSpace","purpose":"State space definition","htmlid":"mw_57203813-fa71-4744-9fb3-d4ed178fc111","value":["stateSpaceSE2 object","object of subclass of nav.StateSpace class"],"defaultvalue":"stateSpaceSE2 object"}]}],"objectfunctions":[{"title":"","functions":[{"name":"sample","url":"statesampleruniform.sample.html","description":"Sample states from uniform state sampler "},{"name":"copy","url":"statesampleruniform.copy.html","description":"Create deep copy of uniform state sampler object"}]}],"examples":[{"url":"statesampleruniform.html#mw_a38df4fa-9e1f-48d1-be75-1bba77faa334","open_command":"openExample('nav\/SampleSE2StateSpaceUsingUniformStateSamplerExample')","title":"Sample SE(2) State Space Using Uniform State Sampler"},{"url":"statesampleruniform.html#mw_02afc7cb-70f0-41e1-9cc2-0dfe89b510db","open_command":"openExample('nav\/PerformMotionPlanningUsingUniformSamplingExample')","title":"Perform Motion Planning Using Uniform State Space Sampling"}],"seealso":[{"url":"statesamplergaussian.html","name":"stateSamplerGaussian"},{"url":"statesamplermpnet.html","name":"stateSamplerMPNET"},{"url":"statesampleruniform.sample.html","name":"sample"},{"url":"statesampleruniform.copy.html","name":"copy"}]},{"href":"ref\/statesampleruniform.sample.html","refentity":[{"type":"function","name":"sample","fcntype":"instancemethod"},{"type":"method","name":"stateSamplerUniform.sample","fcntype":"instancemethod"}],"refpurpose":"Sample states from uniform state sampler","introduced":"R2023b","description":"This MATLAB function returns a state sample selected using the uniform state sampling approach.","syntaxgroup":[{"title":"","syntax":["states = sample(sampler)","states = sample(sampler,numsamples)"]}],"inputgroup":[{"title":"","inputs":[{"name":"sampler","purpose":"State sampler object","htmlid":"mw_be41f50b-c46e-460a-be7d-6f8fdd8bcfe3","value":["stateSamplerUniform object"]},{"name":"numsamples","purpose":"Number of samples","htmlid":"mw_d1716e00-3cf9-4f1b-b255-9b3cd13d3c07","value":["1","positive integer"],"defaultvalue":"1"}]}],"outputs":[{"name":"states","purpose":"State samples","htmlid":"mw_aeaaff02-dacb-41bd-bb38-1d63f1bd4715","value":["M-by-N matrix of real values"]}],"examples":[{"url":"statesampleruniform.sample.html#mw_723a71dc-029b-4c9c-9d6c-ba11e05d9116","open_command":"openExample('nav\/SampleSE2StateSpaceUsingUniformStateSamplerExample')","title":"Sample SE(2) State Space Using Uniform State Sampler"}],"seealso":[{"url":"statesampleruniform.html","name":"stateSamplerUniform"},{"url":"statesamplergaussian.html","name":"stateSamplerGaussian"},{"url":"statesamplermpnet.html","name":"stateSamplerMPNET"},{"url":"statesampleruniform.copy.html","name":"copy"}]},{"href":"ref\/statespacedubins.html","refentity":[{"type":"object","name":"stateSpaceDubins"},{"type":"function","name":"stateSpaceDubins","fcntype":"constructor"}],"refpurpose":"State space for Dubins vehicles","introduced":"R2019b","description":"The stateSpaceDubins object stores parameters and states in the Dubins state space, which is composed of state vectors represented by [x, y, θ].","syntaxgroup":[{"title":"","syntax":["space = stateSpaceDubins","space = stateSpaceDubins(bounds)"]}],"classpropertygroup":[{"classproperty":[{"name":"Name","purpose":"Name of state space","htmlid":"mw_3bf8b8b5-3294-4cec-a5fb-d5be92c8b94b","value":["'SE2 Dubins'","string"],"defaultvalue":"'SE2 Dubins'"},{"name":"NumStateVariables","readonly":true,"purpose":"Dimension of the state space","htmlid":"mw_e610fbdc-db73-45fd-a509-c298207b6a06","value":["3","positive integer"],"defaultvalue":"3"},{"name":"StateBounds","purpose":"Bounds of state variables","htmlid":"mw_3611fda6-70ee-45c9-abd4-f79cc8c35bd2","value":["[-100 100; -100 100; -3.1416 3.1416]","3-by-2 real-valued matrix"],"defaultvalue":"[-100 100; -100 100; -3.1416 3.1416]"},{"name":"MinTurningRadius","purpose":"Minimum turning radius","htmlid":"mw_6974a10c-41a6-4072-b9bf-0df7461201a0","value":["1","positive scalar"],"defaultvalue":"1"}]}],"objectfunctions":[{"title":"","functions":[{"name":"copy","url":"statespacese2.copy.html","description":"Create deep copy of state space object"},{"name":"distance","url":"statespacese2.distance.html","description":"Distance between two states"},{"name":"enforceStateBounds","url":"statespacese2.enforcestatebounds.html","description":"Reduce state to state bounds"},{"name":"interpolate","url":"statespacese2.interpolate.html","description":"Interpolate between states"},{"name":"sampleGaussian","url":"statespacese2.samplegaussian.html","description":"Sample state using Gaussian distribution"},{"name":"sampleUniform","url":"statespacese2.sampleuniform.html","description":"Sample state using uniform distribution"}]}],"examples":[{"url":"statespacedubins.html#mw_c3462583-15f8-48b9-ac5c-b3de010fe803","open_command":"openExample('nav\/PlanPathBetweenTwoStatesInDubinsStateSpaceExample')","title":"Plan Path Between Two States in Dubins State Space"}],"seealso":[{"url":"statespacese2.html","name":"stateSpaceSE2"},{"url":"statespacereedsshepp.html","name":"stateSpaceReedsShepp"},{"url":"dubinsconnection.html","name":"dubinsConnection"}]},{"href":"ref\/statespacereedsshepp.html","refentity":[{"type":"object","name":"stateSpaceReedsShepp"},{"type":"function","name":"stateSpaceReedsShepp","fcntype":"constructor"}],"refpurpose":"State space for Reeds-Shepp vehicles","introduced":"R2019b","description":"The stateSpaceReedsShepp object stores parameters and states in the Reeds-Shepp state space, which is composed of state vectors represented by [x, y, θ].","syntaxgroup":[{"title":"","syntax":["space = stateSpaceReedsShepp","sapce = stateSpaceReedsShepp(bounds)"]}],"classpropertygroup":[{"classproperty":[{"name":"Name","purpose":"Name of state space","htmlid":"mw_4b4e2fb9-82b1-439f-ab9e-0d4b1f119be2","value":["'SE2 Reeds-Shepp'","string"],"defaultvalue":"'SE2 Reeds-Shepp'"},{"name":"NumStateVariables","readonly":true,"purpose":"Dimension of the state space","htmlid":"mw_95816aef-de82-49e4-b7fb-7a02c1df4209","value":["3","positive integer"],"defaultvalue":"3"},{"name":"StateBounds","purpose":"Bounds of state variables","htmlid":"mw_a16175b2-9036-489f-98b7-a7fe04a66b4f","value":["[-100 100; -100 100; -3.1416 3.1416]","3-by-2 real-valued matrix"],"defaultvalue":"[-100 100; -100 100; -3.1416 3.1416]"},{"name":"MinTurningRadius","purpose":"Minimum turning radius","htmlid":"mw_f7f58428-79b2-48bb-a549-1db01155e5db","value":["1","positive scalar"],"defaultvalue":"1"},{"name":"ForwardCost","purpose":"Cost multiplier for forward motion","htmlid":"mw_15a22d3c-772a-4393-b30c-5bd230c005f1","value":["1","positive scalar"],"defaultvalue":"1"},{"name":"ReverseCost","purpose":"Cost multiplier for reverse motion","htmlid":"mw_5b9526dd-23e7-468a-9dfa-3df1c5419fb8","value":["1","positive scalar"],"defaultvalue":"1"}]}],"objectfunctions":[{"title":"","functions":[{"name":"copy","url":"statespacese2.copy.html","description":"Create deep copy of state space object"},{"name":"distance","url":"statespacese2.distance.html","description":"Distance between two states"},{"name":"enforceStateBounds","url":"statespacese2.enforcestatebounds.html","description":"Reduce state to state bounds"},{"name":"interpolate","url":"statespacese2.interpolate.html","description":"Interpolate between states"},{"name":"sampleGaussian","url":"statespacese2.samplegaussian.html","description":"Sample state using Gaussian distribution"},{"name":"sampleUniform","url":"statespacese2.sampleuniform.html","description":"Sample state using uniform distribution"}]}],"examples":[{"url":"statespacereedsshepp.html#mw_7ef7659e-3c2d-4016-b9e2-cf579b70fde9","open_command":"openExample('nav\/PlanPathBetweenTwoStatesInReedsSheppStateSpaceExample')","title":"Plan Path Between Two States in ReedsShepp State Space"}],"seealso":[{"url":"statespacedubins.html","name":"stateSpaceDubins"},{"url":"statespacese2.html","name":"stateSpaceSE2"},{"url":"reedssheppconnection.html","name":"reedsSheppConnection"}]},{"href":"ref\/statespacese2.copy.html","refentity":[{"type":"function","name":"copy","fcntype":"instancemethod"},{"type":"method","name":"stateSpaceSE2.copy","fcntype":"instancemethod"},{"type":"method","name":"stateSpaceSE3.copy","fcntype":"instancemethod"},{"type":"method","name":"stateSpaceDubins.copy","fcntype":"instancemethod"},{"type":"method","name":"stateSpaceReedsShepp.copy","fcntype":"instancemethod"}],"refpurpose":"Create deep copy of state space object","introduced":"R2019b","description":"This MATLAB function creates a deep copy of the specified state space object.","syntaxgroup":[{"title":"","syntax":["space2 = copy(space1)"]}],"inputgroup":[{"title":"","inputs":[{"name":"space1","purpose":"State space object","htmlid":"mw_3e9789a5-a014-43f8-bcac-d35e2ff95711","value":["stateSpaceSE2 object","stateSpaceSE3 object","stateSpaceDubins object","stateSpaceReedsShepp object"]}]}],"outputs":[{"name":"space2","purpose":"State space object","htmlid":"mw_2409f4b3-4fe5-475c-844f-ad1f6ffa9afe","value":["stateSpaceSE2 object","stateSpaceSE3 object","stateSpaceDubins object","stateSpaceReedsShepp object"]}],"examples":[{"url":"statespacese2.copy.html#mw_6442d63b-e779-452a-81ae-9557d1c2a3c8","open_command":"openExample('nav\/CreateDeepCopyOfSE3StateSpaceObjectExample')","title":"Create Deep Copy of SE(3) State Space Object"}],"seealso":[{"url":"statespacese2.html","name":"stateSpaceSE2"},{"url":"statespacese3.html","name":"stateSpaceSE3"},{"url":"statespacedubins.html","name":"stateSpaceDubins"},{"url":"statespacereedsshepp.html","name":"stateSpaceReedsShepp"}]},{"href":"ref\/statespacese2.distance.html","refentity":[{"type":"function","name":"distance","fcntype":"instancemethod"},{"type":"method","name":"stateSpaceSE2.distance","fcntype":"instancemethod"},{"type":"method","name":"stateSpaceSE3.distance","fcntype":"instancemethod"},{"type":"method","name":"stateSpaceDubins.distance","fcntype":"instancemethod"},{"type":"method","name":"stateSpaceReedsShepp.distance","fcntype":"instancemethod"}],"refpurpose":"Distance between two states","introduced":"R2019b","description":"This MATLAB function returns the distance between states1 and states2 in the specified state space space.","syntaxgroup":[{"title":"","syntax":["dist = distance(space,states1,states2)"]}],"inputgroup":[{"title":"","inputs":[{"name":"space","purpose":"State space object","htmlid":"mw_6d228f9b-46d5-48bf-8172-21ea23174987","value":["stateSpaceSE2 object","stateSpaceSE3 object","stateSpaceDubins object","stateSpaceReedsShepp object"]},{"name":"states1","purpose":"Initial states for distance calculation","htmlid":"mw_99ff0d9e-73cc-4e03-867b-a47ebd77dda3","value":["n-by-3 matrix of real values","n-by-7 matrix of real values"]},{"name":"states2","purpose":"Final states for distance calculation","htmlid":"mw_37268cb1-ba9f-49b6-bb98-91dc4e9da838","value":["n-by-3 matrix of real values","n-by-7 matrix of real values"]}]}],"outputs":[{"name":"dist","purpose":"Distance between states","htmlid":"mw_0169049e-e59f-4729-85e2-53b1a5e20333","value":["n-element column vector"]}],"examples":[{"url":"statespacese2.distance.html#mw_a609d3cb-0ea8-4920-8439-6506168d256e","open_command":"openExample('nav\/CalculateDistanceBetweenTwoStatesInSE3Example')","title":"Calculate Distance Between Two States in SE3"}],"seealso":[{"url":"statespacese2.html","name":"stateSpaceSE2"},{"url":"statespacese3.html","name":"stateSpaceSE3"},{"url":"statespacedubins.html","name":"stateSpaceDubins"},{"url":"statespacereedsshepp.html","name":"stateSpaceReedsShepp"}]},{"href":"ref\/statespacese2.enforcestatebounds.html","refentity":[{"type":"function","name":"enforceStateBounds","fcntype":"instancemethod"},{"type":"method","name":"stateSpaceSE2.enforceStateBounds","fcntype":"instancemethod"},{"type":"method","name":"stateSpaceSE3.enforceStateBounds","fcntype":"instancemethod"},{"type":"method","name":"stateSpaceDubins.enforceStateBounds","fcntype":"instancemethod"},{"type":"method","name":"stateSpaceReedsShepp.enforceStateBounds","fcntype":"instancemethod"}],"refpurpose":"Reduce state to state bounds","introduced":"R2019b","description":"This MATLAB function reduces the specified states states to the state bounds in the StateBounds property of the specified state space object space.","syntaxgroup":[{"title":"","syntax":["boundedStates = enforceStateBounds(space,states)"]}],"inputgroup":[{"title":"","inputs":[{"name":"space","purpose":"State space object","htmlid":"mw_c359dbea-e6ad-46b4-9f3b-9e257c44f014","value":["stateSpaceSE2 object","stateSpaceSE3 object","stateSpaceDubins object","stateSpaceReedsShepp object"]},{"name":"states","purpose":"Unbounded states","htmlid":"mw_832dcc21-d358-4036-955c-08c9588f16e6","value":["n-by-3 matrix of real values","n-by-7 matrix of real values"]}]}],"outputs":[{"name":"boundedStates","purpose":"Bounded states","htmlid":"mw_4270daaa-cf2f-4b4c-9a98-bacd72a42b2a","value":["n-by-3 matrix of real values","n-by-7 matrix of real values"]}],"examples":[{"url":"statespacese2.enforcestatebounds.html#mw_9dfeddd5-8ebb-4b1f-b8a5-e286c40c317a","open_command":"openExample('nav\/EnforceStateBoundsForSE3StatesExample')","title":"Enforce State Bounds for SE(3) States"}],"seealso":[{"url":"statespacese2.html","name":"stateSpaceSE2"},{"url":"statespacese3.html","name":"stateSpaceSE3"},{"url":"statespacedubins.html","name":"stateSpaceDubins"},{"url":"statespacereedsshepp.html","name":"stateSpaceReedsShepp"}]},{"href":"ref\/statespacese2.interpolate.html","refentity":[{"type":"function","name":"interpolate","fcntype":"instancemethod"},{"type":"method","name":"stateSpaceSE2.interpolate","fcntype":"instancemethod"},{"type":"method","name":"stateSpaceSE3.interpolate","fcntype":"instancemethod"},{"type":"method","name":"stateSpaceDubins.interpolate","fcntype":"instancemethod"},{"type":"method","name":"stateSpaceReedsShepp.interpolate","fcntype":"instancemethod"}],"refpurpose":"Interpolate between states","introduced":"R2019b","description":"This MATLAB function interpolates states between the specified start state state1 and end state state2 based on the specified interpolation ratio ratio.","syntaxgroup":[{"title":"","syntax":["interpStates = interpolate(space,state1,state2,ratio)"]}],"inputgroup":[{"title":"","inputs":[{"name":"space","purpose":"State space object","htmlid":"mw_362839a4-b354-4b93-951d-bb56b20f6c7d","value":["stateSpaceSE2 object","stateSpaceSE3 object","stateSpaceDubins object","stateSpaceReedsShepp object"]},{"name":"state1","purpose":"Start state for interpolation","htmlid":"mw_40a2b6b9-959e-4542-82d9-5b66a308e7c3","value":["three-element vector of real values","seven-element vector of real values"]},{"name":"state2","purpose":"End state for interpolation","htmlid":"mw_ca8a9772-067e-44dd-a66b-f76647427921","value":["three-element vector of real values","seven-element vector of real values"]},{"name":"ratio","purpose":"Interpolation ratio","htmlid":"mw_dccf7901-5268-4098-a55e-539d7df0cd71","value":["scalar in range [0, 1]","n-element column vector of values in the range [0, 1]"]}]}],"outputs":[{"name":"interpStates","purpose":"Interpolated states","htmlid":"mw_319cedce-75ea-4d99-802a-cd192c9383d6","value":["n-by-3 matrix of real values","n-by-7 matrix of real values"]}],"examples":[{"url":"statespacese2.interpolate.html#mw_5733d76a-9f44-4117-bceb-9a032873d695","open_command":"openExample('nav\/InterpolateBetweenStatesInSE2Example')","title":"Interpolate Between States in SE(2)"},{"url":"statespacese2.interpolate.html#mw_d1e81ec6-a91d-4bc3-a21b-6c3a63c261a1","open_command":"openExample('nav\/InterpolateBetweenStatesInSE3Example')","title":"Interpolate Between States in SE(3)"}],"seealso":[{"url":"statespacese2.html","name":"stateSpaceSE2"},{"url":"statespacese3.html","name":"stateSpaceSE3"},{"url":"statespacedubins.html","name":"stateSpaceDubins"},{"url":"statespacereedsshepp.html","name":"stateSpaceReedsShepp"}]},{"href":"ref\/statespacese2.html","refentity":[{"type":"object","name":"stateSpaceSE2"},{"type":"function","name":"stateSpaceSE2","fcntype":"constructor"}],"refpurpose":"SE(2) state space","introduced":"R2019b","description":"The stateSpaceSE2 object stores parameters and states in the SE(2) state space, which is composed of state vectors represented by [x, y, θ].","syntaxgroup":[{"title":"","syntax":["space = stateSpaceSE2","space = stateSpaceSE2(bounds)"]}],"classpropertygroup":[{"classproperty":[{"name":"Name","purpose":"Name of state space","htmlid":"mw_d97c9551-76a5-457c-8867-1f9b363791a2","value":["'SE2'","string"],"defaultvalue":"'SE2'"},{"name":"NumStateVariables","readonly":true,"purpose":"Dimension of the state space","htmlid":"mw_e5ec1bc3-0b46-4c22-85dd-eb20c1ffb365","value":["3","positive integer"],"defaultvalue":"3"},{"name":"StateBounds","purpose":"Bounds of state variables","htmlid":"mw_95bed4ee-d9aa-45ca-808b-e909c3810c18","value":["[-100 100; -100 100; -3.1416 3.1416]","3-by-2 real-valued matrix"],"defaultvalue":"[-100 100; -100 100; -3.1416 3.1416]"},{"name":"WeightXY","purpose":"Weight applied to x and y distance calculation","htmlid":"mw_1e644f6a-ca86-4eb1-9f6c-a3bf2ebf6e3b","value":["1","nonnegative real scalar"],"defaultvalue":"1"},{"name":"WeightTheta","purpose":"Weight applied to theta distance calculation","htmlid":"mw_845237b6-e078-498e-947b-0fae10b93ce3","value":["0.1","nonnegative real scalar"],"defaultvalue":"0.1"}]}],"objectfunctions":[{"title":"","functions":[{"name":"copy","url":"statespacese2.copy.html","description":"Create deep copy of state space object"},{"name":"distance","url":"statespacese2.distance.html","description":"Distance between two states"},{"name":"enforceStateBounds","url":"statespacese2.enforcestatebounds.html","description":"Reduce state to state bounds"},{"name":"interpolate","url":"statespacese2.interpolate.html","description":"Interpolate between states"},{"name":"sampleGaussian","url":"statespacese2.samplegaussian.html","description":"Sample state using Gaussian distribution"},{"name":"sampleUniform","url":"statespacese2.sampleuniform.html","description":"Sample state using uniform distribution"}]}],"examples":[{"url":"statespacese2.html#mw_82e04b7f-ba90-4a55-b7d6-59429624217c","open_command":"openExample('nav\/PlanPathBetweenTwoSE2StatesExample')","title":"Plan Path Between Two SE(2) States"}],"seealso":[{"url":"statespacedubins.html","name":"stateSpaceDubins"},{"url":"statespacereedsshepp.html","name":"stateSpaceReedsShepp"}]},{"href":"ref\/statespacese2.samplegaussian.html","refentity":[{"type":"function","name":"sampleGaussian","fcntype":"instancemethod"},{"type":"method","name":"stateSpaceSE2.sampleGaussian","fcntype":"instancemethod"},{"type":"method","name":"stateSpaceDubins.sampleGaussian","fcntype":"instancemethod"},{"type":"method","name":"stateSpaceReedsShepp.sampleGaussian","fcntype":"instancemethod"}],"refpurpose":"Sample state using Gaussian distribution","introduced":"R2019b","description":"This MATLAB function returns a sample state of the state space based on a Gaussian (normal) distribution with specified mean, meanState, and standard deviation, stdDev.","syntaxgroup":[{"title":"","syntax":["state = sampleGaussian(space,meanState,stdDev)","state = sampleGaussian(space,meanState,stdDev,numSamples)"]}],"inputgroup":[{"title":"","inputs":[{"name":"space","purpose":"State space object","htmlid":"mw_db24d9a6-e08a-49de-8dce-87d31d8993ea","value":["spaceSE2 object","spaceDubins object","spaceReedsShepp object"]},{"name":"meanState","purpose":"Mean state","htmlid":"mw_feca05c5-a809-4117-8a36-8596beb6b7cd","value":["3-element vector of real values"]},{"name":"stdDev","purpose":"Standard deviation","htmlid":"mw_2fcf4e5f-74b2-4781-9e05-0bd6a655ebeb","value":["3-element vector of nonnegative values"]},{"name":"numSamples","purpose":"Number of samples","htmlid":"mw_1d80f68b-833c-47b1-9bf6-ba7a1334170e","value":["positive integer"]}]}],"outputs":[{"name":"state","purpose":"State samples","htmlid":"mw_6c3af6d8-8a02-4ad0-9ce1-ed7b77587e3b","value":["N-by-3 real-valued matrix"]}],"examples":[{"url":"statespacese2.samplegaussian.html#mw_dc7f344e-92f3-4aab-bd60-5ed3b4916576","open_command":"openExample('nav\/SampleStatesOfStateSpaceUsingGaussianDistributionExample')","title":"Sample States of State Space Using Gaussian Distribution"}],"seealso":[{"url":"statespacese2.html","name":"stateSpaceSE2"},{"url":"statespacedubins.html","name":"stateSpaceDubins"},{"url":"statespacereedsshepp.html","name":"stateSpaceReedsShepp"}]},{"href":"ref\/statespacese2.sampleuniform.html","refentity":[{"type":"function","name":"sampleUniform","fcntype":"instancemethod"},{"type":"method","name":"stateSpaceSE2.sampleUniform","fcntype":"instancemethod"},{"type":"method","name":"stateSpaceSE3.sampleUniform","fcntype":"instancemethod"},{"type":"method","name":"stateSpaceDubins.sampleUniform","fcntype":"instancemethod"},{"type":"method","name":"stateSpaceReedsShepp.sampleUniform","fcntype":"instancemethod"}],"refpurpose":"Sample state using uniform distribution","introduced":"R2019b","description":"This MATLAB function samples a state within the bounds in the StateBounds property of the specified state space object space using a uniform probability distribution.","syntaxgroup":[{"title":"","syntax":["state = sampleUniform(space)","state = sampleUniform(space,numSamples)","state = sampleUniform(space,nearState,distVector,numSamples)"]}],"inputgroup":[{"title":"","inputs":[{"name":"space","purpose":"State space object","htmlid":"mw_f2543304-8114-440e-96f7-4b8770938452","value":["stateSpaceSE2 object","stateSpaceSE3 object","stateSpaceDubins object","stateSpaceReedsShepp object"]},{"name":"numSamples","purpose":"Number of samples","htmlid":"mw_7ae28770-be7c-4dee-9925-6fa7dc1b216a","value":["positive integer"]},{"name":"nearState","purpose":"Center of sampling region","htmlid":"mw_9016aad4-f8a4-43ad-9ca6-fa0187be136b","value":["three-element vector of real values"]},{"name":"distVector","purpose":"Distance of sampling region boundary from center","htmlid":"mw_dc5aed0b-b2fc-453d-84ef-8e8f46037edb","value":["three-element vector of positive numbers"]}]}],"outputs":[{"name":"state","purpose":"State samples","htmlid":"mw_63214412-129d-4430-bfc1-492baa406604","value":["n-by-3 matrix of real values","n-by-7 matrix of real values"]}],"examples":[{"url":"statespacese2.sampleuniform.html#mw_968d1691-2bdb-49fd-b1fe-5b724e9e05fe","open_command":"openExample('nav\/SampleStateUsingUniformDistributionInSE3Example')","title":"Sample State Using Uniform Distribution in SE(3)"}],"seealso":[{"url":"statespacese2.html","name":"stateSpaceSE2"},{"url":"statespacese3.html","name":"stateSpaceSE3"},{"url":"statespacedubins.html","name":"stateSpaceDubins"},{"url":"statespacereedsshepp.html","name":"stateSpaceReedsShepp"}]},{"href":"ref\/statespacese3.html","refentity":[{"type":"object","name":"stateSpaceSE3"},{"type":"function","name":"stateSpaceSE3","fcntype":"constructor"}],"refpurpose":"SE(3) state space","introduced":"R2020b","description":"The stateSpaceSE3 object stores parameters and states in the SE(3) state space, which is composed of state vectors represented by [x, y, z, qw, qx, qy, qz].","syntaxgroup":[{"title":"","syntax":["space = stateSpaceSE3","space = stateSpaceSE3(bounds)"]}],"classpropertygroup":[{"classproperty":[{"name":"Name","readonly":true,"purpose":"Name of state space","htmlid":"mw_eb100ce6-b2c0-45ac-a1c1-c56346d92445","value":["'SE3'","character vector"],"defaultvalue":"'SE3'"},{"name":"NumStateVariables","readonly":true,"purpose":"Number of state space dimensions","htmlid":"mw_619a2614-32e0-47b0-88de-43c6c6a56092","value":["7","positive integer"],"defaultvalue":"7"},{"name":"StateBounds","purpose":"Bounds of state variables","htmlid":"mw_9211164b-8592-46bd-bb3e-0ae99a0b2ae5","value":["[-100 100; -100 100; -100 100; Inf Inf; Inf Inf; Inf Inf; Inf Inf]","7-by-2 matrix of real values"],"defaultvalue":"[-100 100; -100 100; -100 100; Inf Inf; Inf Inf; Inf Inf; Inf Inf]"},{"name":"WeightXYZ","purpose":"Weight applied to x, y, and z distance calculation","htmlid":"mw_4b0527e4-c49a-455f-b98e-7bc7a3b8fb1a","value":["1","positive real scalar"],"defaultvalue":"1"},{"name":"WeightQuaternion","purpose":"Weight applied to quaternion distance calculation","htmlid":"mw_e0b35875-9601-4548-a114-5dc7f6ae7623","value":["0.1","positive real scalar"],"defaultvalue":"0.1"}]}],"objectfunctions":[{"title":"","functions":[{"name":"copy","url":"statespacese2.copy.html","description":"Create deep copy of state space object"},{"name":"distance","url":"statespacese2.distance.html","description":"Distance between two states"},{"name":"enforceStateBounds","url":"statespacese2.enforcestatebounds.html","description":"Reduce state to state bounds"},{"name":"interpolate","url":"statespacese2.interpolate.html","description":"Interpolate between states"},{"name":"sampleUniform","url":"statespacese2.sampleuniform.html","description":"Sample state using uniform distribution"}]}],"examples":[{"url":"statespacese3.html#mw_75573a13-0372-4ba1-9642-76bd755aeede","open_command":"openExample('nav\/ValidatePathThrough3DOccupancyMapEnvironmentExample')","title":"Validate Path Through 3-D Occupancy Map Environment"}],"seealso":[{"url":"statespacese2.html","name":"stateSpaceSE2"},{"url":"validatoroccupancymap3d.html","name":"validatorOccupancyMap3D"}]},{"href":"ref\/statistics.html","refentity":[{"type":"method","name":"robotics.Rate.statistics","fcntype":"instancemethod"}],"packagename":"robotics","refpurpose":"Statistics of past execution periods","introduced":"R2016a","description":"This MATLAB function returns statistics of previous periods of code execution.","syntaxgroup":[{"title":"","syntax":["stats = statistics(rate)"]}],"inputgroup":[{"title":"","inputs":[{"name":"rate","purpose":"Rate object","htmlid":"d126e192297","value":["handle"]}]}],"outputs":[{"name":"stats","purpose":"Time execution statistics","htmlid":"d126e192327","value":["structure"]}],"examples":[{"url":"statistics.html#mw_cb5be6ff-2347-4361-aecc-183f0d013ba6","open_command":"openExample('nav_robotics\/GetStatisticsFromRateObjectExecutionExample')","title":"Get Statistics from Rate Object Execution"}],"seealso":[{"url":"ratecontrol.html","name":"rateControl"},{"url":"robotics.rate.waitfor.html","name":"waitfor"}]},{"href":"ref\/stereovslam.addframe.html","refentity":[{"type":"function","name":"addFrame","fcntype":"instancemethod"},{"type":"method","name":"stereovslam.addFrame","fcntype":"instancemethod"}],"refpurpose":"Add pair of color and depth images to stereo visual SLAM object","introduced":"R2025a","description":"This MATLAB function adds the pair of RGB or grayscale stereo images, I1 and I2, to the stereo visual SLAM object vslam.","syntaxgroup":[{"title":"","syntax":["addFrame(vslam,I1,I2)","addFrame(___,gyro,accel)","addFrame(___,DisparityMap=Value)"]}],"inputgroup":[{"title":"","inputs":[{"name":"vslam","purpose":"Stereo visual SLAM object","htmlid":"mw_ecb5c9fe-66b9-47e5-96b6-660c1140eefc_sep_mw_49257396-1938-4e27-9982-8b9c89ce0815","value":["stereovslam object"]},{"name":"I1","purpose":"Image 1","htmlid":"mw_ecb5c9fe-66b9-47e5-96b6-660c1140eefc_sep_mw_eb816541-670f-4bf5-8f53-daaf0cf67076","value":["RGB image","grayscale image"]},{"name":"I2","purpose":"Image 2","htmlid":"mw_cf0a166a-bc08-4ebf-8f75-5c0c776df174","value":["RGB image","grayscale image"]},{"name":"gyro","purpose":"Gyroscope measurement","htmlid":"mw_582291fb-20dd-4e58-a9dd-ce898b3138d0","value":["N-by-3 matrix"]},{"name":"accel","purpose":"Acceleration measurement","htmlid":"mw_c5c80070-471a-4d62-bdcc-a00414cd404a","value":["N-by-3 matrix"]}]}],"examples":[{"url":"stereovslam.addframe.html#mw_3980e9d2-5876-4800-ba1b-4abe95ac930a","open_command":"openExample('slam\/StereoVisualSLAMUsingUTIASDataSetExample')","title":"Stereo Visual SLAM Using UTIAS Data Set"}],"seealso":[{"url":"stereovslam.html","name":"stereovslam"},{"url":"stereovslam.checkstatus.html","name":"checkStatus"},{"url":"stereovslam.hasnewkeyframe.html","name":"hasNewKeyFrame"},{"url":"stereovslam.isdone.html","name":"isDone"},{"url":"stereovslam.mappoints.html","name":"mapPoints"},{"url":"stereovslam.plot.html","name":"plot"},{"url":"stereovslam.poses.html","name":"poses"},{"url":"stereovslam.reset.html","name":"reset"}]},{"href":"ref\/stereovslam.checkstatus.html","refentity":[{"type":"function","name":"checkStatus","fcntype":"instancemethod"},{"type":"method","name":"stereovslam.checkStatus","fcntype":"instancemethod"}],"refpurpose":"Check status of stereo visual SLAM object","introduced":"R2025a","description":"This MATLAB function returns the current status of the stereo visual SLAM object.","syntaxgroup":[{"title":"","syntax":["status = checkStatus(vslam)"]}],"inputgroup":[{"title":"","inputs":[{"name":"vslam","purpose":"Stereo visual SLAM object","htmlid":"mw_a828c07a-704c-49b8-9a42-ff46daca7406_sep_mw_49257396-1938-4e27-9982-8b9c89ce0815","value":["stereovslam object"]}]}],"outputs":[{"name":"status","purpose":"Current status of stereo visual SLAM object","htmlid":"mw_a828c07a-704c-49b8-9a42-ff46daca7406_sep_mw_842541e7-ef33-4efa-931d-904c48edb18a","value":["TrackingLost enumeration","TrackingSuccessful enumeration","FrequentKeyFrames enumeration"]}],"examples":[{"url":"stereovslam.checkstatus.html#mw_93871ff7-f995-4397-9e3d-c5d71a718c79","open_command":"openExample('slam\/StereoVisualSLAMUsingUTIASDataSetExample')","title":"Stereo Visual SLAM Using UTIAS Data Set"}],"seealso":[{"url":"..\/..\/vision\/ref\/stereovslam.html","name":"stereovslam"},{"url":"..\/..\/vision\/ref\/stereovslam.addframe.html","name":"addFrame"},{"url":"..\/..\/vision\/ref\/stereovslam.hasnewkeyframe.html","name":"hasNewKeyFrame"},{"url":"..\/..\/vision\/ref\/stereovslam.isdone.html","name":"isDone"},{"url":"..\/..\/vision\/ref\/stereovslam.mappoints.html","name":"mapPoints"},{"url":"..\/..\/vision\/ref\/stereovslam.plot.html","name":"plot"},{"url":"..\/..\/vision\/ref\/stereovslam.poses.html","name":"poses"},{"url":"..\/..\/vision\/ref\/stereovslam.reset.html","name":"reset"}]},{"href":"ref\/stereovslam.hasnewkeyframe.html","refentity":[{"type":"function","name":"hasNewKeyFrame","fcntype":"instancemethod"},{"type":"method","name":"stereovslam.hasNewKeyFrame","fcntype":"instancemethod"}],"refpurpose":"Check if new key frame added in stereo visual SLAM object","introduced":"R2025a","description":"This MATLAB function returns a logical value that indicates if a new key frame has been added within the stereo visual simultaneous localization and mapping (vSLAM) object vslam.","syntaxgroup":[{"title":"","syntax":["hasAdded = hasNewKeyFrame(vslam)"]}],"inputgroup":[{"title":"","inputs":[{"name":"vslam","purpose":"Stereo visual SLAM object","htmlid":"mw_458242b4-5900-4862-82b3-36db03cd5c15_sep_mw_49257396-1938-4e27-9982-8b9c89ce0815","value":["stereovslam object"]}]}],"outputs":[{"name":"hasAdded","purpose":"New key frame status","htmlid":"mw_29151e0f-c273-495c-b0ca-472fed83022b","value":["false or 0","true or 1"]}],"examples":[{"url":"stereovslam.hasnewkeyframe.html#mw_e0f35e99-30f4-4550-bdc7-5bac24625d49","open_command":"openExample('slam\/StereoVisualSLAMUsingUTIASDataSetExample')","title":"Stereo Visual SLAM Using UTIAS Data Set"}],"seealso":[{"url":"stereovslam.html","name":"stereovslam"},{"url":"stereovslam.addframe.html","name":"addFrame"},{"url":"stereovslam.checkstatus.html","name":"checkStatus"},{"url":"stereovslam.isdone.html","name":"isDone"},{"url":"stereovslam.mappoints.html","name":"mapPoints"},{"url":"stereovslam.plot.html","name":"plot"},{"url":"stereovslam.poses.html","name":"poses"},{"url":"stereovslam.reset.html","name":"reset"}]},{"href":"ref\/stereovslam.isdone.html","refentity":[{"type":"function","name":"isDone","fcntype":"instancemethod"},{"type":"method","name":"stereovslam.isDone","fcntype":"instancemethod"}],"refpurpose":"End-of-processing status for stereo visual SLAM object","introduced":"R2025a","description":"This MATLAB function returns a logical value indicating whether the stereo visual SLAM object has finished processing its frames.","syntaxgroup":[{"title":"","syntax":["done = isDone(vslam)"]}],"inputgroup":[{"title":"","inputs":[{"name":"vslam","purpose":"Stereo visual SLAM object","htmlid":"mw_e2e7158e-c541-400e-84a1-0500398d49aa_sep_mw_49257396-1938-4e27-9982-8b9c89ce0815","value":["stereovslam object"]}]}],"examples":[{"url":"stereovslam.isdone.html#mw_493e3a82-392b-414a-9a67-1f92a6660d08","open_command":"openExample('slam\/StereoVisualSLAMUsingUTIASDataSetExample')","title":"Stereo Visual SLAM Using UTIAS Data Set"}],"seealso":[{"url":"stereovslam.html","name":"stereovslam"},{"url":"stereovslam.addframe.html","name":"addFrame"},{"url":"stereovslam.checkstatus.html","name":"checkStatus"},{"url":"stereovslam.hasnewkeyframe.html","name":"hasNewKeyFrame"},{"url":"stereovslam.mappoints.html","name":"mapPoints"},{"url":"stereovslam.plot.html","name":"plot"},{"url":"stereovslam.poses.html","name":"poses"},{"url":"stereovslam.reset.html","name":"reset"}]},{"href":"ref\/stereovslam.html","refentity":[{"type":"object","name":"stereovslam"},{"type":"function","name":"stereovslam","fcntype":"constructor"}],"refpurpose":"Feature-based visual simultaneous localization and mapping (vSLAM) and visual-inertial sensor fusion with stereo camera","introduced":"R2025a","description":"Use the stereovslam object to perform visual simultaneous localization and mapping (vSLAM) with stereo camera data.","syntaxgroup":[{"title":"","syntax":["vslam = stereovslam(intrinsics,baseline)","vslam = stereovslam(reprojectionMatrix,imageSize)","vslam = stereovslam(___,imuParameters)","vslam = stereovslam(___,PropertyName=Value)"]}],"inputgroup":[{"title":"","inputs":[{"name":"intrinsics","purpose":"Rectified stereo camera intrinsic parameters","htmlid":"mw_6c9fbc31-1970-4df3-9000-3c44f1263a06","value":["cameraIntrinsics object"]},{"name":"baseline","purpose":"Distance between rectified left and right cameras","htmlid":"mw_a9d34ec1-d41a-4cdc-b20e-c89b61e45bb6","value":["nonnegative scalar"]},{"name":"reprojectionMatrix","purpose":"Reprojection matrix","htmlid":"mw_5bc69a84-b0ea-4472-81af-5179dac95547","value":["4-by-4 matrix"]},{"name":"imageSize","purpose":"Image size produced by camera","htmlid":"mw_9febabde-3d8e-4786-b235-10f580ac2553","value":["two-element vector"]},{"name":"imuParameters","purpose":"IMU parameters","htmlid":"mw_a1f117bd-1181-4809-b4e5-1ebabaca2a32_sep_mw_845fd001-88b5-4be4-8eba-3becec592087","value":["factorIMUParameters object"]}]}],"classpropertygroup":[{"title":"Camera Parameters","classproperty":[{"name":"Intrinsics","readonly":true,"purpose":"Camera intrinsic parameters","htmlid":"mw_a1f117bd-1181-4809-b4e5-1ebabaca2a32_sep_mw_a682c3c9-92b5-4cdc-bc24-c63f98851382","value":["cameraIntrinsics object"]},{"name":"Baseline","purpose":"Distance between rectified left and right cameras","htmlid":"mw_dcf4b407-54ab-433f-a0d8-69a350c5133d","value":["nonnegative scalar"]},{"name":"DisparityRange","readonly":true,"purpose":"Disparity range","htmlid":"mw_a8f7a7ce-9ad3-45c6-8ba2-2c1f93c4397f","value":["[0 48]","two-element vector of integers"],"defaultvalue":"[0 48]"},{"name":"UniquenessThreshold","purpose":"Minimum value of uniqueness","htmlid":"mw_7946c4d5-cc74-4a6b-8c16-3fbd76ea3e85","value":["15","nonnegative integer"],"defaultvalue":"15"}]},{"title":"Feature Extraction","classproperty":[{"name":"ScaleFactor","purpose":"Scale factor for image decomposition","htmlid":"mw_a1f117bd-1181-4809-b4e5-1ebabaca2a32_sep_mw_03812a39-3e15-4b59-b3f6-f8d71bde1650","value":["1.2","scalar greater than 1"],"defaultvalue":"1.2"},{"name":"NumLevels","purpose":"Number of decomposition levels","htmlid":"mw_a1f117bd-1181-4809-b4e5-1ebabaca2a32_sep_mw_629e4ba6-f7b2-4aa4-9cb0-b477216a6086","value":["8","integer greater than or equal to 1"],"defaultvalue":"8"},{"name":"MaxNumPoints","purpose":"Maximum number of ORB feature points uniformly extracted from each image","htmlid":"mw_a1f117bd-1181-4809-b4e5-1ebabaca2a32_sep_mw_b481d5a7-a377-473c-aa91-f34b2ee20e81","value":["1000","positive integer"]}]},{"title":"Tracking","classproperty":[{"name":"TrackFeatureRange","purpose":"Range for the number of feature points to identify key frame","htmlid":"mw_a1f117bd-1181-4809-b4e5-1ebabaca2a32_sep_mw_1a6ca41e-6cad-459d-a74f-8c877953d54f","value":["[30 100]","two-element vector of positive integers"]},{"name":"SkipMaxFrames","purpose":"Maximum number of skipped frames","htmlid":"mw_a1f117bd-1181-4809-b4e5-1ebabaca2a32_sep_mw_ed1068b3-dd06-48cc-b751-47475a33b525","value":["20","positive integer"]},{"name":"LoopClosureThreshold","purpose":"Minimum number of matched feature points between loop closure key frames","htmlid":"mw_a1f117bd-1181-4809-b4e5-1ebabaca2a32_sep_mw_6c1b9a99-7d34-4c9b-bdbe-6a1d2b790fe1","value":["60","positive integer"]},{"name":"CustomBagOfFeatures","purpose":"Custom bag of features for loop detection","htmlid":"mw_a1f117bd-1181-4809-b4e5-1ebabaca2a32_sep_mw_d4b0eadc-5e52-424f-9710-38483c5fde94","value":["[]","bagOfFeaturesDBoW object"],"defaultvalue":"[]"},{"name":"Verbose","purpose":"Progress information display","htmlid":"mw_a1f117bd-1181-4809-b4e5-1ebabaca2a32_sep_mw_57f6c40e-b880-4896-b130-cb32c04fff4d","value":["[]","1","2","3"],"defaultvalue":"[]"}]},{"title":"IMU Fusion","classproperty":[{"name":"CameraToIMUTransform","purpose":"IMU sensor transformation","htmlid":"mw_a1f117bd-1181-4809-b4e5-1ebabaca2a32_sep_mw_d6e70d99-c8a0-4090-84f0-30c9cb2073eb","value":["rigidtform3d"]},{"name":"NumPosesThreshold","purpose":"Number of estimated camera poses to trigger camera-IMU alignment","htmlid":"mw_a1f117bd-1181-4809-b4e5-1ebabaca2a32_sep_mw_d33c0a5e-42e7-4708-a41d-56aea2ead91d","value":["30","integer equal to or greater than 2"],"defaultvalue":"30"},{"name":"AlignmentFraction","purpose":"Subset of pose estimates","htmlid":"mw_a1f117bd-1181-4809-b4e5-1ebabaca2a32_sep_mw_f2cb1eb7-2ba9-453c-b686-11864a1f0294","value":["0.8","scalar in the range (0,1]"],"defaultvalue":"0.8"}]}],"objectfunctions":[{"title":"","functions":[{"name":"addFrame","url":"stereovslam.addframe.html","description":"Add pair of color and depth images to stereo visual SLAM object"},{"name":"checkStatus","url":"stereovslam.checkstatus.html","description":"Check status of stereo visual SLAM object"},{"name":"hasNewKeyFrame","url":"stereovslam.hasnewkeyframe.html","description":"Check if new key frame added in stereo visual SLAM object"},{"name":"isDone","url":"stereovslam.isdone.html","description":"End-of-processing status for stereo visual SLAM object"},{"name":"mapPoints","url":"stereovslam.mappoints.html","description":"Build 3-D map of world points from stereo vSLAM object"},{"name":"plot","url":"stereovslam.plot.html","description":"Plot 3-D map points and estimated camera trajectory in stereo visual SLAM "},{"name":"poses","url":"stereovslam.poses.html","description":"Absolute camera poses of stereo key frames"},{"name":"reset","url":"stereovslam.reset.html","description":"Reset stereo visual SLAM object"}]}],"examples":[{"url":"stereovslam.html#mw_9b3d1147-8467-464f-a944-b83290140706","open_command":"openExample('slam\/StereoVisualSLAMUsingUTIASDataSetExample')","title":"Stereo Visual SLAM Using UTIAS Data Set"}],"seealso":[{"url":"monovslam.html","name":"monovslam"},{"url":"..\/..\/vision\/ref\/rgbdvslam.html","name":"rgbdvslam"},{"url":"factorgraph.html","name":"factorGraph"},{"url":"factorimuparameters.html","name":"factorIMUParameters"},{"url":"..\/..\/vision\/ref\/cameraintrinsics.html","name":"cameraIntrinsics"},{"url":"..\/..\/matlab\/ref\/matlab.io.datastore.imagedatastore.html","name":"imageDatastore"},{"url":"..\/..\/vision\/ref\/detectorbfeatures.html","name":"detectORBFeatures"}]},{"href":"ref\/stereovslam.mappoints.html","refentity":[{"type":"function","name":"mapPoints","fcntype":"instancemethod"},{"type":"method","name":"stereovslam.mapPoints","fcntype":"instancemethod"}],"refpurpose":"Build 3-D map of world points from stereo vSLAM object","introduced":"R2025a","description":"This MATLAB function builds a sparse 3-D map of world points, xyzPoints, from the input images in the stereo visual simultaneous localization and mapping (vSLAM) object vslam.","syntaxgroup":[{"title":"","syntax":["xyzPoints = mapPoints(vslam)"]}],"inputgroup":[{"title":"","inputs":[{"name":"vslam","purpose":"Stereo visual SLAM object","htmlid":"mw_fce43fa9-b847-4a03-b220-5ebad44cad49_sep_mw_49257396-1938-4e27-9982-8b9c89ce0815","value":["stereovslam object"]}]}],"outputs":[{"name":"xyzPoints","purpose":"World point coordinates of 3-D map","htmlid":"mw_d82db35f-7081-4f57-93c1-ead7a228039a","value":["M-by-3 matrix"]}],"examples":[{"url":"stereovslam.mappoints.html#mw_9836f3f5-a290-406b-923c-7afca5857e66","open_command":"openExample('slam\/StereoVisualSLAMUsingUTIASDataSetExample')","title":"Stereo Visual SLAM Using UTIAS Data Set"}],"seealso":[{"url":"stereovslam.html","name":"stereovslam"},{"url":"stereovslam.addframe.html","name":"addFrame"},{"url":"stereovslam.checkstatus.html","name":"checkStatus"},{"url":"stereovslam.hasnewkeyframe.html","name":"hasNewKeyFrame"},{"url":"stereovslam.isdone.html","name":"isDone"},{"url":"stereovslam.plot.html","name":"plot"},{"url":"stereovslam.poses.html","name":"poses"},{"url":"stereovslam.reset.html","name":"reset"}]},{"href":"ref\/stereovslam.plot.html","refentity":[{"type":"function","name":"plot","fcntype":"instancemethod"},{"type":"method","name":"stereovslam.plot","fcntype":"instancemethod"}],"refpurpose":"Plot 3-D map points and estimated camera trajectory in stereo visual SLAM","introduced":"R2025a","description":"This MATLAB function plots the 3-D map points and estimated camera trajectory from the visual SLAM object vslam.","syntaxgroup":[{"title":"","syntax":["plot(vslam)","plot(vslam,Name=Value)","ax = plot(___)"]}],"inputgroup":[{"title":"","inputs":[{"name":"vslam","purpose":"Stereo visual SLAM object","htmlid":"mw_2ebdf9b3-2ad6-4774-b549-0953f5a92397_sep_mw_49257396-1938-4e27-9982-8b9c89ce0815","value":["stereovslam object"]}]},{"namevaluepairs":[{"title":"","inputs":[{"name":"MarkerSize","purpose":"Diameter of markers for 3-D map points","htmlid":"mw_2ebdf9b3-2ad6-4774-b549-0953f5a92397_sep_mw_5bb956f8-32f3-462e-a9fd-887ee3bb6a21","value":["6","positive integer"],"defaultvalue":"6"},{"name":"MarkerColor","purpose":"Color of markers for 3-D map points","htmlid":"mw_e4797181-b5e0-4a05-91e9-0d4a5e4c3780","value":["[0 1 0]","RGB triplet","short or long color name"],"defaultvalue":"[0 1 0]"},{"name":"ColorSource","purpose":"Colormap source for the markers","htmlid":"mw_f21b3e8c-3e0a-4c93-9f0f-2668ab106cf6","value":["\"Y\"","\"X\"","\"Z\"","\"MarkerColor\""],"defaultvalue":"\"Y\""},{"name":"CameraSize","purpose":"Width of camera base","htmlid":"mw_6043fc00-1fb6-44f6-a58a-03d92118bc64","value":["0.1","positive scalar"],"defaultvalue":"0.1"},{"name":"CameraColor","purpose":"Color of camera","htmlid":"mw_3263c207-3ad2-4278-b9b1-abc690df926e","value":["[1 0 0]","RGB triplet","short or long color name"],"defaultvalue":"[1 0 0]"},{"name":"Parent","purpose":"Axes for visualization","htmlid":"mw_1da6345a-29c2-44b3-84f2-382fa80fd702","value":["Axes object","UIAxes object"]}]}]}],"outputs":[{"name":"ax","purpose":"Axes handle","htmlid":"mw_3253348b-02ab-4740-b706-0bd96fc1e5a7","value":["Axes graphics object"]}],"examples":[{"url":"stereovslam.plot.html#mw_1f04be8f-718a-475e-b310-705e63a9f304","open_command":"openExample('slam\/StereoVisualSLAMUsingUTIASDataSetExample')","title":"Stereo Visual SLAM Using UTIAS Data Set"}],"seealso":[{"url":"stereovslam.html","name":"stereovslam"},{"url":"stereovslam.addframe.html","name":"addFrame"},{"url":"stereovslam.checkstatus.html","name":"checkStatus"},{"url":"stereovslam.hasnewkeyframe.html","name":"hasNewKeyFrame"},{"url":"stereovslam.isdone.html","name":"isDone"},{"url":"stereovslam.mappoints.html","name":"mapPoints"},{"url":"stereovslam.poses.html","name":"poses"},{"url":"stereovslam.reset.html","name":"reset"}]},{"href":"ref\/stereovslam.poses.html","refentity":[{"type":"function","name":"poses","fcntype":"instancemethod"},{"type":"method","name":"stereovslam.poses","fcntype":"instancemethod"}],"refpurpose":"Absolute camera poses of stereo key frames","introduced":"R2025a","description":"This MATLAB function returns the absolute primary camera poses camPoses of the key frames from the visual simultaneous localization and mapping (vSLAM) object vslam.","syntaxgroup":[{"title":"","syntax":["camPoses = poses(vslam)","[camPoses,keyFrameIDs] = poses(vslam)"]}],"inputgroup":[{"title":"","inputs":[{"name":"vslam","purpose":"Stereo visual SLAM object","htmlid":"mw_9558696d-a449-485a-a518-d31f9ff6a7e1_sep_mw_49257396-1938-4e27-9982-8b9c89ce0815","value":["stereovslam object"]}]}],"outputs":[{"name":"camPoses","purpose":"Absolute primary camera poses of key frames","htmlid":"mw_9558696d-a449-485a-a518-d31f9ff6a7e1_sep_mw_4f3619e5-6b1f-4cca-9b17-fdbe35a4d5c5","value":["M-element array of rigidtform3d objects"]},{"name":"keyFrameIDs","purpose":"Key frame IDs for absolute primary camera poses","htmlid":"mw_9558696d-a449-485a-a518-d31f9ff6a7e1_sep_mw_0b4d223c-07ac-476e-a391-c1b291cca5db","value":["M-element array of integers"]}],"examples":[{"url":"stereovslam.poses.html#mw_b030ebb0-f033-4cd8-bbd5-2f20df59545f","open_command":"openExample('slam\/StereoVisualSLAMUsingUTIASDataSetExample')","title":"Stereo Visual SLAM Using UTIAS Data Set"}],"seealso":[{"url":"stereovslam.html","name":"stereovslam"},{"url":"stereovslam.addframe.html","name":"addFrame"},{"url":"stereovslam.checkstatus.html","name":"checkStatus"},{"url":"stereovslam.hasnewkeyframe.html","name":"hasNewKeyFrame"},{"url":"stereovslam.isdone.html","name":"isDone"},{"url":"stereovslam.mappoints.html","name":"mapPoints"},{"url":"stereovslam.plot.html","name":"plot"},{"url":"stereovslam.reset.html","name":"reset"}]},{"href":"ref\/stereovslam.reset.html","refentity":[{"type":"function","name":"reset","fcntype":"instancemethod"},{"type":"method","name":"stereovslam.reset","fcntype":"instancemethod"}],"refpurpose":"Reset stereo visual SLAM object","introduced":"R2025a","description":"This MATLAB function resets all internal processes and clears all data in the stereovslam object.","syntaxgroup":[{"title":"","syntax":["reset(vslam)"]}],"inputgroup":[{"title":"","inputs":[{"name":"vslam","purpose":"Stereo visual SLAM object","htmlid":"mw_be7481e5-822e-4a4d-a20a-cb87324fdd70_sep_mw_49257396-1938-4e27-9982-8b9c89ce0815","value":["stereovslam object"]}]}],"examples":[{"url":"stereovslam.reset.html#mw_7ccffcb6-bb7a-4b80-bf6a-748477836008","open_command":"openExample('slam\/StereoVisualSLAMUsingUTIASDataSetExample')","title":"Stereo Visual SLAM Using UTIAS Data Set"}],"seealso":[{"url":"stereovslam.html","name":"stereovslam"},{"url":"stereovslam.addframe.html","name":"addFrame"},{"url":"stereovslam.checkstatus.html","name":"checkStatus"},{"url":"stereovslam.hasnewkeyframe.html","name":"hasNewKeyFrame"},{"url":"stereovslam.isdone.html","name":"isDone"},{"url":"stereovslam.mappoints.html","name":"mapPoints"},{"url":"stereovslam.plot.html","name":"plot"},{"url":"stereovslam.poses.html","name":"poses"}]},{"href":"ref\/tform2axang.html","refentity":[{"type":"function","name":"tform2axang","fcntype":"simple"}],"refpurpose":"Convert homogeneous transformation to axis-angle rotation","introduced":"R2015a","description":"This MATLAB function converts the rotational component of a homogeneous transformation, tform, to an axis-angle rotation, axang.","syntaxgroup":[{"title":"","syntax":["axang = tform2axang(tform)"]}],"inputgroup":[{"title":"","inputs":[{"name":"tform","purpose":"Homogeneous transformation","htmlid":"bun4ym2-1-tform","value":["4-by-4-by-n matrix"]}]}],"outputs":[{"name":"axang","purpose":"Rotation given in axis-angle form","htmlid":"bun4ym2-1-axang","value":["n-by-4 matrix"]}],"examples":[{"url":"tform2axang.html#bun4ym3-7","open_command":"openExample('nav_robotics\/ConvertHomogeneousTransformationToAxisAngleRotationExample')","title":"Convert Homogeneous Transformation to Axis-Angle Rotation"}],"seealso":[{"url":"axang2tform.html","name":"axang2tform"},{"url":"se3.html","name":"se3"}]},{"href":"ref\/tform2eul.html","refentity":[{"type":"function","name":"tform2eul","fcntype":"simple"}],"refpurpose":"Extract Euler angles from homogeneous transformation","introduced":"R2015a","description":"This MATLAB function extracts the rotational component from a homogeneous transformation, tform, and returns it as Euler angles, eul.","syntaxgroup":[{"title":"","syntax":["eul = tform2eul(tform)","eul = tform2eul(tform, sequence)","[eul,eulAlt] = tform2eul(___)"]}],"inputgroup":[{"title":"","inputs":[{"name":"tform","purpose":"Homogeneous transformation","htmlid":"buocc9b-1-tform","value":["4-by-4-by-n matrix"]},{"name":"sequence","purpose":"Axis-rotation sequence","htmlid":"buocc9b-1_sep_mw_e1ec5f45-aa43-4f3a-bcc6-bc10914e150d","value":["\"ZYX\"","\"ZYZ\"","\"ZXY\"","\"ZXZ\"","\"YXY\"","\"YZX\"","\"YXZ\"","\"YZY\"","\"XYX\"","\"XYZ\"","\"XZX\"","\"XZY\""],"defaultvalue":"\"ZYX\""}]}],"outputs":[{"name":"eul","purpose":"Euler rotation angles","htmlid":"buocc9b-1-eul","value":["n-by-3 matrix"]},{"name":"eulAlt","purpose":"Alternate Euler rotation angle solution","htmlid":"mw_3b03878d-c27a-48ec-8c8d-54dd94a10214","value":["n-by-3 matrix"]}],"examples":[{"url":"tform2eul.html#buocc9b-7","open_command":"openExample('nav_robotics\/ExtractEulerAnglesFromHomogeneousTransformationMatrixExample')","title":"Extract Euler Angles from Homogeneous Transformation Matrix"},{"url":"tform2eul.html#buocdq0","open_command":"openExample('nav_robotics\/ExtractEulerAnglesFromHomogeneousTransformationMatrixUsiExample')","title":"Extract Euler Angles from Homogeneous Transformation Matrix Using ZYZ Rotation"}],"seealso":[{"url":"eul2tform.html","name":"eul2tform"},{"url":"se2.html","name":"se2"},{"url":"se3.html","name":"se3"}]},{"href":"ref\/tform2quat.html","refentity":[{"type":"function","name":"tform2quat","fcntype":"simple"}],"refpurpose":"Extract quaternion from homogeneous transformation","introduced":"R2015a","description":"This MATLAB function extracts the rotational component from a homogeneous transformation, tform, and returns it as a quaternion, quat.","syntaxgroup":[{"title":"","syntax":["quat = tform2quat(tform)"]}],"inputgroup":[{"title":"","inputs":[{"name":"tform","purpose":"Homogeneous transformation","htmlid":"buoff9k-tform","value":["4-by-4-by-n matrix"]}]}],"outputs":[{"name":"quat","purpose":"Unit quaternion","htmlid":"buoff9k-quat","value":["n-by-4 matrix"]}],"examples":[{"url":"tform2quat.html#buofgt6-2","open_command":"openExample('nav_robotics\/ExtractQuaternionFromHomogeneousTransformationExample')","title":"Extract Quaternion from Homogeneous Transformation"}],"seealso":[{"url":"quat2tform.html","name":"quat2tform"},{"url":"se3.html","name":"se3"},{"url":"quaternion.html","name":"quaternion"}]},{"href":"ref\/tform2rotm.html","refentity":[{"type":"function","name":"tform2rotm","fcntype":"simple"}],"refpurpose":"Extract rotation matrix from homogeneous transformation","introduced":"R2015a","description":"This MATLAB function extracts the rotational component from a homogeneous transformation, tform, and returns it as an orthonormal rotation matrix, rotm.","syntaxgroup":[{"title":"","syntax":["rotm = tform2rotm(tform)"]}],"inputgroup":[{"title":"","inputs":[{"name":"tform","purpose":"Homogeneous transformation","htmlid":"buofidr_sep_buofhs2-tform","value":["3-by-3-by-n array","4-by-4-by-n array"]}]}],"outputs":[{"name":"rotm","purpose":"Rotation matrix","htmlid":"buofidr-rotm","value":["2-by-2-by-n array","3-by-3-by-n array"]}],"examples":[{"url":"tform2rotm.html#buofiia-2","open_command":"openExample('nav_robotics\/ConvertHomogeneousTransformationToRotationMatrixExample')","title":"Convert Homogeneous Transformation to Rotation Matrix"}],"seealso":[{"url":"rotm2tform.html","name":"rotm2tform"},{"url":"se2.html","name":"se2"},{"url":"se3.html","name":"se3"},{"url":"so2.html","name":"so2"},{"url":"so3.html","name":"so3"}]},{"href":"ref\/tform2trvec.html","refentity":[{"type":"function","name":"tform2trvec","fcntype":"simple"}],"refpurpose":"Extract translation vector from homogeneous transformation","introduced":"R2015a","description":"This MATLAB function extracts the Cartesian representation of the translation vector trvec from the homogeneous transformation tform.","syntaxgroup":[{"title":"","syntax":["trvec = tform2trvec(tform)"]}],"inputgroup":[{"title":"","inputs":[{"name":"tform","purpose":"Homogeneous transformation","htmlid":"buofhs2_sep_buofhs2-tform","value":["3-by-3-by-n array","4-by-4-by-n array"]}]}],"outputs":[{"name":"trvec","purpose":"Cartesian representation of translation vector","htmlid":"buofhs2-trvec","value":["n-by-2 matrix","n-by-3 matrix"]}],"examples":[{"url":"tform2trvec.html#buofhzg-2","open_command":"openExample('nav_robotics\/ExtractTranslationVectorFromHomogeneousTransformationExample')","title":"Extract Translation Vector from Homogeneous Transformation"}],"seealso":[{"url":"trvec2tform.html","name":"trvec2tform"},{"url":"se2.html","name":"se2"},{"url":"se3.html","name":"se3"}]},{"href":"ref\/tilt.html","refentity":[{"type":"function","name":"tilt","fcntype":"simple"}],"refpurpose":"Tilt angle","introduced":"R2023b","description":"This MATLAB function returns the tilt angles based on the specified orientations.","syntaxgroup":[{"title":"","syntax":["T = tilt(orientations)"]}],"inputgroup":[{"title":"","inputs":[{"name":"orientations","purpose":"Orientations","htmlid":"mw_79743a4a-e487-453d-a6b9-9fb3a218b8cf","value":["N-by-1 vector of quaternion objects","3-by-3-by-N array of rotation matrices"]}]}],"outputs":[{"name":"T","purpose":"Tilt angles","htmlid":"mw_774ae0ec-338d-4424-b823-142093cf2d92","value":["N-element column vector of scalars in range [0, pi]"]}],"examples":[{"url":"tilt.html#mw_794f166c-fdd0-4daa-9857-335b222f9152","open_command":"openExample('shared_positioning\/ObtainTiltAnglesExample')","title":"Obtain Tilt Angles"}],"seealso":[{"url":"gravitydir.html","name":"gravitydir"},{"url":"compassangle.html","name":"compassAngle"},{"url":"linaccel.html","name":"linaccel"}]},{"href":"ref\/timedelasticband.html","refentity":[{"type":"block","name":"Timed Elastic Band"}],"refpurpose":"Plan path to avoid obstacles and generate time-optimal trajectories","introduced":"R2025a","description":"The Timed Elastic Band (TEB) block computes a feasible path that avoids obstacles while guiding the vehicle towards a specified reference path.","icon":{"fileref":"ref\/controllerteb_block.png","alt":"Timed Elastic Band Block"},"libraries":["Navigation Toolbox \/ Control Algorithms"],"inputgroup":[{"title":"","inputs":[{"name":"Pose","purpose":"Current pose of robot","htmlid":"mw_b5e3afd7-4226-4ded-9fff-d274c6062b5c","value":["three-element vector of form [x y theta]"]},{"name":"Vel","purpose":"Current velocity of robot","htmlid":"mw_8c823256-3f4c-4dc9-b9ba-515a16fd12e1","value":["two-element vector of form [v w]"]},{"name":"MapInfo","purpose":"Local map information","htmlid":"mw_49941062-0a96-494a-a0ff-e79337292f86","value":["bus"]},{"name":"RefPath","purpose":"Reference path to follow","htmlid":"mw_0235517c-f754-4fe3-8d56-e6cd921e58ad","value":["N-by-3 matrix"]},{"name":"MaxVel","purpose":"Maximum limits of linear and angular velocity","htmlid":"mw_70c3719b-be57-48d1-b54e-acccd4cb151a","value":["[0.8, 1.6]","two-element positive vector"],"defaultvalue":"[0.8, 1.6]"},{"name":"MaxRevVel","purpose":"Maximum velocity for reverse motion","htmlid":"mw_a3618ed1-5db3-411c-aecc-79d0cfbcd2a7","value":["NaN","positive scalar"],"defaultvalue":"NaN"},{"name":"MaxAccel","purpose":"Maximum limits of linear and angular acceleration","htmlid":"mw_1aa8fb4c-1872-4ffa-9489-dad341190bb4","value":["[2.4, 4.8]","two-element positive vector"],"defaultvalue":"[2.4, 4.8]"},{"name":"MinTurnRad","purpose":"Minimum turning radius for vehicle on optimized path","htmlid":"mw_eb87cdb9-4d5e-4325-8e91-005af79ff69c","value":["0","nonnegative scalar"],"defaultvalue":"0"},{"name":"TimeWeight","purpose":"Weight for time","htmlid":"mw_023358cd-c952-44f7-a5aa-c02f2f74df27","value":["10","positive scalar"],"defaultvalue":"10"},{"name":"SmoothWeight","purpose":"Weight for smooth motion","htmlid":"mw_60a4e780-00f4-4374-9127-f2e423fa5d1d","value":["1000","positive scalar"],"defaultvalue":"1000"},{"name":"ObstWeight","purpose":"Weight for safe distance from obstacles","htmlid":"mw_529c6eac-017c-416b-b0fb-f5aa75f3a32d","value":["50","positive scalar"],"defaultvalue":"50"},{"name":"ObstMargin","purpose":"Safe distance between robot and obstacles","htmlid":"mw_9d523d16-68fa-4482-b8ec-a2e329574f37","value":["0.5","positive scalar"],"defaultvalue":"0.5"},{"name":"NumIter","purpose":"Number of iterations to optimize trajectory","htmlid":"mw_0321b226-5dff-4121-a6e8-be3d1f40c910","value":["2","positive integer"],"defaultvalue":"2"},{"name":"LookAheadTime","purpose":"Lookahead time","htmlid":"mw_81b198a3-da46-4096-a0a5-c453c49fc848","value":["5","positive scalar"],"defaultvalue":"5"},{"name":"GoalTol","purpose":"Tolerance around goal pose","htmlid":"mw_34e908d8-6a41-4f50-b554-514f066d2afa","value":["[0.1,0.1,0.1]","three-element column vector"],"defaultvalue":"[0.1,0.1,0.1]"},{"name":"RefDelTime","purpose":"Reference delta time","htmlid":"mw_019ff539-39c7-4658-872b-0ab3a82d12d6","value":["0.3","positive scalar"],"defaultvalue":"0.3"}]}],"outputs":[{"name":"VelCmds","purpose":"Velocity commands","htmlid":"mw_ba28f5f1-fbab-4b61-929a-2307c5ad5247","value":["N-by-2 matrix"]},{"name":"Timestamps","purpose":"Timestamps corresponding to velocity commands","htmlid":"mw_4cc1c988-fed2-472b-bcab-2976b0609679","value":["N-element column vector"]},{"name":"OptPath","purpose":"Optimized path","htmlid":"mw_c537fe94-72ea-49ff-8fc1-7ce89aab72af","value":["N-by-3 matrix"]},{"name":"SolnInfo","purpose":"Extra information","htmlid":"mw_c60f100d-a43c-49a3-8a5d-baf964f05a78","value":["bus"]}],"parameters":[{"name":"Sample time (s)","purpose":"Sample time of controller","htmlid":"mw_e8ed9c4a-c99e-4f29-aff1-80291ae4cf47","value":["1","positive scalar"],"defaultvalue":"1"},{"name":"Specify lookahead time using input port","purpose":"Add input port for lookahead time","htmlid":"mw_ba13a12a-3550-4abe-a9b5-cc36c2285c51","value":["off","on"],"defaultvalue":"off"},{"name":"Lookahead time (s)","purpose":"Lookahead time","htmlid":"mw_b752628a-c0dc-45cb-b771-5b0e2aa09694","value":["5","positive scalar"],"defaultvalue":"5"},{"name":"Specify goal tolerance using input port","purpose":"Add input port for goal tolerance","htmlid":"mw_4acd2e56-5eb8-4374-9ebb-d8e6c577faf6","value":["off","on"],"defaultvalue":"off"},{"name":"Goal tolerance ([m m rad])","purpose":"Tolerance around goal pose","htmlid":"mw_1f232e4c-c562-49c1-9d98-3f828f6ca53c","value":["[0.1, 0.1, 0.1]","three-element column vector"],"defaultvalue":"[0.1, 0.1, 0.1]"},{"name":"Shape","purpose":"Shape of robot","htmlid":"mw_52ec6812-e4c3-433b-a3c6-e29b6e466d68","value":["Rectangle","Point"],"defaultvalue":"Rectangle"},{"name":"Dimension ([m m])","purpose":"Size of robot","htmlid":"mw_0487183c-b15b-4ee0-9120-907e501cd2d6","value":["[1, 0.67]","two-element positive vector"],"defaultvalue":"[1, 0.67]"},{"name":"Fixed transform ([m m rad])","purpose":"Transformation matrix","htmlid":"mw_384d8392-6f7f-4fb1-9c23-157e539dfeef","value":["se2","three-element row vector of form [x, y, theta]"],"defaultvalue":"se2"},{"name":"Specify obstacle safety margin using input port","purpose":"Add input port for obstacle safety margin","htmlid":"mw_3b1c739b-4a0b-475b-a77e-f3982e9e79d7","value":["off","on"],"defaultvalue":"off"},{"name":"Obstacle safety margin (m)","purpose":"Safe distance between robot and obstacles","htmlid":"mw_b0ec31a8-7332-4945-b375-2d966d0e1523","value":["0.5","positive scalar"],"defaultvalue":"0.5"},{"name":"Specify max velocity using input port","purpose":"Add input port for maximum velocity","htmlid":"mw_8bb59755-1738-4ccd-a275-aec58d770698","value":["off","on"],"defaultvalue":"off"},{"name":"Maximum velocity ([m\/s rad\/s])","purpose":"Maximum limits of linear and angular velocity","htmlid":"mw_a79bcf74-be20-466f-aa22-f5549da23d55","value":["[0.8, 1.6]","two-element positive vector"],"defaultvalue":"[0.8, 1.6]"},{"name":"Specify max reverse velocity using input port","purpose":"Add input port for maximum reverse velocity","htmlid":"mw_74b2b310-8b15-4ab6-8db9-f131bc499d86","value":["off","on"],"defaultvalue":"off"},{"name":"Maximum reverse velocity (m\/s)","purpose":"Maximum velocity for reverse motion","htmlid":"mw_db67fbee-ee2a-4bc8-9bae-b943f1b2e0e5","value":["NaN","positive scalar"],"defaultvalue":"NaN"},{"name":"Specify max acceleration using input port","purpose":"Add input port for maximum acceleration","htmlid":"mw_ca156e0d-e33f-4e76-b90f-1cb066d0322c","value":["off","on"],"defaultvalue":"off"},{"name":"Maximum acceleration ([m\/s^2 rad\/s^2])","purpose":"Maximum limits of linear and angular acceleration","htmlid":"mw_fa9adc6c-4f27-43d6-a325-9de55ab9b3fd","value":["[2.4,4.8]","two-element positive vector"],"defaultvalue":"[2.4,4.8]"},{"name":"Specify min turning radius using input port","purpose":"Add input port for minimum turning radius","htmlid":"mw_b2e3b220-ec8f-44a0-a5b7-257eabcace65","value":["off","on"],"defaultvalue":"off"},{"name":"Minimum turning radius (m)","purpose":"Minimum turning radius for vehicle on optimized path","htmlid":"mw_2548bce6-35fe-4d9f-9ac7-5172a882e610","value":["0","nonnegative scalar"],"defaultvalue":"0"},{"name":"Specify reference delta time using input port","purpose":"Add input port for reference delta time","htmlid":"mw_89fdeef7-198e-4464-8092-260281a52128","value":["off","on"],"defaultvalue":"off"},{"name":"Reference delta time (s)","purpose":"Reference delta time","htmlid":"mw_e6b4cee2-8c94-4c1d-86e5-88304dc1d5d6","value":["0.3","positive scalar"],"defaultvalue":"0.3"},{"name":"Specify number of iterations using input port","purpose":"Add input port for number of iterations","htmlid":"mw_0df17bd6-e875-4656-93e4-7b7a56402383","value":["off","on"],"defaultvalue":"off"},{"name":"Number of iterations","purpose":"Number of iterations to optimize trajectory","htmlid":"mw_e87920a1-9a0a-4bf1-93a2-8c021659c42b","value":["2","positive integer"],"defaultvalue":"2"},{"name":"Specify time weight using input port","purpose":"Add input port for time weight","htmlid":"mw_ecf4e0c4-653c-4561-aa49-76ea0d9f7e0d","value":["off","on"],"defaultvalue":"off"},{"name":"Time weight","purpose":"Cost function weight for time","htmlid":"mw_54f90314-0898-4a2d-8c59-5ccaf2524c63","value":["10","positive integer"],"defaultvalue":"10"},{"name":"Specify smoothness weight using input port","purpose":"Add input port for smoothness weight","htmlid":"mw_5111eb20-f5ee-4ef0-b1c4-ace88db76b71","value":["off","on"],"defaultvalue":"off"},{"name":"Smoothness weight","purpose":"Weight for smooth motion","htmlid":"mw_39b95755-3a68-4f33-adc2-d24d324bc4c0","value":["1000","positive scalar"],"defaultvalue":"1000"},{"name":"Specify obstacle weight using input port","purpose":"Add input port for obstacle weight","htmlid":"mw_f60cee25-01db-4797-a517-93ce1cad1571","value":["off","on"],"defaultvalue":"off"},{"name":"Obstacle weight","purpose":"Weight for safe distance from obstacles","htmlid":"mw_9bc1a5d9-70ac-4dd4-8831-5b9d37f49a48","value":["50","positive scalar"],"defaultvalue":"50"}],"examples":[{"url":"..\/ug\/avoid-obstacles-using-teb-local-planner-in-simulink.html","open_command":"openExample('nav\/AvoidObstaclesUsingTEBLocalPlannerInSimulinkExample')","title":"Avoid Obstacles Using TEB Local Planner in Simulink"}],"seealso":[{"url":"controllerteb.html","name":"controllerTEB"},{"url":"controllervfh-system-object.html","name":"controllerVFH"},{"url":"controllerpurepursuit-system-object.html","name":"controllerPurePursuit"},{"url":"purepursuit.html","name":"Pure Pursuit"},{"url":"vectorfieldhistogram.html","name":"Vector Field Histogram"}]},{"href":"ref\/timescope.generatescript.html","refentity":[{"type":"function","name":"generateScript","fcntype":"instancemethod"},{"type":"method","name":"timescope.generateScript","fcntype":"instancemethod"}],"refpurpose":"Generate MATLAB script to create scope with current settings","introduced":"R2020a","description":"This MATLAB function generates a MATLAB script that can re-create a timescope object with the current settings in the scope.","syntaxgroup":[{"title":"","syntax":["generateScript(scope)"]}],"inputgroup":[{"title":"","inputs":[{"name":"scope","purpose":"object","htmlid":"mw_cbf4a65b-7a61-49f7-beab-b4508fea96fb","value":["timescope object"]}]}],"examples":[{"url":"timescope.generatescript.html#mw_f140ff6f-4335-4078-a08c-451851ea8e47","title":"Generate Script from timescope"}],"seealso":[{"url":"timescope.hide.html","name":"hide"},{"url":"timescope.show.html","name":"show"},{"url":"timescope.isvisible.html","name":"isVisible"},{"url":"timescope.html","name":"timescope"}]},{"href":"ref\/timescope.hide.html","refentity":[{"type":"function","name":"hide","fcntype":"instancemethod"},{"type":"method","name":"timescope.hide","fcntype":"instancemethod"}],"refpurpose":"Hide scope window","introduced":"R2020a","description":"This MATLAB function hides the scope window.","syntaxgroup":[{"title":"","syntax":["hide(scope)"]}],"inputgroup":[{"title":"","inputs":[{"name":"scope","purpose":"Scope object","htmlid":"d126e225204","value":["timescope object"]}]}],"examples":[{"url":"timescope.hide.html#mw_8b5caaaf-f6b6-4bc0-b47e-1314031f165d","open_command":"openExample('dsp_nav_fusion\/ViewSineWaveOnTimeScopeExample')","title":"View Sine Wave on Time Scope"}],"seealso":[{"url":"timescope.show.html","name":"show"},{"url":"timescope.isvisible.html","name":"isVisible"},{"url":"timescope.generatescript.html","name":"generateScript"},{"url":"timescope.html","name":"timescope"}]},{"href":"ref\/timescope.isvisible.html","refentity":[{"type":"function","name":"isVisible","fcntype":"instancemethod"},{"type":"method","name":"timescope.isVisible","fcntype":"instancemethod"}],"refpurpose":"Determine visibility of scope","introduced":"R2020a","description":"This MATLAB function returns the visibility of the scope as logical, with 1 (true) for visible.","syntaxgroup":[{"title":"","syntax":["visibility = isVisible(scope)"]}],"inputgroup":[{"title":"","inputs":[{"name":"scope","purpose":"Scope object","htmlid":"d126e225345","value":["timescope object"]}]}],"outputs":[{"name":"visibility","purpose":"Scope visibility","htmlid":"d126e225371","value":["1","0"]}],"examples":[{"url":"timescope.isvisible.html#mw_8acb2de7-4d10-4341-b0e0-db1783170c62","open_command":"openExample('dsp_nav_fusion\/ViewSineWaveOnTimeScopeExample')","title":"View Sine Wave on Time Scope"}],"seealso":[{"url":"timescope.hide.html","name":"hide"},{"url":"timescope.show.html","name":"show"},{"url":"timescope.generatescript.html","name":"generateScript"},{"url":"timescope.html","name":"timescope"}]},{"href":"ref\/timescope.html","refentity":[{"type":"object","name":"timescope"},{"type":"function","name":"timescope","fcntype":"constructor"}],"refpurpose":"Display time-domain signals","introduced":"R2020a","description":"The timescope object displays signals in the time domain.","syntaxgroup":[{"title":"","syntax":["scope = timescope","scope = timescope(Name=Value)"]}],"classpropertygroup":[{"title":"Frequently Used","classproperty":[{"name":"SampleRate","purpose":"Sample rate of inputs","htmlid":"mw_2ca5c961-0254-4f1e-868f-c4a478ca3e02","value":["1","finite numeric scalar","vector"],"defaultvalue":"1"},{"name":"TimeSpanSource","purpose":"Source of time span","htmlid":"mw_9055a22f-240c-4cf7-827f-7f2c5c453f54","value":["\"auto\"","\"property\""],"defaultvalue":"\"auto\""},{"name":"TimeSpan","purpose":"Time span","htmlid":"mw_2f80befb-3159-4fdf-a303-872fe692351d","value":["10","positive scalar"],"defaultvalue":"10"},{"name":"TimeSpanOverrunAction","purpose":"Data overrun behavior","htmlid":"mw_73714a9e-39d5-425a-a1a9-5d5d5d9495b5","value":["\"scroll\"","\"wrap\""],"defaultvalue":"\"scroll\""},{"name":"PlotType","purpose":"Type of plot","htmlid":"mw_fe5c8317-8128-4d95-bf47-7d460d41f60a","value":["\"line\"","\"stairs\"","cell array of character vectors","array of strings"],"defaultvalue":"\"line\""},{"name":"AxesScaling","purpose":"Axes scaling mode","htmlid":"mw_65123295-d4b8-4a83-adf2-af3b3d76cac8","value":["\"onceatstop\"","\"auto\"","\"manual\"","\"updates\""],"defaultvalue":"\"onceatstop\""},{"name":"AxesScalingNumUpdates","purpose":"Number of updates before scaling","htmlid":"mw_04e27a4f-b0ee-44e1-bf78-0576862efac8","value":["100","real positive integer"],"defaultvalue":"100"}]},{"title":"Advanced","classproperty":[{"name":"LayoutDimensions","purpose":"Display layout grid dimensions","htmlid":"mw_857deac8-afc7-4e82-bedd-d2237b8753fc","value":["[1,1]","[numberOfRows, numberOfColumns]"],"defaultvalue":"[1,1]"},{"name":"TimeUnits","purpose":"Units of x-axis","htmlid":"mw_21351ccf-f514-44bf-a27f-ed73cdd897cc","value":["\"seconds\"","\"none\"","\"metric\""],"defaultvalue":"\"seconds\""},{"name":"TimeDisplayOffset","purpose":"Offset x-axis limits","htmlid":"mw_9de653ae-452d-4b17-a897-fc86674908c1","value":["0","scalar","vector"],"defaultvalue":"0"},{"name":"TimeAxisLabels","purpose":"Time-axis labels","htmlid":"mw_81eef411-e016-42e6-863f-ffa2931930b9","value":["\"all\"","\"bottom\"","\"none\""],"defaultvalue":"\"all\""},{"name":"MaximizeAxes","purpose":"Maximize axes control","htmlid":"mw_5b075661-6e3e-4e57-a37c-8586c53d5d62","value":["\"auto\"","\"on\"","\"off\""],"defaultvalue":"\"auto\""},{"name":"BufferLength","purpose":"Buffer length","htmlid":"mw_dfbe05be-ffaa-4e07-82c6-fece78ce029e","value":["50000","positive integer"],"defaultvalue":"50000"}]},{"title":"Measurements","classproperty":[{"name":"MeasurementChannel","purpose":"Channel for which to obtain measurements","htmlid":"mw_e415e96d-3c45-4874-a8c4-8238e796eb8d","value":["1","positive integer"],"defaultvalue":"1"},{"name":"BilevelMeasurements","purpose":"Bilevel measurements","htmlid":"mw_8d09d1b5-3bb8-441d-919b-26fa8768ad2c","value":["BilevelMeasurementsConfiguration object"]},{"name":"CursorMeasurements","purpose":"Cursor measurements","htmlid":"mw_3afec663-c5fe-4120-be1c-f5142f5ba6e6","value":["CursorMeasurementsConfiguration object"]},{"name":"PeakFinder","purpose":"Peak finder measurements","htmlid":"mw_03508d10-d904-4de1-bdae-610706b11276","value":["PeakFinderConfiguration object"]},{"name":"SignalStatistics","purpose":"Signal statistics measurements","htmlid":"mw_c25ad0e6-7798-4e91-9ed1-adeee34be5b7","value":["SignalStatisticsConfiguration object"]},{"name":"Trigger","purpose":"Trigger measurements","htmlid":"mw_a68c07f2-836c-4ca8-a6e2-ca17e5063336","value":["TriggerConfiguration object"]}]},{"title":"Visualization","classproperty":[{"name":"Name","purpose":"Window name","htmlid":"mw_abb4892c-a6f6-4672-9124-8fb38b41843f","value":["\"Time Scope\"","character vector","string scalar"],"defaultvalue":"\"Time Scope\""},{"name":"Position","purpose":"Window position","htmlid":"mw_f5dce985-7167-429d-86d7-654b30570c62","value":["screen center","[left bottom width height]"],"defaultvalue":"screen center"},{"name":"ChannelNames","purpose":"Channel names","htmlid":"mw_8da17d6d-f295-4602-9195-0447c94e3007","value":["{''}","cell array of character vectors","array of strings"],"defaultvalue":"{''}"},{"name":"ActiveDisplay","purpose":"Active display for setting properties","htmlid":"mw_629a2d98-fbbc-41fe-9b66-275dde98e36a","value":["1","integer"],"defaultvalue":"1"},{"name":"Title","purpose":"Display title","htmlid":"mw_71448de3-2e74-4f8d-9c13-84858fc561e5","value":["''","character vector","string scalar"],"defaultvalue":"''"},{"name":"YLabel","purpose":"y-axis label","htmlid":"mw_25c7f7d6-6d95-45e2-ac2a-3e74bd733778","value":["\"Amplitude\"","character vector","string scalar"],"defaultvalue":"\"Amplitude\""},{"name":"YLimits","purpose":"y-axis limits","htmlid":"mw_20f36192-524b-423e-a881-9f6028e8975c","value":["[-10,10]","[ymin, ymax]"],"defaultvalue":"[-10,10]"},{"name":"ShowLegend","purpose":"Show legend","htmlid":"mw_1e77c663-e0fb-48c0-a8c8-b400c4cbf2d8","value":["false","true"],"defaultvalue":"false"},{"name":"ShowGrid","purpose":"Grid visibility","htmlid":"mw_322ee9ff-6cf5-44e5-8585-6d49fd5f916f","value":["false","true"],"defaultvalue":"true"},{"name":"PlotAsMagnitudePhase","purpose":"Plot signal as magnitude and phase","htmlid":"mw_8bbbc0d0-0dac-409d-8174-71386133c943","value":["false","true"],"defaultvalue":"false"}]},{"title":"Color and Styling","classproperty":[{"name":"BackgroundColor","purpose":"Background color in scope","htmlid":"mw_af6b1da3-a330-47f9-841d-3a9e5a34b2ed","value":["[33 33 33]\/255","RGB triplet","hexadecimal color code","\"r\"","\"g\"","\"b\"","..."],"defaultvalue":"[33 33 33]\/255"},{"name":"AxesColor","purpose":"Color of axes in scope","htmlid":"mw_064ab409-b296-41d0-90ef-0e40d8099fb8","value":["[18 18 18]\/255","RGB triplet","hexadecimal color code","\"r\"","\"g\"","\"b\"","..."],"defaultvalue":"[18 18 18]\/255"},{"name":"FontColor","purpose":"Color of labels in scope","htmlid":"mw_6b14cab8-455d-4608-98db-64d45b274308","value":["[217 217 217]\/255","RGB triplet","hexadecimal color code","\"r\"","\"g\"","\"b\"","..."],"defaultvalue":"[217 217 217]\/255"},{"name":"FontSize","purpose":"Scope font size","htmlid":"mw_8d672000-3671-47af-8e3c-90ba4d5fbaf5","value":["8.5","positive scalar"],"defaultvalue":"8.5"},{"name":"LineVisible","purpose":"Visibility of plot lines in scope","htmlid":"mw_7b47b4d7-8290-4d3a-89bd-d96eb87b581c","value":["\"on\" or 1","\"off\" or 0","vector of logical values"],"defaultvalue":"\"on\" or 1"},{"name":"LineStyle","purpose":"Scope line style","htmlid":"mw_3024c78e-b661-4b01-8dce-b70dd78417d2","value":["\"-\"","\"--\"","\":\"","\"-.\"","\"none\"","cell array or array"],"defaultvalue":"\"-\""},{"name":"LineWidth","purpose":"Scope line width","htmlid":"mw_3b0e3c56-42da-4c27-b69f-689229666ead","value":["1.5","positive scalar","vector of positive scalar values"],"defaultvalue":"1.5"},{"name":"LineColor","purpose":"Scope line color","htmlid":"mw_a7f378e7-d7e7-4ec8-ba91-b8e7c86da323","value":["colororder(\"default\")","matrix of RGB triplets","array of color names"],"defaultvalue":"colororder(\"default\")"},{"name":"LineMarker","purpose":"Scope line marker","htmlid":"mw_c2cfe802-7695-4539-898d-da3c5b930bbd","value":["\"none\"","\"o\"","\"+\"","\"*\"","\".\"","..."]}]}],"objectfunctions":[{"title":"","functions":[{"name":"hide","url":"timescope.hide.html","description":"Hide scope window"},{"name":"show","url":"timescope.show.html","description":"Display scope window"},{"name":"isVisible","url":"timescope.isvisible.html","description":"Determine visibility of scope"},{"name":"generateScript","url":"timescope.generatescript.html","description":"Generate MATLAB script to create scope with current settings"},{"name":"printToFigure","url":"timescope.printtofigure.html","description":"Print scope window to MATLAB figure"},{"name":"step","url":"..\/..\/matlab\/ref\/step.html","description":"Run System object algorithm"},{"name":"release","url":"..\/..\/matlab\/ref\/matlab.system.releasesystemobject.html","description":"Release resources and allow changes to System object property values and input characteristics"},{"name":"reset","url":"..\/..\/matlab\/ref\/resetsystemobject.html","description":"Reset internal states of System object"}]}],"examples":[{"url":"timescope.html#mw_2dd45df7-4194-4738-931f-1ee8b941b2d9","open_command":"openExample('dsp_nav_fusion\/ViewSineWaveOnTimeScopeExample')","title":"View Sine Wave on Time Scope"},{"url":"timescope.html#mw_a81ff569-aa44-4488-9e33-4748209bdade","open_command":"openExample('dsp_nav_fusion\/UseBilevelMeasurementsPanelWithClockInputSignalExample')","title":"Use Bilevel Measurements Panel with Clock Input Signal"},{"url":"timescope.html#mw_2fd5662f-33ea-4d33-af00-7a5c7e30bfc4","open_command":"openExample('dsp_nav_fusion\/ObtainBilevelMeasProgramUsingTimeScopeMATLABObjectExample')","title":"Configure Bilevel Measurements Programmatically in Time Scope MATLAB Object"},{"url":"timescope.html#mw_8dfb8695-0141-45b5-b1e2-af3dd767d096","open_command":"openExample('dsp_nav_fusion\/ObtainSignalStatsProgrammUsingTimeScopeMATLABObjectExample')","title":"Configure Signal Statistics Programmatically in Time Scope MATLAB Object"},{"url":"timescope.html#mw_b005552e-a60f-4f1a-9b32-23642c0f96db","open_command":"openExample('dsp_nav_fusion\/VisualizeMultipleInputsWithDifferentSampleRatesExample')","title":"Visualize Multiple Inputs with Different Sample Rates"},{"url":"timescope.html#mw_ae6351af-1549-4a1d-bd90-20f5aee2912c","open_command":"openExample('dsp_nav_fusion\/UseMultipleAxesOnScopeExample')","title":"Use Multiple Axes on Scope"},{"url":"timescope.html#mw_bceb5334-5a10-47f1-8130-2e8f4d8bc012","open_command":"openExample('dsp_nav_fusion\/ViewSineWaveInputSignalsAtDifferentSampleRatesAndOffsetsExample')","title":"View Sine Wave Input Signals at Different Sample Rates and Offsets"},{"url":"timescope.html#mw_07f0adb5-79f4-4127-ae87-bc2fc5b51758","open_command":"openExample('dsp_nav_fusion\/DisplayComplexValuedInputSignalExample')","title":"Display Complex-Valued Input Signal"},{"url":"timescope.html#mw_1a28e536-c087-443b-9aa3-eb9ac4e8b425","open_command":"openExample('dsp_nav_fusion\/DisplayInputSignalOfChangingSizeExample')","title":"Display Input Signal of Changing Size"},{"url":"timescope.html#mw_2d755c75-0fbe-49ad-81cb-07a653adc455","open_command":"openExample('dsp_nav_fusion\/FindHeartRateUsingPeakFinderPanelWithECGInputSignalExample')","title":"Find Heart Rate Using Peak Finder Panel with ECG Input Signal"},{"url":"timescope.html#mw_c603551c-8ccf-4a10-affb-7bd28dd8d524","open_command":"openExample('dsp_nav_fusion\/CustomizeColorAndStyleSettingsOfTimescopeObjectExample')","title":"Customize Color and Style Settings of timescope Object"},{"url":"timescope.html#mw_b85ce0fb-97ea-41e6-af26-e9312aecd886","open_command":"openExample('dsp_nav_fusion\/PrintTimeScopeDisplayToMATLABFigureExample')","title":"Print Time Scope Display to MATLAB Figure"}],"seealso":[{"url":"timescope.printtofigure.html","name":"printToFigure"}]},{"href":"ref\/timescope.printtofigure.html","refentity":[{"type":"function","name":"printToFigure","fcntype":"instancemethod"},{"type":"method","name":"timescope.printToFigure","fcntype":"instancemethod"},{"type":"method","name":"spectrumAnalyzer.printToFigure","fcntype":"instancemethod"},{"type":"method","name":"dsp.ArrayPlot.printToFigure","fcntype":"instancemethod"},{"type":"method","name":"dsp.DynamicFilterVisualizer.printToFigure","fcntype":"instancemethod"}],"packagename":"dsp","refpurpose":"Print scope window to MATLAB figure","introduced":"R2023b","description":"This MATLAB function prints the display window of the scope object to a new MATLAB figure.","syntaxgroup":[{"title":"","syntax":["printToFigure(scope)","fig = printToFigure(scope)","fig = printToFigure(scope,Visible=flag)"]}],"inputgroup":[{"title":"","inputs":[{"name":"scope","purpose":"Scope object","htmlid":"mw_a6942fe7-6b96-4b34-9e12-830049ca02bc","value":["timescope object"]},{"name":"Visible","purpose":"Flag to show MATLAB figure","htmlid":"mw_9466f4cd-e314-494d-a59f-b8dfd230eeda","value":["true or 1","false or 0"],"defaultvalue":"true or 1"}]}],"outputs":[{"name":"fig","purpose":"Handle to MATLAB figure","htmlid":"mw_645b3a59-8599-4f26-b16b-52b0b65f5c39","value":["Figure object"]}],"examples":[{"url":"timescope.printtofigure.html#mw_e5b7f2c5-70c1-4733-821e-675f69d04da0","open_command":"openExample('dsp_nav_fusion\/PrintTimeScopeDisplayToMATLABFigureExample')","title":"Print Time Scope Display to MATLAB Figure"}],"seealso":[{"url":"timescope.html","name":"timescope"}]},{"href":"ref\/timescope.show.html","refentity":[{"type":"function","name":"show","fcntype":"instancemethod"},{"type":"method","name":"timescope.show","fcntype":"instancemethod"}],"refpurpose":"Display scope window","introduced":"R2020a","description":"This MATLAB function shows the scope window.","syntaxgroup":[{"title":"","syntax":["show(scope)"]}],"inputgroup":[{"title":"","inputs":[{"name":"scope","purpose":"Scope object","htmlid":"mw_ea33632e-90cb-4f9c-8b01-1b10f455310f","value":["timescope object"]}]}],"examples":[{"url":"timescope.show.html#mw_88913581-b427-4086-87db-3af0708dd9b5","open_command":"openExample('dsp_nav_fusion\/ViewSineWaveOnTimeScopeExample')","title":"View Sine Wave on Time Scope"}],"seealso":[{"url":"timescope.hide.html","name":"hide"},{"url":"timescope.isvisible.html","name":"isVisible"},{"url":"timescope.generatescript.html","name":"generateScript"},{"url":"timescope.html","name":"timescope"}]},{"href":"ref\/trajectorygeneratorfrenet.connect.html","refentity":[{"type":"function","name":"connect","fcntype":"instancemethod"},{"type":"method","name":"trajectoryGeneratorFrenet.connect","fcntype":"instancemethod"}],"refpurpose":"Connect initial and terminal Frenet states","introduced":"R2020b","description":"This MATLAB function connects the specified initial Frenet states to the specified terminal states over a span of time in seconds.","syntaxgroup":[{"title":"","syntax":["frenetTrajectory = connect(connectorFrenet,initialState,terminalState,timeSpan)","[___,globalTrajectory] = connect(___)"]}],"inputgroup":[{"title":"","inputs":[{"name":"connectorFrenet","purpose":"Frenet trajectory generator","htmlid":"mw_815a426a-797d-445f-9f68-c565e43d6292","value":["trajectoryGeneratorFrenet object"]},{"name":"initialState","purpose":"Initial Frenet states","htmlid":"mw_c8fdd400-6276-49bb-a3c1-4e1a25d2c640","value":["n-by-6 numeric matrix"]},{"name":"terminalState","purpose":"Final Frenet states","htmlid":"mw_740006a9-91c8-4ded-b4c8-21796c0f04ba","value":["n-by-6 numeric matrix"]},{"name":"timeSpan","purpose":"Time horizon for all trajectories","htmlid":"mw_12977eb9-718d-4418-8197-b66bb0f69352","value":["positive scalar in seconds"]}]}],"outputs":[{"name":"frenetTrajectory","purpose":"Frenet trajectories","htmlid":"mw_012dce90-a7c6-438f-b886-28fff469aa93","value":["structure","structure array"]},{"name":"globalTrajectory","purpose":"Global trajectories","htmlid":"mw_aa82c7f1-e833-43db-9d02-2300374f7b52","value":["structure","structure array"]}],"examples":[{"url":"trajectorygeneratorfrenet.connect.html#mw_bb8f7d48-c3c4-4815-acbb-74a45dca1ef8","open_command":"openExample('nav\/GenerateAlternativeTrajectoriesForReferencePathExample')","title":"Generate Alternative Trajectories for Reference Path"}],"seealso":[{"url":"referencepathfrenet.html","name":"referencePathFrenet"},{"url":"trajectorygeneratorfrenet.html","name":"trajectoryGeneratorFrenet"},{"url":"referencepathfrenet.closestpoint.html","name":"closestPoint"},{"url":"referencepathfrenet.closestpointstosequence.html","name":"closestPointsToSequence"},{"url":"referencepathfrenet.closestprojections.html","name":"closestProjections"},{"url":"referencepathfrenet.curvature.html","name":"curvature"},{"url":"referencepathfrenet.changeincurvature.html","name":"changeInCurvature"},{"url":"referencepathfrenet.tangentangle.html","name":"tangentAngle"},{"url":"referencepathfrenet.frenet2global.html","name":"frenet2global"},{"url":"referencepathfrenet.global2frenet.html","name":"global2frenet"},{"url":"referencepathfrenet.interpolate.html","name":"interpolate"},{"url":"referencepathfrenet.show.html","name":"show"}]},{"href":"ref\/trajectorygeneratorfrenet.createparallelstate.html","refentity":[{"type":"function","name":"createParallelState","fcntype":"instancemethod"},{"type":"method","name":"trajectoryGeneratorFrenet.createParallelState","fcntype":"instancemethod"}],"refpurpose":"Create states using Frenet and global parameters","introduced":"R2022a","description":"This MATLAB function takes an arclength S, lateral deviation L, body velocity V, and body acceleration A, and returns the global states globalState, Frenet states frenetState which run parallel to the reference path, and the lateral time derivatives of the Frenet states latTimeDerivatives.","syntaxgroup":[{"title":"","syntax":["[globalState,frenetState,latTimeDerivatives] = createParallelState(refPath,S,L,V,A)","[_] = createParallelState(refPath,S,L,V,A,invertHeading)"]}],"inputgroup":[{"title":"","inputs":[{"name":"refPath","purpose":"Reference path","htmlid":"mw_bbd09ad3-3852-4df1-83c9-323454b1310b_sep_mw_7ca4f8b5-8b57-496b-bfec-36958b45fda1","value":["referencePathFrenet object"]},{"name":"S","purpose":"Path arclengths","htmlid":"mw_bbd09ad3-3852-4df1-83c9-323454b1310b_sep_mw_ff6861b7-228e-4ea5-a26a-c8b7c70baf1b","value":["N-element column vector"]},{"name":"L","purpose":"Lateral deviations","htmlid":"mw_59da03cd-4879-4295-b5a0-73b7f44abca6","value":["N-element column vector"]},{"name":"V","purpose":"Body velocity","htmlid":"mw_1edbf466-0c59-4c59-a535-bf657f140960","value":["N-element column vector"]},{"name":"A","purpose":"Body acceleration","htmlid":"mw_abaedb2f-3e6e-4358-998b-d99cf559ed33","value":["N-element column vector"]}]},{"title":"","inputs":[{"name":"invertHeading","purpose":"Invert heading flag","htmlid":"mw_7eaaa27f-4a8f-4b16-8f98-93648f3ee16f","value":["N-element column vector"]}]}],"outputs":[{"name":"globalState","purpose":"States in global coordinate frame","htmlid":"mw_bbd09ad3-3852-4df1-83c9-323454b1310b_sep_mw_0f060c9c-37a4-44f4-8f78-edb39f885f57","value":["P-by-6 numeric matrix"]},{"name":"frenetState","purpose":"States in Frenet coordinate frame","htmlid":"mw_bbd09ad3-3852-4df1-83c9-323454b1310b_sep_mw_d3a9d3b3-361b-44b8-936f-6b67ee68b7d2","value":["P-by-6 numeric matrix"]},{"name":"latTimeDerivatives","purpose":"Lateral time derivatives","htmlid":"mw_ff471fec-3312-4047-aaaa-487f11e999bf","value":["N-by-3 matrix"]}],"seealso":[{"url":"referencepathfrenet.html","name":"referencePathFrenet"},{"url":"trajectorygeneratorfrenet.html","name":"trajectoryGeneratorFrenet"},{"url":"referencepathfrenet.closestpoint.html","name":"closestPoint"},{"url":"referencepathfrenet.closestpointstosequence.html","name":"closestPointsToSequence"},{"url":"referencepathfrenet.closestprojections.html","name":"closestProjections"},{"url":"referencepathfrenet.curvature.html","name":"curvature"},{"url":"referencepathfrenet.changeincurvature.html","name":"changeInCurvature"},{"url":"referencepathfrenet.tangentangle.html","name":"tangentAngle"},{"url":"referencepathfrenet.frenet2global.html","name":"frenet2global"},{"url":"referencepathfrenet.global2frenet.html","name":"global2frenet"},{"url":"referencepathfrenet.interpolate.html","name":"interpolate"},{"url":"referencepathfrenet.show.html","name":"show"}]},{"href":"ref\/trajectorygeneratorfrenet.html","refentity":[{"type":"object","name":"trajectoryGeneratorFrenet"},{"type":"function","name":"trajectoryGeneratorFrenet","fcntype":"constructor"}],"refpurpose":"Find optimal trajectory along reference path","introduced":"R2020b","description":"The trajectoryGeneratorFrenet object generates alternate trajectories using fourth or fifth-order polynomials relative to a given reference path.","syntaxgroup":[{"title":"","syntax":["connectorFrenet = trajectoryGeneratorFrenet(refPath)","connectorFrenet = trajectoryGeneratorFrenet(refPath,'TimeResolution',timeValue)"]}],"classpropertygroup":[{"classproperty":[{"name":"TimeResolution","purpose":"Discretization time interval between sampled Frenet states","htmlid":"mw_d7aef8ca-b0d2-49a7-b727-acc24a0b321f","value":["0.1","positive scalar in seconds"],"defaultvalue":"0.1"},{"name":"ReferencePath","purpose":"Reference path in Frenet coordinates","htmlid":"mw_5c4301be-544b-424c-8c3b-6f770570257e","value":["referencePathFrenet"]}]}],"objectfunctions":[{"title":"","functions":[{"name":"connect","url":"trajectorygeneratorfrenet.connect.html","description":"Connect initial and terminal Frenet states"},{"name":"createParallelState","url":"trajectorygeneratorfrenet.createparallelstate.html","description":"Create states using Frenet and global parameters"}]}],"examples":[{"url":"trajectorygeneratorfrenet.html#mw_b165e171-dd61-4c68-8c8e-d11692fb6187","open_command":"openExample('nav\/GenerateAlternativeTrajectoriesForReferencePathExample')","title":"Generate Alternative Trajectories for Reference Path"}],"seealso":[{"url":"referencepathfrenet.html","name":"referencePathFrenet"},{"url":"trajectorygeneratorfrenet.connect.html","name":"connect"},{"url":"referencepathfrenet.closestpoint.html","name":"closestPoint"},{"url":"referencepathfrenet.closestpointstosequence.html","name":"closestPointsToSequence"},{"url":"referencepathfrenet.closestprojections.html","name":"closestProjections"},{"url":"referencepathfrenet.curvature.html","name":"curvature"},{"url":"referencepathfrenet.changeincurvature.html","name":"changeInCurvature"},{"url":"referencepathfrenet.tangentangle.html","name":"tangentAngle"},{"url":"referencepathfrenet.frenet2global.html","name":"frenet2global"},{"url":"referencepathfrenet.global2frenet.html","name":"global2frenet"},{"url":"referencepathfrenet.interpolate.html","name":"interpolate"},{"url":"referencepathfrenet.show.html","name":"show"}]},{"href":"ref\/trajectoryoptimalfrenet.cart2frenet.html","refentity":[{"type":"function","name":"cart2frenet","fcntype":"instancemethod"},{"type":"method","name":"trajectoryOptimalFrenet.cart2frenet","fcntype":"instancemethod"}],"refpurpose":"Convert Cartesian states to Frenet states","introduced":"R2019b","description":"This MATLAB function converts a six-element vector of cartesianStates [x, y, theta, kappa, speed, acceleration] to a six-element vector of Frenet states [s, ds\/dt, d2s\/dt2, l, dl\/ds, d2l\/ds2], where s is arc length from the first point in reference path, and l is normal distance from the closest point at s on the reference path.","syntaxgroup":[{"title":"","syntax":["cart2frenet(planner,cartesianStates)"]}],"inputgroup":[{"title":"","inputs":[{"name":"planner","purpose":"Optimal trajectory planner in Frenet space","htmlid":"mw_36aa3446-30ed-475b-bfd5-199876410845","value":["trajectoryOptimalFrenet object"]},{"name":"cartesianStates","purpose":"Vector of Cartesian states","htmlid":"function_trajectoryoptimalfrenet_cart2frenet_sep_mw_91fb17df-1eb6-400d-b60a-2a9c98b4d531","value":["six-element vector"]}]}],"examples":[{"url":"trajectoryoptimalfrenet.cart2frenet.html#mw_d2bde074-bd54-4f2a-9c19-bc8813115500","open_command":"openExample('nav\/OptimalTrajectoryPlanningInTheFrenetSpaceExample')","title":"Optimal Trajectory Planning in Frenet Space"},{"url":"trajectoryoptimalfrenet.cart2frenet.html#mw_4963548f-7125-496b-ab52-a577a3101e8d","open_command":"openExample('nav\/PartitionLongitudinalTerminalStatesTrajectoryGenerationExample')","title":"Partitioning Longitudinal Terminal States in Trajectory Generation"}],"seealso":[{"url":"trajectoryoptimalfrenet.html","name":"trajectoryOptimalFrenet"},{"url":"trajectoryoptimalfrenet.frenet2cart.html","name":"frenet2cart"}]},{"href":"ref\/trajectoryoptimalfrenet.copy.html","refentity":[{"type":"function","name":"copy","fcntype":"instancemethod"},{"type":"method","name":"trajectoryOptimalFrenet.copy","fcntype":"instancemethod"}],"refpurpose":"Create deep copy of object","introduced":"R2020b","description":"This MATLAB function creates a deep copy of the trajectoryOptimalFrenet object with the same properties.","syntaxgroup":[{"title":"","syntax":["plannerCopy = copy(planner)"]}],"inputgroup":[{"title":"","inputs":[{"name":"planner","purpose":"Trajectory optimal Frenet object","htmlid":"mw_5f0821b5-5a01-498a-aa3b-2de039d9977c","value":["trajectoryOptimalFrenet object"]}]}],"outputs":[{"name":"plannerCopy","purpose":"Copy of trajectory optimal Frenet object","htmlid":"mw_c98347f8-0185-4957-8653-ebc0a17d9624","value":["trajectoryOptimalFrenet object"]}],"examples":[{"url":"trajectoryoptimalfrenet.copy.html#mw_9f59f8ce-9d70-43c8-a7e0-e88d9518a2e8","open_command":"openExample('nav\/CreateCopyOfTrajectoryOptimalFrenetObjectExample')","title":"Create Copy of trajectoryOptimalFrenet Object"}],"seealso":[{"url":"trajectoryoptimalfrenet.html","name":"trajectoryOptimalFrenet"}]},{"href":"ref\/trajectoryoptimalfrenet.frenet2cart.html","refentity":[{"type":"function","name":"frenet2cart","fcntype":"instancemethod"},{"type":"method","name":"trajectoryOptimalFrenet.frenet2cart","fcntype":"instancemethod"}],"refpurpose":"Convert Frenet states to Cartesian states","introduced":"R2019b","description":"This MATLAB function converts a six-element vector of frenetStates [s, ds\/dt, d2s\/dt2, l, dl\/ds, d2l\/ds2] to a six-element vector of Cartesian states [x, y, theta, kappa, speed, acceleration].","syntaxgroup":[{"title":"","syntax":["frenet2cart(planner,frenetStates)"]}],"inputgroup":[{"title":"","inputs":[{"name":"planner","purpose":"Optimal trajectory planner in Frenet space","htmlid":"mw_1b27f351-2386-472c-b897-069dff303d5b","value":["trajectoryOptimalFrenet object"]},{"name":"frenetStates","purpose":"Vector of Frenet states","htmlid":"function_trajectoryoptimalfrenet_frenet2cart_sep_mw_91fb17df-1eb6-400d-b60a-2a9c98b4d531","value":["six-element vector"]}]}],"examples":[{"url":"trajectoryoptimalfrenet.frenet2cart.html#mw_919ee9d6-4a2f-4e4f-92eb-5525e947708e","open_command":"openExample('nav\/OptimalTrajectoryPlanningInTheFrenetSpaceExample')","title":"Optimal Trajectory Planning in Frenet Space"},{"url":"trajectoryoptimalfrenet.frenet2cart.html#mw_c8f51c1a-d839-486e-8688-ca1caa6feb74","open_command":"openExample('nav\/PartitionLongitudinalTerminalStatesTrajectoryGenerationExample')","title":"Partitioning Longitudinal Terminal States in Trajectory Generation"}],"seealso":[{"url":"trajectoryoptimalfrenet.html","name":"trajectoryOptimalFrenet"},{"url":"trajectoryoptimalfrenet.cart2frenet.html","name":"cart2frenet"}]},{"href":"ref\/trajectoryoptimalfrenet.html","refentity":[{"type":"object","name":"trajectoryOptimalFrenet"},{"type":"function","name":"trajectoryOptimalFrenet","fcntype":"constructor"}],"refpurpose":"Find optimal trajectory along reference path","introduced":"R2019b","description":"The trajectoryOptimalFrenet object is a path planner which samples and evaluates local trajectories based on a reference path.","syntaxgroup":[{"title":"","syntax":["trajectoryOptimalFrenet(refPath,validator)","planner = trajectoryOptimalFrenet(___,Name,Value)"]}],"inputgroup":[{"title":"","inputs":[{"name":"refPath","purpose":"Reference path","htmlid":"mw_966a02e8-1758-49f2-8117-9e4ef59c73b8","value":["n-by-2 matrix"]},{"name":"validator","purpose":"State validator object","htmlid":"mw_02db6fec-a3b8-4f90-92b6-c0b8d9bbc9a6","value":["validatorOccupancyMap object"]}]}],"classpropertygroup":[{"classproperty":[{"name":"Weights","purpose":"Weights for all trajectory costs","htmlid":"mw_bc67f70e-9b0e-4c8a-b5b5-b09e6a92ebcf","value":["structure"]}]},{"classproperty":[{"name":"FeasibilityParameters","purpose":"Structure containing feasibility parameters","htmlid":"mw_e0c3e08a-5442-4f5d-807e-627d85f35264","value":["structure"]}]},{"classproperty":[{"name":"TimeResolution","purpose":"Trajectory discretization interval","htmlid":"mw_9dcf3c61-03e4-43a2-83b0-3ca9a5705188","value":["0.1","positive real scalar"],"defaultvalue":"0.1"}]},{"classproperty":[{"name":"CostFunction","purpose":"User-defined cost function","htmlid":"mw_e9d6cbc0-2a70-4e29-966f-2c3dc9976f33","value":["nullCost","function handle"],"defaultvalue":"nullCost"}]},{"classproperty":[{"name":"TrajectoryList","readonly":true,"purpose":"List of all possible trajectories","htmlid":"mw_4cb4adbf-bde4-4ffa-ba46-e129c042653e","value":["structure array"]}]},{"classproperty":[{"name":"TerminalStates","purpose":"Structure of all goal states","htmlid":"mw_c873a8ce-6807-485a-896d-c0df4c854457","value":["structure"]}]},{"classproperty":[{"name":"Waypoints","purpose":"Waypoints of reference path","htmlid":"mw_d24e479b-657e-4176-9ddc-b75f2108a3d2","value":["[ ]","n-by-2 matrix"],"defaultvalue":"[ ]"}]},{"classproperty":[{"name":"NumSegments","purpose":"Number of longitudinal segments for each trajectory","htmlid":"mw_0951a332-6b20-409d-bff0-877d628898ea","value":["1","positive scalar"],"defaultvalue":"1"}]},{"classproperty":[{"name":"DeviationOffset","purpose":"Deviation offset from reference path in lateral direction","htmlid":"mw_28750284-652c-476b-8e4f-07d07425a2fc","value":["0","scalar"],"defaultvalue":"0"}]}],"objectfunctions":[{"title":"","functions":[{"name":"cart2frenet","url":"trajectoryoptimalfrenet.cart2frenet.html","description":"Convert Cartesian states to Frenet states"},{"name":"copy","url":"trajectoryoptimalfrenet.copy.html","description":"Create deep copy of object"},{"name":"frenet2cart","url":"trajectoryoptimalfrenet.frenet2cart.html","description":"Convert Frenet states to Cartesian states"},{"name":"plan","url":"trajectoryoptimalfrenet.plan.html","description":"Plan optimal trajectory"},{"name":"show","url":"trajectoryoptimalfrenet.show.html","description":"Visualize trajectories"}]}],"examples":[{"url":"trajectoryoptimalfrenet.html#mw_3a8c12d5-c1e4-449b-bc63-5cdc62483a19","open_command":"openExample('nav\/OptimalTrajectoryPlanningInTheFrenetSpaceExample')","title":"Optimal Trajectory Planning in Frenet Space"},{"url":"trajectoryoptimalfrenet.html#mw_3787338d-1f29-43a7-a49a-792591f69deb","open_command":"openExample('nav\/PartitionLongitudinalTerminalStatesTrajectoryGenerationExample')","title":"Partitioning Longitudinal Terminal States in Trajectory Generation"}],"seealso":[{"url":"validatoroccupancymap.html","name":"validatorOccupancyMap"},{"url":"nav.statevalidator-class.html","name":"nav.StateValidator"},{"url":"plannerhybridastar.html","name":"plannerHybridAStar"}]},{"href":"ref\/trajectoryoptimalfrenet.plan.html","refentity":[{"type":"function","name":"plan","fcntype":"instancemethod"},{"type":"method","name":"trajectoryOptimalFrenet.plan","fcntype":"instancemethod"}],"refpurpose":"Plan optimal trajectory","introduced":"R2019b","description":"This MATLAB function computes a feasible trajectory, traj, from a list of candidate trajectories generated from the trajectoryOptimalFrenet object, planner.","syntaxgroup":[{"title":"","syntax":["[traj,index,cost,flag] = plan(planner,start)"]}],"inputgroup":[{"title":"","inputs":[{"name":"planner","purpose":"Optimal trajectory planner in Frenet space","htmlid":"mw_568deba0-8bc0-420c-be4a-f0a22ed00c4b","value":["trajectoryOptimalFrenet object"]},{"name":"start","purpose":"Initial Frenet state","htmlid":"function_trajectoryoptimalfrenet_plan_sep_mw_91fb17df-1eb6-400d-b60a-2a9c98b4d531","value":["six-element vector"]}]}],"outputs":[{"name":"traj","purpose":"Feasible trajectory with minimum cost","htmlid":"mw_40c16a74-15dc-414c-a260-9de28c5f513a","value":["n-by-7 matrix"]},{"name":"index","purpose":"Index of feasible trajectory with minimum cost","htmlid":"mw_e48bdca3-c106-45d0-af6e-7986f6304e1a","value":["positive integer scalar"]},{"name":"cost","purpose":"Least cost of feasible trajectory","htmlid":"mw_2ab1d8b2-307f-4cb4-a4d3-1bf8a7147c20","value":["positive scalar"]},{"name":"flag","purpose":"Exit flag indicating solution status","htmlid":"mw_0a495f25-eb1f-4dd1-96a1-559c8acd6108","value":["0","1"]}],"examples":[{"url":"trajectoryoptimalfrenet.plan.html#mw_74d65863-8563-4a48-9656-f3b37e160af4","open_command":"openExample('nav\/OptimalTrajectoryPlanningInTheFrenetSpaceExample')","title":"Optimal Trajectory Planning in Frenet Space"},{"url":"trajectoryoptimalfrenet.plan.html#mw_f4673da8-b6ad-488e-bac1-2de2d50f110c","open_command":"openExample('nav\/PartitionLongitudinalTerminalStatesTrajectoryGenerationExample')","title":"Partitioning Longitudinal Terminal States in Trajectory Generation"}],"seealso":[{"url":"trajectoryoptimalfrenet.html","name":"trajectoryOptimalFrenet"},{"url":"trajectoryoptimalfrenet.show.html","name":"show"}]},{"href":"ref\/trajectoryoptimalfrenet.show.html","refentity":[{"type":"function","name":"show","fcntype":"instancemethod"},{"type":"method","name":"trajectoryOptimalFrenet.show","fcntype":"instancemethod"}],"refpurpose":"Visualize trajectories","introduced":"R2019b","description":"This MATLAB function visualizes the reference path and trajectory from the candidates generated by the plan function.","syntaxgroup":[{"title":"","syntax":["show(planner)","show(planner,Name,Value)","axHandle = show(planner)"]}],"inputgroup":[{"title":"","inputs":[{"name":"planner","purpose":"Optimal trajectory planner in Frenet space","htmlid":"mw_993b00a2-3007-4e04-b69e-78fde87a7101","value":["trajectoryOptimalFrenet object"]}]},{"namevaluepairs":[{"title":"","inputs":[{"name":"Parent","purpose":"Axes to plot trajectory","htmlid":"mw_083c2583-e3ce-4a24-ad55-097301dc74c2","value":["Axes object","UIAxes object"]},{"name":"Trajectory","purpose":"Trajectory display option","htmlid":"mw_dc4948a0-59cd-4ce0-995f-e66f793d789f","value":["'optimal'","'all'"],"defaultvalue":"'optimal'"},{"name":"ReferencePath","purpose":"Reference path display option","htmlid":"mw_be9fa0d3-24af-45ae-91e7-5e195e95fb96","value":["'on'","'off'"],"defaultvalue":"'on'"},{"name":"TrajectoryColor","purpose":"Trajectory color display option","htmlid":"mw_db690caa-8776-48ac-bdf3-7f6e7af9ce18","value":["'velocity'","'acceleration'","'cost'","'none'"],"defaultvalue":"'velocity'"}]}]}],"outputs":[{"name":"axHandle","purpose":"Axes handle used to plot trajectory","htmlid":"mw_18a9e8f2-31e4-4cdd-85c1-728d8b7933fa","value":["Axes object","UIAxes object"]}],"examples":[{"url":"trajectoryoptimalfrenet.show.html#mw_7f253811-f3b4-4979-adfe-f2b61cade780","open_command":"openExample('nav\/OptimalTrajectoryPlanningInTheFrenetSpaceExample')","title":"Optimal Trajectory Planning in Frenet Space"},{"url":"trajectoryoptimalfrenet.show.html#mw_056d92d3-0c0f-457f-a2eb-334c76193aa0","open_command":"openExample('nav\/PartitionLongitudinalTerminalStatesTrajectoryGenerationExample')","title":"Partitioning Longitudinal Terminal States in Trajectory Generation"}],"seealso":[{"url":"trajectoryoptimalfrenet.html","name":"trajectoryOptimalFrenet"},{"url":"trajectoryoptimalfrenet.plan.html","name":"plan"}]},{"href":"ref\/transformmotion.transformmotion.html","refentity":[{"type":"function","name":"transformMotion","fcntype":"instancemethod"},{"type":"method","name":"transformMotion.transformMotion","fcntype":"instancemethod"}],"refpurpose":"Compute motion quantities between two relatively fixed frames","introduced":"R2020a","description":"This MATLAB function computes motion quantities of the sensor frame relative to the navigation frame (posS, orientS, velS, accS, and angvelS) using the position of sensor frame relative to the platform frame, posSFromP, the orientation of the sensor frame relative to the platform frame, orientSFromP, and the position of the platform frame relative to the navigation frame, posP.","syntaxgroup":[{"title":"","syntax":["[posS,orientS,velS,accS,angvelS] = transformMotion(posSFromP,orientSFromP,posP)","[___] = transformMotion(posSFromP,orientSFromP,posP,orientP)","[___] = transformMotion(posSFromP,orientSFromP,posP,orientP,velP)","[___] = transformMotion(posSFromP,orientSFromP,posP,orientP,velP,accP)","[___] = transformMotion(posSFromP,orientSFromP,posP,orientP,velP,accP,angvelP)"]}],"inputgroup":[{"title":"","inputs":[{"name":"posSFromP","purpose":"Position of sensor frame relative to platform frame","htmlid":"mw_e2112d03-bae5-4190-8932-2875adb31d14","value":["1-by-3 vector of real scalars"]},{"name":"orientSFromP","purpose":"Orientation of sensor frame relative to platform frame","htmlid":"mw_132312ba-1c21-4afb-8a3a-04eb7fa527d4","value":["quaternion","3-by-3 rotation matrix"]},{"name":"posP","purpose":"Position of platform frame relative to navigation frame","htmlid":"mw_7a7b3b5e-23db-4926-a0fa-fd33e405322f","value":["N-by-3 matrix of real scalars"]}]},{"title":"","inputs":[{"name":"orientP","purpose":"Orientation of platform frame relative to navigation frame","htmlid":"mw_4224814c-70cf-48b1-8f2b-2ecfede444e4","value":["N-by-1 array of quaternion","3-by-3-by-N array of scalars"]},{"name":"velP","purpose":"Velocity of platform frame relative to navigation frame","htmlid":"mw_ae8e6bf2-c2b0-4c26-9a01-c216b2acd68c","value":["N-by-3 matrix of real scalars"]},{"name":"accP","purpose":"Acceleration of platform frame relative to navigation frame","htmlid":"mw_9b6100d0-f681-42b8-baa1-2a96ffdd57a8","value":["N-by-3 matrix of real scalars"]},{"name":"angvelP","purpose":"Angular velocity of platform frame relative to navigation frame","htmlid":"mw_01bda78f-adc3-41ab-9d09-b5df69e47435","value":["N-by-3 matrix of real scalars"]}]}],"outputs":[{"name":"posS","purpose":"Position of sensor frame relative to navigation frame","htmlid":"mw_f28ff8f0-2e6f-4cf8-b5be-057eb5cdcc1e","value":["N-by-3 matrix of real scalars"]},{"name":"orientS","purpose":"Orientation of sensor frame relative to navigation frame","htmlid":"mw_2c22aceb-04d4-4077-9741-fe63222333d7","value":["N-by-1 array of quaternion","3-by-3-by-N array of scalars"]},{"name":"velS","purpose":"Velocity of sensor frame relative to navigation frame","htmlid":"mw_27c4b825-fc3f-4bd5-aab4-65514bcd6fec","value":["N-by-3 matrix of real scalars"]},{"name":"accS","purpose":"Acceleration of sensor frame relative to navigation frame","htmlid":"mw_be99f58b-301c-4bf0-b3c3-97144d9f577f","value":["N-by-3 matrix of real scalars"]},{"name":"angvelS","purpose":"Angular velocity of sensor frame relative to navigation frame","htmlid":"mw_b9197cd5-5372-4761-8c1e-78f988eeafdd","value":["N-by-3 matrix of real scalars"]}],"examples":[{"url":"transformmotion.transformmotion.html#mw_cb8e525d-86c0-4dea-a1e5-7f5dc29945bb","open_command":"openExample('fusion\/TransformStateToSensorFrameExample')","title":"Transform State to Sensor Frame"}],"seealso":[{"url":"quaternion.html","name":"quaternion"},{"url":"quaternion.rotvec.html","name":"rotvec"}]},{"href":"ref\/triggerconfiguration.html","refentity":[{"type":"object","name":"TriggerConfiguration"},{"type":"function","name":"TriggerConfiguration","fcntype":"constructor"}],"refpurpose":"Trigger measurements properties for scope","introduced":"R2022a","description":"Use the TriggerConfiguration object to define a trigger event to identify the simulation time of specified input signal characteristics.","syntaxgroup":[{"title":"","syntax":["trigger = TriggerConfiguration()"]}],"classpropertygroup":[{"classproperty":[{"name":"Mode","purpose":"Display update mode","htmlid":"mw_946fe9bc-d98a-4de6-9e3f-799ba1a6f388","value":["\"auto\"","\"normal\"","\"once\""],"defaultvalue":"\"auto\""},{"name":"Type","purpose":"Type of trigger","htmlid":"mw_3f2e9f4a-8322-4a9e-9cfb-bafdae783a73","value":["\"edge\"","\"pulse-width\"","\"transition\"","\"runt\"","\"window\"","\"timeout\""],"defaultvalue":"\"edge\""},{"name":"Polarity","purpose":"Trigger polarity","htmlid":"mw_92c0ccb3-8472-4483-9281-8b10a892953d","value":["\"rising\"","\"falling\"","\"either\"","\"positive\"","\"negative\"","\"rise-time\"","\"fall-time\"","\"inside\"","\"outside\""],"defaultvalue":"\"rising\""},{"name":"AutoLevel","purpose":"Automatic thresholding","htmlid":"mw_34bd1bf6-f721-4d6e-892a-2bfc89fbeb00","value":["true","false"],"defaultvalue":"true"},{"name":"Position","purpose":"Horizontal position of trigger","htmlid":"mw_bc8da03a-8162-45d2-afb0-52864957fc36","value":["50","positive scalar in the range (0 100]"],"defaultvalue":"50"},{"name":"Level","purpose":"Threshold of edge-triggered signal","htmlid":"mw_b9ae625e-15e7-419e-97d7-8882bcb2079a","value":["0","real scalar"],"defaultvalue":"0"},{"name":"Hysteresis","purpose":"Noise reject value","htmlid":"mw_569a9a23-2015-4682-a32e-2098c6265d97","value":["0","real scalar"],"defaultvalue":"0"},{"name":"LowLevel","purpose":"Lower trigger level of window-triggered signal","htmlid":"mw_7d434ea6-5752-4a6c-861c-046fab1df3f4","value":["0.2","real scalar"],"defaultvalue":"0.2"},{"name":"HighLevel","purpose":"Higher trigger level of window-triggered signal","htmlid":"mw_d1db01ac-ef79-4dff-be73-db23eb9e103a","value":["2.3","real scalar"],"defaultvalue":"2.3"},{"name":"MinPulseWidth","purpose":"Minimum pulse width for pulse or runt-triggered signal","htmlid":"mw_22127fa1-7dea-44ed-b7cf-78c2d6610384","value":["0","nonnegative scalar"],"defaultvalue":"0"},{"name":"MaxPulseWidth","purpose":"Maximum pulse width for pulse or runt-triggered signal","htmlid":"mw_777e51bb-50a2-4718-9b74-4071d1e224c3","value":["Inf","nonnegative scalar"],"defaultvalue":"Inf"},{"name":"MinDuration","purpose":"Minimum duration for transition or window-triggered signal","htmlid":"mw_9f0b2060-55f7-47e2-98c8-380fecddecaf","value":["0","nonnegative scalar"],"defaultvalue":"0"},{"name":"MaxDuration","purpose":"Maximum duration for transition or window-triggered signal","htmlid":"mw_83520aab-5ae5-40e6-add9-26378d070abe","value":["Inf","nonnegative scalar"],"defaultvalue":"Inf"},{"name":"Timeout","purpose":"Timeout duration","htmlid":"mw_cd472498-bd98-4942-b65d-b80e89e3f7b2","value":["0","nonnegative scalar"],"defaultvalue":"0"},{"name":"Delay","purpose":"Trigger offset","htmlid":"mw_d4e1414f-5aa6-462a-9b48-599822122a7f","value":["0","real scalar"],"defaultvalue":"0"},{"name":"Holdoff","purpose":"Minimum time between triggers","htmlid":"mw_dd05f73f-5157-4038-8124-59db0607658f","value":["0","nonnegative scalar"],"defaultvalue":"0"},{"name":"Channel","purpose":"Trigger channel","htmlid":"mw_6c141fd7-4eb4-4b5e-ac20-a0b90a7e40a2","value":["1","positive integer"],"defaultvalue":"1"},{"name":"Enabled","purpose":"Enable trigger","htmlid":"mw_f8cd8545-5a1c-407d-ae2d-9bed95793c6a","value":["false","true"],"defaultvalue":"false"}]}],"examples":[{"url":"triggerconfiguration.html#mw_e8b39525-2421-447a-869b-d4642562d53b","title":"Enable Trigger Programmatically in Time Scope MATLAB Object"}],"seealso":[{"url":"timescope.html","name":"timescope"}]},{"href":"ref\/trimloopclosures.html","refentity":[{"type":"function","name":"trimLoopClosures","fcntype":"simple"}],"refpurpose":"Optimize pose graph and remove bad loop closures","introduced":"R2020b","description":"This MATLAB function optimizes the pose graph to best satisfy the edge constrains and removes any bad loop closure edges based on the residual error parameters specified in trimParams.","syntaxgroup":[{"title":"","syntax":["poseGraphUpdated = trimLoopClosures(poseGraphObj,trimParams,solverOptions)","[poseGraphUpdated,trimInfo] = trimLoopClosures(poseGraphObj,trimParams,solverOptions)"]}],"inputgroup":[{"title":"","inputs":[{"name":"poseGraphObj","purpose":"Pose graph","htmlid":"mw_c2d8a1e7-d5b7-45ef-ab3b-983e267d3598","value":["poseGraph object","poseGraph3D object"]},{"name":"trimParams","purpose":"Residual error parameters for trimming","htmlid":"mw_8aaadfad-d189-4f97-af01-54a0934ddd1b","value":["structure"]},{"name":"solverOptions","purpose":"Pose graph solver options","htmlid":"mw_b8019d3a-0a00-4031-b229-1a7d70f28216","value":["poseGraphSolverOptions parameters"]}]}],"outputs":[{"name":"poseGraphUpdated","purpose":"Pose graph with trimmed looped closures","htmlid":"mw_9258dd0f-8781-401b-b6b9-ec0cb15cafbb","value":["poseGraph object","poseGraph3D object"]},{"name":"trimInfo","purpose":"Information from trimming process","htmlid":"mw_70e2ad93-128b-4234-b629-b464e4a21d40","value":["structure"]}],"examples":[{"url":"trimloopclosures.html#mw_236b6d82-67fc-404d-b589-a3a4ed659b5a","open_command":"openExample('nav\/OptimizePoseGraphAndTrimLoopClosuresFor2DPoseGraphsExample')","title":"Optimize and Trim Loop Closures for 2-D Pose Graphs"}],"seealso":[{"url":"posegraphsolveroptions.html","name":"poseGraphSolverOptions"},{"url":"posegraph.edgeresidualerrors.html","name":"edgeResidualErrors"},{"url":"posegraph.removeedges.html","name":"removeEdges"},{"url":"posegraph.edgenodepairs.html","name":"edgeNodePairs"},{"url":"posegraph.edgeconstraints.html","name":"edgeConstraints"},{"url":"posegraph.html","name":"poseGraph"},{"url":"posegraph3d.html","name":"poseGraph3D"},{"url":"lidarslam.html","name":"lidarSLAM"}]},{"href":"ref\/trvec2tform.html","refentity":[{"type":"function","name":"trvec2tform","fcntype":"simple"}],"refpurpose":"Convert translation vector to homogeneous transformation","introduced":"R2015a","description":"This MATLAB function converts the Cartesian representation of the translation vector trvec to the corresponding homogeneous transformation tform.","syntaxgroup":[{"title":"","syntax":["tform = trvec2tform(trvec)"]}],"inputgroup":[{"title":"","inputs":[{"name":"trvec","purpose":"Cartesian representation of translation vector","htmlid":"mw_d930518a-7e06-4461-9320-4d360c877ae6","value":["n-by-2 matrix","n-by-3 matrix"]}]}],"outputs":[{"name":"tform","purpose":"Homogeneous transformation","htmlid":"mw_43e41b93-47f0-4ca3-8908-3cb7282a31fc","value":["3-by-3-by-n array","4-by-4-by-n array"]}],"examples":[{"url":"trvec2tform.html#buog598-2","open_command":"openExample('nav_robotics\/ConvertTranslationVectorToHomogeneousTransformationExample')","title":"Convert Translation Vector to Homogeneous Transformation"}],"seealso":[{"url":"tform2trvec.html","name":"tform2trvec"},{"url":"se2.html","name":"se2"},{"url":"se3.html","name":"se3"}]},{"href":"ref\/tunerconfig.html","refentity":[{"type":"object","name":"tunerconfig"},{"type":"function","name":"tunerconfig","fcntype":"constructor"}],"refpurpose":"Fusion filter tuner configuration options","introduced":"R2020b","description":"The tunerconfig object creates a tuner configuration for a fusion filter used to tune the filter for reduced estimation error.","syntaxgroup":[{"title":"","syntax":["config = tunerconfig(filterName)","config = tunerconfig(filter)","config = tunerconfig(filterName,Name,Value)"]}],"inputgroup":[{"title":"","inputs":[{"name":"filterName","purpose":"Fusion filter name","htmlid":"mw_3c3bfe1d-3bcd-40c0-8e0b-2e1dbdb936eb","value":["'imufilter'","'ahrsfilter'","'ahrs10filter'","'insfilterAsync'","'insfilterMARG'","'insfitlerErrorState'","'insfilterNonholonomic'"]},{"name":"filter","purpose":"Fusion filter","htmlid":"mw_72d2dad8-d5d9-4dd7-b2ea-ea846730c4a3","value":["fusion filter object"]}]}],"classpropertygroup":[{"classproperty":[{"name":"Filter","readonly":true,"purpose":"Class name of filter","htmlid":"mw_525eaa6e-b535-4340-a8a5-594b559d04d6","value":["string"]},{"name":"TunableParameters","purpose":"Tunable parameters","htmlid":"mw_29a8fb5e-5d51-4b5d-b82e-a2aef91acd67","value":["array of string","cell array"],"defaultvalue":"array of string"},{"name":"StepForward","purpose":"Factor of forward step","htmlid":"mw_db3152be-dff1-44a3-8e3f-f9222dc520f8","value":["1.1","scalar larger than 1"],"defaultvalue":"1.1"},{"name":"StepBackward","purpose":"Factor of backward step","htmlid":"mw_53d38bcf-0fee-4542-ab73-085a5e810f7f","value":["0.5","scalar in range (0,1)"],"defaultvalue":"0.5"}]},{"classproperty":[{"name":"MaxIterations","purpose":"Maximum number of iterations","htmlid":"mw_f710390a-caac-4ff7-8fb9-9db8459baf39","value":["20","positive integer"],"defaultvalue":"20"}]},{"classproperty":[{"name":"ObjectiveLimit","purpose":"Cost at which to stop tuning process","htmlid":"mw_ada3d8a5-48ee-4615-87e0-aedf4b07c541","value":["0.1","positive scalar"],"defaultvalue":"0.1"}]},{"classproperty":[{"name":"FunctionTolerance","purpose":"Minimum change in cost to continue tuning","htmlid":"mw_6e8b978a-2489-487f-8063-c29be799d661","value":["0","nonnegative scalar"],"defaultvalue":"0"}]},{"classproperty":[{"name":"Display","purpose":"Enable showing the iteration details","htmlid":"mw_ff086b8c-f04e-47e3-a023-821100697a47","value":["\"iter\"","\"none\""],"defaultvalue":"\"iter\""}]},{"classproperty":[{"name":"Cost","purpose":"Metric for evaluating filter performance","htmlid":"mw_0668f5ad-aaf9-43a6-a9c3-d0bf4143dc9e","value":["\"RMS\"","\"Custom\""],"defaultvalue":"\"RMS\""}]},{"classproperty":[{"name":"CustomCostFcn","purpose":"Customized cost function","htmlid":"mw_5f68c7a9-9630-4b25-857b-acc8e2ebb4e3","value":["[]","function handle"],"defaultvalue":"[]"},{"name":"OutputFcn","purpose":"Output function called at each iteration","htmlid":"mw_d180a1c4-bfb9-442b-99e8-3b813c4e114b","value":["[]","function handle"],"defaultvalue":"[]"}]}],"examples":[{"url":"tunerconfig.html#mw_bcd7196e-4ba3-44e2-9af0-ba9f5ea00cfc","open_command":"openExample('shared_positioning\/CreateTunerconfigObjectAndShowTunableParametersExample')","title":"Create Tunerconfig Object and Show Tunable Parameters"},{"url":"tunerconfig.html#mw_4bee4493-a02f-477a-a3d5-e59cd772eed8","open_command":"openExample('shared_positioning\/TuneInsfilterAsyncToOptimizePoseEstimateExample')","title":"Tune insfilterAsync to Optimize Pose Estimate"},{"url":"tunerconfig.html#mw_2a1fbcc5-313c-45fb-baa1-3267d938e31b","open_command":"openExample('shared_positioning\/TuneImufilterToOptimizeOrientationEstimateExample')","title":"Tune imufilter to Optimize Orientation Estimate"},{"url":"tunerconfig.html#mw_be5f1725-386a-4278-8b4c-8eceda2b1228","open_command":"openExample('shared_positioning\/SaveTunedParametersInMATFileUsingOutputFunctionExample')","title":"Save Tuned Parameters in MAT File Using Output Function"}],"seealso":[{"url":"insfilterasync.html","name":"insfilterAsync"},{"url":"insfilternonholonomic.html","name":"insfilterNonholonomic"},{"url":"insfiltermarg.html","name":"insfilterMARG"},{"url":"insfiltererrorstate.html","name":"insfilterErrorState"},{"url":"ahrsfilter-system-object.html","name":"ahrsfilter"},{"url":"ahrs10filter.html","name":"ahrs10filter"},{"url":"imufilter-system-object.html","name":"imufilter"}]},{"href":"ref\/tunernoise.html","refentity":[{"type":"function","name":"tunernoise","fcntype":"simple"}],"refpurpose":"Noise structure of fusion filter","introduced":"R2020b","description":"This MATLAB function returns the measurement noise structure for the filter with name specified by the filterName input.","syntaxgroup":[{"title":"","syntax":["noiseStruct = tunernoise(filterName)","noiseStruct = tunernoise(filter)"]}],"inputgroup":[{"title":"","inputs":[{"name":"filterName","purpose":"Name of fusion filter","htmlid":"mw_babf9d61-b6e1-488b-b5d6-3fdd7e1b28b3","value":["'insfilterAsync'","'ahrs10filter'","'insfilterMARG'","'insfilterNonholonomic'","'insfitlerErrorState'"]},{"name":"filter","purpose":"Fusion filter","htmlid":"mw_2ed7612d-1230-40f6-bf82-8dcfc71c5be1","value":["fusion filter object"]}]}],"outputs":[{"name":"noiseStruct","purpose":"Structure of measurement noise","htmlid":"mw_494df3a1-aba3-495f-bc05-c522378afad8","value":["structure"]}],"examples":[{"url":"tunernoise.html#mw_9e51e662-c6a6-4b41-b654-95a5eb6b7d1c","open_command":"openExample('shared_positioning\/ObtainMeasurementNoiseStructureOfInsfilterAsyncExample')","title":"Obtain Measurement Noise Structure of insfilterAsync"},{"url":"tunernoise.html#mw_77b80014-b340-4d23-9b50-2c0f0a005db3","open_command":"openExample('shared_positioning\/TuneInsfilterAsyncToOptimizePoseEstimateExample')","title":"Tune insfilterAsync to Optimize Pose Estimate"}],"seealso":[{"url":"tunerconfig.html","name":"tunerconfig"}]},{"href":"ref\/tunerplotpose.tunerplotpose.html","refentity":[{"type":"function","name":"tunerPlotPose","fcntype":"instancemethod"},{"type":"method","name":"tunerPlotPose.tunerPlotPose","fcntype":"instancemethod"}],"refpurpose":"Plot filter pose estimates during tuning","introduced":"R2021a","description":"This MATLAB function plots the current pose estimate, consisting of orientation (and possibly position, depending on the filter), and the ground truth values.","syntaxgroup":[{"title":"","syntax":["stopTuning = tunerPlotPose(params,tunerValues)"]}],"inputgroup":[{"title":"","inputs":[{"name":"params","purpose":"Estimates of filter parameters","htmlid":"mw_7b0b353b-bc77-420d-91a3-3ac84cc80782","value":["structure"]},{"name":"tunerValues","purpose":"Tuner values","htmlid":"mw_7fac1e73-6fce-405a-acbc-d67a6b0b53a5","value":["structure"]}]}],"outputs":[{"name":"stopTuning","purpose":"Stop tuning process","htmlid":"mw_c56a0f68-c492-49a9-9e41-cc242698fccf","value":["false"]}],"examples":[{"url":"tunerplotpose.tunerplotpose.html#mw_1e0a5dd2-8c1d-4519-a279-8dca224c5f57","open_command":"openExample('shared_positioning\/VisualizeTuningResultsUsingTunerPlotPoseExample')","title":"Visualize Tuning Results Using tunerPlotPose"}],"seealso":[{"url":"tunerconfig.html","name":"tunerconfig"},{"url":"tunernoise.html","name":"tunernoise"},{"url":"imufilter-system-object.html","name":"imufilter"},{"url":"ahrsfilter-system-object.html","name":"ahrsfilter"},{"url":"ahrs10filter.html","name":"ahrs10filter"},{"url":"insfiltermarg.html","name":"insfilterMARG"},{"url":"insfilterasync.html","name":"insfilterAsync"},{"url":"insfiltererrorstate.html","name":"insfilterErrorState"},{"url":"insfilternonholonomic.html","name":"insfilterNonholonomic"}]},{"href":"ref\/validatoroccupancymap.copy.html","refentity":[{"type":"function","name":"copy","fcntype":"instancemethod"},{"type":"method","name":"validatorOccupancyMap.copy","fcntype":"instancemethod"},{"type":"method","name":"validatorOccupancyMap3D.copy","fcntype":"instancemethod"},{"type":"method","name":"validatorVehicleCostmap.copy","fcntype":"instancemethod"}],"refpurpose":"Create deep copy of state validator object","introduced":"R2020b","description":"This MATLAB function creates a deep copy of the specified state validator object.","syntaxgroup":[{"title":"","syntax":["validator2 = copy(validator1)"]}],"inputgroup":[{"title":"","inputs":[{"name":"validator1","purpose":"State validator object","htmlid":"mw_5959b3ef-7840-4bbb-a01f-3723863cd49b","value":["validatorOccupancyMap object","validatorOccupancyMap3D object","validatorVehicleCostmap object"]}]}],"outputs":[{"name":"validator2","purpose":"State validator object","htmlid":"mw_47c75608-d739-48a6-810f-3ce268d95fb6","value":["validatorOccupancyMap object","validatorOccupancyMap3D object","validatorVehicleCostmap object"]}],"examples":[{"url":"validatoroccupancymap.copy.html#mw_abda71e8-77da-4436-a8b1-998c369a7293","open_command":"openExample('nav\/CreateDeepCopyOfStateValidatorObject3DOccupancyMapExample')","title":"Create Deep Copy of 3-D Occupancy Map State Validator Object"}],"seealso":[{"url":"validatoroccupancymap.html","name":"validatorOccupancyMap"},{"url":"validatoroccupancymap3d.html","name":"validatorOccupancyMap3D"},{"url":"validatorvehiclecostmap.html","name":"validatorVehicleCostmap"}]},{"href":"ref\/validatoroccupancymap.ismotionvalid.html","refentity":[{"type":"function","name":"isMotionValid","fcntype":"instancemethod"},{"type":"method","name":"validatorOccupancyMap.isMotionValid","fcntype":"instancemethod"},{"type":"method","name":"validatorOccupancyMap3D.isMotionValid","fcntype":"instancemethod"},{"type":"method","name":"validatorVehicleCostmap.isMotionValid","fcntype":"instancemethod"}],"refpurpose":"Check if path between states is valid","introduced":"R2019b","description":"This MATLAB function checks if the path between two states is valid by interpolating between states.","syntaxgroup":[{"title":"","syntax":["[isValid,lastValid] = isMotionValid(validator,state1,state2)"]}],"inputgroup":[{"title":"","inputs":[{"name":"validator","purpose":"State validator object","htmlid":"mw_69c8967c-3423-4359-9cc7-d3fa32eca3d4","value":["object of subclass of nav.StateValidator"]},{"name":"state1","purpose":"Initial state positions","htmlid":"mw_1fee20fb-8396-4eb5-bd1f-c23b5f61ac0e","value":["n-element row vector","m-by-n matrix"]},{"name":"state2","purpose":"Final state positions","htmlid":"mw_11794b71-3126-49c5-804e-9bc0a8e9f1cc","value":["n-element row vector","m-by-n matrix"]}]}],"outputs":[{"name":"isValid","purpose":"Valid states","htmlid":"mw_eeaf7960-7815-4123-8ed4-0cd9fe81ffc9","value":["m-element logical column vector"]},{"name":"lastValid","purpose":"Final valid state along each path","htmlid":"mw_ae6794c4-8340-4319-bf3c-2df8640b3c7f","value":["n-element row vector","m-by-n matrix"]}],"examples":[{"url":"validatoroccupancymap.ismotionvalid.html#mw_efa1ff54-0df8-4464-8ac0-e48b30efba8a","open_command":"openExample('nav\/ValidatePathThroughOccupancyMapEnvironmentExample')","title":"Validate Path Through Occupancy Map Environment"},{"url":"validatoroccupancymap.ismotionvalid.html#mw_b39d5602-b7b8-4dcc-9ff0-75a3e30a29bf","open_command":"openExample('nav\/ValidatePathThroughVehicleCostmapEnvironmentExample')","title":"Validate Path Through Vehicle Costmap Environment"},{"url":"validatoroccupancymap.ismotionvalid.html#mw_1eeedc56-1285-4bc6-b984-c03ab98b0c4b","open_command":"openExample('nav\/ValidatePathThrough3DOccupancyMapEnvironmentExample')","title":"Validate Path Through 3-D Occupancy Map Environment"}],"seealso":[{"url":"validatoroccupancymap.isstatevalid.html","name":"isStateValid"},{"url":"statespacese2.html","name":"stateSpaceSE2"},{"url":"nav.statespace-class.html","name":"nav.StateSpace"},{"url":"nav.statevalidator-class.html","name":"nav.StateValidator"}]},{"href":"ref\/validatoroccupancymap.isstatevalid.html","refentity":[{"type":"function","name":"isStateValid","fcntype":"instancemethod"},{"type":"method","name":"validatorOccupancyMap.isStateValid","fcntype":"instancemethod"},{"type":"method","name":"validatorOccupancyMap3D.isStateValid","fcntype":"instancemethod"},{"type":"method","name":"validatorVehicleCostmap.isStateValid","fcntype":"instancemethod"}],"refpurpose":"Check if state is valid","introduced":"R2019b","description":"This MATLAB function checks if a set of given states are valid.","syntaxgroup":[{"title":"","syntax":["isValid = isStateValid(validator,states)"]}],"inputgroup":[{"title":"","inputs":[{"name":"validator","purpose":"State validator object","htmlid":"mw_4bd2cb5b-a613-4d3d-b9d9-a64dd50c21e1","value":["object of subclass of nav.StateValidator"]},{"name":"states","purpose":"State positions","htmlid":"mw_7bde1e00-4ee2-459e-be96-6000d78754da","value":["n-element row vector","m-by-n matrix"]}]}],"outputs":[{"name":"isValid","purpose":"Valid states","htmlid":"mw_434bc7b5-5cac-4d69-ade4-40bc5e9da258","value":["m-element logical column vector"]}],"examples":[{"url":"validatoroccupancymap.isstatevalid.html#mw_4eadbe77-2a64-490a-b1fd-28884bdaf05c","open_command":"openExample('nav\/ValidatePathThroughOccupancyMapEnvironmentExample')","title":"Validate Path Through Occupancy Map Environment"},{"url":"validatoroccupancymap.isstatevalid.html#mw_cc92f36b-88c5-4b6f-b463-cd3ac0271baa","open_command":"openExample('nav\/ValidatePathThroughVehicleCostmapEnvironmentExample')","title":"Validate Path Through Vehicle Costmap Environment"},{"url":"validatoroccupancymap.isstatevalid.html#mw_d01b9411-e8bb-4936-9763-cce45527cba2","open_command":"openExample('nav\/ValidatePathThrough3DOccupancyMapEnvironmentExample')","title":"Validate Path Through 3-D Occupancy Map Environment"}],"seealso":[{"url":"validatoroccupancymap.ismotionvalid.html","name":"isMotionValid"},{"url":"statespacese2.html","name":"stateSpaceSE2"},{"url":"nav.statespace-class.html","name":"nav.StateSpace"},{"url":"nav.statevalidator-class.html","name":"nav.StateValidator"}]},{"href":"ref\/validatoroccupancymap.html","refentity":[{"type":"object","name":"validatorOccupancyMap"},{"type":"function","name":"validatorOccupancyMap","fcntype":"constructor"}],"refpurpose":"State validator based on 2-D grid map","introduced":"R2019b","description":"The validatorOccupancyMap object validates states and discretized motions based on the value in a 2-D occupancy map.","syntaxgroup":[{"title":"","syntax":["validator = validatorOccupancyMap","validator = validatorOccupancyMap(stateSpace)","validator = validatorOccupancyMap(stateSpace,Name,Value)"]}],"classpropertygroup":[{"classproperty":[{"name":"StateSpace","purpose":"State space for validating states","htmlid":"mw_9d017ad9-a5b8-47d8-9707-3b17e9dd9ad5","value":["stateSpaceSE2","subclass of nav.StateSpace"],"defaultvalue":"stateSpaceSE2"},{"name":"Map","purpose":"Map used for validating states","htmlid":"mw_be1d7569-6faa-4da8-8812-8ae6f30debd5","value":["binaryOccupancyMap(10,10)","binaryOccupancyMap object","occupancyMap object"],"defaultvalue":"binaryOccupancyMap(10,10)"},{"name":"ValidationDistance","purpose":"Interval for checking state validity","htmlid":"mw_9b50a09a-0735-4329-8328-c38a2f2ef38e","value":["Inf","positive numeric scalar"],"defaultvalue":"Inf"},{"name":"XYIndices","purpose":"State variable mapping for xy-coordinates","htmlid":"mw_45a56b3e-531f-4853-8403-880787357dc8","value":["[1 2]","[xIdx yIdx]"],"defaultvalue":"[1 2]"}]}],"objectfunctions":[{"title":"","functions":[{"name":"copy","url":"validatoroccupancymap.copy.html","description":"Create deep copy of state validator object"},{"name":"isStateValid","url":"validatoroccupancymap.isstatevalid.html","description":"Check if state is valid"},{"name":"isMotionValid","url":"validatoroccupancymap.ismotionvalid.html","description":"Check if path between states is valid"}]}],"examples":[{"url":"validatoroccupancymap.html#mw_0c8712ae-0748-405e-8f35-aac02d83b79b","open_command":"openExample('nav\/ValidatePathThroughOccupancyMapEnvironmentExample')","title":"Validate Path Through Occupancy Map Environment"}],"seealso":[{"url":"statespacese2.html","name":"stateSpaceSE2"},{"url":"nav.statespace-class.html","name":"nav.StateSpace"},{"url":"nav.statevalidator-class.html","name":"nav.StateValidator"}]},{"href":"ref\/validatoroccupancymap3d.html","refentity":[{"type":"object","name":"validatorOccupancyMap3D"},{"type":"function","name":"validatorOccupancyMap3D","fcntype":"constructor"}],"refpurpose":"State validator based on 3-D grid map","introduced":"R2020b","description":"The validatorOccupancyMap3D object validates states and discretized motions based on occupancy values in a 3-D occupancy map.","syntaxgroup":[{"title":"","syntax":["validator = validatorOccupancyMap3D","validator = validatorOccupancyMap3D(stateSpace)","validator = validatorOccupancyMap3D(stateSpace,Name,Value)"]}],"classpropertygroup":[{"classproperty":[{"name":"StateSpace","readonly":true,"purpose":"State space for validating states","htmlid":"mw_ac06721c-b971-4dcd-8d57-bf3cdcabb8b3","value":["stateSpaceSE3 object","subclass of nav.StateSpace"],"defaultvalue":"stateSpaceSE3 object"},{"name":"Map","purpose":"Map used for validating states","htmlid":"mw_69e30bae-1511-4965-8020-931073398eb5","value":["occupancyMap3D","occupancyMap3D object"],"defaultvalue":"occupancyMap3D"},{"name":"ValidationDistance","purpose":"Interval for checking state validity","htmlid":"mw_ad611a90-6193-42bb-bb35-46078af58736","value":["Inf","positive numeric scalar"],"defaultvalue":"Inf"},{"name":"XYZIndices","purpose":"State variable mapping for xyz-coordinates","htmlid":"mw_ae0a4914-b403-4a48-9515-7dc90e9fce93","value":["[1 2 3]","three-element vector"],"defaultvalue":"[1 2 3]"}]}],"objectfunctions":[{"title":"","functions":[{"name":"copy","url":"validatoroccupancymap.copy.html","description":"Create deep copy of state validator object"},{"name":"isMotionValid","url":"validatoroccupancymap.ismotionvalid.html","description":"Check if path between states is valid"},{"name":"isStateValid","url":"validatoroccupancymap.isstatevalid.html","description":"Check if state is valid"}]}],"examples":[{"url":"validatoroccupancymap3d.html#mw_419a84c5-f4cb-4e37-85a1-b74eb0dcf40b","open_command":"openExample('nav\/ValidatePathThrough3DOccupancyMapEnvironmentExample')","title":"Validate Path Through 3-D Occupancy Map Environment"}],"seealso":[{"url":"occupancymap3d.html","name":"occupancyMap3D"},{"url":"statespacese3.html","name":"stateSpaceSE3"},{"url":"validatoroccupancymap.html","name":"validatorOccupancyMap"}]},{"href":"ref\/validatorvehiclecostmap.html","refentity":[{"type":"object","name":"validatorVehicleCostmap"},{"type":"function","name":"validatorVehicleCostmap","fcntype":"constructor"}],"refpurpose":"State validator based on 2-D costmap","introduced":"R2019b","description":"The validatorOccupancyMap object validates states and discretized motions based on the value in a 2-D costmap.","syntaxgroup":[{"title":"","syntax":["validator = validatorVehicleCostmap","validator = validatorVehicleCostmap(stateSpace)","validator = validatorVehicleCostmap(stateSpace,Name,Value)"]}],"classpropertygroup":[{"classproperty":[{"name":"StateSpace","purpose":"State space for validating states","htmlid":"mw_388a0133-ebd6-4f4e-9e77-0af6f2fd65ee","value":["stateSpaceSE2","subclass of nav.StateSpace"],"defaultvalue":"stateSpaceSE2"},{"name":"Map","purpose":"Map used for validating states","htmlid":"mw_30dc05fd-0920-446d-be2c-74a0b5f7aa3a","value":["vehicleCostmap(10,10)","vehicleCostmap object"],"defaultvalue":"vehicleCostmap(10,10)"},{"name":"ValidationDistance","purpose":"Interval for checking state validity","htmlid":"mw_40424725-1b26-48f6-a568-29308c55840b","value":["Inf","positive numeric scalar"],"defaultvalue":"Inf"},{"name":"XYIndices","purpose":"State variable mapping for xy-coordinates","htmlid":"mw_08254abf-e9d6-4df1-830d-7464286746f6","value":["[1 2]","[xIdx yIdx]"],"defaultvalue":"[1 2]"},{"name":"ThetaIndex","purpose":"State variable mapping for theta coordinate","htmlid":"mw_2d86ee60-bc03-4012-be72-a0622bfde7a9","value":["NaN","positive integer"],"defaultvalue":"NaN"}]}],"objectfunctions":[{"title":"","functions":[{"name":"copy","url":"validatoroccupancymap.copy.html","description":"Create deep copy of state validator object"},{"name":"isStateValid","url":"validatoroccupancymap.isstatevalid.html","description":"Check if state is valid"},{"name":"isMotionValid","url":"validatoroccupancymap.ismotionvalid.html","description":"Check if path between states is valid"}]}],"examples":[{"url":"validatorvehiclecostmap.html#mw_31aec9f0-0eb7-406b-9423-20a6c3184662","open_command":"openExample('nav\/ValidatePathThroughVehicleCostmapEnvironmentExample')","title":"Validate Path Through Vehicle Costmap Environment"}],"seealso":[{"url":"validatoroccupancymap.html","name":"validatorOccupancyMap"},{"url":"statespacese2.html","name":"stateSpaceSE2"},{"url":"nav.statespace-class.html","name":"nav.StateSpace"},{"url":"nav.statevalidator-class.html","name":"nav.StateValidator"}]},{"href":"ref\/vectorfieldhistogram.html","refentity":[{"type":"block","name":"Vector Field Histogram"}],"refpurpose":"Avoid obstacles using vector field histogram","introduced":"R2019b","description":"The Vector Field Histogram (VFH) block enables your vehicle to avoid obstacles based on range sensor data.","icon":{"fileref":"ref\/vfh_block.png","alt":"Vector Field Histogram block"},"libraries":["Navigation Toolbox \/ Control Algorithms"],"inputgroup":[{"title":"","inputs":[{"name":"Ranges","purpose":"Range values from scan data","htmlid":"bvam7nc-Ranges","value":["vector of scalars"]},{"name":"Angles","purpose":"Angle values from scan data","htmlid":"bvam7nc-Angles","value":["vector of scalars"]},{"name":"TargetDir","purpose":"Target direction for vehicle","htmlid":"bvam7nc-TargetDir","value":["scalar"]}]}],"outputs":[{"name":"SteerDir","purpose":"Steering direction for vehicle","htmlid":"bvam7nc-steeringDir","value":["scalar"]}],"parameters":[{"name":"Number of angular sectors","purpose":"Number of bins used to create the histograms","htmlid":"bvam7nc-Numberofangularsectors","value":["180","scalar"],"defaultvalue":"180"},{"name":"Range distance limits (m)","purpose":"Limits for range readings","htmlid":"bvam7nc-Rangedistancelimitsm","value":["[0.05 2]","two-element vector of scalars"],"defaultvalue":"[0.05 2]"},{"name":"Histogram thresholds","purpose":"Thresholds for computing binary histogram","htmlid":"bvam7nc-Histrogramthresholds","value":["[3 10]","two-element vector of scalars"],"defaultvalue":"[3 10]"},{"name":"vehicle radius (m)","purpose":"Radius of the vehicle","htmlid":"bvam7nc-Robotradiusm","value":["scalar","0.1"],"defaultvalue":"0.1"},{"name":"Safety distance (m)","purpose":"Safety distance around the vehicle","htmlid":"bvam7nc-Safetydistancem","value":["scalar","0.1"],"defaultvalue":"0.1"},{"name":"Minimum turning radius (m)","purpose":"Minimum turning radius at current speed","htmlid":"bvam7nc-Minimumturningradiusm","value":["scalar","0.1"],"defaultvalue":"0.1"},{"name":"Simulate using","purpose":"Specify type of simulation to run","htmlid":"bvam7nc-Simulateusing","value":["Code generation","Interpreted execution"],"defaultvalue":"Code generation"},{"name":"Target direction weight","purpose":"Cost function weight for target direction","htmlid":"bvam7nc-Targetdirectionweight","value":["scalar","5"],"defaultvalue":"5"},{"name":"Current direction weight","purpose":"Cost function weight for current direction","htmlid":"bvam7nc-Currentdirectionweight","value":["scalar","2"],"defaultvalue":"2"},{"name":"Previous direction weight","purpose":"Cost function weight for previous direction","htmlid":"bvam7nc-Previousdirectionweight","value":["scalar","2"],"defaultvalue":"2"}],"examples":[{"url":"..\/ug\/path-following-with-obstacle-avoidance-in-simulink.html","open_command":"openExample('nav\/PathFollowingWithObstacleAvoidanceInSimulinkExample')","title":"Path Following with Obstacle Avoidance in Simulink"}],"seealso":[{"url":"purepursuit.html","name":"Pure Pursuit"},{"url":"..\/..\/ros\/ref\/publish.html","name":"Publish"},{"url":"..\/..\/ros\/ref\/subscribe.html","name":"Subscribe"},{"url":"timedelasticband.html","name":"Timed Elastic Band"},{"url":"controllervfh-system-object.html","name":"controllerVFH"}]},{"href":"ref\/velocitycommand.html","refentity":[{"type":"function","name":"velocityCommand","fcntype":"simple"}],"refpurpose":"Retrieve velocity command from time series of velocity commands","introduced":"R2023a","description":"This MATLAB function retrieves the velocity command velout, at the queried time instant timeq, from a series of velocity commands, velcmds, and corresponding timestamps, timestamps.","syntaxgroup":[{"title":"","syntax":["velout = velocityCommand(velcmds,timestamps,timeq)"]}],"inputgroup":[{"title":"","inputs":[{"name":"velcmds","purpose":"Series of velocity commands","htmlid":"mw_9b35f73d-4158-449a-be0a-f6c0634e0aa7","value":["N-by-2 matrix"]},{"name":"timestamps","purpose":"Timestamps of velocity commands","htmlid":"mw_0780de51-7412-4627-95a9-81b155cfde22","value":["N-element column vector"]},{"name":"timeq","purpose":"Query time","htmlid":"mw_f14c6291-576f-4419-b91a-1584f19cb15c","value":["positive numeric scalar"]}]}],"outputs":[{"name":"velout","purpose":"Velocity command","htmlid":"mw_176f3ac3-42d8-4d9d-b975-e73a6087e090","value":["two-element row vector"]}],"examples":[{"url":"velocitycommand.html#mw_62be4063-3878-4b38-b4a3-c94cb81d6bff","open_command":"openExample('nav\/RetrieveVelocityFromTimeSeriesOfVelocityCommandsExample')","title":"Retrieve Velocity from Time Series of Velocity Commands"}],"seealso":[{"url":"headingfromxy.html","name":"headingFromXY"},{"url":"controllerteb.html","name":"controllerTEB"},{"url":"plannerastargrid.html","name":"plannerAStarGrid"},{"url":"..\/..\/robotics\/ref\/mobilerobotprm.html","name":"mobileRobotPRM"}]},{"href":"ref\/vhacdoptions.html","refentity":[{"type":"object","name":"vhacdOptions"},{"type":"function","name":"vhacdOptions","fcntype":"constructor"}],"refpurpose":"Solver options for V-HACD","introduced":"R2023b","description":"The vhacdOptions object defines voxelized hierarchical approximate convex decomposition (V-HACD) solver options for functions such as collisionVHACD and importrobot.","syntaxgroup":[{"title":"","syntax":["OPTS = vhacdOptions","OPTS = vhacdOptions(Type)","OPTS = vhacdOptions(Type,Name=Value)"]}],"classpropertygroup":[{"classproperty":[{"name":"Type","purpose":"Type of decomposition","htmlid":"mw_a263a09c-ee18-460a-ab0b-24791c8d5167","value":["\"IndividualMesh\"","\"RigidBodyTree\""],"defaultvalue":"\"IndividualMesh\""},{"name":"VoxelResolution","purpose":"Voxel resolution of decomposition","htmlid":"mw_22ed2750-0c70-4713-b026-f38915d572b5","value":["128000","positive integer","N-element vector of positive integers"],"defaultvalue":"128000"},{"name":"MaxNumConvexHulls","purpose":"Maximum number of convex hulls","htmlid":"mw_b75c4679-d0c3-449b-820a-62c210635760","value":["32","positive integer","N-element vector of positive integers"],"defaultvalue":"32"},{"name":"MaxNumVerticesPerHull","purpose":"Maximum number of vertices per convex hull","htmlid":"mw_3b1273ca-67ff-4f17-adeb-d5a2c48314fc","value":["128","positive integer","N-element vector of positive integers"],"defaultvalue":"128"},{"name":"FillMode","purpose":"Fill mode for interior voxels of mesh","htmlid":"mw_7ddc3cd2-f508-4dda-98a5-49d5d089d888","value":["\"FLOOD_FILL\"","\"RAYCAST_FILL\"","\"SURFACE_ONLY\""],"defaultvalue":"\"FLOOD_FILL\""},{"name":"SourceMesh","purpose":"Source mesh type of imported rigid body tree to decompose","htmlid":"mw_b415973d-8114-4540-8a7e-2aac2571f7a5","value":["\"CollisionGeometry\"","\"VisualGeometry\""],"defaultvalue":"\"CollisionGeometry\""}]}],"examples":[{"url":"vhacdoptions.html#mw_abd0b0d8-a654-429d-b6ea-fd26d3e9a6cf","open_command":"openExample('robotics\/ReplaceRigidBodyCollisionMeshesWithVisualMeshesExample')","title":"Replace Rigid Body Collision Meshes with Decompositions of Visual Meshes"},{"url":"vhacdoptions.html#mw_84c0eed5-318a-4b59-b5b5-d3b7e59f03c6","open_command":"openExample('nav_robotics\/ImportRobotWithCollisionMeshesFromVisualMeshesExample')","title":"Decompose Collision Meshes of Imported Robot"},{"url":"vhacdoptions.html#mw_dc751a57-fd98-44c9-9fb1-c9c341f8b7e0","open_command":"openExample('nav_robotics\/DecomposeMeshIntoCollisionObjectsExample')","title":"Decompose Nonconvex STL Mesh into Convex Composites"}],"seealso":[{"url":"collisionvhacd.html","name":"collisionVHACD"},{"url":"showcollisionarray.html","name":"showCollisionArray"},{"url":"..\/..\/robotics\/ref\/rigidbodytree.html","name":"rigidBodyTree"}]},{"href":"ref\/waypointtrajectory-system-object.html","refentity":[{"type":"sysobj","name":"waypointTrajectory"},{"type":"function","name":"waypointTrajectory","fcntype":"constructor"}],"refpurpose":"Waypoint trajectory generator","introduced":"R2019b","description":"The waypointTrajectory System object generates trajectories based on specified waypoints.","syntaxgroup":[{"title":"","syntaxtype":"createobject","syntax":["trajectory = waypointTrajectory","trajectory = waypointTrajectory(Waypoints,TimeOfArrival)","trajectory = waypointTrajectory(Waypoints,GroundSpeed=groundSpeed)","trajectory = waypointTrajectory(Waypoints,Velocities=velocities)","trajectory = waypointTrajectory(___,Name=Value)"]},{"title":"","syntaxtype":"usage","syntax":["[position,orientation,velocity,acceleration,angularVelocity] = trajectory()"]}],"outputs":[{"name":"position","purpose":"Position in local navigation coordinate system (m)","syntaxtype":"usage","htmlid":"mw_83d52175-b1b7-4b2e-89fe-ee0055b109b0","value":["M-by-3 matrix"]},{"name":"orientation","purpose":"Orientation in local navigation coordinate system","syntaxtype":"usage","htmlid":"mw_e07df821-5fd2-4efe-be44-c4c8e2cf0c49","value":["M-element quaternion column vector","3-by-3-by-M real array"]},{"name":"velocity","purpose":"Velocity in local navigation coordinate system (m\/s)","syntaxtype":"usage","htmlid":"mw_d86fe55e-8ca0-4c09-93e5-e672fd8cf5ed","value":["M-by-3 matrix"]},{"name":"acceleration","purpose":"Acceleration in local navigation coordinate system (m\/s^{2})","syntaxtype":"usage","htmlid":"mw_88f895b2-c1bb-4ad1-bc72-0ffcf2dd6c2b","value":["M-by-3 matrix"]},{"name":"angularVelocity","purpose":"Angular velocity in local navigation coordinate system (rad\/s)","syntaxtype":"usage","htmlid":"mw_2523a745-d959-4f0d-8639-f933f7b3cee7","value":["M-by-3 matrix"]}],"classpropertygroup":[{"classproperty":[{"name":"SampleRate","purpose":"Sample rate of trajectory (Hz)","htmlid":"mw_a0190ea0-6071-4bde-9f03-657ed2fb013a_sep_mw_1ff2b061-0160-4848-85ae-3b47b16c6240","value":["100","positive scalar"],"defaultvalue":"100"},{"name":"SamplesPerFrame","purpose":"Number of samples per output frame","htmlid":"mw_a07d7597-ee5a-4f70-b2e8-3d59155c9360","value":["1","positive scalar integer"],"defaultvalue":"1"}]},{"classproperty":[{"name":"Waypoints","readonly":true,"purpose":"Positions in the navigation coordinate system (m)","htmlid":"mw_b9e67118-6092-4699-8166-4543e8ce50bb","value":["N-by-3 matrix"]},{"name":"TimeOfArrival","readonly":true,"purpose":"Time at each waypoint (s)","htmlid":"mw_da6bf5fd-df18-489a-b636-96c98b223419","value":["N-element column vector of nonnegative increasing numbers"]},{"name":"Velocities","readonly":true,"purpose":"Velocity in navigation coordinate system at each waypoint (m\/s)","htmlid":"mw_350ad38f-0efb-46b7-9cd9-886663694c6f","value":["N-by-3 matrix"]},{"name":"Course","readonly":true,"purpose":"Horizontal direction of travel (degree)","htmlid":"mw_75021854-882d-4803-bf71-32bb92a7f303","value":["N-element real vector"]},{"name":"GroundSpeed","readonly":true,"purpose":"Groundspeed at each waypoint (m\/s)","htmlid":"mw_a7d7f5be-3899-40dd-9f7d-8bb42f1eb8cb","value":["N-element real vector"]},{"name":"ClimbRate","readonly":true,"purpose":"Climb rate at each waypoint (m\/s)","htmlid":"mw_a60def49-c80e-4c22-becb-b6fe953d4e3a","value":["N-element real vector"]},{"name":"JerkLimit","readonly":true,"purpose":"Longitudinal jerk limit (m\/s^{3})","htmlid":"mw_f28dd8d2-089b-48f0-9fc9-647a2c3b92d5","value":["Inf","positive scalar"],"defaultvalue":"Inf"},{"name":"InitialTime","readonly":true,"purpose":"Time before trajectory starts (s)","htmlid":"mw_a02ffeb1-c803-4f33-93a3-9625c91db657","value":["0","nonnegative scalar"],"defaultvalue":"0"},{"name":"WaitTime","readonly":true,"purpose":"Wait time at each waypoint (s)","htmlid":"mw_7ebc80cd-133d-468c-ad72-243d43765989","value":["N-element vector of 0","N-element vector of nonnegative scalars"],"defaultvalue":"N-element vector of 0"},{"name":"Orientation","readonly":true,"purpose":"Orientation at each waypoint","htmlid":"mw_7e489f8d-22f7-46d2-8970-f755038d0a0d","value":["N-element quaternion column vector","3-by-3-by-N array of real numbers"]},{"name":"AutoPitch","readonly":true,"purpose":"Align pitch angle with direction of motion","htmlid":"mw_ac77b4c2-aaf2-4de8-90df-15bd94ba5c7c","value":["false","true"],"defaultvalue":"false"},{"name":"AutoBank","readonly":true,"purpose":"Align roll angle to counteract centripetal force","htmlid":"mw_95d55811-c14a-413e-b5d3-62e3eb6aa364","value":["false","true"],"defaultvalue":"false"},{"name":"ReferenceFrame","readonly":true,"purpose":"Reference frame of trajectory","htmlid":"mw_35d7842b-b49b-4074-a1ab-ab6d240e9745","value":["'NED'","'ENU'"],"defaultvalue":"'NED'"}]}],"objectfunctions":[{"title":"Specific to waypointTrajectory","functions":[{"name":"waypointInfo","url":"waypointtrajectory.waypointinfo.html","description":"Get waypoint information table"},{"name":"lookupPose","url":"waypointtrajectory.lookuppose.html","description":"Obtain pose information for certain time"},{"name":"perturbations","url":"inssensor.perturbations.html","description":"Perturbation defined on object"},{"name":"perturb","url":"inssensor.perturb.html","description":"Apply perturbations to object"}]},{"title":"Common to All System Objects","functions":[{"name":"clone","url":"..\/..\/matlab\/ref\/matlab.system.clone.html","description":"Create duplicate System object"},{"name":"step","url":"..\/..\/matlab\/ref\/step.html","description":"Run System object algorithm"},{"name":"release","url":"..\/..\/matlab\/ref\/matlab.system.releasesystemobject.html","description":"Release resources and allow changes to System object property values and input characteristics"},{"name":"reset","url":"..\/..\/matlab\/ref\/resetsystemobject.html","description":"Reset internal states of System object"},{"name":"isDone","url":"..\/..\/matlab\/ref\/isdone.html","description":"End-of-data status"}]}],"examples":[{"url":"waypointtrajectory-system-object.html#mw_c0fad279-e1be-47ab-aa9a-fa89c70ede4e","open_command":"openExample('shared_trajectories\/CreateDefaultWaypointTrajectoryExample')","title":"Create Default waypointTrajectory"},{"url":"waypointtrajectory-system-object.html#mw_5b13e090-f90e-463d-b339-f5fddf30cbd0","open_command":"openExample('shared_trajectories\/CreateSquareTrajectoryExample')","title":"Create Square Trajectory"},{"url":"waypointtrajectory-system-object.html#mw_ddc65b95-5c5c-4cef-b7b2-e9062cc8e4b2","open_command":"openExample('shared_trajectories\/CreateArcTrajectoryExample')","title":"Create Arc Trajectory"},{"url":"waypointtrajectory-system-object.html#mw_09c2da9f-2386-4ff0-841c-641da3551a17","open_command":"openExample('shared_trajectories\/GenerateRacetrackTrajectoryUsingWaypointTrajectoryExample')","title":"Generate Racetrack Trajectory Using waypointTrajectory"},{"url":"waypointtrajectory-system-object.html#mw_ec8966e7-9743-4b89-97e0-08f081402cf1","open_command":"openExample('shared_trajectories\/CreateTrajectoryUsingWaypointsAndGroundSpeedExample')","title":"Create Trajectory Using Waypoints and Ground Speed"}],"seealso":[{"url":"kinematictrajectory-system-object.html","name":"kinematicTrajectory"}]},{"href":"ref\/waypointtrajectory.lookuppose.html","refentity":[{"type":"function","name":"lookupPose","fcntype":"instancemethod"},{"type":"method","name":"waypointTrajectory.lookupPose","fcntype":"instancemethod"}],"refpurpose":"Obtain pose information for certain time","introduced":"R2019b","description":"This MATLAB function returns the pose information of the waypoint trajectory at the specified sample times.","syntaxgroup":[{"title":"","syntax":["[position,orientation,velocity,acceleration,angularVelocity] = lookupPose(traj,sampleTimes)"]}],"inputgroup":[{"title":"","inputs":[{"name":"traj","purpose":"Waypoint trajectory","htmlid":"mw_db8eb424-b22f-44a6-a77c-7567421ae770","value":["waypointTrajectory object"]},{"name":"sampleTimes","purpose":"Sample times","htmlid":"mw_81aef1f9-ef8d-443b-9e22-5635445b1a9e","value":["M-element vector of nonnegative scalar"]}]}],"outputs":[{"name":"position","purpose":"Position in local navigation coordinate system (m)","htmlid":"mw_c474c295-2ea0-4a91-81a7-9925e794a3f3","value":["M-by-3 matrix"]},{"name":"orientation","purpose":"Orientation in local navigation coordinate system","htmlid":"mw_1241f538-2c02-4507-bf78-737d7f530a40","value":["M-element quaternion column vector","3-by-3-by-M real array"]},{"name":"velocity","purpose":"Velocity in local navigation coordinate system (m\/s)","htmlid":"mw_4f3dc7e0-f920-4936-8f35-73a58eb54a4b","value":["M-by-3 matrix"]},{"name":"acceleration","purpose":"Acceleration in local navigation coordinate system (m\/s^{2})","htmlid":"mw_3ff20cb9-9a81-4ed1-98ec-438c32aec718","value":["M-by-3 matrix"]},{"name":"angularVelocity","purpose":"Angular velocity in local navigation coordinate system (rad\/s)","htmlid":"mw_d1243ec6-d9e0-449d-aeb0-7153dcb20ec8","value":["M-by-3 matrix"]}],"examples":[{"url":"waypointtrajectory.lookuppose.html#mw_5ceaa897-bb03-4165-a700-49204d8e8744","open_command":"openExample('shared_trajectories\/CreateTrajectoryUsingWaypointsAndGroundSpeedExample')","title":"Create Trajectory Using Waypoints and Ground Speed"}],"seealso":[{"url":"waypointtrajectory-system-object.html","name":"waypointTrajectory"},{"url":"waypointtrajectory.waypointinfo.html","name":"waypointInfo"},{"url":"inssensor.perturbations.html","name":"perturbations"},{"url":"inssensor.perturb.html","name":"perturb"}]},{"href":"ref\/waypointtrajectory.waypointinfo.html","refentity":[{"type":"function","name":"waypointInfo","fcntype":"instancemethod"},{"type":"method","name":"waypointTrajectory.waypointInfo","fcntype":"instancemethod"}],"refpurpose":"Get waypoint information table","introduced":"R2019b","description":"This MATLAB function returns a table of waypoints, times of arrival, velocities, and orientation for the trajectory System object.","syntaxgroup":[{"title":"","syntax":["trajectoryInfo = waypointInfo(trajectory)"]}],"inputgroup":[{"title":"","inputs":[{"name":"trajectory","purpose":"Object of waypointTrajectory","htmlid":"mw_dddd9493-a447-43c8-9915-fed956660018","value":["object"]}]}],"outputs":[{"name":"trajectoryInfo","purpose":"Trajectory information","htmlid":"mw_d9b0ded5-7f88-47c3-bc55-2b37deedcf42","value":["table"]}],"examples":[{"url":"waypointtrajectory.waypointinfo.html#mw_e5a48607-7e96-4b4a-8f29-36b34073ac31","open_command":"openExample('shared_trajectories\/CreateDefaultWaypointTrajectoryExample')","title":"Create Default waypointTrajectory"}],"seealso":[{"url":"waypointtrajectory-system-object.html","name":"waypointTrajectory"},{"url":"waypointtrajectory.lookuppose.html","name":"lookupPose"},{"url":"inssensor.perturbations.html","name":"perturbations"},{"url":"inssensor.perturb.html","name":"perturb"}]},{"href":"ref\/wheelencoderackermann-system-object.html","refentity":[{"type":"sysobj","name":"wheelEncoderAckermann"},{"type":"function","name":"wheelEncoderAckermann","fcntype":"constructor"}],"refpurpose":"Simulate wheel encoder sensor readings for Ackermann vehicle","introduced":"R2020b","description":"The wheelEncoderAckermann System object computes wheel encoder tick readings based on the pose input of an Ackermann vehicle.","syntaxgroup":[{"title":"","syntaxtype":"createobject","syntax":["encoder = wheelEncoderAckermann","encoder= wheelEncoderAckermann(Name,Value)"]},{"title":"","syntaxtype":"usage","syntax":["ticks = encoder(velocity,angularVelocity,orientation)"]}],"inputgroup":[{"title":"","inputs":[{"name":"velocity","purpose":"Velocity of vehicle","syntaxtype":"usage","htmlid":"mw_f30df46d-cb62-4584-84eb-095fb65567bc","value":["N-by-3 matrix of scalars"]},{"name":"angularVelocity","purpose":"Angular velocity of vehicle","syntaxtype":"usage","htmlid":"mw_701391f1-a7fd-4db9-8eb8-213c7d6d8959","value":["N-by-3 matrix of scalars"]},{"name":"orientation","purpose":"orientation of vehicle","syntaxtype":"usage","htmlid":"mw_cf978af2-d3b3-47bc-b577-fe2b0f6bdbfa","value":["N-element vector of quaternion","3-by-3-by-N array of rotation matrices"]}]}],"outputs":[{"name":"ticks","purpose":"Number of wheel ticks per time step","syntaxtype":"usage","htmlid":"mw_5f1f4377-6593-4440-851a-bcc0bd9cc413","value":["N-by-4 matrix of nonnegative integers"]}],"classpropertygroup":[{"classproperty":[{"name":"SampleRate","purpose":"Sample rate of encoder","htmlid":"mw_a235f148-a27d-4220-863a-08e077ca75a6","value":["100","positive scalar"],"defaultvalue":"100"},{"name":"TicksPerRevolution","purpose":"Number of encoder ticks per wheel revolution","htmlid":"mw_b64750ab-f401-4a46-9c7a-69d8fa4c7837","value":["[2048 2048 2048 2048]","four-element vector of positive integers"],"defaultvalue":"[2048 2048 2048 2048]"},{"name":"WheelRadius","purpose":"Wheel radius","htmlid":"mw_ea038f4a-0380-4e26-872e-5fbb8bcdb277","value":["[0.35 0.35 0.35 0.35]","four-element vector of positive scalars"],"defaultvalue":"[0.35 0.35 0.35 0.35]"},{"name":"WheelRadiusBias","purpose":"Bias of wheel radius","htmlid":"mw_02e590e7-216e-4a33-8003-b78b28f35f40","value":["[0 0 0 0]","four-element vector of scalars"],"defaultvalue":"[0 0 0 0]"},{"name":"WheelPositionAccuracy","purpose":"Standard deviation of wheel position error","htmlid":"mw_8e4e1202-4481-47ef-b006-320893b281d6","value":["[0 0 0 0]","four-element vector of nonnegative scalars"],"defaultvalue":"[0 0 0 0]"},{"name":"SlipRatio","purpose":"Slip or skid ratio of wheel","htmlid":"mw_ef00e416-1170-49e2-bbfc-6fe5e1e5c706","value":["[0 0 0 0]","four-element vector of scalars"],"defaultvalue":"[0 0 0 0]"},{"name":"TrackWidth","purpose":"Distance between wheel axles","htmlid":"mw_2a69d447-6fed-48e8-ac45-d0fba402f7c1","value":["[1.572 1.572]","two-element vector of positive scalars"],"defaultvalue":"[1.572 1.572]"},{"name":"TrackWidthBias","purpose":"Bias of track width","htmlid":"mw_15d3d1d9-2e3d-4b7b-a442-9e7f3f117b32","value":["0","two-element vector of scalars"],"defaultvalue":"0"},{"name":"WheelBase","purpose":"Distance between front and rear axles","htmlid":"mw_48a4b458-6c30-4de7-9ca3-ecfbd9c295b5","value":["2.818","positive scalar"],"defaultvalue":"2.818"},{"name":"RandomStream","purpose":"Random number source","htmlid":"mw_36ea737b-c9ca-43e2-87a9-31b8b260937b","value":["'Global stream'","'mt19937ar with seed'"],"defaultvalue":"'Global stream'"},{"name":"Seed","purpose":"Initial seed","htmlid":"mw_90d40935-18fb-4309-909b-3bc0c073b52c","value":["67","nonnegative integer"],"defaultvalue":"67"}]}],"objectfunctions":[{"title":"Common to All System Objects","functions":[{"name":"clone","url":"..\/..\/matlab\/ref\/matlab.system.clone.html","description":"Create duplicate System object"},{"name":"step","url":"..\/..\/matlab\/ref\/step.html","description":"Run System object algorithm"},{"name":"release","url":"..\/..\/matlab\/ref\/matlab.system.releasesystemobject.html","description":"Release resources and allow changes to System object property values and input characteristics"},{"name":"reset","url":"..\/..\/matlab\/ref\/resetsystemobject.html","description":"Reset internal states of System object"},{"name":"isLocked","url":"..\/..\/matlab\/ref\/matlab.system.islocked.html","description":"Determine if System object is in use"}]}],"examples":[{"url":"wheelencoderackermann-system-object.html#mw_5b4a8790-b55e-4f53-9824-3af9b6ae5cf5","open_command":"openExample('nav\/GenerateWheelTicksFromAckermannVehiclePoseExample')","title":"Generate Wheel Ticks from Ackermann Vehicle Pose"}]},{"href":"ref\/wheelencoderbicycle-system-object.html","refentity":[{"type":"sysobj","name":"wheelEncoderBicycle"},{"type":"function","name":"wheelEncoderBicycle","fcntype":"constructor"}],"refpurpose":"Simulate wheel encoder sensor readings for bicycle vehicle","introduced":"R2020b","description":"The wheelEncoderBicycle System object computes wheel encoder tick readings based on the pose input for a bicycle vehicle.","syntaxgroup":[{"title":"","syntaxtype":"createobject","syntax":["encoder = wheelEncoderBicycle","encoder= wheelEncoderBicycle(Name,Value)"]},{"title":"","syntaxtype":"usage","syntax":["ticks = encoder(velocity,angularVelocity,orientation)"]}],"inputgroup":[{"title":"","inputs":[{"name":"velocity","purpose":"Velocity of vehicle","syntaxtype":"usage","htmlid":"mw_2075dcc9-ceb9-481a-8c8f-a2a5732b6885","value":["N-by-3 matrix of scalars"]},{"name":"angularVelocity","purpose":"Angular velocity of vehicle","syntaxtype":"usage","htmlid":"mw_299c7e12-d8fb-469f-8f7a-e8b72df35d65","value":["N-by-3 matrix of scalars"]},{"name":"orientation","purpose":"orientation of vehicle","syntaxtype":"usage","htmlid":"mw_effc39ce-4cc8-4d05-b0cb-b5e76fb34ddf","value":["N-element vector of quaternion","3-by-3-by-N array of rotation matrices"]}]}],"outputs":[{"name":"ticks","purpose":"Number of wheel ticks per time step","syntaxtype":"usage","htmlid":"mw_7e659291-8c90-4859-9d06-d76f0db12aeb","value":["N-by-2 matrix of integer"]}],"classpropertygroup":[{"classproperty":[{"name":"SampleRate","purpose":"Sample rate of encoder","htmlid":"mw_f7dc36cd-81a6-4145-b30e-2f3c26c2a131","value":["100","positive scalar"],"defaultvalue":"100"},{"name":"TicksPerRevolution","purpose":"Number of encoder ticks per wheel revolution","htmlid":"mw_63159252-b30f-43d4-a528-c5613f27877f","value":["[2048 2048]","two-element vector of positive integers"],"defaultvalue":"[2048 2048]"},{"name":"WheelRadius","purpose":"Wheel radius","htmlid":"mw_32efc23e-034b-4062-ba6d-5a68dc3e66ca","value":["[0.35 0.35]","two-element vector of positive scalars"],"defaultvalue":"[0.35 0.35]"},{"name":"WheelRadiusBias","purpose":"Bias of wheel radius","htmlid":"mw_6609188f-2688-4e60-bc33-8b058ba7af72","value":["[0 0]","two-element vector of scalars"],"defaultvalue":"[0 0]"},{"name":"WheelPositionAccuracy","purpose":"Standard deviation of wheel position error","htmlid":"mw_fff94863-18c6-4499-bd40-8a7cd782623c","value":["[0 0]","two-element vector of nonnegative scalars"],"defaultvalue":"[0 0]"},{"name":"SlipRatio","purpose":"Slip or skid ratio of wheel","htmlid":"mw_7c699374-de56-491e-b6e4-fd75d4b332ac","value":["[0 0]","two-element vector of scalar"],"defaultvalue":"[0 0]"},{"name":"WheelBase","purpose":"Distance between front and rear wheels","htmlid":"mw_156c2fcd-6d50-4201-9ca0-9820522dfea8","value":["2.818","positive scalar"],"defaultvalue":"2.818"},{"name":"RandomStream","purpose":"Random number source","htmlid":"mw_016a9ff4-c2e7-4032-8660-e3f3aeafad1a","value":["'Global stream'","'mt19937ar with seed'"],"defaultvalue":"'Global stream'"},{"name":"Seed","purpose":"Initial seed of mt19937ar random number generator","htmlid":"mw_9b021d9c-c3cc-4d78-abfe-55dd7bd7552b","value":["67","nonnegative integer"],"defaultvalue":"67"}]}],"objectfunctions":[{"title":"Common to All System Objects","functions":[{"name":"clone","url":"..\/..\/matlab\/ref\/matlab.system.clone.html","description":"Create duplicate System object"},{"name":"step","url":"..\/..\/matlab\/ref\/step.html","description":"Run System object algorithm"},{"name":"release","url":"..\/..\/matlab\/ref\/matlab.system.releasesystemobject.html","description":"Release resources and allow changes to System object property values and input characteristics"},{"name":"reset","url":"..\/..\/matlab\/ref\/resetsystemobject.html","description":"Reset internal states of System object"},{"name":"isLocked","url":"..\/..\/matlab\/ref\/matlab.system.islocked.html","description":"Determine if System object is in use"}]}],"examples":[{"url":"wheelencoderbicycle-system-object.html#mw_175022ef-2771-4e7f-a7c8-5ae6018e0c6b","open_command":"openExample('nav\/GenerateWheelTicksFromBicycleVehiclePoseExample')","title":"Generate Wheel Ticks from Bicycle Vehicle Pose"}]},{"href":"ref\/wheelencoderdifferentialdrive-system-object.html","refentity":[{"type":"sysobj","name":"wheelEncoderDifferentialDrive"},{"type":"function","name":"wheelEncoderDifferentialDrive","fcntype":"constructor"}],"refpurpose":"Simulate wheel encoder sensor readings for differential drive vehicle","introduced":"R2020b","description":"The wheelEncoderDifferentialDrive System object computes wheel encoder tick readings based on the pose input of a differential drive vehicle.","syntaxgroup":[{"title":"","syntaxtype":"createobject","syntax":["encoder = wheelEncoderDifferentialDrive","encoder= wheelEncoderDifferentialDrive(Name,Value)"]},{"title":"","syntaxtype":"usage","syntax":["ticks = encoder(velocity,angularVelocity,orientation)"]}],"inputgroup":[{"title":"","inputs":[{"name":"velocity","purpose":"Velocity of vehicle","syntaxtype":"usage","htmlid":"mw_df5b3477-300c-4b67-8934-6a2a730c4c60","value":["N-by-3 matrix of scalars"]},{"name":"angularVelocity","purpose":"Angular velocity of vehicle","syntaxtype":"usage","htmlid":"mw_b56c5bdb-ffe8-4cbb-bb62-71c696e16afc","value":["N-by-3 matrix of scalars"]},{"name":"orientation","purpose":"orientation of vehicle","syntaxtype":"usage","htmlid":"mw_9c76024b-2f7b-45f2-9045-b25c370b13c7","value":["N-element vector of quaternion","3-by-3-by-N array of rotation matrices"]}]}],"outputs":[{"name":"ticks","purpose":"Number of wheel ticks per time step","syntaxtype":"usage","htmlid":"mw_c2bcb070-9da0-4d68-b2b4-477dbc73fd4d","value":["N-by-2 matrix of nonnegative integers"]}],"classpropertygroup":[{"classproperty":[{"name":"SampleRate","purpose":"Sample rate of encoder","htmlid":"mw_2e6ac8c8-22c8-4a6c-a573-8cbb0b546434","value":["100","positive scalar"],"defaultvalue":"100"},{"name":"TicksPerRevolution","purpose":"Number of encoder ticks per wheel revolution","htmlid":"mw_3d9cdfdd-4e62-4495-9a22-07e8d1adf521","value":["[2048 2048]","two-element vector of positive integers"],"defaultvalue":"[2048 2048]"},{"name":"WheelRadius","purpose":"Wheel radius","htmlid":"mw_cea3ac19-d184-4327-932c-a0fd2e282ba0","value":["[0.35 0.35]","two-element vector of positive scalars"],"defaultvalue":"[0.35 0.35]"},{"name":"WheelRadiusBias","purpose":"Bias of wheel radius","htmlid":"mw_50f48edb-1124-483c-a725-fd6e5796dfe7","value":["[0 0]","two-element vector of scalars"],"defaultvalue":"[0 0]"},{"name":"WheelPositionAccuracy","purpose":"Standard deviation of wheel position error","htmlid":"mw_e3a58b4b-952f-4987-8f7d-7a5c928f601c","value":["[0 0]","two-element vector of nonnegative scalar"],"defaultvalue":"[0 0]"},{"name":"SlipRatio","purpose":"Slip or skid ratio of wheel","htmlid":"mw_f1f46392-69d0-451d-b7d9-0c3f11bd1829","value":["[0 0]","two-element vector of scalar"],"defaultvalue":"[0 0]"},{"name":"TrackWidth","purpose":"Distance between wheel axles","htmlid":"mw_3549fe38-d54b-448c-9400-a1f40616ba7a","value":["1.572","positive scalar"],"defaultvalue":"1.572"},{"name":"TrackWidthBias","purpose":"Bias of track width","htmlid":"mw_ef70e607-d55c-4b91-9d88-2eab55e8c842","value":["0","scalar"],"defaultvalue":"0"},{"name":"RandomStream","purpose":"Random number source","htmlid":"mw_eea12161-73d8-4287-9e89-73dbdaeb2f0f","value":["'Global stream'","'mt19937ar with seed'"],"defaultvalue":"'Global stream'"},{"name":"Seed","purpose":"Initial seed","htmlid":"mw_aab35a50-6503-4d9f-8697-ade1119cea14","value":["67","nonnegative integer"],"defaultvalue":"67"}]}],"objectfunctions":[{"title":"Common to All System Objects","functions":[{"name":"clone","url":"..\/..\/matlab\/ref\/matlab.system.clone.html","description":"Create duplicate System object"},{"name":"step","url":"..\/..\/matlab\/ref\/step.html","description":"Run System object algorithm"},{"name":"release","url":"..\/..\/matlab\/ref\/matlab.system.releasesystemobject.html","description":"Release resources and allow changes to System object property values and input characteristics"},{"name":"reset","url":"..\/..\/matlab\/ref\/resetsystemobject.html","description":"Reset internal states of System object"},{"name":"isLocked","url":"..\/..\/matlab\/ref\/matlab.system.islocked.html","description":"Determine if System object is in use"}]}],"examples":[{"url":"wheelencoderdifferentialdrive-system-object.html#mw_cc587689-dba8-4917-b3ef-801033c94bfc","open_command":"openExample('nav\/GenerateWheelTicksFromDifferentialDriveVehiclePoseExample')","title":"Generate Wheel Ticks from Differential Drive Vehicle Pose"}]},{"href":"ref\/wheelencoderodometryackermann-system-object.html","refentity":[{"type":"sysobj","name":"wheelEncoderOdometryAckermann"},{"type":"function","name":"wheelEncoderOdometryAckermann","fcntype":"constructor"}],"refpurpose":"Compute Ackermann vehicle odometry using wheel encoder ticks and steering angle","introduced":"R2020b","description":"The wheelEncoderOdometryAckermann System object computes Ackermann vehicle odometry using the wheel encoder ticks and steering angle of the vehicle.","syntaxgroup":[{"title":"","syntaxtype":"createobject","syntax":["whlEncOdom = wheelEncoderOdometryAckermann","whlEncOdom = wheelEncoderOdometryAckermann(encoder)","whlEncOdom = wheelEncoderOdometryAckermann(Name,Value)"]},{"title":"","syntaxtype":"usage","syntax":["pose = whlEncOdom(ticks,steer)","[pose,velocity] = whlEncOdom(ticks,steer)"]}],"inputgroup":[{"title":"","inputs":[{"name":"ticks","purpose":"Number of wheel encoder ticks","syntaxtype":"usage","htmlid":"mw_215754d9-61c9-4387-a18e-e2b652b9b9a1","value":["n-by-2 matrix"]},{"name":"steer","purpose":"Steering angle of vehicle","syntaxtype":"usage","htmlid":"mw_7973e28b-f20a-4dee-9c41-80b0660e35b3","value":["n-element column vector"]}]}],"outputs":[{"name":"pose","purpose":"Position and orientation of vehicle","syntaxtype":"usage","htmlid":"mw_aafa6ba3-c61a-47a1-8644-2d157b1ac8ac","value":["n-by-3 matrix"]},{"name":"velocity","purpose":"Linear and angular velocity of vehicle","syntaxtype":"usage","htmlid":"mw_2749e78c-14af-4172-ac53-2c0b36f6ae28","value":["n-by-3 matrix"]}],"classpropertygroup":[{"classproperty":[{"name":"SampleRate","purpose":"Sample rate of sensor","htmlid":"mw_c3214105-e11a-4de5-849a-1618efe2f718","value":["100","positive scalar"],"defaultvalue":"100"},{"name":"TicksPerRevolution","purpose":"Number of encoder ticks per wheel revolution","htmlid":"mw_4071ea62-f1fd-485d-aa6e-4273a04b33b3","value":["[2048 2048]","positive integer","two-element vector of positive integers"],"defaultvalue":"[2048 2048]"},{"name":"WheelRadius","purpose":"Wheel radius","htmlid":"mw_8eba24f0-de8c-4d9b-a316-6b79f3a77cb7","value":["[0.35 0.35]","positive scalar","two-element vector of positive numbers"],"defaultvalue":"[0.35 0.35]"},{"name":"TrackWidth","purpose":"Distance between wheels on axle","htmlid":"mw_a064c4aa-3218-4432-9d50-67cd4680fffb","value":["1.572","positive scalar"],"defaultvalue":"1.572"},{"name":"WheelBase","purpose":"Distance between front and rear axle","htmlid":"mw_f1c6cc97-4bbb-4ffa-98fb-540e33d5dd24","value":["2.818","positive scalar"],"defaultvalue":"2.818"},{"name":"InitialPose","purpose":"Initial pose of vehicle","htmlid":"mw_9ada4eb9-5695-45a3-b34f-d9f1da922119","value":["[0 0 0]","three-element vector"],"defaultvalue":"[0 0 0]"}]}],"objectfunctions":[{"title":"Common to All System Objects","functions":[{"name":"clone","url":"..\/..\/matlab\/ref\/matlab.system.clone.html","description":"Create duplicate System object"},{"name":"step","url":"..\/..\/matlab\/ref\/step.html","description":"Run System object algorithm"},{"name":"release","url":"..\/..\/matlab\/ref\/matlab.system.releasesystemobject.html","description":"Release resources and allow changes to System object property values and input characteristics"},{"name":"reset","url":"..\/..\/matlab\/ref\/resetsystemobject.html","description":"Reset internal states of System object"},{"name":"isLocked","url":"..\/..\/matlab\/ref\/matlab.system.islocked.html","description":"Determine if System object is in use"}]}],"examples":[{"url":"wheelencoderodometryackermann-system-object.html#mw_d7038fa8-d6c4-495b-b6e7-cc00a58be620","open_command":"openExample('nav\/ComputeOdometryFromWheelEncoderTicksForAckermannVehicleExample')","title":"Compute Ackermann Vehicle Odometry Using Wheel Encoder Ticks and Steering Angle"}],"seealso":[{"url":"wheelencoderackermann-system-object.html","name":"wheelEncoderAckermann"},{"url":"wheelencoderodometrybicycle-system-object.html","name":"wheelEncoderOdometryBicycle"},{"url":"wheelencoderodometrydifferentialdrive-system-object.html","name":"wheelEncoderOdometryDifferentialDrive"},{"url":"wheelencoderodometryunicycle-system-object.html","name":"wheelEncoderOdometryUnicycle"}]},{"href":"ref\/wheelencoderodometrybicycle-system-object.html","refentity":[{"type":"sysobj","name":"wheelEncoderOdometryBicycle"},{"type":"function","name":"wheelEncoderOdometryBicycle","fcntype":"constructor"}],"refpurpose":"Compute bicycle odometry using wheel encoder ticks and steering angle","introduced":"R2020b","description":"The wheelEncoderOdometryBicycle System object computes bicycle odometry using the wheel encoder ticks and steering angle of the vehicle.","syntaxgroup":[{"title":"","syntaxtype":"createobject","syntax":["whlEncOdom = wheelEncoderOdometryBicycle","whlEncOdom = wheelEncoderOdometryBicycle(encoder)","whlEncOdom = wheelEncoderOdometryBicycle(Name,Value)"]},{"title":"","syntaxtype":"usage","syntax":["pose = whlEncOdom(ticks,steer)","[pose,velocity] = whlEncOdom(ticks,steer)"]}],"inputgroup":[{"title":"","inputs":[{"name":"ticks","purpose":"Number of wheel encoder ticks","syntaxtype":"usage","htmlid":"mw_6caecb37-0b09-4c2a-81d3-a0013a68eb26","value":["n-element column vector"]},{"name":"steer","purpose":"Steering angle of vehicle","syntaxtype":"usage","htmlid":"mw_e0502744-4793-4fec-b4d0-3fccc573ae4a","value":["n-element column vector"]}]}],"outputs":[{"name":"pose","purpose":"Position and orientation of vehicle","syntaxtype":"usage","htmlid":"mw_20a63f97-839c-421e-8aab-fefc2871aa9c","value":["n-by-3 matrix"]},{"name":"velocity","purpose":"Linear and angular velocity of vehicle","syntaxtype":"usage","htmlid":"mw_e3c1f304-ba89-4950-8f2a-94e5460fd83f","value":["n-by-3 matrix"]}],"classpropertygroup":[{"classproperty":[{"name":"SampleRate","purpose":"Sample rate of sensor","htmlid":"mw_02e53b44-921a-4190-803d-ad0e0e9f6229","value":["100","positive scalar"],"defaultvalue":"100"},{"name":"TicksPerRevolution","purpose":"Number of encoder ticks per wheel revolution","htmlid":"mw_33c6636f-bea2-42f9-b486-9b985d79c982","value":["2048","positive integer"],"defaultvalue":"2048"},{"name":"WheelRadius","purpose":"Wheel radius","htmlid":"mw_91d43d46-af04-4e82-b7e8-1564b4a5b431","value":["0.35","positive scalar"],"defaultvalue":"0.35"},{"name":"WheelBase","purpose":"Distance between front and rear axle","htmlid":"mw_da26d8f8-8786-4725-9210-06c2a3ae2fb0","value":["2.818","positive scalar"],"defaultvalue":"2.818"},{"name":"InitialPose","purpose":"Initial pose of vehicle","htmlid":"mw_66834610-debc-465e-9a98-c08f2bfbbb1d","value":["[0 0 0]","three-element vector"],"defaultvalue":"[0 0 0]"}]}],"objectfunctions":[{"title":"Common to All System Objects","functions":[{"name":"clone","url":"..\/..\/matlab\/ref\/matlab.system.clone.html","description":"Create duplicate System object"},{"name":"step","url":"..\/..\/matlab\/ref\/step.html","description":"Run System object algorithm"},{"name":"release","url":"..\/..\/matlab\/ref\/matlab.system.releasesystemobject.html","description":"Release resources and allow changes to System object property values and input characteristics"},{"name":"reset","url":"..\/..\/matlab\/ref\/resetsystemobject.html","description":"Reset internal states of System object"},{"name":"isLocked","url":"..\/..\/matlab\/ref\/matlab.system.islocked.html","description":"Determine if System object is in use"}]}],"examples":[{"url":"wheelencoderodometrybicycle-system-object.html#mw_2c3ecfb4-4464-4810-97cd-130e03fe547c","open_command":"openExample('nav\/ComputeOdometryFromWheelEncoderTicksForBicycleExample')","title":"Compute Bicycle Odometry Using Wheel Encoder Ticks and Steering Angle"}],"seealso":[{"url":"wheelencoderbicycle-system-object.html","name":"wheelEncoderBicycle"},{"url":"wheelencoderodometryackermann-system-object.html","name":"wheelEncoderOdometryAckermann"},{"url":"wheelencoderodometrydifferentialdrive-system-object.html","name":"wheelEncoderOdometryDifferentialDrive"},{"url":"wheelencoderodometryunicycle-system-object.html","name":"wheelEncoderOdometryUnicycle"}]},{"href":"ref\/wheelencoderodometrydifferentialdrive-system-object.html","refentity":[{"type":"sysobj","name":"wheelEncoderOdometryDifferentialDrive"},{"type":"function","name":"wheelEncoderOdometryDifferentialDrive","fcntype":"constructor"}],"refpurpose":"Compute differential-drive vehicle odometry using wheel encoder ticks","introduced":"R2020b","description":"The wheelEncoderOdometryDifferentialDrive System object computes differential-drive vehicle odometry using the wheel encoder ticks.","syntaxgroup":[{"title":"","syntaxtype":"createobject","syntax":["whlEncOdom = wheelEncoderOdometryDifferentialDrive","whlEncOdom = wheelEncoderOdometryDifferentialDrive(encoder)","whlEncOdom = wheelEncoderOdometryDifferentialDrive(Name,Value)"]},{"title":"","syntaxtype":"usage","syntax":["pose = whlEncOdom(ticks)","[pose,velocity] = whlEncOdom(ticks)"]}],"inputgroup":[{"title":"","inputs":[{"name":"ticks","purpose":"Number of wheel encoder ticks","syntaxtype":"usage","htmlid":"mw_da250279-4806-4f60-bc05-481481cac978","value":["n-by-2 matrix"]}]}],"outputs":[{"name":"pose","purpose":"Position and orientation of vehicle","syntaxtype":"usage","htmlid":"mw_83218d6a-3ac5-4a56-a58c-4d04b63b0daf","value":["n-by-3 matrix"]},{"name":"velocity","purpose":"Linear and angular velocity of vehicle","syntaxtype":"usage","htmlid":"mw_3645060e-0ffb-4c00-ac18-70c50edec714","value":["n-by-3 matrix"]}],"classpropertygroup":[{"classproperty":[{"name":"SampleRate","purpose":"Sample rate of sensor","htmlid":"mw_18a3545c-345c-443e-945b-199b768bd749","value":["100","positive scalar"],"defaultvalue":"100"},{"name":"TicksPerRevolution","purpose":"Number of encoder ticks per wheel revolution","htmlid":"mw_7d9213ff-372b-47e8-936f-b7bab281c123","value":["[2048 2048]","positive integer","two-element vector of positive integers"],"defaultvalue":"[2048 2048]"},{"name":"WheelRadius","purpose":"Wheel radius","htmlid":"mw_46b4d5ca-1145-46e4-82a4-07b2a16488ca","value":["[0.35 0.35]","positive scalar","two-element vector of positive numbers"],"defaultvalue":"[0.35 0.35]"},{"name":"TrackWidth","purpose":"Distance between wheels on axle","htmlid":"mw_df471ac9-31e1-4f8e-bd2b-7d46264615e8","value":["1.572","positive scalar"],"defaultvalue":"1.572"},{"name":"InitialPose","purpose":"Initial pose of vehicle","htmlid":"mw_965ab695-fb9d-4158-ab2f-fece041f9d2d","value":["[0 0 0]","three-element vector"],"defaultvalue":"[0 0 0]"}]}],"objectfunctions":[{"title":"Common to All System Objects","functions":[{"name":"clone","url":"..\/..\/matlab\/ref\/matlab.system.clone.html","description":"Create duplicate System object"},{"name":"step","url":"..\/..\/matlab\/ref\/step.html","description":"Run System object algorithm"},{"name":"release","url":"..\/..\/matlab\/ref\/matlab.system.releasesystemobject.html","description":"Release resources and allow changes to System object property values and input characteristics"},{"name":"reset","url":"..\/..\/matlab\/ref\/resetsystemobject.html","description":"Reset internal states of System object"},{"name":"isLocked","url":"..\/..\/matlab\/ref\/matlab.system.islocked.html","description":"Determine if System object is in use"}]}],"examples":[{"url":"wheelencoderodometrydifferentialdrive-system-object.html#mw_e930dcfe-b642-4715-a94d-397aba9178b6","open_command":"openExample('nav\/ComputeOdometryFromWheelEncoderTicksForDifferentialDriveExample')","title":"Compute Differential-Drive Vehicle Odometry Using Wheel Encoder Ticks"}],"seealso":[{"url":"wheelencoderdifferentialdrive-system-object.html","name":"wheelEncoderDifferentialDrive"},{"url":"wheelencoderodometryackermann-system-object.html","name":"wheelEncoderOdometryAckermann"},{"url":"wheelencoderodometrybicycle-system-object.html","name":"wheelEncoderOdometryBicycle"},{"url":"wheelencoderodometryunicycle-system-object.html","name":"wheelEncoderOdometryUnicycle"}]},{"href":"ref\/wheelencoderodometryunicycle-system-object.html","refentity":[{"type":"sysobj","name":"wheelEncoderOdometryUnicycle"},{"type":"function","name":"wheelEncoderOdometryUnicycle","fcntype":"constructor"}],"refpurpose":"Compute unicycle odometry using wheel encoder ticks and angular velocity","introduced":"R2020b","description":"The wheelEncoderOdometryUnicycle System object computes unicycle odometry using the wheel encoder ticks and angular velocity.","syntaxgroup":[{"title":"","syntaxtype":"createobject","syntax":["whlEncOdom = wheelEncoderOdometryUnicycle","whlEncOdom = wheelEncoderOdometryUnicycle(encoder)","whlEncOdom = wheelEncoderOdometryUnicycle(Name,Value)"]},{"title":"","syntaxtype":"usage","syntax":["pose = whlEncOdom(ticks,angVel)","[pose,velocity] = whlEncOdom(ticks,angVel)"]}],"inputgroup":[{"title":"","inputs":[{"name":"ticks","purpose":"Number of wheel encoder ticks","syntaxtype":"usage","htmlid":"mw_e0e4422a-9b4e-4b55-944c-42f1cd3f6b81","value":["n-element column vector"]},{"name":"angVel","purpose":"Angular velocity of vehicle in vehicle body coordinate system","syntaxtype":"usage","htmlid":"mw_220c7424-1ef8-465c-b654-21a3cd9cfd74","value":["n-element column vector"]}]}],"outputs":[{"name":"pose","purpose":"Position and orientation of vehicle","syntaxtype":"usage","htmlid":"mw_866123e4-6889-4c46-9c1e-2d5b9b4e32af","value":["n-by-3 matrix"]},{"name":"velocity","purpose":"Linear and angular velocity of vehicle","syntaxtype":"usage","htmlid":"mw_e6e18a19-29d3-4827-a03a-abc01f4d8576","value":["n-by-3 matrix"]}],"classpropertygroup":[{"classproperty":[{"name":"SampleRate","purpose":"Sample rate of sensor","htmlid":"mw_db67e196-4d7a-4719-9c00-b7c2d665b3a3","value":["100","positive scalar"],"defaultvalue":"100"},{"name":"TicksPerRevolution","purpose":"Number of encoder ticks per wheel revolution","htmlid":"mw_dc857071-31d2-43b1-8791-b22d20a417a0","value":["2048","positive integer"],"defaultvalue":"2048"},{"name":"WheelRadius","purpose":"Wheel radius","htmlid":"mw_a92e103c-ba53-4d72-82bd-825b675b2199","value":["0.35","positive scalar"],"defaultvalue":"0.35"},{"name":"InitialPose","purpose":"Initial pose of vehicle","htmlid":"mw_0bf61ff2-70ee-4cf2-abb5-448aab4936a2","value":["[0 0 0]","three-element vector"],"defaultvalue":"[0 0 0]"}]}],"objectfunctions":[{"title":"Common to All System Objects","functions":[{"name":"clone","url":"..\/..\/matlab\/ref\/matlab.system.clone.html","description":"Create duplicate System object"},{"name":"step","url":"..\/..\/matlab\/ref\/step.html","description":"Run System object algorithm"},{"name":"release","url":"..\/..\/matlab\/ref\/matlab.system.releasesystemobject.html","description":"Release resources and allow changes to System object property values and input characteristics"},{"name":"reset","url":"..\/..\/matlab\/ref\/resetsystemobject.html","description":"Reset internal states of System object"},{"name":"isLocked","url":"..\/..\/matlab\/ref\/matlab.system.islocked.html","description":"Determine if System object is in use"}]}],"examples":[{"url":"wheelencoderodometryunicycle-system-object.html#mw_f5d8827a-6ab0-4cb0-8f4f-a1b9d03191c8","open_command":"openExample('nav\/ComputeOdometryFromWheelEncoderTicksForUnicycleExample')","title":"Compute Unicycle Odometry Using Wheel Encoder Ticks and Angular Velocity"}],"seealso":[{"url":"wheelencoderunicycle-system-object.html","name":"wheelEncoderUnicycle"},{"url":"wheelencoderodometryackermann-system-object.html","name":"wheelEncoderOdometryAckermann"},{"url":"wheelencoderodometrybicycle-system-object.html","name":"wheelEncoderOdometryBicycle"},{"url":"wheelencoderodometrydifferentialdrive-system-object.html","name":"wheelEncoderOdometryDifferentialDrive"}]},{"href":"ref\/wheelencoderunicycle-system-object.html","refentity":[{"type":"sysobj","name":"wheelEncoderUnicycle"},{"type":"function","name":"wheelEncoderUnicycle","fcntype":"constructor"}],"refpurpose":"Simulate wheel encoder sensor readings for unicycle vehicle","introduced":"R2020b","description":"The wheelEncoderUnicycle System object computes wheel encoder tick readings based on the pose input of a unicycle vehicle.","syntaxgroup":[{"title":"","syntaxtype":"createobject","syntax":["encoder = wheelEncoderUnicycle","encoder = wheelEncoderUnicycle(Name,Value)"]},{"title":"","syntaxtype":"usage","syntax":["ticks = encoder(velocity,angularVelocity,orientation)"]}],"inputgroup":[{"title":"","inputs":[{"name":"velocity","purpose":"Velocity of vehicle","syntaxtype":"usage","htmlid":"mw_d2bbd2fc-2b73-40f2-b8f3-12e01435e6b0","value":["N-by-3 matrix of scalars"]},{"name":"angularVelocity","purpose":"Angular velocity of vehicle","syntaxtype":"usage","htmlid":"mw_591185a1-0407-4afb-b5f6-68e0f45f2da2","value":["N-by-3 matrix of scalars"]},{"name":"orientation","purpose":"orientation of vehicle","syntaxtype":"usage","htmlid":"mw_8ea78e4c-e87a-4aa9-99d5-37bb4ca4b37e","value":["N-element vector of quaternion","3-by-3-by-N array of rotation matrices"]}]}],"outputs":[{"name":"ticks","purpose":"Number of wheel ticks per time step","syntaxtype":"usage","htmlid":"mw_257c12e7-ab9b-46fc-a430-92367fc3f172","value":["N-element vector of nonnegative integers"]}],"classpropertygroup":[{"classproperty":[{"name":"SampleRate","purpose":"Sample rate of encoder","htmlid":"mw_4843514f-415c-42b5-be61-d73df7dc0d95","value":["100","positive scalar"],"defaultvalue":"100"},{"name":"TicksPerRevolution","purpose":"Number of encoder ticks per wheel revolution","htmlid":"mw_e1a4d1cb-52ec-4cca-8de6-f8221e278de3","value":["2048","positive integer"],"defaultvalue":"2048"},{"name":"WheelRadius","purpose":"Wheel radius","htmlid":"mw_2a1c7bdc-4482-44fc-b3f1-f9f24b811a6b","value":["0.35","positive scalar"],"defaultvalue":"0.35"},{"name":"WheelRadiusBias","purpose":"Bias of wheel radius","htmlid":"mw_ada3d7cb-0ceb-4dfc-a4cf-0247d1f6db07","value":["0","scalar"],"defaultvalue":"0"},{"name":"WheelPositionAccuracy","purpose":"Standard deviation of wheel position error","htmlid":"mw_f84090ee-6a17-4174-8d02-b891674f88a5","value":["0","nonnegative scalar"],"defaultvalue":"0"},{"name":"SlipRatio","purpose":"Slip or skid ratio of wheel","htmlid":"mw_b238f3c9-ed36-4c06-aa10-513d832576c5","value":["0","scalar"],"defaultvalue":"0"},{"name":"RandomStream","purpose":"Random number source","htmlid":"mw_687c96fd-d512-4ae9-b25e-ad2a3846fe05","value":["'Global stream'","'mt19937ar with seed'"],"defaultvalue":"'Global stream'"},{"name":"Seed","purpose":"Initial seed of mt19937ar random number generator algorithm","htmlid":"mw_fbb4d1a9-9418-41c6-a806-5180faba144e","value":["67","nonnegative integer"],"defaultvalue":"67"}]}],"objectfunctions":[{"title":"Common to All System Objects","functions":[{"name":"clone","url":"..\/..\/matlab\/ref\/matlab.system.clone.html","description":"Create duplicate System object"},{"name":"step","url":"..\/..\/matlab\/ref\/step.html","description":"Run System object algorithm"},{"name":"release","url":"..\/..\/matlab\/ref\/matlab.system.releasesystemobject.html","description":"Release resources and allow changes to System object property values and input characteristics"},{"name":"reset","url":"..\/..\/matlab\/ref\/resetsystemobject.html","description":"Reset internal states of System object"},{"name":"isLocked","url":"..\/..\/matlab\/ref\/matlab.system.islocked.html","description":"Determine if System object is in use"}]}],"examples":[{"url":"wheelencoderunicycle-system-object.html#mw_55d7afac-b692-4596-9538-bd0e683ef5a9","open_command":"openExample('nav\/GenerateWheelTicksFromUnicycleVehiclePoseExample')","title":"Generate Wheel Ticks from Unicycle Vehicle Pose"}]},{"href":"ref\/writebinaryoccupancygrid.html","refentity":[{"type":"function","name":"writeBinaryOccupancyGrid","fcntype":"simple"}],"refpurpose":"(To be removed) Write values from grid to ROS message","deprecationstatus":"warn","introduced":"R2015a","description":"This MATLAB function writes occupancy values and other information to the ROS message, msg, from the binary occupancy grid, map.","syntaxgroup":[{"title":"","syntax":["writeBinaryOccupancyGrid(msg,map)"]}],"inputgroup":[{"title":"","inputs":[{"name":"map","purpose":"Binary occupancy grid","htmlid":"buqbl58-map","value":["binaryOccupancyMap object handle"]},{"name":"msg","purpose":"'nav_msgs\/OccupancyGrid' ROS message","htmlid":"buqbl58-msg","value":["OccupancyGrid object handle"]}]}],"seealso":[{"url":"..\/..\/ros\/ref\/rosreadbinaryoccupancygrid.html","name":"rosReadBinaryOccupancyGrid"},{"url":"..\/..\/ros\/ref\/rosreadoccupancymap3d.html","name":"rosReadOccupancyMap3D"},{"url":"..\/..\/ros\/ref\/rosreadoccupancygrid.html","name":"rosReadOccupancyGrid"},{"url":"..\/..\/ros\/ref\/roswriteoccupancygrid.html","name":"rosWriteOccupancyGrid"}]},{"href":"ref\/writeoccupancygrid.html","refentity":[{"type":"function","name":"writeOccupancyGrid","fcntype":"simple"}],"refpurpose":"(To be removed) Write values from grid to ROS message","deprecationstatus":"warn","introduced":"R2016b","description":"This MATLAB function writes occupancy values and other information to the ROS message, msg, from the occupancy grid, map.","syntaxgroup":[{"title":"","syntax":["writeOccupancyGrid(msg,map)"]}],"inputgroup":[{"title":"","inputs":[{"name":"msg","purpose":"'nav_msgs\/OccupancyGrid' ROS message","htmlid":"mw_d0221653-fa37-4168-ae3c-80a859a82bce","value":["OccupancyGrid object handle"]},{"name":"map","purpose":"Occupancy map","htmlid":"mw_34b0dc64-8f76-4873-a2ee-6249bfbd359d","value":["occupancyMap object handle"]}]}],"seealso":[{"url":"..\/..\/ros\/ref\/rosreadbinaryoccupancygrid.html","name":"rosReadBinaryOccupancyGrid"},{"url":"..\/..\/ros\/ref\/rosreadoccupancymap3d.html","name":"rosReadOccupancyMap3D"},{"url":"..\/..\/ros\/ref\/rosreadoccupancygrid.html","name":"rosReadOccupancyGrid"},{"url":"..\/..\/ros\/ref\/roswriteoccupancygrid.html","name":"rosWriteOccupancyGrid"}]},{"href":"ref\/yumaread.html","refentity":[{"type":"function","name":"yumaread","fcntype":"simple"}],"refpurpose":"Read data from YUMA almanac file","introduced":"R2023a","description":"This MATLAB function reads data from the YUMA almanac file specified by filename, and returns the parameters of each associated satellite as a timetable.","syntaxgroup":[{"title":"","syntax":["data = yumaread(filename)","data = yumaread(filename,GPSWeekEpoch=refdate)"]}],"inputgroup":[{"title":"","inputs":[{"name":"filename","purpose":"YUMA almanac filename","htmlid":"mw_81d418c5-971a-4a0f-8c83-b737bdf253e2","value":["string scalar","character vector"]},{"name":"refdate","purpose":"Reference date","htmlid":"mw_d60e02c2-e087-4f49-adc5-095f299737e1","value":["\"06-Jan-1980\"","\"21-Aug-1999\"","\"06-Apr-2019\""]}]}],"outputs":[{"name":"data","purpose":"Parameters of each satellite","htmlid":"mw_44592df5-e583-4bd4-8333-84e1be049c83","value":["timetable"]}],"examples":[{"url":"yumaread.html#mw_1e9e2b37-f721-4642-91f1-9c74fd4a79f2","open_command":"openExample('nav\/ReadGPSNavigationMessageDataFromYUMAAlmanacFileExample')","title":"Read GPS Navigation Message Data from YUMA Almanac File"},{"url":"yumaread.html#mw_a9ef1578-02cc-49cf-bae5-ac6d06c40fef","open_command":"openExample('nav\/ViewSatellitePositionsFromYUMAAlmanacForReceiverPositionExample')","title":"View Satellite Positions Visible from Receiver Position Using YUMA Almanac File"},{"url":"yumaread.html#mw_befa5185-b2b4-46bb-8dbf-105584894805","open_command":"openExample('nav\/ExtractGPSAndQZSSDataFromYUMAAlmanacFileExample')","title":"Extract GPS and QZSS Data from YUMA Almanac File"},{"url":"yumaread.html#mw_732b8d4b-ffc0-4cf3-8d2a-406b1720e982","open_command":"openExample('nav\/PlotTrajectoriesOfSatellitesOverTimeFromYUMAAlmanacFileExample')","title":"Plot Trajectories of Satellites over Time from YUMA Almanac File"}],"seealso":[{"url":"semread.html","name":"semread"},{"url":"rinexread.html","name":"rinexread"},{"url":"gnssconstellation.html","name":"gnssconstellation"},{"url":"skyplot.html","name":"skyplot"}]}]}