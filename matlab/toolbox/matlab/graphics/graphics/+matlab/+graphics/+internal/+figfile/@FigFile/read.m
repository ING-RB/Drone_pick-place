function read(obj, filename)
%read   Read a file and store its contents in the object
%
%  read(obj, file) reads the contents of the specified figure
%  file and store them in the FigFile object.  Any existing
%  data that is being held by the FigFile will be discarded.
%
%  read(obj) reads the contents of the file that the Path
%  property is set to.

%  Copyright 2011-2024 The MathWorks, Inc.

if nargin <2
    filename = obj.Path;
end

if isempty(filename)
    error(message('MATLAB:graphics:internal:figfile:FigFile:EmptyFilename'));
end

% Disable expected warnings that might be generated by loading a FIG file.
ws(1) = warning('off', 'MATLAB:load:variablePatternNotFound');
ws(2) = warning('off', 'Matlab:Figure:SetResize');
ws(3) = warning('off', 'Matlab:Figure:SetPosition');
ws(4) = warning('off', 'Matlab:Figure:SetOuterPosition');
clean_ws = onCleanup(@() warning(ws));

hgDataVars = load(filename, '-mat', '-regexp', '^(hg[M]|meta_data)');
varNames = string(fieldnames(hgDataVars));
if ~any(startsWith(varNames,"hg"))
   hgDataVars = load(filename, '-mat', '-regexp', '^(hg[S]|meta_data)');
   varNames = string(fieldnames(hgDataVars));
   lastwarn('');
end

% Find hgS... variables
vars_hgS = varNames(startsWith(varNames,"hgS"));

% Find hgM... variables
vars_hgM = varNames(startsWith(varNames,"hgM"));

% Fig format version
figVer = -1;

% Saved-in version string
savedVar = "";

if isscalar(vars_hgM)
    % Version 3 files should also have an hgM.
    figVer = 3;
    savedVar = vars_hgM;
    result = NaN;
    fieldData = hgDataVars.(vars_hgM);
    if isfield(fieldData,'GraphicsObjects') ...
            && isa(fieldData.GraphicsObjects, ...
            'matlab.graphics.internal.figfile.GraphicsObjects')
        result = hgDataVars.(vars_hgM).GraphicsObjects.Format3Data;
    end
    if all(isgraphics(result))
        obj.Format3Data = result;
    end
elseif isscalar(vars_hgS)
    % Version 2 files should have an hgS variable.
    figVer = 2;
    savedVar = vars_hgS;
    obj.Format2Data = hgDataVars.(vars_hgS);
end
obj.Path = filename;
obj.FigFormat = figVer;

% Get the version that saved the file from the variable name
obj.RequiredMatlabVersion = localGetSaveVersion(savedVar);

% Sync the graphics tree after load to create any transient objects
matlab.graphics.internal.drawnow.startUpdate;

obj.ReadLogFcn(hgDataVars, savedVar);

end

function verNum = localGetSaveVersion(varName)
% Parse the saved version from a variable name string

verNum = -1;
verString = regexp(varName, '_(.*)$', 'once', 'tokens');
if ~isempty(verString)
    verNum = str2double(verString);
end

end

% LocalWords: hgM hgS
