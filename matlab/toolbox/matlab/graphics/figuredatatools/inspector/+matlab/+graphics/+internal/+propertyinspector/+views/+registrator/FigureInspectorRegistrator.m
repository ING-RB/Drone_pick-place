classdef FigureInspectorRegistrator < internal.matlab.inspector_registration.InspectorRegistrator
    % Registers component property inspector views
    % This will be called during build of the matlab_graphics_toolbox component.
    % It creates the inspector registration cache file for the components listed
        % below, in the toolbox/matlab/graphics/figuredatatools directory.

    % Copyright 2017-2024 The MathWorks, Inc.

    properties(Constant)
        % The graphics inspector provides the default inspector views
        RegistrationName = 'default';
    end

    methods(Static = true)
        function path = getRegistrationFilePath()
            path = fullfile((matlabroot), "toolbox", "matlab", "graphics", "figuredatatools", "inspector");
        end

        function name = getRegistrationName()
            name = matlab.graphics.internal.propertyinspector.views.registrator.FigureInspectorRegistrator.RegistrationName;
        end
    end

    methods
        function this = FigureInspectorRegistrator
            this@internal.matlab.inspector_registration.InspectorRegistrator;
        end


        function registerInspectorComponents(obj)
            % This file needs to be build and changed to incorporate our
            % changes
            % internal.matlab.inspector.peer.InspectorFactory.buildRegistration([(matlabroot) '/toolbox/matlab/datatools/inspector/registration/inspectorProxyViewMapCache.mat'],'inspector','matlab.graphics.internal')
            % NOTE: Make sure you touch toolbox\matlab\datatools\inspector\registration\buildRegistration.m file when updating any property views
            applicationNames = {
                % default
                ''; ...
                };

            % Components To Register
            %
            % This list should be able to be updated without needing to update any code
            % further down
            parent = figure("Visible", "off");
            parentAxes = axes(parent);
            cl1 = onCleanup(@() delete(parent));

            components = {
                'matlab.ui.Figure', ...
                'matlab.graphics.axis.Axes', ...
                'matlab.ui.control.UIAxes', ...
                'matlab.graphics.datatip.DataTip', ...
                'matlab.graphics.chart.primitive.Line', ...
                'matlab.graphics.primitive.Text',...
                'matlab.graphics.chart.primitive.Bar',...
                'matlab.graphics.shape.TextArrow',...
                'matlab.graphics.shape.TextBox',...
                'matlab.graphics.shape.Arrow',...
                'matlab.graphics.shape.Rectangle',...
                'matlab.graphics.primitive.Surface',...
                'matlab.graphics.chart.primitive.Surface',...
                'matlab.graphics.illustration.Legend',...
                'matlab.graphics.primitive.Patch',...
                'matlab.graphics.primitive.Rectangle',...
                'matlab.graphics.shape.Line',...
                'matlab.graphics.shape.Ellipse',...
                'matlab.graphics.shape.DoubleEndArrow',...
                'matlab.graphics.chart.primitive.Area',...
                'matlab.graphics.chart.primitive.BubbleChart',...
                'matlab.graphics.chart.primitive.BoxChart',...
                'matlab.graphics.chart.primitive.Scatter',...
                'matlab.graphics.chart.primitive.ViolinPlot',...
                'matlab.graphics.chart.primitive.Stair',...
                'matlab.graphics.chart.primitive.Stem',...
                'matlab.graphics.primitive.Line',...
                'matlab.graphics.animation.AnimatedLine',...
                'matlab.graphics.axis.PolarAxes',...
                'matlab.graphics.chart.primitive.Contour',...
                'matlab.graphics.chart.primitive.GraphPlot',...
                'matlab.graphics.chart.primitive.Binscatter',...
                'matlab.graphics.chart.primitive.PolarCompassPlot',...
                'matlab.graphics.primitive.Image',...
                'matlab.graphics.primitive.Light',...
                'matlab.graphics.chart.HeatmapChart',...
                'matlab.graphics.chart.primitive.ErrorBar',...
                'matlab.graphics.chart.primitive.Histogram',...
                'matlab.graphics.chart.primitive.Histogram2',...
                'matlab.graphics.function.FunctionSurface',...
                'matlab.graphics.function.ImplicitFunctionLine',...
                'matlab.graphics.function.ImplicitFunctionSurface',...
                'matlab.graphics.function.ParameterizedFunctionLine',...
                'matlab.graphics.function.ParameterizedFunctionSurface',...
                'matlab.graphics.illustration.ColorBar',...
                'matlab.graphics.chart.primitive.categorical.Histogram',...
                'matlab.graphics.function.FunctionLine',...
                'matlab.graphics.chart.GeographicBubbleChart',...
                'matlab.graphics.chart.primitive.ConstantLine',...
                'matlab.graphics.chart.primitive.FunctionLine',...
                'matlab.graphics.chart.WordCloudChart',...
                'matlab.ui.container.Panel',...
                'matlab.graphics.primitive.Polygon',...
                'matlab.graphics.chart.primitive.tall.Scatter',...
                'matlab.graphics.chart.primitive.tall.Line',...
                'textanalytics.chart.TextScatter',...
                'matlab.graphics.chart.decoration.ConstantLine',...
                'matlab.graphics.chart.decoration.ConstantPlane',...
                'matlab.graphics.chart.decoration.ConstantRegion',...
                'matlab.graphics.chart.decoration.PolarRegion',...
                'matlab.graphics.axis.decorator.NumericRuler',...
                'matlab.graphics.axis.decorator.DatetimeRuler',...
                'matlab.graphics.axis.decorator.DurationRuler',...
                'matlab.graphics.axis.decorator.CategoricalRuler',...
                'matlab.graphics.chart.primitive.Quiver',...
                'matlab.graphics.chart.primitive.DensityPlot',...
                'matlab.graphics.axis.GeographicAxes',...
                'matlab.graphics.axis.decorator.GeographicRuler',...
                'matlab.graphics.illustration.subplot.Text',...
                'matlab.graphics.chart.ScatterHistogramChart',...
                'matlab.ui.control.Table',...
                'matlab.graphics.chart.StackedLineChart',...
                'matlab.graphics.chart.ParallelCoordinatesPlot',...
                'matlab.graphics.chart.BubbleCloud', ...
                'matlab.graphics.chart.PieChart', ...
                'matlab.graphics.chart.DonutChart'...
                };

            % Ignore some graphics warnings that may be thrown during build time
            % creation of graphics objects.
            w(1) = warning("off", "MATLAB:handle_graphics:exceptions:SceneNode");
            w(2) = warning("off", "MATLAB:callback:error");
            w(3) = warning("off", "MATLAB:handle_graphics:exceptions:HandleGraphicsException");
            cl2 = onCleanup(@() warning(w));

            % Loop over all components
            for componentIdx = 1:length(components)

                componentFullName = components{componentIdx};
                indices = regexp(componentFullName, '\.');
                componentShortName = componentFullName(indices(end) + 1 : end);

                switch (true)
                    case contains(componentFullName,'.tall.')
                        componentShortName = ['Tall' componentShortName]; %#ok<AGROW>
                    case contains(componentFullName,'.subplot.')
                        componentShortName = ['Subplot' componentShortName]; %#ok<AGROW>
                    case contains(componentFullName,'.categorical.')
                        componentShortName = ['Categorical' componentShortName]; %#ok<AGROW>
                    case contains(componentFullName,'.primitive.')
                        if strcmpi(componentFullName,'matlab.graphics.chart.primitive.Line')
                            componentShortName = ['Chart' componentShortName];  %#ok<AGROW>
                        else
                            componentShortName = ['Primitive' componentShortName]; %#ok<AGROW>
                        end
                    case contains(componentFullName,'.decoration.')
                        componentShortName = ['Decoration' componentShortName]; %#ok<AGROW>
                    otherwise
                end



                % Assume its matlab.graphics.internal.propertyinspector.views.<ShortName>PropertyView
                %
                % Ex:
                % matlab.graphics.internal.propertyinspector.views.AxesPropertyView
                propertyViewClass = sprintf('matlab.graphics.internal.propertyinspector.views.%sPropertyView', componentShortName);

                % Loop over all applications
                for applicationIdx = 1:length(applicationNames)

                    applicationName = applicationNames{applicationIdx};

                    try
                        defaultObj = feval(componentFullName);
                        if isprop(defaultObj, "Parent") && ~strcmp(componentFullName, 'matlab.ui.Figure')
                            try
                                defaultObj.Parent = parent;
                            catch
                                try
                                    defaultObj.Parent = parentAxes;
                                catch
                                end
                            end
                        end
                    catch
                        defaultObj = [];
                    end

                    % Register all the objects specified
                    obj.inspectorRegistrationManager.registerInspectorView(...
                        componentFullName, ...
                        applicationName, ...
                        propertyViewClass, ...
                        defaultObj ...
                        );

                    if ~isempty(defaultObj)
                        delete(defaultObj);
                    end
                end
            end
        end
    end
end
