function str = getFileHeader(varargin)
%getFileHeader Utility for generating a file header
%   getFileHeader Generates a file header with no custom annotations for
%   the signal processing toolbox using '%' as the commenting character.
%
%   getFileHeader(DESC) Generates a file header and adds the description
%   DESC before the toolbox information.  If DESC is less than 10
%   characters it will be on the same line as the toolbox information.
%
%   getFileHeader(DESC, TBX) Generates a file header for the toolbox
%   specified in the string TBX.
%
%   getFileHeader(DESC, TBX, COM) Generates a file header using the
%   COM as the commenting character.
%
%   getFileHeader(DESC, TBX, COM, DATEFORM) Generates a file header using
%   the specified DATEFORM.  See DATESTR for more information.  DATEFORM is
%   0 by default.
%
%   If DESC or TBX is '', the defaults will be used.

%   Copyright 1988-2012 The MathWorks, Inc.

desc     = '';
tbx      = '';
comment  = '%';
dateform = 0;

if ~isempty(varargin)
    if isnumeric(varargin{end})
        dateform      = varargin{end};
        varargin(end) = [];
    end
end
if ~isempty(varargin)
    desc = varargin{1};
end
if length(varargin) > 1
    tbx = varargin{2};
end
if length(varargin) > 2
    comment = varargin{3};
end

% Get the toolbox info which includes the name and version.

% Append MATLAB to list of Toolboxes:
if isempty(tbx)
    tbx = {'matlab'};
elseif ~iscell(tbx)
    tbx = {'matlab', tbx};
    % work with cell arrays
else
    tbx = ['matlab', tbx];
end
s = '';
for idx = 1:length(tbx)
    tinfo = ver(tbx{idx});
    tinfo = tinfo(1); % In case there are multiple toolboxes on the path.
    
    if idx == length(tbx)
        s = [s ' and ']; %#ok<*AGROW>
    elseif idx ~= 1
        s = [s ', '];
    end
    if strcmpi(tbx{idx}, 'matlab')
        % add copyright
        tinfo.Name = [tinfo.Name '(R)'];
    end
    
    s = [s sprintf('%s %s %s', tinfo.Name, tinfo.Version, tinfo.Release)];
end

% If the description is short and does not end with a '.' we want to
% attach it to the 'generated by' line.  Otherwise it goes on its own line.
if isempty(desc)
    descStr=desc;
    str1 = sprintf('Generated by %s.', s);
elseif length(desc) < 10 && desc(end) ~= '.'
    descStr = '';
    str1 = sprintf('%s generated by %s.', desc, s);
else
    descStr = sprintf(' %s\n%s', desc,comment);
    str1 = sprintf('Generated by %s.', s);
end


% Make sure the "generated on/at/in" makes sense.
switch dateform
    case {3, 4, 5, 10, 11, 12, 17, 18, 27, 28}
        str2 = sprintf('%s Generated in: %s', comment, ...
            datestr(now, dateform));
    case {13, 14, 15, 16}
        str2 = sprintf('%s Generated at: %s', comment, ...
            datestr(now, dateform));
    otherwise
        str2 = sprintf('%s Generated on: %s', comment, ...
            datestr(now, dateform));
end

str = sprintf('%s%s %s\n%s', comment, descStr, str1, str2);

