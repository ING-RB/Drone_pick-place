function [k0,k1,l] = clothoidG1fit(z0,theta0,z1,theta1)
%MATLABSHARED.TRACKING.INTERNAL.SCENARIO.CLOTHOIDG1FIT Fit clothoid segment suitable for G1 Hermite interpolation.
%
%   This function is for internal use only and may be removed in a later
%   release.
%
%   [K0,K1,L] = MATLABSHARED.TRACKING.INTERNAL.SCENARIO.CLOTHOIDG1FIT(Z0,THETA0,Z1,THETA1)
%   fits a curve in the complex plane whose curvature varies linearly with
%   respect to distance traveled between points Z0 and Z1, with
%   corresponding tangent angles THETA0 and THETA1.  It returns the initial
%   curvature K0, final curvature K1, and length of the curve, L.
%
%   MATLABSHARED.TRACKING.INTERNAL.SCENARIO.CLOTHOIDG1FIT(Z0,THETA0,Z1,THETA1)
%   without output arguments produces a plot of the fitted clothoid
%   segment.
%
%   Example:
%   % Fit a clothoid curve starting at (3,4) and ending at (1,7) with an
%   % initial tangent at 45 degrees and final tangent at 90 degrees.
%   matlabshared.tracking.internal.scenario.clothoidG1fit(complex(3,4),deg2rad(45),complex(1,7),deg2rad(90))

%   Reference: 
%   [1] Enrico Bertolazzi, Marco Frego. "Fast and accurate clothoid fitting"
%       ArXiv:1209.0910v1 [math.NA].

%   Copyright 2017-2018 The MathWorks, Inc.

%#codegen

z = z1-z0;
phi = angle(z);
phi0 = angle(exp(1i*(theta0-phi)));
phi1 = angle(exp(1i*(theta1-phi)));
d = phi1-phi0;
c = phi0;


a = findA(guessA(phi0, phi1), c, d);
rsfa = matlabshared.tracking.internal.scenario.fresnelg(1, 2*a, d-a, c);

l = abs(z)/real(rsfa);

if nargout==0
    b = (d-a)/l;
    a = 2*a/(l*l);
    if l==0
        b = 0;
        a = 0;
    end
    c = theta0;
    z = z0 + matlabshared.tracking.internal.scenario.fresnelg(0:l*sign(l)/1000:l,a,b,c);
    plot(real(z),imag(z))
    axis equal
else
    if l==0
        k0 = 0;
        k1 = 0;
    else
    k0 = (d-a)/l;
    k1 = (d+a)/l;
end
end

function a = findA(a, c, d)
apos = nan;
aneg = nan;
epos = inf;
eneg = -inf;
aold = 0;
iter = 0;

while abs((a-aold)/a) > 10*eps
    if abs((d-a).^2/(4*a))<20*pi
        a1 = sqrt(complex(2*a/pi,0 ));
        a2 = (d-a)/sqrt(complex(2*pi*a, 0));
        fa1 = matlabshared.tracking.internal.scenario.fresnel(a1+a2);
        fa2 = matlabshared.tracking.internal.scenario.fresnel(a2);
        fa = fa1 - fa2;

        s = sqrt(complex(pi/(2*a), 0));
        r = exp(1i*(c-(d-a).^2/(4*a)));
        rs = s*r;
        rsfa = rs*fa;

        da1 = 1/sqrt(complex(2*pi*a, 0));
        da2 = (d-a)*(-pi/sqrt(complex(2*pi*a, 0)).^3)-1/sqrt(complex(2*pi*a, 0));
        dfa1 = exp(1i*pi/2*(a1+a2).^2)*(da1+da2);
        dfa2 = exp(1i*pi/2*(a2   ).^2)*(da2);
        dfa = sign(a)*(dfa1 - dfa2);

        ds = -sqrt(complex(pi/(2*a), 0)).^3/pi;
        dr = r * (-1i*((d-a).^2* -(4*a)^-2*4 + (4*a)^-1 * 2*(d-a)*(-1)));

        drs = s*dr + r*ds;
        drsfa = rs * dfa + fa*drs;
    else
        rsfa = matlabshared.tracking.internal.scenario.fresnelg(1,2*a,d-a,c);
        drsfa = dfresnelgsma1(2*a,d,c);
    end

    err = imag(rsfa(1));
    
    if err==0
        break
    elseif err>0 && epos>err
        epos = err;
        apos = a;
        aold = a;
        a = aold - err/imag(drsfa);
    elseif err<0 && eneg<err
        eneg = err;
        aneg = a;
        aold = a;
        a = aold - err/imag(drsfa);
    elseif isnan(apos)
        aold = aneg;
        a = 2*a-aneg;
    elseif isnan(aneg)
        aold = apos;
        a = 2*a-apos;
    else
        aold = a;
        a = (apos + aneg) / 2;
    end
    
    
    iter = iter + 1;
    if iter>50
        break
    end
end

% Reference [1] has initial conditions as:
%    a = 2.467*(phi1-phi0)+ 5.2478 * phi0,
%      = 2.467 * phi1     + 2.7808 * phi0;
% which has unequal bias between phi1 and phi0.
%
% This is Enrico Bertalozzi's supplied "guessA" function available in 
% MATLAB Central's File Exchange.  

function a = guessA(phi0, phi1)
c = [ 2.989696028701907
      0.716228953608281
     -0.458969738821509
     -0.502821153340377
      0.261062141752652
     -0.045854475238709];
x  = phi0/pi;
y  = phi1/pi;
xy = x*y;
a  = (phi0+phi1) * (c(1) ...
                    + xy * (c(2) + xy * c(3)) ...
                    + (x^2+y^2) * (c(4) + xy * c(5)) ...
                    + (x^4+y^4) * c(6));
                
function z = dfresnelgsma1(a,d,c)

s = getTable;

a2 = 1i*a/2;

tn = complex(1,0);
sn = complex(0,0);
for n=0:20
    tk = complex(1,0);
    sk = tk .* s(n+1,1);
    for k=1:20
        tk = tk .* 1i*d ./ k; 
        sk = sk + tk .* s(n+1,k+1);
    end
    sn = sn + tn.*sk;
    tn = tn .* ((a2)./(n+1));
end

z = sn .* 1i .* exp(1i.*c);


function s = getTable
% syms x s;
% for n=0:20
%   for k=0:20
%     s(n+1,k+1) = int(x.^k.*(x*x-x).^(n+1),x,0,1);
%   end
% end
%
% row1  n*nchoosek(n+1,1)  [n=2,3,...]
% row2  n*nchoosek(n+2,2)  [n=3,4,...]
% row3  n*nchoosek(n+3,3)  [n=4,5,...]
% row4  n*nchoosek(n+4,4)  [n=5,6,...]
%
% i=(1:20); j=i';
% s = (-1).^j ./ (i+j).*arrayfun(@(i,j)nchoosek(i,j),i+j+j,j+i*0)

s =[              -1/6,             -1/12,             -1/20,              -1/30,              -1/42,              -1/56,               -1/72,               -1/90,              -1/110,              -1/132,               -1/156,               -1/182,               -1/210,               -1/240,               -1/272,                -1/306,                -1/342,                -1/380,                -1/420,                -1/462,                 -1/506
                  1/30,              1/60,             1/105,              1/168,              1/252,              1/360,               1/495,               1/660,               1/858,              1/1092,               1/1365,               1/1680,               1/2040,               1/2448,               1/2907,                1/3420,                1/3990,                1/4620,                1/5313,                1/6072,                 1/6900
                -1/140,            -1/280,            -1/504,             -1/840,            -1/1320,            -1/1980,             -1/2860,             -1/4004,             -1/5460,             -1/7280,              -1/9520,             -1/12240,             -1/15504,             -1/19380,             -1/23940,              -1/29260,              -1/35420,              -1/42504,              -1/50600,              -1/59800,               -1/70200
                 1/630,            1/1260,            1/2310,             1/3960,             1/6435,            1/10010,             1/15015,             1/21840,             1/30940,             1/42840,              1/58140,              1/77520,             1/101745,             1/131670,             1/168245,              1/212520,              1/265650,              1/328900,              1/403650,              1/491400,               1/593775
               -1/2772,           -1/5544,          -1/10296,           -1/18018,           -1/30030,           -1/48048,            -1/74256,           -1/111384,           -1/162792,           -1/232560,            -1/325584,            -1/447678,            -1/605682,            -1/807576,           -1/1062600,            -1/1381380,            -1/1776060,            -1/2260440,            -1/2850120,            -1/3562650,             -1/4417686
               1/12012,           1/24024,           1/45045,            1/80080,           1/136136,           1/222768,            1/352716,            1/542640,            1/813960,           1/1193808,            1/1716099,            1/2422728,            1/3364900,            1/4604600,            1/6216210,             1/8288280,            1/10925460,            1/14250600,            1/18407025,            1/23560992,             1/29904336
              -1/51480,         -1/102960,         -1/194480,          -1/350064,          -1/604656,         -1/1007760,          -1/1627920,          -1/2558160,          -1/3922512,          -1/5883768,           -1/8652600,          -1/12498200,          -1/17760600,          -1/24864840,          -1/34337160,           -1/46823400,           -1/63109800,           -1/84146400,          -1/111073248,          -1/145249632,           -1/188286560
              1/218790,          1/437580,          1/831402,          1/1511640,          1/2645370,          1/4476780,           1/7354710,          1/11767536,          1/18386775,          1/28120950,           1/42181425,           1/62162100,           1/90135045,          1/128764350,          1/181440675,           1/252439200,           1/347103900,           1/472061304,           1/635467140,           1/847289520,           1/1119632580
             -1/923780,        -1/1847560,        -1/3527160,         -1/6466460,        -1/11440660,        -1/19612560,         -1/32687600,         -1/53117350,         -1/84362850,        -1/131231100,         -1/200300100,         -1/300450150,         -1/443521650,         -1/645122400,         -1/925610400,         -1/1311281400,         -1/1835793960,         -1/2541868560,         -1/3483301360,         -1/4727337560,          -1/6357453960
             1/3879876,         1/7759752,        1/14872858,         1/27457584,         1/49031400,         1/84987760,         1/143416845,         1/236215980,         1/380570190,         1/600900300,          1/931395465,         1/1419269280,         1/2128903920,         1/3147075360,         1/4589484900,          1/6608858256,          1/9404913672,         1/13236545168,         1/18436616484,         1/25429815840,          1/34754081648
           -1/16224936,       -1/32449872,       -1/62403600,       -1/115892400,       -1/208606320,       -1/365061060,        -1/622751220,       -1/1037918700,       -1/1693446300,       -1/2709514080,        -1/4257807840,        -1/6580248480,       -1/10013421600,       -1/15020132400,       -1/22229795952,        -1/32489701776,        -1/46929569232,        -1/67042241760,        -1/94783859040,       -1/132697402656,        -1/184064139168
            1/67603900,       1/135207800,       1/260757900,        1/486748080,        1/882230895,       1/1556878050,        1/2681289975,        1/4515856800,        1/7451163720,       1/12063788880,        1/19192391400,        1/30040264800,        1/46312074900,        1/70394353848,       1/105591530772,        1/156431897440,        1/229060992680,        1/331743506640,        1/475499026184,        1/674901843616,         1/949080717585
          -1/280816200,      -1/561632400,     -1/1085822640,      -1/2035917450,      -1/3712555350,      -1/6600098400,      -1/11463328800,      -1/19487658960,      -1/32479431600,      -1/53148160800,       -1/85499215200,      -1/135373757400,      -1/211183061544,      -1/324897017760,      -1/493362138080,       -1/740043207120,      -1/1097305445040,      -1/1609381319392,      -1/2336198689440,      -1/3358285616070,       -1/4783012847130
          1/1163381400,      1/2326762800,      1/4508102925,       1/8485840800,      1/15557374800,      1/27839512800,       1/48719147400,       1/83518538400,      1/140462996400,      1/232069298400,       1/377112609900,       1/603380175840,       1/951484123440,      1/1480086414240,      1/2272989850440,       1/3448674255840,       1/5173011383760,       1/7676081408160,      1/11274244568235,      1/16398901190160,       1/23633710538760
         -1/4808643120,     -1/9617286240,    -1/18668849760,     -1/35263382880,     -1/64958863200,    -1/116925953760,     -1/206012394720,     -1/355839590880,     -1/603380175840,    -1/1005633626400,     -1/1649239147296,     -1/2664155545632,     -1/4242914387488,     -1/6667436894624,    -1/10346022767520,     -1/15863901576864,     -1/24051721745568,     -1/36077582618352,     -1/53569743887856,     -1/78779035129200,     -1/114792308331120
         1/19835652870,     1/39671305740,     1/77138650050,     1/146157442200,     1/270391268070,     1/489279437460,      1/867359002770,     1/1508450439600,     1/2576936167650,     1/4329252761652,      1/7159918028886,     1/11668014565592,     1/18752166266130,     1/29744815456620,     1/46600210882038,      1/72155165236704,     1/110487596768703,     1/167405449649550,     1/251108174474325,     1/373075002076140,      1/549249308612095
        -1/81676217700,   -1/163352435400,   -1/318107374200,    -1/604404010980,   -1/1122464591820,   -1/2040844712400,    -1/3638027530800,    -1/6366548178900,   -1/10950462867708,   -1/18531552545352,    -1/30885920908920,    -1/50741155778940,    -1/82235666262420,   -1/131577066019872,   -1/207976652741088,    -1/324963519907950,    -1/502216348948650,    -1/768095592509700,   -1/1163116182943260,   -1/1744674274414890,    -1/2593434732238350
        1/335780006100,    1/671560012200,   1/1309542023790,    1/2494365759600,    1/4648590733800,    1/8488730905200,    1/15208976205150,    1/26767798121064,    1/46328881363380,    1/78930686767240,    1/132490795645010,    1/219295110033120,    1/358182013054096,    1/577712924280800,    1/920729973072525,    1/1450847230296100,    1/2261614800167450,    1/3489348548829780,    1/5330949171823275,    1/8068463611408200,    1/12102695417112300
      -1/1378465288200,  -1/2756930576400,  -1/5382578744400,  -1/10275832148400,  -1/19211338364400,  -1/35220787001400,   -1/63397416602520,  -1/112164660142920,  -1/195249593582120,  -1/334713588997920,   -1/565550546927520,   -1/942584244879200,  -1/1550703112543200,  -1/2519892557882700,  -1/4047100168720700,   -1/6427747326791700,  -1/10100745799244100,  -1/15712271243268600,  -1/24205390834224600,  -1/36945070220658600,   -1/55891260077406600
       1/5651707681620,  1/11303415363240,  1/22093039119060,   1/42264944401680,   1/79246770753150,  1/145814058185796,   1/263586951335862,   1/468599024597088,   1/820048293044904,  1/1413876367318800,   1/2403589824441960,   1/4031828092612320,   1/6677715278389155,  1/10927170455545890,  1/17676305148677175,   1/28282088237883480,   1/44779973043315510,   1/70195633419251340,  1/108987957150942870,  1/167673780232219800,   1/255702514854135195
     -1/23145088600920, -1/46290177201840, -1/90567738003600, -1/173588164506900, -1/326345749272972, -1/602484460196256, -1/1093397724059872, -1/1952495935821200, -1/3433699749202800, -1/5951746231951520, -1/10175566138497760, -1/17171267858714970, -1/28618779764524950, -1/47136813729805800, -1/76765668074255160, -1/123678020786299980, -1/197216303415991860, -1/311394163288408200, -1/487052409245971800, -1/754931234331256290, -1/1160016286899247470];

