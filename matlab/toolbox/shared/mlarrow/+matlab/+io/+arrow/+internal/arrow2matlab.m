function result = arrow2matlab(arrowStruct, opts, assembleTable)
%MATLAB.IO.ARROW.INTERNAL.ARROW2MATLAB
%   Construct a native MATLAB array from a struct/primitve array generated by the
%   Arrow-MATLAB MEX layer.
%   Also does UTF-8 to UTF-16 conversion for string types, and bit-unpacking for
%   logical types.

%   Copyright 2018-2024 The MathWorks, Inc.

% If preserveVariableNames is not provided as input, assume that we need
% backwards compatible behavior.

arguments
    arrowStruct(1, 1) struct {mustBeArrowStruct}
    opts(1, 1) Arrow2MatlabOptions = Arrow2MatlabOptions
    assembleTable(1, 1) logical = true
end
    import matlab.io.arrow.internal.Arrow2MatlabOptions
    import matlab.io.arrow.internal.validateStructFields
    import matlab.io.arrow.internal.arrow2matlab.*
    
    arrowType = arrowStruct.ArrowType;
    switch (arrowType)
        case "table"
            result = buildTable(arrowStruct, opts, assembleTable);
        case "array"
            result = buildArray(arrowStruct, opts);
        case "buffer"
            result = buildBufferArray(arrowStruct);
        case "list_array"
            result = buildListArray(arrowStruct, opts);
        case "struct"
            result = buildNestedTable(arrowStruct, opts);
        case "map"
            result = buildMapArray(arrowStruct, opts);
        otherwise
            id = "MATLAB:io:arrow:arrow2matlab:UnknownArrowType";
            error(message(id, arrowType));
    end
end

function mustBeArrowStruct(arrowStruct)
    import matlab.io.arrow.internal.validateStructFields
    validateStructFields(arrowStruct, "ArrowType");
end
