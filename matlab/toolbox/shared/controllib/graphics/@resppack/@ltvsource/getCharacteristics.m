function c = getCharacteristics(this,PlotType)
%getCharacteristics Gets the characteristics associated with the plot type
% for the data source

%  Copyright 1986-2016 The MathWorks, Inc.

%#function resppack.TimeFinalValueData
%#function resppack.TimeFinalValueView
%#function resppack.StepPeakRespData
%#function resppack.StepPeakRespView
%#function resppack.SettleTimeData
%#function resppack.SettleTimeView
%#function resppack.TransientTimeData
%#function resppack.TransientTimeView
%#function resppack.StepRiseTimeData
%#function resppack.StepRiseTimeView
%#function resppack.StepSteadyStateView
%#function wavepack.TimePeakAmpData
%#function wavepack.TimePeakAmpView
%#function resppack.SimInputPeakView

switch PlotType
    case 'step'
        c(1) = struct(...
            'CharacteristicLabel', ctrlMsgUtils.message('Controllib:plots:strPeakResponse'), ...
            'CharacteristicID', 'PeakResponse', ...
            'CharacteristicData', 'resppack.StepPeakRespData',...
            'CharacteristicView', 'resppack.StepPeakRespView', ...
            'CharacteristicGroup', 'Characteristic');
        c(2) = struct(...
            'CharacteristicLabel', ctrlMsgUtils.message('Controllib:plots:strRiseTime'), ...
            'CharacteristicID', 'RiseTime', ...
            'CharacteristicData', 'resppack.StepRiseTimeData',...
            'CharacteristicView', 'resppack.StepRiseTimeView', ...
            'CharacteristicGroup', 'Characteristic');
        c(3) = struct(...
            'CharacteristicLabel', ctrlMsgUtils.message('Controllib:plots:strSettlingTime'), ...
            'CharacteristicID', 'SettlingTime', ...
            'CharacteristicData', 'resppack.SettleTimeData',...
            'CharacteristicView', 'resppack.SettleTimeView', ...
            'CharacteristicGroup', 'Characteristic');
        c(4) = struct(...
            'CharacteristicLabel', ctrlMsgUtils.message('Controllib:plots:strTransientTime'), ...
            'CharacteristicID', 'TransientTime', ...
            'CharacteristicData', 'resppack.TransientTimeData',...
            'CharacteristicView', 'resppack.TransientTimeView', ...
            'CharacteristicGroup', 'Characteristic');
        c(5) = struct(...
            'CharacteristicLabel', ctrlMsgUtils.message('Controllib:plots:strSteadyState'), ...
            'CharacteristicID', 'SteadyState', ...
            'CharacteristicData', 'resppack.TimeFinalValueData',...
            'CharacteristicView', 'resppack.StepSteadyStateView', ...
            'CharacteristicGroup', 'Characteristic');
        if isa(this.Model,'idlti') % idnlgrey uses idnlmodelsource
            c(end+1) = struct(...
                'CharacteristicLabel', ctrlMsgUtils.message('Controllib:plots:strConfidenceRegion'),...
                'CharacteristicID', 'ConfidenceRegion', ...
                'CharacteristicData', 'resppack.ConfidenceRegionStepTimeData',...
                'CharacteristicView', 'resppack.ConfidenceRegionTimeView', ...
                'CharacteristicGroup', 'Characteristic');
        end
        
    case 'impulse'
        c(1) = struct(...
            'CharacteristicLabel', ctrlMsgUtils.message('Controllib:plots:strPeakResponse'), ...
            'CharacteristicID', 'PeakResponse', ...
            'CharacteristicData', 'resppack.ImpulsePeakRespData',...
            'CharacteristicView', 'resppack.ImpulsePeakRespView', ...
            'CharacteristicGroup', 'Characteristic');
        c(2) = struct(...
            'CharacteristicLabel', ctrlMsgUtils.message('Controllib:plots:strTransientTime'), ...
            'CharacteristicID', 'TransientTime', ...
            'CharacteristicData', 'resppack.TransientTimeData',...
            'CharacteristicView', 'resppack.TransientTimeView', ...
            'CharacteristicGroup', 'Characteristic');
        if isa(this.Model,'idlti')
            c(end+1) = struct(...
                'CharacteristicLabel', ctrlMsgUtils.message('Controllib:plots:strConfidenceRegion'), ...
                'CharacteristicID', 'ConfidenceRegion', ...
                'CharacteristicData', 'resppack.ConfidenceRegionImpulseTimeData',...
                'CharacteristicView', 'resppack.ConfidenceRegionTimeView', ...
                'CharacteristicGroup', 'Characteristic');
        end
        
    case 'initial'
        c(1) = struct(...
            'CharacteristicLabel', ctrlMsgUtils.message('Controllib:plots:strPeakResponse'), ...
            'CharacteristicID', 'PeakResponse', ...
            'CharacteristicData', 'wavepack.TimePeakAmpData',...
            'CharacteristicView', 'wavepack.TimePeakAmpView', ...
            'CharacteristicGroup', 'Characteristic');
        c(2) = struct(...
            'CharacteristicLabel', ctrlMsgUtils.message('Controllib:plots:strTransientTime'), ...
            'CharacteristicID', 'TransientTime', ...
            'CharacteristicData', 'resppack.TransientTimeData',...
            'CharacteristicView', 'resppack.TransientTimeView', ...
            'CharacteristicGroup', 'Characteristic');
        
    case 'lsim'
        c = struct(...
            'CharacteristicLabel', ctrlMsgUtils.message('Controllib:plots:strPeakResponse'), ...
            'CharacteristicID', 'PeakResponse', ...
            'CharacteristicData', 'wavepack.TimePeakAmpData',...
            'CharacteristicView', 'wavepack.TimePeakAmpView', ...
            'CharacteristicGroup', 'Characteristic');
              
    otherwise
        c = [];
end

end
