function initialize(this, ax, ~)
% Initializes the @diskmarginplot plot.

%  Copyright 1986-2014 The MathWorks, Inc.

% Axes geometry parameters (main grid and 2x1 subgrid)
geometry = struct(...
   'HeightRatio',{[];[.53 .47]},...
   'HorizontalGap',{16;0},...
   'VerticalGap',{16;12},...
   'LeftMargin',{12;0},...
   'TopMargin',{20;0});

% Create @axesgrid object
this.AxesGrid = ctrluis.axesgrid([1 1 2 1], ax, ...
   'Visible',     'off', ...
   'Geometry',     geometry, ...
   'LimitFcn',    {@updatelims this}, ...
   'LabelFcn',    {@LocalBuildLabels this}, ...
   'Title',    getString(message('Controllib:plots:strDiskMarginTitle')), ...
   'XLabel',   getString(message('Controllib:plots:strFrequency')),...
   'YLabel', {getString(message('Controllib:plots:strDiskMarginMag')) ; getString(message('Controllib:plots:strDiskMarginPhase'))},...
   'XScale',      'log',...
   'XUnit',       'rad/s',...
   'YScale',      'linear',...
   'YUnit',       'dB');
             
% Generic initialization
init_graphics(this)

% Add standard listeners
addlisteners(this)


%------------------------------------------------------------------

function LabelMap = LocalBuildLabels(this)
% Builds labels for Bode plots
AxGrid = this.AxesGrid;
MagLabel = sprintf('%s%s',AxGrid.YLabel{1},LocalUnitInfo(AxGrid.YUnits{1}));
PhaseLabel = sprintf('%s%s',AxGrid.YLabel{2},LocalUnitInfo(AxGrid.YUnits{2}));
LabelMap = struct(...
   'XLabel',sprintf('%s%s',AxGrid.XLabel,LocalUnitInfo(AxGrid.XUnits)),...
   'XLabelStyle',AxGrid.XLabelStyle,...
   'YLabel','',...
   'YLabelStyle',AxGrid.YLabelStyle,...
   'ColumnLabel',{AxGrid.ColumnLabel},...
   'ColumnLabelStyle',AxGrid.ColumnLabelStyle,...
   'RowLabel',{{MagLabel ; PhaseLabel}},...
   'RowLabelStyle',AxGrid.YLabelStyle);


function str = LocalUnitInfo(unit)
% Returns string capturing unit and transform info
if isempty(unit)
   str = '';
else
   str = sprintf(' (%s)',controllibutils.utXlateUnitsString(unit));
end
