function installtip(this,gobjects,tipfcn,info)
%INSTALLTIP  Installs point tip on specified G-objects.

%   Author(s): P. Gahinet, John Glass
%   Copyright 1986-2014 The MathWorks, Inc.

% RE: TIPFCN is either '' or a MATLAB callback. The tip text is generated by evaluating the 
%     tip function according to
%        TIPTEXT = feval(@fcn,INFO,arg1,...,argN)
%     for TIPFCN = {@fcn arg1 ... argN}
if isempty(tipfcn)
    % Clear tip function
    BDF = '';
else
   BDF = {@localLineButtonDown tipfcn info};
end
set(gobjects,'ButtonDownFcn',BDF)

for ct = 1:length(gobjects)
    set(gobjects(ct),'handlevisibility','off')
    %% Get the behavior object
    hb = hggetbehavior(gobjects(ct),'DataCursor');
    % Do not serialize this behavior object during saves because update
    % function will have a stale handle to resppack object
    set(hb,'Serialize',false);
    if iscell(tipfcn)
        set(hb,'UpdateFcn',{tipfcn{1} info tipfcn{2:end}});
    else
        set(hb,'UpdateFcn',{tipfcn info});
    end
end

%%%%%%%%%%  Local Functions   %%%%%%%%%%  

function tip = localLineButtonDown(EventSrc,EventData,tipfcn,info)
% Creates data tip and sets its tip function
tip = [];
if ishandle(info.View) && isa(info.View,'resppack.StabilityMarginView')
    if info.MarginType == 1
        idx = find(handle(EventSrc)==info.View.MagPoints);
        if ~ishandle(info.View.MagTips(idx))
            % Create tip object
            tip = pointtip(EventSrc,info.TipOptions{:});
            % UDDREVISIT
            MagTips = info.View.MagTips;
            MagTips(idx) = tip;
            info.View.MagTips = MagTips;
        end
    else
        idx = find(handle(EventSrc)==info.View.PhasePoints);
        if ~ishandle(info.View.PhaseTips(idx))
            % Create tip object
            tip = pointtip(EventSrc,info.TipOptions{:});
            % UDDREVISIT
            PhaseTips = info.View.PhaseTips;
            PhaseTips(idx) = tip;
            info.View.PhaseTips = PhaseTips;
        end
    end
end

if ~isempty(tip)
    tip.UserData.CTListener = handle.listener(info.Carrier.Parent,...
        info.Carrier.Parent.findprop('FrequencyUnits'),...
        'PropertyPostSet',{@LocalUpdateString, tip});
end



%%% Local function to update the string if the units change.
function LocalUpdateString(EventSource,EventData,tip)
tip.DataSource.notify('DataChanged')
