classdef Layout< matlab.mixin.SetGet & matlab.mixin.Copyable
%LAYOUT Page layout generated by a report or reporter
%
%    Layout properties:
%      Watermark        - Watermark to be displayed by pages in this layout
%      FirstPageNumber  - Number of first page in this layout
%      PageNumberFormat - Page number format (arabic, roman, etc.)
%      Landscape        - Orientation of pages in this layout
%      PageSize         - Height and width of pages in this layout
%      PageMargins      - Size of page margins in this layout
%      PageBorder       - Border of pages in this layout

 
%    Copyright 2017-2024 The MathWorks, Inc.

    methods
        function out=Layout
        end

        function out=fillHeadersFooters(~) %#ok<STOUT>
        end

        function out=updatePageLayout(~) %#ok<STOUT>
        end

    end
    properties
        % FirstPageNumber Page number of the first page in this layout
        % The default value of this property, [], specifies that the 
        % page number of the first page of this layout be one more than
        % the number of the last page of the previous layout. A nonnegative
        % integer value restarts page numbering at the specified value.
        %
        % Note: A negative value also specifies that page numbering should
        % continue from the previous layout. This allows you to override
        % the default numbering scheme for chapters, which starts the
        % first chapter on page 1 and continues numbering for
        % subsequent chapters.
        %
        % Example
        %
        % This example numbers pages continuously from the report title
        % page
        %
        % import mlreportgen.report.*
        % import mlreportgen.dom.*
        % rpt = Report("output", "pdf");            
        % open(rpt);
        % tp = TitlePage("Title", "My Report");
        % tp.Layout.FirstPageNumber = 1;
        % add(rpt, tp);  
        % toc = TableOfContents;
        % toc.Layout.FirstPageNumber = -1;
        % add(rpt, toc);
        % ch = Chapter("Title", "First");
        % ch.Layout.FirstPageNumber = -1;
        % add(ch, PageBreak);
        % add(ch, Heading1("Page 2"));
        % add(rpt, ch); 
        % ch = Chapter("Title", "Second");
        % add(rpt, ch);
        % close(rpt)
        %
        % See also mlreportgen.report.Chapter.Layout
        FirstPageNumber;

        % Landscape Orientation of pages in this page layout
        % The value of this property must be boolean or empty. If the value
        % is true, the page orientation is landscape. Otherwise, it is
        % portrait (the default).
        Landscape;

        % Reporter Owner of this object
        Owner;

        % PageBorder Border of pages in this page layout
        % The value of this property must be an mlreportgen.dom.PageBorder
        % object or empty. The default value, [], specifies no page border.
        % 
        % Example
        %
        % This example creates a report with a title page having a 0.6pt
        % solid red page border
        %
        % import mlreportgen.report.*;
        % import mlreportgen.dom.*;
        %
        % rpt = Report("output","docx");
        % open(rpt);
        % tp = TitlePage("Title","My Report");
        % tp.Layout.PageBorder = PageBorder("solid","red","0.6pt");
        % append(rpt,tp);
        % close(rpt);
        %
        % See also mlreportgen.dom.PageBorder
        PageBorder;

        % PageMargins Size of the page margins in this page layout
        % The value of this property must be an mlreportgen.dom.PageMargins 
        % object or empty. The default value, [], corresponds to an 
        % mlreportgen.dom.PageMargins object as specified in the template,
        % which by default has top, bottom, left, and right margins of one
        % inch, header and footer margins of one-half inch, and a gutter
        % margin of zero pixels.
        %
        % Example
        %
        % This example creates a report with a title page having top and 
        % bottom page margins of two centimeters
        %
        % import mlreportgen.report.*
        % import mlreportgen.dom.*
        % rpt = Report("output", "pdf");            
        % open(rpt);
        % tp = TitlePage("Title", "My Report");
        % pm = PageMargins();
        % pm.Top = "2cm";
        % pm.Bottom = "2cm";
        % tp.Layout.PageMargins = pm;
        % add(rpt, tp);  
        % close(rpt)
        %
        % See also mlreportgen.dom.PageMargins
        PageMargins;

        % PageNumberFormat Format of page numbers in this page layout
        %      This property specifies the type of characters used to 
        %      represent the page number value. Its value must be empty
        %      or a string or character array. If the value is empty, the
        %      format is arabic numerals. A string or character array 
        %      can specify the number format using the following values:
        %
        %        VALUE     DESCRIPTION
        %         'a'      Lower case alphabetic (a, b, c, ...)
        %         'A'      Upper case alphabetic (A, B, C, ...)
        %         'i'      Lower case roman numerals (i, ii, iii, ...)
        %         'I'      Uppercase roman numerals (I, II, III, ...)
        %         'n'      Arabic numerals
        %         'N'      Arabic numerals
        PageNumberFormat;

        % PageSize Height and width of pages in this page layout
        % The value of this property must be an mlreportgen.dom.PageSize
        % object or empty. The default value, [], corresponds to an 
        % mlreportgen.dom.PageSize object as specified in the template, 
        % which by default has a height of 11 inches and a width of 8.5 
        % inches.
        %
        % Example
        %
        % This example creates a report with an 8.5x11-inch title page
        %
        % import mlreportgen.report.*
        % import mlreportgen.dom.*
        % rpt = Report("output", "pdf");            
        % open(rpt);
        % tp = TitlePage("Title", "My Report");
        % tp.Layout.PageSize = PageSize("8.5in", "11in");
        % add(rpt, tp);  
        % close(rpt)
        %
        % See also mlreportgen.dom.PageSize
        PageSize;

        % Watermark Watermark displayed by pages in this layout
        %    This property specifies whether the pages of a report section
        %    contain a watermark. The default value, [], specifies no
        %    watermark. To specify an image as a watermark, set this
        %    property to a string or character array that specifies the
        %    image's path. This object creates a DOM Watermark object and
        %    applies it to page layout of the report or reporter that owns
        %    this layout. Valid watermark image types are:
        %    
        %    bmp
        %    jpg
        %    png
        %    pdf
        %    svg
        %    tiff
        %   
        %    Note: This property applies only to PDF output.
        Watermark;

    end
end
