classdef TableOfContents< mlreportgen.report.Reporter
%mlreportgen.report.TableOfContents Create a report table of contents (TOC)
%    toc = TableOfContents() creates a reporter that generates a report TOC
%    section based on a default template that defines the section's
%    appearance and page layout. The TOC section contains a default section
%    title and a TOC element that specifies the location of a table of
%    contents to be generated, depending on report output type, as follows:
%
%      HTML - A JavaScript copied from the report's template to the report
%             generates the TOC when the report is opened in a browser. The
%             script generates the TOC as a collapsible tree whose entries
%             consist of the hyperlinked contents of the report's HTML
%             heading (h1-h6) elements. The level of an entry in the TOC
%             tree corresponds to the level of the heading element. Chapter
%             and Section reporters generate chapter and section titles as
%             heading elements of the appropriate level. As a result chapter
%             and section titles appear automatically in the TOC. You can
%             also use DOM Heading elements in a report to generate TOC
%             entries.
%
%      DOCX - The Report Generator's rptview function commands Word to
%             generate the TOC after it opens the report in Word. If you
%             open a report in Word directly, i.e., without using rptview,
%             you must update the report document yourself to generate the
%             TOC. The TOC consists of a two-column table whose first
%             column contains the hyperlinked contents of report paragraphs 
%             whose outline level has been set. The outline level
%             determines the formatting of an entry. The TOC's second
%             column contains the number of the page in which the 
%             corresponding paragraph occurs. Chapter and Section reporters
%             generate chapter and section titles as paragraphs with the
%             appropriate outline level set. As a result, chapter and
%             section titles appear in the TOC automatically. You can also
%             use DOM Heading or Paragraph objects to generate TOC entries.
%         
%      PDF  - The Report Generator uses a third-party application (FOP) to
%             generate the TOC as part of the generate PDF document. The
%             FOP generates the TOC in a manner similar to the way Word
%             generates a TOC for a Word document.
%
%    toc = TableOfContents(title) creates a TOC having the specified 
%    TOC section title.
%
%    toc = mlreportgen.report.TableOfContents(p1, v1, p2, v2,...) creates a
%    TOC and sets its properties (p1, p2, ...) to the specified
%    values (v1, v2, ...).
%
%    TableOfContents properties:
%      Title           - TableOfContents title
%      NumberOfLevels  - Number of heading levels in table of contents
%      LeaderPattern   - Leader type for table of contents
%      Layout          - Page layout of table of contents
%      TemplateSrc     - Source of this reporter's template
%      TemplateName    - Template name in source template library
%      LinkTarget      - Hyperlink target for table of contents
%
%    TableOfContents methods:
%      getTitleReporter  - Get table of contents title reporter
%      getImpl           - Get DOM implementation for this reporter
%      getClassFolder    - Get location of folder that contains this class
%      createTemplate    - Copy the default table of contents template
%      customizeReporter - Subclasses TableOfContents for customization
%
%    Customize Format of TOC Entries
%
%    Styles in a report's template determine the size, spacing, color, and
%    other format properties of the entries in a table of contents
%    generated by this reporter. The mlreportgen.report.Report object's
%    default Word and PDF templates define styles that determine the default
%    format of TOC entries. The styles are named TOC1, TOC2, ... TOC6,
%    where style TOC1 defines the format of level 1 entries, style TOC2
%    defines the format of level 2 entries, etc. To change the format of
%    the entries, create a custom report template that redefines these
%    styles and use the template to generate your report. Note that you
%    must redefine the styles in the report template, not in the template
%    used by this reporter.
%
%    Example
%
%    import mlreportgen.report.*
%    import mlreportgen.dom.*
%    rpt = Report('Report with TOC');
%    add(rpt, TitlePage('Title', 'Report', 'Subtitle', 'with TOC'));
%    toc = TableOfContents;
%    toc.Title = Text('Table of Contents');
%    toc.Title.Color = 'green';
%    add(rpt, toc);
%    ch = Chapter('First Chapter');
%    add(ch, Section('First Subsection'));
%    add(ch, Section('Second Subsection'));
%    add(rpt, ch);
%    add(rpt, Chapter('Second Chapter'));
%    add(rpt, PDFPageLayout); % Start an appendix section
%    p = Paragraph('Appendix'); % Create section title
%    p.Style = {OutlineLevel(1), Bold, FontSize('18pt')};
%    add(rpt, p);
%    close(rpt);
%    rptview(rpt);
%    
%    See also rptview, mlreportgen.report.Chapter,
%    mlreportgen.report.Section, mlreportgen.dom.Heading,
%    mlreportgen.dom.Paragraph

 
%   Copyright 2017-2023 The MathWorks, Inc.

    methods
        function out=TableOfContents
        end

        function out=createTemplate(~) %#ok<STOUT>
            % template = mlreportgen.report.TableOfContents.createTemplate(templatePath,type)
            %    is a static method that creates a copy of the
            %    TableOfContents template specified by type at the location
            %    specified by templatePath. You can use this method to
            %    create a copy of the default TableOfContents template to
            %    serve as a starting point for creating your own custom
            %    template.
        end

        function out=customizeReporter(~) %#ok<STOUT>
            % path = mlreportgen.report.TableOfContents.customizeReporter(path)
            %    is a static method that creates a class definition file
            %    that defines a subclass of
            %    mlreportgen.report.TableOfContents
            %    class. You can use this file as a starting point for
            %    defining a custom TOC class. The path argument is a
            %    string that specifies the path of the class definition
            %    file to be created.
            %
            %    Example
            %
            %    mlreportgen.report.TableOfContents.customizeReport("+myApp/@MyTableOfContents")
            %
            %    defines a TableOfContents subclass named myApp.MyTableOfContents.
        end

        function out=getClassFolder(~) %#ok<STOUT>
            % path = getClassFolder() return the folder location which contains this class.
        end

        function out=getTitleReporter(~) %#ok<STOUT>
            %getTitleReporter Gets the TOC Title reporter
            % reporter = getTitleReporter(toc) returns a reporter that the
            % TableOfContents reporter uses to format the content specified
            % by the value of its Title property. You can use this reporter
            % to customize the title alignment, position, and appearance.
            % See the mlreportgen.report.TitlePage help for information
            % on customizing reporter content. The help is specific to
            % title pages but applies to reporter content generally.
            %
            % See also mlreportgen.report.TableOfContents.Title,
            % mlreportgen.report.TitlePage
        end

    end
    properties
        % Layout Page layout of this TOC
        %    The value of this property must be an object of type
        %    mlreportgen.report.ReportLayout that allows you to override
        %    some properties of the TOC section's default layout such as
        %    its page orientation.
        %
        %    See also mlreportgen.report.ReporterLayout
        Layout;

        % LeaderPattern Leader Pattern for table of contents
        %    This property specifies the leader pattern to use in the
        %    table of contents. You can use this property to customize the
        %    type of leader to use between the title and the page number.
        %    By default, leader pattern is set to dots ('.').
        %
        %    Example
        %
        %    toc = mlreportgen.report.TableOfContents;
        %    toc.LeaderPattern = 'space';
        %    See also mlreportgen.dom.TOC
        %
        %    Valid values are:
        %
        %    Value               DESCRIPTION
        %    'dots' or '.'       leader of dots
        %    'space' or ' '      leader of spaces
        LeaderPattern;

        % NumberOfLevels Number of heading levels to use in table of contents
        %    This property specifies the number of heading levels to
        %    generate in the table of contents. You can use this
        %    property to customize the number of heading levels. By default,
        %    number of heading levels is set to 3.
        %
        %    Valid values are 1 to 9.
        %
        %    Example
        %
        %    toc = mlreportgen.report.TableOfContents;
        %    toc.NumberOfLevels = 2;
        %    See also mlreportgen.dom.TOC
        NumberOfLevels;

        % Title Table of Contents (TOC) section title
        %    Specifies the content of the TOC section title. You can use any
        %    of the following to specify the title content
        %
        %        - MATLAB string
        %        - character array
        %        - DOM object
        %        - 1xN or Nx1 array of strings or DOM objects
        %        - 1xN or Nx1 cell array of strings, character arrays,
        %          and/or DOM objects
        %        - TableOfContentsTitle reporter
        %
        %    Example
        %
        %    toc = mlreportgen.report.TableOfContents;
        %    toc.Title = mlreportgen.dom.Text('Table of Contents');
        %    toc.Title.FontFamily = 'Helvetica';
        Title;

    end
end
