
classdef EgoVehicleControlInfo < ros.Message
    %EgoVehicleControlInfo MATLAB implementation of carla_ackermann_msgs/EgoVehicleControlInfo
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.

    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'carla_ackermann_msgs/EgoVehicleControlInfo' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = 'dc2719c7e816ee0bd3fbbf8de4fec4db' % The MD5 Checksum of the message definition
        PropertyList = { 'Header' 'Restrictions' 'Target' 'Current' 'Status' 'Output' } % List of non-constant message properties
        ROSPropertyList = { 'header' 'restrictions' 'target' 'current' 'status' 'output' } % List of non-constant ROS message properties
        PropertyMessageTypes = { 'ros.msggen.std_msgs.Header' ...
            'ros.msggen.carla_ackermann_msgs.EgoVehicleControlMaxima' ...
            'ros.msggen.carla_ackermann_msgs.EgoVehicleControlTarget' ...
            'ros.msggen.carla_ackermann_msgs.EgoVehicleControlCurrent' ...
            'ros.msggen.carla_ackermann_msgs.EgoVehicleControlStatus' ...
            'ros.msggen.carla_msgs.CarlaEgoVehicleControl' ...
            } % Types of contained nested messages
    end
    properties (Constant)
    end
    properties
        Header
        Restrictions
        Target
        Current
        Status
        Output
    end
    methods
        function set.Header(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.std_msgs.Header'};
            validateattributes(val, validClasses, validAttributes, 'EgoVehicleControlInfo', 'Header')
            obj.Header = val;
        end
        function set.Restrictions(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.carla_ackermann_msgs.EgoVehicleControlMaxima'};
            validateattributes(val, validClasses, validAttributes, 'EgoVehicleControlInfo', 'Restrictions')
            obj.Restrictions = val;
        end
        function set.Target(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.carla_ackermann_msgs.EgoVehicleControlTarget'};
            validateattributes(val, validClasses, validAttributes, 'EgoVehicleControlInfo', 'Target')
            obj.Target = val;
        end
        function set.Current(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.carla_ackermann_msgs.EgoVehicleControlCurrent'};
            validateattributes(val, validClasses, validAttributes, 'EgoVehicleControlInfo', 'Current')
            obj.Current = val;
        end
        function set.Status(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.carla_ackermann_msgs.EgoVehicleControlStatus'};
            validateattributes(val, validClasses, validAttributes, 'EgoVehicleControlInfo', 'Status')
            obj.Status = val;
        end
        function set.Output(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.carla_msgs.CarlaEgoVehicleControl'};
            validateattributes(val, validClasses, validAttributes, 'EgoVehicleControlInfo', 'Output')
            obj.Output = val;
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.carla_ackermann_msgs.EgoVehicleControlInfo.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.carla_ackermann_msgs.EgoVehicleControlInfo(strObj);
        end
    end
end
