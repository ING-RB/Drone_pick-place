
classdef CarlaEgoVehicleStatus < ros.Message
    %CarlaEgoVehicleStatus MATLAB implementation of carla_msgs/CarlaEgoVehicleStatus
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.

    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'carla_msgs/CarlaEgoVehicleStatus' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = '7d24d9cd2c1c81e9a2b845b347cb2162' % The MD5 Checksum of the message definition
        PropertyList = { 'Header' 'Acceleration' 'Orientation' 'Control' 'Velocity' } % List of non-constant message properties
        ROSPropertyList = { 'header' 'acceleration' 'orientation' 'control' 'velocity' } % List of non-constant ROS message properties
        PropertyMessageTypes = { 'ros.msggen.std_msgs.Header' ...
            'ros.msggen.geometry_msgs.Accel' ...
            'ros.msg.geometry_msgs.Quaternion' ...
            'ros.msggen.carla_msgs.CarlaEgoVehicleControl' ...
            '' ...
            } % Types of contained nested messages
    end
    properties (Constant)
    end
    properties
        Header
        Acceleration
        Orientation
        Control
        Velocity
    end
    methods
        function set.Header(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.std_msgs.Header'};
            validateattributes(val, validClasses, validAttributes, 'CarlaEgoVehicleStatus', 'Header')
            obj.Header = val;
        end
        function set.Acceleration(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.geometry_msgs.Accel'};
            validateattributes(val, validClasses, validAttributes, 'CarlaEgoVehicleStatus', 'Acceleration')
            obj.Acceleration = val;
        end
        function set.Orientation(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msg.geometry_msgs.Quaternion'};
            validateattributes(val, validClasses, validAttributes, 'CarlaEgoVehicleStatus', 'Orientation')
            obj.Orientation = val;
        end
        function set.Control(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.carla_msgs.CarlaEgoVehicleControl'};
            validateattributes(val, validClasses, validAttributes, 'CarlaEgoVehicleStatus', 'Control')
            obj.Control = val;
        end
        function set.Velocity(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'CarlaEgoVehicleStatus', 'Velocity');
            obj.Velocity = single(val);
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.carla_msgs.CarlaEgoVehicleStatus.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.carla_msgs.CarlaEgoVehicleStatus(strObj);
        end
    end
end
