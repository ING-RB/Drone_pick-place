// Copyright 2022-2024 The MathWorks, Inc.
// Generated {% datestr(now) %}

#ifndef _SLROS2_INITIALIZE_H_
#define _SLROS2_INITIALIZE_H_

#include "{%ModelName%}_types.h"
// Generic pub-sub header
#include "slros2_generic_pubsub.h"

{% if (HasSvcBlocks) %}
// Generic service header
#include "slros2_generic_service.h"
{% endif %}

{% if (HasActBlocks) %}
// Generic action header
#include "slros2_generic_action.h"
{% endif %}

{% if (HasCurrentTimeBlocks) %}
#include "slros2_time.h"
{% endif %}

{% if (HasGetParamBlocks) %}
#include "slros2_generic_param.h"
{% endif %}

{% if (HasGetTfBlocks) %}
#include "slros2_generic_transform.h"
{% endif %}

#ifndef SET_QOS_VALUES
#define SET_QOS_VALUES(qosStruct, _history, _depth, _durability, _reliability, _deadline \
, _lifespan, _liveliness, _lease_duration, _avoid_ros_namespace_conventions)             \
    {                                                                                    \
        qosStruct.history = _history;                                                    \
        qosStruct.depth = _depth;                                                        \
        qosStruct.durability = _durability;                                              \
        qosStruct.reliability = _reliability;                                            \
        qosStruct.deadline.sec = _deadline.sec;                                          \
        qosStruct.deadline.nsec = _deadline.nsec;                                        \
        qosStruct.lifespan.sec = _lifespan.sec;                                          \
        qosStruct.lifespan.nsec = _lifespan.nsec;                                        \
        qosStruct.liveliness = _liveliness;                                              \
        qosStruct.liveliness_lease_duration.sec = _lease_duration.sec;                   \
        qosStruct.liveliness_lease_duration.nsec = _lease_duration.nsec;                 \
        qosStruct.avoid_ros_namespace_conventions = _avoid_ros_namespace_conventions;    \
    }
#endif

inline rclcpp::QoS getQOSSettingsFromRMW(const rmw_qos_profile_t& qosProfile) {
    rclcpp::QoS qos(rclcpp::QoSInitialization::from_rmw(qosProfile));
    if (RMW_QOS_POLICY_DURABILITY_TRANSIENT_LOCAL == qosProfile.durability) {
        qos.transient_local();
    } else {
        qos.durability_volatile();
    }
    if (RMW_QOS_POLICY_RELIABILITY_RELIABLE == qosProfile.reliability) {
        qos.reliable();
    } else {
        qos.best_effort();
    }
    return qos;
}

{% var keys = Publishers.keys %}
{% if ~ros.codertarget.internal.Util.isROSControlEnabled(ModelName) %}
{% for i = numel(keys) %}
// {% keys{i} %}
extern SimulinkPublisher<{%Publishers(keys{i}).msgInfo.msgCppClassName%},{%Publishers(keys{i}).BusName%}> {%Publishers(keys{i}).BlockID%};
{% endfor %}
{% endif %}
{% if ros.codertarget.internal.Util.isROSControlEnabled(ModelName) %}
{% for i = numel(keys) %}
// {% keys{i} %}
extern SimulinkRTPublisher<{%Publishers(keys{i}).msgInfo.msgCppClassName%},{%Publishers(keys{i}).BusName%}> {%Publishers(keys{i}).BlockID%};
{% endfor %}
{% endif %}

{% var keys = Subscribers.keys %}
{% for i = numel(keys) %}
// {% keys{i} %}
extern SimulinkSubscriber<{%Subscribers(keys{i}).msgInfo.msgCppClassName%},{%Subscribers(keys{i}).BusName%}> {%Subscribers(keys{i}).BlockID%};
{% endfor %}

{% var keys = ServiceCallers.keys %}
{% for i = numel(keys) %}
// {% keys{i} %}
extern SimulinkServiceCaller<{%ServiceCallers(keys{i}).msgInfo.msgBaseCppClassName%},{%ServiceCallers(keys{i}).InputBusName%},{%ServiceCallers(keys{i}).OutputBusName%}> {%ServiceCallers(keys{i}).BlockID%};
{% endfor %}

{% var keys = ServiceServers.keys %}
{% for i = numel(keys) %}
// {% keys{i} %}
extern SimulinkServiceServer<{%ServiceServers(keys{i}).msgInfo.msgBaseCppClassName%},{%ServiceServers(keys{i}).ReqBusName%},{%ServiceServers(keys{i}).RespBusName%}> {%ServiceServers(keys{i}).BlockID%};
{% endfor %}

{% var keys = ActionClients.keys %}
{% for i = numel(keys) %}
// {% keys{i} %}
extern SimulinkActionClient<{%ActionClients(keys{i}).msgInfo.msgBaseCppClassName%}> {%ActionClients(keys{i}).BlockID%};
{% if ~isempty(ActionClients(keys{i}).CancelGoalBlockID) %}
extern CancelActionGoal<{%ActionClients(keys{i}).msgInfo.msgBaseCppClassName%}> {%ActionClients(keys{i}).CancelGoalBlockID%};
{% endif %}
{% endfor %}

{% var keys = ParamGetters.keys %}
{% for i = numel(keys) %}
// {% ParamGetters(keys{i}).Comment %}
{% var cppParamType = ParamGetters(keys{i}).CppParamType %}
{% var rosCppParamType = ParamGetters(keys{i}).ROSCppParamType %}
{% var prmBlklabel = ParamGetters(keys{i}).Label %}

{% if (ParamGetters(keys{i}).IsArray) %}
extern SimulinkParameterArrayGetter<{%cppParamType%},{%rosCppParamType%}> {%prmBlklabel%};
{% endif %}

{% if ~(ParamGetters(keys{i}).IsArray) %}
extern SimulinkParameterGetter<{%cppParamType%},{%rosCppParamType%}> {%prmBlklabel%};
{% endif %}
{% endfor %}

{% var keys = TransformGetters.keys %}
{% for i = numel(keys) %}
// {% keys{i} %}
extern SimulinkTransform {%TransformGetters(keys{i}).BlockID%};
{% endfor %}

#endif
