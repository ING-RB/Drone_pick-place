<?xml version="1.0" encoding="UTF-8"?>
<!--Copyright 2024 The MathWorks, Inc.-->

<rsccat xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.0" locale="ko_KR" product="rich_text_component" xsi:noNamespaceSchemaLocation="../../resources/schema/msgcat.xsd">
  <message>
    <entry key="persistentTooltipMessage">'\{0}' 변수의 범위는 동일한 함수에 대한 여러 호출에서 유지됩니다.</entry>
    <entry key="persistentExtendedTooltipMessage">&lt;strong&gt;추가 정보&lt;/strong&gt;&lt;br/&gt;&lt;p&gt;영속 변수로 선언된 변수는 그 변수를 선언한 함수에 대해서는 로컬 변수입니다. 그러나 MATLAB은 해당 함수에 대한 호출 사이에 그 변수의 값을 메모리에 유지합니다. 영속 변수는 그 변수를 선언한 함수에서만 인식됩니다. 따라서 다른 함수나 MATLAB 명령줄에서 영속 변수의 값을 변경할 수 없습니다.&lt;/p&gt;&lt;p&gt; 메모리에 있는 함수를 지우거나 수정하면 MATLAB 또한 그 함수에 선언된 영속 변수를 모두 지웁니다. MATLAB을 종료할 때까지 함수를 메모리에 유지하려면 &lt;code&gt;&lt;a href=\"matlab:doc mlock\" target=\"_blank\"&gt;mlock&lt;/a&gt;&lt;/code&gt;을 사용하십시오. &lt;/p&gt;&lt;p&gt; MATLAB은 다음과 같은 경우 오류를 반환합니다.&lt;ul&gt;&lt;li&gt;&lt;p&gt;변수를 영속 변수로 선언하려 할 때, 같은 이름을 가진 다른 변수가 현재 작업 공간에 있는 경우. &lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;변수를 함수의 입력 인수나 출력 인수로 지정한 다음 동일한 함수 내에서 그 변수를 영속 변수로 선언하려고 할 경우. 예를 들어, 다음과 같은 persistent 선언은 유효하지 않습니다. &lt;/p&gt;&lt;p&gt;&lt;code&gt;function&amp;nbsp;myfun(argA)&lt;br/&gt;persistent&amp;nbsp;argA&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/p&gt;&lt;p&gt;변수와 작업 공간에 대한 자세한 내용은 &lt;a href=\"matlab:helpview([docroot '/techdoc/matlab_prog/matlab_prog.map'],'persistent_variables')\" target=\"_blank\"&gt;영속 변수&lt;/a&gt;를 참조하십시오.&lt;/p&gt;&lt;br/&gt;</entry>
    <entry key="usedAcrossFunctionsTooltipMessage">'\{0}' 변수는 여러 함수에 걸쳐 사용됩니다.</entry>
    <entry key="usedAcrossFunctionsExtendedTooltipMessage">&lt;strong&gt;추가 정보&lt;/strong&gt;&lt;br/&gt;&lt;p&gt;중첩 함수 내에 있는 변수는 그 변수의 직속 함수 외에 다른 함수에서도 액세스할 수 있습니다. 값을 대입하거나 중첩 함수 내에서 사용하는 변수 &lt;code&gt;x&lt;/code&gt;는 중첩 함수를 포함하는 동시에 &lt;code&gt;x&lt;/code&gt;에 액세스할 수 있는 가장 바깥쪽 함수의 작업 공간에 있습니다. 따라서 &lt;code&gt;x&lt;/code&gt;의 범위는 이 작업 공간이 속한 함수와, 그 함수 내 어떤 수준으로든 중첩된 모든 함수입니다.&lt;/p&gt;&lt;p&gt;변수를 의도적으로 이와 같이 사용할 경우에는 문제가 되지 않습니다. 예제를 보려면 MATLAB Programming Demo on Nested Functions를 참조하십시오.&lt;/p&gt;&lt;p&gt;그러나 의도치 않게 변수를 이와 같이 사용할 경우 예기치 않은 동작이 발생할 수 있습니다. 변수의 범위가 여러 함수에 걸쳐 있다고 강조 표시되는 경우 그것이 의도한 바가 아니면 다음을 고려해 보십시오.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;중첩 함수의 변수 이름을 바깥쪽 함수의 변수 이름과 일치하지 않도록 바꿉니다.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;변수를 중첩 함수 내에서 직접 사용하는 대신 함수에 입력 인수로 전달합니다.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;자세한 내용은 &lt;a href=\"matlab:helpview([docroot '/techdoc/matlab_prog/matlab_prog.map'],'nested_functions_scope')\" target=\"_blank\"&gt;Variable Scope in Nested Functions&lt;/a&gt;를 참조하십시오.&lt;/p&gt;&lt;br/&gt;</entry>
  </message>
</rsccat>
