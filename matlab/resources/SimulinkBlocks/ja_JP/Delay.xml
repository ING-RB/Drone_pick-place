<?xml version="1.0" encoding="UTF-8"?>
<!--Copyright 2025 The MathWorks, Inc.-->

<rsccat xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.0" locale="ja_JP" product="SimulinkBlocks" xsi:noNamespaceSchemaLocation="../../resources/schema/msgcat.xsd">
  <message>
    <entry key="ParameterMaximumDelayLengthIsInvalid">ブロック ''{0}'' にあるダイアログ パラメーター ''{1}'' が無効です。''{2}'' は実数で正のスカラー整数でなければなりません。 </entry>
    <entry key="ParameterDelayLengthIsInvalid">ブロック ''{0}'' にあるダイアログ パラメーター ''{1}'' が無効です。''{2}'' は実数で非負のスカラー整数でなければなりません。 </entry>
    <entry key="ParameterValueIsNotDefined">ブロック ''{0}'' にはダイアログ パラメーター ''{1}'' の値が定義されていません。 </entry>
    <entry key="DelayLengthValueIsTooBig">ブロック ''{0}'' で、状態について要求される合計メモリが、サポートされている最大数値を上回っています。この最大数値は、シミュレーションの場合、''{1, number, integer}'' バイトです。このエラーを回避するには、''{2}'' の値を小さくしてください。</entry>
    <entry key="DelayLengthValueIsTooBigForProdCG">ブロック ''{0}'' で、状態について要求される合計メモリが、サポートされている最大数値を上回っています。この最大数値は、量産ターゲットの場合、''{1, number, integer}'' バイトです。このエラーを回避するには、''{2}'' の値を小さくしてください。</entry>
    <entry key="DelayLengthValueIsNotInteger">入力端子からの遅延長さの非整数の値は、ブロック ''{0}'' で切り捨てられます。</entry>
    <entry key="ParameterDelayLengthIsNotTunable">ダイアログ パラメーター ''{0}'' をシミュレーション中に変更することはできません。可変の遅延が必要な場合は、端子から遅延の長さを設定できます。 </entry>
    <entry key="ParameterDelayLengthIsLessThanLowerLimitOrLargerThanUpperLimit">ブロック ''{0}'' にあるダイアログ パラメーター ''{1}'' が範囲外です。''{2}'' の既定値は ''{3}'' です。ただし、''{4}'' の有効範囲は {5,number,integer} ～  {6,number,integer} が含まれます。</entry>
    <entry key="ParameterDelayLengthConceptualUpperLimitIsLessThanLowerLimit">ブロック ''{0}'' にあるパラメーター ''{1}'' の値が {2,number,integer} です。しかし、入力端子信号のフレーム長は {3,number,integer} です。パラメーター ''{4}'' が選択されている場合は、パラメーター ''{5}'' の最小値をフレーム長より小さくすることはできません。 </entry>
    <entry key="DataInputPortDataTypeIsNotSupersetOfICPortDataType">ブロック ''{0}'' にあるデータ入力端子のデータ型が ''{1}'' です。しかし、IC 端子のデータ型は ''{2}'' です。データ入力端子の型は、IC 端子のデータ型と同じか、スーパーセットでなければなりません。この問題を解決する 1 つの方法として、Data Type Conversion ブロックを使用して IC 信号を同じ型のデータ入力信号に変換します。</entry>
    <entry key="DataInputPortDataTypeAndOutputPortDataTypeShouldBeSame">ブロック ''{0}'' にある出力端子のデータ型が ''{1}'' です。ただし、データ入力のデータ型は ''{2}'' です。この 2 つのデータ型は同じでなければなりません。この問題を解決する 1 つの方法として、Data Type Conversion ブロックを使用して入力信号を同じ型の出力信号に変換します。</entry>
    <entry key="DeepCopyWithFramesIsNotSupported">ブロック ''{0}'' では、フレーム ベースのデータが使用されている場合、データの入力端子または出力端子のデータ型 ''{1}'' はサポートされません。</entry>
    <entry key="LogicalInputAndOutputDataTypeIsNotSupported">ブロック ''{0}'' ではデータの入力端子または出力端子のデータ型 ''{1}'' がサポートされていません。データの入力端子と出力端子で使用できるのは数値型、boolean 型、列挙型、バス型、またはカスタム型のみです。 </entry>
    <entry key="ICDataTypeIsNotSupported">ブロック ''{0}'' では IC データ型 ''{1}'' がサポートされていません。IC で使用できるのは数値、boolean、列挙型、または構造体型のみです。 </entry>
    <entry key="NDFrameInputSignalNotSupported">ブロック ''{0}'' ではフレームベース モードの場合、2 次元以下の入力信号しか使用できません。</entry>
    <entry key="NDICIsNotSupportedInFrameMode">ブロック ''{0}'' ではフレームベース モードの場合、2 次元以下の初期条件しか使用できません。</entry>
    <entry key="ICFrameLengthNotMatchMaxDelayLengthInFrameMode">ブロック ''{0}'' では、ブロックがフレームベース モードの場合、初期条件の最初の次元は遅延の長さの最大値と同じでなければなりません。</entry>
    <entry key="DelayLengthDataTypeIsNotSupported">ブロック ''{0}'' には ''{1}'' のデータ型がサポートされていません。''{2}'' で受け入れらるのは、組み込みの整数型、浮動小数点型、またはスケーリングが自明な 1 ワード固定小数点整数型 (たとえば fixdt(1, 12, 0) など) のみです。</entry>
    <entry key="InvalidICForFrameBasedInput">ブロック ''{0}'' がフレームベース モードの場合、初期条件はスカラーまたは行列にすることができます。初期条件が行列の場合、チャネル サイズがデータ入力端子信号のチャネル サイズと同じで、フレーム長さが遅延の長さの最大値と同じでなければなりません。この場合、IC の次元を ''{1}'' にしなければなりません。</entry>
    <entry key="InvalidICForSampleBasedNonScalarInput">パラメーター ''{0}'' を ''{1}'' に設定した場合の初期条件は、スカラーまたは行列のいずれかでなければなりません。行列の場合、IC の最後の次元は遅延の長さの最大値と同じでなければなりません。たとえばブロック ''{3}'' の IC は、''{2}'' でなければなりません。</entry>
    <entry key="InvalidICForUnitDelaySampleBasedNonScalar1DInput">パラメーター ''{0}'' が ''{1}'' に設定されており、データ入力信号が 1 次元の場合、それが単位遅延であれば、初期条件がスカラーまたは行列のいずれかにする必要があります。IC が行列の場合、IC の 1 次元のみをデータ入力の要素数と同じにして、他の IC の次元を 1 にしなければなりません。たとえば、5 つの要素と [1, 5, 1] の IC 行列をもつデータ入力は正常に機能します。</entry>
    <entry key="InvalidICForUnitDelaySampleBasedNonScalar2DOrNDInput">パラメーター ''{0}'' が ''{1}'' に設定されており、データ入力信号が 2 次元または N 次元の場合、初期条件の次元はスカラー、またはそれが単位遅延であればデータ入力の次元と等しい行列にしなければなりません。</entry>
    <entry key="ICAndOutputDimensionMismatchForSampleBasedScalarInput">パラメーター ''{0}'' を ''{1}'' に設定した場合、データ入力がスカラーであれば、IC に従って出力は拡張されたスカラーになります。たとえばブロック ''{2}'' において、IC の次元が ''{4}'' の場合は出力次元が ''{3}'' になります。 </entry>
    <entry key="OutputShouldBeScalar">ブロック ''{0}'' の出力はスカラーでなければなりません。</entry>
    <entry key="NumberOfElementsMismatch">ブロック ''{0}'' での IC の合計要素は {1,number,integer} です。ただし、状態の合計要素は {2,number,integer} です。IC がスカラーでない場合、これらの 2 つの数字を一致させなければなりません。</entry>
    <entry key="ICDimensionAndDelayLengthMismatch">ブロック ''{0}'' で、IC のサイズが遅延の長さと適合しません。IC がスカラーではない場合、IC の最後の次元数は遅延の長さの値と等しくなければなりません。しかし、このブロックでは IC の最後の次元数が {1,number,integer} で、遅延の長さの値は {2,number,integer} です。 </entry>
    <entry key="InputAndOutputDimensionMismatch">ブロック ''{0}'' にあるデータ入力の次元は {1} です。ただし、出力の次元は {2} です。入力がスカラーではない場合、これらの 2 つの次元を一致させなければなりません。 </entry>
    <entry key="ICAndOutputDimensionMismatch">ブロック ''{0}'' にある IC の次元は {1} です。ただし、出力の次元は {2} です。この場合、スカラー拡張の 2 つの次元を一致させなければなりません。 </entry>
    <entry key="ICAndOutputWidthMismatch">ブロック ''{0}'' では現在の IC の幅が {1,number,integer} ですが、出力の次元数と一致しません。必要な IC の幅は {2,number,integer} です。 </entry>
    <entry key="NonExactStructureICSupportLimited">For block ''{0}'', if IC is provided as a structure that does not exactly match the output bus type structure, both the IC and the output must be scalar.</entry>
    <entry key="DataInputPortAndICShouldBeHomogeneousEnumType">ブロック ''{0}'' では、パラメーター ''{1}'' の型またはデータ入力型のいずれかが列挙型の場合、もう一方も同じ列挙データ型でなければなりません。</entry>
    <entry key="DataInputPortAndICShouldBeHomogeneousBooleanType">ブロック ''{0}'' では、パラメーター ''{1}'' のデータ型またはデータ入力型が boolean の場合、他も boolean でなければなりません。</entry>
    <entry key="DataInputPortAndICShouldBeHomogeneousNVBusType">ブロック ''{0}'' では、パラメーター ''{1}'' の型またはデータ入力型が非バーチャル バス型の場合、もう一方の型も同じ非バーチャル バス型でなければなりません。</entry>
    <entry key="EnumeratorTypeHasNonZeroStoredValueAsDefault">ブロック ''{0}'' で初期状態を端子から入力する場合、列挙型の既定値は 0 でなければなりません。</entry>
    <entry key="ComplexityMismatch">ブロック ''{0}'' では、データ入力端子と出力端子を同種の複素数にしなければなりません。データ入力端子が実数であれば、IC も実数でなければなりません。</entry>
    <entry key="SignalObjectInitalValueIsIgnored">ブロック ''{0}'' では、ブロックの初期条件が入力端子に起因している場合、信号オブジェクトの初期値は無視されます。</entry>
    <entry key="VarSizeNotSupportedInFrameMode">ブロック ''{0}'' でパラメーター ''{1}'' が ''{2}'' に設定されている場合、可変サイズの入力信号はフレーム ベースでなければなりません。</entry>
    <entry key="RTModeInDelay">ブロック ''{0}'' はレート変換を実行します。パフォーマンスの信頼性を高めるには、これらのブロックを実際の Rate Transition ブロックに置き換えます。Rate Transition ブロックへの置き換えやその他のアップグレード問題に関するヘルプは、&lt;a href="matlab:upgradeadvisor(bdroot)"&gt;Simulink アップグレード アドバイザー&lt;/a&gt;を使用してください。</entry>
    <entry key="SymDimsNotSupportedInFrameMode">ブロック ''{0}'' では、シンボリック次元はコード生成時にフレーム ベースの Delay ブロックに対してサポートされません。</entry>
    <entry key="RowMajorFrameBasedUnsupported">ブロック ''{0}'' は、行優先のコード生成でフレーム ベース モードをサポートしません。</entry>
    <entry key="DelayLengthUpperLimitValueOutOfRange">ブロック ''{0}'' のパラメーター ''{1}'' の値が、遅延の長さのデータ型の範囲外です。</entry>
    <entry key="DelayLengthUpperLimitValuePrecisionLoss"> ブロック ''{0}'' の {1,number,integer} を超える遅延の長さの値の表現は、データ型 ''{2}'' では桁落ちなしのサポートがされていません。この桁落ちを回避するには、より広い範囲をもつ整数のデータ型を使用するか、パラメーター ''{3}'' の値を減少させます。 </entry>
    <entry key="MultiUnitDelayForStringNotSupported"> ''{0}'' のパラメーター設定が無効です。string データ型では、1 単位より大きい遅延の長さは現在サポートされていません。 </entry>
    <entry key="VariableDelayForStringNotSupported"> ''{0}'' のパラメーター設定が無効です。string データ型ではゼロまたは単位遅延のみがサポートされています。遅延の長さのパラメーターはダイアログによって決定されます。 </entry>
    <entry key="DataInputPortAndICShouldBeHomogeneousStringType">ブロック ''{0}'' では、パラメーターの ''{1}'' の型またはデータ入力型が string の場合、両方が同じ string データ型でなければなりません。</entry>
  </message>
</rsccat>
