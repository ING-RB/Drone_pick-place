<?xml version="1.0" encoding="UTF-8" ?>
<!--Copyright 2009-2025 The MathWorks, Inc. -->
<rsccat version="1.0" locale ="en_US" product="SimulinkBlocks" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../../../../matlab/resources/schema/msgcat.xsd">
  <message>
    <entry key="ParameterMaximumDelayLengthIsInvalid">In block  ''{0}'', dialog parameter ''{1}'' is invalid. The ''{2}'' should be real, positive, scalar integer. </entry>
    <entry key="ParameterDelayLengthIsInvalid">In block  ''{0}'', dialog parameter ''{1}'' is invalid. The ''{2}'' should be real, nonnegative, scalar integer. </entry>
    <entry key="ParameterValueIsNotDefined">In block  ''{0}'', the value of dialog parameter ''{1}'' is not defined. </entry>
    <entry key="DelayLengthValueIsTooBig">In block  ''{0}'', total memory requested for state is larger than the maximum supported number, which is ''{1, number, integer}'' bytes for simulation. To avoid this error, please decrease the value of ''{2}''.</entry>
    <entry key="DelayLengthValueIsTooBigForProdCG">In block ''{0}'', total memory requested for state is larger than the maximum supported number, which is ''{1, number, integer}'' bytes for the production target. To avoid this error, please decrease the value of ''{2}''.</entry>
    <entry key="DelayLengthValueIsNotInteger">Non integer delay length value from input port is truncated in block  ''{0}''.</entry>
    <entry key="ParameterDelayLengthIsNotTunable">Dialog parameter ''{0}'' can not be changed during simulation. If you need variable delay, you can set the delay length from port. </entry>
    <entry key="ParameterDelayLengthIsLessThanLowerLimitOrLargerThanUpperLimit">In block  ''{0}'', dialog parameter ''{1}'' is out of range. The value of ''{2}'' is ''{3}''. However, the valid range of the ''{4}'' is {5,number,integer} and  {6,number,integer}, inclusively.</entry>
    <entry key="ParameterDelayLengthConceptualUpperLimitIsLessThanLowerLimit">In block  ''{0}'', the value of parameter ''{1}'' is {2,number,integer}. But the frame length of the input data signal is {3,number,integer}. When parameter ''{4}'' is selected, the minimal value of parameter ''{5}'' can not be less than the frame length. </entry>
    <entry key="DataInputPortDataTypeIsNotSupersetOfICPortDataType">In block ''{0}'', the type of the data input port is ''{1}''. However, the data type of the IC port is ''{2}''. The data input port type should be same or a super set of the IC port data type. To resolve this issue, one way is to use a Data Type Conversion block to convert the IC signal to the same type of the data input signal.</entry>
    <entry key="DataInputPortDataTypeAndOutputPortDataTypeShouldBeSame">In block ''{0}'', the type of the output port is ''{1}''. But the data type of the data input is ''{2}''. These two data types are required to be same. To resolve this issue, one way is to use a Data Type Conversion block to convert the input signal to the same data type of the output signal.</entry>
    <entry key="DeepCopyWithFramesIsNotSupported">In block ''{0}'', the data input or output port data type ''{1}'' is not supported when frame based data is being used.</entry>
    <entry key="LogicalInputAndOutputDataTypeIsNotSupported">In block ''{0}'', the data input or output port data type ''{1}'' is not supported. Data input port and output port only accept numeric, boolean, enumeration, bus, or custom types. </entry>
    <entry key="ICDataTypeIsNotSupported">In block ''{0}'', the IC data type ''{1}'' is not supported. IC only accepts numeric, boolean, enumeration or structure types. </entry>
    <entry key="NDFrameInputSignalNotSupported">The block ''{0}'' only accepts input signals with 2 dimensions or less when it is in frame-based mode.</entry>
    <entry key="NDICIsNotSupportedInFrameMode">The block ''{0}'' only accepts initial conditions with 2 dimensions or less when it is in frame-based mode.</entry>
    <entry key="ICFrameLengthNotMatchMaxDelayLengthInFrameMode">In block ''{0}'', the first dimension of initial condition should equal to the maximum delay length when the block is in frame-based mode.</entry>
    <entry key="DelayLengthDataTypeIsNotSupported">In block ''{0}'', the data type of ''{1}'' is not supported. ''{2}'' only accepts built-in integer types, floating point types or single word fixed-point integer types which have trivial scaling, for example, fixdt(1, 12, 0).</entry>
    <entry key="InvalidICForFrameBasedInput">When the block ''{0}'' is in frame-based mode, the initial condition could be scalar or matrix. If initial condition is a matrix, its channel size should equal to the channel size of data input port signal and its frame length should equal to the maximum delay length. In this case, the dimension of IC should be ''{1}''.</entry>
    <entry key="InvalidICForSampleBasedNonScalarInput">When parameter ''{0}'' is set to ''{1}'', the initial condition should be either scalar or matrix. If it is a matrix, the last dimension of the IC should equal to the maximum delay length. For example, the IC should be ''{2}'' for the block ''{3}''.</entry>
    <entry key="InvalidICForUnitDelaySampleBasedNonScalar1DInput">When parameter ''{0}'' is set to ''{1}'' and data input signal is 1-D, the initial condition should be either scalar or matrix if it is unit delay. If IC is a matrix, only 1 dimension of the IC should equal to the number of elements of the data input and other dimensions of IC should be 1s. For example, a data input with 5 elements and an IC matrix that is [1, 5, 1] would work.</entry>
    <entry key="InvalidICForUnitDelaySampleBasedNonScalar2DOrNDInput">When parameter ''{0}'' is set to ''{1}'' and data input signal is 2-D or N-D signals, the dimension of initial condition should be scalar or equal to the dimension of data input if it is unit delay.</entry>
    <entry key="ICAndOutputDimensionMismatchForSampleBasedScalarInput">When parameter ''{0}'' is set to ''{1}'', the output will be scalar expanded along the IC if the data input is a scalar. For example, for the block ''{2}'', the output dimension should be ''{3}'' when the dimension of IC is ''{4}''. </entry>
    <entry key="OutputShouldBeScalar">The output of block ''{0}'' should be scalar.</entry>
    <entry key="NumberOfElementsMismatch">In block ''{0}'', the total elements of IC is {1,number,integer}. However, the total elements of state is {2,number,integer}. These two numbers must match when IC is not a scalar.</entry>
    <entry key="ICDimensionAndDelayLengthMismatch">In block ''{0}'', the size of IC is incompatible with the delay length. When IC is not scalar, the last dimension number of IC should equal to the delay length value. However, in this block, the last dimension number of IC is {1,number,integer}, but the delay length value is {2,number,integer}. </entry>
    <entry key="InputAndOutputDimensionMismatch">In block ''{0}'', the dimension of data input is {1}. However, the dimension of output is {2}. These two dimensions should match if the input is not a scalar. </entry>
    <entry key="ICAndOutputDimensionMismatch">In block ''{0}'', the dimension of IC is {1}. However, the dimension of output is {2}. These two dimensions should match for scalar expansion in this case. </entry>
    <entry key="ICAndOutputWidthMismatch">In block ''{0}'', the current width of IC is {1,number,integer}, which does not match the output dimensions. The expected IC width should be {2,number,integer}. </entry>
    <entry key="NonExactStructureICSupportLimited">For block ''{0}'', if IC is provided as a structure that does not exactly match the output bus type structure, both the IC and the output must be scalar.</entry>
    <entry key="DataInputPortAndICShouldBeHomogeneousEnumType">In block ''{0}'', if either the parameter ''{1}'' type or the data input type is enumerated, the other should be the same enumerated data type.</entry>
    <entry key="DataInputPortAndICShouldBeHomogeneousBooleanType">In block ''{0}'', if either the parameter ''{1}'' type or the data input type is boolean, the other should be boolean too.</entry>
    <entry key="DataInputPortAndICShouldBeHomogeneousNVBusType">In block ''{0}'', if parameter ''{1}'' type or data input type is nonvirtual bus, the type of the other must be the same nonvirtual bus type.</entry>    
    <entry key="EnumeratorTypeHasNonZeroStoredValueAsDefault">In block ''{0}'', when initial condition is from port, enumerator type must have zero as default value.</entry>
    <entry key="ComplexityMismatch">In block ''{0}'', the data input port and output port should have homogeneous complexity. IC must be real when the data input port is real.</entry>
    <entry key="SignalObjectInitalValueIsIgnored">In block ''{0}'', the initial value of signal object is ignored when the initial condition of the block is from input port.</entry>
    <entry key="VarSizeNotSupportedInFrameMode">In block ''{0}'', when parameter ''{1}'' is set to ''{2}'', the variable-size input signal must be frame based.</entry>
    <entry key="RTModeInDelay"><![CDATA[The block ''{0}'' performs rate transition. For robust performance, replace these blocks with actual Rate Transition blocks. For help in replacing with rate transition block and other upgrade issues, use the <a href="matlab:upgradeadvisor(bdroot)">Simulink Upgrade Advisor</a>.]]></entry>
    <entry key="SymDimsNotSupportedInFrameMode">In block ''{0}'', symbolic dimensions are not supported for frame-based Delay block in code generation.</entry>
    <entry key="RowMajorFrameBasedUnsupported">Block ''{0}'' does not support frame based mode for row-major code generation.</entry>
    <entry key="DelayLengthUpperLimitValueOutOfRange">In block ''{0}'', value of parameter ''{1}'' is out of range of delay length data type.</entry>
    <entry key="DelayLengthUpperLimitValuePrecisionLoss"> For block ''{0}'', the representation of a delay length value greater than {1,number,integer} is not supported by data type ''{2}'' without precision loss. To prevent this precision loss, use a data type with a greater integer range or decrease the value of the parameter ''{3}''. </entry>
    <entry key="MultiUnitDelayForStringNotSupported"> Invalid parameter setting in ''{0}''. Delay length greater than 1 unit is currently not supported for string data type. </entry>
    <entry key="VariableDelayForStringNotSupported"> Invalid parameter setting in ''{0}''.  Only zero or unit delay is supported by string data type. The delay length parameter is determined by the dialog. </entry>
    <entry key="DataInputPortAndICShouldBeHomogeneousStringType">For block ''{0}'', if the parameter ''{1}'' type or data input type is string, both must be the same string data type.</entry>
  </message>
</rsccat>
