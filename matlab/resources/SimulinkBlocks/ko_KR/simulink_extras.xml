<?xml version="1.0" encoding="UTF-8"?>
<!--Copyright 2024 The MathWorks, Inc.-->

<rsccat xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.0" locale="ko_KR" product="SimulinkBlocks" xsi:noNamespaceSchemaLocation="../../resources/schema/msgcat.xsd">
  <message>
    <entry key="Numerator_MP">분자:</entry>
    <entry key="Denominator_MP">분모:</entry>
    <entry key="InitialInput_MP">초기 입력:</entry>
    <entry key="InitialOutput_MP">초기 출력:</entry>
    <entry key="SampleTime_MP">샘플 시간:</entry>
    <entry key="DiscreteTransferFunctionWithInitialOutputs_MD">분자 및 분모에 대한 벡터 표현식입니다. 계수는 z의 거듭제곱 내림차순으로 정렬됩니다.</entry>
    <entry key="InitialConditions_MP">초기 조건:</entry>
    <entry key="DiscreteTransferFunctionWithInitialStates_MD">분자 및 분모에 대한 벡터 표현식입니다. 계수는 z의 거듭제곱 내림차순으로 정렬됩니다.</entry>
    <entry key="Zeros_MP">영점:</entry>
    <entry key="Poles_MP">극점:</entry>
    <entry key="Gain_MP">이득:</entry>
    <entry key="DiscreteZeroPoleWithInitialOutputs_MD">분자, 분모 및 이득에 대한 벡터 표현식입니다.</entry>
    <entry key="DiscreteZeroPoleWithInitialStates_MD">분자, 분모 및 이득에 대한 벡터 표현식입니다.</entry>
    <entry key="NumberOfConverterBits_MP">변환기의 비트 수:</entry>
    <entry key="MinInputVoltageAtLowOutput_MP">낮은 출력에서 최소 입력 전압:</entry>
    <entry key="MaxInputVoltageAt2nOutputunreachable_MP">2^n 출력(도달할 수 없음)에서 최대 입력 전압:</entry>
    <entry key="OutputDataType_MP">출력 데이터형:</entry>
    <entry key="OutputNegativeValues_MP">음수 값 출력</entry>
    <entry key="IdealADC_MD">선형 아날로그-디지털 변환기에 대한 이상화된 양자화기입니다. n비트 변환기에 대해 2^n개의 가능한 디지털 출력 코드가 있습니다. 각 값은 하나의 최하위 비트(1 LSB)를 스텝 크기로 하여 전체 아날로그 입력 범위를 균등하게 나눈 부분을 나타냅니다. 1 LSB는 (Vmax - Vmin)/2^비트입니다. 이 스텝의 중간점은 실제 값에 해당하므로 전체 스케일 범위(FSR) 내에서 1/2 LSB 를 절대 넘지 않는 양자화 오차가 발생합니다. 변환기의 범위에서 첫 번째 스텝과 마지막 스텝은 너비가 1/2 LSB에 불과하므로 변환기의 전체 스케일 범위는 (2^n - 1) 스텝 너비와 같습니다. FSR 낮은 천이는 Vmin + 1/2 LSB에서 발생하고, FSR 높은 천이는 Vmax - 3/2 LSB에서 발생합니다. 이 모델에서 변환 시간은 0입니다. 음수 전압에 대해 음수 출력을 원한다면 "음수 값 출력"을 ON으로 설정하십시오(부호 없는 출력 데이터형에는 적용되지 않음).</entry>
    <entry key="InitialInputs_MP">초기 입력:</entry>
    <entry key="InitialOutputs_MP">초기 출력:</entry>
    <entry key="StateSpaceWithInitialOutputs_MD">상태공간 모델 행렬입니다.\ndx/dt = Ax + Bu\ny=Cx +Du</entry>
    <entry key="TransferFunctionWithInitialOutputs_MD">분자 및 분모에 대한 벡터 표현식입니다. 계수는 s의 거듭제곱 내림차순으로 정렬됩니다.</entry>
    <entry key="TransferFunctionWithInitialStates_MD">분자 및 분모에 대한 벡터 표현식입니다. 계수는 s의 거듭제곱 내림차순으로 정렬됩니다.</entry>
    <entry key="ZeroPoleWithInitialOutputs_MD">분자, 분모 및 이득에 대한 벡터 표현식입니다.</entry>
    <entry key="ZeroPoleWithInitialStates_MD">분자, 분모 및 이득에 대한 벡터 표현식입니다.</entry>
    <entry key="LengthOfBuffer_MP">버퍼 길이:</entry>
    <entry key="PlotAfterHowManyPoints_MP">다음 점 간격마다 플로팅:</entry>
    <entry key="AutoCorrelator_MD">입력의 자기상관을 플로팅합니다.\nSignal Processing Toolbox가 필요합니다.</entry>
    <entry key="NumberOfPointsForFft_MP">fft에 대한 점 개수:</entry>
    <entry key="AveragingPowerSpectralDensity_MD">입력의 평균 PSD를 플로팅합니다.</entry>
    <entry key="AveragingSpectrumAnalyzer_MD">Averaging Spectrum Analyzer를 구현합니다.\n입력 1을 시스템 입력에 연결하십시오.\n입력 2를 시스템 출력에 연결하십시오.</entry>
    <entry key="CrossCorrelator_MD">입력 신호의 상호상관을 플로팅합니다.\nSignal Processing Toolbox가 필요합니다.</entry>
    <entry key="YLimits_MP">Y 제한</entry>
    <entry key="FloatingBarPlot_MD">시뮬레이션이 실행 중인 동안 선택한 신호를 막대 플롯으로 표시합니다(즉, 신호의 값이 표시되는 것을 보려면 신호 선을 클릭하십시오). 여러 개의 신호를 선택하려면 Shift+Click을 사용하십시오. 각 신호는 상응하는 Y 제한 세트를 사용하여 자신의 좌표축에 표시됩니다.</entry>
    <entry key="PowerSpectralDensity_MD">입력의 PSD를 플로팅합니다.</entry>
    <entry key="SpectrumAnalyzer_MD">Spectrum Analyzer를 구현합니다.\n입력 1을 시스템 입력에 연결하십시오.\n입력 2를 시스템 출력에 연결하십시오.</entry>
    <entry key="Period_MP">주기:</entry>
    <entry key="DigitalClock_MD">디지털 클록.\n주기의 전반기 동안에는 출력이 1로 설정됩니다.</entry>
    <entry key="DFlipFlop_MD">D Flip-Flop 블록</entry>
    <entry key="DLatch_MD">D Latch Flip-Flop 블록</entry>
    <entry key="InitialConditionstateOfQ_MP">초기 조건(Q의 상태):</entry>
    <entry key="JKFlipFlop_MD">J-K Flip-Flop 블록(하강 에지 트리거됨)</entry>
    <entry key="SRFlipFlop_MD">S-R Flip-Flop 블록\n</entry>
    <entry key="SwitchValue1ForLinearization0ForSimulation_MP">스위치 값(선형화인 경우 1, 시뮬레이션인 경우 0):</entry>
    <entry key="DerivativeConstantNssN_MP">미분 상수 Ns/(s+N):</entry>
    <entry key="DerivativeForLinearization_MD">선형화를 위한 적정 전달 함수 근사를 사용하는 전환 미분.</entry>
    <entry key="Cart2Polar_MD">카테시안 좌표에서 극좌표로 변환.\n[x, y] -&gt; [r, theta]\n\nr = sqrt(x^2 + y^2);\ntheta = atan(y/x);</entry>
    <entry key="Cart2Sph_MD">카테시안 좌표에서 구면좌표로 변환.\n[x, y, z] -&gt; [r, theta, phi]\n\np = hypot(x,y); r = hypot(p,z);\ntheta = atan(y/x);\nphi = atan(p/z);</entry>
    <entry key="CelsiusToFahrenheit_MD">섭씨에서 화씨로 변환.\n\nF=9/5*C+32</entry>
    <entry key="DegreesToRadians_MD">도에서 라디안으로 변환.\n\nR=pi/180*D</entry>
    <entry key="FahrenheitToCelsius_MD">화씨에서 섭씨로 변환.\n\nC=5/9*(F-32);</entry>
    <entry key="Polar2Cart_MD">극좌표에서 카테시안 좌표로 변환.\n[r, theta] -&gt; [x, y]\n\nx = r * cos(theta);\ny = r * sin(theta);\n</entry>
    <entry key="RadiansToDegrees_MD">라디안에서 도로 변환.\n\nD=180/pi*R</entry>
    <entry key="Sph2Cart_MD">구면좌표에서 카테시안 좌표로 변환.\n[r, theta, phi] -&gt; [x, y, z]\n\nx = r * sin(phi) * cos(theta);\ny = r * sin(phi) * sin(theta);\nz = r * cos(phi);</entry>
    <entry key="A_MP">A:</entry>
    <entry key="B_MP">B:</entry>
    <entry key="C_MP">C:</entry>
    <entry key="D_MP">D:</entry>
  </message>
</rsccat>
