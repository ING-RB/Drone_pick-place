<?xml version="1.0"?>
<!-- Copyright 2022-2024 The MathWorks, Inc. -->
<rsccat version="1.0" locale="en_US" product="instrument">
    <message>
        <!-- C++ Error IDs -->
        <entry key="InvalidExecuteCommand">This is an invalid execute command.</entry>
        <entry key="InvalidDriver">{0}</entry>
        <entry key="UnableToFindControllers">Unable to find any controllers. Make sure that your controller is physically connected to the computer.</entry>
        <entry key="FindControllers">{0}</entry>
        <entry key="OpenController">Failed to create controller object. Connection to controller with the specified serial number already exists.</entry>
        <entry key="CloseController">{0}</entry>
        <entry key="CreateI2CDevice">{0}</entry>
        <entry key="CloseDevice">{0}</entry>
        <entry key="ScanI2CBus">Failed to scan for I2C peripheral devices. Possible reasons are:\n1)The absence of a pullup resistor on the SDA line, SCL line, or both.\n2)A transaction in progress by another controller.\n3)A bus fault condition in which the SDA line, SCL line, or both are being held low.</entry>
        <entry key="SetI2CAddress">{0}</entry>
        <entry key="SetI2CBitRate">{0}</entry>
        <entry key="SetTimeout">{0}</entry>
        <entry key="SetPullupResistors">'EnablePullupResistors' must be specified as a numeric or logical 0 (false) for this controller.</entry>
        <entry key="GetPullupResistors">{0}</entry>
        <entry key="SetVoltageLevel">'VoltageLevel' must be specified as 3.3 for this controller.</entry>
        <entry key="SetTargetPower">{0}</entry>
        <entry key="GetTargetPower">{0}</entry>
        <entry key="SetOutputDriverType">{0}</entry>
        <entry key="WriteI2C">{0}</entry>
        <entry key="ReadI2C">{0}</entry>
        <entry key="ConfigureDigitalPin">{0}</entry>
        <entry key="WriteDigitalPin">{0}</entry>
        <entry key="WriteDigitalMultiPin">{0}</entry>
        <entry key="ReadDigitalPin">{0}</entry>
        <entry key="ReadDigitalMultiPin">{0}</entry>

        <!-- MATLAB Error IDs -->
        <entry key="UnableToCreateControllerObject">Failed to create the default {0} object. Specify the serial number from the output of {1}.</entry>
        <entry key="InvalidSyntaxListFcn">No input arguments required for {0}.</entry>
        <entry key="InvalidSyntaxController">Incorrect number of input arguments. Valid syntaxes are:\ncontrollerObj = {0}(SERIALNUMBER)\ncontrollerObj = {0}(SERIALNUMBER,NAME=VALUE)</entry>
        <entry key="UnsupportedPlatformAardvark">aardvarklist, aardvarkfind, and aardvark are not supported on Linux or macOS.</entry>
        <entry key="UnsupportedPlatformNI845x">ni845xlist, ni845xfind, and ni845x are not supported on Linux or macOS.</entry>
        <entry key="RequiredNVPairOptions">Second input argument must be 'I2CAddress'.</entry>
        <entry key="IncorrectNumInputArguments">Incorrect number of input arguments specified. Each parameter name must be followed by a corresponding value.</entry>
        <entry key="ReadOnlyVoltageLevel">Unable to specify a value for 'VoltageLevel' because it is a read-only property for Aardvark.</entry>
        <entry key="InvalidI2CAddress">Unable to connect to specified I2C address. Specify a valid I2C address from the output of scanI2CBus.</entry>
        <entry key="I2CDeviceAlreadyExists">device object with specified I2C address already exists.</entry>
        <entry key="InvalidSyntaxI2CDevice">Incorrect number of input arguments. Valid syntaxes are:\nd = device(controllerObj,I2CAddress=ADDRESSVALUE)\nd = device(controllerObj,I2CAddress=ADDRESSVALUE,NAME=VALUE)</entry>
        <entry key="InvalidSyntaxConfigureDigitalPin">Incorrect number of input or output arguments. Valid syntax is configureDigitalPin(controllerObj,PIN,MODE).</entry>
        <entry key="InvalidSyntaxWriteDigitalPin">Incorrect number of input arguments. Valid syntax is writeDigitalPin(controllerObj,PIN,DATA).</entry>
        <entry key="InvalidSyntaxReadDigitalPin">Incorrect number of input arguments. Valid syntax is DATA = readDigitalPin(controllerObj,PIN).</entry>
        <entry key="IncorrectDigitalPinError">Invalid digital pin specified. Valid pins for this controller are:</entry>
        <entry key="IncorrectDigitalPinArrayError">One or more invalid digital pins specified. Pin array must be specified as</entry>
        <entry key="IncorrectDigitalPinArraySizeNI845x">Digital pins must be specified as a 1-by-8 array.</entry>
        <entry key="IncorrectDigitalPinArraySizeAardvark">Digital pins must be specified as a 1-by-6 array.</entry>
        <entry key="IncorrectWriteDigitalPinDataSize">Data must be numeric or logical and must be the same size as the specified digital pins.</entry>
        <entry key="IncorrectWriteDigitalPinData">Data must be specified as a numeric or logical 1 (true) or 0 (false).</entry>
        <entry key="InvalidSyntaxScanI2CBus">Incorrect number of input arguments. Valid syntax is scanI2CBus(controllerObj).</entry>
        <entry key="InvalidSyntaxWriteRegister">Incorrect number of input arguments. Valid syntaxes are:\nwriteRegister(d,REGISTERADDRESS,DATA)\nwriteRegister(d,REGISTERADDRESS,DATA,PRECISION)</entry>
        <entry key="InvalidSyntaxReadRegister">Incorrect number of input arguments. Valid syntaxes are:\nDATA = readRegister(d,REGISTERADDRESS)\nDATA = readRegister(d,REGISTERADDRESS,PRECISION)\nDATA = readRegister(d,REGISTERADDRESS,COUNT)\nDATA = readRegister(d,REGISTERADDRESS,COUNT,PRECISION)</entry>
        <entry key="InvalidSyntaxWriteI2C">Incorrect number of input arguments. Valid syntaxes are:\nwrite(d,DATA)\nwrite(d,DATA,PRECISION)</entry>
        <entry key="InvalidSyntaxReadI2C">Incorrect number of input arguments. Valid syntaxes are:\nDATA = read(d,COUNT)\nDATA = read(d,COUNT,PRECISION)</entry>
        <entry key="InvalidValueEnablePullupResistors">'EnablePullupResistors' must be specified as a numeric or logical 1 (true) or 0 (false).</entry>
        <entry key="InvalidValueEnableTargetPower">'EnableTargetPower' must be specified as a numeric or logical 1 (true) or 0 (false).</entry>
        <entry key="InvalidSingleTypeRanged">Data must be a scalar single between {0} and {1}.</entry>
        <entry key="InvalidDoubleTypeRanged">Data must be a scalar double between {0} and {1}.</entry>
        <entry key="InvalidSingleArrayValueRanged">Data must be an array of single values between {0} and {1}.</entry>
        <entry key="InvalidDoubleArrayValueRanged">Data must be an array of double values between {0} and {1}.</entry>
        <entry key="InvalidWriteDataTypeSingle">Invalid data type. Data must be double or single scalar or vector.</entry>
        <entry key="InvalidWriteDataTypeDouble">Invalid data type. Data must be double scalar or vector.</entry>
        <entry key="InvalidStringNonScalarData">Data must be a string scalar.</entry>
        <entry key="InvalidDataTypeWriteData">Data to write must be numeric, character, or string data.</entry>
        <entry key="UnableToFindAvailableControllers">Unable to find any controllers that are not in use. Make sure that at least one controller is physically connected to the computer and available to use.</entry>
        <entry key="AardvarkDriverNotInstalled">Get the Aardvark driver by installing the Instrument Control Toolbox Support Package for Total Phase Aardvark I2C/SPI Interface from the &lt;a href="matlab:matlab.internal.addons.launchers.showExplorer(''tripwire'', ''identifier'', ''ICT_TPAVRK_I2C_SPI'')"&gt;Add-On Explorer&lt;/a&gt;.\nSee &lt;a href="matlab:helpview(''instrument'',''i2c_controller_req'')"&gt;related documentation&lt;/a&gt; for more troubleshooting steps.</entry>
        <entry key="NI845xDriverNotInstalled">Get the NI-845x driver by installing the Instrument Control Toolbox Support Package for National Instruments NI-845x I2C/SPI Interface from the &lt;a href="matlab:matlab.internal.addons.launchers.showExplorer(''tripwire'', ''identifier'', ''NI845XI2C'')"&gt;Add-On Explorer&lt;/a&gt;.</entry>
        <entry key="NoSave">Saving {0} objects to a MAT-file is not supported.</entry>
        <entry key="NoLoad">Loading {0} objects from a MAT-file is not supported.</entry>
        <entry key="TimeoutNotSupported">The 'Timeout' property is not supported for I2C peripheral device objects.</entry>
        <entry key="SerialNumberNotFound">Failed to create controller object. Unable to find controller with specified serial number or specified serial number is invalid.</entry>
        <entry key="InvalidIntTypeRanged">Invalid data type. {0} must be a scalar integer between {1} and {2}.</entry>
        <entry key="InvalidIntValueRanged">{0} must be a scalar integer between {1} and {2}.</entry>
        <entry key="InvalidIntArrayTypeRanged">Invalid data type. Data must be an array of integers between {0} and {1}.</entry>
        <entry key="InvalidIntArrayValueRanged">Data must be an array of integers between {0} and {1}.</entry>

        <!-- MATLAB Strings -->
        <entry key="I2CAddress">'I2CAddress' value</entry>
        <entry key="RegisterAddress">Register address argument</entry>
        <entry key="Data">Data</entry>
        <entry key="VendorErrorString">{0} function returned the following vendor error:\n{1}</entry>
        <entry key="Write">write</entry>
        <entry key="Read">read</entry>
        <entry key="WriteRegister">writeRegister</entry>
        <entry key="ReadRegister">readRegister</entry>
    </message>
</rsccat>