<?xml version="1.0" encoding="UTF-8"?>
<!--Copyright 2025 The MathWorks, Inc.-->

<rsccat xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.0" locale="ko_KR" product="ros" xsi:noNamespaceSchemaLocation="../../resources/schema/msgcat.xsd">
  <message>
    <entry key="MainWindowTitle">ROS 미들웨어 구성</entry>
    <entry key="SelectRMWConfigurationTitle">ROS 미들웨어(RMW) 구현 선택</entry>
    <entry key="SelectRMWDescription">구성할 RMW 구현을 선택합니다.</entry>
    <entry key="SelectRMWFastRTPS">디폴트 RMW 구현은 ''rmw_fastrtps_cpp''입니다. 이 구현에서는 eProsima Fast DDS를 기본 DDS 구현으로 갖고 정적 유형 지원을 사용합니다.</entry>
    <entry key="SelectRMWWhatToConsider">ROS 미들웨어 구성을 통해 사용자가 선택한 RMW 구현을 ROS 2 노드에 사용할 수 있습니다. ROS Toolbox는 eProsima Fast DDS(&lt;b&gt;v2.14.3&lt;/b&gt;) 및 Eclipse Cyclone DDS(&lt;b&gt;v0.10.5&lt;/b&gt;) 미들웨어에 대한 내장 지원을 제공합니다. 다른 미들웨어를 기반으로 하는 사용자 지정 RMW 구현을 사용할 수도 있습니다.&lt;br&gt;&lt;/br&gt;&lt;br&gt;정적 유형 지원을 사용하는 RMW 구현은 동적 유형 지원을 사용하는 RMW 구현보다 더 빠릅니다.&lt;/br&gt;</entry>
    <entry key="SelectRMWFastRTPSDynamic">''rmw_fastrtps_dynamic_cpp''에서는 eProsima Fast DDS를 기본 DDS 구현으로 갖고 동적 유형 지원을 사용합니다.</entry>
    <entry key="SelectRMWCycloneDDS">''rmw_cyclonedds_cpp''를 사용하면 ROS 2는 Eclipse Cyclone DDS를 기본 DDS 구현으로 갖고 동적 유형 지원을 사용할 수 있습니다.</entry>
    <entry key="SelectRMWConnextProDDS">''rmw_connextdds''를 사용하면 ROS 2는 RTI Connext DDS Professional을 기본 DDS 구현으로 갖고 동적 유형 지원을 사용할 수 있습니다.</entry>
    <entry key="ScreenTwoTitle">DDS 설치 검증</entry>
    <entry key="BrowseButton">찾아보기</entry>
    <entry key="VerifyInstallationButton">설치 검증</entry>
    <entry key="VerifyDDSInstallationSteps">&lt;a href="http://www.mathworks.com/rti/downloading-connext-dds"&gt;Downloading Connext DDS&lt;/a&gt; 및 &lt;a href="http://www.mathworks.com/rti/setting-up-a-license"&gt;Setting Up a License&lt;/a&gt;의 지침에 따라, 호스트 플랫폼에서 RTI Connext DDS Professional을 사용할 수 있는지 확인하십시오.&lt;/br&gt;&lt;br&gt;설치된 RTI Connext Professional을 사용할 수 있는 경우 &lt;b&gt;'찾아보기'&lt;/b&gt;를 클릭하여 호스트 플랫폼상의 설치 디렉터리를 선택한 다음 &lt;b&gt;'설치 검증'&lt;/b&gt;을 클릭하십시오.</entry>
    <entry key="VerifyDDSInstallationHelp">&lt;b&gt;''rmw_connextdds''&lt;/b&gt;를 사용하려면 RTI Connext DDS Professional(버전 &lt;b&gt;6.0.1&lt;/b&gt; 이상)이 호스트 플랫폼에 설치되어 있어야 합니다.</entry>
    <entry key="SelectDDSInstallation_InvalidFolder">설치된 RTI Connext DDS Professional을 찾을 수 없습니다. 설치된 프로그램의 올바른 위치를 지정하십시오.</entry>
    <entry key="BrowseDDSInstallation">RTI Connext DDS Professional 설치 디렉터리 찾아보기</entry>
    <entry key="DDSInstallation_Validation">RTI Connext DDS Professional 설치 검증</entry>
    <entry key="InvalidLicense">RTI Connext DDS Professional의 라이선스 파일을 찾을 수 없습니다. 설치된 위치에 라이선스 파일 ''rti_license.dat''가 있는지 확인하십시오.</entry>
    <entry key="DDSValidationSuccessStatus">RTI Connext DDS Professional 설치가 검증되었습니다. &lt;b&gt;'다음'&lt;/b&gt;을 클릭하여 MATLAB/Simulink에서 &lt;b&gt;''rmw_connextdds''&lt;/b&gt;를 빌드하고 등록하십시오.</entry>
    <entry key="RMWConnextDDSWhatToConsider">부모 디렉터리가 유효한 명명 규칙을 따르고 디렉터리에 ''rmw_connextdds''와 함께 다른 패키지가 없는지 확인하십시오.</entry>
    <entry key="Screen_Loading">화면을 불러오는 중</entry>
    <entry key="ScreenThreeTitle">RMW 구현 패키지 빌드</entry>
    <entry key="ScreenThreeDescription">&lt;a href="http://www.mathworks.com/ros/jazzy/rmw_connextdds"&gt;리포지토리&lt;/a&gt;에서 &lt;b&gt;''rmw_connextdds''&lt;/b&gt;를 호스트 플랫폼으로 다운로드하고, 아래 단계를 따라 패키지를 빌드합니다.</entry>
    <entry key="RMWConnextDDSPackageBrowse">&lt;br&gt;1. ''rmw_connextdds'' 패키지의 부모 디렉터리를 찾습니다.&lt;/br&gt;</entry>
    <entry key="BuildRMWArtifactsStep">&lt;br&gt;2. ''RMW 아티팩트 빌드'' 버튼을 클릭하여 ''rmw_connextdds''를 빌드합니다.&lt;/br&gt;</entry>
    <entry key="BuildRMWArtifactsButton">RMW 아티팩트 빌드</entry>
    <entry key="BrowseRMWPlaceHolder">''rmw_connextdds'' 패키지 위치를 찾습니다</entry>
    <entry key="TestRMWButton">RMW 테스트</entry>
    <entry key="PackageBuildProgress">빌드를 진행 중입니다. 이 작업은 몇 분 정도 소요될 수 있습니다.</entry>
    <entry key="BuildRMWAboutSelection">''rmw_connextdds'' 패키지를 빌드하는 데 몇 분이 걸릴 수 있습니다. 빌드 프로세스가 성공적으로 완료될 때까지 기다리십시오.</entry>
    <entry key="BuildRMWPackageSuccess">빌드에 성공함: &lt;a href="matlab:web(''{0}'')"&gt;build_log&lt;/a&gt;</entry>
    <entry key="ClickTestRMWMessage">''RMW 테스트''를 클릭하십시오.</entry>
    <entry key="BuildRMWPackageFailedLogFile">빌드에 실패함: &lt;a href="matlab:web(''{0}'')"&gt;build_log&lt;/a&gt;</entry>
    <entry key="BuildRMWPackageFailedStatus">빌드에 실패함: {0}</entry>
    <entry key="NodeCreationSuccess">테스트에 성공했습니다. MATLAB/Simulink에서 ''{0}''을(를) RMW 구현으로 사용하려면 ''마침''을 클릭하십시오.</entry>
    <entry key="NodeCreationFailed">테스트에 실패함: {0}</entry>
    <entry key="TestRMWBusySpinnerLabel">''{0}'' RMW 구현으로 ROS 2 노드 생성</entry>
    <entry key="AboutFinishSelection">테스트 노드가 생성되었을 때 이 창을 닫으려면 ''마침''을 클릭합니다. 선택한 RMW 구현은 ROS Toolbox 기본 설정으로 구성됩니다.</entry>
    <entry key="TestRMWImplementationTitle">RMW 구현 테스트</entry>
    <entry key="TestRMWImplementationWithBuiltinDDS">&lt;b&gt;''RMW 테스트''&lt;/b&gt; 버튼을 클릭하여 &lt;b&gt;''{0}''&lt;/b&gt; RMW 구현을 갖는 ROS 2 노드 생성을 검증합니다.</entry>
    <entry key="RMWIceoryxHelpText">''rmw_iceoryx_cpp''를 사용하면, ROS 2는 Eclipse iceoryx를 IPC(프로세스 간 통신) 미들웨어로 갖고 동적 유형 지원을 사용할 수 있습니다.</entry>
    <entry key="IceoryxValidationScreenTitle">Iceoryx 미들웨어 설치 검증</entry>
    <entry key="IceoryxMiddlewareWhatToConsider">''iceoryx''가 있는 위치에 다른 패키지가 없는지 확인하십시오.&lt;/br&gt;&lt;br&gt;&lt;b&gt;''rmw_iceoryx_cpp''&lt;/b&gt;를 사용하려면 Eclipse iceoryx를 시스템에 설치해야 합니다. 권장 버전은 &lt;b&gt;v2.0.3&lt;/b&gt;(Blueberry)입니다.</entry>
    <entry key="VerifyIceoryxInstallationSteps">&lt;br&gt;&lt;a href="http://www.mathworks.com/iceoryx/v2.0.3/installating-iceoryx"&gt;Build and install iceoryx&lt;/a&gt;의 지침에 따라, 호스트 플랫폼에서 Eclipse iceoryx를 사용할 수 있는지 확인하십시오.&lt;/br&gt;&lt;br&gt;설치된 Eclipse iceoryx를 사용할 수 있는 경우 &lt;b&gt;'찾아보기'&lt;/b&gt;를 클릭하여 시스템상의 설치 디렉터리를 선택한 다음 &lt;b&gt;'설치 검증'&lt;/b&gt;을 클릭하십시오.</entry>
    <entry key="IceoryxValidationProgress">Eclipse iceoryx 설치를 검증하는 중</entry>
    <entry key="BrowseIceoryxInstallation">Eclipse iceoryx 설치 디렉터리 찾아보기</entry>
    <entry key="IceoryxValidationSuccessStatus">검증이 성공했습니다. &lt;b&gt;'다음'&lt;/b&gt;을 클릭하여 MATLAB/Simulink에서 &lt;b&gt;''rmw_iceoryx_cpp''&lt;/b&gt;를 빌드하고 등록하십시오.</entry>
    <entry key="IceoryxValidationFailedStatus">검증이 실패했습니다. ''iceoryx'' 위치를 올바르게 지정하십시오.</entry>
    <entry key="RMWIceoryxCppScreenDescription">&lt;a href="http://www.mathworks.com/ros/humble/rmw_iceoryx_cpp"&gt;리포지토리&lt;/a&gt;에서 &lt;b&gt;''rmw_iceoryx_cpp''&lt;/b&gt;를 시스템으로 다운로드하고, 아래 단계를 따라 패키지를 빌드합니다.</entry>
    <entry key="RMWIceoryxCppPackageBrowse">&lt;br&gt;1. ''rmw_iceoryx_cpp'' 패키지의 부모 디렉터리를 찾습니다.&lt;/br&gt;</entry>
    <entry key="BuildRMWIceoryxCppStep">&lt;br&gt;2. 'RMW 아티팩트 빌드' 버튼을 클릭하여 ''rmw_iceoryx_cpp''를 빌드합니다.&lt;/br&gt;</entry>
    <entry key="BrowseRMWIceoryxCppPlaceHolder">''rmw_iceoryx_cpp'' 패키지 위치 찾기</entry>
    <entry key="BuildRMWIceoryxCppSelection">''rmw_iceoryx_cpp'' 패키지를 빌드하는 데 몇 분이 걸릴 수 있습니다. 빌드 프로세스가 성공적으로 완료될 때까지 기다리십시오.</entry>
    <entry key="RMWIceoryxCppWhatToConsider">부모 디렉터리가 유효한 명명 규칙을 따르고 디렉터리에 ''rmw_iceoryx_cpp''와 함께 다른 패키지가 없는지 확인하십시오.</entry>
    <entry key="RMWReconfigurationTitle">ROS 미들웨어 구현 재구성</entry>
    <entry key="RMWConfigurationAvailable">시스템에 ROS 미들웨어 구현 ''{0}''이(가) 이미 구성되어 있습니다. RMW 구현을 재구성하고자 하는 경우 ''다음''을 클릭하십시오.</entry>
    <entry key="RMWAvailableConfigurationAboutSelection">이 창을 닫으려면 ''취소''를 클릭하십시오.</entry>
    <entry key="SelectCustomRMWAboutSelection">사용자 지정 RMW 구현 패키지를 빌드하려면 &lt;b&gt;RMW 구현&lt;/b&gt;을 [기타]로 설정하십시오.</entry>
    <entry key="RMWValidationScreenTitle">ROS 미들웨어(RMW) 구현 패키지 검증</entry>
    <entry key="RMWValidationScreenInstructions">호스트 플랫폼에서 ROS 미들웨어 구현 패키지를 사용할 수 있는지 확인하십시오. 패키지의 위치를 찾아 &lt;b&gt;''RMW 패키지 검증''&lt;/b&gt; 버튼을 클릭하십시오.</entry>
    <entry key="RMWValidationScreenButton">RMW 패키지 검증</entry>
    <entry key="RMWValidationScreenBrowse">RMW 구현 패키지 위치 찾아보기</entry>
    <entry key="RMWValidationScreenSpinnerText">ROS 미들웨어(RMW) 구현 패키지를 검증합니다.</entry>
    <entry key="RMWPackageEmptyPathError">ROS 미들웨어 구현 패키지의 경로는 비어 있지 않아야 합니다.</entry>
    <entry key="RMWPackageNotFoundError">제공된 위치에서 유효한 ROS 미들웨어 구현 패키지를 찾을 수 없습니다. 패키지의 올바른 위치를 지정하십시오.</entry>
    <entry key="RMWPackageAvailable">RMW 구현 패키지 &lt;b&gt;''{0}''&lt;/b&gt;은(는) 제공된 위치에서 사용할 수 있으며, {1} 유형 지원을 기반으로 합니다.</entry>
    <entry key="RMWValidationNextActionDynamic">&lt;b&gt;''다음''&lt;/b&gt;을 클릭하여 미들웨어 설치 환경을 제공하십시오.</entry>
    <entry key="RMWValidationNextActionStatic">계속하려면 &lt;b&gt;''다음''&lt;/b&gt;을 클릭하십시오.</entry>
    <entry key="RMWValidationStatusSameTypeSupport">RMW 구현 패키지 &lt;b&gt;''{0}''&lt;/b&gt; 및 &lt;b&gt;''{1}''&lt;/b&gt;은(는) 제공된 위치에서 사용할 수 있습니다. 둘 다 {2} 유형 지원을 기반으로 합니다.</entry>
    <entry key="RMWValidationStatusDifferentTypeSupport">RMW 구현 패키지 &lt;b&gt;''{0}''&lt;/b&gt; 및 &lt;b&gt;''{1}''&lt;/b&gt;은(는) 제공된 위치에서 사용할 수 있습니다. 각각 {2} 및 {3} 유형 지원을 기반으로 합니다.</entry>
    <entry key="RMWValidationNextActionMultipleRMW">빌드할 RMW 구현 패키지를 선택하려면 &lt;b&gt;''다음''&lt;/b&gt;을 클릭하십시오.</entry>
    <entry key="RMWValidationStatusMultipleRMW">제공된 위치에서 다중 RMW 구현 패키지를 사용할 수 있습니다.</entry>
    <entry key="RMWValidationScreenAboutSelection">[RMW 패키지 검증] 버튼을 클릭하여 제공된 위치에 RMW 구현 패키지가 포함되어 있는지 확인합니다.</entry>
    <entry key="RMWValidationScreenWhatToConsider">RMW 구현 패키지 이름은 ''rmw_''로 시작합니다. RMW 구현 패키지의 위치 또는 특정 미들웨어에 대한 RMW 구현 패키지가 1개 또는 여러 개 포함된 폴더를 찾으십시오.</entry>
    <entry key="ChooseRMWPackageScreenTitle">RMW 구현 패키지 선택</entry>
    <entry key="ChooseRMWPackageScreenInstructions">제공된 패키지 위치에서 사용 가능한 RMW 구현 패키지 중 빌드할 패키지를 선택하십시오.</entry>
    <entry key="RMWPackageSelectionLabel">RMW 구현 패키지:</entry>
    <entry key="ChooseRMWPackageScreenAboutSelection">''all'' 옵션을 선택하면 제공된 RMW 패키지 위치에서 사용 가능한 모든 RMW 구현이 빌드됩니다.</entry>
    <entry key="ValidateTSPkgScreenTitle">ROS IDL 유형 지원 패키지 검증</entry>
    <entry key="ValidateTSPkgScreenInstructions">해당 위치의 RMW 구현 패키지 &lt;b&gt;''{0}''&lt;/b&gt;에는 정적 기반 ROS IDL 유형 지원 패키지가 필요합니다. 필요한 유형 지원 패키지를 &lt;a href="matlab:{1}"&gt;이&lt;/a&gt; 디렉터리에서 사용할 수 없으면 패키지를 해당 디렉터리에 복사한 후 &lt;b&gt;''유형 지원 검증''&lt;/b&gt; 버튼을 클릭하십시오.</entry>
    <entry key="ValidateTSPkgScreenButton">유형 지원 검증</entry>
    <entry key="ValidateTSPkgScreenAboutSelection">[유형 지원 검증] 버튼을 클릭하여 제공된 위치에 ROS IDL 유형 지원 패키지가 포함되어 있는지 확인합니다.</entry>
    <entry key="ValidateTSPkgScreenWhatToConsider">ROS IDL 유형 지원 패키지 이름은 ''rosidl_typesupport_''로 시작하며 유효한 ROS 명명 규칙을 따릅니다.</entry>
    <entry key="ValidatingTSPkgScreenSpinnerText">ROS IDL 유형 지원 패키지를 검증합니다.</entry>
    <entry key="NoIDLTypeSupportPkgFound">부모 디렉터리에서 ROS IDL 유형 지원 패키지를 찾을 수 없습니다.</entry>
    <entry key="IDLTypeSupportIsAvailable">ROS IDL 유형 지원 패키지를 사용할 수 있습니다.</entry>
    <entry key="MiddlewareInstallationEnvScreen">미들웨어 설치 환경 설정</entry>
    <entry key="MiddlewareInstallationEnvScreenInstructions">미들웨어 설치 플랫폼 위치를 찾아 RMW 구현 패키지를 빌드하는 데 필요한 환경 변수를 설정하십시오.</entry>
    <entry key="EnvironmentVariablesLabel">환경 변수:</entry>
    <entry key="AddEnvButton">추가</entry>
    <entry key="RemoveEnvButton">제거</entry>
    <entry key="MiddlewareInstallationEnvScreenWhatToConsider">&lt;b&gt;''추가''&lt;/b&gt; 버튼을 클릭하여 환경 변수를 추가합니다. 환경 변수를 제거하려면 &lt;b&gt;''제거''&lt;/b&gt; 버튼을 클릭하십시오.</entry>
    <entry key="MiddlewareInstallationEnvScreenSpinnerText">미들웨어 환경 설정을 적용합니다.</entry>
    <entry key="MiddlewareInstallationEnvScreenBrowse">미들웨어 설치 디렉터리 찾아보기</entry>
    <entry key="BuildCustomRMWAboutSelection">빌드 프로세스는 몇 분 정도 걸릴 수 있습니다. 프로세스가 완전히 완료될 때까지 기다리십시오.</entry>
    <entry key="BuildCustomRMWScreenInstructions">&lt;b&gt;''RMW 아티팩트 빌드''&lt;/b&gt; 버튼을 클릭하여 &lt;b&gt;''{0}''&lt;/b&gt; 패키지 아티팩트를 빌드합니다.</entry>
    <entry key="BuildCustomRMWForAllPkg">&lt;b&gt;''RMW 아티팩트 빌드''&lt;/b&gt; 버튼을 클릭하여 RMW 구현 패키지 아티팩트를 빌드합니다.</entry>
    <entry key="BuildCustomRMWScreenWhatToConsider">RMW 구현 아티팩트는 선택한 RMW 구현 위치의 ''install'' 디렉터리에 생성됩니다.</entry>
    <entry key="BuildMessagesScreenTitle">ROS 2 메시지 패키지 빌드</entry>
    <entry key="BuildMessagesScreenInstructions">사용자 지정 메시지를 포함한 모든 ROS 2 메시지 패키지에 대한 아티팩트를 재생성해야 합니다. 메시지 패키지를 재빌드하려면 &lt;b&gt;메시지 아티팩트 빌드&lt;/b&gt; 버튼을 클릭하십시오.</entry>
    <entry key="BuildMessagesButton">메시지 아티팩트 빌드</entry>
    <entry key="BuildMessagesScreenAboutSelection">[메시지 아티팩트 빌드] 버튼을 클릭하면 MATLAB/Simulink에 등록된 모든 사용 가능한 RMW 구현에 대한 ROS 2 메시지 패키지가 빌드됩니다.</entry>
    <entry key="BuildMessagesScreenWhatToConsider">모든 ROS 2 메시지는 제공된 RMW 구현 패키지 위치로 복사됩니다. ROS 2 메시지 아티팩트를 빌드하는 데 최대 1시간이 걸릴 수 있습니다. 이러한 아티팩트는 동일한 위치의 ''matlab_msg_gen'' 디렉터리에 생성됩니다.</entry>
    <entry key="BuildMessagesScreenSpinnerOne">메시지 패키지를 복사하는 중입니다. 이 작업은 몇 분 정도 걸릴 수 있습니다.</entry>
    <entry key="BuildMessagesScreenSpinnerTwo">빌드를 진행 중입니다. 이 작업은 일반적으로 1시간 이내에 완료됩니다.</entry>
    <entry key="RMWFastrtpsCpp">rmw_fastrtps_cpp</entry>
    <entry key="RMWFastrtpsDynamicCpp">rmw_fastrtps_dynamic_cpp</entry>
    <entry key="RMWCycloneddsCpp">rmw_cyclonedds_cpp</entry>
    <entry key="RMWConnextdds">rmw_connextdds</entry>
    <entry key="SelectRMWConfigurationLabel">RMW Implementation:</entry>
    <entry key="RMWIceoryxCpp">rmw_iceoryx_cpp</entry>
    <entry key="OtherRMW">other</entry>
  </message>
</rsccat>
