<?xml version="1.0" encoding="UTF-8"?>
<!--Copyright 2025 The MathWorks, Inc.-->

<rsccat xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.0" locale="ja_JP" product="ros" xsi:noNamespaceSchemaLocation="../../resources/schema/msgcat.xsd">
  <message>
    <entry key="MessageTypePrompt">メッセージ タイプ:</entry>
    <entry key="TopicSourcePrompt">トピックのソース:</entry>
    <entry key="TopicSourceFromNetwork">ROS ネットワークから選択</entry>
    <entry key="TopicSourceSpecifyOwn">独自に指定</entry>
    <entry key="TopicPrompt">トピック:</entry>
    <entry key="SelectPrompt">選択</entry>
    <entry key="SampleTimePrompt">サンプル時間:</entry>
    <entry key="WorkspaceStreamPrompt">ワークスペース ストリーム:</entry>
    <entry key="ModelNamePrompt">モデル名:</entry>
    <entry key="ConfigNetworkAddrLinkText">ネットワーク アドレスの構成</entry>
    <entry key="CodeGenTabTitle">コード生成</entry>
    <entry key="InvalidTopicName">
    "{0}" は有効な ROS トピック名ではありません。最初の文字は英字 (a ～ z) またはスラッシュ (/) にする必要があります。残りの文字は、英数字 (a ～ z、0 ～ 9)、アンダースコア (_)、またはスラッシュ (/) にする必要があります。
</entry>
    <entry key="TypePrompt">タイプ:</entry>
    <entry key="FullTypePrompt">完全に解決済みのタイプ:</entry>
    <entry key="MessageClassPrompt">クラス:</entry>
    <entry key="BlankMsgDescription">
    指定したメッセージ タイプまたはサービス タイプをもつ空白メッセージを作成します。 \n \nMsg ブロックの出力は空白の ROS メッセージ (バス信号) です。ROS メッセージ、サービス リクエスト、サービス応答メッセージから選択するように [クラス] パラメーターを設定します。Bus Assignment ブロックを使用してバス信号の特定のフィールドを変更します。 \n \nバス信号はゼロ値 (グラウンド) に初期化されます。
</entry>
    <entry key="SubscriberMaskTitle">ROS Subscriber</entry>
    <entry key="SubscriberMsgQueuePrompt">サブスクライブ コールバック キューの長さ:</entry>
    <entry key="SubscriberInputStreamPrompt">入力ストリーム ワークスペース変数:</entry>
    <entry key="SubscriberDescription">
      ROS ネットワークからメッセージを受信します。 \n \nMsg ブロックの出力は ROS メッセージ (バス信号) です。Bus Selector ブロックを使用して処理対象の信号を抽出します。IsNew ブロックの出力は、前のタイム ステップ中にメッセージを受信したかどうかを示す boolean です。IsNew が true のとき、Msg は新たに受信したメッセージを保持します。IsNew が false のとき、Msg は最後に受信したメッセージを保持します。 \n \nアクティブな ROS ネットワークで利用可能なトピックのリストから選択するには、[トピックのソース] パラメーターを [ROS ネットワークから選択] に設定して [選択] ボタンを使用します。アクティブなトピックのリストを入手するには、ROS ネットワークに接続していなければなりません。選択したトピックのメッセージ タイプは自動的に設定されます。 \n \nアクティブな ROS 接続なしでカスタム トピックを入力するには、[トピックのソース] を [独自に指定] に設定します。[トピック] パラメーターを使用して名前を指定し、[選択] ボタンを使用してメッセージ タイプを選択します。
    </entry>
    <entry key="PublisherMaskTitle">ROS Publisher</entry>
    <entry key="PublisherMsgQueuePrompt">パブリッシュ キューの長さ:</entry>
    <entry key="PublisherOutputStreamPrompt">出力ストリーム ワークスペース変数:</entry>
    <entry key="PublisherDescription">
      ROS ネットワークにメッセージを送信します。 \n \nMsg ブロックの入力は ROS メッセージ (バス信号) を受け入れます。 \n \nアクティブな ROS ネットワークで利用可能なトピックのリストから選択するには、[トピックのソース] パラメーターを [ROS ネットワークから選択] に設定して [選択] ボタンを使用します。アクティブなトピックのリストを入手するには、ROS ネットワークに接続していなければなりません。選択したトピックのメッセージ タイプは自動的に設定されます。 \n \nアクティブな ROS 接続なしでカスタム トピックを入力するには、[トピックのソース] を [独自に指定] に設定します。[トピック] パラメーターを使用して名前を指定し、[選択] ボタンを使用してメッセージ タイプを選択します。
    </entry>
    <entry key="ParameterSourcePrompt">ソース:</entry>
    <entry key="ParameterNamePrompt">名前:</entry>
    <entry key="ParameterDataTypePrompt">データ型:</entry>
    <entry key="ParameterInitialValuePrompt">初期値:</entry>
    <entry key="ShowErrorCodePrompt">ErrorCode 出力端子の表示</entry>
    <entry key="ROSParameterPrompt">ROS パラメーター</entry>
    <entry key="ParametersHeadingPrompt">パラメーター</entry>
    <entry key="GetParameterTitle">ROS Get Parameter</entry>
    <entry key="GetParameterDescription">
      ROS パラメーター サーバーから値を取得します。 \n \nValue 端子は取得した ROS パラメーターの値を出力します。ErrorCode 端子は ROS パラメーターの取得ステータスを整数値として出力します。 \n \n[ソース] パラメーターを [ROS ネットワークから選択] に設定し、[選択] を押して、既存の ROS パラメーターのリストから選択します。パラメーターのリストを入手するには、ROS ネットワークに接続していなければなりません。ROS パラメーターの [名前] と [データ型] を手動で指定するには、[ソース] パラメーターを [独自に指定] に設定します。
    </entry>
    <entry key="SetParameterTitle">ROS Set Parameter</entry>
    <entry key="SetParameterDescription">
      ROS パラメーター サーバー上で値を設定します。 \n \nValue 端子には ROS パラメーターの値が含まれます。この値は更新対象の ROS パラメーター サーバーに送信されます。 \n \n[ソース] パラメーターを [ROS ネットワークから選択] に設定し、[選択] を押して、既存の ROS パラメーターのリストから選択します。パラメーターのリストを入手するには、ROS ネットワークに接続していなければなりません。ROS パラメーターの [名前] と [データ型] を手動で指定するには、[ソース] パラメーターを [独自に指定] に設定します。
    </entry>
    <entry key="VariableSizeOutputsPrompt">可変サイズの信号の出力</entry>
    <entry key="ConfigureUsingROSLabel">ROS を使用した構成</entry>
    <entry key="OutputSettingsPrompt">出力設定</entry>
    <entry key="ReadImageTitle">ROS Read Image</entry>
    <entry key="ReadImageDescription">
      ROS イメージ メッセージからイメージ信号を抽出します。 \n \nMsg 端子は、イメージを表す ROS メッセージ (バス信号) を受け入れます。Image 端子は、グレースケール イメージに対しては [M 行 N 列] の配列を、カラー イメージに対しては [MxNx3] の配列を出力します。Alpha 端子は、アルファ (透明度) チャネルを指定するイメージに対して [M 行 N 列] の配列を出力します。ErrorCode 端子はイメージ変換ステータスを整数値として出力します。 \n \n[ROS を使用した構成] を押して、ROS トピックの内容を基に [イメージの最大サイズ] と [イメージのエンコード] を設定します。
    </entry>
    <entry key="ImagePropertiesPrompt">イメージの設定</entry>
    <entry key="MaximumImageSizePrompt">イメージの最大サイズ:</entry>
    <entry key="ImageEncodingPrompt">イメージのエンコード:</entry>
    <entry key="ShowAlphaOutputPortPrompt">Alpha 出力端子の表示</entry>
    <entry key="ReadPointCloudTitle">ROS Read Point Cloud</entry>
    <entry key="ReadPointCloudDescription">
      ROS 点群メッセージから点群データを抽出します。 \n \nMsg 端子は、点群を表す ROS メッセージ (バス信号) を受け入れます。[点群の構造の保持] がオフになっている場合 (既定)、XYZ 端子は点の直交座標を [P 行 3 列] の配列として出力します。ここで、P は入力される点群内の点の数です。それ以外の場合、XYZ 端子は点の直交座標を [MxNx3] の配列として出力します。ここで、M と N はそれぞれ、入力される点群の高さと幅です。ErrorCode 端子はイメージ変換ステータスを整数値として出力します。 \n \n予測される [点群の最大サイズ] を [高さ, 幅] として指定します。[ROS を使用した構成] を押して、ライブ ROS ネットワーク上のトピックから [点群の最大サイズ] を設定します。
    </entry>
    <entry key="PointCloudPropertiesPrompt">点群の設定</entry>
    <entry key="PreserveStructurePrompt">点群の構造の保持</entry>
    <entry key="MaximumPointCloudSizePrompt">点群の最大サイズ:</entry>
    <entry key="PointCloudDataTypePrompt">点群のデータ型:</entry>
    <entry key="ShowRGBOutputPrompt">RGB 出力端子の表示</entry>
    <entry key="ShowIntensityOutputPrompt">Intensity 出力端子の表示</entry>
    <entry key="ReadScanTitle">ROS Read Scan</entry>
    <entry key="ScanPropertiesPrompt">スキャンの設定</entry>
    <entry key="MaximumArrayLengthPrompt">配列の最大長:</entry>
    <entry key="ReadScanDescription">
      ROS レーザー スキャン メッセージからスキャン データを抽出します。 \n \nMsg 端子は、レーザー スキャンを表す ROS メッセージ (バス信号) を受け入れます。Angles、Intensities、および ErrorCode の出力端子は、[出力設定] を使用してオンとオフを切り替えることができます。Ranges、Angles、および Intensities の各端子は、対応する [N 行 1 列] の配列を ROS メッセージから出力します。ErrorCode 端子は、読み取りスキャンのステータスを整数値として出力します。 \n \n予想される配列の最大長をスカラー値として指定してください。[ROS を使用した構成] を押して、ライブ ROS ネットワーク上のトピックから [配列の最大長] を設定します。
    </entry>
    <entry key="ShowAnglesOutputPrompt">Angles 出力端子の表示</entry>
    <entry key="WriteImageTitle">ROS Write Image</entry>
    <entry key="WriteImageDescription">
  イメージ データから ROS メッセージを書き込みます。 \n \nImage 端子には、単一チャネルのイメージに対しては [M 行 N 列] の配列、マルチチャネルのイメージに対しては [MxNxC] の配列が必要です。Alpha 端子には、アルファ (透明度) チャネルを指定するイメージに対し [M 行 N 列] の配列が必要です。イメージのエンコードは [イメージの設定] で指定します。出力は、イメージを表す ROS メッセージ (バス信号) です。
</entry>
    <entry key="WritePointCloudTitle">ROS Write Point Cloud</entry>
    <entry key="WritePointCloudDescription">
  点群データから ROS メッセージを書き込みます。 \n \nXYZ 端子は、点の直交座標を [P 行 3 列] の配列 (P は点の数) または [MxNx3] の配列 (M と N はそれぞれ点群の高さと幅) として指定します。RGB 端子と Alpha 端子は、選択した場合、色と透明度をそれぞれ指定します。XYZ が [P 行 3 列] の配列の場合、RGB は [P 行 3 列] の配列でなければならず、Alpha は [P 行 1 列] の配列でなければなりません。XYZ が [MxNx3] の配列の場合、RGB は [MxNx3] の配列でなければならず、Alpha は [M 行 N 列] の配列でなければなりません。カラー フィールドは [入力設定] で指定します。出力は、点群を表す ROS メッセージ (バス信号) です。
</entry>
    <entry key="ShowRGBInputPortPrompt">RGB 入力端子の表示</entry>
    <entry key="SelectRGBInputPrompt">カラー フィールドの選択</entry>
    <entry key="InputConfiguration">入力設定:</entry>
    <entry key="ShowAlphaInputPortPrompt">Alpha 入力端子の表示</entry>
    <entry key="MessageType_Msg">メッセージ</entry>
    <entry key="MessageType_SrvReq">サービス リクエスト</entry>
    <entry key="MessageType_SrvResp">サービス応答</entry>
    <entry key="MessageType_ActFb">アクション フィードバック</entry>
    <entry key="MessageType_ActGoal">アクション ゴール</entry>
    <entry key="MessageType_ActRes">アクションの結果</entry>
    <entry key="SetFrameIdPrompt">フレーム ID の設定:</entry>
    <entry key="SetTimestampPrompt">タイムスタンプの設定</entry>
    <entry key="SetHdrFldNamePrompt">ヘッダー フィールド名:</entry>
    <entry key="HdrFldNameDefault">既定のヘッダー フィールド名を使用</entry>
    <entry key="HdrFldNameSpecifyOwn">独自に指定</entry>
    <entry key="HdrAssignDescription">
        ROS メッセージ ヘッダーのフィールドを更新します。 \n \nブロック入力は ROS メッセージ バスを受け入れ、ブロック出力は同じタイプの ROS メッセージ バスのフィールドを更新して送信します。 \n \n[フレーム ID の設定] チェックボックスを使用して、ROS メッセージ ヘッダーの FrameId フィールドを設定します。[タイムスタンプの設定] チェックボックスを使用して、ROS メッセージのタイム スタンプを更新します。[ヘッダー フィールド名] を [既定のヘッダー フィールド名を使用] に設定して、ROS メッセージのヘッダー フィールド名を [ヘッダー] に設定します。ROS メッセージのヘッダー フィールド名を手動で指定するには、ヘッダー フィールド名を [独自に指定] に設定します。
    </entry>
    <entry key="InvalidHdrFldError">入力 ROS メッセージにフィールド "{0}" がありません。</entry>
    <entry key="ShortFrameIdError">フレーム ID は {0} 文字ですが、バス要素の最大サイズは {1} です。フレーム ID の長さを減らすか、std_msgs/Header で FrameId プロパティの最大長を増やしてください。</entry>
    <entry key="WriteIntensityFieldPrompt">[強度] フィールドへの書き込み</entry>
    <entry key="FrameSourcePrompt">フレーム ソース:</entry>
    <entry key="TargetPrompt">ターゲット:</entry>
    <entry key="SourcePrompt">ソース:</entry>
    <entry key="OutputFormatPrompt">出力形式:</entry>
    <entry key="GetTransformDescription">
        ROS ネットワークから変換を取得します \n \nIsAvail 端子は、指定した変換が使用可能かどうかを示すブール値を出力します。Value 端子は、出力形式の選択に基づいて、メッセージ バスまたは 4 行 4 列の double の行列を出力します。
      </entry>
    <entry key="EntityMsgPrompt">エンティティ メッセージ タイプ:</entry>
    <entry key="ApplyTransformDescription">
        入力エンティティ メッセージにフォワード変換を適用します \n \nTFMsg 端子は geometry_msgs/TransformStamped メッセージを受け入れ、Entity 端子は次のメッセージ タイプのいずれかを受け入れます。\n \u2022 geometry_msgs/QuaternionStamped \n \u2022 geometry_msgs/Vector3Stamped \n \u2022 geometry_msgs/PointStamped \n \u2022 geometry_msgs/PoseStamped \n変換の適用後、TFEntity 端子は、入力エンティティ メッセージと同じタイプのメッセージ バスを出力します。
      </entry>
    <entry key="GetTransformMaskTitle">ROS Get Transform</entry>
    <entry key="ApplyTransformMaskTitle">ROS Apply Transform</entry>
  </message>
</rsccat>
