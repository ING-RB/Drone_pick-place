<?xml version="1.0" encoding="UTF-8"?>
<!--Copyright 2024 The MathWorks, Inc.-->

<rsccat xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.0" locale="ja_JP" product="Stateflow" xsi:noNamespaceSchemaLocation="../../resources/schema/msgcat.xsd">
  <message>
    <entry key="AslLinkState">ステートのアクティビティを出力しています</entry>
    <entry key="AslLinkChart">チャートのアクティビティを出力しています</entry>
    <entry key="AslLocalLinkState">ステートのアクティビティの追跡</entry>
    <entry key="AslLocalLinkChart">チャートのアクティビティの追跡</entry>
    <entry key="AddToWatchWindow">監視ウィンドウに追加</entry>
    <entry key="ChartAnimationMenu">チャート アニメーション</entry>
    <entry key="CommonEdit">編集</entry>
    <entry key="CommonData">データ</entry>
    <entry key="CommonLowerMachine">マシン</entry>
    <entry key="CommonMachine">マシン</entry>
    <entry key="CommonLowerChart">チャート</entry>
    <entry key="CommonChart">チャート</entry>
    <entry key="CommonBox">ボックス</entry>
    <entry key="CommonLowerBox">ボックス</entry>
    <entry key="CommonLowerFunction">関数</entry>
    <entry key="CommonMATLABFunction">MATLAB 関数</entry>
    <entry key="CommonTruthTableFunction">真理値表関数</entry>
    <entry key="CommonGraphicalFunction">グラフィカル関数</entry>
    <entry key="CommonSimulinkFunction">Simulink 関数</entry>
    <entry key="CommonAtomicSubchart">Atomic サブチャート</entry>
    <entry key="CommonAtomicBox">Atomic ボックス</entry>
    <entry key="CommonState">ステート</entry>
    <entry key="CommonSimulinkState">Simulink ステート</entry>
    <entry key="CommonLowerState">ステート</entry>
    <entry key="CommonLowerEvent">イベント</entry>
    <entry key="CommonTransition">遷移</entry>
    <entry key="CommonDescription">説明</entry>
    <entry key="CommonDocumentation">ドキュメンテーション</entry>
    <entry key="CommonDocumentLink">ドキュメント リンク</entry>
    <entry key="CommonEvent">イベント</entry>
    <entry key="CommonMessage">メッセージ</entry>
    <entry key="CommonEntity">エンティティ</entry>
    <entry key="CommonTrigger">トリガー</entry>
    <entry key="CommonFunctionCall">関数呼び出し</entry>
    <entry key="CommonScope">スコープ</entry>
    <entry key="CommonScalarValueExpected">数値が必要です</entry>
    <entry key="CommonPort">端子</entry>
    <entry key="CommonName">名前</entry>
    <entry key="CommonProperties">プロパティ</entry>
    <entry key="NoProperties">表示するプロパティがありません</entry>
    <entry key="CommonInfo">情報</entry>
    <entry key="CommonAdvanced">詳細設定</entry>
    <entry key="CommentTextDialogTitle">{0} のコメント</entry>
    <entry key="PortName">データ名</entry>
    <entry key="EnumName">Enum 名</entry>
    <entry key="ManageBreakpoints">ブレークポイント リスト</entry>
    <entry key="CommonGeneralTab">一般</entry>
    <entry key="CommonFimathTab">固定小数点プロパティ</entry>
    <entry key="DataTunable">調整可能</entry>
    <entry key="DataTriggering">トリガー</entry>
    <entry key="DataVariableSize">可変サイズ</entry>
    <entry key="DataVariableSizeColsOnly">可変の列数</entry>
    <entry key="DataSize">サイズ</entry>
    <entry key="DataUpdateMethod">更新方法</entry>
    <entry key="DataUnit">ユニット</entry>
    <entry key="DataSignalBindingCheck">データを信号オブジェクトに関連付ける</entry>
    <entry key="DataComplexity">実数/複素数</entry>
    <entry key="DataInherited">継承</entry>
    <entry key="DataOn">オン</entry>
    <entry key="DataOff">オフ</entry>
    <entry key="DataFrameLabel">サンプリング モード</entry>
    <entry key="DataType">型</entry>
    <entry key="DataInitialValue">初期値</entry>
    <entry key="DataConstantValue">定数値</entry>
    <entry key="DataInitializeMethod">初期化メソッド</entry>
    <entry key="DataSaveToWorkspace">最終値をベース ワークスペースへ保存</entry>
    <entry key="DataMinimum">最小値</entry>
    <entry key="DataMaximum">最大値</entry>
    <entry key="DataLimitRange">制限範囲</entry>
    <entry key="DataLimitPoints">データ点を制限する</entry>
    <entry key="DataValueAttributesTab">値の属性</entry>
    <entry key="DataDescriptionTab">説明</entry>
    <entry key="DataEditBusObject">バス オブジェクトの編集</entry>
    <entry key="DataEnumType">Enum タイプ</entry>
    <entry key="DataLockOutputScaling">データ型を固定小数点ツールに対しロックする</entry>
    <entry key="DataLocal">ローカル</entry>
    <entry key="DataInput">入力</entry>
    <entry key="DataOutput">出力</entry>
    <entry key="DataImported">インポート</entry>
    <entry key="DataExported">エクスポート</entry>
    <entry key="DataTemporary">一時的</entry>
    <entry key="DataConstant">定数</entry>
    <entry key="DataParameter">パラメーター</entry>
    <entry key="DataProperties">データ プロパティ</entry>
    <entry key="DataDecimationValue">間引き値</entry>
    <entry key="DataDecimate">データの間引き</entry>
    <entry key="DataDataStoreMemory">データ ストア メモリ</entry>
    <entry key="DataWatchInDebuggerCheck">デバッガーで監視</entry>
    <entry key="DataUnits">単位</entry>
    <entry key="DataFirstIndex">最初のインデックス</entry>
    <entry key="DataAutoManageCheck">このデータの寿命とプロパティを自動的に管理します</entry>
    <entry key="DataLimitLastValue"> 最後の値 </entry>
    <entry key="DataModelOutput">解析用の設計モデル出力として扱う</entry>
    <entry key="DeletionConfirmationData">データ ''{0}'' を削除してよろしいですか?\nこのアクションは元に戻せないことに注意してください。</entry>
    <entry key="DeletionConfirmationEvent">イベント ''{0}'' を削除してよろしいですか?\nこのアクションは元に戻せないことに注意してください。</entry>
    <entry key="DeletionConfirmationMessage">メッセージ ''{0}'' を削除してよろしいですか?\nこのアクションは元に戻せないことに注意してください。</entry>
    <entry key="DeletionConfirmationTitle">使用していないオブジェクトの削除</entry>
    <entry key="EMLDataConversionData">データ</entry>
    <entry key="EMLDataConversionDatas">データ</entry>
    <entry key="EMLDataConversionSignal">信号</entry>
    <entry key="EMLDataConversionSignals">信号</entry>
    <entry key="EMLDataConversionFimathLabel">固定小数点の入力 {0} に対する FIMATH:</entry>
    <entry key="EMLDataConversionFimathToolTip">embedded.fimath オブジェクトを評価する式を入力してください。\nこの fimath はすべての固定小数点の入力と fi オブジェクトに対して使用されます。</entry>
    <entry key="EMLDataConversionFimathForFisName">fi と fimath コンストラクターに対する FIMATH</entry>
    <entry key="EMLDataConversionFimathForFisSameAs">固定小数点の入力 {0} に対する FIMATH と同じ</entry>
    <entry key="EMLDataConversionFimathForFisDefault">MATLAB の出荷時の既定の設定</entry>
    <entry key="EMLDataConversionFimathForFisToolTip">既定の fimath コンストラクターで返される fimath を選択してください。\nこの fimath は、fimath が明確に指定されていない fi コンストラクターでも使用されます。</entry>
    <entry key="EMLDataConversionTreatIntsAsFixptName">これらの継承される Simulink 信号タイプを fi オブジェクトとして扱う </entry>
    <entry key="EMLDataConversionEMLBlockFimath">MATLAB 関数 fimath</entry>
    <entry key="EMLDataConversionSFChartFimath">MATLAB チャート fimath</entry>
    <entry key="EMLDataConversionReqTableFimath">要件テーブル fimath</entry>
    <entry key="EMLDataConversionEMLFimathToolTip">MATLAB Function ブロック内の固定小数点の入力と fi オブジェクトに対する fimath を指定してください。</entry>
    <entry key="EMLDataConversionEMLFimathSameAsML">MATLAB と同じ</entry>
    <entry key="EMLDataConversionEMLFimathSpecify">それ以外を指定</entry>
    <entry key="SaturateOnIntegerOverflowName">整数オーバーフローで飽和</entry>
    <entry key="EventLocal">ローカル</entry>
    <entry key="EventExported">エクスポート</entry>
    <entry key="EventImported">インポート</entry>
    <entry key="EventInputFromSimulink">Simulink から入力</entry>
    <entry key="EventOutputToSimulink">Simulink に出力</entry>
    <entry key="EventEither">両方</entry>
    <entry key="EventRising">立ち上がり</entry>
    <entry key="EventFalling">立ち下がり</entry>
    <entry key="EventFunctionCall">関数呼び出し</entry>
    <entry key="EventEitherEdge">両エッジ</entry>
    <entry key="EventDebuggerBreakpoints">デバッガーのブレークポイント</entry>
    <entry key="EventStartBroadcast">ブロードキャストの開始</entry>
    <entry key="EventEndBroadcast">ブロードキャストの終了</entry>
    <entry key="IgnoreDeletionConfirmation">今後は確認せずに削除されます。</entry>
    <entry key="MessagePost">ポスト時</entry>
    <entry key="MessagePop">ポップ時</entry>
    <entry key="MessageConsume">実行時</entry>
    <entry key="MessageInputFromSimulink">Simulink から入力</entry>
    <entry key="MessageOutputToSimulink">Simulink に出力</entry>
    <entry key="MessageDebuggerBreakpoints">デバッガーのブレークポイント</entry>
    <entry key="ChartUpdateMethod">更新方法</entry>
    <entry key="ChartSampleTime">サンプル時間</entry>
    <entry key="ChartStateMachineType">ステート マシン タイプ</entry>
    <entry key="ChartActionLang">アクション言語</entry>
    <entry key="ChartAllowAccessibilityFromOtherCharts">修飾表記を使用せずに外部で関数を呼び出します。</entry>
    <entry key="ChartEnableSuperStepSemantics">スーパーステップのセマンティクスを有効にする</entry>
    <entry key="ChartNonTerminalMaxCounts">各スーパー ステップにおける最大反復回数</entry>
    <entry key="ChartNonTerminalUnstableBehavior">多すぎる反復後の動作</entry>
    <entry key="ChartEnableZeroCrossings">ゼロクロッシング検出を有効にする</entry>
    <entry key="ChartEnableBitOps">C 言語のビット演算が可能</entry>
    <entry key="ChartEnableBitOpsToolTip">&amp;、|、^ および ~ 演算子をビット演算として解釈します。</entry>
    <entry key="ChartApplyToAllCharts">マシン内のすべてのチャートにすぐに適用</entry>
    <entry key="ChartExportChartFunctions">チャート レベルの関数をエクスポート (グローバル)</entry>
    <entry key="ChartExportChartFunctionsLocal">チャート レベルの関数をエクスポート</entry>
    <entry key="ChartExportFunctionsToolTip">エクスポートされた関数の Simulink による呼び出しを許可します。</entry>
    <entry key="ChartExportFunctionsDisabledToolTip">(このチャートには最上位の関数がないため、現在無効になっています)</entry>
    <entry key="ChartStrongDataTypingWithSimulink">Simulink I/O で厳密な型指定</entry>
    <entry key="ChartExecuteAtInitialization">初期化時に指定されたチャートを実行 (入力)</entry>
    <entry key="ChartInitializeOutput">チャート実行ごとに出力を初期化</entry>
    <entry key="ChartDebuggerBreakpoint">デバッガーのブレークポイント</entry>
    <entry key="ChartOnEntry">チャート Entry 時</entry>
    <entry key="ChartMealy">Mealy チャート</entry>
    <entry key="ChartMoore">Moore チャート</entry>
    <entry key="ChartSimplified">簡易チャート</entry>
    <entry key="ChartEMChart">MATLAB 関数</entry>
    <entry key="ChartReactiveTestingTable">テスト シーケンス</entry>
    <entry key="ChartTruthTable">真理値表</entry>
    <entry key="ChartRequirementsTable">要件テーブル</entry>
    <entry key="ChartPlantModel">プラント モデル チャート</entry>
    <entry key="ChartStateTransitionTable">状態遷移表</entry>
    <entry key="ChartDES">離散イベント チャート</entry>
    <entry key="ChartUnknown">不明</entry>
    <entry key="AllowDirectFeedthrough">直達を許可</entry>
    <entry key="VectorOutputs1D">出力列ベクトルを 1 次元データとして解釈</entry>
    <entry key="SupportVariableSizingName">可変サイズの配列をサポート</entry>
    <entry key="EnableOutputsInPrecondition">前提条件で出力を有効にする</entry>
    <entry key="ChartStatesWhenEnabling">イネーブル時の状態</entry>
    <entry key="NonTunableDynamicSizeParameterNotSupported">調整可能でないパラメーターを可変サイズにすることはできません。 </entry>
    <entry key="AboutStateflow">Stateflow について</entry>
    <entry key="RemoveFromWatchWindow">監視ウィンドウから削除</entry>
    <entry key="TextAlignmentLeft">左</entry>
    <entry key="TextAlignmentCenter">中央</entry>
    <entry key="TextAlignmentRight">右</entry>
    <entry key="StateNoteboxCallbackName">ClickFcn は、この注釈上でシングルクリックするときに呼び出されます。たとえば、注釈テキストに指定された Web サイトを参照するには次のように入力します。\nan = getCallbackAnnotation; web(an.Text);</entry>
    <entry key="StateNoteboxImageCallbackName">ClickFcn は、ユーザーがこのイメージをシングルクリックしたときに呼び出されます。たとえば、クリックした後に Web サイトを参照するには次のようにします\nweb(&lt;url&gt;);</entry>
    <entry key="StateNoteboxClickFcnName">表示テキストをクリック コールバックとして使用</entry>
    <entry key="StateNoteboxDropShadowName">影を付ける</entry>
    <entry key="StateNoteboxFixedHeightName">固定の高さ</entry>
    <entry key="StateNoteboxFixedWidthName">固定幅</entry>
    <entry key="StateNoteboxFixedSizeName">固定サイズ</entry>
    <entry key="StateNoteboxForegroundName">前景色:</entry>
    <entry key="StateNoteboxBackgroundName">背景色:</entry>
    <entry key="StateNoteboxAlignmentName">配置:</entry>
    <entry key="StateNoteboxLeftMarginName">左余白:</entry>
    <entry key="StateNoteboxTopMarginName">上余白:</entry>
    <entry key="StateNoteboxRightMarginName">右余白:</entry>
    <entry key="StateNoteboxBottomMarginName">下余白:</entry>
    <entry key="StateNoteboxDefaultFontName">既定のフォント:</entry>
    <entry key="StateNoteboxTexModeName">TeX コマンドを有効にする</entry>
    <entry key="StateNoteboxFontName">フォント...</entry>
    <entry key="StateNoteboxTextGroupName">テキスト</entry>
    <entry key="StateNoteboxTextGroupToolTip">テキスト</entry>
    <entry key="StateNoteboxActiveGroupToolTip">コードを有効にする</entry>
    <entry key="StateNoteboxAppearanceGroupName">外観</entry>
    <entry key="StateNoteboxAppearanceGroupToolTip">外観</entry>
    <entry key="StateNoteboxFormatGroupName">形式</entry>
    <entry key="StateNoteboxFormatGroupToolTip">形式</entry>
    <entry key="StateNoteboxInternalMarginGroupName">内部余白</entry>
    <entry key="StateNoteboxInternalMarginGroupToolTip">内部余白</entry>
    <entry key="ColorAutomatic">自動</entry>
    <entry key="ColorBlack">黒</entry>
    <entry key="ColorWhite">白</entry>
    <entry key="ColorRed">赤</entry>
    <entry key="ColorGreen">緑</entry>
    <entry key="ColorBlue">青</entry>
    <entry key="ColorCyan">シアン</entry>
    <entry key="ColorMagenta">マゼンタ</entry>
    <entry key="ColorYellow">黄</entry>
    <entry key="ColorGray">灰色</entry>
    <entry key="ColorLightBlue">薄い青</entry>
    <entry key="ColorOrange">オレンジ</entry>
    <entry key="ColorDarkGreen">濃い緑</entry>
    <entry key="ColorCustom">カスタム</entry>
    <entry key="Logging">ログ</entry>
    <entry key="LoggingCustomName">カスタム名</entry>
    <entry key="LoggingAndStreaming">ログ/ストリーミング</entry>
    <entry key="LoggingNameMode">名前モード</entry>
    <entry key="LoggingSignalData">信号データのログ</entry>
    <entry key="StreamDataToSDI">信号データのストリーム</entry>
    <entry key="LogStateActivity">ステート アクティビティのログ作成</entry>
    <entry key="LogSelfActivity">自己アクティビティのログ</entry>
    <entry key="LoggingName">ログ名</entry>
    <entry key="TPStateActivity">ステート アクティビティのテスト ポイント</entry>
    <entry key="TestPoint">テスト ポイント</entry>
    <entry key="Name">名前</entry>
    <entry key="Continuous">連続</entry>
    <entry key="Discrete">離散</entry>
    <entry key="Inherited">継承</entry>
    <entry key="Inherit">継承</entry>
    <entry key="Held">保持</entry>
    <entry key="Reset">リセット</entry>
    <entry key="Proceed">続行</entry>
    <entry key="ThrowError">エラー発生</entry>
    <entry key="BadParentType">親のタイプが不適切です。</entry>
    <entry key="ConnectiveJunction">コネクティブ ジャンクション</entry>
    <entry key="Port">端子</entry>
    <entry key="ExitJunction">出口ジャンクション</entry>
    <entry key="ExitPort">出口端子</entry>
    <entry key="EntryPort">入口端子</entry>
    <entry key="EntryJunction">入口ジャンクション</entry>
    <entry key="Home">ホーム</entry>
    <entry key="HistoryJunction">ヒストリ ジャンクション</entry>
    <entry key="Parent">親 </entry>
    <entry key="CreationDate">作成日: </entry>
    <entry key="Creator">作成者: </entry>
    <entry key="Description">説明</entry>
    <entry key="Modified">変更: </entry>
    <entry key="SimulinkModel">Simulink モデル: </entry>
    <entry key="UseClikeBitOperationsInNewCharts">新しい C チャートで C 言語に類似したビット演算を使用</entry>
    <entry key="Version">バージョン: </entry>
    <entry key="Breakpoints">ブレークポイント: </entry>
    <entry key="ExecutionOrder">実行順序</entry>
    <entry key="Label">ラベル: </entry>
    <entry key="Name1">名前: </entry>
    <entry key="BuildActions">ビルド アクション</entry>
    <entry key="CodeGenerationDirectory">コード生成ディレクトリ</entry>
    <entry key="CodeGenerationOptions">コード生成オプション</entry>
    <entry key="CustomCode">カスタム コード(&amp;C)</entry>
    <entry key="CustomInitializationCodeCalledFromMdlInitialize">カスタム初期化コード (mdlInitialize から呼び出し)</entry>
    <entry key="CustomLibraries">カスタム ライブラリ</entry>
    <entry key="CustomSourceFiles">カスタム ソース ファイル</entry>
    <entry key="CustomTerminationCodeCalledFromMdlTerminate">カスタム終了コード (mdlTerminate から呼び出し)</entry>
    <entry key="Description1">説明(&amp;D)</entry>
    <entry key="Execute">実行</entry>
    <entry key="General">一般(&amp;G)</entry>
    <entry key="GeneratedCodeDirectory">生成されたコード ディレクトリ</entry>
    <entry key="IncludeCode">コードを含む</entry>
    <entry key="IncludePaths">パスを含む</entry>
    <entry key="InitializationCode">初期化コード</entry>
    <entry key="Language">言語: </entry>
    <entry key="Libraries">ライブラリ</entry>
    <entry key="ReservedNames">予約名</entry>
    <entry key="ReservedNames1">予約名</entry>
    <entry key="SourceFiles">ソース ファイル</entry>
    <entry key="SpaceseparatedListOfCustomIncludeDirectories">カスタム インクルード ディレクトリのスペースで区切られたリスト</entry>
    <entry key="TerminationCode">終了コード</entry>
    <entry key="UseLocalCustomCodeSettingsDoNotInheritFromMainModel">ローカルなカスタム コード設定を使用 (メイン モデルから継承しません)</entry>
    <entry key="UseTheseCustomCodeSettingsForAllLibraries">すべてのライブラリに対してこれらのカスタム コード設定を使用</entry>
    <entry key="BadJunctionType">ジャンクション タイプが不適切です。</entry>
    <entry key="BadObjectType">オブジェクト タイプが不適切です。</entry>
    <entry key="DebuggerBreakpoints">デバッガーのブレークポイント: </entry>
    <entry key="EventBreakpointsTitle">ブレークポイント</entry>
    <entry key="Destination">遷移先 </entry>
    <entry key="Source">遷移元</entry>
    <entry key="WhenTested">テストされる場合</entry>
    <entry key="WhenValid">有効な場合</entry>
    <entry key="FunctionInlineOption">関数インラインオプション </entry>
    <entry key="SymbolWizardHeader1">未解決のシンボルが見つかった場所</entry>
    <entry key="SymbolWizardHeader2">選択されたデータ/イベント/メッセージはすべてチャート内に作成されます。</entry>
    <entry key="SymbolWizardFooter">作成したデータ/イベント/メッセージをモデル エクスプローラーで表示</entry>
    <entry key="CustomCodeIncludedAtTheTopOfGeneratedCodeExample">生成されたコードの先頭にインクルードされるカスタム コード (たとえば、#include 命令)</entry>
    <entry key="SimulationTarget">シミュレーション ターゲット</entry>
    <entry key="RTWTarget">RTW ターゲット</entry>
    <entry key="HDLTarget">HDL ターゲット</entry>
    <entry key="SFCustomTarget">Stateflow のカスタム ターゲット</entry>
    <entry key="ControlSimCodeGeneration">このモデル内の MATLAB Function ブロック、Stateflow チャート、Truth Table ブロック、Attribute Function ブロックに対してどのようにシミュレーション コードを生成するかを制御します。</entry>
    <entry key="ControlHDLCodeGeneration">このモデル内の MATLAB 関数、Stateflow チャート、真理値表からどのように HDL コードを生成するかを制御します。</entry>
    <entry key="Maximum">最大値:</entry>
    <entry key="Minimum">最小値:</entry>
    <entry key="InitialValue">初期値</entry>
    <entry key="BusObject">バス オブジェクト:</entry>
    <entry key="Fixedpoint">固定小数点</entry>
    <entry key="FixedpointInteger">固定小数点および整数</entry>
    <entry key="OutputStateActivity">ステート アクティビティの出力</entry>
    <entry key="OutputStateActivityDisabledWithInitOutputs">親チャートで [チャート実行ごとに出力を初期化] が true に設定されているため、このオプションは無効になっています。</entry>
    <entry key="StateDuring">ステート During</entry>
    <entry key="StateEntry">ステート Entry</entry>
    <entry key="StateExit">ステート Exit</entry>
    <entry key="MonitoringStateActivity">ステート アクティビティの監視</entry>
    <entry key="MonitoringChartActivity">チャート アクティビティの監視</entry>
    <entry key="ActivityMonitoringMode">監視モード</entry>
    <entry key="ChildActivity">子アクティビティ</entry>
    <entry key="SelfActivity">自己アクティビティ</entry>
    <entry key="LeafStateActivity">リーフ ステート アクティビティ</entry>
    <entry key="ActivityMonitoringAs">監視タイプ</entry>
    <entry key="AcitivityMonitoring">監視</entry>
    <entry key="ActivityMonitorAsInteger">内部で決定された整数型</entry>
    <entry key="ActivityMonitorAsBoolean">論理変数</entry>
    <entry key="ActivityOutputSettings">出力設定</entry>
    <entry key="UseStateName">ステート名を使用</entry>
    <entry key="UseCustomName">カスタム名を使用</entry>
    <entry key="ActivityCGSettings">コード生成設定</entry>
    <entry key="ActivityCGUseERTName">内部命名規則を使用</entry>
    <entry key="ActivityBindingToSlSigCheck">アクティビティ変数は Simulink の信号オブジェクトに解決されなければなりません</entry>
    <entry key="CreateTemplateEnumDefn">テンプレートから列挙型定義を作成する</entry>
    <entry key="OpenTemplateEnumDefn">列挙定義を開く</entry>
    <entry key="NoMonitoringMessageForChart">チャート アクティビティを監視するには、Stateflow チャートが排他的 (OR) 構造および少なくとも 1 つのサブステートをもたなければなりません。</entry>
    <entry key="BreakpointDialogTitle">{0} ブレークポイント</entry>
    <entry key="TransitionBreakpointDialogTitle">遷移ブレークポイント</entry>
    <entry key="ReqTableBreakpointDialogTitle">要件テーブルのブレークポイント</entry>
    <entry key="ReenableMachineBreakpointsProp">&lt;a href="matlab:Stateflow.Debug.BreakpointDialog.enableMachineBreakpoints({0})"&gt;モデル全体のデバッグが無効になっています。ここをクリックして {1} のブレークポイントを再度有効にしてください。&lt;/a&gt;</entry>
    <entry key="OpenSimTargetToEnableDebugging">&lt;a href="matlab:Stateflow.Debug.BreakpointDialog.enableModelDebugging"&gt;モデル全体のデバッグが無効になっています。ここをクリックして、デバッグを再度有効にしてください。&lt;/a&gt;</entry>
    <entry key="JitSimulationDebugging">デバッガーは、モデルの実行前にブレークポイントを追加する場合にのみ有効です。シミュレーション中のブレークポイント追加を有効にするには、[シミュレーション中のブレークポイント設定を許可] を選択します。詳細については、&lt;a href="matlab:helpview(''simulink/simulink_gui'',''Tag_ConfigSet_Sim_SFSimEnableDebug'')"&gt;ドキュメンテーション&lt;/a&gt;を参照してください。</entry>
    <entry key="DataUsedBy">データが {0} によって使用されています:</entry>
    <entry key="MessageUsedBy">{0} によって使用されるメッセージ:</entry>
    <entry key="TemporalsUsedBy">{0} によって使用される時相:</entry>
    <entry key="DataInputOutputDefinedBy"> {0} によって定義される入力および出力データ:</entry>
    <entry key="HoverDataPrefix">&lt;b&gt;データ情報&lt;/b&gt;</entry>
    <entry key="HoverStatePrefix">&lt;b&gt;ステート情報&lt;/b&gt;</entry>
    <entry key="HoverStateNotActive">ステート {0} が非アクティブ</entry>
    <entry key="HoverStateActiveTime">ステート {0} が {1} 秒間アクティブ</entry>
    <entry key="HoverStateActiveNotice">ステートがアクティブな時間</entry>
    <entry key="HoverSourceStateNotActive">ソース ステートが非アクティブ</entry>
    <entry key="HoverSourceStateActiveTime">ソース ステートが {0} 秒間アクティブ</entry>
    <entry key="HoverPreviousValue">{0} の前の値 : {1}</entry>
    <entry key="DataUsedByTransitionSnippet">データが遷移 "{0}..." によって使用されています:</entry>
    <entry key="DataUsedByTransition">データが遷移 "{0}" によって使用されています:</entry>
    <entry key="TemporalsUsedByTransitionSnippet">遷移 "{0}..." によって使用される時相:</entry>
    <entry key="TemporalsUsedByTransition">遷移 "{0}" によって使用される時相:</entry>
    <entry key="MessageUsedByTransitionSnippet">遷移 "{0}..." によって使用されるメッセージ:</entry>
    <entry key="MessageUsedByTransition">遷移 "{0}..." によって使用されるメッセージ:</entry>
    <entry key="NoDataForCommentedObj">オブジェクトがコメント化されています。表示するデータがありません。</entry>
    <entry key="DataNone">なし</entry>
    <entry key="MessageNone">なし</entry>
    <entry key="StateCreateDataOutport">監視用データの作成</entry>
    <entry key="StateCreateOutport">監視する出力の作成</entry>
    <entry key="StateCreateOutportForChildActivity">子アクティビティ監視用データの作成</entry>
    <entry key="StateCreateOutportForSelfActivity">自己アクティビティ監視用データの作成</entry>
    <entry key="Auto">自動</entry>
    <entry key="Custom">カスタム</entry>
    <entry key="UseMATLABEnumDefn">手作業で列挙型を定義</entry>
    <entry key="BadFileExtension">拡張子 .mdl または .slx がないモデルを開くことはできません: {0}{1}。</entry>
    <entry key="TypeInherited">継承: Simulink と同じ</entry>
    <entry key="DataExpression">式</entry>
    <entry key="DataNotNeeded">不要</entry>
    <entry key="EventName">イベント名</entry>
    <entry key="EventScope">イベント スコープ</entry>
    <entry key="DataName">データ名</entry>
    <entry key="DataScope">データ スコープ</entry>
    <entry key="MessageName">メッセージ名</entry>
    <entry key="MessageScope">メッセージ スコープ</entry>
    <entry key="MessageProperties">メッセージ キュー プロパティ</entry>
    <entry key="MessageDataProperties">メッセージ データ プロパティ</entry>
    <entry key="SymbolName">名前</entry>
    <entry key="SymbolClass">クラス</entry>
    <entry key="SymbolScope">スコープ</entry>
    <entry key="MessagePriority">優先度</entry>
    <entry key="MessageQueueCapacity"> キューの容量</entry>
    <entry key="MessageQueueType"> キュー タイプ</entry>
    <entry key="MessageQueuePriority"> 優先順位</entry>
    <entry key="MessageQueueOverflowDiagnostic"> キュー オーバーフローの診断</entry>
    <entry key="MessageQueueIsInternalQueue">内部キューの使用</entry>
    <entry key="EnableDebuggingInChartToBrowseData">データを閲覧するにはこのチャートのデバッグを有効にしてください。</entry>
    <entry key="ActionLangConversionError">アクション言語変換エラー</entry>
    <entry key="MachineLockedDuringConversion">ライブラリ マシンがロックされています。アクション言語を変換する前にロックを解除してください。</entry>
    <entry key="ConversionWizardTitle">{0} を使用するようにチャートを変換</entry>
    <entry key="BackupModel">モデルを {0} としてバックアップする (推奨)</entry>
    <entry key="WarnMsg">チャート {0} の構文の修正時に {1} 件の警告がスローされました</entry>
    <entry key="ConvertConfirmationMsg">チャートによって、構文修正中に警告がスローされました。\nサポートされている構成要素の MATLAB への変換を続行するには、[次へ] をクリックしてください。</entry>
    <entry key="WithWarnings">変換完了 (警告あり)</entry>
    <entry key="WithoutWarnings">変換完了 (警告なし)</entry>
    <entry key="SuccessfulConversion">正常に変換 (警告なし)</entry>
    <entry key="SelectAll">(すべて選択)</entry>
    <entry key="ActionLangConversionHyperlink">アクション言語を {0} に変換</entry>
    <entry key="CastNotSupported">関数 CAST は MATLAB アクション言語でサポートされません</entry>
    <entry key="ColonAssignNotSupported">コロン代入演算子 (:=) は MATLAB アクション言語でサポートされません</entry>
    <entry key="TypeNotSupported">関数 TYPE は MATLAB アクション言語でサポートされません</entry>
    <entry key="AddressOfNotSupported">address-of 演算子は MATLAB アクション言語でサポートされません</entry>
    <entry key="DereferenceNotSupported">デリファレンス演算子 (*) は MATLAB アクション言語でサポートされません</entry>
    <entry key="PointerNotSupported">ポインター演算子 (-&gt;) は MATLAB アクション言語でサポートされません</entry>
    <entry key="CustomDataNotSupported">データ {0} の ID が 0 です。サポートされないカスタム データの可能性があります</entry>
    <entry key="IllegalAccessToBaseWorkspaceVariable">{1} が関数名でないため、ml.{0} を変換できません。MATLAB アクション言語では、ベース ワークスペース変数へのアクセスはサポートされません。</entry>
    <entry key="CodeGenSupportAmbiguous">ファイル {0} でコード生成がサポートされるかどうかが不明です。この関数を外部関数として宣言します</entry>
    <entry key="NoCodeGenSupport">ツールボックス関数 {0} ではコード生成はサポートされません</entry>
    <entry key="InternalFunctionInTransCondition">コード生成を可能にするには、関数 {0} を外部で宣言する必要があります。しかし、この関数の遷移条件では、coder.extrinsic ステートメントを挿入すると解析エラーが発生します。エラーを回避するには、MATLAB Function ブロックで先に coder.extrinsic 宣言を実装して、この関数を遷移条件から呼び出してください。
  </entry>
    <entry key="HexNotSupported">16 進数表記は MATLAB アクション言語でサポートされません</entry>
    <entry key="FNotSupported">単精度浮動小数点数シンボル (F) は MATLAB アクション言語でサポートされません</entry>
    <entry key="CNotSupported">状況依存の定数は MATLAB アクション言語でサポートされません</entry>
    <entry key="SaveModel">モデルが保存されていません。モデルを保存してから再試行してください。</entry>
    <entry key="ParseErrorInChart">チャート {0} に解析エラーがあります。診断するには、Stateflow チャートを開き、&lt;b&gt;[モデル化]&lt;/b&gt; タブで &lt;b&gt;[モデルの更新]&lt;/b&gt; &amp;gt &lt;b&gt;[チャートの更新]&lt;/b&gt; を選択します。</entry>
    <entry key="NoChartsConverted">MATLAB の構文を使用するようにチャートが変換されませんでした。</entry>
    <entry key="ChartAllowExportedFunctionsToBeCalledBySimulink">エクスポートされた関数の Simulink による呼び出しを許可</entry>
    <entry key="RenameAllButtonString">すべての名前の変更...</entry>
    <entry key="RenameDialogTitle">すべての参照の名前を変更...</entry>
    <entry key="RenameDialogDescription">このオブジェクトの名前を変更し、ステート ラベルと遷移ラベルにあるこのオブジェクトへのすべての参照が新しい名前を使うよう更新</entry>
    <entry key="RenameDialogOldName">古い名前</entry>
    <entry key="RenameDialogNewName">新しい名前</entry>
    <entry key="RenameDialogInvalidObjectNameError">オブジェクトの新しい名前は空にできません。</entry>
    <entry key="RenameDialogMachineParentedDataError">[すべての名前の変更] はマシン ペアレント データではサポートされていません。</entry>
    <entry key="StateOutput">ステートの出力</entry>
    <entry key="NextInQMessagePayload">キューの次の項目</entry>
    <entry key="NumMsgsWaitingInQ">キュー内のメッセージ</entry>
    <entry key="EmptyQueue">空のキュー</entry>
    <entry key="DisabledDueToMessage">値がないメッセージのため、時間情報を利用できません。</entry>
    <entry key="ChartAllowGlobalAccessToExportedFunctions">エクスポートされた関数をグローバルに可視として扱う</entry>
    <entry key="ChartTreatUndefinedSymbolsAsExtrinsic">未定義のシンボルを外部シンボルとして扱う</entry>
    <entry key="UnderspecDiagnosticLabel">過少指定</entry>
    <entry key="OverspecDiagnosticLabel">過剰指定</entry>
    <entry key="ActionLanguageLabel">アクション言語</entry>
    <entry key="SpecTypeError">エラー</entry>
    <entry key="SpecTypeWarning">警告</entry>
    <entry key="SpecTypeNone">なし</entry>
    <entry key="TransitionVariantCheckbox">バリアント遷移として扱う</entry>
    <entry key="TransitionVariantTooltip">この遷移をバリアント遷移として扱う</entry>
    <entry key="UnlockLibraryDialogText">チャート {0} がロックされたライブラリ内にあるため、データを作成できません。ライブラリのロックを解除しますか?</entry>
    <entry key="UnlockLibraryDialogTitle">ライブラリのロックを解除</entry>
    <entry key="UnlockLibraryDialogYes">はい</entry>
    <entry key="UnlockLibraryDialogNo">いいえ</entry>
    <entry key="EnableStateAccess">State Reader および State Writer ブロックからのアクセスを有効化</entry>
    <entry key="PrefixForStateAccess">タイプ名の接頭辞</entry>
    <entry key="RefreshTypesForStateAccess">タイプの更新</entry>
    <entry key="DataIncludedInStateAccess">State Reader および State Writer ブロックからのアクセス</entry>
    <entry key="AutogenBusForStateAccess">State Reader ブロックと State Writer ブロックからのアクセスが有効になっているため、Stateflow チャート ''{0}'' で自動的にバス定義が生成されました。更新するには、チャート プロパティを開いて [タイプの更新] をクリックします。</entry>
    <entry key="AutogenEnumForStateAccess">State Reader ブロックと State Writer ブロックからのアクセスが有効になっているため、Stateflow チャート ''{0}'' で自動的に列挙データ型定義が生成されました。更新するには、チャート プロパティを開いて [タイプの更新] をクリックします。</entry>
    <entry key="RequirementsTable">要件テーブル</entry>
    <entry key="ScheduleEditorChart">スケジュール エディターのチャート</entry>
    <entry key="ChartTypeMealy">Mealy</entry>
    <entry key="ChartTypeMoore">Moore</entry>
    <entry key="ChartTypeSimplified">簡易</entry>
    <entry key="ChartTypeClassic">クラシック</entry>
    <entry key="ChartNonTerminalMaxCountsPI">スーパー ステップでの最大反復回数</entry>
    <entry key="ChartNonTerminalUnstableBehaviorPI">多すぎる反復の後</entry>
    <entry key="ChartTreatDimensionOfLengthOneAsFixedSize">長さ 1 の次元を固定サイズとして扱う</entry>
    <entry key="TemporaryDataNotSupported">MATLAB をアクション言語として使用するチャートでは、一時データはサポートされません。未定義の変数を使用して一時データを削除するように、ロジックを変更してください。&lt;a href="matlab:sfhelp('mal_temporary_data')"&gt;関連ドキュメンテーション&lt;/a&gt;。</entry>
    <entry key="DontShowWarningAgain">次回からこの警告を表示しない</entry>
    <entry key="InputEventMapping">入力イベントのマッピング</entry>
    <entry key="DataStoreMemoryDataMapping">データ ストア メモリのマッピング</entry>
    <entry key="InputDataMapping">入力のマッピング</entry>
    <entry key="OutputDataMapping">出力のマッピング</entry>
    <entry key="ParameterDataMapping">パラメーターのマッピング</entry>
    <entry key="StateNoteboxActiveGroupName">ClickFcn</entry>
    <entry key="CommonClickFcn">ClickFcn</entry>
    <entry key="StateNoteboxClickFcnTabName">ClickFcn</entry>
  </message>
</rsccat>
