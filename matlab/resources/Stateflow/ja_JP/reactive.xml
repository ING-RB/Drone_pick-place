<?xml version="1.0" encoding="UTF-8"?>
<!--Copyright 2024 The MathWorks, Inc.-->

<rsccat xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.0" locale="ja_JP" product="Stateflow" xsi:noNamespaceSchemaLocation="../../resources/schema/msgcat.xsd">
  <message>
    <entry key="Editor">Test Sequence エディター</entry>
    <entry key="Step">ステップ</entry>
    <entry key="Block">ブロック</entry>
    <entry key="malOutputNotDefinedinRTT"> ブロック {2} で出力 {0} {1} が書き込まれていません。 </entry>
    <entry key="ReactiveTestingBlockInvalidSymbol">記号 {0} は Test Sequence の予約語です。{2} における {1} のすべての出現箇所で名前を変更してください。</entry>
    <entry key="UnconditionalTransShadowInRTTBlock">{0} {1} に、後続の遷移より優先順位の高い無条件の {2} 遷移 {3} があります:\n{4}。</entry>
    <entry key="UnusedDataInReactiveTestingTableChart">{0} は定義されていますが、Test Sequence ブロックで一度も使用されていません。 &lt;a href= "matlab: internal.stateflow.dialogs.UnusedObjectDeleter.createDeleter(''{1}'')"&gt; このオブジェクトを削除してください。&lt;/a&gt;</entry>
    <entry key="HdlCodegenNotSupportedForRTT">HDL コード生成は Test Sequence ブロック {0} でサポートされていません。</entry>
    <entry key="WhenStateNoChildrenRTT"> ステップ {0} では when 構造が有効になっているため、その下に 2 つ以上のサブステップを必要とします。 </entry>
    <entry key="WhenChildMissingWhenConditionRTT"> ステップ {0} は when 構造ステップ {1} の最後の子ではないため、when 条件が必要です。 </entry>
    <entry key="WhenChildInvalidWhenConditionRTT"> ステップ {0} は when 構造ステップ {1} の最後の子であるため、when 条件は使用できません。 </entry>
    <entry key="NonWhenChildInvalidWhenConditionRTT"> ステップ {0} は 親 {1} が when 構造ステップではないため、when 条件は使用できません。 </entry>
    <entry key="UnreachableTestStep">ステップ {0} は到達不能です。</entry>
    <entry key="InvalidTransitionDestination">遷移 {0} は無効な次のステップ ''{1}'' をポイントしています。</entry>
    <entry key="UndefinedStep">ステップ {0} は Test Sequence ブロックで定義されていません。</entry>
    <entry key="ImportTestSequenceCloseUI">Test Sequence ブロック {0} の UI を閉じて sltest.testsequence API を使用します。</entry>
    <entry key="InvalidTestSequence"> {0} は有効な Test Sequence ブロックではありません。</entry>
    <entry key="SymbolRedefinition">記号 {0} は既に Test Sequence ブロックで定義されています。</entry>
    <entry key="StepRedefinition">ステップ {0} は既に Test Sequence ブロックで定義されています。</entry>
    <entry key="StepDepthDiffer">ステップ {0} と {1} は深さが同じではありません。</entry>
    <entry key="InvalidStepName">ステップ名が無効です: ''{0}''。</entry>
    <entry key="InvalidSymbolName">シンボル名が無効です: ''{0}''。</entry>
    <entry key="InvalidActiveStepDataScope">アクティブなステップ データのスコープが無効です: ''{0}''。[ローカル] と [出力] のみを使用できます。</entry>
    <entry key="InvalidMessageScope">メッセージの無効なスコープ: ''{0}''。[入力] および [出力] のみが許可されています。</entry>
    <entry key="InvalidFunctionCallScope">関数呼び出しの無効なスコープ: ''{0}''。[出力] のみが許可されています。</entry>
    <entry key="InvalidTriggerScope">トリガーのスコープが無効です: ''{0}''。[出力] のみが許可されています。</entry>
    <entry key="TestSequenceLocked">Test Sequence ブロック {0} がロックされています。</entry>
    <entry key="ModelIsBusy">モデルがビジー状態の間は sltest.testsequence API を使用できません。</entry>
    <entry key="TransitionNotAllowOnWhenStepChild">when ステップの子の間では遷移は許可されていません。</entry>
    <entry key="DeleteUniqueStep">ステップ {0} は Test Sequence ブロックに固有のステップであり、削除できません。</entry>
    <entry key="InvalidStepIndex">インデックス {0} は、ステップ {1} の有効なインデックスではありません。</entry>
    <entry key="InvalidTransitionIndex">遷移 {0} はステップ {1} の有効な遷移ではありません。</entry>
    <entry key="InvalidTransitionProperty">遷移に {0} という名前のプロパティはありません。</entry>
    <entry key="InvalidStepProperty">ステップ {0} に {1} という名前のプロパティはありません。</entry>
    <entry key="NonWhenChildInvalidRead">ステップ {0} の親が when 構造ステップではないため、このステップに WhenCondition プロパティはありません。</entry>
    <entry key="UndefinedSymbolName">''{0}'' という名前のシンボルは Test Sequence ブロックで定義されていません。</entry>
    <entry key="InvalidSymbolProperty">シンボル ''{0}'' にプロパティ ''{1}'' がありません。</entry>
    <entry key="InvalidTSBProperty">Test Sequence ブロックにプロパティ ''{0}'' がありません。</entry>
    <entry key="ReadOnlySymbolProperty">''{1}'' に読み取り専用プロパティ ''{0}'' を設定できません。</entry>
    <entry key="PropertyError">''{2}'' のプロパティ ''{1}'' に値 ''{0}'' を設定できません。</entry>
    <entry key="MissingRegExpName">RegExp には Name パラメーターが必要です。</entry>
    <entry key="MissingStepName">ステップの [名前] が必要です。</entry>
    <entry key="NonUniqueStructParameter">{0} が構造体オブジェクトとして与えられる際の引数が多すぎます。</entry>
    <entry key="TSBNameConflict">''{0}'' という名前の Test Sequence ブロックは、同名のブロックが既に存在するため追加できません。</entry>
    <entry key="DeprecatedParameter"> パラメーター ''{0}'' は推奨されていません。代わりに ''{1}'' を使用してください。</entry>
    <entry key="DeprecatedParameterIsIgnored"> パラメーター ''{0}'' は無視され、代わりに ''{1}'' が使用されます。</entry>
    <entry key="ActiveStepOutputNameShadowing">同じ名前の出力が既に存在するため、''{0}'' という名前のアクティブなステップの出力データを作成できません。''{1}'' という名前の出力データを作成します。</entry>
    <entry key="InvalidIndentStepFirstChild">ステップ {0} はステップ {1} の最初の子であるため、インデントできません。</entry>
    <entry key="InvalidOutdentStepNoParent">ステップ {0} には親がないため、インデントを戻すことができません。</entry>
    <entry key="InvalidOutdentStepNotLastChild">ステップ {0} はステップ {1} の最後の子ではないため、インデントを戻すことができません。</entry>
    <entry key="TestSequenceScenarioInPrevVersion">テスト シーケンス ''{0}'' がシナリオを使用することは、R2020b で導入されました。以前のバージョンにエクスポートすると、このチャートの機能が失われます。</entry>
    <entry key="InvalidScenarioName">シナリオ名 ''{0}'' は無効です。</entry>
    <entry key="RepeatedCreateScenario">テスト シーケンス ''{0}'' ではシナリオは 1 回しか有効にできません。</entry>
    <entry key="AddScenarioBeforeEnable">テスト シーケンス ''{0}'' でシナリオを有効にする前にシナリオを追加することはできません。シナリオを有効にするには ''sltest.testsequence.useScenario'' を使用します。</entry>
    <entry key="DeleteScenarioBeforeEnable">テスト シーケンス ''{0}'' でシナリオを有効にする前にシナリオを削除することはできません。シナリオを有効にするには ''sltest.testsequence.useScenario'' を使用します。</entry>
    <entry key="RetrieveScenarioBeforeEnable">テスト シーケンス ''{0}'' でシナリオを有効にする前にシナリオ名を取得することはできません。シナリオを有効にするには ''sltest.testsequence.useScenario'' を使用します。</entry>
    <entry key="EditScenarioBeforeEnable">テスト シーケンス ''{0}'' でシナリオを有効にする前にシナリオを編集することはできません。シナリオを有効にするには ''sltest.testsequence.useScenario'' を使用します。</entry>
    <entry key="ControlScenarioBeforeEnable">テスト シーケンス ''{0}'' でシナリオを有効にする前に、シナリオ制御ソースを設定することはできません。シナリオを有効にするには ''sltest.testsequence.useScenario'' を使用します。</entry>
    <entry key="GetScenarioControlBeforeEnable">テスト シーケンス ''{0}'' でシナリオを有効にする前に、シナリオ制御ソースを取得することはできません。シナリオを有効にするには ''sltest.testsequence.useScenario'' を使用します。</entry>
    <entry key="ActivateScenarioBeforeEnable">テスト シーケンス ''{0}'' でシナリオを有効にする前に、シナリオをアクティブにすることはできません。シナリオを有効にするには ''sltest.testsequence.useScenario'' を使用します。</entry>
    <entry key="ActivateScenarioForWorkspaceControl">テスト シーケンス ''{0}'' でワークスペースからシナリオを制御している場合、シナリオをアクティブにすることはできません。''sltest.testsequence.setScenarioControlSource'' を使用して、テスト シーケンスのシナリオ制御ソースをブロックに変更してください。</entry>
    <entry key="GetActiveScenarioBeforeEnable">テスト シーケンス ''{0}'' でシナリオを有効にする前に、アクティブなシナリオを取得することはできません。シナリオを有効にするには ''sltest.testsequence.useScenario'' を使用します。</entry>
    <entry key="GetActiveScenarioForWorkspaceControl">テスト シーケンス ''{0}'' でワークスペースからシナリオを制御している場合、アクティブなシナリオを取得することはできません。''sltest.testsequence.setScenarioControlSource'' を使用して、テスト シーケンスのシナリオ制御ソースをブロックに変更してください。</entry>
    <entry key="ScenarioRedefinition">シナリオ {0} は既に Test Sequence ブロックで定義されています。</entry>
    <entry key="InvalidStepPathWithScenarioEnabled">シナリオが有効な場合、ステップ パス ''{0}'' は無効です。</entry>
    <entry key="DeleteScenarioParameter">シナリオ パラメーター ''{0}'' は Test Sequence ブロックが使用しているため、削除できません。</entry>
    <entry key="DeleteUniqueScenario">シナリオ {0} は Test Sequence ブロックで唯一のシナリオであるため、削除できません。</entry>
    <entry key="MultipleTSPathAPI">Only one test sequence path is allowed when using sltest.testsequence API</entry>
    <entry key="CreateOutportForStepActivity">アクティブなステップの監視用データを作成</entry>
    <entry key="StepActivityOutputLink">Test Sequence のアクティブなステップの出力</entry>
    <entry key="StepActivityLocalLink">Test Sequence のアクティブなステップの追跡</entry>
    <entry key="StepActivityDataTypeLabel">データ型</entry>
    <entry key="LicenseNotAvailable">Simulink Test のライセンスをチェックアウトできません。</entry>
    <entry key="GetAssessmentInvalidArgument">''sltest.getAssessment'' の引数はモデル名でなければなりません。</entry>
    <entry key="GetAssessmentNoAssessments">モデル ''{0}'' の評価はありません。</entry>
    <entry key="AssessmentSetSummaryTitle">概要</entry>
    <entry key="AssessmentSetUntestedAsmtTitle">未テストの評価 (最初の 10 個)</entry>
    <entry key="AssessmentSetPassedAsmtTitle">パスした評価 (最初の 10 個)</entry>
    <entry key="AssessmentSetFailedAsmtTitle">失敗した評価 (最初の 10 個)</entry>
    <entry key="BadUsageInSimplified">Test Sequence ブロックで使用されている古いセマンティクスは将来のリリースで削除される予定です。新しいセマンティクスで異なる動作を引き起こす可能性のあるコード パターンがブロック {0} で検出されました。新しいセマンティクスを使用するためにブロックを更新し、警告を削除し、Test Sequence ブロックを変更する方法については、&lt;a href="matlab:helpview(fullfile(docroot, 'sltest', 'helptargets.map'), 'semantics_change_rn')"&gt;R2021a Simulink Test リリース ノート&lt;/a&gt;を参照してください。</entry>
    <entry key="InvalidScenarioParameterValue">The value of Scenario Parameter ''{0}'' is not valid. Use the index of the scenario to specify it.</entry>
  </message>
</rsccat>
