<?xml version="1.0" encoding="UTF-8"?>
<!--Copyright 2024 The MathWorks, Inc.-->

<rsccat xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.0" locale="ko_KR" product="Stateflow" xsi:noNamespaceSchemaLocation="../../resources/schema/msgcat.xsd">
  <message>
    <entry key="Editor">테스트 시퀀스 편집기</entry>
    <entry key="Step">스텝</entry>
    <entry key="Block">블록</entry>
    <entry key="malOutputNotDefinedinRTT"> 출력 {0} {1}이(가) 블록 {2}에 쓰여지지 않았습니다. </entry>
    <entry key="ReactiveTestingBlockInvalidSymbol">기호 {0}은(는) 테스트 시퀀스에서 예약어입니다. {2}에 나오는 모든 {1}의 이름을 바꾸십시오.</entry>
    <entry key="UnconditionalTransShadowInRTTBlock">{0} {1}에 다음 천이를 가리는 비조건부 {2} 천이 {3}이(가) 있습니다.\n{4}.</entry>
    <entry key="UnusedDataInReactiveTestingTableChart">{0} is defined, but is never used in the Test Sequence block. &lt;a href= "matlab: internal.stateflow.dialogs.UnusedObjectDeleter.createDeleter(''{1}'')"&gt; Delete this object.&lt;/a&gt;</entry>
    <entry key="HdlCodegenNotSupportedForRTT">Test Sequence 블록 {0}에 대해서는 HDL 코드 생성이 지원되지 않습니다.</entry>
    <entry key="WhenStateNoChildrenRTT"> 스텝 {0}에는 when 분해가 활성화되어 있으므로 둘 이상의 하위 스텝이 필요합니다. </entry>
    <entry key="WhenChildMissingWhenConditionRTT"> 스텝 {0}은(는) when 분해 스텝 {1}의 마지막 자식이 아니기 때문에 이 스텝에는 when 조건이 필요합니다. </entry>
    <entry key="WhenChildInvalidWhenConditionRTT"> A when condition is not allowed in step {0}, since it is the last child of when-decomposition step {1}. </entry>
    <entry key="NonWhenChildInvalidWhenConditionRTT"> A when condition is not allowed in step {0}, since its parent {1} is not a when-decomposition step. </entry>
    <entry key="UnreachableTestStep">스텝 {0}에 도달할 수 없습니다.</entry>
    <entry key="InvalidTransitionDestination">천이 {0}이(가) 유효하지 않은 다음 스텝 ''{1}''을(를) 가리킵니다.</entry>
    <entry key="UndefinedStep">스텝 {0}이(가) Test Sequence 블록에 정의되어 있지 않습니다.</entry>
    <entry key="ImportTestSequenceCloseUI">sltest.testsequence API를 사용하려면 Test Sequence 블록 {0} UI를 닫으십시오.</entry>
    <entry key="InvalidTestSequence"> {0}은(는) 유효한 Test Sequence 블록이 아닙니다.</entry>
    <entry key="SymbolRedefinition">기호 {0}은(는) Test Sequence 블록에 이미 정의되어 있습니다.</entry>
    <entry key="StepRedefinition">스텝 {0}은(는) Test Sequence 블록에 이미 정의되어 있습니다.</entry>
    <entry key="StepDepthDiffer">Step {0} and {1} are not at the same depth.</entry>
    <entry key="InvalidStepName">''{0}''은(는) 유효하지 않은 스텝 이름입니다.</entry>
    <entry key="InvalidSymbolName">Invalid symbol name: ''{0}''.</entry>
    <entry key="InvalidActiveStepDataScope">''{0}''은(는) 활성 스텝 데이터에 유효하지 않은 범위입니다. ''로컬'' 및 ''출력''만 허용됩니다.</entry>
    <entry key="InvalidMessageScope">Invalid scope for message: ''{0}''. Only ''Input'' and ''Output'' are allowed.</entry>
    <entry key="InvalidFunctionCallScope">Invalid scope for function call: ''{0}''. Only ''Output'' is allowed.</entry>
    <entry key="InvalidTriggerScope">Invalid scope for trigger: ''{0}''. Only ''Output'' is allowed.</entry>
    <entry key="TestSequenceLocked">Test Sequence block {0} is locked.</entry>
    <entry key="ModelIsBusy">Cannot use sltest.testsequence API while model is busy.</entry>
    <entry key="TransitionNotAllowOnWhenStepChild">Transitions are not allowed in When Step children.</entry>
    <entry key="DeleteUniqueStep">Step {0} is the unique step in Test Sequence block and cannot be deleted.</entry>
    <entry key="InvalidStepIndex">Index {0} is not a valid index for Step {1}.</entry>
    <entry key="InvalidTransitionIndex">Transition {0} is not a valid transition for Step {1}.</entry>
    <entry key="InvalidTransitionProperty">Transition has no property named {0}.</entry>
    <entry key="InvalidStepProperty">Step {0} has no property named {1}.</entry>
    <entry key="NonWhenChildInvalidRead">Step {0} has no WhenCondition property since its parent is not a when-decomposition step.</entry>
    <entry key="UndefinedSymbolName">''{0}'' 이름의 기호는 Test Sequence 블록에 정의되어 있지 않습니다.</entry>
    <entry key="InvalidSymbolProperty">Symbol ''{0}'' has no property ''{1}''.</entry>
    <entry key="InvalidTSBProperty">Test Sequence block has no property ''{0}''.</entry>
    <entry key="ReadOnlySymbolProperty">Cannot set read-only property ''{0}'' in ''{1}''.</entry>
    <entry key="PropertyError">Cannot set value ''{0}'' to property ''{1}'' in ''{2}''.</entry>
    <entry key="MissingRegExpName">RegExp requires Name parameter.</entry>
    <entry key="MissingStepName">Step ''Name'' is required.</entry>
    <entry key="NonUniqueStructParameter">Too many arguments when {0} is given as a struct object.</entry>
    <entry key="TSBNameConflict">A Test Sequence block named ''{0}'' cannot be added because a block of the same name already exists.</entry>
    <entry key="DeprecatedParameter"> 파라미터 ''{0}''은(는) 더 이상 사용되지 않습니다. 대신 ''{1}''을(를) 사용하십시오.</entry>
    <entry key="DeprecatedParameterIsIgnored"> 파라미터 ''{0}''은(는) 무시되었습니다. 대신 ''{1}''을(를) 사용합니다.</entry>
    <entry key="ActiveStepOutputNameShadowing">Cannot create an active step output data with name ''{0}'' because an output with this name already exists. Creating output data with name ''{1}''.</entry>
    <entry key="InvalidIndentStepFirstChild">Step {0} cannot be indented because it is the first child of step {1}.</entry>
    <entry key="InvalidOutdentStepNoParent">Step {0} cannot be outdented because it has no parent.</entry>
    <entry key="InvalidOutdentStepNotLastChild">Step {0} cannot be outdented because it is not the last child of step {1}.</entry>
    <entry key="TestSequenceScenarioInPrevVersion">테스트 시퀀스 ''{0}''이(가) R2020b에 추가된 시나리오를 사용하고 있습니다. 이전 버전으로 내보내면 이 차트가 기능을 잃게 됩니다.</entry>
    <entry key="InvalidScenarioName">Invalid scenario name ''{0}''.</entry>
    <entry key="RepeatedCreateScenario">Scenarios can only be enabled once in Test Sequence ''{0}''.</entry>
    <entry key="AddScenarioBeforeEnable">Cannot add scenarios before enabling scenarios for Test Sequence ''{0}''. Use ''sltest.testsequence.useScenario'' to enable scenarios.</entry>
    <entry key="DeleteScenarioBeforeEnable">Cannot delete scenarios before enabling scenarios for Test Sequence ''{0}''. Use ''sltest.testsequence.useScenario'' to enable scenarios.</entry>
    <entry key="RetrieveScenarioBeforeEnable">Cannot get scenario names before enabling scenarios for Test Sequence ''{0}''. Use ''sltest.testsequence.useScenario'' to enable scenarios.</entry>
    <entry key="EditScenarioBeforeEnable">테스트 시퀀스 ''{0}''에 대해 시나리오를 활성화하기 전에는 시나리오를 편집할 수 없습니다. ''sltest.testsequence.useScenario''를 사용하여 시나리오를 활성화하십시오.</entry>
    <entry key="ControlScenarioBeforeEnable">Cannot set scenario control source before enabling scenarios for Test Sequence ''{0}''. Use ''sltest.testsequence.useScenario'' to enable scenarios.</entry>
    <entry key="GetScenarioControlBeforeEnable">Cannot get scenario control source before enabling scenarios for Test Sequence ''{0}''. Use ''sltest.testsequence.useScenario'' to enable scenarios.</entry>
    <entry key="ActivateScenarioBeforeEnable">Cannot activate scenario before enabling scenarios for Test Sequence ''{0}''. Use ''sltest.testsequence.useScenario'' to enable scenarios.</entry>
    <entry key="ActivateScenarioForWorkspaceControl">Cannot activate scenario when controlling scenario from workspace for Test Sequence ''{0}''. Use ''sltest.testsequence.setScenarioControlSource'' to change the scenario control source for the Test Sequence to Block.</entry>
    <entry key="GetActiveScenarioBeforeEnable">Cannot get active scenario before enabling scenarios for Test Sequence ''{0}''. Use ''sltest.testsequence.useScenario'' to enable scenarios.</entry>
    <entry key="GetActiveScenarioForWorkspaceControl">Cannot get active scenario when controlling scenario from workspace for Test Sequence ''{0}''. Use ''sltest.testsequence.setScenarioControlSource'' to change the scenario control source for the Test Sequence to Block.</entry>
    <entry key="ScenarioRedefinition">Scenario {0} is already defined in Test Sequence block.</entry>
    <entry key="InvalidStepPathWithScenarioEnabled">Invalid step path ''{0}'' with scenarios enabled.</entry>
    <entry key="DeleteScenarioParameter">시나리오 파라미터 ''{0}''은(는) Test Sequence 블록에서 사용 중이기 때문에 삭제할 수 없습니다.</entry>
    <entry key="DeleteUniqueScenario">Scenario {0} is the only scenario in Test Sequence block and cannot be deleted.</entry>
    <entry key="MultipleTSPathAPI">sltest.testsequence API를 사용할 때는 하나의 테스트 시퀀스 경로만 허용됩니다</entry>
    <entry key="CreateOutportForStepActivity">활성 스텝을 모니터링하기 위한 데이터 만들기</entry>
    <entry key="StepActivityOutputLink">테스트 시퀀스의 활성 스텝 출력</entry>
    <entry key="StepActivityLocalLink">테스트 시퀀스의 활성 스텝 추적</entry>
    <entry key="StepActivityDataTypeLabel">데이터형</entry>
    <entry key="LicenseNotAvailable">Unable to check out a Simulink Test license.</entry>
    <entry key="GetAssessmentInvalidArgument">Argument to ''sltest.getAssessment'' must be a model name.</entry>
    <entry key="GetAssessmentNoAssessments">모델 ''{0}''에 사용할 수 있는 평가가 없습니다.</entry>
    <entry key="AssessmentSetSummaryTitle">요약</entry>
    <entry key="AssessmentSetUntestedAsmtTitle">테스트되지 않은 평가(처음 10개)</entry>
    <entry key="AssessmentSetPassedAsmtTitle">통과한 평가(처음 10개)</entry>
    <entry key="AssessmentSetFailedAsmtTitle">실패한 평가(처음 10개)</entry>
    <entry key="BadUsageInSimplified">Test Sequence 블록에 사용된 이전의 의미 체계는 향후 릴리스에서 제거될 예정입니다. 새 의미 체계에서 다른 동작을 일으킬 수 있는 코드 패턴이 블록 {0}에서 감지되었습니다. 블록을 업데이트하고, 경고를 제거하고, 새 의미 체계를 사용하도록 Test Sequence 블록을 변경하는 방법에 대한 자세한 내용은 &lt;a href="matlab:helpview(fullfile(docroot, 'sltest', 'helptargets.map'), 'semantics_change_rn')"&gt;R2021a Simulink Test 릴리스 정보&lt;/a&gt;를 참조하십시오.</entry>
    <entry key="InvalidScenarioParameterValue">The value of Scenario Parameter ''{0}'' is not valid. Use the index of the scenario to specify it.</entry>
  </message>
</rsccat>
