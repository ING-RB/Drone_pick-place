<?xml version="1.0" encoding="UTF-8" ?>
<rsccat version="1.0" locale="en_US" product="Stateflow" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../../schema/msgcat.xsd">
  <message>
    <!-- List all JavaScript messages here -->
    <entry key="Editor">Test Sequence Editor</entry>
    <entry key="Step">Step</entry>
    <entry key="Block">Block</entry>

    <!-- List all C++ messages here -->
    <!-- Overridden error messages here, so that we don't pollute the cdr.xml and other Stateflow related .xml files -->
    <entry key="malOutputNotDefinedinRTT"> Output {0} {1} has not been written to in the block {2}. </entry>
    <entry key="ReactiveTestingBlockInvalidSymbol">Symbol {0} is a reserved word in Test Sequences. Please rename all occurrences of {1} in {2}.</entry>
    <entry key="UnconditionalTransShadowInRTTBlock">{0} {1} has an unconditional {2} transition {3} that shadows the following transitions:\n{4}.</entry>
    <entry key="UnusedDataInReactiveTestingTableChart"><![CDATA[{0} is defined, but is never used in the Test Sequence block. <a href= "matlab: internal.stateflow.dialogs.UnusedObjectDeleter.createDeleter(''{1}'')"> Delete this object.</a>]]></entry>
    <entry key="HdlCodegenNotSupportedForRTT">HDL code generation is not supported for Test Sequence Block {0} .</entry>
    <entry key="WhenStateNoChildrenRTT"> Two or more sub-steps are required under step {0}, since when decomposition is enabled on it. </entry>
    <entry key="WhenChildMissingWhenConditionRTT"> A when condition is required in step {0}, since it is not the last child of when-decomposition step {1}. </entry>
    <entry key="WhenChildInvalidWhenConditionRTT"> A when condition is not allowed in step {0}, since it is the last child of when-decomposition step {1}. </entry>
    <entry key="NonWhenChildInvalidWhenConditionRTT"> A when condition is not allowed in step {0}, since its parent {1} is not a when-decomposition step. </entry>
    <entry key="UnreachableTestStep">Step {0} is unreachable.</entry>
    <entry key="InvalidTransitionDestination">Transition {0} points to an invalid next step ''{1}''.</entry>

    <!-- List all API messages here -->
    <entry key="UndefinedStep">Step {0} is not defined in Test Sequence block.</entry>
    <entry key="ImportTestSequenceCloseUI">Close Test Sequence block {0} UI to use sltest.testsequence API.</entry>
    <entry key="InvalidTestSequence"> {0} is not a valid Test Sequence block.</entry>
    <entry key="SymbolRedefinition">Symbol {0} is already defined in Test Sequence block.</entry>
    <entry key="StepRedefinition">Step {0} is already defined in Test Sequence block.</entry>
    <entry key="StepDepthDiffer">Step {0} and {1} are not at the same depth.</entry>
    <entry key="InvalidStepName">Invalid step name: ''{0}''.</entry>
    <entry key="InvalidSymbolName">Invalid symbol name: ''{0}''.</entry>
    <entry key="InvalidActiveStepDataScope">Invalid scope for active step data: ''{0}''. Only ''Local'' and ''Output'' are allowed.</entry>
    <entry key="InvalidMessageScope">Invalid scope for message: ''{0}''. Only ''Input'' and ''Output'' are allowed.</entry>
    <entry key="InvalidFunctionCallScope">Invalid scope for function call: ''{0}''. Only ''Output'' is allowed.</entry>
    <entry key="InvalidTriggerScope">Invalid scope for trigger: ''{0}''. Only ''Output'' is allowed.</entry>
    <entry key="TestSequenceLocked">Test Sequence block {0} is locked.</entry>
    <entry key="ModelIsBusy">Cannot use sltest.testsequence API while model is busy.</entry>
    <entry key="TransitionNotAllowOnWhenStepChild">Transitions are not allowed in When Step children.</entry>
    <entry key="DeleteUniqueStep">Step {0} is the unique step in Test Sequence block and cannot be deleted.</entry>
    <entry key="InvalidStepIndex">Index {0} is not a valid index for Step {1}.</entry>
    <entry key="InvalidTransitionIndex">Transition {0} is not a valid transition for Step {1}.</entry>
    <entry key="InvalidTransitionProperty">Transition has no property named {0}.</entry>
    <entry key="InvalidStepProperty">Step {0} has no property named {1}.</entry>
    <entry key="NonWhenChildInvalidRead">Step {0} has no WhenCondition property since its parent is not a when-decomposition step.</entry>
    <entry key="UndefinedSymbolName">No symbol named ''{0}'' is defined in Test Sequence block.</entry>
    <entry key="InvalidSymbolProperty">Symbol ''{0}'' has no property ''{1}''.</entry>
    <entry key="InvalidTSBProperty">Test Sequence block has no property ''{0}''.</entry>
    <entry key="ReadOnlySymbolProperty">Cannot set read-only property ''{0}'' in ''{1}''.</entry>
    <entry key="PropertyError">Cannot set value ''{0}'' to property ''{1}'' in ''{2}''.</entry>
    <entry key="MissingRegExpName">RegExp requires Name parameter.</entry>
    <entry key="MissingStepName">Step ''Name'' is required.</entry>
    <entry key="NonUniqueStructParameter">Too many arguments when {0} is given as a struct object.</entry>
    <entry key="TSBNameConflict">A Test Sequence block named ''{0}'' cannot be added because a block of the same name already exists.</entry>
    <entry key="DeprecatedParameter"> Parameter ''{0}'' is deprecated, please use ''{1}'' instead.</entry>
    <entry key="DeprecatedParameterIsIgnored"> Parameter ''{0}'' is ignored, using ''{1}'' instead.</entry>
    <entry key="ActiveStepOutputNameShadowing">Cannot create an active step output data with name ''{0}'' because an output with this name already exists. Creating output data with name ''{1}''.</entry>
    <entry key="InvalidIndentStepFirstChild">Step {0} cannot be indented because it is the first child of step {1}.</entry>
    <entry key="InvalidOutdentStepNoParent">Step {0} cannot be outdented because it has no parent.</entry>
    <entry key="InvalidOutdentStepNotLastChild">Step {0} cannot be outdented because it is not the last child of step {1}.</entry>
    <entry key="TestSequenceScenarioInPrevVersion">Test Sequence ''{0}'' is using scenarios, which were introduced in R2020b. If exported to an earlier version, this chart will lose functionality.</entry>
    <entry key="InvalidScenarioName">Invalid scenario name ''{0}''.</entry>
    <entry key="RepeatedCreateScenario">Scenarios can only be enabled once in Test Sequence ''{0}''.</entry>
    <entry key="AddScenarioBeforeEnable">Cannot add scenarios before enabling scenarios for Test Sequence ''{0}''. Use ''sltest.testsequence.useScenario'' to enable scenarios.</entry>
    <entry key="DeleteScenarioBeforeEnable">Cannot delete scenarios before enabling scenarios for Test Sequence ''{0}''. Use ''sltest.testsequence.useScenario'' to enable scenarios.</entry>
    <entry key="RetrieveScenarioBeforeEnable">Cannot get scenario names before enabling scenarios for Test Sequence ''{0}''. Use ''sltest.testsequence.useScenario'' to enable scenarios.</entry>
    <entry key="EditScenarioBeforeEnable">Cannot edit scenarios before enabling scenarios for Test Sequence ''{0}''. Use ''sltest.testsequence.useScenario'' to enable scenarios.</entry>
    <entry key="ControlScenarioBeforeEnable">Cannot set scenario control source before enabling scenarios for Test Sequence ''{0}''. Use ''sltest.testsequence.useScenario'' to enable scenarios.</entry>
    <entry key="GetScenarioControlBeforeEnable">Cannot get scenario control source before enabling scenarios for Test Sequence ''{0}''. Use ''sltest.testsequence.useScenario'' to enable scenarios.</entry>
    <entry key="ActivateScenarioBeforeEnable">Cannot activate scenario before enabling scenarios for Test Sequence ''{0}''. Use ''sltest.testsequence.useScenario'' to enable scenarios.</entry>
    <entry key="ActivateScenarioForWorkspaceControl">Cannot activate scenario when controlling scenario from workspace for Test Sequence ''{0}''. Use ''sltest.testsequence.setScenarioControlSource'' to change the scenario control source for the Test Sequence to Block.</entry>
    <entry key="GetActiveScenarioBeforeEnable">Cannot get active scenario before enabling scenarios for Test Sequence ''{0}''. Use ''sltest.testsequence.useScenario'' to enable scenarios.</entry>
    <entry key="GetActiveScenarioForWorkspaceControl">Cannot get active scenario when controlling scenario from workspace for Test Sequence ''{0}''. Use ''sltest.testsequence.setScenarioControlSource'' to change the scenario control source for the Test Sequence to Block.</entry>
    <entry key="ScenarioRedefinition">Scenario {0} is already defined in Test Sequence block.</entry>
    <entry key="InvalidStepPathWithScenarioEnabled">Invalid step path ''{0}'' with scenarios enabled.</entry>
    <entry key="DeleteScenarioParameter">Cannot delete scenario parameter ''{0}'' because it is in use by Test Sequence block.</entry>
    <entry key="DeleteUniqueScenario">Scenario {0} is the only scenario in Test Sequence block and cannot be deleted.</entry>
    <entry key="InvalidScenarioParameterValue" translate="false">The value of Scenario Parameter ''{0}'' is not valid. Use the index of the scenario to specify it.</entry>
    <entry key="MultipleTSPathAPI">Only one test sequence path is allowed when using sltest.testsequence API</entry>

    <!-- List all DDG messages here -->
    <entry key="CreateOutportForStepActivity">Create data to monitor the active step</entry>
    <entry key="StepActivityOutputLink">Outputting active step of Test Sequence</entry>
    <entry key="StepActivityLocalLink">Tracking active step of Test Sequence</entry>
    <entry key="StepActivityDataTypeLabel">Data Type</entry>

    <!-- List all getAssessment messages here -->
    <entry key="LicenseNotAvailable">Unable to check out a Simulink Test license.</entry>
    <entry key="GetAssessmentInvalidArgument">Argument to ''sltest.getAssessment'' must be a model name.</entry>
    <entry key="GetAssessmentNoAssessments">No assessments available for model ''{0}''.</entry>
    <entry key="AssessmentSetSummaryTitle">Summary</entry>
    <entry key="AssessmentSetUntestedAsmtTitle">Untested Assessments (first 10)</entry>
    <entry key="AssessmentSetPassedAsmtTitle">Passed Assessments (first 10)</entry>
    <entry key="AssessmentSetFailedAsmtTitle">Failed Assessments (first 10)</entry>
    
    <entry key="BadUsageInSimplified"><![CDATA[Old semantics used by Test Sequence block will be removed in a future release. A code pattern that might cause different behavior in the new semantics has been detected in the block {0}. See <a href="matlab:helpview(fullfile(docroot, 'sltest', 'helptargets.map'), 'semantics_change_rn')">R2021a Simulink Test Release Notes</a> for information on how to update the block, remove the warning and change the Test Sequence block to use the new semantics.]]></entry>

  </message>
</rsccat>
