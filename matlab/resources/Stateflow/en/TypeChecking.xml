<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright 2010-2021 The MathWorks, Inc. -->
<rsccat version="1.0" locale="en_US" product="Stateflow" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../../schema/msgcat.xsd">
  <message>
    <entry key="ArithmeticCombiningPointerAndNonInteger">Arithmetic combining pointer and non-integer value.</entry>
    <entry key="ArithmeticOperatorAppliedToNonArithmeticType">Arithmetic operator applied to non-arithmetic type.</entry>
    <entry key="AssignmentOperationCannotAssignPointerTypeToOtherBaseTypes">Unable to assign a pointer to a Stateflow variable or pass a pointer to a Stateflow function. Use a custom code variable for the left hand side argument of the assignment operation if you need to assign a pointer to a variable.</entry>
    <entry key="AttemptedTypeConversionBetweenUnsupportedTypes">Attempted type conversion between unsupported types.</entry>

    <entry key="BothBranchTypesInATernaryLogicalConditionCannotBeInferred">Both input types after ? in ?: cannot be inferred.</entry>

    <entry key="CannotBeDereferenced">Only pointer or matrix types can be dereferenced.</entry>
    <entry key="CannotDetermineTypeForLHSOfShiftRight">Unable to determine the type for the left-hand side of the ''>>'' operation.\nIf you are calling custom code, please cast the result to the proper type.</entry>
    <entry key="CannotConvertPointerValueToNonIntegralType">Unable to convert pointer value to non-integral type.</entry>
    <entry key="CannotConvertNonIntegralValueToPointerType">Unable to convert non-integral value to pointer type.</entry>
    <entry key="CustomCodeFcnUsedInMatrixContext">Custom code function used in a matrix expression. This is not allowed.</entry>
    <entry key="ContextSensitiveConstantsCanOnlyBeUsedToRepresentDoubleValues">Context-sensitive constants can only be used to represent "double" values.</entry>
    <entry key="ContextSensitiveConstantsMustBeNumericalConstants">Context-sensitive constants must be numerical constants.</entry>
    <entry key="ComplexOperatorNeedsNonComplexNumericTypes">'complex' operator needs scalar, non-complex numeric types on its input arguments.</entry>
    <entry key="ComparisonsOfFixpointTypesWithMismatchedBiasesAreNotSupported">Comparisons of fixed-point types with different biases are not supported. Use casting or assignment to convert one or both of the inputs to have the same bias. For constant inputs, use a context-sensitive constant or adjust the bias in the data declaration.</entry>

    <entry key="ErrorsDuringTypeProp">Errors occurred in type propagation. Aborting code generation</entry>
    
    <entry key="FcnExpectsComplexInputData">Function ''{0}'' expects a complex data type on its input.</entry>
    <entry key="FixedPointDivisionDoesNotSupportNonZeroBiases">Fixed-point division does not support non-zero biases.</entry>
    <entry key="FixedPointMultiplicationDoesNotSupportNonZeroBiases">Fixed-point multiplication does not support non-zero biases.</entry>

    
    <entry key="IncompatibleMatrixShapes">Unable to combine matrices of incompatible shapes.</entry>
    <entry key="InvalidMatrixTypeInAssignment">Unsupported use of a matrix or vector type where a scalar was expected.</entry>
    <entry key="InvalidShapeConversion">Unsupported conversion from a matrix of shape ''{0}'' to a matrix of shape ''{1}''.</entry>
    <entry key="IncompatibleComplexTypes">Unsupported use of a complex expression used where a non-complex type was expected.</entry>
    <entry key="IncompatibleDynamicMatrix">Unsupported use of a dynamic matrix where a static matrix was expected.</entry>
    <entry key="IncompatibleMatrixShapesToStaticExpand">Incompatible matrix shapes passed to arguments {0,number,integer} and {1,number,integer}.</entry>
    <entry key="InvalidTypeForLogicalExpression">Invalid type used in a boolean context.</entry>
    <entry key="InvalidTypeInSwitchStatement">Invalid type used in switch statement.</entry>
    <entry key="InvalidComplexArgument">Unable to use a complex expression in this context.</entry>
    <entry key="InvalidSLStringArgument">Unable to use a string data in this context.</entry>
    <entry key="InvalidNonArithmeticArgument">Invalid type used where an arithmetic type was expected.</entry>
    <entry key="IllegalStructureMemberAccessNonExistentMember">Unsupported structure member access. Non-existent member.</entry>
    <entry key="IncorrectNumberOfArgumentsToMathCall">Incorrect number of input/output arguments to function ''{0}''.</entry>
    <entry key="IllegalStructureMemberAccessFromNonStructureType">Unsupported structure member access from non-structure type.</entry>
    <entry key="MatrixDimensionsMismatchForMessagePayload">Matrix dimensions mismatch for the data of message {0}.\n</entry>
    <entry key="MixingFixpointAndValuesOfUnknownType">Unable to use a non-integer fixed point expression for assignment to a custom code variable or as an argument to a custom code function.</entry>
    <entry key="NegativeValueCannotBeUsedInRHSOfShift">A negative value cannot be used in the right-hand side of a shift operation.</entry>
    <entry key="EnumCannotBeUsedInShift">Enum values are unable to be used in shift operation.</entry>

    <entry key="PointerArithmeticWithAMultiplyOperationIsNotSupported">Pointer arithmetic with a multiply (*) operation is not supported.</entry>
    <entry key="PointerArithmeticWithADivisionOperationIsNotSupported">Pointer arithmetic with a division (/) operation is not supported.</entry>
    <entry key="PointerArithmeticWithThisOperationIsNotSupported">Pointer arithmetic with a {0} operation is not supported.</entry>
    
    <entry key="RealImagOperatorNeedComplexInput">'real/imag' operators need a complex type on its input argument.</entry>
    <entry key="RHSOfMinusIsAPointer">The right-hand side of minus is a pointer.</entry>
    <entry key="ReferenceToAStructureMustBeAPointer">A reference to a structure must be a pointer.</entry>
    <entry key="RelationalOperatorsCannotOperateOnAggregateTypes">Relational operators cannot operate directly on aggregate types.\nUse a member of the aggregate.</entry>

    <entry key="TypeConversionInvolvingStructTypeIsNotAllowed">Type conversion involving a struct type is not allowed.</entry>
    <entry key="TypeMismatchErrorInAssignment">Types must match.</entry>
    
    <entry key="UnexpectedTypeInMatrixIndex">Unexpected type in matrix index.</entry>
    <entry key="UnableToRepresentTheConstantValuePrecisely">Unable to represent the constant value ''{0}'' precisely in the type ''{1}''.</entry>
    <entry key="UnknownTypeInMatrixExpression">Custom code variable used where a matrix was expected. If you wish to scalar expand the custom code variable to the matrix type, please explicitly insert a cast above the custom code variable.</entry>
    <entry key="UnknownTypeOnLHSOfMatrixAssignment">Cannot assign a matrix expression to a custom code variable or pass a matrix expression to a custom code function.</entry>
    <entry key="CannotCastStringToNumericalType">Invalid cast of numerical types on string.</entry>
    <entry key="AssignmentToStringExpectStringOnRhs">Cannot assign non-string data to data of string type.</entry>
    <entry key="AssignmentFromStringExpectStringOnLhs">Cannot assign string to data of non-string type.</entry>
    <entry key="CannotUseStringInThisContext">Cannot pass string to this function.</entry>
    <entry key="TypeMismatchErrorExcpectString">Function expects a string argument.</entry>
    <entry key="UnknownTypePassedToFcnExpectingMatrix">Custom code function or variable as argument to function expecting a matrix argument. This is not allowed.</entry>
    <entry key="UnsupportedMemberAccessWithImportCustomCode"><![CDATA[With "Configuration Parameters > Simulation Target > Import custom code" on, Stateflow is unable to access members of unsupported types from custom code. Refer to <a href="matlab:helpview(fullfile(docroot, 'simulink', 'helptargets.map'),'Tag_ConfigSet_Sim_CustomCode_SimParseCustomCode')">documentation</a> for more information.]]></entry>
    <entry key="UnaryMinusAppliedToNonArithmeticType">Unary minus operator applied to non-arithmetic type.</entry>
    <entry key="WriteToReadOnlyLocation">The following expression is writing to a read-only location.</entry>
    <entry key="WriteToReadOnlyFound">Found writes to read-only locations in {0}.</entry>
    <entry key="InvalidInitValueForSfix64">Data {0} has type ''{1}''. Specify its initial value with a numeric type of ''fixdt({2,number,integer}, 64, 0)''.</entry>
    <entry key="InvalidInitValueForInt64">Data {0} has type ''{1}''. Specify its initial value with a numeric type of ''{1}''.</entry>
    <entry key="UnsupportedHalfType">Half precision data type is not supported for {0}.</entry>
    <entry key="InheritedProp">Type, size, and complexity of argument {0} in function {1} do not match the propagated properties. Explicitly specify these properties.</entry>
    <entry key="InvalidTypeForFindMatchingPort">Input argument must be a Stateflow.Port object.</entry>
    <entry key="FailedToComputeSymbolicDims">Failed to compute the symbolic dimensions of the variable {0}. To configure the {0} as an unbounded, variable-sized data, open the Configuration Parameters dialog box and enable ''Support variable-sized signals'' and ''Dynamic memory allocation in MATLAB functions''.</entry>
    <entry key="UnexpectedErrorDuringTypeProp">Unable to generate code because an error occurred when processing symbolic dimensions.</entry>
    <entry key="CalleeExpectDynMatrixArg">Function argument must not be a scalar.</entry>
    <entry key="CalleeExpectNonDynMatrixArg">Function does not support more that one variable-size input for scalar arguments.</entry>
    <entry key="AssignExpectMatrix">Charts that use C as the action language do not support assigning scalar values to variable-size data.</entry>
  </message>
</rsccat>
