<?xml version="1.0" encoding="UTF-8" ?>
<!-- Copyright 2010-2024 The MathWorks, Inc. -->
<rsccat version="1.0" locale="en_US" product="Stateflow" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../../schema/msgcat.xsd">
  <message>
    <!-- File Menu -->
    <entry key="ExportToHTMLFileMenuItem">HTML File</entry>
    <entry key="ChartPropertiesMenuItem">&amp;Chart Properties</entry>
    <entry key="MachinePropertiesMenuItem">&amp;State Machine Properties</entry>
    <entry key="StateflowPreferencesMenu">Stateflo&amp;w Preferences</entry>
    <entry key="StyleMenuItem">&amp;Style...</entry>
    <entry key="HighlightingPreferenceMenuItem">Syntax &amp;Highlighting...</entry>

    <!-- Edit Menu -->
    <entry key="SearchAndReplaceMenuItem">Fi&amp;nd &amp;&amp; Replace in Chart...</entry>
    <entry key="TransitionExecutionOrder">Transition Execution &amp;Order</entry>
    <entry key="ToggleSymbolManagerMenuItem">Symbols</entry>

    <!-- Display Menu -->
    <entry key="ChartsDisplayMenu">&amp;Chart</entry>

    <!-- Chart Menu -->
    <entry key="ChartMenu">Cha&amp;rt</entry>
    <entry key="CreateContainerMenu">Create Container</entry>
    <entry key="SubchartAndGroupMenu">&amp;Group &amp;&amp; Subchart</entry>
    <entry key="GroupedMenuItem">Group</entry>
    <entry key="SubChartedMenuItem">Subchart</entry>
    <entry key="AtomicSubChartedMenuItem">Atomic Subchart</entry>
    <entry key="AddInputsAndOutputsMenu">Add Inputs &amp;&amp; Outputs</entry>
    <entry key="DataInputFromSimulinkMenuItem">Data Input From Simulink</entry>
    <entry key="DataOutputToSimulinkMenuItem">Data Output To Simulink</entry>
    <entry key="EventInputFromSimulinkMenuItem">Event Input From Simulink</entry>
    <entry key="EventOutputToSimulinkMenuItem">Event Output To Simulink</entry>
    <entry key="MessageInputFromSimulinkMenuItem">Message Input From Simulink</entry>
    <entry key="MessageOutputToSimulinkMenuItem">Message Output To Simulink</entry>
    <entry key="EntityInputFromSimulinkMenuItem">Message (Entity) Input From Simulink</entry>
    <entry key="EntityOutputToSimulinkMenuItem">Message (Entity) Output To Simulink</entry>
    <entry key="AddPatternsMenu">Add Pattern</entry>
    <entry key="AddPatternInFunction">Add Pattern In Function</entry>
    <entry key="AddPatternInChart">Add Pattern In Chart</entry>
    <entry key="AddPatternInSubchart">Add Pattern In Subchart</entry>
    <entry key="ExtendPatternMenu">Insert Pattern On Selection</entry>
    <entry key="SelectVerticalTransition">Select a vertical transition</entry>
    <entry key="SelectOnlyOneTransition">Select only one vertical transition</entry>
    <entry key="OtherObjectsInSubviewer">Editor must contain only transitions and junctions</entry>
    <entry key="SelectStraightVerticalTrans">Selected transition must be exactly vertical</entry>
    <entry key="DisabledExtendPatternMenu" translate="false" note="TranslateFalseBatch;">AddPatternOnSelectionDisabledMenu</entry>
    <entry key="PatternsMenu">Patterns</entry> <!-- For merging UE1 menus with CE menus -->
    <entry key="AddDecisionMenu">Decision</entry>
    <entry key="AddPatternFromFile">File...</entry>
    <entry key="AddIfThen">&amp;If...</entry>
    <entry key="AddIfThenElse">If-&amp;Else...</entry>
    <entry key="AddIfThenElseIf">If-E&amp;lseif...</entry>
    <entry key="AddIfThenElseIfElse">If-Elsei&amp;f-Else...</entry>
    <entry key="AddIfThenElseifElseifElse">If-El&amp;seif-Elseif-Else...</entry>
    <entry key="AddNestedIf">&amp;Nested-If...</entry>
    <entry key="AddLoopMenu">&amp;Loop</entry>
    <entry key="AddFor">&amp;For...</entry>
    <entry key="AddWhile">&amp;While...</entry>
    <entry key="AddDoWhile">&amp;DoWhile...</entry>
    <entry key="AddSwitchMenu">&amp;Switch</entry>
    <entry key="AddSwitch2">&amp;2 Cases and Default...</entry>
    <entry key="AddSwitch3">&amp;3 Cases and Default...</entry>
    <entry key="AddSwitch4">&amp;4 Cases and Default...</entry>
    <entry key="AddCustom">Select Pattern</entry>
    <entry key="SavePattern">Save Pattern</entry>
    <entry key="AddOtherElementsMenu">Add Other Elements</entry>
    <entry key="EventLocalMenuItem">Local Event...</entry>
    <entry key="MessageLocalMenuItem">Local Message...</entry>
    <entry key="EntityLocalMenuItem">Local Message (Entity)...</entry>
    <entry key="DataParameterMenuItem">Parameter...</entry>
    <entry key="DataConstantMenuItem">Constant...</entry>
    <entry key="DataLocalMenuItem">Local Data...</entry>
    <entry key="DataStoreMemoryMenuItem">Data Store Memory...</entry>
    <entry key="AddInputMenu">Add Input</entry> <!-- Remove this key after final port -->
    <entry key="AddOutputMenu">Add Output</entry> <!-- Remove this key after final port -->
    <entry key="StateDecompositionMenu">State</entry>
    <entry key="FormatMenu">Format</entry>
    <entry key="TextFormatMenu">Font Style</entry>
    <entry key="BoldMenuItem">Bold</entry>
    <entry key="ItalicMenuItem">Italic</entry>
    <entry key="TextAlignmentMenu">Text Alignment</entry>
    <entry key="LeftAlignmentMenuItem">&amp;Left</entry>
    <entry key="CenterAlignmentMenuItem">&amp;Center</entry>
    <entry key="RightAlignmentMenuItem">&amp;Right</entry>
    <entry key="TeXInterpretModeMenuItem">Enable Te&amp;X Commands</entry>
    <entry key="MathMLInterpretModeMenuItem">Interpret as &amp;MathML</entry>
    <entry key="EditText">&amp;Edit Text</entry>
    <entry key="InsertImage">Insert Image...</entry>
    <entry key="CopyImage">Copy Image</entry>
    <entry key="PasteImage">Paste Image</entry>
    <entry key="RestoreImageSize">Restore Size</entry>
    <entry key="RotateAndFlipMenu">&amp;Rotate &amp;&amp; Flip</entry>
    <entry key="RotateImageRight90">Rotate Right 90&#176;</entry>
    <entry key="RotateImageLeft90">Rotate Left 90&#176;</entry>
    <entry key="RotateImage180">Rotate 180&#176;</entry>
    <entry key="FlipImageVertical">Flip Vertical</entry>
    <entry key="FlipImageHorizontal">Flip Horizontal</entry>
    <entry key="SetFontSizeMenu">Font Size</entry>
    <entry key="ArrowheadSizeMenu">Arrowhead Size</entry>
    <entry key="JunctionSizeMenu">Junction Size</entry>
    <entry key="ObserverMenu">Observers</entry>
    <entry key="ObserveSelfActivityMenuItem">Observe Self Activity</entry>
    <entry key="ObserveChildActivityMenuItem">Observe Child Activity</entry>
    <entry key="ObserveLeafActivityMenuItem">Observe Leaf State Activity</entry>
    <entry key="ObserverGoToObserverPortMenuItem">Go to Associated Observer Ports</entry>
    <entry key="NewObserverMenuItem">New Observer</entry>
    <entry key="ObserverPortInLoadedMdl" note="{1} = SelfActivity/ChildActivity/LeafActivity">{0}: ''{1}'' referenced by ''{2}''</entry>
    <entry key="ObserverPortInUnloadedMdl" note="{1} = SelfActivity/ChildActivity/LeafActivity">{0}: ''{1}'' (unloaded) referenced by ''{2}''</entry>
    <entry key="SelfActivity">Self activity</entry>
    <entry key="ChildActivity">Child activity</entry>
    <entry key="LeafActivity">Leaf state activity</entry>
    <entry key="DecompositionMenu">Decomposition</entry>
    <entry key="StateMenuItem">State</entry>
    <entry key="BoxMenuItem">Box</entry>
    <entry key="ExclusiveMenuItem">Exclusive (OR)</entry>
    <entry key="ParallelMenuItem">Parallel (AND)</entry>
    <entry key="ExecutionOrderMenu">Execution Order</entry>
    <entry key="EnableUserSpecifiedExecutionOrderMenuItem">Enable user-specified-execution-order for this chart ...</entry>
    <entry key="ContentPreview">Content Preview</entry>
    <entry key="ArrangeMenu">Arrange</entry>
    <entry key="ExportToWorkspace">Send to Workspace</entry><!-- Remove this key after final port -->
    <entry key="ToFigureMenuItem">Export to Figure</entry><!-- Remove this key after final port -->
    <entry key="ParametersMenu">Parameters</entry>
    <entry key="PropertiesMenuItem">Properties...</entry>
    <entry key="ParseMenu">Parse</entry>
    <entry key="ParseStageName">Stateflow Parse</entry>
    <entry key="ParseDiagramMenuItem">Parse All Charts</entry>
    <entry key="ParseChartMenuItem">&amp;Parse Chart</entry>
    <entry key="LibraryLinkMenu">Library Link</entry>
    <entry key="ViewSTMMenuItem">View State Transition Matrix</entry>
    <entry key="ViewAutogeneratedDiagramMenuItem">View auto-generated diagram</entry>
    <entry key="RunDiagnosticsMenuItem">Run diagnostics</entry>
    <entry key="AppendTransitionColumnMenuItem">Append transition column</entry>
    <entry key="InsertSTTRowMenu">Insert row</entry>
    <entry key="InsertStateRowMenuItem">State row</entry>
    <entry key="InsertChildStateRowMenuItem">Child state row</entry>
    <entry key="InsertDefaultRowMenuItem">Default transition row</entry>
    <entry key="InsertInnerRowMenuItem">Inner transition row</entry>

    <!-- Simulation Menu -->
    <entry key="StateflowAnimationMenu">Stateflow &amp;Animation</entry>
    <entry key="AnimSpeedLightningFast">&amp;Lightning Fast</entry>
    <entry key="AnimSpeedFast">&amp;Fast</entry>
    <entry key="AnimSpeedMedium">&amp;Medium</entry>
    <entry key="AnimSpeedSlow">&amp;Slow</entry>
    <entry key="AnimNone">&amp;None</entry>
    <entry key="MaintainHighlighting">Maintain Highlighting</entry>
    <entry key="MaintainHighlightingToolTip">Maintain animation highlighting after simulation has completed.</entry>
    <entry key="ForceDebugging">Allow setting breakpoints during simulation</entry>
    <entry key="RunToCursor">Run to cursor</entry>
    <entry key="ClearBreakpointsMenu">C&amp;lear Stateflow Breakpoints</entry>
    <entry key="ClearBreakpointsOnSelection">For &amp;Selected Objects</entry>
    <entry key="ClearBreakpointsInTab">All in this &amp;Tab</entry>
    <entry key="ClearBreakpointsInChart">All in this &amp;Chart</entry>
    <entry key="ClearBreakpointsInAllCharts">All Breakpoints in &amp;All Charts</entry>
    <entry key="SetBreakpointsMenu">&amp;Set Stateflow Breakpoints</entry>
    <entry key="SetBreakpointsContextMenu">&amp;Set Breakpoints</entry>
    <entry key="SetBreakpointOnChartEntry">On &amp;Chart Entry</entry>
    <entry key="SetBreakpointOnChartEntry_No_amp">On Chart Entry</entry>
    <entry key="SetBreakpointOnChartEntryContext">Set Breakpoint On &amp;Chart Entry</entry>
    <entry key="SetBreakpointOnStateAllActions">Add Breakpoint On &amp;State</entry>
    <entry key="ResetBreakpointOnStateAllActions">Remove Breakpoint On &amp;State</entry>
    <entry key="RemoveBreakpointsFromState"> Clear Breakpoint</entry>
    <entry key="SetBreakpointOnStateEntryDuring"> Set Breakpoint</entry>
    <entry key="SetBreakpointOnStateEntry">On State &amp;Entry</entry>
    <entry key="SetBreakpointOnStateEntry_No_amp">On State Entry</entry>
    <entry key="SetBreakpointDuringState">&amp;During State</entry>
    <entry key="SetBreakpointDuringState_No_amp">During State</entry>
    <entry key="SetBreakpointOnStateExit">On State E&amp;xit</entry>
    <entry key="SetBreakpointOnStateExit_No_amp">On State Exit</entry>
    <entry key="SetBreakpointDuringFunctionCall">During &amp;Function Call</entry>
    <entry key="SetBreakpointDuringFunctionCall_No_amp">During Function Call</entry>
    <entry key="SetBreakpointDuringFunctionCallContext">Set Breakpoint During &amp;Function Call</entry>
    <entry key="SetBreakpointOnTransition">Add Breakpoint On &amp;Transition</entry>
    <entry key="ResetBreakpointOnTransition">Remove Breakpoint On &amp;Transition</entry>
    <entry key="SetBreakpointOnTransitionTested">When Transition is &amp;Tested</entry>
    <entry key="SetBreakpointOnTransitionTested_No_amp">When Transition is Tested</entry>
    <entry key="SetBreakpointOnTransitionValid">When Transition is &amp;Valid</entry>
    <entry key="SetBreakpointOnPreconditionTested">Before Checking Precondition</entry>
    <entry key="SetBreakpointOnPreconditionValid">After Precondition is Valid</entry>
    <entry key="RemoveBreakpointsFromTransition">Clear Breakpoint</entry>
    <entry key="SetBreakpointOnTransitionValidWrapper">Set Breakpoint</entry>
    <entry key="SetBreakpointOnTransitionValid_No_amp">When Transition is Valid</entry>

    <!-- Analysis Menu -->
    <entry key="DVMakeSubchartAtomic">Convert to 'Atomic Subchart' to Analyze</entry>
    <entry key="DVcompatibilitySubchart">&amp;Check Subchart Compatibility</entry>
    <entry key="DVtestgenSubchart">&amp;Generate Tests for Subchart</entry>
    <entry key="DVdetectsubchart">&amp;Detect Design Errors in Subchart</entry>
    <entry key="DVproveSubchart">&amp;Prove Subchart Properties</entry>
    <entry key="DVsettingsSubchart">&amp;Options...</entry>

    <!-- Code Menu -->
    <entry key="TargetMenuItem">&amp;Add Custom Target...</entry>
    <entry key="BuildDiagramMenuItem">&amp;Build All Charts</entry>
    <entry key="RebuildAllMenuItem">&amp;Rebuild All Charts</entry>

    <!-- Help Menu -->
    <entry key="HelpMenu">State&amp;flow</entry>
    <entry key="StateflowHelpMenuItem">Stateflow &amp;Help</entry>
    <entry key="StateflowDemos">&amp;Examples</entry>
    <entry key="AboutMenuItem">A&amp;bout Stateflow</entry>

    <!-- Context Menus -->
    <entry key="OpenMenu">Open</entry>
    <entry key="ExploreMenu">Explore</entry>
    <entry key="AddToWatchMenu">Add to Watch Window...</entry>
    <entry key="EditMenu">Edit</entry>
    <entry key="RequirementsMenu">Requirements</entry>
    <entry key="Code">Code</entry>
    <entry key="Help">Help</entry>
    <entry key="RemoveHighlighting">&amp;Remove Highlighting</entry>
    <entry key="SFClipboardAdapterPaste">Paste</entry>
    <entry key="SFClipboardAdapterCut">Cut</entry>
    <entry key="SFDeleteToolSuperTransitionDeletion">Delete Super-transition</entry>
    <entry key="SFDeleteToolDelete">Delete</entry>
    <entry key="SFResizeBehaviorResize">Resize</entry>
    <entry key="SFToolUtilsCopy">Copy</entry>
    <entry key="SFMoveToolMove">Move</entry>
    <entry key="SFStateGlyphUngroup">Ungroup</entry>
    <entry key="SFStateGlyphGroup">Group</entry>
    <entry key="SFPortRename">Edit Port Key</entry>
    <entry key="SFTransitionGlyphRename">Edit Transition</entry>
    <entry key="SFStateGlyphRename">Edit State</entry>
    <entry key="SFAnnotationGlyphRename">Edit Annotation</entry>
    <entry key="SFImageGlyphRename">Edit Image</entry>
    <entry key="SFBoxGlyphRename">Edit Box</entry>
    <entry key="SFSLFcnGlyphRename">Edit Simulink Function</entry>
    <entry key="SFEMLGlyphRename">Edit MATLAB Function</entry>
    <entry key="SFGraphicalFcnGlyphRename">Edit Graphical Function</entry>
    <entry key="SFTruthTableGlyphRename">Edit Truth Table</entry>
    <entry key="SFAtomicStateGlyphRename">Edit Atomic State</entry>
    <entry key="SFActionSubsysStateGlyphRename">Edit Simulink State</entry>
    <entry key="SFAtomicBoxGlyphRename">Edit Atomic Box</entry>
    <entry key="SFStateTransitionTable">Rename State Transition Table</entry>
    <entry key="SFTransitionCreationToolSuperTransitionCreation">Create Super-transition</entry>
    <entry key="SFTransitionCreationToolCreateTransition">Create Transition</entry>
    <entry key="SFTransitionCreationToolCreateDefaultTransition">Create Default Transition</entry>
    <entry key="SFElementCreationCue">Element Creation Cue</entry>
    <entry key="SFSplicedTransitionCreation">Create Branched Transition</entry>
    <entry key="SFIOCreationToolJunctionCreation">Create Junction</entry>
    <entry key="SFIOCreationToolPortCreation">Create Port</entry>
    <entry key="SFStateCreationToolStateCreation">Create State</entry>
    <entry key="SFEditorCreateAnnotation">Create Annotation</entry>
    <entry key="SFEditorCreateImage">Create Image</entry>
    <entry key="SFStateCreationToolActionStateCreation">Create Simulink State</entry>
    <entry key="SFStateCreationToolBoxCreation">Create Box</entry>
    <entry key="SFStateCreationToolSLFcnCreation">Create Simulink Function</entry>
    <entry key="SFStateCreationToolEMLCreation">Create MATLAB Function</entry>
    <entry key="SFStateCreationToolGraphicalFcnCreation">Create Graphical Function</entry>
    <entry key="SFStateCreationToolTruthTableCreation">Create Truth Table</entry>
    <entry key="SFStateCreationToolStateTransitionTableCreation">Create State Transition Table</entry>
    <entry key="SFTransitionMoveToolLabel">Moved Transition Label</entry>
    <entry key="SFTransitionMoveToolMidpoint">Moved Transition Midpoint</entry>
    <entry key="SFTransitionMoveToolEndpoint">Moved Transition Endpoint</entry>
    <entry key="SFTransitionMoveToolSuperEndpoint">Moved Super-Transition Endpoint</entry>
    <entry key="SFCreateState">Create Superstate from Selection</entry>
    <entry key="SFCreateBox">Create Box from Selection</entry>
    <entry key="SFCreateSubchart">Create Subchart from Selection</entry>
    <entry key="SFCreateSubchartedbox">Create Subcharted Box from Selection</entry>

    <!-- Palette Items -->
    <entry key="SFPaletteState">State</entry>
    <entry key="SFPaletteActionState">Simulink state</entry>
    <entry key="SFPaletteStep">Step</entry>
    <entry key="SFPaletteJunction">Junction</entry>
    <entry key="SFPaletteExitPort">Exit</entry>
    <entry key="SFPaletteEntryPort">Entry</entry>
    <entry key="SFPaletteDefaultTransition">Default transition</entry>
    <entry key="SFPaletteBox">Box</entry>
    <entry key="SFPaletteSLFunction">Simulink function</entry>
    <entry key="SFPaletteGraphicalFunction">Graphical function</entry>
    <entry key="SFPaletteEMLFunction">MATLAB function</entry>
    <entry key="SFPaletteTruthTable">Truth table</entry>
    <entry key="SFTruthTableCompileStage">Truth table compile</entry>
    <entry key="SFSTTCompileStage">State transition table compile</entry>
    <entry key="SFPaletteStateTransitionTable">State Transition Table</entry>
    <entry key="SFPaletteHistory">History Junction</entry>
    <entry key="SFPaletteAnnotation">Annotation</entry>
    <entry key="SFPaletteImage">Image</entry>
    <entry key="SFPaletteData">Data</entry>
    <entry key="SFPaletteEvent">Event</entry>
    <entry key="SFPaletteTruthTableAddRow">Add Row</entry>
    <entry key="SFPaletteTruthTableAddColumn">Add Column</entry>
    <entry key="SFPaletteTruthTableViewAutoGenContent">View Auto-generated Content</entry>
    <entry key="SFPaletteTruthTableRunDiagnostics">Run Diagnostics</entry>
    <entry key="SFPaletteTruthTableCompactTable">Compact Selected Table</entry>

    <!-- Tool items -->
    <entry key="SFCreateConnector">Create Connector</entry>
    <entry key="FailedToAddUnknownStateflowObject">Failed to add unknown Stateflow object ''{0}''.</entry>
    <entry key="FailedToAddStateflowObject">Failed to add Stateflow object.</entry>

    <!-- Undo Strings -->
    <entry key="SetFontStyleUndo">Set Font Style</entry>
    <entry key="SetFontSizeUndo">Set Font Size</entry>
    <entry key="SetTextAlignmentUndo">Set Text Alignment</entry>
    <entry key="ToggleTeXCommandsUndo">Toggle TeX Commands</entry>
    <entry key="ToggleMathMLCommandsUndo">Interpret as MathML</entry>
    <entry key="SetArrowheadSizeUndo">Set Arrowhead Size</entry>
    <entry key="SetJunctionSizeUndo">Set Junction Size</entry>
    <entry key="ToggleDecompositionUndo">Toggle State Decomposition</entry>
    <entry key="ChangeExecutionOrderUndo">Change Execution Order</entry>
    <entry key="ChangeIsVariantUndo">Change IsVariant</entry>
    <entry key="ContentPreviewUndo">Content Preview</entry>

    <entry key="InsertImageUndo">Insert Image</entry>
    <entry key="PasteImageUndo">Paste Image</entry>
    <entry key="RestoreImageSizeUndo">Restore Image Size</entry>
    <entry key="RotateImageUndo">Rotate Image</entry>

    <!-- GLUE2::Editor::deliverInfoNotification -->
    <entry key="DeleteBoundaryPort">Unable to delete entry/exit port. Delete the associated entry/exit junction.</entry>

    <!--For AddMenus.m -->
    <entry key="PickADirectoryForStoringCustomPatterns">Pick a directory for storing custom patterns</entry>
    <entry key="AddPatternWarning">Add Pattern Warning</entry>
    <entry key="AddPatternError">Add Pattern Error</entry>
    <entry key="StateflowPatternIF">Stateflow Pattern: IF</entry>
    <entry key="ElseAction">Else action:</entry>
    <entry key="StateflowPatternIFELSE">Stateflow Pattern: IF-ELSE</entry>
    <entry key="StateflowPatternIFELSEIF">Stateflow Pattern: IF-ELSEIF</entry>
    <entry key="StateflowPatternIFELSEIFELSE">Stateflow Pattern: IF-ELSEIF-ELSE</entry>
    <entry key="ElseifCondition">Elseif condition:</entry>
    <entry key="ElseifAction">Elseif action:</entry>
    <entry key="StateflowPatternIFELSEIFELSEIFELSE">Stateflow Pattern: IF-ELSEIF-ELSEIF-ELSE</entry>
    <entry key="IfCondition">If condition:</entry>
    <entry key="IfAction">If action:</entry>
    <entry key="NestedifCondition">Nested-if condition:</entry>
    <entry key="NestedifAction">Nested-if action:</entry>
    <entry key="StateflowPatternNestedIF">Stateflow Pattern: Nested IF</entry>
    <entry key="InitializerExpressionindex0">Initializer expression (index=0):</entry>
    <entry key="LoopTestExpressionindexMAX">Loop test expression (index&lt;MAX):</entry>
    <entry key="CountingExpressionindex">Counting expression (index=index+1):</entry>
    <entry key="ForLoopBody"> For loop body \\'{'action\\'}':</entry>
    <entry key="StateflowPatternForindex0IndexNIndexaction"><![CDATA[ Stateflow Pattern: for(index=0; index<N; index++) '{'action'}']]></entry>
    <entry key="DoAction">Do action:</entry>
    <entry key="WhileCondition">While condition:</entry>
    <entry key="StateflowPatternWhileconditionDoAction"><![CDATA[ Stateflow Pattern: While(condition) '{'Do action'}']]></entry>
    <entry key="DescriptionColon">Description:</entry>
    <entry key="Description">Description</entry>
    <entry key="SelectACustomPattern">Select a Custom Pattern:</entry>
    <entry key="BrowsePatternsError">Browse Patterns error</entry>
    <entry key="SavePatternAs">Save Pattern As</entry>
    <entry key="SavePatternNoLink">Save Pattern</entry>
    <entry key="SaveAsPattern">Save As Pattern...</entry>

    <entry key="SwitchExpression">Switch expression</entry>
    <entry key="FirstCaseLabel">First case label</entry>
    <entry key="FirstCaseBody">First case body</entry>
    <entry key="SecondCaseLabel">Second case label</entry>
    <entry key="SecondCaseBody">Second case body</entry>
    <entry key="ThirdCaseLabel">Third case label</entry>
    <entry key="ThirdCaseBody">Third case body</entry>
    <entry key="FourthCaseLabel">Fourth case label</entry>
    <entry key="FourthCaseBody">Fourth case body</entry>
    <entry key="DefaultCaseBody">Default case body</entry>
    <entry key="StreamingMenuOptions">
      State Activity Logging
    </entry>
    <entry key="StreamChildStateActivity">
      Stream child state activity
    </entry>
    <entry key="StreamSelfStateActivity">
      Log self activity
    </entry>
    <entry key="StreamLeafStateActivity">
      Stream leaf state activity
    </entry>

    <!--Active State Logging Notifications-->
    <entry key="ASLStateMonitoringChildActivity">
      <![CDATA[
               State ''{0}'' is outputting its child activity using chart data <a href="matlab:sf('Open', {1,number,integer})">''{2}''</a>.]]>
    </entry>
    <entry key="ASLStateMonitoringSelfActivity">
      <![CDATA[
               State ''{0}'' is outputting its self activity using chart data <a href="matlab:sf('Open', {1,number,integer})">''{2}''</a>.]]>
    </entry>
    <entry key="ASLChartMonitoringChildActivity">
      <![CDATA[
               Chart ''{0}'' is outputting its child activity using chart data <a href="matlab:sf('Open', {1,number,integer})">''{2}''</a>.]]>
    </entry>
    <entry key="ASLAtomicChartMonitoringChildActivity">
      <![CDATA[
               Atomic subchart ''{0}'' is outputting its child activity using chart data <a href="matlab:sf('Open', {1,number,integer})">''{2}''</a>.]]>
    </entry>
    <entry key="ASLAtomicStateMonitoringSelfActivity">
      <![CDATA[
               Atomic subchart ''{0}'' is outputting its self activity using chart data <a href="matlab:sf('Open', {1,number,integer})">''{2}''</a>.]]>
    </entry>
    <entry key="ASLStateMonitoringLeafActivity">
      <![CDATA[
               State ''{0}'' is outputting its leaf state activity using chart data <a href="matlab:sf('Open', {1,number,integer})">''{2}''</a>.]]>
    </entry>
    <entry key="ASLChartMonitoringLeafActivity">
      <![CDATA[
               Chart ''{0}'' is outputting its leaf state activity using chart data <a href="matlab:sf('Open', {1,number,integer})">''{2}''</a>.]]>
    </entry>
    <entry key="ASLAtomicChartMonitoringLeafActivity">
      <![CDATA[
               Atomic subchart ''{0}'' is outputting its leaf state activity using chart data <a href="matlab:sf('Open', {1,number,integer})">''{2}''</a>.]]>
    </entry>


    <entry key="InvalidStateNameForASL">
      Cannot create output data for chart/state {0} because the name is invalid.
    </entry>


    <!--For sfdigmenu.cpp-->
    <entry key="AcceleratorFormat">Accelerators must be given in the form 'K' or 'Ctrl+K'.</entry>

    <!--For SFStudio.Utils.m-->
    <entry key="UnknownStateflowStateblockType">Unknown Stateflow state or block type.</entry>
    <entry key="UnknownStateflowObjectType">Unknown Stateflow object type.</entry>
    <entry key="ObjectNotContainerNode">Object must be a container node.</entry>

    <!--For SFStudio.MenuBarMenus.m-->
    <entry key="ObjectTypeNotChartOrState">Object type must be a chart or state.</entry>

    <!--Undoable menu actions-->
    <entry key="RenameStateCommand">Rename State</entry>
    <entry key="UnatomicSubchartCommand">Make Subchart Unatomic</entry>
    <entry key="AtomicSubchartCommand">Make Subchart Atomic</entry>

    <!-- Notification Bar -->
    <entry key="FirstTimeScrollZoomNotification"><![CDATA[Did you mean to scroll? To scroll/pan, press the middle mouse wheel and drag.<a href="matlab:helpview([docroot,''/toolbox/simulink/ug/simulink_ug.map''], ''zooming'', ''CSHelpWindow'');"> More information.</a>]]></entry>

    <entry key="MALNotification">
      <![CDATA[
               You are adding a chart ''{0}'' that uses MATLAB as the action language to the model.
               Click <a href= "matlab: sfprivate('open_chart_properties_from_mal_notification', {1,number, integer})">here</a> to change the action language to C.
               To change your default chart action language to C instead of MATLAB, click <a href= "matlab:sfpref('ActionLanguage','C');">here.</a>
               <a href="matlab: sfhelp('choose_action_language_syntax')">Learn more</a>]]>
    </entry>

    <entry key="ActionLanguageChangeFromCToMATLABNotification">
      <![CDATA[The action language for this chart was changed from C to MATLAB.
               Click <a href="matlab: sfprivate('launch_syntax_corrector_to_MATLAB', {0,number, integer}, {1,number,integer})">here</a> to automatically
               convert some of the syntax from C to MATLAB.]]>
    </entry>

    <entry key="SyntaxConverted">
      Converted chart to use MATLAB syntax.
    </entry>

    <entry key="LibrarySaveAsWhileModelOpenError">Cannot perform "Save As" on library while the following models are open: {0}</entry>

    <entry key="RenameStateObjectSingularNotification">
      <![CDATA[Found {0} use of {1} ''{2}'' in the chart.
               Click <a href="matlab: sfprivate('Stateflow.Refactor.refactorAllUsesOfObjectUsingOldName', {3,number,integer}, ''{4}'')">here</a> to automatically rename this use from ''{5}'' to ''{6}''.]]>
    </entry>
    <entry key="RenameStateObjectPluralNotification">
      <![CDATA[Found {0} uses of {1} ''{2}'' in the chart.
               Click <a href="matlab: sfprivate('Stateflow.Refactor.refactorAllUsesOfObjectUsingOldName', {3,number,integer}, ''{4}'')">here</a> to automatically rename these uses from ''{5}'' to ''{6}''.]]>
    </entry>

    <entry key="ExportedFunctionRenameNotification">References to exported function {0} were renamed to {1} only in this chart. Rename references to this exported function in other charts manually.</entry>


    <entry key="RenamedObjectSingular">
      Converted {0,number,integer} use of {1} from ''{2}'' to ''{3}''.
    </entry>
    <entry key="RenamedObjectPlural">
      Converted {0,number,integer} uses of {1} from ''{2}'' to ''{3}''.
    </entry>
    <entry key="RenamedBox">Invalid box name changed to {0}.</entry>
    <entry key="SdiStreamingOptionsForState">Logging for state {0}</entry>
    <entry key="SdiStreamingOptionsForChart">Logging for chart {0}</entry>
    <entry key="SdiStreamingOptionsForSTT">Logging for state table {0}</entry>
    <entry key="SdiStreamingOptionsForTT">Logging for truth table {0}</entry>
    <entry key="SdiStreamingOptionsForSeletedStates">Logging for selected states</entry>
    <entry key="SdiStreamingChildActivityMenu">Child state activity</entry>
    <entry key="SdiStreamingLeafActivityMenu">Leaf state activity</entry>
    <entry key="SdiStreamingSelfActivityMenu">Self state activity</entry>

    <!--For sfMarqueeActionConfig.m-->
    <entry key="MACreateState">Create Superstate</entry>
    <entry key="MACreateBox">Create Box</entry>
    <!--For sfSingleSelectionActionConfig.m-->
    <entry key="MAModelAdvisorWarning">Model Advisor Warning</entry>
    <entry key="MAModelAdvisorError">Model Advisor Error</entry>
    <entry key="MABreakpointAdd">Add Breakpoint</entry>
    <entry key="MABreakpointEnable">Enable Breakpoint</entry>
    <entry key="MABreakpointDisable">Disable Breakpoint</entry>
    <!--For http://inside.mathworks.com/wiki/Stateflow_Smart_Editing_R2016a#Complementary_Names_.28R2016a.2C_in_BaT.29 -->
    <entry key="ComplementaryNameCommand">Complementary Naming</entry>

    <!--Arrange Layout-->
    <entry key="InvalidInputArgForArrangeLayout">Argument must be a Stateflow object handle. </entry>
    <entry key="InvalidObjectHandleForArrangeLayout">Input must be a Stateflow chart. Type "help Stateflow.Tools.ArrangeLayoutForChart" for more details.</entry>
    <entry key="STTNotSupportedForArrangeLayout">Automatic arrangement is not supported for state transition table. </entry>
    <entry key="NumObjectsResized">Number of objects resized: {0}.</entry>
    <entry key="NumObjectsAligned">Number of objects aligned: {0}.</entry>
    <entry key="NumTransStraightened">Number of transitions straightened: {0}.</entry>
    <entry key="NumTransLabelRepositioned">Number of transition labels repositioned: {0}.</entry>
    <entry key="NoLayoutArrangement">Automatic arrangement not needed. Layout is arranged.</entry>
    <entry key="ParentChangedForObject">Object {0} changed its parent after automatic arrangement. Consider expanding its parent to contain children.</entry>
    <entry key="BadIntersectionForObject">Object {0} introduced overlapping after automatic arrangement. Consider spacing out objects to avoid overlaps.</entry>
    <entry key="ArrangeLayoutFailed">Automatic arrangement failed.</entry>
    <entry key="ArrangeLayoutPassed">Automatic arrangement succeeded.</entry>
    <entry key="FeatureNotSwitchedOn">Automatic arrangement is not enabled.</entry>
    <entry key="Grouped">Object {0} is grouped. Ungroup before automatically arranging layout.</entry>
    <entry key="ArrangeLayoutStatusBarMsg">Automatically arranging layout...</entry>
    <entry key="ArrangeLayoutUndoString">Automatically arranging layout</entry>
    <entry key="ArrangeLayoutSchemaLabel">Arrange Automatically</entry>
    <entry key="ArrangeLayoutSucceededNotification">Automatic arrangement succeeded. Click "View diagnostics" link in the status bar for more details.</entry>
    <entry key="ArrangeLayoutFailedNotification">Automatic arrangement failed. Click "View errors" link in the status bar for more details.</entry>
    <entry key="ContentIsLocked">Unable to perform automatic arrangement. Content is locked.</entry>

    <!-- Tooltips for ALC feature: http://inside.mathworks.com/wiki/SF_Action_Language_Cues -->
    <entry key="EventTooltipALC">Event name</entry>
    <entry key="MessageTooltipALC">Message name</entry>
    <entry key="EventMessageTooltipALC">Event name /\nMessage name</entry>
    <entry key="ConditionTooltipALC">Condition\n[x > 0]</entry>
    <entry key="ActionTooltipALC">Action\n'{'y = 1;'}'</entry> <!-- Escaped string, original is: Action\n{y = 1;} -->
    <entry key="SavingToSFX">Saving Stateflow chart</entry>
    <entry key="AddStateActionALC">Add state action</entry>
    <entry key="TextEditNamePrompt">Name</entry>

    <!-- Note Context Menu -->
    <entry key="ConvertToMarkup">Convert to Markup</entry>
    <entry key="ConvertToHiddenMarkup">Convert to Markup (Markup is hidden)</entry>
    <entry key="ConvertToModel">Convert to Note</entry>

    <!-- Perspectives    -->
    <entry key="PerspectivesNotForWebUI">Perspectives not available</entry>

    <!-- Variants -->
    <entry key="VariantTransitionTooltip">Variant Transition</entry>

  </message>
</rsccat>
