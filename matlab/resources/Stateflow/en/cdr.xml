<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright 2010-2024 The MathWorks, Inc. -->
<rsccat version="1.0" locale="en_US" product="Stateflow" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../../schema/msgcat.xsd">
  <message>
    <entry key="StateflowSymbol">data</entry>
    <entry key="UnknownFunctionInvoked">Unrecognized function {0}.</entry>
    <entry key="ArrayDimensionsMismatchForData">Array dimensions mismatch for data {0}.</entry>

    <entry key="IllegalMemberAccessNonExistentMemberOrNonStruct">Unsupported access to nonexistent structure or field.</entry>
    <entry key="IllegalMemberDimensionMismatch">Access array by using {0} dimensions.</entry>
    <entry key="IllegalScalarMemberAccess">Invalid indexing into scalar data.</entry>
    <entry key="InvalidDimensionAccess">Custom code variable is {0,number,integer}-dimensional, but is accessed as a {1,number,integer}-dimensional array.</entry>
    <entry key="TransitionConditionReturnsMxArray">Expression in transition condition must evaluate to logical value.</entry>
    <entry key="InvalidThisOperatorWithSimsnapshot">Unable to save operating point because chart {0} uses keyword ''this''. In the Configuration Parameters dialog, in the Data Import/Export tab, clear "Final states".</entry>
    <entry key="InvalidEdgeOperatorWithSimsnapshot">Unable to save operating point because chart {0} uses an edge detection operator. In the Configuration Parameters dialog, in the Data Import/Export tab, clear "Final states".</entry>
    <entry key="InvalidEdgeOperatorWithDisabledZeroCrossings">Unable to use edge detection operators in chart {0} because zero-crossing detection is disabled. In the Stateflow Chart dialog, select "Enable zero-crossing detection".</entry>
    <entry key="InvalidThisOperatorOutsideExtrinsicFunction">Invalid use of keyword "this" in function {0}. Use "this" only as an argument to extrinsic functions.</entry>
    <entry key="InvalidThisOperatorPrototype">Using keyword "this" as function call in {0} is not supported.</entry>
    <entry key="ThisOperatorRequiresDebugger">Enable debugging to use keyword "this" in Stateflow chart {0}.</entry>
    <entry key="CodeGenWithThisKeywordNotSupported">Stateflow chart {0} does not support code generation, rapid accelerator, or external mode simulation because it uses the keyword "this".</entry>
    <entry key="UnsupportedOperatorHDL">Use of expression {0} is not supported when coding for HDL target.</entry>
    <entry key="And">and</entry>
    <entry key="NonIntegerMatrixDeref">Indices must be expressions with integer values.</entry>
    <entry key="AbsTimeAtEvery">Using ''at'' and ''every'' as absolute-time temporal logic operators is supported only in standalone charts in MATLAB.</entry>
    <entry key="AbsTimeNotAllowed">Access to absolute simulation time ''t'' is not supported for {0}.</entry>
    <entry key="AbsTimeKeywordCannotBeUsedInThisContext">Absolute-time temporal logic operator ''{0}'' is not supported in this context.</entry>
    <entry key="AbsTimeKeywordCannotBeUsedAsFunction">Absolute-time temporal logic operator ''{0}'' is not supported as a function.</entry>
    <entry key="AbsTimeTemporalHDL">Absolute-time temporal logic operators are not supported when coding for HDL target.</entry>
    <entry key="ElapsedOperatorInHDL">Operator ''elapsed'' is not supported for HDL code generation.</entry>
    <entry key="AbsTimeTemporalSynchronous">Absolute-time temporal logic is not supported in synchronous semantics. Replace ''{0}'' with ''tick'' in temporal operators or switch the State Control block from ''Synchronous'' to ''Classic''.</entry>
    <entry key="AbsTimeOperatorSynchronous">Absolute-time temporal logic is not supported in synchronous semantics. Remove ''{0}'' operator or switch the State Control block from Synchronous to Classic.</entry>
    <entry key="AbsTimeTemporalCountOperatorPLC">Simulink PLC Coder does not support use of absolute-time temporal logic operator ''temporalCount''.</entry>
    <entry key="ParameterLinkBroken">Parameter link for {0} is broken. Fix the broken parameter link.</entry>
    <entry key="IncorrectDereference">Invalid indexing for array or structure. In charts that use C as the action language, index arrays with []. In charts that use MATLAB as the action language, index arrays with ().</entry>
    <entry key="AbsTimeTemporalHDLInAperiodicChart">Absolute-time temporal logic operators are not supported when generating HDL code for aperiodic charts.</entry>
    <entry key="AbsTimeTemporalHDLIncompatible">HDL code generation is not supported for the specified time threshold, sample time, and time units.</entry>
    <entry key="AccessOutsideAMatrix">Type computation for {0} failed.\nTrying to access outside a matrix.</entry>
    <entry key="AddressOfOperOnExpr"><![CDATA[Address-of (&) operator cannot be applied on expressions]]></entry>
    <entry key="AddressOperationError"><![CDATA[Address operator on arrays is limited to indexed array elements, e.g.  &arrayVar[index]]]></entry>
    <entry key="StructOnExpr">Accessing structures from expressions is not supported.</entry>
    <entry key="AddressOperationInAssignment">Storing the address of a Stateflow structure results in unexpected behavior.</entry>
    <entry key="AllFunctionsCalledFromPLCChartMustBeLocallyDefined">{0} function {1} detected. All functions called from a PLC chart must be locally defined.</entry>
    <entry key="AmbiguousMultiDataObjs">Ambiguous symbol ''{0}'' resolves to multiple data objects listed below:\n{1}\n\nStateflow chooses data {2} as the resolved data object.</entry>
    <entry key="ArgsToFixdtFunction">Arguments to fixdt must be numeric, character vector, or constant data.</entry>
    <entry key="ArgsToTypeMustBeData">Arguments of type must be data.</entry>
    <entry key="ArithmeticOnLhs">Arithmetic operations are not allowed on left side of an assignment.</entry>
    <entry key="ArrayIndexingWithComplexNumberError">Complex expressions unable to be used as array indices.</entry>
    <entry key="ArrayLengthTooLarge">Array data {0} unable to have total length greater than or equal to 2^31.\n</entry>
    <entry key="AvoidCombiningBitwiseOpsAndSaturate"><![CDATA[Chart containing object {0} has both C-bit operations and saturation on integer overflow enabled. To avoid unexpected results when bitwise operations produce an overflow, disable saturation on integer overflows. For more information, <a href="matlab:sfhelp('stateflow_bitwise_ops_with_saturation_rule')">click here</a>.]]></entry>
    <entry key="BadEventNameInSend">First argument of send() must be an event or message.</entry>
    <entry key="BadStateNameInSend">Second argument of send() must be a valid state name.</entry>
    <entry key="NonASCIIString">String literal contains unsupported characters. Only ASCII characters are supported.</entry>
    <entry key="BadStateNameArg">Argument of in() must be a valid state name.</entry>
    <entry key="IllegalLocalEventBroadcastToLinkedChart">Unable to broadcast local events to linked atomic subcharts. Broadcast of event {0} found in object.</entry>
    <entry key="BitwiseOperationFound">Bitwise operation {0} found in object. Use "Enable C-bit operations" chart option for bitwise operations.</entry>
    <entry key="BothInputTypesToAnArithmeticOperatorCannotBeInferred">Both input types to an arithmetic operator unable to be inferred.</entry>
    <entry key="BoxWithAttachedTransitions">Box {0} has transitions attached to it.  This is not valid.</entry>
    <entry key="BuiltinConstantOnLHS">Built in constant ''{0}'' on left hand side of an expression.</entry>
    <entry key="BuiltinMultiOutput">Stateflow built-in functions unable to be used with multiple outputs.\n</entry>
    <entry key="BusDataAsTestPoint">Bus typed data {0} unable to be set as test point.\n</entry>
    <entry key="BusLoggingModelDataLog">'ModelDataLogs' signal logging format is not supported with bus data {0}.\n</entry>
    <entry key="BusTypeCannotHaveNonzeroInitVal">Stateflow data {0} of bus type unable to have initial value other than ''0''.\n</entry>
    <entry key="BusTypeNotImportedWithSimGenImportedTypeDefs">Custom code settings contain a structure type with the name ''{0}''. Disable the configuration parameter ''Generate typedefs for imported bus and enumeration types'' and specify the header file name for the bus type ''{0}''.</entry>
    <entry key="BoundedVariableSizeOfBuses">Data {0} is a bounded variable-size matrix of buses. This is not supported in MATLAB Function blocks and Stateflow.</entry>
    <entry key="IncludesBoundedVarSizeAOB">Data {0} is a structure whose fields contain a bounded variable-size array of buses. This is not supported in MATLAB Function blocks and Stateflow.</entry>
    <entry key="IncludesAOBwithBoundedVarSize">Data {0} includes an array of buses with variable-size elements. This is not supported in MATLAB Function blocks and Stateflow.</entry>
    <entry key="UnknownTypeCustomCodeVarUsed">Expression with unknown type. If the expression contains a custom code variable, enable the configuration parameter ''Import Custom Code''.</entry>
    <entry key="VariableSizeBusField">Bus ''{0}'' contains a scalar field ''{1}'' which has variable size.  This is not supported.</entry>
    <entry key="CallCycleDetectedAmongFunctions">Call cycle detected among the following functions: {0}.</entry>
    <entry key="CallCyclesAreProhibitedInProduct">\nCall cycles are prohibited for $PRODUCT$.</entry>
    <entry key="CallToEMLWithVarargin">Stateflow can not call MATLAB function {0} because it has varargin in its parameter list.\n</entry>
    <entry key="CallToFunctionWithUnknownInputTypeFunction">Call to a function with unknown input type.</entry>
    <entry key="CallToFunctionWithUnknownOutputTypeFunction">Call to a function with unknown output type.</entry>
    <entry key="CallToUnsupportedExternalFunctionDetected">Call to unsupported external function ''{0}'' detected.</entry>
    <entry key="CallToUnsupportedFunctionDetected">Call to unsupported function ''{0}'' detected.</entry>
    <entry key="CallToUnsupportedMatlabFunctionDetected">Call to unsupported MATLAB function ''{0}'' detected.</entry>
    <entry key="CanOnlyBindLocalOutputData">Unable to bind data {0} which is neither local nor chart output data.</entry>
    <entry key="CanOnlyBindLocalOutputEvents">Unable to bind event {0} which is neither local nor chart output event.</entry>
    <entry key="CannotBindExportedFcn">Unable to bind an exported function {0}.</entry>
    <entry key="CannotChangeTransInsideGroupedState">Unable to change transitions inside a grouped state or a grouped graphical function.</entry>
    <entry key="CannotDeriveStructureParameterDataType">Type computation for {0} failed.\nDeriving types for/from structure parameter data is not supported.</entry>
    <entry key="CannotDisallowDirectFeedthrough">Property ''Allow direct feedthrough'' is not allowed for MATLAB Function {0}, but Simulink is not able to enforce this constraint.</entry>
    <entry key="CannotMoveDestAcrossSubviewer">Unable to move destination across a subviewer boundary.</entry>
    <entry key="CannotMoveSourceAcrossSubviewer">Unable to move source across a subviewer boundary.</entry>
    <entry key="ChangeDetectionHDL">Change detection operators not supported when coding for HDL target.</entry>
    <entry key="CharConstantIsNotAllowedInPLC">Char constant in {0} is not allowed in PLC.</entry>
    <entry key="ChartInputOnLHS">Chart Input data {0} on left hand side of an expression.</entry>
    <entry key="ChartOnLHS">Chart {0} ''{1}'' on left hand side of an expression.</entry>
    <entry key="ChartSampleTimeCannotBeContinuous">Runtime value of chart sample time {0} unable to be set to 0.0 (continuous). Change the update method to continuous time for chart {1}.</entry>
    <entry key="ChartSampleTimeCannotBeNegative">Runtime value of chart sample time {0} unable to be negative. Change the update method to inherited for chart {1}.</entry>
    <entry key="InvalidSampleTimeOffset">Invalid sample time for {0}. Specify sample time as a scalar or a vector of length 2.</entry>
    <entry key="ChartSampleTimeOffsetExecAtInitTemporal">Temporal logic operators are not supported in state {0} or any of its outgoing transitions because it is the destination of a default transition, the sample time offset is non-zero, and the 'Execute (enter) chart at initialization' chart property is enabled.</entry>
    <entry key="ChartInvalidDiscreteSampleTime">Invalid sampling period ''{0}'' for chart {1}. Sampling period must be a finite positive value.</entry>
    <entry key="ChartInvalidDiscreteSampleTimeOffset">Invalid initial time offset ''{0}'' for chart {1}. The initial time offset must be a finite non-negative value that is less than the sampling period.</entry>
    <entry key="ChartWithInputEventsNeedsInheritedSampleTime">Chart {0} needs to have inherited sample time in order to be driven by input events.\n</entry>
    <entry key="ClassdefNotAnEnumeration">Data {0}: contains an unsupported enumeration. For the MATLAB Function block, enumerations must inherit from one of: ''int8'', ''uint8'', ''int16'', ''uint16'', ''int32'', or ''Simulink.IntEnumType''.</entry>
    <entry key="CoderInvalidSimulinkStateInPLCCoder">Invalid use of Simulink based state {0} in chart with Simulink PLC Coder.</entry>
    <entry key="ComplexConstantIsNotAllowedInPLC">Complex constant in {0} is not allowed in PLC.</entry>
    <entry key="ComplexityPropagationIllegalInheritance">Complexity for {0} {1} may not be inherited.</entry>
    <entry key="SubchartDataSizeMismatch">Specified size of data {0} from {1} does not equal to the inferred or specified size of its mapped expression {2}. Change the size of data {0} to match the size of expression {2}.</entry>
    <entry key="ComplexityPropagationIllegalInputDataComplexity">Unable to determine complexity for input data {0}.</entry>
    <entry key="ConstantDataCannotHaveEnumType">Data {0} is enumerated and enumerated data are not permitted for constant scoped data.</entry>
    <entry key="ConstantOnLHS">Constant or Parameter data {0} on left hand side of an expression.</entry>
    <entry key="ContentOfConst">You can only use the ''*'' operator to dereference the contents of a custom code data expression.</entry>
    <entry key="ContextSensitiveConstantsCanOnlyBeUsedInSpecificOperators">Context-sensitive constants can only be used as operands to operators such as ''+'',''-'', etc.</entry>
    <entry key="CustomCodeIncludeDirTokenizeWarning">Extracting include directories from the Simulation Target pane in the Configuration Parameters failed. {0}</entry>
    <entry key="CyclicTypeDefinition">Type computation for {0} failed\nThe definition is part of a cycle with {1}.</entry>
    <entry key="CompiledTypeBackPropagationError">Compiled type {0} for data {1} does not match back propagated type {2} from Simulink.</entry>
    <entry key="CompiledSizeBackPropagationError">Compiled size {0} for data {1} does not match back propagated size {2} from Simulink.</entry>
    <entry key="DataBackPropagationSizeSuffix">Inferred size (''{0}'') for data {1} does not match back propagated size (''{2}'') from Simulink. {3}</entry>
    <entry key="DataBackPropagationTypeSuffix">Inferred type (''{0}'') for data {1} does not match back propagated type (''{2}'') from Simulink. {3}</entry>
    <entry key="DataBackPropagationComplexitySuffix">Inferred complexity (''{0}'') for data {1} does not match back propagated complexity (''{2}'') from Simulink. {3}</entry>
    <entry key="DataCannotHaveFrameBasedSamplingSignal">Data {0} is unable to use frame based sampling mode. The Simulink.Signal object that this data resolves to must not have ''frame based'' sampling mode.</entry>
    <entry key="DataEventConflict">Data {0} could conflict with event {1} at a higher parent. Non-conflicting data and event names are recommended.</entry>
    <entry key="DataEventNameConflict">Name conflict for data and event. ''{0}'' is not unique in objects {1} and {2}.\n</entry>
    <entry key="DataIsOfANonIntegerType">Data {0} is of non-integer type.\nThe option ''Support floating-point numbers'' has not been set in Code Generation configuration options. Hence, only integer code/data is allowed.</entry>
    <entry key="DataTypeNotSupportedInHDL">Type of data {0} is not supported by HDL code generation.</entry>
    <entry key="ReqTableNotSupportedInHDL">Requirements Table {0} is not supported for HDL code generation.</entry>
    <entry key="VariableDimsDataInHDL">Data {0} has variable dimensions and is not supported by HDL code generation.</entry>
    <entry key="DataIsOfARestrictedType">Data {0} is of a restricted type.\n{1}.</entry>
    <entry key="DataNameConflict">Name conflict for data. ''{0}'' is not unique in objects {1} and {2}.\n</entry>
    <entry key="DataShadow">Data {0} shadows data {1} at a higher parent. Rename one object if simultaneous use is required.</entry>
    <entry key="DataTypeFor">{0}\nData type for {1}.</entry>
    <entry key="DataValueOutOfRange">Initial value ({0}) for data {1} is out of range ({2},{3}) for type {4}.</entry>
    <entry key="DataValuePrecisionLoss">Initial value ({0}) for data {1} unable to be represented exactly in its type {2}.</entry>
    <entry key="DataMaximumValueOutOfRange">Maximum value ({0}) for data {1} is out of range ({2},{3}) for type {4}.</entry>
    <entry key="DataMinimumValueOutOfRange">Minimum value ({0}) for data {1} is out of range ({2},{3}) for type {4}.</entry>
    <entry key="DeleteUnusedDataWhileSimulating">Data {0} is unable to be deleted while the model is simulating.</entry>
    <entry key="DeleteUnusedEventWhileSimulating">Event {0} is unable to be deleted while the model is simulating.</entry>
    <entry key="DeleteUnusedButLockedData">Data {0} belongs to the locked chart {1}. Unlock the chart before trying to delete this data.</entry>
    <entry key="DeleteUnusedButLockedEvent">Event {0} belongs to the locked chart {1}. Unlock the chart before trying to delete this event.</entry>
    <entry key="DirectedEventBroadcastError">Directed event broadcast using send command is valid only if the parent of event is the ancestor of destination state.</entry>
    <entry key="DivisionByZero">Type computation for {0} failed.\nDivision by zero.</entry>
    <entry key="DuplicateActivitySection">Above sections are duplicates of each other; as a result, the statements contained in this section will be executed only once. If you would like to execute these statements multiple times, specify the statements in separate sections.</entry>
      <entry key="DuplicateEnExSection">State {0} contains duplicate entry or exit sections of the form ''en,en: y++;'', or ''ex,ex: y++;''. The statements contained in this section definition will be executed only once. If you would like to execute these statements multiple times,  specify the statements in separate sections.</entry>
      <entry key="DynMatCanOnlyBeIO">Data {0} is not supported. Stateflow supports dynamic matrices only as inputs or outputs of a chart, a MATLAB function, or a Simulink function.</entry>
    <entry key="DynMatrixInAtomicSubchartFunction">Variable-size data {0} is not supported in a top-level function of an atomic subchart.</entry>
    <entry key="DynMatrixNumDimsMismatch">Initial value mismatch for data {0}, which is a variable size matrix. The data has {1,number,integer} dimensions while the supplied initial value has {2,number,integer} dimensions.</entry>
    <entry key="DynMatrixTemporalLogic">Unable to use dynamic matrices in a temporal logic expression.\n</entry>
    <entry key="DSMDataTypeAuto">Data type 'auto' not supported for Data Store Memory {0} used by {1}. Specify explicit data type in the Simulink Data Store Memory dialog box.</entry>
    <entry key="DSMDimensionUnknown">Dimensions not specified for Data Store Memory {0} used by {1}. Dimensions must be known prior to size propagation.</entry>
    <entry key="DSMSignalTypeAuto">Signal type 'auto' not supported for Data Store Memory ''{0}'' used by {1}. Specify explicit signal type in the Simulink Data Store Memory dialog box.</entry>
    <entry key="SLStringTemporalLogic">Unable to use string in a temporal logic expression.\n</entry>
    <entry key="SLStringTransitionCondition">Condition of transition {0} evaluates to a string. Use a boolean expression to specify the condition.\n</entry>
    <entry key="PrintfNeedFormatString">Specify a format string for the printf function.\n</entry>
    <entry key="DynamicMatOrMultiwordFixptMember">Stateflow supports access to dynamic matrices, multi-word fixed point data and arrays of structures only as inputs and outputs to nested MATLAB functions, MATLAB-based Truth Table functions, and Simulink functions. Direct access to a bus signal of one of these types in the C action language is not allowed in the context below:</entry>
    <entry key="DynamicMatrixAdvancedPassthruError">Stateflow supports access to dynamic matrix variables only as inputs and outputs to nested MATLAB functions, MATLAB-based Truth Table functions, and Simulink functions. Direct access to variable {0} in the C action language is not allowed in the above context.</entry>
    <entry key="DynamicMatrixPassthruError">Stateflow supports access to dynamic matrix variables only in nested MATLAB functions and MATLAB-based Truth Table functions within Stateflow. Direct access to variable {0} in the C action language is not allowed in the above context.</entry>
    <entry key="HDLCoder">HDL Coder</entry>
    <entry key="MooreChart">Moore Chart</entry>
    <entry key="DESChart">DES Chart</entry>
    <entry key="ContinuousUpdateMethod">continuous update method</entry>
    <entry key="SFIntrinsicIllegalWith">Operator ''{0}'' is not supported with ''{1}''.\n</entry>
    <entry key="SFIntrinsicIllegalIn">Operator ''{0}'' is not supported in ''{1}''.\n</entry>
    <entry key="SFIntrinsicIllegalInLink">Operator ''{0}'' is not supported in ''{1}'' ''{2}''.\n</entry>
    <entry key="SFIntrinsicBadArgument">First argument of ''{0}'' operator should be ''{1}''.\n</entry>
    <entry key="SFIntrinsicBadPrototype">Operator ''{0}'' takes one argument.\n</entry>
    <entry key="SFIntrinsicOnTransitionWithMultipleSources">Operator ''{0}'' can not be bound to more than one state.\n</entry>
    <entry key="SFIntrinsicOnDefaultTransition">Operator ''{0}'' can not be used on the default transition.\n</entry>
    <entry key="SFIntrinsicArgumentCannotContainCallTo">Call to ''{0}'' operator is not allowed in an argument to ''{1}'' operator.\n</entry>
    <entry key="SFIntrinsicImpureFunctionCall">''{0}'' in the argument of ''{1}'' must be a pure function consisting of either inputs or parameters with no side effects.</entry>
    <entry key="SFIntrinsicImpureRead">Access to variable {0} is not allowed in {1} operator because it is not chart-level data.</entry>
    <entry key="SFIntrinsicImpureReadDSMMachineLevel">Access to data store memory variable {0} is not allowed in {1} operator.</entry>
    <entry key="SFIntrinsicImpureReadDSMAtomicMapped">Access to variable {0} is not allowed in {1} operator because it is mapped to data store memory.</entry>
    <entry key="SFIntrinsicIllegalMessageAccess">Access to message {0} is not allowed within the ''{1}'' operator. The ''{1}'' operator can only access variables that are persistent.</entry>
    <entry key="SFIntrinsicBadLocalDataAccess">Data {0} is being used after access to data {1}. The ''{2}'' operator can only access one unique local or output data in its expression.
    </entry>
    <entry key="SFIntrinsicImpureReadFromFcnIO">Access to variable ''{0}'' is not allowed within argument to ''{2}'' operator because that variable is an input/output variable of the function ''{1}''.
    </entry>
    <entry key="SFIntrinsicIllegalFcnCall">Call to function ''{0}'' not allowed within the first argument of ''{1}''.
    </entry>
    <entry key="SFIntrinsicWritableDataUninitialized">Access to {0} in ''{1}'' is not allowed because {0} has local or output scope and was not given an initial value. Specify its initial value.</entry>
    <entry key="DurationBadArgument">Second argument of ''{0}'' should be an absolute time keyword ''sec'', ''msec'' or ''usec''.\n</entry>
    <entry key="DurationBadProtoType">Operator 'duration' takes one argument.\n</entry>
    <entry key="DurationHDL">HDL Coder does not support use of ''{0}''.\n</entry>
    <entry key="DurationMoore">Operator 'duration' is not supported in Moore Charts.</entry>
    <entry key="DurationNotSupportedInTTOrMALGraphicalFcn">
      The duration operator is not supported in ''{0}'' because it is either a Truth Table Function or MATLAB function.
    </entry>
    <entry key="DurationNotSupportedInTT">
      The duration operator is not supported in ''{0}'' because it is a Truth Table Function.
    </entry>
    <entry key="DurationNotSupportedInGF">
      The duration operator is not supported in ''{0}'' because it is a Stateflow Graphical Function.
    </entry>
    <entry key="DurationInCycle">Operator 'duration' is being used inside a cycle. This is not allowed.</entry>
    <entry key="DurationInCycleErrorMessage">Cycle contains a use of the duration operator. This is not allowed.</entry>
    <entry key="DurationNonLogicalExpressionUsedAsInput">First argument of ''{0}'' should be a logical/boolean expression.</entry>
    <entry key="DurationSLStringUsedAsInput">First argument of ''{0}'' unable to be a string.</entry>
    <entry key="DurationImpureFunctionCall">In the first argument of 'duration', unable to determine if ''{0}'' is a pure function consisting of either inputs or parameters with no side effects. Ensure that ''{1}'' is pure to avoid undefined results.
    </entry>
    <entry key="DurationImpureRead">Access to variable {0} is not allowed in duration operator because it is not chart-level data.</entry>
    <entry key="DurationImpureReadMachineLocal">Access to machine-level local variable {0} is not allowed in duration operator.</entry>
    <entry key="DurationImpureReadDSMMachineLevel">Access to data store memory variable {0} is not allowed in duration operator.</entry>
    <entry key="DurationImpureReadDSMAtomicMapped">Access to variable {0} is not allowed in duration operator because it is mapped to data store memory.</entry>
    <entry key="DurationIllegalMessageAccess">Access to message {0} is not allowed within the 'duration' operator. The 'duration' operator can only access variables that are persistent.
    </entry>
    <entry key="DurationBadLocalDataAccess">Data {0} is being used after access to data {1}. The duration operator can only access one unique local or output data in its expression.
    </entry>
    <entry key="DurationImpureReadFromFcnIO">Access to variable ''{0}'' is not allowed because that variable is an input/output variable of the function ''{1}''.  </entry>

    <entry key="ElapsedTimeTakesAtMostOneArgument">''{0}'' takes at most one argument, an optional absolute time keyword ''sec'', ''msec'' or ''usec''.\n</entry>
    <entry key="DurationIllegalFcnCall">Call to function ''{0}'' not allowed within the first argument of 'duration'.
    </entry>
    <entry key="DurationInTransitionActionNotAllowed">Operator 'duration' is unable to be used on condition actions nor
    transition actions on a transition.</entry>
    <entry key="DurationWritableDataUninitialized">Access to {0} in 'duration' is not allowed because {0} has local or output scope and was not given an initial value. Specify its initial value.</entry>
    <entry key="DurationMultipleSource">Operator 'duration' is unable to be bound to more than one state.</entry>
    <entry key="EdgeDetectionNonScalar">Arguments of edge detection operators must evaluate to a numeric scalar.</entry>
    <entry key="EdgeDetectionExternalMode">Edge detection in external mode is only supported on targets whose 'char' representation is 8 bits.</entry>
    <entry key="EdgeDetectionUnsupportedTarget">Edge detection operators not supported for this target.</entry>
    <entry key="EdgeDetectionBusNotSupported">Edge detection operators only support fully specified bus fields as arguments.</entry>
    <entry key="EdgeDetectionIllegalArgument">Arguments of edge detection operators must be combinations of numeric scalar literals, chart input data, constants, non-tunable parameters, and continuous-time local data.</entry>
    <entry key="EdgeDetectionIllegalOperator">Arguments of edge detection operators must be numeric scalar-valued expressions that consist of addition, subtraction, and multiplication.</entry>
    <entry key="EdgeDetectionNonConstantIndexing">Arguments of edge detection operators must be indexed by a constant expression.</entry>
    <entry key="EdgeDetectionIncorrectIndexing">Arguments of edge detection operators must be fully indexed.</entry>
    <entry key="EdgeDetectionOnLocalData">Edge detection on local data is supported only for continuous-time data in transition conditions.</entry>
    <entry key="EdgeFullySpecifiedMatrixIndices">Array indices must be fully specified in edge detection expressions.</entry>
    <entry key="EdgeDetectionWithNonTrivialMappings">To avoid undefined behavior, verify that all input data used for edge detection in atomic subchart {0} maps to inputs, constants, and non-tunable parameters in the main chart.</entry>
    <entry key="ElapsedTimeBadArgument">First argument of ''{0}'' should be an absolute time keyword ''sec'', ''msec'' or ''usec''.\n</entry>
    <entry key="ElapsedTimeOperatorPLC">Simulink PLC Coder does not support use of ''{0}''.\n</entry>
    <entry key="ElementOf">element of {0}</entry>
    <entry key="hasChangedArgsSideEffects">Arguments to change detection operators must not cause side effects.</entry>
    <entry key="EmlOpenReport"><![CDATA[Launch diagnostic <a href="{0}">report</a>.\n]]></entry>
    <entry key="EmlFcnConflictInlineFlag">Coder inline setting specified in MATLAB Function {0} conflicts with "Function Inline Option" setting on the function properties dialog. The coder inline setting specified in the script takes precedence.\n</entry>
    <entry key="EmlFcnErrorLocation">{0}\n\n<![CDATA[Function ''{1}'' (<a href="matlab:sf('Open',{2,number,integer},{3,number,integer},{4,number,integer})">#{2,number,integer}.{3,number,integer}.{4,number,integer}</a>), line {5,number,integer}, column {6,number,integer}:\n]]>"{7}"</entry>
    <entry key="EmlFcnErrorLocationWithLink">{0}\n\n<![CDATA[Function ''{1}'' (<a href="matlab:sf('Open',{2,number,integer},{3,number,integer},{4,number,integer})">#{2,number,integer}.{3,number,integer}.{4,number,integer}</a>), line {5,number,integer}, column {6,number,integer}:\n]]>"{7}"\n{8}</entry>
    <entry key="EmlPCodeFcnProducedError">{0}\n\nP-code function ''{1}'' produced an error.\n</entry>
    <entry key="EmlPCodeFcnProducedWarning">{0}\n\nP-code function ''{1}'' produced a warning.\n</entry>
    <entry key="EmlPersistentDependencyInMooreChart">{0} uses a persistent variable with handle semantics to compute output data.</entry>
    <entry key="Empty" translate="false" note="TranslateFalseBatch;"></entry>
    <entry key="InvalidMultiOutputExpr">Expression does not support multiple outputs. Use a function call instead.</entry>
    <entry key="EnumOnLhs">Enumeration value is not allowed on \nleft-hand-side of an assignment.</entry>
    <entry key="EnumValueArrayVar">Enumeration value is not allowed to be used as an array variable.</entry>
    <entry key="EnumRegistrationFailed">Use of enumeration type {0} in chart {1} is not allowed because the datatype could not be successfully registered with Simulink.</entry>
    <entry key="EnumTypeMismatchWarning">Unable to perform binary operation on enumerations of different data types {0} and {1}.</entry>
    <entry key="ErrorAllocatingMemory">Unable to allocate memory for {0}.</entry>
    <entry key="ErrorCallingSFunction">Unable to call generated SFunction {0}. {1}.</entry>
    <entry key="ErrorCompilingDataProperties">Unable to compile data properties for {0}.</entry>
    <entry key="ErrorCompilingDataSizes">Error compiling data sizes.</entry>
    <entry key="ErrorCompilingDataSizesCustom">{0}\nData size for {1}.</entry>
    <entry key="ErrorCompilingDataTypes">Error compiling data types.</entry>
    <entry key="ErrorComplexityMismatch">Stateflow data complexity {0} set on {1} is incompatible with Simulink signal type {2}.</entry>
    <entry key="ErrorEvalFixdt">Error evaluating fixdt function.</entry>
    <entry key="ErrorsDuringParamStringConstr">Errors occurred during parameters construction</entry>
    <entry key="ErrorsDuringSizeProp">Size mismatch errors occurred in shape propagation. Aborting code generation</entry>
    <entry key="ErrorFrameMismatch">{0} must have the same frame in all instances of library {1}.</entry>
    <entry key="ErrorSettingNumInputPorts">Unable to register number of inputs in {0}.</entry>
    <entry key="ErrorSettingNumOutputPorts">Unable to register number of outputs in {0}.</entry>
    <entry key="ErrorsParsingEmlFcn">Errors occurred during parsing of {0}.</entry>
    <entry key="ErrorTypeAliasMismatch">Unable to reduce type {0} for {1} to Simulink signal type {2}.</entry>

    <entry key="EvaluatedExprErrorUINT">Expression ''{0}'' for {1} of {2} {3} must evaluate to an unsigned integer.</entry>
    <entry key="EvaluatedExprErrorINT">Expression ''{0}'' for {1} of {2} {3} must evaluate to an integer.</entry>
    <entry key="EvaluatedExprErrorNotEmpty">Expression ''{0}'' for {1} of {2} {3} must not evaluate to an empty array.</entry>
    <entry key="EvaluatedExprErrorDidNotEvaluate">Unable to evaluate expression ''{0}'' for {1} of {2} {3}.</entry>
    <entry key="EvaluatedExprErrorMustEvaluateToFi">Expression ''{0}'' for {1} of {2} {3} must evaluate to fimath object.</entry>
    <entry key="EvaluatedExprErrorStructOrSimulinkParameter">Expression ''{0}'' for {1} of {2} {3} must evaluate to struct or Simulink parameter.</entry>
    <entry key="EvaluatedExprErrorSpecifiedType">Expression ''{0}'' for {1} of {2} {3} must evaluate to type {4}.</entry>
    <entry key="EvaluatedExprErrorLogicalOrNumeric">Expression ''{0}'' for {1} of {2} {3} must evaluate to logical or supported numeric type.</entry>
    <entry key="EvaluatedExprErrorNoSparseMatrices">Expression ''{0}'' for {1} of {2} {3} must not contain sparse matrices.</entry>
    <entry key="EventBroadcastCommonAncestor">Event {0} in send() must be visible to the common ancestor {1}. This behavior has changed from earlier releases. If you want to broadcast an event which is only visible in the destination scope you will need to qualify the event name with its parent: \n\t {2}</entry>
    <entry key="EventDataConflict">Event {0} could conflict with data {1} at a higher parent. Non-conflicting data and event names are recommended.</entry>
    <entry key="EventEventConflict">Event {0} shadows event {1} at a higher parent. Rename one object if simultaneous use is required.</entry>
    <entry key="EventNameConflict">Name conflict for events. ''{0}'' is not unique in objects {1} and {2} .\n</entry>
    <entry key="EventResolveError">Event {0} in send() could not be resolved within {1}, the common ancestor of the sender and receiver.</entry>
    <entry key="ExecOrderNotForDanglingTrans">ExecutionOrder unable to be set for transitions that do not connect to a state.</entry>
    <entry key="ExportedFcnIsKeyword">Exported graphical function {0} is named after a language keyword.</entry>
    <entry key="ExportedFunctionsWithNontrivialMappings">In Stateflow object {0}, exported functions that can access chart state are not supported when input/output data in the object maps to data of a different scope in the parent chart.</entry>
    <entry key="ExprCannotBeDetermined">{0} for {1} {2} of {3} {4} unable to be determined.\nVerify the {5} expression, or specify constant or inherited {6}.</entry>
    <entry key="ExternalModeBitSet">Model is configured with External mode or Rapid Accelerator mode which requires all block state data to be addressable. The parameter "Use bitsets for storing state configuration" or "Use bitsets for storing Boolean data" is turned on in the Configuration Parameters dialog box. However, these settings have been ignored because these two parameters do not work with External or Rapid Accelerator Mode.</entry>
    <entry key="ExternalSimulationNotSupportedForLocalMessages">Chart {0} contains local message {1}. External mode simulation is not supported for models with local messages.</entry>
    <entry key="FailedToCreateFile">Failed to create file: {0}.</entry>
    <entry key="FailedToSpecializationForBlock">Failed to find specialization for block {0}.</entry>
    <entry key="FailedToResolveSimulinkSignalObj">Failed to resolve data {0} to a valid Simulink.Signal object.</entry>
    <entry key="FcnCallOutputInMooreChart">Stateflow chart {0} with Moore semantics does not support output event {1}.</entry>
    <entry key="OutputTriggerInMatlabFunctionWithNondirectFeedthrough">MATLAB Function block {0} with nondirect-feedthrough does not support output trigger {1}.</entry>
    <entry key="FcnContainsSubstate">Function {0} contains substate {1}. This is not allowed</entry>
    <entry key="FcnDoesNotExist">{0}.{1} function does not exist</entry>
    <entry key="FcnDoesNotReturnValue">Function ''{0}'' does not return a value</entry>
    <entry key="FcnExpectsDynMatInputData">Argument {0,number,integer} in call to function {1}: a non-variable size matrix is being provided as input, when a variable size matrix is expected.</entry>
    <entry key="FcnExpectsNonComplexInputData">Function ''{0}'' expects a non-complex data type on its input.</entry>
    <entry key="ObjectOptimizedOut">{0} is either unused or had no side effect and has been optimized out.</entry>
    <entry key="FcnExpectsNonDynMatInputData">Argument {0,number,integer} in call to function {1}: a variable size matrix is being provided as input, when a non-variable size matrix is expected.</entry>
    <entry key="FcnMaxOutputs">Too many output arguments ({0,number,integer}) to function ''{1}''.\nThis function returns a maximum of {2,number,integer} outputs.\n</entry>
    <entry key="FcnRequiresAtLeastTwoInputArgs">Function {0} requires at least two input Arguments</entry>
    <entry key="FcnRequiresAtMostTwoInputArgs">Function ''{0}'' accepts at most two arguments</entry>
    <entry key="FcnRequiresAtMostThreeInputArgs">Function ''{0}'' accepts at most three arguments</entry>
    <entry key="FcnRequiresOneInputArg">Function ''{0}'' requires at least one input argument</entry>
    <entry key="FcnRequiresSecondArgToBeString" note="Use of word string is not in the context of a type visible to MATLAB">Function ''{0}'' requires its second argument to be a string literal</entry>
    <entry key="FcnRequiresThirdArgToBeString" note="Use of word string is not in the context of a type visible to MATLAB">Function ''{0}'' requires its third argument to be a string literal</entry>
    <entry key="FcnWrongInputArgs">Wrong number of input arguments ({0,number,integer}) to function {1}.\nThis function expects {2,number,integer} inputs.\n</entry>
    <entry key="FixdtFunctionNumArgs">Fixdt operator requires between 1 and 5 arguments.</entry>
    <entry key="FixedPointOverrideForTrueSingles">Fixed-point data type override of true singles is not supported for {0} without strong data typing enabled for Simulink IO.</entry>
    <entry key="ForceInliningInMooreChart">''Function Inline Option'' of {0} has been set to Function, which is incompatible with a Moore chart. Stateflow is overriding this option to force inlining.</entry>
    <entry key="FoundNonIntegerCode">Found non-integer code in {0}.\nMATLAB Coder will in most cases use double or single data for any intermediate\nresults.\nThe option ''Support floating-point numbers'' has not been set in the Code Generation configuration options. Hence, only integer code/data is allowed.</entry>
    <entry key="FoundNonIntegerCodeOrNear">Found non-integer code in or near {0}. MATLAB Coder will in most cases use double or single data for any intermediate results. The option ''Support floating-point numbers'' has not been set in the Code Generation configuration options. Hence, only integer code/data is allowed.</entry>
    <entry key="FunctionArgsError">Wrong number of arguments to function.</entry>
    <entry key="FunctionWithAttachedTransitions">Invalid transitions emanating from Function {0}.\n</entry>
    <entry key="GetSimulationTimeBadArgument">First argument of ''{0}'' operator should be an absolute time keyword ''sec'', ''msec'' or ''usec''.\n</entry>
    <entry key="GetSimulationTimeTakesOnlyOneArgument">''{0}'' operator takes only one argument, an absolute time keyword ''sec'', ''msec'' or ''usec''.\n</entry>
    <entry key="HasChangedIllegalOutputArg">Chart {0} has the "Initialize outputs every time chart wakes up" option selected. In this case, use of chart output {1} as the first argument to a change detection function is not supported.  Such an expression would return false at every time step.</entry>
    <entry key="HasChangedIllegalScope">Argument of {0} operator must be a chart-level Stateflow data object with scope of local, input, output, or data store memory.</entry>
    <entry key="HdlInvalidStateflowDSM">Stateflow data {0} of scope ''Data Store Memory'' is not allowed for HDL target.</entry>
    <entry key="HdlNoContinuousTimeUpdate">Chart {0} has continuous time update method selected, which is not allowed for HDL code generation.</entry>
    <entry key="HdlNoZeroCrossings">HDL Coder is unable to compile chart {0} because the chart property 'Enable zero-crossing detection' is selected.</entry>
    <entry key="HdlNonLocalFunctionDetected">{0} function ''{1}'' detected. All functions called from an HDL chart must be locally defined.</entry>
    <entry key="HdlReadFromChartOutputInEntryAction">Read from chart output {0} in entry action of state {1}.</entry>
    <entry key="HdlNoPorts">HDL Coder is unable to compile chart {0} because the chart contains entry or exit ports.</entry>
    <entry key="HexadecimalValueIsTooBig">Hexadecimal value is too big for the current embedded hardware target.</entry>

    <entry key="UnknownBusAssignmentArrayExplosionByName"><![CDATA[Imported or custom code variable ''{0}'' is assigned a bus type value, which is not allowed when using:\n<ul><li>Rapid Accelerator Mode</li><li>Simulink Real-Time</li><li>Simulink Desktop Real-Time</li><li>External Mode</li><li>Simulink Coder</li><li>HDL Verifier</li><li>HDL Coder</li></ul>\nMake the assignment target ''{0}'' a chart variable to fix this problem.]]></entry>

    <entry key="UnknownBusAssignmentArrayExplosion"><![CDATA[Chart contains an assignment of a bus type value to an imported or custom code variable, which is not allowed when using:\n<ul><li>Rapid Accelerator Mode</li><li>Simulink Real-Time</li><li>Simulink Desktop Real-Time</li><li>External Mode</li><li>Simulink Coder</li><li>HDL Verifier</li><li>HDL Coder</li></ul>\nMake the assignment target a chart variable to fix this problem.]]></entry>
    <entry key="CustomCodeBusTypeUsedInRapidAccel">Bus type ''{0}'' defined in the custom code pane is also used as a Simulink data type. This is not supported with "Rapid Accelerator" or "External Mode" simulation.</entry>
    <entry key="IllegalAccessToAtomicSubchartData">{0} is located in an atomic subchart. To access this data, either map the data to the parent chart or create a top-level function inside the atomic subchart to retrieve or set the data from the parent chart.
    </entry>
    <entry key="IllegalAddressOperatorAmp"><![CDATA[{0} has an action with illegal operator ''&''.]]></entry>
    <entry key="IllegalAddressOperatorStar">{0} has an action with unsupported operator ''*''.</entry>
    <entry key="SldvIllegalAddressOperatorAmp"><![CDATA[{0} contains an action with unsupported operator "&".
      Remove the operator or enable the configuration parameter "Import custom code".
      <a href="matlab:helpview([docroot '/simulink/helptargets.map'], 'msginfo_sf_support')">Related Documentation.</a>
        ]]>
        </entry>
    <entry key="SldvIllegalAddressOperatorStar"><![CDATA[{0} contains an action with unsupported operator "*".
      Remove the operator or enable the configuration parameter "Import custom code".
      <a href="matlab:helpview([docroot '/simulink/helptargets.map'], 'msginfo_sf_support')">Related Documentation.</a>
        ]]>
        </entry>
    <entry key="IllegalChangeDetectionContinuous">Change detection operators are not supported in continuous-time Stateflow charts.</entry>
    <entry key="IllegalChangeEvtInputMappedToSubchart">Argument to data change event function should be an output or local data which is not mapped to an atomic subchart.</entry>
    <entry key="IllegalChangeEvtInput">Argument to data change event function should be an output or local data.</entry>
    <entry key="IllegalComplexOperInCondition">Use of a complex() operator in guarding condition of transition {0} is not supported. Only real scalars are allowed in conditions.</entry>
    <entry key="IllegalComplexTypeInPLC">Complex types are not allowed in PLC.</entry>
    <entry key="IllegalFixptCSConst">Fixed-point context-sensitive constants can only be used in the presence of other typed entities.</entry>
    <entry key="IllegalMachineParentedEvent">Machine-parented event {0} is referenced in {1}. {2}</entry>
    <entry key="IllegalOpOnBooleanData">Unsupported {0} on boolean data "{1}".</entry>
    <entry key="IllegalSLHDL">{0} unable to be used for HDL.</entry>
    <entry key="IllegalSendAsExpr">send() function not supported in expressions.</entry>
    <entry key="IllegalSlFcnAndExecAtInit">Unable to call the Simulink function ''{0}'' during chart initialization. Disable the chart property ''Execute (enter) chart at initialization''.</entry>
    <entry key="IllegalActionSubsysExecAtInit">Chart {0} has the property "Execute (enter) chart at initialization" set to true and a default transition leading to Simulink based state {1}. This is not allowed.</entry>
    <entry key="IllegalImportedEventBroadcastExecAtInit">Chart {0} has the property "Execute (enter) chart at initialization" set to true and a default transition leading to an imported event broadcast. This is not allowed.</entry>
    <entry key="IllegalUseOfDSM">Data Store Memory {0} is declared in {1}. {2}</entry>
    <entry key="IllegalUseOfForwardInMooreChart">Moore chart {0} does not support uses of intrinsic function ''forward''.</entry>
    <entry key="IllegalUseOfImplicitEventInTransition">Use of implicit event in transition {0} is not allowed when the transition is parented by a chart being used as an atomic subchart.</entry>
    <entry key="ForwardFunctionMustTakeTwoArguments">Function ''forward'' must take two input arguments.</entry>
    <entry key="InvalidFirstArgumentToForward">First argument to ''forward'' function must be a message with scope ''Local'' or ''Input''.</entry>
    <entry key="InvalidSecondArgumentToForward">Second argument to ''forward'' function must be a message with scope ''Local'' or ''Output''.</entry>
    <entry key="ImplicitEventBroadcastError">Unable to broadcast implicit events like wakeup, state entry, state exit, data change and absolute time.</entry>
    <entry key="ImplicitEventWithNoSideEffect">Implicit event expression has no side-effect. It either needs to be used in an expression, or removed if deemed unnecessary.</entry>
        <entry key="ImplicitEvtFunctionInvalidArgument">Argument to implicit event operator {0} must be a state name.</entry>
    <entry key="ImportedMachineDataVarNotFoundInCCScope">Imported machine data {0} not found in custom code.</entry>
    <entry key="ImportedMachineDataNDArrayVarNotSupported">With "Simulation Target -> Import custom code" on, Stateflow C chart unable to access an imported machine data {0} which is not a scalar or vector, or which has struct field that is not a scalar or vector.</entry>
    <entry key="IndexExpressionContainsLogicalOperator">Index expression contains logical operator.</entry>
    <entry key="IndexIsNonIntegerValue">Type computation for {0} failed\nAn index was evaluated to a non integer value.</entry>
    <entry key="BadConstantAssignmentForType">Expression on the right side unable to be assigned to {0} because it does not fit in a container of type {1}.</entry>
    <entry key="BadConstantAssignmentsInChart">{0} contains invalid assignments.</entry>
    <entry key="SizeInferredValueDoesNotMatch">Inferred size (''{0}'') for data {1} does not match specified size (''{2}''). {3}</entry>
    <entry key="TypeInferredValueDoesNotMatch">Inferred type (''{0}'') for data {1} does not match specified type (''{2}''). {3}</entry>
    <entry key="ComplexityInferredValueDoesNotMatch">Inferred complexity (''{0}'') for data {1} does not match specified complexity (''{2}''). {3}</entry>
    <entry key="InferredVarMatrixTypeMismatch">{0} is inferred as a variable-size matrix, but its size is specified as inherited or fixed. Verify {0} is defined in terms of non-tunable parameters, or select the ''Variable Size'' check box and specify the upper bounds in the Size box.</entry>
    <entry key="InitValCantBeND"><![CDATA[Multidimensional (>2D) array data can only have scalar initial value. Data {0} has more than 2 dimensions and its initial value ''{1}'' evaluated to non-scalar.]]></entry>
    <entry key="InitValCantBeNDMAL">Multidimensional (>2D) array data are not supported for initial values for charts that use MATLAB as the action language.</entry>
    <entry key="InitValColsMismatch">Size mismatch in initial value. Data {0} has ''{1,number,integer}'' columns and its initial value ''{2}'' has ''{3,number,integer}'' columns</entry>
    <entry key="InitValRowsMismatch">Size mismatch in initial value. Data {0} has ''{1,number,integer}'' rows and its initial value ''{2}'' has ''{3,number,integer}'' rows</entry>
    <entry key="InitValSizeMismatch">Size mismatch in initial value. {0} has ''{1,number,integer}'' elements and its initial value ''{2}'' evaluated to a vector of ''{3,number,integer}'' elements</entry>
    <entry key="InitValSizeMismatchVector">Size mismatch in initial value. {0} is a scalar and its initial value ''{1}'' evaluated to a non-scalar.</entry>
    <entry key="InitValTypeMismatchEnum">Type mismatch in initial value. Data {0} is of enumeration type ''{1}'' and its initial value ''{2}'' evaluated to a different type.</entry>
    <entry key="InitValTypeMismatch">Type mismatch in initial value. Data {0} is set to be of type ''{1}'' and its initial value ''{2}'' evaluated to type ''{3}''.</entry>
    <entry key="InitValComplexityMismatch">Complexity mismatch in initial value. Data {0} is set to be of complexity ''{1}'' and its initial value ''{2}'' evaluated to complexity ''{3}''.</entry>
    <entry key="InitValMessagePayloadTypeMismatch">Type mismatch in initial value. Message {0} is set to be of type ''{1}'' and its initial value for data ''{2}'' evaluated to type ''{3}''</entry>
    <entry key="InitValMessageComplexityMismatch">Complexity mismatch in initial value. Message {0} is set to be of complexity ''{1}'' and its initial value ''{2}'' for data evaluated to complexity ''{3}''.</entry>
    <entry key="InitValParserSizeMismatch">Size mismatch in initial value. {0} is set to be of size ''{1}'' and its initial value ''{2}'' evaluated to size ''{3}''.</entry>
    <entry key="InitialValueForDataEvalFailed">Error evaluating {0} in base workspace for data initialization</entry>
    <entry key="InputDependencyInEnhancedMooreChart"><![CDATA[Output data or events of chart {0} cannot depend on input data {1}, because this violates <a href="matlab:sfhelp(''moore_charts_semantics'')">Moore chart semantics</a>.]]></entry>
    <entry key="InputDependencyInMATLABFunctionBlock"><![CDATA[Output variables of MATLAB Function {0} cannot depend on input data {1}, because the ''Allow direct feedthrough'' property has been disabled for this block.]]></entry>
    <entry key="InternalError">Type computation for {0} failed\nInternal error.</entry>
    <entry key="InternalErrorDuringTranslation">Type computation for {0} failed\nInternal error during translation.</entry>
    <entry key="IntOnlyGenericErr">Constant in the following expression is not an integer. If you need a fixed-point constant use the suffix ''C'' (e.g. 3.2C). The option ''Support floating-point numbers'' has not been set in Code Generation configuration options. Hence, only integer code/data is allowed.</entry>
    <entry key="IntOnlyComplexErr">Complex constant in the following expression is not an integer. If you need a fixed-point constant use the suffix ''C'' (e.g. 3.2C). The option ''Support floating-point numbers'' has not been set in Code Generation configuration options. Hence, only integer code/data is allowed.</entry>
    <entry key="IntOnlyMatrixErr">Matrix constant in the following expression is not an integer.  If you need a fixed-point constant use the suffix ''C'' (e.g. 3.2C).  The option ''Support floating-point numbers'' has not been set in Code Generation configuration options. Hence, only integer code/data is allowed.</entry>
    <entry key="ConstantNotSupportedInHDL">Following constant expression is not supported by HDL code generation. Use integer constants, fixed point constants with suffix ''C'' (e.g. 3.2C), or enable the ''Support floating-point numbers'' in Code Generation configuration options to use floating point constants.</entry>
    <entry key="IntOnlySingleDouble">Constant ''{0}'' in the following expression is not an integer. If you need a fixed-point constant use the suffix ''C'' ({1}C). The option ''Support floating-point numbers'' has not been set in Code Generation configuration options. Hence, only integer code/data is allowed.</entry>
    <entry key="InvalidAccessToAtomicSubchartInChartInit">Unable to access input data or data store memory objects in the entry action of the atomic subchart {0} during chart initialization. Disable the chart property ''Execute (enter) Chart At Initialization''. Alternatively, restructure the chart to avoid executing the atomic subchart during initialization.</entry>
    <entry key="InvalidArithExprInDefaultTrans">Arithmetic expression found in {0}. {1}</entry>
        <entry key="OutVarAssignNotAllowedClockDrivenOutput">When the HDL block property "ClockDrivenOutput" is enabled, assignment to output variables is not supported in any state or transition executed at chart initialization.</entry>
    <entry key="InvalidArithExprInDefaultTransOfState">Arithmetic expression found in entry action of {0}. {1}</entry>
    <entry key="InvalidArithExprInDefaultTransDetails">All actions reachable from the default transition of the chart executed at hardware reset/initialize. Such actions must be assignments from a static expression or initialized data. In particular, no arithmetic expressions are allowed.</entry>
    <entry key="InvalidArrayAccessBuiltin">Invalid array access for built-in constant object ''{0}''</entry>
    <entry key="InvalidCastToAggregateType">Cast to aggregate data type is not allowed</entry>
    <entry key="InvalidBooleanBusType">Boolean data {0} does not support complex values. Set the data property 'Complexity' to 'Off'.</entry>
    <entry key="InvalidBoundObjAccess">{0} is bound to state {1} but is used in {2}. You can only write or call {0} from {1} or its children and their transitions.</entry>
    <entry key="InvalidComplexBusType">Structure {0} does not support complex values. Set the data property 'Complexity' to 'Off'.</entry>
    <entry key="InvalidComplexNotation">Complex number notation such as 1+2i is not supported in Stateflow. Use the functional form equivalent such as complex(1,2).</entry>
    <entry key="InvalidConditionWithTrailingSemicolon">Invalid condition {0} with trailing semicolon.\n</entry>
    <entry key="InvalidCycleJunctionWithTransAction">Junction {0} is part of a cycle and is preceded by transition actions\n  on some of the transition segments leading to this junction.\n This is not allowed.\n</entry>
    <entry key="InvalidMessageAccessInChartInit">Unable to access output message {0} during chart initialization. Disable the chart property ''Execute (enter) chart at initialization''.</entry>
    <entry key="InvalidDSMAccessInChartInit">Unable to access data store memory {0} during chart initialization. Disable the chart property ''Execute (enter) chart at initialization''.</entry>
    <entry key="InvalidInplaceDataAccessInChartInit">Unable to access in-place data {0} during chart initialization. Disable the chart property ''Execute (enter) chart at initialization''.</entry>
    <entry key="InvalidDataComputationForExecAtInit">Unsupported data access or computation during chart initialization. Disable the chart property ''Execute (enter) chart at initialization''.</entry>
    <entry key="InvalidDataType">Can't resolve data type for parameter data {0}, make sure parameter has Simulink supported type and value. \n</entry>
    <entry key="InvalidDataName">Invalid data name ''{0}'' in object {1}.\n</entry>
    <entry key="InvalidDefaultTransition">Invalid default transition {0}.\n</entry>
    <entry key="InvalidDerivedBusType">Derived output was of type {0}. ''Inherited type'' is unsupported for this type and a defined bus object must be used instead.\n Click on {1} and set data type for ''{2}'' to be ''Bus: &lt;object name&gt;'', where ''&lt;object name&gt;'' is the name of a bus object from the MATLAB workspace.</entry>
    <entry key="InvalidDerivedBusTypeFromInitValue">Initial value of {0} is a structure and ''{1}'' type is unsupported for this initial value. Use a defined bus object instead.\n Click on {0} and set data type to be ''Bus: &lt;object name&gt;'', where ''&lt;object name&gt;'' is the name of a bus object.</entry>
    <entry key="InvalidEnumComplexType">Enumerated data {0} does not support complex values. Set the data property 'Complexity' to 'Off'.</entry>
    <entry key="InvalidEnumType">Unrecognized enumeration data type ''{0}'' at {1}.</entry>
    <entry key="InvalidEnumType2"> ''{0}'' is not a valid enumerated data type name.</entry>
    <entry key="InvalidEnumType3">Unrecognized enumeration data type ''{0}'' in {1}. Check that the first occurrence of this symbol is not guarded by coder.target.</entry>
    <entry key="InvalidExtrinsicFcnName"> Function ''{0}'' reserved for Stateflow messages. Unable to be declared using 'coder.extrinsic'.</entry>
    <entry key="InvalidEventName">Invalid event name ''{0}'' in object {1}.\n</entry>
    <entry key="InvalidExportedGraphicalFcnInChartInit">Unable to call exported graphical function ''{0}'' during chart initialization. Disable the chart property ''Execute (enter) chart at initialization''.</entry>
    <entry key="InvalidFcnCallAndEdgeTriggeredInputEvents">Chart {0} has both function call triggered and edge triggered input events. This is not allowed.\n</entry>
    <entry key="InvalidFirstArgToMLFcn" note="Only relevant to C charts">First argument of ml() function is not a string.</entry>
    <entry key="InvalidInTransitionsOnBox">Invalid transitions ending on Box {0}.\n</entry>
    <entry key="InvalidIncomingTransitionsOnFcn">Invalid transitions ending on Function {0}.\n</entry>
    <entry key="InvalidInferredSize">Inferred size for data {0} is empty, which is invalid for a Simulink signal.</entry>
    <entry key="InvalidInferredSizeParameter">Inferred size for data {0} is empty, which is invalid for a block parameter.</entry>
    <entry key="InvalidInputDataAccessInChartInit"><![CDATA[Unable to access chart input data {0} during chart initialization. Disable the chart property ''Execute (enter) chart at initialization'' or <a href= "matlab: sfprivate(''openConfigParamsSFDiagnostics'',{1,number,integer})">configure the diagnostic</a>.]]></entry>
    <entry key="InvalidJunctionPartOfCycleNoDefaultPath"><![CDATA[Junction {0} does not have an unconditional escape path from a cycle to a state or terminating junction. To see possible solutions, <a href="matlab:openExample('stateflow/FixCycleErrorExample')">open this example</a>.]]></entry>
    <entry key="InvalidMLTypeForRTW">Data {0} unable to be of MATLAB type for code generation target.\n</entry>
    <entry key="RTWExtrinsicFcnCallInputArgument">Invalid argument to extrinsic function call. In rapid accelerator mode, use scalars of type double, strings, the operator ''this'', extrinsic data, or non-extrinsic function calls that return scalars of type double.</entry>
    <entry key="RTWExtrinsicDataAssignment">In rapid accelerator mode, extrinsic data must be assigned a value from an extrinsic function call.</entry>
    <entry key="RTWExtrinsicFcnCallInIllegalStmt">Invalid extrinsic function call. In rapid accelerator mode, extrinsic functions are not supported as arguments to other functions or in arithmetic operations, ''if'' blocks, or transition conditions.</entry>
    <entry key="RTWExtrinsicFcnCallOutputArgument">Invalid output from extrinsic function call. In rapid accelerator mode, extrinsic function calls must return scalars of numeric or ''ml'' type.</entry>
    <entry key="RTWExtrinsicFcnCallInMultiOutputCallExpr">In rapid accelerator mode, extrinsic function calls are not supported for multi-output function calls.</entry>
    <entry key="RTWExtrinsicFcnCallNotAllowedAsArgument">In rapid accelerator mode, using the output of an extrinsic function as an argument to another function call is not supported.</entry>
    <entry key="InvalidMlComplexType">Data {0} of type ml does not support complex values. Set the data property 'Complexity' to 'Off'.</entry>
    <entry key="InvalidName"><![CDATA[Invalid name {0}. Please refer to <a href="matlab:sfhelp('stateflow_naming_rules')">this documentation</a>.\n]]></entry>
    <entry key="InvalidNameCorrected"><![CDATA[Name of {0} has been auto-corrected to ''{1}''. Please refer to <a href="matlab:sfhelp('stateflow_naming_rules')">this documentation</a>.\n]]></entry>
    <entry key="InvalidObjInBindList">Invalid object ''{0}'' specified in bind list.</entry>
    <entry key="InvalidObjectInType">Invalid object used to specify type.</entry>
    <entry key="InvalidOutTransitionsOnBox">Invalid transitions emanating from Box {0}.\n</entry>
    <entry key="InvalidSize">Size computation for {0} failed\nSize did not resolve to a valid size.</entry>
    <entry key="InvalidTunableParamDataAccessInChartInit">For HDL code generation, access to tunable parameter {0} is not supported when Chart has ''Execute (enter) chart at initialization'' enabled.</entry>
    <entry key="InvalidType">Type computation for {0} failed\nType did not resolve to a valid type.</entry>
    <entry key="InvalidTypeToAbsFcn">Stateflow only supports integer, fixed-point and floating point arguments for the ABS function.</entry>
    <entry key="JunctionNoIncomingTransitions">Junction {0} has no incoming transitions.</entry>
    <entry key="LexBadImplicitTriggerEvent">{0}\nBad implicit trigger event ''{1}''.{2}</entry>
    <entry key="LexBadStateActionLabel">{0}\nBad state action label ''{1}''.{2}</entry>
    <entry key="LexBadStateActionLabelIllegalEvent">{0}\nBad state action label ''{1}''. Unsupported Stateflow event name.{2}</entry>
    <entry key="LexEntryEventListenersForAtomicSubchartNotSupported">{0}\nEntry event listeners for atomic subcharts are currently not supported.{1}</entry>
    <entry key="LexEnumerationStringMemberOfMultipleTypes">{0}\nThe enumeration literal ''{1}'' is a member of multiple enumeration types ''{2}'' and ''{3}''. Use the fully qualified notation ''{4}.{5}'' or ''{6}.{7}'' to resolve this ambiguity.{8}</entry>
    <entry key="LexErrorPositionMessage">\n\nOccurred in {0}, line {1,number,integer}.</entry>
    <entry key="LexFunctionNameNotStateflowFunction">{0}\nFunction named ''{1}'' is not a Stateflow Function.{2}</entry>
    <entry key="LexIllegalBuiltinDataInImplicitChangeEvent">{0}\nBuilt-in data {1} is not supported for implicit data change events.{2}</entry>
    <entry key="LexIllegalCustomDataInImplicitChangeEvent">{0}\nCustom data {1} is not supported for implicit data change events.{2}</entry>
    <entry key="LexIllegalImplicitEntryEvent">{0}\nImplicit entry event can only be defined for states.{1}</entry>
    <entry key="LexIllegalImplicitExitEvent">{0}\nImplicit exit event can only be defined for states.{1}</entry>
    <entry key="LexInvalidStateName">{0}\nInvalid state name ''{1}''.{2}</entry>
    <entry key="LexMaxHexNumberExceeded">{0}\nExceeded maximum hexadecimal value.{1}</entry>
    <entry key="LexMaxIntNumberExceeded">{0}\nExceeded maximum integer value.{1}</entry>
    <entry key="LexMissingMatchingEndC">{0}\nMissing matching end of C-style comment.{1}</entry>
    <entry key="LexNewlineInString">{0}\nNewline in {1}</entry>
    <entry key="LexNonLocalScopeOfQualifiedEventName">{0}\nScope of qualified event named ''{1}'' is not local.{2}</entry>
    <entry key="LexQualifiedFunctionNameNotStateflowFunction">{0}\nQualified function named ''{1}'' is not a Stateflow Function.{2}</entry>
    <entry key="LexSymbolNotStateflowName">{0}\nSymbol ''{1}'' is not a Stateflow name.{2}</entry>
    <entry key="ParserSymbolNotStateflowName">Symbol ''{0}'' is not a Stateflow name.</entry>
    <entry key="LexSyntaxError">{0}\nSyntax error.{1}</entry>
    <entry key="LexUnknownStateName">{0}\nUnknown state name ''{1}''.{2}</entry>
    <entry key="LexUnparentedDataName">{0}\nData name ''{1}'' with no parent.{2}</entry>
    <entry key="LexUnparentedEventName">{0}\nEvent name ''{1}'' with no parent.{2}</entry>
    <entry key="LexUnparentedFunctionName">{0}\nFunction name ''{1}'' with no parent.{2}</entry>
    <entry key="LexUnresolvedDataName">{0}\nUnresolved data name ''{1}''.{2}</entry>
    <entry key="LexUnresolvedEventName">{0}\nUnresolved event name ''{1}''.{2}</entry>
    <entry key="LexUnresolvedFunctionName">{0}\nUnresolved function name ''{1}''.{2}</entry>
    <entry key="LexUnterminatedString">{0}\nUnterminated string.{1}</entry>
    <entry key="LexVagueDataName">{0}\nVague data name ''{1}'' with more than one candidate.{2}</entry>
    <entry key="LexVagueEventName">{0}\nVague event name ''{1}'' with more than one candidate.{2}</entry>
    <entry key="LexVagueFunctionName">{0}\nVague function name ''{1}'' with more than one candidate.{2}</entry>
    <entry key="LexVagueStateName">{0}\nVague state name ''{1}'' with more than one candidate.{2}</entry>
    <entry key="LabelSectionSyntaxErrors">Label string in {0} contains syntax errors.</entry>
    <entry key="LabelSectionIllegalMooreAccess">Property ''{0}'' is not supported in Moore charts. Access state actions using property 'MooreAction'.</entry>
    <entry key="LabelSectionIllegalClassicAccess">Property 'MooreAction' is supported only in Moore charts.</entry>
    <entry key="LHSOfAnAssignmentEnumeratedMustHaveRHSOfSameType">When the left-hand side of an assignment is enumerated, the right-hand side must be the same type. Consider an explicit cast.</entry>
    <entry key="LiteralConstMustBeNumeric">Literal constant must be numeric</entry>
    <entry key="LockedParentDataCreation">Unable to add data to a locked or iced parent.</entry>
    <entry key="LockedParentEventCreation">Unable to add event to a locked or iced parent.</entry>
    <entry key="MLVarAssignmentTypeMismatch">Data of type ''ml'' must be assigned values from the MATLAB workspace or from a MATLAB function.</entry>
    <entry key="MachineParentedData">Use the Upgrade Advisor to convert machine-parented data {0} to chart-parented data store memory.</entry>
    <entry key="MachineParentedDataCannotHaveBusType">Machine parented data {0} unable to have bus type.\n</entry>
    <entry key="ClassDataMustBeLocal">SFX Class data {0} can only be used as local data.\n</entry>
    <entry key="MachineParentedDataCannotHaveEnumType">Data {0} is enumerated and enumerated data are not permitted in machine scope.</entry>
    <entry key="MatrixConstantIsOfComplexType">Matrix constant in {0} is of complex type.</entry>
    <entry key="MatrixOutputFromCustomCodeFcn">Unsupported assignment from a custom code function to a matrix or vector data.</entry>
    <entry key="MatrixSizeExceedsIntegerRange">Matrix size exceeds integer range</entry>
    <entry key="MatrixIndexOutRange">Index for dimension {2} must be an integer between {0} and {1}.</entry>
    <entry key="MatrixIndexOutRangeUnknownLimits">Subscript [{0}] is out of range for matrix {1}.</entry>
    <entry key="MatrixToUnknownTypeAssign">Unsupported assignment from a matrix type to an unknown type (possibly due to custom code symbols on the LHS).</entry>
    <entry key="MealyOnlyConditionActions">Unsupported action in {0}. In a Mealy chart, only condition actions on transitions are allowed.</entry>
    <entry key="MismatchInSimAndRtwBecauseOfMissingDataType">{0} {1} has an {2,number,integer} bit data type. However the ''Hardware Implementation'' section of Configuration Parameters has no {3,number,integer} bit data type.\n This may cause simulation results to not match code generation results in case the {4,number,integer}-bit computation overflows.</entry>
    <entry key="MismatchNumInputArgs">Mismatch in number of input arguments \nfor function {0}: Expected={1,number,integer} Actual={2,number,integer}.</entry>
    <entry key="MismatchNumOutputArgs">Mismatch in number of output arguments \nfor function {0}: Expected={1,number,integer} Actual={2,number,integer}.</entry>
    <entry key="MissingTriggeringEvent">Conditional notation in {0} of {1} does not have a base event. In a Discrete Event chart, a conditional notation must have a base event.</entry>
    <entry key="MixingDynMatAndNonDynMat">Mixing of static and variable size matrices is not supported.</entry>
    <entry key="ModelCompilationFailed">Model compilation failed.</entry>
    <entry key="MooreMachineSemanticsViolation">Violation of Moore chart semantics has been detected.</entry>
    <entry key="MultipleInputEventsInMooreChart">Multiple input events are disallowed in Moore chart {0}.</entry>
    <entry key="MultipleInputEventsInMATLABFunctionBlock">Multiple input events are disallowed in MATLAB Function {0} with non-direct feedthrough.</entry>
    <entry key="MultipleOpersOnRhsOfColonAssign">Right-hand-side of colon-equal (:=) in the object {0} has more than one operator.\n The type-rules corresponding to the colon-equal (:=) apply only \n to the first operator and not the entire expression.\n In order to get the full benefit of the colon-assignment,  \n you need to break it up into multiple colon-assignments with a single operator each.</entry>
    <entry key="SameObjectBountToAStateMultipleTimes">{0} is bound to state {1} multiple times. This is not supported.</entry>
    <entry key="MultipleStatesBoundToSameObj">{0} is bound to multiple states {1} and {2}. This is not supported.</entry>
    <entry key="MultiwordDataCanOnlyBeIO">Stateflow supports multi-word fixed point data only as inputs or outputs of a chart, a MATLAB function, or a Simulink function. As a result, data {0} is not supported.</entry>
    <entry key="MultiwordFixptPassthruError">Stateflow supports access to multi-word fixed point variables only as inputs and outputs to nested MATLAB functions, MATLAB-based Truth Table functions, and Simulink functions. Direct access to variable {0} in the C action language is therefore not allowed in the above context.</entry>
    <entry key="MultiwordTypeInCustomCode"><![CDATA[Custom code {0} has a data type which is not supported for the current target. Select <a href= "matlab: sfprivate(''openConfigAndHighlightSupportLonglong'',{1,number,integer})">Support long long.</a>]]></entry>
    <entry key="NameCollisionsOrInvalidNames">Name collisions or invalid data/event names detected</entry>
    <entry key="NameNotUnique">Name ''{0}'' is not unique in objects {1} and {2}.\n</entry>
    <entry key="NamespaceForIdentifier">{0} namespace not allowed for an identifier.</entry>
    <entry key="NamespaceOnLHS">{0} namespace unable to exist on the left hand side.</entry>
    <entry key="NegativeWordLength">Invalid word length specified for data {0}.</entry>
    <entry key="NoAfterAllowed">Temporal logic operator ''after'' is implied in {0} of {1}. In a discrete event chart, ''after'' is not supported in the event notation of a transition when the transition has a conditional notation.</entry>
    <entry key="NoBeforeAllowedOnTransition">Temporal logic operator ''before'' is implied in {0} of {1}. In a discrete event chart, ''before'' is not supported in the event notation of a transition.</entry>
    <entry key="NoBeforeAllowedOnState">Temporal logic operator ''before'' is implied in {0} of {1}. In a discrete event chart, ''before'' is not supported in the event notation of a state action.</entry>
    <entry key="NoDataChangeEventsAllowed">Data change event for data {0} implied in {1}. {2}</entry>
    <entry key="NoDuringActionAllowed">''during'' action in {0} of {1} is not supported in a discrete event chart.</entry>
    <entry key="NoEntryEventsAllowed">Entry event for state {0} implied in {1}. {2}</entry>
    <entry key="NoExitEventsAllowed">Exit event for state {0} implied in {1}. {2}</entry>
    <entry key="NoLocalEventsAllowed">Local event {0} is declared in {1}. {2}</entry>
    <entry key="NoInputEventsAllowed">Input event {0} is implied in {1}. Input events are not supported in a discrete event chart.</entry>
    <entry key="NonDataObjectInTypeDefinition">Type computation for {0} failed\nNon-data object used in type definition: {1}</entry>
    <entry key="NoOutputEventsAllowed">Output event {0} is implied in {1}. Output events are not supported in a discrete event chart.</entry>
    <entry key="NoSaveToBaseWorkSpace">Unable to save the final value of data {0} to workspace because the base type is not supported by MATLAB.</entry>
    <entry key="NoTickOrWakeupAllowed">''tick'' or ''wakeup'' event is implied in {0} of {1}. Implicit ''tick'' or ''wakeup'' event is not supported in a Discrete Event chart.</entry>
    <entry key="NoUnconditionalDefaultTransition"><![CDATA[{0} {1} has no unconditional default path to a {2}.\nThis may lead to a state inconsistency error during runtime. You can also configure the diagnostic by clicking<a href= "matlab: sfprivate(''openConfigParamsSFDiagnostics'',{3,number,integer})"> here.</a>]]></entry>
    <entry key="NotOneDefaultPathToEntry">{0} {1} has no default paths to a {2}.\nThis will lead to a state inconsistency error because of no active {3} at runtime.</entry>
    <entry key="NodeContainsCodeNotSupportedInHDL">Expression contains variable sizes or types that are not supported by HDL code generation.</entry>
    <entry key="NodeContainsNonIntegerCode">Following expression contains non-integer code.\nThe option ''Support floating-point numbers'' has not been set in Code Generation configuration options. Hence, only integer code/data is allowed.</entry>
    <entry key="NonIntegerCodeVariables">Found non-integer code/variables.\nThe option ''Support floating-point numbers'' has not been set in Code Generation configuration options. Hence, only integer code/data is allowed.\n\nYou can turn off the non-integer code error messages by running this command:\nsf(''feature'', ''Non Integer Code Error'', ''off'')</entry>
    <entry key="NonRealCodeVariables">Found complex code/variables.\nThe checkbox ''Support : complex numbers'' has not been set in Configuration Parameters > Code Generation > Interface pane. Hence, only real code/data is allowed.</entry>
    <entry key="ObjectContainsAnExpressionOfARestrictedType">{0} contains an expression of a restricted type.\n{1}.</entry>
    <entry key="ObjectContainsComplexCode">{0} {1} contains complex code.\n The checkbox ''Support : complex numbers'' has not been set in Configuration Parameters > Code Generation > Interface pane. Hence, only real code/data is allowed.</entry>
    <entry key="ObjectContainsNonIntegerCode">{0} {1} contains non-integer code.\nThe option ''Support floating-point numbers'' has not been set in Code Generation configuration options. Hence, only integer code/data is allowed.</entry>
    <entry key="ObjectHasCallCycles">{0} has call cycles.</entry>
    <entry key="OccurredInChart">Occurred in chart {0}</entry>
    <entry key="OnlyFcnsWithRealScalarInConditions">Unsupported usage of a function {0} returning a complex data in guarding condition of transition {1}. Only functions which return real scalars are allowed in conditions.</entry>
    <entry key="OnlyFcnsWithScalarRetInConditions">Function {0} in guarding condition of transition {1} returns non-scalar value.</entry>
    <entry key="OnlyRealScalarsInConditions">Guarding condition of transition {1} contains complex data {0}.</entry>
    <entry key="OnlyScalarsInConditions">Unsupported usage of a vector {0} in guarding condition of transition {1}. Only scalars are allowed in conditions.</entry>
    <entry key="OutputDependencyInMooreChart"><![CDATA[Output {0} should not behave like a state and should be recomputed before being read, because this violates <a href="matlab:sfhelp(''moore_charts_semantics'')">Moore chart semantics</a>. This might lead to incorrect computations and/or code generation. This will be disallowed in future releases.]]></entry>
    <entry key="NextStateToOutputDependencyInMooreChart"><![CDATA[Updated value of local data {0} is used to compute an output, which violates <a href="matlab:sfhelp(''moore_charts_semantics'')">Moore chart semantics</a>.]]></entry>
    <entry key="OutputEventDirectedError">Output event {0} unable to be directed with the send command</entry>
    <entry key="OutputEventHasFallingEdgeTrigger">Output event {0} is not allowed to have a 'falling edge' trigger. Trigger changed to 'either edge'.</entry>
    <entry key="OutputEventHasRisingEdgeTrigger">Output event {0} is not allowed to have a 'rising edge' trigger. Trigger changed to 'either edge'.</entry>
    <entry key="OutputVarSizeMaxSizeUnspecified">Output {0} has variable size but the upper bound is not specified; explicit upper bound must be provided.</entry>
    <entry key="ParamCannotBeVariableSizedMatrix">Parameters for variable-size arrays are currently unsupported. Parameter {0} is a variable-size array.</entry>
    <entry key="ParamConflict">Parameters {0} and {1} are conflicting. Declare a single parameter ''{2}'' in the chart.</entry>
    <entry key="ParamFixptAttribMismatch">Parameter {0} specified fixed-point attributes do not match the actual parameter value fixed-point attributes.</entry>
    <entry key="ParamFixptWordLengthMismatch">Parameter {0} was specified as fixed-point with word-length {1,number,integer}, but the actual parameter value is fixed-point with word-length {2,number,integer}.</entry>
    <entry key="ParamSizeMismatchInLibInstances">Compiled size {0} for data {1} does not match previously computed size {2}. All instances of the library chart must use the same values of\n parameters to compute sizes of chart data.</entry>
    <entry key="ParamValueSignedFixptMismatch">Parameter {0} was specified as signed fixed-point, but the actual parameter value is unsigned fixed-point.</entry>
    <entry key="ParamValueUnsignedFixptMismatch">Parameter {0} was specified as unsigned fixed-point, but the actual parameter value is signed fixed-point.</entry>
    <entry key="ParamValueFixptTypeMismatch">Parameter {0} was specified as fixed-point, but the actual parameter value is not fixed-point.</entry>
    <entry key="ParamValueInt64TypeMismatch">Parameter {0} was specified as ''{1}'', but the actual parameter value is not ''{1}''.</entry>
    <entry key="ParamRealValueMismatch">Parameter {0} was specified as real, but the actual parameter value is complex.</entry>
    <entry key="ParamComplexValueMismatch">Parameter {0} was specified as complex, but the actual parameter value is real.</entry>
    <entry key="ParserIllegalFlowGraphInMooreCharts"><![CDATA[Stateflow Moore chart {0} has no state, which is prohibited by <a href="matlab:sfhelp(''moore_charts_semantics'')">Moore chart semantics</a>.]]></entry>
    <entry key="ParserIllegalFeatureStatusInDESChart">Simulation of discrete event chart {0} is not supported without turning on required feature.\n\nYou can turn on the feature by running this command:\nsldes on</entry>
    <entry key="ParserIllegalTargetInDiscreteEventChart">Discrete event chart {0} does not support code generation targets.</entry>
    <entry key="ParserIllegalInMealyChart">{0} is not supported in a Mealy chart.</entry>
    <entry key="ParserIllegalInMooreChart">{0} is not supported in a Moore chart.</entry>
    <entry key="ParserIllegalTemporalLogicInMooreCharts">Stateflow Moore chart unable to use temporal logic in state {0}.</entry>
    <entry key="ParserIllegalTransitionActionsInFunction">Transition {0} belonging to Function {1} has a transition action.\nTransition actions are relevant only in inner/outer paths of a state.</entry>
    <entry key="PersistentResolvedToDSM">Persistent data {0} has the same name as a data store. Rename one of these variables.</entry>
    <entry key="PortOnTopLibraryChart">Junction {0} is supported at the top level of chart {1} only when the chart is used as an atomic subchart.</entry>
    <entry key="PrsAbsTimeImplicit">Absolute time keyword ''{0}'' unable to be used as an implicit event</entry>
    <entry key="AtomicSubchartEventReceive">Main chart cannot receive atomic subchart event {0}.</entry>
    <entry key="PrsInputEventBroadcast">Input event {0} to a chart can only be broadcast by SIMULINK</entry>
    <entry key="ComplexWithTemporalLogic">Complex expressions are not allowed with temporal logic operators.</entry>
    <entry key="MatrixWithTemporalLogic">Matrix expressions, used here {0}, are not allowed with temporal logic operators.</entry>
    <entry key="PrsNumberOrStringOnRHS" note="Only applicable to C charts">Number or a string is not allowed on \nleft-hand-side of an assignment.</entry>
    <entry key="PrsOutputEventsTrigger">Output events unable to be used in states to trigger ''on event'' actions.</entry>
    <entry key="ParseErrorInTransition"><![CDATA[Parse error in transition {0}. To diagnose, open the Stateflow chart and, in the <b>Modeling</b> tab, select <b>Update Model</b> &gt <b>Update Chart</b>.]]></entry>
    <entry key="ParseErrorInState"><![CDATA[Parse error in state {0}. To diagnose, open the Stateflow chart and, in the <b>Modeling</b> tab, select <b>Update Model</b> &gt <b>Update Chart</b>.]]></entry>
    <entry key="RapidAccelSimulationNotSupportedForLocalMessages">Chart {0} contains local message {1}. Rapid Accelerator mode simulation is not supported for models with local messages.</entry>
    <entry key="RapidAccelBusesOutputSaveToWorkspaceNotSupported">Bus object {0} writes zeros to the workspace when exported in Rapid Accelerator mode.</entry>
    <entry key="RealOnlyComplexErrInExpression">Expression uses complex numbers.\nThe checkbox ''Support : complex numbers'' has not been set in Configuration Parameters > Code Generation > Interface pane.  Hence, only real code/data is allowed.</entry>
    <entry key="ResetBadProtoType">Function 'reset' takes one argument that specifies the state to be reset.\n</entry>
    <entry key="ResetArgumentIsNotSimulinkState">Argument to the 'reset' operator should be Simulink based state.\n</entry>
    <entry key="ResetNotSupported">Reset operator is not supported for the Stateflow object {0}.\n</entry>
    <entry key="RTWCodeGenCannotBeNonTunableStruct">Non-tunable struct parameter {0} is not supported for Code Generation.\n</entry>
    <entry key="SampleUpdateWasSpecifiedButNoSampleTimeProvided">Sampled update was specified and no sample time was entered in chart {0}.</entry>
    <entry key="ScalarSigMustNotBeVarSize">Size computation for {0} failed. MATLAB Function Block and Stateflow do not support Variable Sizes for scalar signals.</entry>
    <entry key="SelfActionArithmetic">No arithmetic operations allowed inside an expression \nwith a self action.</entry>
    <entry key="SelfActionString" note="Applies only to C charts">Expression with a self action unable to \nbe a number or a string.</entry>
    <entry key="SimulationTimeForLHS">Simulation time variable ''t'', ''et'' or ''elapsed'' on left hand side of an expression.</entry>
    <entry key="SimulinkCoderOrMatlabCoderLicenseMissing">To generate code for non-simulation targets, you must have licenses for Simulink Coder and MATLAB Coder.</entry>
    <entry key="SimulinkHdlCoderLicenseMissing">To generate code for HDL targets, you must have an HDL Coder license.</entry>
    <entry key="SizeEvalutedToComplexType">Size computation for {0} failed. Size evaluated to a complex type.</entry>
    <entry key="SizeMustBeInheritedForDataflowAutoFrameSize">Size of {0} must be set to ''-1'' when the MATLAB Function block is inside a dataflow subsystem with the ''Automatic frame size calculation'' parameter enabled.</entry>
    <entry key="SizeMustBePositiveInteger">Size computation for {0} failed. The size definition did not evaluate to a positive integer value.</entry>
    <entry key="SizeMustBeScalarOrVector">Size computation for {0} failed. The size must be scalar or vector.</entry>
    <entry key="InheritedSizeMustBeSpecifiedByMinusOne">Size computation for {0} evaluated to -1. To specify an inherited size use the literal ''-1''.</entry>
    <entry key="SizePropagationIllegalInheritance">Size for {0} {1} may not be inherited</entry>
    <entry key="SizePropagationIllegalInputDataSize">Unable to determine size for input data {0}</entry>
    <entry key="SizePropagationUnsupportedParameterSize">Parameter {0} has unknown size</entry>
    <entry key="SomeFunctionsOmitted">some functions omitted</entry>
    <entry key="SomethingCannotBeBusType">{0} {1} unable to have bus type.\n</entry>
    <entry key="SomethingCannotBeMLType">{0} {1} unable to be of MATLAB type.\n</entry>
    <entry key="SourceEndPointOnlyOnDefaultTransition">SrcEndpoint can only be changed on a default transition.</entry>
    <entry key="StateOutputOnLHS">State output data {0} on left hand side of an expression.</entry>
        <entry key="SignalGeneratorBadInputs">Function {0} takes one numeric argument.</entry>
    <entry key="UnboundedDataInCLanguage">Unbounded data {0} from block {1} is supported only for C++.</entry>
    <entry key="UnboundedFuncArgInCLanguage">Calling Simulink function {0} with unbounded input or output {1} from block {2} is supported only for C++. </entry>
     <entry key="UnboundedDataGPU">Unbounded data {0} from block {1} is not supported for GPU acceleration and code generation.</entry>
    <entry key="UnboundedFuncArgGPU">Calling Simulink function {0} with unbounded input or output {1} from block {2} is not supported for GPU acceleration and code generation.</entry>
    <entry key="UnboundedArrayInCodeGenCLanguage">
        <![CDATA[
                 {0}
                 <actions exclusiveFixIts="yes">
                 <action type="fixit">
                 <cmd>set_param(''{1}'', ''TargetLang'', ''C++'')</cmd>
                 <txt>Open the Configuration Parameters dialog box and, in the Code Generation pane, set Language to C++.</txt>
                 </action>
                 </actions>
        ]]>
    </entry>
    <entry key="UnboundedDataRaccel">Unbounded data {0} from block {1} is not supported in rapid accelerator mode.</entry>
    <entry key="UnboundedDataExtMode">Unbounded data {0} from block {1} is not supported in external mode.</entry>
    <entry key="UnboundedFuncArgRaccel">Calling Simulink function {0} with unbounded structure input or output {1} from block {2} is not supported in rapid accelerator mode.</entry>
    <entry key="UnboundedFuncArgExtMode">Calling Simulink function {0} with unbounded structure input or output {1} from block {2} is not supported in external mode.</entry>
    <entry key="UnsupportedUnboundedFuncArgDueToCEval">Calling coder.ceval function with input or output of structure type is not supported for block {2} that also calls Simulink function {0} with unbounded structure input or output {1}.</entry>
    <entry key="UnboundedFuncArgWithTopLevelAtomicSubchartFcn">Atomic subchart or box {2} does not support exporting functions with input or output structures because it contains Simulink function {0} with unbounded structure input or output {1}.</entry>
    <entry key="UnsupportedUnboundedFuncArgDueToAtomicSubchartFcn">Chart {2} does not support calling exported functions with input or output structures from atomic subcharts or boxes because the chart calls Simulink function {0} with unbounded structure input or output {1}.</entry>
    <entry key="UnboundedDataNotSupportedInCActionLanguage">Unbounded data {0} is not supported in Stateflow blocks that use C as the action language. Convert {1} to use MATLAB as the action language.</entry>
        <entry key="UnboundedDataNotSupportedWithCustomCode">Unbounded data {0} of structure type is not supported because block {1} accesses custom code symbols.</entry>
        <entry key="UnboundedDataNotSupportedWithCustomCodeBus">Unbounded data {0} of structure type is not supported because block {1} uses custom code structure {2}.</entry>
        <entry key="UnsupportedUnboundedDataDueToCEval">Calling coder.ceval function with input or output of structure type from block {1} is not supported because the block contains unbounded data {0} of structure type.</entry>
        <entry key="UnboundedDataWithTopLevelAtomicSubchartFcn">Atomic subchart or box {1} does not support exporting functions with input or output structures because it contains unbounded structure {0}.</entry>
        <entry key="UnsupportedUnboundedDataDueToAtomicSubchartFcn">Chart {1} does not support calling exported functions with input or output structures from atomic subcharts or boxes because the chart contains unbounded structure {0}.</entry>
        <entry key="UnboundedFunctionArgNotSupportedInCActionLanguage">Calling Simulink function {0} with unbounded input or output {1} is not supported because chart {2} uses C as the action language. Convert {2} to use MATLAB as the action language.</entry>
        <entry key="UnboundedFunctionArgNotSupportedWithCustomCode">Calling Simulink function {0} with unbounded structure input or output {1} is not supported because block {2} accesses custom code symbols.</entry>
        <entry key="UnboundedFunctionArgNotSupportedWithCustomCodeBus">Calling Simulink function {0} with unbounded structure input or output {1} is not supported because block {2} uses custom code structure {3}.</entry>
        <entry key="UnboundedDataWithoutVariableSizeCheckbox">Data {0} uses unbounded dimension but is not configured to support it. Ensure that the ''Support variable-size arrays'' property for the block {1} is enabled. Additionally, if {0} is not an input, you must also select the ''Variable size'' data property.</entry>
        <entry key="UnboundedParameter">Parameter {0} does not support unbounded dimensions.</entry>
        <entry key="UnboundedMessage">Message {0} does not support unbounded dimensions.</entry>
        <entry key="UnboundedSignalWithoutVariableSizeMode">Data {0} resolves to an unbounded variable-sized signal. Ensure that the 'Support variable-size arrays' property for the block that owns the data is selected and set the 'DimensionsMode' property for the signal to 'Variable'.</entry>
    <entry key="StringNotSupportedInSimplifiedTSBlock"><![CDATA[Symbol {0} is of type string or has a field of type string, but string data is not supported in Test Sequence block with legacy semantics. See <a href="matlab:helpview(fullfile(docroot, 'sltest', 'helptargets.map'), 'semantics_change_rn')">R2021a Simulink Test Release Notes</a> for how to change the semantics of Test Sequence block to ''StateflowCompatible''.]]></entry>
    <entry key="StringNotSupportedInParameter">Symbol {0} is of type string, but string data is not supported as a parameter.</entry>
    <entry key="InvalidCompareStringOperator">Unable to compare string with other data types in chart {0}.</entry>
    <entry key="slstringIOToEmlFcn">Unable to use string data as input or output of MATLAB function {0}.</entry>
    <entry key="CannotConvertToStringFcn">Input of function {0} in chart {1} unable to be converted to string.</entry>
    <entry key="NoC89SupportForToStringFcn">Failed to generate C code for the function {0} in chart {1}. Set 'Language standard' to 'C99 (ISO)'.</entry>
    <entry key="NoCPP03SupportForToStringFcn">Failed to generate C++ code for the function {0} in chart {1}. The function {0} does not support 'std::string'. To generate C-style string, set 'Language standard' to 'C99 (ISO)'.</entry>
    <entry key="InputOfASCIIToStringMustBeUint8">Input of function {0} in chart {1} must be a uint8 scalar or array, no expressions are allowed.</entry>
    <entry key="CannotPassStringToCustomCodeFunction">Unable to pass string to custom code function {0} in chart {1}.</entry>
    <entry key="StringFcnReturnValueMustBeStringVar">Invalid data type. The return value of function {0} in chart {1} must be a data of type string.</entry>
    <entry key="StringFcnDestinationMustBeStringVar">Invalid data type. The first argument of function {0} in chart {1} must be a data of type string.</entry>
    <entry key="lhsOfString2ASCIIFcnMustBeUint8">Output of {0} in chart {1} is type uint8. Change the left side variable or argument for this output to type uint8.</entry>
    <entry key="lhsOfString2ASCIIFcnShouldBeArray">Output of {0} in chart {1} is an array. Change the size of the left hand side variable.</entry>
    <entry key="StringFcnReturnValueCannotBeConst">Return value of function {0} in chart {1} unable to be a constant.</entry>
    <entry key="StringFcnOutputNeedsToBeConsumed">Function {0} in chart {1} must have a return value or be passed as an input to another function.</entry>
    <entry key="StringFcnDestinationCannotBeConst">First argument of function {0} in chart {1} unable to be a constant.</entry>
    <entry key="StringFcnReturnValueCannotBeInput">Invalid data scope. The return value of function {0} in chart {1} unable to be an input data.</entry>
    <entry key="StringFcnDestinationCannotBeInput">Invalid data scope. The first argument of function {0} in chart {1} unable to be an input data.</entry>
    <entry key="StringToDoubleCannotProduceComplex">Function {0} in chart {1} unable to output a complex value.</entry>
    <entry key="InvalidNumArgumentsInStrcmp">Function {0} in chart {1} expects 2 or 3 arguments. The first two arguments must be the strings to be compared. The optional third argument must be the number of characters to compare.</entry>
    <entry key="InvalidNumArgumentsInStrcat">Function {0} in chart {1} expects 2 or more arguments. The arguments must be the strings to be concatenated together. </entry>
    <entry key="InvalidArgumentInStringFcn">Invalid data type. Argument {0,number,integer} to the function {1} in chart {2} must be a data of type string or a string literal.</entry>
    <entry key="ExpectPositiveIntArgumentInStringFcn">Invalid data type. Argument {0,number,integer} to the function {1} in chart {2} must be a positive integer.</entry>
    <entry key="Str2AsciiSizeMismatch">Argument {0,number,integer} to the function {1} results in an output array of size {2,number,integer}, but it is used in a context that expects an array of size {3,number,integer}.</entry>
    <entry key="ExpectNonNegativeIntArgumentInStringFcn">Invalid data type. Argument {0,number,integer} to the function {1} in chart {2} must be a non negative integer.</entry>
    <entry key="OneInvalidArgumentInStringFcn">Invalid data type. The argument to the function {0} in chart {1} must be a data of type string or a string literal.</entry>
    <entry key="StringLiteralNotAllowed" note="Message applies to only C charts">String literal "{0}" is not allowed in this context.</entry>
    <entry key="SubchartUnboundPorts">Invalid mappings. See error messages below for more information.</entry>
    <entry key="TemporalBadEventName">Second argument of a temporal logic function must be tick, wakeup, sec, msec, usec, or an event.</entry>
    <entry key="TemporalTakesTwoArguments">''{0}'' takes exactly two arguments: 1) a numeric expression; and 2) an event or an absolute time keywords ''sec'', ''msec'' or ''usec''.</entry>
    <entry key="TemporalCountBadArgument">Argument of ''temporalCount'' should be an event or absolute time keywords ''sec'', ''msec'' or ''usec''.</entry>
    <entry key="TemporalCountTakesOnlyOneArgument">''temporalCount'' takes only one argument, an event or absolute time keywords ''sec'', ''msec'' or ''usec''.</entry>
    <entry key="TemporalCannotBeBoolean">Temporal thresholds unable to be defined as boolean data.</entry>
    <entry key="PrecisionLossInTemporalLogic"><![CDATA[Using fixed-point data with a slope that is not an integer power of two or a nonzero bias as a temporal threshold can result in loss of precision. For more information, see <a href="matlab:sfhelp('using_temporal_logic')">this documentation</a>.]]></entry>
    <entry key="TemporalDelaySmallerThanSampleTime">Model sample time is set to {0} sec, which is longer than this threshold.</entry>
    <entry key="TemporalIllegalArgEvent">First argument of a temporal logic function should be an expression, and not an event.</entry>
    <entry key="TemporalIllegalArgNested">First argument of a temporal logic function should be an expression. Nested calls to other Stateflow built-in functions are not allowed.</entry>
    <entry key="TemporalIllegalArgState">First argument of a temporal logic function should be an expression, and not a state name.</entry>
    <entry key="TemporalIllegalLocation">Temporal logic can be used only on transitions that are reachable from exactly one state.</entry>
    <entry key="TemporalIllegalInDefaultTrans">Temporal conditions unable to be defined on default transitions.</entry>
    <entry key="TemporalIllegalInFlowGraph">Temporal conditions unable to be used in flow graphs.</entry>
    <entry key="TemporalIllegalWithinFunc">Temporal conditions unable to be defined within functions.</entry>
    <entry key="TemporalLogicWithNoSideEffect">Temporal logic expression has no side-effect. It either needs to be used in an expression, or removed if deemed unnecessary.</entry>
    <entry key="TemporalOutputEvents">Temporal thresholds unable to be defined over output events</entry>
    <entry key="TemporalThresholdNonPositive">Temporal thresholds must be positive numbers.</entry>
    <entry key="TemporalThresholdNegative">Temporal thresholds unable to be negative numbers.</entry>
    <entry key="TheVariableIsNotAllowedInPLC">Variable ''{0}'' in ''{1}'' ({2,number,integer}) is not allowed in PLC.</entry>
    <entry key="TickOrWakeupInEventTriggeredChart">Implicit wakeup or tick events are invalid in charts with input events {0}.</entry>
    <entry key="TooLargeValue">Type computation for {0} failed\nAn intermediate value was too large for its data type.</entry>
    <entry key="TooManyOutputsMultiOutput">Too many output arguments ({0,number,integer}) to function {1}.\n This function returns a maximum of {2,number,integer} outputs.\n</entry>
    <entry key="TooManyTriggeringEvents">Transition {0} of {1} has more than one base event. In a Discrete Event chart, every transition can have at most one base event.</entry>
    <entry key="TransitionActionsInSimulinkOnly">Transition actions are supported only in Stateflow charts in Simulink models.</entry>
    <entry key="TransitionOutsideNaturalParent"><![CDATA[Transition {0} is not fully contained in natural parent {1}, the lowest common ancestor of source {2} and destination {3}. This causes the state {4} to exit and reenter when this transition is taken. If this is not expected, move/resize the transition to be fully contained inside {5}. You can also configure the diagnostic by clicking<a href= "matlab: sfprivate(''openConfigParamsSFDiagnostics'',{6,number,integer})"> here.</a>]]></entry>
    <entry key="TransitionWithoutDestination">Transition {0} in chart {1} has no destination.</entry>
    <entry key="TriggeredChartIsNotExecutedAtInitialization">Chart {0} may be uninitialized when triggered by input {1} because the property ''Execute (enter) chart at initialization'' is disabled.</entry>
    <entry key="TruncatedComment">Truncating comment text in the object {0}  as it exceeds {1,number,integer} characters.</entry>
    <entry key="TypeDefinitionReferringToNonConstant">Type computation for {0} failed\nType definition is referring to the value of {1} which is not a constant, or a constant initialized from workspace.</entry>
    <entry key="TypeFirstParameterMustBeVariableOrConstant">Type computation for {0} failed\nThe first parameter to type() must be a variable or constant</entry>
    <entry key="TypeNotSupported">Type ''{0}'' of parameter {1} {2} is not supported.</entry>
    <entry key="TypeOperOnlyInCastOrFixpt">Unsupported usage of a type operator. Type operators may only be used as parameters to cast or fixpt.</entry>
    <entry key="TypePropagationIllegalInheritance">Type for {0} {1} may not be inherited</entry>
    <entry key="TypePropagationIllegalInputDataType">Unable to determine type for input data {0}</entry>
    <entry key="TypePropagationIllegalWordlength">Word length for Data {0} must be less than or equal to {1,number,integer} bits</entry>
    <entry key="TypePropagationUnsupportedParameterType">Parameter {0} has a value of an unsupported type</entry>
    <entry key="TypeRequireOneParameter">Type computation for {0} failed\ntype() requires 1 parameter</entry>
    <entry key="UnableToBuildOuterTransitionFlowGraph">Stateflow is not able to build the outer transition flow chart of {0}. This is most probably because it contains an infinite loop.</entry>
    <entry key="UnableToBuildInnerTransitionFlowGraph">Stateflow is not able to build the inner transition flow chart of {0}. This is most probably because it contains an infinite loop.</entry>
    <entry key="UnableToBuildDefaultTransitionFlowGraph">Stateflow is not able to build the default transition flow chart of {0}. This is most probably because it contains an infinite loop.</entry>
    <entry key="UnableToCheckoutStateflowLicense">Unable to check out Stateflow license! To simulate models containing Stateflow charts and/or Truth Table blocks, you require a Stateflow license.</entry>
    <entry key="UnableToInlineFunctionInMooreChart">Unable to inline {0}. It might be due to recursive calls, or a function call with possible side effects.</entry>
    <entry key="UnconditionalTransitionPathWithCycle">{0}: Unconditional transition path with cyclic behavior. Add a condition to break the loop, or change the destination to a state or terminal junction.</entry>
    <entry key="UnconditionalTransShadow"><![CDATA[{0} has an unconditional transition {1} that shadows the following transitions:\n{2}\n You can also configure the diagnostic by clicking<a href= "matlab: sfprivate(''openConfigParamsSFDiagnostics'',{3,number,integer})"> here.</a> ]]></entry>
    <entry key="UndirectedBroadcastEvents"><![CDATA[Undirected local event broadcast detected in object {0}, which may cause unintended recursive behavior. Use a directed event broadcast if possible. See <a href="matlab:sfhelp('avoid_unwanted_recursion')"> this documentation </a> for more information.]]></entry>
    <entry key="EventSendAfterPort">Local events are unable to be raised from transitions downstream of ports, such as {0}.</entry>
    <entry key="UnexpectedBacktracking"><![CDATA[Junction {0} has multiple incoming paths with no unconditional path to a state or a terminating junction. To see possible solutions, <a href ="matlab:openExample('stateflow/FixBackupErrorExample')">open this example.</a> You can also <a href= "matlab: sfprivate(''openConfigParamsSFDiagnostics'',{1,number,integer})">configure the diagnostic.</a>]]></entry>
    <entry key="UnknownFunctionInTypeDefinition">Type computation for {0} failed\nUnknown function {1} used in definition, indexing into constants is not yet supported.</entry>
    <entry key="UnknownVarInTypeDefinition">Type computation for {0} failed\nUnknown var used in type definition: {1}</entry>
    <entry key="UnrecognizedDataType">Unrecognized data type {0}.</entry>
    <entry key="UnresolvedQualifiedEventName">Unresolved qualified event name in send() function</entry>
    <entry key="UnsupDataTypeForBusField">Unsupported data type for bus or struct field ''{0}''.</entry>
    <entry key="UnsupDataTypeSimulinkStruct">Simulink.StructType is not supported by Stateflow.</entry>
    <entry key="UnsupFrameDataMoreThan2D">Data {0}: Frames with matrices of more than two dimensions are currently unsupported.</entry>
    <entry key="UnsupportedCharData">Data {0}: Character outputs are not supported in Simulink and Stateflow. Cast ''{1}'' to int8 or uint8 instead.</entry>
    <entry key="UnsupportedData">Data type of {0} is not supported in Stateflow charts.</entry>
    <entry key="UnsupportedFixptTypeForAbsFcn">Abs is not supported for fixed point type with nonzero bias.</entry>
    <entry key="UnsupportedInt64Data">Data {0}: int64 and uint64 types are not supported for ''{1}'' scope.</entry>
    <entry key="UnsupportedMachineEvent">Machine parented events are not allowed. Remove event {0}.</entry>
    <entry key="MaxStringLengthUpperLimitExceeded">Number of characters in data ''{0}'' exceeds {1, number, integer}.</entry>
    <entry key="UnusedDataOrEvent"><![CDATA[{0} is defined, but is not used in the Stateflow chart. <a href= "matlab: internal.stateflow.dialogs.UnusedObjectDeleter.createDeleter(''{1}'')">Delete this object</a> or <a href= "matlab: sfprivate(''openConfigParamsSFDiagnostics'',{2,number,integer})">configure the diagnostic</a>.]]></entry>
    <entry key="UnusedFunction"><![CDATA[{0} is defined, but is not used in the Stateflow chart. You can also <a href= "matlab: sfprivate(''openConfigParamsSFDiagnostics'',{1,number,integer})">configure the diagnostic</a>.]]></entry>
    <entry key="UsageOfUndefinedEnumeratedValue">''{0}'' is not a valid enumeration name of ''{1}''.</entry>
    <entry key="UselessTransitionAction">Transition {0} has a transition action that will never be executed\n because the transition path does not end with a state\n</entry>
    <entry key="UsingVariableWithStringType">Using variable with string type</entry>
    <entry key="UsingVariableWithUnknownType">Using variable with unknown type</entry>
    <entry key="SizeValueChangedDuringPropagation">Chart expects data {0} to have size ''{1}'', but the propagated size is ''{2}''. Fully specify all inherited properties of your inputs and outputs.</entry>
    <entry key="TypeValueChangedDuringPropagation">Propagated type of data {0} changed during propagation. The type was fixed to be ''{1}'' and now became ''{2}''.\nSpecify the type of all inputs to avoid this error. Or, fully specify all inherited properties of your outputs.</entry>
    <entry key="ComplexityValueChangedDuringPropagation">Propagated complexity of data {0} changed during propagation. The complexity was fixed to be ''{1}'' and now became ''{2}''.\nSpecify the complexity of all inputs to avoid this error. Or, fully specify all inherited properties of your outputs.</entry>
    <entry key="VagueStateName">Qualified state name ''{0}'' matches more than one state. Use a more specific qualified state name.</entry>
    <entry key="VariableIsOfAComplexType">Variable {0} ''{1}'' in {2} {3} is of complex type.\nThe option 'Support complex numbers' has not been set in Code Generation configuration options. Hence, only real code/data is allowed.</entry>
    <entry key="VariableInHDLHasVariableDimensions">Variable ''{0}'' generated for {1} has a variable size and is not supported by HDL code generation.</entry>
    <entry key="VariableIsOfANonIntegerType">Variable ''{0}'' in {1} is of non-integer type.\nThe option 'Support floating-point numbers' has not been set Code Generation configuration options. Hence, only integer code/data is allowed.</entry>
    <entry key="VariadicFcnsUnsupportedForImporting"><![CDATA[ Variadic function ''{0}'' not supported for Importing and Parsing Custom Code for UNIX platforms and MINGW compiler. To disable parsing to import custom code, uncheck '<a href="matlab:SLCC.Utils.OpenConfigureSetAndHighlightParseCC(''{1}'')">Import Custom Code</a>' ]]></entry>
    <entry key="VerifyNotSupportedForRapidAccel">Operator 'verify' is not supported by Rapid Accelerator simulation.</entry>
    <entry key="VerifyNoContinuousTimeUpdate">Operator 'verify' is not supported by blocks whose update method is continuous. Change the update method to 'discrete'.</entry>
    <entry key="VerifyNotSupportedForHDL">Operator 'verify' is not supported with HDL Coder and will be ignored.</entry>
    <entry key="VerifyNotSupportedForPLC">Operator 'verify' is not supported with Simulink PLC Coder and will be ignored.</entry>
    <entry key="VerifyNotSupportedForExtMode">Operator 'verify' is not supported with External mode targets.</entry>
    <entry key="VerifyNotSupportedForPIL">Operator 'verify' is not supported with Processor in the loop and will be ignored.</entry>
    <entry key="VerifyNotSupportedForSIL">Operator 'verify' is not supported with Software in the loop and will be ignored.</entry>
    <entry key="VerifyNotSupportedForCodeGenTargets">Operator 'verify' is not supported for the current code generation target and will be ignored.</entry>
    <entry key="VerifyBadProtoType">Operator 'verify' requires at least one argument.\n</entry>
    <entry key="VerifyDangerousComparison">Using the ''{0}'' operator to compare expressions of type {1} in the 'verify' statement can produce unexpected results.</entry>
    <entry key="VerifyIllegalAssignment">Operator 'verify' is not supported in assignments because it produces no output.\n</entry>
    <entry key="VerifyIllegalUseOnTransition">Operator 'verify' is not supported in transitions because it produces no output.\n</entry>
    <entry key="VerifyIllegalUseOnWhenDecomposition">Operator 'verify' is not supported in When decomposition sequences because it produces no output.\n</entry>
    <entry key="VerifyFirstArgumentMustBeAssessment">First argument of the 'verify' operator must be a scalar logical expression.\n</entry>
    <entry key="VerifyMissingFormatString" note="Word string here is referring to a parameter not a type">Operator 'verify' requires a format string as either its first or second argument.\n</entry>
    <entry key="VerifyMsgIdAndFmtMustBeStringArgument" note="String is used to describe a paramter not a type.">Specified argument to the 'verify' operator must be either a message identifier or format string.\n</entry>
    <entry key="VerifyMsgIdRequireFmtStringArgument" note="Word string here is referring to a parameter not a type">If you specify a message id argument to the 'verify' operator, you must also specify a format string to display when the verification failure occurs.\n</entry>
    <entry key="VerifyFmtStringMustBeStringArgument" note="Word string here is referring to a parameter not a type">Specified argument to the 'verify' operator must be a format string.\n</entry>
    <entry key="VerifyFormatStringMustBeANonEmptyStringLiteral" note="The use of the word string here is to describe a parameter to the function and not really used in the context of a type.">Format string argument to the 'verify' operator must be a non-empty string literal.\n</entry>
    <entry key="VerifyBadFormatArgument">Argument {0, number, integer} of type ''{1}'' to the 'verify' operator is not supported as a format argument.\n</entry>
    <entry key="VerifyMessageIdInterpretedAsFmt" note="Format string refers to a type of a parameter and is not really used in the context of a type.">Argument {0,number,integer} to 'verify' is not a valid message identifier. It is therefore being interpreted as a format string to display when verification fails.
    </entry>
    <entry key="VerifyDeadCode">Results of a 'verify' statement will not be available at the end of the simulation because the statement can never be reached.
    </entry>
    <entry key="VerifyMissingSimulinkTestLicense">Using the 'verify' operator requires a Simulink Test license.</entry>
    <entry key="VerifyReducedFunctionality">Without a Simulink Test license, The 'verify' operator only performs an assertion.</entry>
    <entry key="VerifySupportedOnlyForClassicCharts">Operator 'verify' is only supported for Classic charts.</entry>
    <entry key="VerifySupportedOnlyForMATLABCharts">Operator 'verify' is supported only in Stateflow Charts that use MATLAB as the action language.</entry>
    <entry key="VerifySupportedOnlyForStateflowChartsAndTestSequence">Operator 'verify' is supported only in Stateflow Charts and Test Sequence Blocks.</entry>
    <entry key="VerifySupportedOnlyForStateflowStates">Operator 'verify' is supported only in states.</entry>
    <entry key="VerifyInMdlRefRealTime">Using the 'verify' operator in block {0} within a model reference is not supported by code generation when the system target file is set to slrealtime.tlc if C API is not enabled. To turn on C API for signals and parameters, set <![CDATA[<a href="matlab: configset.highlightParameter(''{1}'','{'''RTWCAPISignals'',''RTWCAPIParams'''}')">''Generate C API for'' Signals and Parameters under Interface category in Configuration Parameters dialog</a>]]>.</entry>
    <entry key="VoidFcnInExpr">Void Function {0} has no output data and is unable to be used in expressions.</entry>
    <entry key="WarnActionNoSideEffect">{0} has an action with no side effect.</entry>
    <entry key="WordLengthForDataMustBeSmallerThanXBits">Word length for data {0} must be less than or equal to {1,number,integer} bits</entry>
    <entry key="PersistentVariableInitializationTooComplex"><![CDATA[Persistent variable initialization failed. For more information, see <a href="matlab: helpview(fullfile(docroot, 'simulink', 'helptargets.map'),'initialize_persistent_variables')">this documentation</a>.]]></entry>
    <entry key="WriteToPersistentVariableInOutputsFunction">Assignment to persistent variable {0} is used to compute outputs. All persistent variables should be initialized at the beginning of the MATLAB function, and outputs should not depend on persistent variables written to during the same time step.</entry>
    <entry key="WrongNumArgsToMatlabFunction">Wrong number of arguments to MATLAB function.</entry>
    <entry key="WrongNumberOfArgsDetailed">Wrong number of argument(s) ({0,number,integer}) to function {1}.\n This function should be called with {2,number,integer} argument(s).\n</entry>
    <entry key="WrongNumberOfArgsExpectedActual">Wrong number of input arguments to Stateflow function {0}.\n Expected = {1,number,integer}, Actual = {2,number,integer}</entry>
    <entry key="WrongNumberOfArgsTemporal">Wrong number of arguments to temporal condition.</entry>
    <entry key="WrongNumberOfArgsTemporalCount">Wrong number of arguments to temporal count operator.</entry>
    <entry key="WrongNumberOfArgsType">Wrong number of arguments to type.</entry>
    <entry key="WrongNumberOfArgsTypeCast">Wrong number of arguments to type cast.</entry>
    <entry key="WrongTypeForFirstArg">Wrong type for the first argument to this function</entry>
    <entry key="emlConstantRequiredHintVS">Non-constant expression or empty matrix. If the expression specifies the size of some other expression, enable variable-size arrays in the Model Explorer or Property Inspector for the MATLAB Function block {0}. If the expression specifies the class of some other expression, it must be constant.</entry>
    <entry key="emlVarsizeBlocked"><![CDATA[Code generation is not supported because variable-size arrays are disabled. In <b>Configuration Parameters</b> > <b>Code Generation</b> > <b>Interface</b>, select ''Support variable-size signals''.]]></entry>
    <entry key="InvalidArgumentToRaiseFcn">Invalid argument to function ''raise''. Pass in a string constant.</entry>
    <entry key="InvalidEventNameToRaise">Invalid event name ''{0}'' is passed as an argument to ''raise'' function. Only events registered with Simulink are supported in ''raise'' function.</entry>
    <entry key="emlVarsizeBlockedFixIt">
      <![CDATA[Code generation is not supported in model ''{0}'' because variable-size arrays are disabled. In <b>Configuration Parameters</b> > <b>Code Generation</b> > <b>Interface</b>, under  <b>Support</b>, select <b>variable-size signals</b>.
               <actions exclusiveFixIts="yes">
               <action type="fixit">
               <cmd>set_param(''{0}'', ''SupportVariableSizeSignals'', ''on'')</cmd>
               <txt>To enable variable-size arrays, open the Configuration Parameters dialog box and select 'variable-size signals'.</txt>
               </action>
               </actions>
      ]]>
    </entry>
    <entry key="DMTUnknownUpperBoundFixit">
        <![CDATA[{0}<actions exclusiveFixIts="yes">
                 <action type="fixit">
                 <cmd>set_param(''{1}'', ''MATLABDynamicMemAlloc'', ''on'')</cmd>
                 <txt>To enable dynamic memory allocation, open the Configuration Parameters dialog box and, in the Simulation Target pane, select 'Dynamic Memory Allocation In MATLAB Functions'.</txt>
                 </action>
                 </actions>]]>
    </entry>
    <entry key="illegalQidAccessTemp">Trying to access out-of-scope temporary data {0}.</entry>
    <entry key="illegalQidAccessFcnInput">Trying to access function input data {0}.</entry>
    <entry key="illegalQidAccessFcnOutput">Trying to access function output data {0}.</entry>
    <entry key="pmFurtherInfo">Type "sfhelp(''ContinuousTimeRestrictions'')" for further information.</entry>
    <entry key="pmIllegalActionOnNonTerminalTransition">Unsupported condition action on transition {0}. In continuous time Stateflow charts, any transition that has an associated condition action must reach a graphical state directly (not via other transitions). Transitions that do not directly reach a graphical state can only have transition actions. This restriction ensures that the zero crossings function is side-effect free.</entry>
    <entry key="pmIllegalDerivFormatString" note="No change because this is not reported in a user visible feature">Unsupported format string ''{0}'' specified for mapping continuous state names to their derivative names. The format string must contain a single $N with a prefix or a suffix that is a valid identifier. A valid identifier is a string that starts with an alphabetical character followed by one or more alphanumeric characters.</entry>
    <entry key="pmIllegalDerivativeRead">In continuous time Stateflow charts, derivatives unable to be read. Therefore, the use of ''{0}'', the derivative of {1}, is not allowed in the following context:</entry>
    <entry key="pmIllegalDerivativeWrite">In continuous time Stateflow charts, derivatives can only be assigned in during actions. Therefore assigning to {0} is not allowed in the following context:</entry>
    <entry key="pmIllegalInnerTransition">In continuous time Stateflow charts, inner transitions are not allowed. Therefore the transition {0} is not allowed.</entry>
    <entry key="pmIllegalNameConflict">Name conflict between ''{0}'', the derivative of {1} and the data {2}. Rename one of these variables.</entry>
    <entry key="pmIllegalEvent">Event {0} is not supported in continuous time Stateflow charts.</entry>
    <entry key="pmIllegalImplicitEvent">Events are not supported in continuous time Stateflow charts. Event implied on {0} is illegal.</entry>
    <entry key="pmIllegalOutputRead">In continuous time Stateflow charts, outputs unable to be read if they are ever written to in during actions or transition conditions. Therefore, the use of {0} is not allowed in the following context:</entry>
    <entry key="pmIllegalRelationalExpression"><![CDATA[In continuous time Stateflow charts, state during actions do not support continuous quantities such as chart inputs, simulation time, continuous-time data, and state data from Simulink based states in relational expressions. Remove {0} data ''{1}'' from this relational expression:]]></entry>
    <entry key="pmIllegalSimulinkFunction">Simulink functions unable to be called from during actions or transition conditions. These are evaluated during minor time steps which is not allowed by Simulink.</entry>
    <entry key="pmIllegalStatelessChart">Continuous time Stateflow chart must have at least one substate. To simulate the behavior of a stateless chart, create a single state which calls a graphical function in its during action.</entry>
    <entry key="pmIllegalTemporalLogic">Temporal logic unable to be used. In continuous time Stateflow charts the during actions execute a variable number of times, leading to unpredictable behavior in the presence of counters.</entry>
    <entry key="pmIllegalWriteInCondition">In continuous time Stateflow charts, condition expressions and during actions should not write to {0} data or messages. Therefore, assigning to variable {1} is not allowed in the following context:</entry>
    <entry key="pmIllegalEventBroadcastInDuring">In continuous-time Stateflow charts, transition conditions and state during actions do not support event broadcasts.</entry>
    <entry key="pmWarnNonInlinedFunctionSideEffect">In continuous time Stateflow charts, we attempt to analyze the during actions of states to make sure that they do not have side-effects. However, if a function is unable to be inlined into the during action, Stateflow is unable to analyze it for side-effects. A function might not be inlined because: \n\n1. It is recursive \n\n2. It is an exported function \n\n3. Its call-site makes it unsafe for inlining \n\nTherefore, you need to manually ensure that the function ''{0}'' used in the following context is side-effect free.</entry>
    <entry key="pmWarnNonInlinedFunctionSmooth">In continuous time Stateflow charts, we attempt to analyze the during actions of states to make sure that the outputs and derivatives computed are smooth functions of chart inputs, continuous states and time. However, if a function is unable to be inlined into the during action, Stateflow is unable to analyze it. A function might not be inlined because: \n\n1. It is recursive \n\n2. It is an exported function \n\n3. Its call-site makes it unsafe for inlining \n\nTherefore, you need to manually ensure that the function ''{0}'' used in the following context satisfies the requirement stated above.</entry>
    <entry key="staticExpandInBusArrayFcn"> The function ''{0}'' expects a scalar bus as input, but the actual size of the input bus is non-scalar. </entry>
    <entry key="deprecateStrongDataTyping">Chart property "Use strong data typing with Simulink I/O" has been removed. Data types of input signals to charts and state transition tables must now match the type of the corresponding Stateflow data object.</entry>
    <entry key="malInfCannotOrderInDataflowDetails">{0} depends on {1} for data {2}.\n</entry>
    <entry key="malInfCannotOrderInDataflow"> Unable to automatically determine the size/type/complexity of chart data.\n{0}\nTo fix this issue, you will need to break this cyclic dependency. </entry>
    <entry key="malParseError"> Error while parsing object {0} in chart ''{1}''. </entry>
    <entry key="malParseErrorState"> Error while parsing state {0} in chart ''{1}''. Ensure that each entry, during, or exit state action is specified in a separate line. </entry>
    <entry key="malConstructError">Error while generating code for chart {0}.</entry>
    <entry key="malPPMissingColon"> Expected to find '':'' in line ''{0}'', but found end-of-line instead. \nError in state {1}. </entry>
    <entry key="malPPDuplicateSections"> Duplicate state actions are not allowed within combined state actions:\n''{0}''. State {1}</entry>
    <entry key="malPPCondCombined"> Conditional state actions are not allowed within combined state actions:\n''{0}''. State {1}</entry>
    <entry key="malPPMissingSection"> State actions like entry, during and exit need to be explicitly specified. A state action was not specified for the following text:\n''{0}''. State {1}</entry>
    <entry key="malPPMismatchedParens">Mismatched parentheses, brackets, or braces ''{0}'' in {1}.</entry>
    <entry key="malPPIllegalSectionInNameLine">Only the state name is allowed in the following line.\n''{0}''.\nState {1}</entry>
    <entry key="malIllegalCommentedOutName">State name is commented out in this line.\n''{0}''.\nState {1}</entry>
    <entry key="malPPIllegalSectionInTrans">{0} section is unable to follow a {1} section: {2}.</entry>
    <entry key="PPIllegalImplicitSectionInDESChart">Action type in state {0} not specified. Specify entry or exit type.</entry>
    <entry key="PPIllegalSectionInMooreChart">State actions such as "entry" (en), "during" (du), "exit" (ex), "on" event/message or "bind" in state {0} are not allowed in a Moore chart.</entry>
    <entry key="PPIllegalSectionInSimplifiedChart">State actions such as "entry" (en), "during" (du), or "exit" (ex) are not allowed in Simplified charts.\nState {0}</entry>
    <entry key="malPPOldTransitionAction"> ''/'' does not demarcate a transition action in:\n\n{0}\n\nUse ''{1}'' in {2} to isolate transition action sections.</entry>
    <entry key="malPPIllegalMatlabCode"> Expression or statement is incomplete or incorrect ''{0}''.\nTransition {1}</entry>
    <entry key="malBindInCombinedSection">"bind" state actions are not allowed within combined state actions:\n''{0}''. State {1} </entry>
    <entry key="malAmbiguousSymbol">Symbol ''{0}'' could resolve to the {1} {2}, or to the {3} {4} of the same name. Rename one of these objects.\n</entry>
    <entry key="malAmbiguousExpression">Expression ''{0}'' could resolve to the {1} {2}, or to the {3} {4}. Rename one of these objects.\n</entry>
    <entry key="changeDetectionCompareFailure">Arguments of hasChangedTo or hasChangedFrom unable to be compared.</entry>
    <entry key="malCountFunctionStrings">Operator ''count'' is not supported with a string type argument.</entry>
        <entry key="malStringConstantNotSupported">Constant data {0} with type string is not supported in a block that uses MATLAB as the action language.</entry>
    <entry key="malOutputNotDefined"> Output {0} {1} has not been written to in the chart {2}. </entry>
    <entry key="malIllegalControlFlowLogicInTransition"> Transition {0} has control flow logic in its action(s). Control flow logic such as IF, SWITCH, FOR and WHILE statements are not allowed in condition actions or transition actions.</entry>
    <entry key="malIllegalFunctionDefinitionInTransition"> Transition {0} defines a function. Transitions unable to define functions.</entry>
    <entry key="malIllegalFunctionDefinitionInState"> State {0} defines a function. States unable to define functions.</entry>
    <entry key="malFcnIoMismatch"> Function ''{0}'' takes {1,number,integer}, but it is being called with {2,number,integer} inputs.</entry>
    <entry key="malVarDimWithInheritedSize"> Data {0} is specified to be a variable-sized matrix, but is set to have inherited size. Variable-sized data must specify their maximum size. </entry>
    <entry key="DTOUnsupportedWithSubchartMappings">Data {0} is mapped to a subchart variable while data-type-override is on. This is currently not supported by charts that use MATLAB as the action language.</entry>
    <entry key="DiagnosticChecksFailed">Stateflow diagnostics for {0} failed.</entry>
    <entry key="InitValForSymbolicDimsNotScalar">Initial value for matrix {0} with symbolic dimensions must be scalar.</entry>
    <entry key="malIllegalDisabledStrongDataTyping"> Chart {0} has disabled strong data typing with Simulink I/O. This is not supported for MATLAB charts. </entry>
    <entry key="malWritingToNonDataObj"> Writing to {0} {1} is not allowed. </entry>
    <entry key="hdlImproperPersistentVarUsage"> The persistent variable ''{0}'' has been interpreted as a local variable. If you intend for it to be a register, you must initialize it to a constant value, then read the variable before it is written. </entry>
    <entry key="malCompileDataSizeInheritedData">Size definition for {0} is referring to data {1}, which has inherited size.</entry>
    <entry key="malCompileDataTypeInheritedData">Type definition for {0} is referring to data {1}, which has inherited type.</entry>
    <entry key="malIllegalAccessToAtomicSubchartState">It is not allowed to directly access state {0} which is within an atomic subchart.</entry>
    <entry key="malUnknownQid">Reference to unknown symbol ''{0}'' under state {1} in {2}</entry>
    <entry key="malUndefinedData">Chart {0} has unresolved symbols.</entry>
    <entry key="malIllegalAccessToAtomicSubchartTemplateFcn">Atomic subchart function {0} does not fully specify the size/type/complexity of its inputs and outputs. Chart-level atomic subchart functions must have fully-specified prototypes.</entry>
    <entry key="malIllegalAccessToExportedTemplateFcn">Function {0} does not fully specify the size/type/complexity of its inputs and outputs. Only functions with fully specified prototypes can be exported by a chart.</entry>
    <entry key="IllegalExportedFcnData">Chart level exported function {0} unable to have input or output data {1} whose type/size/complexity is not fully specified.</entry>
    <entry key="IllegalExportedFcnParamData">Chart level exported function {0} unable to have input or output data {1} whose type/size/complexity is not fully specified. Note that using parameterized type expressions such as ''type(u)'' for specifying the type of inputs and outputs of exported functions is not allowed.</entry>
    <entry key="ParameterizedTypeWithInitialValue">Operator ''type'' is not supported for data {0} because it has a specified initial value. Set 'Type' to an explicit type or to 'Inherited'.</entry>
    <entry key="malBadge">Action language: MATLAB</entry>
    <entry key="cBadge">Action language: C</entry>
    <entry key="malIllegalOperationInTransTrigger">Trigger section of a transition can only contain events, messages and temporal logic operators. This operation is not allowed.</entry>
    <entry key="malIllegalOperationInStateTrigger"><![CDATA[The <tt>on</tt> state action can only contain events, messages and temporal logic operators. This operation is not allowed.]]></entry>
    <entry key="malChangeDetectionIllegalType"> Data {0} contains a matrix or a structure type, and is unable to be used with change detection. </entry>
    <entry key="inplaceDataNotSupported">Operator {0} does not support in-place data.</entry>
    <entry key="malHasChangedIllegalScope">Argument of {0} operator must be an input data object.</entry>
    <entry key="malRecursion">Chart {0} has recursive function calls.</entry>
    <entry key="infSampleTime">Unable to accurately determine the sample time of chart {0} in the presence of unconnected input events in itself or one of its parent charts or subsystems. Connect an event source to the input event trigger port of the chart or one of its parents to resolve this issue.</entry>
    <entry key="CannotOutputStateActivity">Unable to output state activity for {0} because it either has AND decomposition or no substates.</entry>
    <entry key="CannotExitAtomicViaEvent">Unable to exit atomic state {0} with an event because the entry action has not completed.</entry>
    <entry key="CannotOutputStateActivityChartInitsData">Unable to output state activity for {0} because the parent chart {1} has ''Initialize outputs every time chart wakes up'' set to true.  This is not currently supported for state activity output.</entry>
    <entry key="LeafStateActivityLeafStateNameClash">Unable to automatically output the leaf state activity for {0} because leaf state {1}  and leaf state {2} share the same name. All leaf states must have unique names when outputting leaf state activity.</entry>
    <entry key="ChildStateActivityChildStateNameClash">Unable to automatically output the child state activity for {0} because child state {1} and child state {2} share the same name. All children states must have unique names when outputting child state activity.</entry>
    <entry key="MissingChildStateActivityEnumDefinition">{0} is missing an enumeration for state {1}. Check your custom enum definition and ensure that all child states are uniquely represented by an enumeration.</entry>
    <entry key="MissingLeafStateActivityEnumDefinition">{0} is missing an enumeration for state {1}. Check your custom enum definition and ensure that all leaf states are uniquely represented by an enumeration literal.</entry>
    <entry key="StateActivityEnumDefinitionClash">In {0}, more than one enumeration maps to the same value.</entry>
    <entry key="StateActivityEnumDefinitionClashWithDefault">Invalid enumeration for active child states of {0}. The default enumeration value indicates that substate {1} is active, but must indicate that no substate is active.</entry>
    <entry key="StateActivityEnumDefinitionClashWithDefault_ExecAtInit">Chart {0} uses the default enumeration value to indicate that state {1} is active. To ensure that the chart always has an active child state, select the chart property "Execute (enter) chart at initialization".</entry>
    <entry key="StateActivityEnumDefinitionClashWithDefault_InOp">Chart {0} does not support using the ''in'' operator to check whether the state {1} is active because the default enumeration value for active child states indicates that state {1} is active.</entry>
    <entry key="StateActivityEnumDefinitionClashWithDefault_Events">Chart {0} does not support broadcasting local events because the default enumeration value for active child states indicates that state {1} is active.</entry>
    <entry key="StateActivityEnumDefinitionClashWithDefault_Diag">Chart {0} uses the default enumeration value to indicate that state {1} is active. Set the configuration parameter <![CDATA[<a href="matlab: configset.highlightParameter(''{2}'',''SFNoUnconditionalDefaultTransitionDiag'')">''No unconditional default transitions''</a>]]> to ''error''.</entry>
    <entry key="StateActivityLiteralClashWithNone">Enumeration literal used to monitor state {0} clashes with the default literal {1}, which is reserved to indicate that no state is active.</entry>
    <entry key="StateActivityUnsupportedTunableEnum">Charts do not support code generation when a state that logs child or leaf state activity contains a tunable enumeration. In chart {0}, set the ''isTunableInCode'' property of the enumeration type ''{1}'' to ''false''.</entry>
    <entry key="StateCannotBeUsedInThisContext">Invalid use of state {0} in a non-state expression.</entry>
    <entry key="ConflictingEnumerationAlreadyPresent">Enumeration ''{0}'' specified for monitoring the output state activity of {1} conflicts with a pre-existing enumeration defined to monitor the output state activity of {2}.</entry>
    <entry key="EnumCreationErrorBadEnumTypeName">Failed to create enumeration type ''{0}'' for monitoring the state activity of {1} because the enum type name is not valid identifier for an enum type. Change the enum type name in the chart/state dialog to a valid MATLAB identifier.</entry>
    <entry key="EnumCreationError">Failed to create enumeration type ''{0}'' for monitoring the state activity of {1}. {2}</entry>
    <entry key="EnumCreationErrorBecauseStorageTypeChange">Failed to create enumeration type ''{0}'' for monitoring the state activity of {1} because the storage type has changed and the previous enumeration definition could not be cleared. Save the model, close, and re-open to resolve the problem.</entry>
    <entry key="EnumCreationErrorBecauseOfConflicts">Failed to create enumeration type ''{0}'' for monitoring the state activity of {1} because an enumeration with the same name already exists. Give a different name to the new enumeration, remove existing Matlab files which define enumeration of the same name, or check 'Define enumerated type manually' checkbox in Properties dialog of {1} to use existing definition. </entry>
    <entry key="MissingEnumeration">Enumeration ''{0}'' specified for monitoring the state activity of {1} does not exist in the MATLAB workspace.</entry>
    <entry key="CannotApplyExternalStateControl">External state control is not supported for {0} because it has either parallel (AND) decomposition or no substates.</entry>
    <entry key="ActionOnTransitionsESC">When external state control input is enabled, the chart does not execute the condition and transition actions in transition {0}.</entry>
    <entry key="NotAClassicChartESC">External state control is not supported for chart {0} because the chart property ''State machine type'' is not set to ''Classic''.</entry>
    <entry key="SuperstepNotSupportedESC">External state control is not supported for chart {0} because the chart property ''Enable super step semantics'' is enabled.</entry>
    <entry key="LocalEventsNotSupportedESC">External state control is not supported for chart {0} because the chart contains local events.</entry>
    <entry key="SimulinkStatesNotSupportedESC">External state control is not supported for chart {0} because the chart contains Simulink based states.</entry>
    <entry key="ExecAtInitNotSupportedESC">External state control is not supported for chart {0} because the chart property ''Execute (enter) chart at initialization'' is enabled.</entry>
    <entry key="ContinuousTimeNotSupportedESC">External state control is not supported for chart {0} because the chart property ''Update method'' is set to ''Continuous''.</entry>
    <entry key="ExternalStateControlLeafStateNameClash">External state control is not supported for {0} because leaf state {1}  and leaf state {2} have the same name. Leaf states must have unique names for external state control.</entry>
    <entry key="ConflictingEnumerationAlreadyPresentESC">Enumeration ''{0}'' specified for external state control of {1} conflicts with a preexisting enumeration defined for external state control of {2}.</entry>
    <entry key="EnumCreationErrorBadEnumTypeNameESC">Invalid identifier for enumeration type ''{0}'' for external state control of {1}. In the Chart properties dialog box, specify a valid MATLAB identifier for the enumeration type name.</entry>
    <entry key="EnumCreationErrorESC">Failed to create enumeration type ''{0}'' for external state control of {1}. {2}</entry>
    <entry key="EnumCreationErrorBecauseStorageTypeChangeESC">Failed to create enumeration type ''{0}'' for external state control of {1} because the storage type has changed and the previous enumeration definition could not be cleared. To resolve the problem, save, close, and re-open the model.</entry>
    <entry key="AtomicSubchartDataNameShadowingESC">Failed to create an external state control data with name ''{0}'' because an atomic subchart, data, or event with this name already exists. Creating output data with name ''{1}''.</entry>
    <entry key="AmbiguousUnqualifiedEnumLiteralUsage">Use of enumeration literal ''{0}'' is ambiguous because it could belong to any of the following enumerations {1}. Disambiguate the enumeration literal by prepending the enum type name to the literal.</entry>
    <entry key="DataIsNotFullyDefined">Size, type and complexity of data {0} have not all been specified in the Model Explorer. Also, there is no full assignment to this variable in the chart. You can fix this by doing one of the following:\n\n 1. Providing a complete assignment to the data. Note that an element-wise assignment, like "y(1) = 1", does not count as a full assignment\n\n2. Specifying all the properties of the data in the Model Explorer. </entry>
    <entry key="MessageIsNotFullyDefined">Size, type and complexity of message {0} have not all been specified in the Model Explorer. Also, there is no full assignment to this variable in the chart. You can fix this by doing one of the following:\n\n 1. Providing a complete assignment to the message data. Note that an element-wise assignment, like "y(1) = 1", does not count as a full assignment\n\n2. Specifying all the properties of the message in the Model Explorer. </entry>
    <entry key="SizeCannotBeNonScalarMl">Data {0} of MATLAB type unable to be non-scalar.</entry>
    <entry key="GlobalNotResolvedToDSM">Global declaration does not resolve to a Data Store Memory block registered with the Symbols Pane.</entry>
    <entry key="InvalidLocalOrConstantDataAccess">Attempted to access local or constant data {0}. This is not supported.  Remove this data from the Model Explorer.</entry>
    <entry key="AssignmendToSLInput">Attempted to assign to Simulink input {0}.</entry>
    <entry key="AssignmentAndShadowConstantWarning">Assigned symbol ''{0}'' resolved to a local variable and shadows constant {1}.</entry>
    <entry key="AssignmentAndShadowFunctionWarning">Assigned symbol ''{0}'' resolved to a local variable and shadows function ''{1}''.</entry>
    <entry key="sttLocalEvents">State Transition Table {0} is trying to both send and receive the following events: {1}. You can either send an output event, or receive an input event; local events are not supported.</entry>
    <entry key="streamingLeafStateActivityWithNoChildren">{0} is streaming its leaf state activity to the Simulation Data Inspector but has no children. No data will be streamed.
    </entry>
    <entry key="streamingChildStateActivityWithNoChildren">{0} is streaming its child state activity to the Simulation Data Inspector but has no children. No data will be streamed.
    </entry>
    <entry key="streamingChildStateActivityWithParallelDecomp">{0} is streaming its child state activity to the Simulation Data Inspector but has parallel decomposition. No data will be streamed.
    </entry>
    <entry key="streamingLeafStateActivityWithParallelDecomp">{0} is streaming its leaf state activity to the Simulation Data Inspector but has parallel decomposition. No data will be streamed.
    </entry>
    <entry key="streamingLeafStateActivityWithParallelChildren">{0} is streaming its leaf state activity to the Simulation Data Inspector and also has children with parallel decomposition. Each child with parallel decomposition will be treated as a leaf state.
    </entry>
    <entry key="InvalidNegativeFirstIndex">First Index property must be non-negative in data {0}.</entry>
    <entry key="triggeredByOutputEvent">State/transition is triggered by an output event {0}. This is not allowed.</entry>
    <entry key="triggeredByAbsTime">State/transition is triggered by an absolute time event. This is not allowed.</entry>
    <entry key="InputMessageInPostError">Input message {0} unable to be used in message send context.</entry>
    <entry key="OutputMessageInReceiveError">Output message {0} unable to be used in message receive context.</entry>
    <entry key="InvalidMessagePriority">Invalid priority for message {0}. Priority must be a positive scalar integer between 1 and (2^32)-1 (both included).</entry>
    <entry key="InvalidQCapacity">Invalid queue length for message {0}. Queue length must be a positive scalar integer between 1 and (2^16)-1 (both included).</entry>
    <entry key="IllegalOperationOnOutputMsg">Operation is not allowed on output message {0}. </entry>
    <entry key="DataRangeNotCheckedForComplex">Range of data {0} is not checked because it is complex. To silence this warning, clear the minimum and maximum values in the ''General'' tab of the data dialog.</entry>
    <entry key="DataRangeNotCheckedForBus">Range of data {0} is not checked because it is a bus object. To silence this warning, clear the minimum and maximum values in the ''General'' tab of the data dialog.</entry>
    <entry key="DataRangeNotCheckedForEnum">Range of data {0} is not checked because it is an enumeration. To silence this warning, clear the minimum and maximum values in the ''General'' tab of the data dialog.</entry>
    <entry key="DataDoesNotHaveFullAssignment"><![CDATA[Full assignment to data {0} is missing. Specify values for all elements of local and output data. Alternatively, if {0} is a structure, set its type to "Bus: <object name>".]]></entry>
    <entry key="MessagesSupportedForSimulationOnly">Currently messages are supported for Simulation only</entry>
    <entry key="CustomCodeIncludeDir">Custom code parser unable to figure out system include directories. You may need to run "mex -setup".</entry>
    <entry key="CustomCodeDiagnostic">{0} while parsing custom code:\nIn {1}{2},\n{3}:\n{4}</entry>
    <entry key="CustomCodeParseFailed">Failed to parse custom code specified in model configuration parameters dialog: Simulation Target -> Custom Code. Unresolved symbols are not reported.</entry>
    <entry key="ZeroSSIDsInStateflowMachine">Machine {0} has Stateflow objects with zero SSIDs. This may indicate that the model is corrupted. Attempting to fix it by assigning fresh SSIDs. Resave the model.</entry>
    <entry key="BadlyFormedSuperTransition">Transition {0} crosses state hierarchies, but does not connect a source state to a destination state.</entry>
    <entry key="EvaluatedExpressionErrorType"> Expression ''{0}'' for type of data {1} did not evaluate to a valid type.{2}</entry>
    <entry key="UnsupportedSimulinkTypeForData">{0} has a data type not supported in Stateflow.</entry>
    <entry key="EmlPropagationFailed">Simulink does not have enough information to determine output sizes for this block. If you think the errors below are inaccurate, try specifying types for the block inputs and/or sizes for the block outputs.  {0}</entry>
    <entry key="InvalidMappedExpressionUndefinedParameter">Invalid mapping expression ''{0}'' for subchart object {1}. Define symbol ''{2}'' as parameter data in parent chart.</entry>
    <entry key="InvalidMappingExpressionIndexValue">Mapped expression ''{0}'' for subchart object {1}  contains parameter index ''{2}'' with invalid value ''{3}''. All indices must be integers in the range [0,2^31-1].</entry>
    <entry key="InvalidMappedExpressionParameterIndex">Mapped expression ''{0}'' for subchart object {1} is invalid because parameter ''{2}'' has unexpected type. Use indices with integer values that have a maximum of 32 bit precision.</entry>
    <entry key="InvalidMappedExpressionNonTunableParameter">Mapped expression ''{0}'' for subchart object {1} is not supported for code generation because it uses inlined non-tunable parameter {2}. </entry>
    <entry key="InvalidMappedExpressionDynMatrix">Mapped expression ''{0}'' for data {1} of {2} is not supported because it evaluates to an object containing a variable-size matrix.</entry>
    <entry key="InvalidMappedExpressionParentMatrixOrArray">Expression ''{0}'' is invalid as a mapping for subchart object {1} because the inferred type of ''{2}'' is not a fixed-size matrix or array.</entry>
    <entry key="InvalidMappedExpressionNonZeroFirstIndex">First index in data {0} must be zero because data is used in expression {1} to specify a mapping for subchart {2}. Set first index to zero or remove the index ''{3}'' from the expression.</entry>
    <entry key="InvalidMappedExpressionParentBus">Expression ''{0}'' is invalid as a mapping for subchart object {1} because the inferred type of ''{2}'' is not a bus.</entry>
    <entry key="InvalidMappedBusExpressionParent">Expression ''{0}'' is an invalid qualified expression because ''{1}'' is not of bus type.</entry>
    <entry key="InvalidMappedExpressionIndexOutOfRange">Expression ''{0}'' is invalid as a mapping for subchart object {1} because index ''{2}'' is out of range for the matrix or array of size ''{3}''.</entry>
    <entry key="InvalidMappedExpressionMatrixSizeMismatch"> Expression ''{0}'' is invalid as a mapping for subchart object {1} because the number of indices in ''{2}'' does not match the number of dimensions ''{3}'' of matrix or array.</entry>
    <entry key="InvalidMappedBusExpressionElement">Expression ''{0}'' is an invalid qualified expression because ''{1}'' is not an element of bus ''{2}''.</entry>
    <entry key="MALUnsupportedDTO">Unsupported Data Type Override Usage: The inferred type for {0} ({1}) has been overridden to {2} according to the data type override settings. This usage is not currently supported. Note that according to MATLAB typing rules, only fixed point types created using the fi() function can be overridden. Builtin types such as ''uint8'' or ''single'' are not overridden. Consider using the fi operator if you wish to have inference produce the type specified in the data type override settings.</entry>
    <entry key="IllegalAccessToServerFcnWithStringInputType">Simulink server function or Stateflow exported function unable to have input of string type.</entry>
    <entry key="IllegalAccessToServerFcnWithStringOutputType">Simulink server function or Stateflow exported function unable to have output of string type.</entry>
    <entry key="IllegalAccessToServerFcnWithUnknownInputType">When calling a Simulink server function, all inputs and outputs need to be fully defined and not left inherited. Thus attempting to call ''{0}'' is not allowed because input argument {1,number,integer} of this function has an inherited size, type or complexity.</entry>
    <entry key="IllegalAccessToServerFcnWithUnknownOutputType">When calling a Simulink server function, all inputs and outputs need to be fully defined and not left inherited. Thus attempting to call ''{0}'' is not allowed because output argument {1,number,integer} of this function has an inherited size, type or complexity.</entry>
    <entry key="AccessToNonDataFieldOfMessage">Attempt to extract a non-existent field ''{0}'' from message {1}. To access the data of the message, use its ''.data'' field.</entry>
    <entry key="MessageWithoutPayload">Unable to use message {0} {1} because the type/size/complexity of the message is not fully specified. This issue can be resolved in one of the following ways:\n\n1. Assign a valid value to the ''.data'' field of the message.\n\n2. Explicitly specify the type/size/complexity of the message.</entry>
    <entry key="MessageWithoutPayloadLabel">here</entry>
    <entry key="IllegalMessagePayloadSyntax">Invalid syntax for the data of message {0}. Message data may be accessed using the ''.data'' field.</entry>
    <entry key="IllegalAttemptToCompileDeletedChart">Unable to compile a chart after it was deleted.</entry>
    <entry key="DesignVerifierIncompatible">{0} is incompatible with $PRODUCT$.</entry>
    <entry key="DesignVerifierIncompatibleCustomCode">{0} contains custom code calls incompatible with $PRODUCT$: {1}</entry>
    <entry key="PLCCoderIncompatible">{0} is incompatible with Simulink PLC Coder.</entry>
    <entry key="LatchNested">''{0}'' unable to be used in the argument of ''{1}'' (it will have no effect).</entry>
    <entry key="LatchInsideFunctionCall">''{0}'' unable to be used inside function ''{1}''.</entry>
    <entry key="LatchWrongArguments">''{0}'' takes exactly 1 argument, which can be any expression or a variable.</entry>
    <entry key="LatchIllegalArgumentExtrinsic">''{0}'' can not be used with extrinsic functions.</entry>
    <entry key="LatchInTransition">''{0}'' unable to be used in a default transition.</entry>
    <entry key="LatchBoundToMultipleStates">''{0}'' unable to be used on a transition that has paths beginning on more than 1 state.</entry>
    <entry key="LatchInNonNormalState">''{0}'' can only be used in Stateflow states or transitions immediately parented by a chart or state.</entry>
    <entry key="LatchOnlyAllowedOnRHSOfAssignExpr">''{0}'' should be used on the right-hand-side of an assignment.</entry>
    <entry key="LatchNotAllowedAsArgumentToFunction">''{0}'' is not allowed as an argument to ''{1}''.</entry>
    <entry key="FractionLengthMustBeScalar">Expression ''{0}'' for fraction length of data {1} must evaluate to a scalar.</entry>
    <entry key="SlopeMustBeScalar">Expression ''{0}'' for slope of data {1} must evaluate to a scalar.</entry>
    <entry key="BiasMustBeScalar">Expression ''{0}'' for bias of data {1} must evaluate to a scalar.</entry>
    <entry key="WordLengthMustBeScalar">Expression ''{0}'' for word length of data {1} must evaluate to a scalar.</entry>
    <entry key="MinimumMustBeScalar">Expression ''{0}'' for minimum of data {1} must evaluate to a scalar.</entry>
    <entry key="MaximumMustBeScalar">Expression ''{0}'' for maximum of data {1} must evaluate to a scalar.</entry>
    <entry key="NotAllowedForCurrentTarget">This is not supported for this target.</entry>
    <entry key="NotAllowedInMealyChart">This is not supported in a Mealy chart.</entry>
    <entry key="NotAllowedInMooreChart">This is not supported in a Moore chart.</entry>
    <entry key="NotAllowedInSimplifiedChart">This is not supported in a Simplified chart.</entry>
    <entry key="NotAllowedInTestSequenceBlock">This is not supported in a Test Sequence block.</entry>
    <entry key="RemainingMatlabFunctionInCodegen">Unable to eliminate use of the MATLAB function ''{0}'' during code generation.</entry>
    <entry key="RemainingMatlabConstantInCodegen">Unable to eliminate a constant of MATLAB type ''{0}'' during code generation.</entry>
    <entry key="RemainingMatlabConstantInDataflow">Unable to eliminate a constant of MATLAB type ''{0}'' during dataflow simulation.</entry>
    <entry key="InvalidArgumentsForSize">Size computation for {0} failed. size() requires 1 or 2 parameters.</entry>
    <entry key="InvalidArgumentToMessageDiscardFunction">Invalid argument to the ''discard'' function. The argument should be either an input or a local message.</entry>
    <entry key="InvalidArgumentToMessageIsValidFunction">Invalid argument to the ''isvalid'' function. The argument should be either an input or a local message.</entry>
    <entry key="InvalidArgumentToMessageQueueLengthFunction">Invalid argument to the ''length'' function. The argument should be either an input or a local message.</entry>
    <entry key="UnknownVarInSizeDefinition"><![CDATA[Size computation for {0} failed because size definition uses unknown or incompatible variables. For more information, see <a href="matlab: helpview('stateflow','bqlpmt4-2')">the documentation</a>.]]></entry>
    <entry key="NonDataObjectInSizeDefinition">Size computation for {0} failed. Non-data object {1} used in size definition.</entry>
    <entry key="UnableToDetermineParameterValueInSizeDefinition">Size computation for {0} failed. Unable to determine the value of parameter {1}.</entry>
    <entry key="UnknownFunctionInSizeDefinition">Size computation for {0} failed. Unknown function ''{1}'' used in definition, indexing into constants is not yet supported.</entry>
    <entry key="NonConstantValueInSizeDefinition">Size computation for {0} failed. Size definition is referring to the value of {1} which is not a constant, or a constant initialized from workspace.</entry>
    <entry key="CycleInSizeDefinition">Size computation for {0} failed. The definition is part of a cycle with {1}.</entry>
    <entry key="VariableSizeInScalarSizeDefinition">Size computation for {0} failed. Simulink does not support variable sizes for scalar signals.</entry>
    <entry key="ZeroSizeDefinition">Size computation for {0} failed. All dimensions must be non-zero.</entry>
    <entry key="MessageRefersToObject">Message refers to an object in {0}.</entry>
    <entry key="FoundDataWhereMessageOrEventWasExpected">Found data where event or message was expected.</entry>
        <entry key="IllegalUseOfDirectedMessageSend">Messages do not support calling ''send'' with two arguments. To send a message only to a state, call send using a state-parented local message as the only argument.</entry>
    <entry key="IllegalUseOfMessageData">Improper use of message data where a message was expected. Use the message name without the ".data" suffix in this context.</entry>
    <entry key="IllegalUseOfMessageAsTemporalEvent">Improper use of message as a temporal event.</entry>
    <entry key="IllegalUseOfMessageInOrTrigger">Using the logical OR operator to combine messages is not supported.</entry>
    <entry key="IllegalArtifactForTargetOrInSynchronousDomain">{0} in {1} is not supported for this target or when simulating in ''Synchronous'' domain.</entry>
    <entry key="IllegalArtifactInSynchronousDomain">{0} is not supported when simulating in ''Synchronous'' domain.</entry>
    <entry key="IllegalExtrinsicInMooreChart">Use of coder.extrinsic not allowed in {0}. Unable to enforce that outputs depend only on current state.</entry>
    <entry key="IllegalExtrinsicInSynchronousDomain">Use of coder.extrinsic not allowed in synchronous subsystems.</entry>
    <entry key="IllegalImportedFunctionInSynchronousDomain">Imported function ''{0}'' in {1} is not supported when simulating in ''Synchronous'' domain.</entry>
    <entry key="IllegalPerVarInSynchronousDomain"><![CDATA[{0} declares persistent variables or calls a function that uses persistent variables. To use persistent variables when simulating in ''Synchronous'' domain, clear the "Allow direct feedthrough" property. <a href="matlab:helpview(fullfile(docroot, 'hdlcoder', 'helptargets.map'),'statecontrol')">Related documentation</a>]]></entry>
    <entry key="WrongNumberOfArgumentsToMessageDiscardFunction">Function ''discard'' must take one input argument.</entry>
    <entry key="WrongNumberOfArgumentsToMessageIsValidFunction">Function ''isvalid'' must take one input argument.</entry>
    <entry key="InvalidArgumentToReceive">''{0}'' expects a message with scope ''Input'' or ''Local'' as the first argument.</entry>
    <entry key="UnconditionalPathOutOfParentState">{0} contains substates, ''on'' or ''during'' actions, but it has an unconditional path to {1}.</entry>
    <entry key="UselessSelfTransition">Self-transition {0} could be removed. {1} has no children, and it does not cause any action or side-effect.</entry>
    <entry key="AtomicSubchartDataNameShadowing">Unable to create an active state output data with name ''{0}'' because an atomic subchart, data, or event with this name already exists. Creating output data with name ''{1}''.</entry>
    <entry key="AtomicSubchartSelfActivityDataNameShadowing">Data ''{0}'' created to output the self activity of state {1} doesn't have the same name with the state whose self activity it is tracking.</entry>
    <entry key="MessageDataWithVariableSizes">Message {0} has data with variable sizes. Stateflow does not support variable sizes for messages.</entry>
    <entry key="CellArrayNotSupportedForStateflowData">Cell array type for Stateflow data ''{0}'' is not allowed.</entry>
    <entry key="FunctionHandleNotSupportedForStateflowData">Function handle type for Stateflow data ''{0}'' is not allowed.</entry>
    <entry key="malPPmalPPIllegalTriggerSectionInTrans">''{0}'' violates transition label notation: event_or_message[condition]'{'condition_action'}'/'{'transition_action'}'.</entry>
    <entry key="NoChartLevelGraphicalFunctionsWithInputOutputOfTypeFixedPoint">Chart level exported function {0} unable to have input or output data {1} of multi-word fixed-point type. </entry>
    <entry key="NoChartLevelGraphicalFunctionsWithInputOutputOfTypeDynamicMatrix">Chart level exported function {0} unable to have input or output data {1} of dynamic matrix type.</entry>
    <entry key="ExportedFunctionWithInfDimAndNotVariableSize">Chart level exported function {0} uses an unsupported data {1} with an unbounded dimension. Use positive integers to specify the size of data.</entry>
    <entry key="IllegalStaticExpandForExportedFunctions">Size mismatch while calling exported function {0}. The function expects a scalar input but is being passed a matrix value. This is not supported for exported functions.</entry>
    <entry key="UnexpectedSimulinkType">Fail to handle unexpected Simulink type.</entry>
    <entry key="InferenceFailedErrorAddon">Simulink is unable to determine sizes and/or types of the outputs for block {0} due to errors in the block body, or limitations of the underlying analysis. The errors might be inaccurate. Fix the indicated errors, or explicitly specify sizes and/or types for all block outputs.</entry>
    <entry key="DurationDes">Operator 'duration' is not supported in Discrete-Event Charts.</entry>
    <entry key="TemporalDes">Temporal operators 'elapsed', 'et' and 'temporalCount' are not supported in Discrete-Event Charts.</entry>
    <entry key="UnknownBlockStateNameInActionState">There is no named block state with the name ''{0}'' in {1}.</entry>
    <entry key="MultipleBlockStateNameInActionState">There are multiple blocks with the block state name ''{0}'' in {1}.</entry>
    <entry key="StateShadowsBus"> Symbol ''{0}'' could resolve to the bus {1}, or to the data parented by a state with the same name. Rename the bus or the state. </entry>
    <entry key="NoAtomicSubchartInPlantModelChart">In continuous time Stateflow charts, atomic subcharts are not allowed. Remove state {0}. Alternatively, you can convert it into an ordinary subchart.</entry>
    <entry key="IllegalPlantModelAsAtomicSubchart">Atomic subchart {0} unable to have a 'continuous' update method.</entry>
    <entry key="InvalidArgumentToMessageOverflowFunction">Invalid argument to the ''overflowed'' function. The argument must be an input or output message.</entry>
    <entry key="IllegalForwardExternalQueueMsgForAUTOSARTarget">Forwarding a message {0} from an external queue is not supported for AUTOSAR targets.</entry>
    <entry key="IllegalUseOfLengthFunctionOnExternalQueueOnAUTOSARTarget">Querying the length of message queue {0} is not supported for AUTOSAR targets.</entry>
    <entry key="OutputDataUsedInSimulinkStatesActiveAtTheSameTime">Output data {0} is being used by state {1} and {2} which are active at the same time.</entry>
    <entry key="UnsupportedVariableSizeArrayFieldLogging">Data {0} contains a variable-size array. Logging variable-size arrays as a field in a bus is unsupported.</entry>
    <entry key="TypeSizeComplexityUnspecifiedForBusStruct">Data type, size, and complexity must be specified when the ''Initialize method'' property is set to ''Parameter'' for bus or struct types. Ensure data type, size, and complexity are specified for data {0}.</entry>
        <entry key="CellArrayTunableParameter">Tunable parameter {0} does not support cell arrays.</entry>
    <entry key="IdenticalChartswithDifferentCustomCodeDLL">Identical charts with different custom code settings are not supported.</entry>
    <entry key="NDArrayCustomCodeAccessInMAL">{0} unable to access custom code variable ''{1}'' which is not a scalar or vector, or having struct field which is not a scalar or vector.</entry>
    <entry key="NDArrayInStructTypeCustomCodeAccess">Struct fields in custom code variables must be scalars or vectors.</entry>
    <entry key="NDFieldOfCCStruct">Unable to access custom code structure ''{0}'' for ''{1}''. Custom code structure fields must be scalars or vectors.</entry>
    <entry key="NDCustomCodeSupportForRowMajorWithTypedIR">
      <![CDATA[Setting '<a href="matlab:SLCC.Utils.OpenConfigureSetAndHighlightDefaultFunctionArrayLayout(''{0}'')">Default function array layout</a>' to "Row-major" is supported only when importing and parsing custom code. Select '<a href="matlab:SLCC.Utils.OpenConfigureSetAndHighlightParseCC(''{0}'')">Import custom code</a>'.]]>
    </entry>
    <entry key="ComplexCustomCodeAccess">Stateflow unable to access custom code variable ''{0}'' which contains complex type.</entry>
    <entry key="RowMajorNotSupportedForCustomCodeFcnWithND">In charts that use row major layout, arguments to custom code functions must be scalars, vectors, or structs of scalars and vectors.</entry>
    <entry key="RowMajorIncompatibleWithOperator">Operator {0} does not support row-major layout for expressions using or contained within non-scalar types.</entry>
    <entry key="RowMajorForBusWithMatrixField">Row-major layout is not supported because the data field for message ''{0}'' is a bus containing matrices or strings. Change the message data type or set the model configuration parameter ''Array layout'' to ''Column-major''.</entry>
    <entry key="SymbolIsOfAComplexType">{0} is of complex type.\nThe option 'Support complex numbers' has not been set in Configuration Parameters > Code Generation > Interface pane. Hence, only real code/data is allowed.</entry>
    <entry key="SymbolIsInitializedFromAComplexType">{0} is initialized from a complex type.\nThe option 'Support complex numbers' has not been set in Configuration Parameters > Code Generation > Interface pane. Hence, only real code/data is allowed.</entry>
    <entry key="TemporalOperatorUsedInStatesActiveAtTheSameTime">Temporal operators (after/before/every/at) not supported on this transition. Transition can be reached by states {0} and {1} which can be active at the same time.</entry>
    <entry key="PassByReferenceCustomCodeFunctionNotSupported">Custom code function {0} with non-scalar or pointer arguments is not supported for direct function call in MATLAB based blocks. MATLAB based blocks include Stateflow charts with MATLAB as the action language, MATLAB functions in Stateflow charts, and Truth Table functions with MATLAB as the action language in Stateflow charts. Use coder.ceval to call this custom code function instead.</entry>
    <entry key="CppReferencesNotSupported">Stateflow charts do not support C++ references in custom code. Modify the custom code to accept or return pointers.</entry>
    <entry key="CustomCodeFunctionFilteredOut">Custom code function {0} is filtered out because it is undefined in custom code source files or library files. Specify how Simulink handles undefined functions and variables by adjusting the ''Undefined function handling'' parameter.</entry>
    <entry key="TemporalLogicDependencyInMooreChart"><![CDATA[In Moore chart {0}, outputs depend on a temporal logic operator, which does not comply with <a href="matlab:sfhelp(''moore_charts_semantics'')">Moore chart semantics</a>.]]></entry>
    <entry key="EmptyChartOutputFunctionIsNotAllowedInPLC">Empty chart output function is not supported in Simulink PLC Coder. To generate code, specify non-empty state actions.</entry>
    <entry key="NdIndexingNotSupportedForStateflowMessages">Dimension preservation for Stateflow local data is not supported for Stateflow charts containing messages. Either set the ''PreserveStateflowLocalDataDimensions'' configuration parameter to ''off'' or eliminate Stateflow messages.</entry>
    <entry key="EventsInDuration">Event {0} is not supported in duration operator.</entry>
    <entry key="EventsInCount">Event {0} is not supported in count operator. Use temporalCount operator instead.</entry>
    <entry key="ExtrinsicFunctionsNotSupportedInDurationOrCount">{0}: Extrinsic function calls are not supported as arguments to ''duration'', ''count'', ''verify'', or ''latch'' operators.</entry>
    <entry key="ThisKeywordNotSupportedInDurationOrCount">{0}: Keyword ''this'' is not supported as an argument to ''duration'' or ''count'' operators.</entry>
    <entry key="ScopedFunctionsNotSupportedInDurationOrCount">{0}: Scoped function calls are not supported as arguments to duration or count operators. </entry>
    <entry key="WeakPropagatedConditionInUsedFunction">Unable to verify that the propagated variant condition for {0} implies the condition for function {1}. To prevent unexpected behavior, do not call function {1} from {0}.</entry>
    <entry key="WeakPropagatedConditionInUsedFunctionFromAtomicSubchart">Unable to verify that the propagated variant condition for {0} implies the condition for atomic subchart {1}. To prevent unexpected behavior, do not call functions parented by {1} from {0}.</entry>
    <entry key="WeakPropagatedConditionInUsedFunctionFromBox">Unable to verify that the propagated variant condition for {0} implies the condition for box {1}. To prevent unexpected behavior, do not call functions parented by {1} from {0}.</entry>
    <entry key="WeakPropagatedConditionInUsedFunctionFromState">Unable to verify that the propagated variant condition for {0} implies the condition for state {1}. To prevent unexpected behavior, do not call functions parented by {1} from {0}.</entry>
    <entry key="WeakPropagatedConditionInUsedData">Unable to verify that the propagated variant condition for {0} implies the condition for parent {1} of symbol {2}. To prevent unexpected behavior, do not use symbol {2} in {0}.</entry>
    <entry key="PartitioningFcnsNotSupportedInCodeGen">Charts containing function ''{0}'' are not supported for code generation.</entry>
    <entry key="PartitioningFcnsNotSupportedInModelRef">Charts containing function ''{0}'' are not supported inside a referenced model.</entry>
    <entry key="InvalidArgumentToScheduleFcn">Argument to ''schedule'' function must be a string constant.</entry>
    <entry key="InvalidArgumentToDisableFcn">Argument to ''disable'' function must be a string constant.</entry>
    <entry key="InvalidArgumentToEnableFcn">Argument to ''enable'' function must be a string constant.</entry>
    <entry key="InvalidPartitionNameToSchedule">Invalid partition name ''{0}''. Argument to the ''schedule'' function must be a locally scheduled unconstrained partition.</entry>
    <entry key="InvalidPartitionNameToDisable">Invalid partition name ''{0}''. Argument to ''disable'' function must be a non-base rate discrete or unconstrained partition.</entry>
    <entry key="InvalidPartitionNameToEnable">Invalid partition name ''{0}''. Argument to ''enable'' function must be a non-base rate discrete or unconstrained partition.</entry>
    <entry key="BoundPartitionNotAllowedInEnableDisable">Invalid partition name ''{0}''. Argument to ''{1}'' function must not be a bound partition.</entry>
    <entry key="InvalidSendForImportedEvent">Use the syntax ''send({0})'' to broadcast an imported event.</entry>
    <entry key="InvalidEventForSend">Unable to send event ''{0}'' of type ''{1}''.</entry>
    <entry key="DworkMismatch">
      Code generation and simulation targets registered different sets of persistent variables for the block. External or Rapid Accelerator mode simulation requires code generation and simulation targets to register the same set of persistent variables for this block. This discrepancy is typically caused by MATLAB functions that have different code paths for simulation and code generation targets where these code paths define different sets of persistent variables. Identify these code paths in the offending block and rewrite the MATLAB code so that the set of persistent variables is the same between simulation and code generation.
    </entry>
    <entry key="CannotDisableBitOpsAndUseVariants">Chart ''{0}'' must have bitwise operations enabled because it has variant transitions.</entry>
    <entry key="AmbiguousVariantParameterDefinition">Parameter ''{0}'' does not evaluate to a scalar numeric value in the base workspace. To prevent unexpected behavior, define the parameter in the base workspace and remove its definitions from other workspaces.</entry>
    <entry key="InvalidVariantTransitionCondition">Invalid condition ''{0}'' on a variant transition. Conditions must depend on chart parameters with scalar numeric or logical types and evaluate to a logical or numeric value.</entry>
    <entry key="InvalidVariantTransitionConditionBase">Invalid condition on variant transition {0}.</entry>
    <entry key="VariantTransitionConditionWithFcnCallOrIndex">Invalid condition on a variant transition. Function calls and indices are not supported.</entry>
    <entry key="VariantTransitionConditionWithBuiltInRedefinedInChart">Name of a built-in MATLAB function ''{0}'' used in a variant transition condition conflicts with a symbol in the chart.</entry>
    <entry key="VariantTransitionConditionWithBuiltInRedefinedInCC">Name of a built-in MATLAB function ''{0}'' used in a variant transition condition conflicts with a symbol in Custom Code.</entry>
    <entry key="VariantTransitionConditionWithBuiltInRedefinedInMatlab">Name of a built-in MATLAB function ''{0}'' used in a variant transition condition conflicts with a symbol defined in a file on the MATLAB path.</entry>
    <entry key="VariantTransitionWithTrigger">Variant transitions with triggers are not supported.</entry>
    <entry key="VariantTransitionWithAction">Variant transitions with actions are not supported.</entry>
    <entry key="VariantTransitionWithNonParameterSymbol">Invalid scope for symbol ''{0}''. Use only chart parameters in variant transition conditions.</entry>
    <entry key="VariantTransitionWithUnqualifiedEnum">Variant transitions do not support unqualified names for enumerated values. Replace ''{0}'' with ''{1}.{0}''.</entry>
    <entry key="VariantTransitionWithInvalidParameterType">Invalid type for data ''{0}'' in variant transition condition. Use integer data with 32 bits or fewer or enumerated data.</entry>
    <entry key="VariantTransitionWithRedefinedBooleanConstant">Invalid symbol name ''{0}'' in chart ''{1}''.</entry>
    <entry key="VariantTransitionWithoutCondition">Unconditional variant transitions are not supported.</entry>
    <entry key="VariantTransitionInFunction">Variant transitions inside functions are not supported.</entry>
    <entry key="UnsupportedDotOperatorInVariantCondition">"{0}" is not supported in a variant transition because "{1}" does not resolve to an enumerated type.</entry>
    <entry key="DisallowedDefaultGraph">Default transition paths in Stateflow object ''{0}'' contain a variant transition and a conditional non-variant transition. Only one of these two transitions is allowed in all default paths of an object.</entry>
    <entry key="VariantParameterOccursInWrongContext">Parameter ''{0}'' is used in both variant and non-variant contexts. Create a new parameter to be used in the non-variant context.</entry>
    <entry key="UnsupportedTargetForStartupVariants">Current code generation target is not supported for chart ''{0}'', which uses startup variant activation time. Use startup variants for simulation or embedded real time code generation target.</entry>
    <entry key="GenerateReusableCodeWithExportedFunction">Reusable functions and C++ class code interface packaging are not supported when the chart property Export chart level functions is enabled.</entry>
    <entry key="DefaultGraphWithVariantTransitionsAndActions">Default transition paths in Stateflow object ''{0}'' contain a variant transition and a transition with an action. Only one of these two transitions is allowed in all default paths of an object.</entry>
    <entry key="OverflowKeywordUnsupportedForCurrentCodegenTarget">Operator ''overflowed'' is supported only for AUTOSAR compliant target. Set system target file to autosar.tlc or use an AUTOSAR compliant target file.</entry>
    <entry key="IllegalSourceTypePassed">Invalid transition source.</entry>
    <entry key="IllegalDestinationTypePassed">Invalid transition destination.</entry>
    <entry key="DisallowedJunctionTransitionSrc">Exit junctions must be transition destinations.</entry>
    <entry key="DisallowedPortTransitionSrc">Entry ports must be transition destinations.</entry>
    <entry key="DisallowedJunctionTransitionDst">Entry junctions must be transition sources.</entry>
    <entry key="DisallowedPortTransitionDst">Exit ports must be transition sources.</entry>
    <entry key="MultipleTransitionsToPort">Entry ports must have only one incoming transition.</entry>
    <entry key="MultipleTransitionsFromJunction">Entry junctions must have only one outgoing transition.</entry>
    <entry key="MultipleTransitionsFromPort">Exit ports must have only one outgoing transition.</entry>
    <entry key="PortInGraphicalFunction">Entry/Exit junction {0} is not supported in a graphical function.</entry>
    <entry key="NoFcnGeneratedForPort">Unable to find a path from entry junction {0} to a state.</entry>
    <entry key="DisallowedSymbolicDimensionsInMALFcns">MATLAB function {0} does not support input or output arguments with symbolic dimensions.</entry>
    <entry key="DisallowedSizeWithSymbolicDims">Operator ''size'' does not support argument {0} with symbolic dimensions.</entry>
    <entry key="UnsupportedBusTypeWithVarSizeElement">Bus object containing variable-sized matrices is not supported for code generation. {0} is a bus object with variable-sized matrix element.</entry>
    <entry key="InvalidPropagatedCondition">Unable to evaluate propagated variant condition {0} of Stateflow object {1}.</entry>
    <entry key="TypeMismatchForMessageForward">In ''{2}'' operator, messages {0} and {1} must have the same type, size, and complexity.</entry>
    <entry key="IllegalActionsInSimulinkState">Simulink based state {0} does not support entry, during, or exit actions.</entry>
    <entry key="CompilingForSimulation">Compiling "{0}" (#{1}) for simulation</entry>
    <entry key="NonTunableParamResolvesToMaskExpr">Unable to resolve the initial value of {0} to a model workspace argument. Make {0} a tunable parameter or set its ''Initialize method'' property to ''Parameter''.</entry>
    <entry key="IncompatibleChangeToCALSfix64"><![CDATA[In previous releases, data or message {0} is treated as a fixed-point data type. As of R2021a, data or message {0} is treated as an integer type. This change might result in behavior differences or errors.

    If the new behavior is acceptable, resave this model to avoid the warning.
    ]]>
    </entry>
    <entry key="IncompatibleChangeToSfix64"><![CDATA[In previous releases, data {0} is treated as a fixed-point data type. In R2020a, data {0} is treated as an integer type. This change might result in behavior differences or errors.

    If the new behavior is acceptable, resave this model to avoid the warning.
    ]]>
    </entry>
    <entry key="emlVariableSizingSimulinkString">String operation is not supported because ''Support variable-size arrays'' is disabled for {0}.</entry>
    <entry key="UnsupportedVariableSizeForBlockInput"><![CDATA[{0} expects fixed-sized inputs but input {1} has variable size. Enable the property '<a href="matlab: daexplr('view', {2, number, integer});">Support variable-size arrays</a>'.]]></entry>
    <entry key="UnsupportedVariableSizeAndSymbolicDimension"><![CDATA[Variable-size data {0} in {1} does not support specification of symbolic dimensions.]]></entry>
    <entry key="UnsupportedInheritedOutputsWhenInputIsSymbolic"><![CDATA[MATLAB Function Block {1} does not support output data {0} with inherited size because the block contains inputs with symbolic dimensions specifications.]]></entry>
    <entry key="InitialValueIgnoredFAV">{0} does not support using the ''arguments'' block to specify initial values for input data.</entry>
    <entry key="SymbolicPropagationFailure">Unable to process symbolic dimensions in MATLAB Function {0}.</entry>
	<entry key="UnsupportedSymbolicDimensionWhenImplicitExpansionIsEnabled">Implicit expansion is not supported by MATLAB functions containing inputs with symbolic dimensions in {0}. Disable implicit expansion to generate code.</entry>
    <entry key="UnsupportedSymbolicParameters">{1} does not support Simulink.Parameter {0} with symbolic dimensions.</entry>
    <entry key="UnsupportedSymbolicDSM">{0} does not support data store memory {1} with symbolic dimensions.</entry>
    <entry key="VariableSizeArrayInCodeGen">Symbolic propagation failed for MATLAB function {0}. Generated code may contain variable-size arrays.</entry>
    <entry key="EnableVariableSizeAndDynamicMemoryAllocation">Generated code contains variable-size arrays. Enable 'Support variable-size arrays' for MATLAB function {0}. Also, enable dynamic memory allocation by opening the Configuration Parameters dialog box and, in the Simulation Target pane, selecting 'Dynamic Memory Allocation In MATLAB functions'.</entry>
    <entry key="SymbolicSizeBusField">Symbolic size is not supported in field "{1}" of bus "{0}".</entry>
    <entry key="UnsupportedSymbolicDimensionsWithLogicalIndexExpressions">MATLAB function {0} does not support logical index expressions with symbolic dimensions.</entry>
    <entry key="UnsupportedAttributeForVararg">Specifying size, type, or complexity attributes for {0} is not supported. Stateflow ignores these attributes for {0}.</entry>
    <entry key="DeprecateUndirectedLocalEventBroadcasts">In a future release, undirected local event broadcasts will be removed. Make event in {0} directed by providing a state when broadcasting the event.</entry>
    <entry key="IllegalUseOfEvent">Unable to use event "{0}" as an argument.</entry>
    <entry key="EnableInitFromWorkspaceForBuses">
      <![CDATA[''Initialize method'' property is set to ''Expression'' for {0}. Set ''Initialize method'' to ''Parameter'' when providing initial values for bus objects.
               <actions exclusiveFixIts="yes">
               <action type="fixit" retvalue="false">
               <cmd>sf(''set'', {1}, ''.initFromWorkspace'', 1);</cmd>
               <txt>To set ''Initialize method'' as ''Parameter'', click {0} to open the Data Properties dialog box in the Model Explorer. In the ''Initialize method'' drop-down menu, select ''Parameter''.</txt>
               </action>
               </actions>
      ]]>
    </entry>
    <entry key="OverloadedCustomCodeFunction">Calls to overloaded custom code functions are not supported.</entry>
    <entry key="UnsupportedTypeForBusInitialization">{0} is of type ''{1}'' that contains 1 or more string fields. Buses with string fields cannot be initialized through the Property Inspector or Model Explorer. Assign a value to {0} in a state or transition.</entry>
    <entry key="VariableSizeBusInitialization">{0} is of type ''{1}'' with variable size. Buses of variable size cannot be initialized through the Property Inspector or Model Explorer. Assign a value to {0} in a state or transition.</entry>
    <entry key="BusInitUnsupportedForHDL">Property ''Initial value'' is not supported for buses when coding for HDL targets. Assign a value to bus {0} in a state or transition.</entry>
	<entry key="ChartInModelReferenceSimTargetCustomCodeUnchecked">''{0}'' is used in referenced model which cannot simulate in accelerator mode with ''{1}'' disabled.
        <![CDATA[
            <actions exclusiveFixIts="yes">
                <action type="suggestion">
                    <cmd>open_system(''{2}'');configset.highlightParameter(''{2}'','SupportModelReferenceSimTargetCustomCode');</cmd>
                    <txt>You may enable ''{1}'' in model ''{2}'' and resave the model.</txt>
                </action>
            </actions>
        ]]>
    </entry>
  <entry key="StringNotSupportedInBusParameter">Strings are not supported for use as a parameter. {0} is a parameter that contains one or more string fields.</entry>
</message>
</rsccat>

<!-- LocalWords:  subviewer AVT wakeup
-->

