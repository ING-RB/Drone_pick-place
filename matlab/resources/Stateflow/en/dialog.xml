<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright 2009-2024 The MathWorks, Inc. -->
<rsccat xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" locale="en_US" product="Stateflow" version="1.0" xsi:noNamespaceSchemaLocation="../../schema/msgcat.xsd">
  <message>
    <entry key="AslLinkState">Outputting activity of state</entry>
    <entry key="AslLinkChart">Outputting activity of chart</entry>
    <entry key="AslLocalLinkState">Tracking activity of state</entry>
    <entry key="AslLocalLinkChart">Tracking activity of chart</entry>
    <entry key="AddToWatchWindow">Add to Watch Window</entry>
    <entry key="ChartAnimationMenu">Chart Animation</entry>
    <entry key="CommonEdit">Edit</entry>
    <entry key="CommonData">Data</entry>
    <entry key="CommonLowerMachine">machine</entry>
    <entry key="CommonMachine">Machine</entry>
    <entry key="CommonLowerChart">chart</entry>
    <entry key="CommonChart">Chart</entry>
    <entry key="CommonBox">Box</entry>
    <entry key="CommonLowerBox">box</entry>
    <entry key="CommonLowerFunction">function</entry>
    <entry key="CommonMATLABFunction">MATLAB function</entry>
    <entry key="CommonTruthTableFunction">Truth Table function</entry>
    <entry key="CommonGraphicalFunction">Graphical function</entry>
    <entry key="CommonSimulinkFunction">Simulink function</entry>
    <entry key="CommonAtomicSubchart">Atomic Subchart</entry>
    <entry key="CommonAtomicBox">Atomic Box</entry>
    <entry key="CommonState">State</entry>
    <entry key="CommonSimulinkState">Simulink State</entry>
    <entry key="CommonLowerState">state</entry>
    <entry key="CommonLowerEvent">event</entry>
    <entry key="CommonTransition">Transition</entry>
    <entry key="CommonDescription">Description</entry>
    <entry key="CommonDocumentation">Documentation</entry>
    <entry key="CommonDocumentLink">Document link</entry>
    <entry key="CommonEvent">Event</entry>
    <entry key="CommonMessage">Message</entry>
    <entry key="CommonEntity">Entity</entry>
    <entry key="CommonTrigger">Trigger</entry>
    <entry key="CommonFunctionCall">Function Call</entry>
    <entry key="CommonScope">Scope</entry>
    <entry key="CommonScalarValueExpected">Numeric value expected</entry>
    <entry key="CommonPort">Port</entry>
    <entry key="CommonName">Name</entry>
    <entry key="CommonProperties">Properties</entry>
    <entry key="NoProperties">No Properties to display</entry>
    <entry key="CommonInfo">Info</entry>
    <entry key="CommonAdvanced">Advanced</entry>
    <entry key="CommentTextDialogTitle">{0} comment</entry>
    <entry key="PortName">Data name</entry>
    <entry key="EnumName">Enum name</entry>
    <entry key="ManageBreakpoints">Breakpoints List</entry>
    <entry key="CommonGeneralTab">General</entry>
    <entry key="CommonFimathTab">Fixed-point properties</entry>
    <entry key="DataTunable">Tunable</entry>
    <entry key="DataTriggering">Triggering</entry>
    <entry key="DataVariableSize">Variable size</entry>
    <entry key="DataVariableSizeColsOnly">Variable number of columns</entry>
    <entry key="DataSize">Size</entry>
    <entry key="DataUpdateMethod">Update Method</entry>
    <entry key="DataUnit">Unit</entry>
    <entry key="DataSignalBindingCheck">Data must resolve to signal object</entry>
    <entry key="DataComplexity">Complexity</entry>
    <entry key="DataInherited">Inherited</entry>
    <entry key="DataOn">On</entry>
    <entry key="DataOff">Off</entry>
    <entry key="DataFrameLabel">Sampling mode</entry>
    <entry key="DataType">Type</entry>
    <entry key="DataInitialValue">Initial value</entry>
    <entry key="DataConstantValue">Constant value</entry>
    <entry key="DataInitializeMethod">Initialize method</entry>
    <entry key="DataSaveToWorkspace">Save final value to base workspace</entry>
    <entry key="DataMinimum">Minimum</entry>
    <entry key="DataMaximum">Maximum</entry>
    <entry key="DataLimitRange">Limit range</entry>
    <entry key="DataLimitPoints">Limit Data Points</entry>
    <entry key="DataValueAttributesTab">Value Attributes</entry>
    <entry key="DataDescriptionTab">Description</entry>
    <entry key="DataEditBusObject">Edit Bus Object</entry>
    <entry key="DataEnumType">Enum type</entry>
    <entry key="DataLockOutputScaling">Lock data type against Fixed-Point tools</entry>
    <entry key="DataLocal">Local</entry>
    <entry key="DataInput">Input</entry>
    <entry key="DataOutput">Output</entry>
    <entry key="DataImported">Imported</entry>
    <entry key="DataExported">Exported</entry>
    <entry key="DataTemporary">Temporary</entry>
    <entry key="DataConstant">Constant</entry>
    <entry key="DataParameter">Parameter</entry>
    <entry key="DataProperties">Data Properties</entry>
    <entry key="DataDecimationValue">Decimation Value</entry>
    <entry key="DataDecimate">Decimate Data</entry>
    <entry key="DataDataStoreMemory">Data Store Memory</entry>
    <entry key="DataWatchInDebuggerCheck">Watch in debugger</entry>
    <entry key="DataUnits">Units</entry>
    <entry key="DataFirstIndex">First index</entry>
    <entry key="DataAutoManageCheck">Automatically manage lifetime and properties for this data</entry>
    <entry key="DataLimitLastValue" > Last Value </entry>
    <entry key="DataModelOutput">Treat as design model output for analysis</entry>
    <entry key="DeletionConfirmationData">Are you sure you want to delete data ''{0}''?\nNote that this action cannot be undone.</entry>
    <entry key="DeletionConfirmationEvent">Are you sure you want to delete event ''{0}''?\nNote that this action cannot be undone.</entry>
    <entry key="DeletionConfirmationMessage">Are you sure you want to delete message ''{0}''?\nNote that this action cannot be undone.</entry>
    <entry key="DeletionConfirmationTitle">Delete unused object</entry>
    <entry key="EMLDataConversionData">data</entry>
    <entry key="EMLDataConversionDatas">data</entry>
    <entry key="EMLDataConversionSignal">signal</entry>
    <entry key="EMLDataConversionSignals">signals</entry>
    <entry key="EMLDataConversionFimathLabel">FIMATH for fixed-point input {0}:</entry>
    <entry key="EMLDataConversionFimathToolTip">Enter an expression evaluating to an embedded.fimath object.\nThis fimath will be used for all fixed-point inputs and fi objects.</entry>
    <entry key="EMLDataConversionFimathForFisName">FIMATH for fi and fimath constructors</entry>
    <entry key="EMLDataConversionFimathForFisSameAs">Same as FIMATH for fixed-point input {0}</entry>
    <entry key="EMLDataConversionFimathForFisDefault">MATLAB factory default</entry>
    <entry key="EMLDataConversionFimathForFisToolTip">Select a fimath that will be returned by the default fimath constructor.\nThis fimath will also be used by fi constructors where a fimath is not explicitly specified.</entry>
    <entry key="EMLDataConversionTreatIntsAsFixptName">Treat these inherited Simulink signal types as fi objects </entry>
    <entry key="EMLDataConversionEMLBlockFimath">MATLAB Function fimath</entry>
    <entry key="EMLDataConversionSFChartFimath">MATLAB Chart fimath</entry>
    <entry key="EMLDataConversionReqTableFimath">Requirements Table fimath</entry>
    <entry key="EMLDataConversionEMLFimathToolTip">Specify the fimath for fixed-point inputs and fi objects in the MATLAB Function block.</entry>
    <entry key="EMLDataConversionEMLFimathSameAsML">Same as MATLAB</entry>
    <entry key="EMLDataConversionEMLFimathSpecify">Specify other</entry>
    <entry key="SaturateOnIntegerOverflowName">Saturate on integer overflow</entry>
    <entry key="EventLocal">Local</entry>
    <entry key="EventExported">Exported</entry>
    <entry key="EventImported">Imported</entry>
    <entry key="EventInputFromSimulink">Input from Simulink</entry>
    <entry key="EventOutputToSimulink">Output to Simulink</entry>
    <entry key="EventEither">Either</entry>
    <entry key="EventRising">Rising</entry>
    <entry key="EventFalling">Falling</entry>
    <entry key="EventFunctionCall">Function call</entry>
    <entry key="EventEitherEdge">Either Edge</entry>
    <entry key="EventDebuggerBreakpoints">Debugger breakpoints</entry>
    <entry key="EventStartBroadcast">Start of Broadcast</entry>
    <entry key="EventEndBroadcast">End of Broadcast</entry>
    <entry key="IgnoreDeletionConfirmation">In the future, delete without asking.</entry>
    <entry key="MessagePost">On Post</entry>
    <entry key="MessagePop">On Pop</entry>
    <entry key="MessageConsume">On Consume</entry>
    <entry key="MessageInputFromSimulink">Input from Simulink</entry>
    <entry key="MessageOutputToSimulink">Output to Simulink</entry>
    <entry key="MessageDebuggerBreakpoints">Debugger breakpoints</entry>
    <entry key="ChartUpdateMethod">Update method</entry>
    <entry key="ChartSampleTime">Sample time</entry>
    <entry key="ChartStateMachineType">State machine type</entry>
    <entry key="ChartActionLang">Action language</entry>
    <entry key="ChartAllowAccessibilityFromOtherCharts">Call functions externally without using qualified notation.</entry>
    <entry key="ChartEnableSuperStepSemantics">Enable super step semantics</entry>
    <entry key="ChartNonTerminalMaxCounts">Maximum iterations in each super step</entry>
    <entry key="ChartNonTerminalUnstableBehavior">Behavior after too many iterations</entry>
    <entry key="ChartEnableZeroCrossings">Enable zero-crossing detection</entry>
    <entry key="ChartEnableBitOps">Enable C-bit operations</entry>
    <entry key="ChartEnableBitOpsToolTip">Interpret &amp;, |, ^, and ~ operators as bit operations.</entry>
    <entry key="ChartApplyToAllCharts">Apply to all charts in machine now</entry>
    <entry key="ChartExportChartFunctions">Export chart level functions (make global)</entry>
    <entry key="ChartExportChartFunctionsLocal">Export chart level functions</entry>
    <entry key="ChartExportFunctionsToolTip">Allow exported functions to be called by Simulink.</entry>
    <entry key="ChartExportFunctionsDisabledToolTip">(currently disabled because this chart has no top-level functions)</entry>
    <entry key="ChartStrongDataTypingWithSimulink">Use strong data typing with Simulink I/O</entry>
    <entry key="ChartExecuteAtInitialization">Execute (enter) chart at initialization</entry>
    <entry key="ChartInitializeOutput">Initialize outputs every time chart wakes up</entry>
    <entry key="ChartDebuggerBreakpoint">Debugger breakpoint</entry>
    <entry key="ChartOnEntry">On chart entry</entry>
    <entry key="ChartMealy">Mealy Chart</entry>
    <entry key="ChartMoore">Moore Chart</entry>
    <entry key="ChartSimplified">Simplified Chart</entry>
    <entry key="ChartEMChart">MATLAB Function</entry>
    <entry key="ChartReactiveTestingTable">Test Sequence</entry>
    <entry key="ChartTruthTable">Truth Table</entry>
    <entry key="ChartRequirementsTable">Requirements Table</entry>
    <entry key="ChartPlantModel">Plant Model Chart</entry>
    <entry key="ChartStateTransitionTable">State Transition Table</entry>
    <entry key="ChartDES">Discrete Event Chart</entry>
    <entry key="ChartUnknown">Unknown</entry>
    <entry key="AllowDirectFeedthrough">Allow direct feedthrough</entry>
    <entry key="VectorOutputs1D">Interpret output column vectors as one-dimensional data</entry>
    <entry key="SupportVariableSizingName">Support variable-size arrays</entry>
    <entry key="EnableOutputsInPrecondition">Enable outputs in preconditions</entry>
    <entry key="ChartStatesWhenEnabling">States When Enabling</entry>
    <entry key="NonTunableDynamicSizeParameterNotSupported">Non-tunable parameter can not have variable size. </entry>
    <entry key="AboutStateflow">About Stateflow</entry>
    <entry key="RemoveFromWatchWindow">Remove from Watch Window</entry>
    <entry key="TextAlignmentLeft">Left</entry>
    <entry key="TextAlignmentCenter">Center</entry>
    <entry key="TextAlignmentRight">Right</entry>
    <entry key="StateNoteboxCallbackName">The ClickFcn is called when a user single-clicks on this note. For example, to browse a web site specified in the note text try\nan = getCallbackAnnotation; web(an.Text);</entry>
    <entry key="StateNoteboxImageCallbackName">The ClickFcn is called when a user single-clicks on this image. For example, to browse a web site after clicking, try\nweb(&lt;url&gt;);</entry>
    <entry key="StateNoteboxClickFcnName">Use display text as click callback</entry>
    <entry key="StateNoteboxDropShadowName">Shadow</entry>
    <entry key="StateNoteboxFixedHeightName">Fixed height</entry>
    <entry key="StateNoteboxFixedWidthName">Fixed width</entry>
    <entry key="StateNoteboxFixedSizeName">Fixed size</entry>
    <entry key="StateNoteboxForegroundName">Foreground color:</entry>
    <entry key="StateNoteboxBackgroundName">Background color:</entry>
    <entry key="StateNoteboxAlignmentName">Alignment:</entry>
    <entry key="StateNoteboxLeftMarginName">Left margin:</entry>
    <entry key="StateNoteboxTopMarginName">Top margin:</entry>
    <entry key="StateNoteboxRightMarginName">Right margin:</entry>
    <entry key="StateNoteboxBottomMarginName">Bottom margin:</entry>
    <entry key="StateNoteboxDefaultFontName">Default font:</entry>
    <entry key="StateNoteboxTexModeName">Enable TeX commands</entry>
    <entry key="StateNoteboxFontName">Font...</entry>
    <entry key="StateNoteboxTextGroupName">Text</entry>
    <entry key="StateNoteboxTextGroupToolTip">Text</entry>
    <entry key="StateNoteboxActiveGroupName" translate="false">ClickFcn</entry>
    <entry key="StateNoteboxActiveGroupToolTip">Active Code</entry>
    <entry key="StateNoteboxAppearanceGroupName">Appearance</entry>
    <entry key="StateNoteboxAppearanceGroupToolTip">Appearance</entry>
    <entry key="StateNoteboxFormatGroupName">Format</entry>
    <entry key="StateNoteboxFormatGroupToolTip">Format</entry>
    <entry key="StateNoteboxInternalMarginGroupName">Internal margin</entry>
    <entry key="StateNoteboxInternalMarginGroupToolTip">Internal margin</entry>
    <entry key="CommonClickFcn" translate="false" note="TranslateFalseBatch;">ClickFcn</entry>
    <entry key="StateNoteboxClickFcnTabName" translate="false">ClickFcn</entry>
    <entry key="ColorAutomatic">Automatic</entry>
    <entry key="ColorBlack">Black</entry>
    <entry key="ColorWhite">White</entry>
    <entry key="ColorRed">Red</entry>
    <entry key="ColorGreen">Green</entry>
    <entry key="ColorBlue">Blue</entry>
    <entry key="ColorCyan">Cyan</entry>
    <entry key="ColorMagenta">Magenta</entry>
    <entry key="ColorYellow">Yellow</entry>
    <entry key="ColorGray">Gray</entry>
    <entry key="ColorLightBlue">Light Blue</entry>
    <entry key="ColorOrange">Orange</entry>
    <entry key="ColorDarkGreen">Dark Green</entry>
    <entry key="ColorCustom">Custom</entry>
    <entry key="Logging">Logging</entry>
    <entry key="LoggingCustomName">Custom Name</entry>
    <entry key="LoggingAndStreaming">Logging/Streaming</entry>
    <entry key="LoggingNameMode">Name Mode</entry>
    <entry key="LoggingSignalData">Logging Signal Data</entry>
    <entry key="StreamDataToSDI">Stream signal data</entry>
    <entry key="LogStateActivity">Log state activity</entry>
    <entry key="LogSelfActivity">Log self activity</entry>
    <entry key="LoggingName">Log name</entry>
    <entry key="TPStateActivity">Test point state activity</entry>
    <entry key="TestPoint">Test Point</entry>
    <entry key="Name">Name</entry>
    <entry key="Continuous">Continuous</entry>
    <entry key="Discrete">Discrete</entry>
    <entry key="Inherited">Inherited</entry>
    <entry key="Inherit">Inherit</entry>
    <entry key="Held">Held</entry>
    <entry key="Reset">Reset</entry>
    <entry key="Proceed">Proceed</entry>
    <entry key="ThrowError">Throw Error</entry>
    <entry key="BadParentType">Bad parent type.</entry>
    <entry key="ConnectiveJunction">Connective Junction</entry>
    <entry key="Port" note="A port is an object that allows transitioning in and out of states.  It is a noun. see discussion in g2127641">Port</entry>
    <entry key="ExitJunction" note="A subtype of port above">Exit Junction</entry>
    <entry key="ExitPort" note="A subtype of port above">Exit Port</entry>
    <entry key="EntryPort" note="A subtype of port above">Entry Port</entry>
    <entry key="EntryJunction" note="A subtype of port above">Entry Junction</entry>
    <entry key="Home">Home</entry>
    <entry key="HistoryJunction">History Junction</entry>
    <entry key="Parent">Parent </entry>
    <entry key="CreationDate">Creation Date:</entry>
    <entry key="Creator">Creator:</entry>
    <entry key="Description">Description</entry>
    <entry key="Modified">Modified:</entry>
    <entry key="SimulinkModel">Simulink Model:</entry>
    <entry key="UseClikeBitOperationsInNewCharts">Use C-like bit operations in new C charts</entry>
    <entry key="Version">Version:</entry>
    <entry key="Breakpoints">Breakpoints:</entry>
    <entry key="ExecutionOrder">Execution order</entry>
    <entry key="Label">Label:</entry>
    <entry key="Name1">Name:</entry>
    <entry key="BuildActions">Build Actions</entry>
    <entry key="CodeGenerationDirectory">Code generation directory</entry>
    <entry key="CodeGenerationOptions">Code Generation Options</entry>
    <entry key="CustomCode">&amp;Custom Code</entry>
    <entry key="CustomInitializationCodeCalledFromMdlInitialize">Custom initialization code (called from mdlInitialize)</entry>
    <entry key="CustomLibraries">Custom libraries</entry>
    <entry key="CustomSourceFiles">Custom source files</entry>
    <entry key="CustomTerminationCodeCalledFromMdlTerminate">Custom termination code (called from mdlTerminate)</entry>
    <entry key="Description1">&amp;Description</entry>
    <entry key="Execute">Execute</entry>
    <entry key="General">&amp;General</entry>
    <entry key="GeneratedCodeDirectory">Generated Code Directory</entry>
    <entry key="IncludeCode">Include Code</entry>
    <entry key="IncludePaths">Include Paths</entry>
    <entry key="InitializationCode">Initialization Code</entry>
    <entry key="Language">Language:</entry>
    <entry key="Libraries">Libraries</entry>
    <entry key="ReservedNames">Reserved Names</entry>
    <entry key="ReservedNames1">Reserved names</entry>
    <entry key="SourceFiles">Source Files</entry>
    <entry key="SpaceseparatedListOfCustomIncludeDirectories">Space-separated list of custom include directories</entry>
    <entry key="TerminationCode">Termination Code</entry>
    <entry key="UseLocalCustomCodeSettingsDoNotInheritFromMainModel">Use local custom code settings (do not inherit from main model)</entry>
    <entry key="UseTheseCustomCodeSettingsForAllLibraries">Use these custom code settings for all libraries</entry>
    <entry key="BadJunctionType">Bad junction type.</entry>
    <entry key="BadObjectType">Bad object type.</entry>
    <entry key="DebuggerBreakpoints">Debugger breakpoints:</entry>
    <entry key="EventBreakpointsTitle">BREAKPOINTS</entry>
    <entry key="Destination">Destination </entry>
    <entry key="Source">Source</entry>
    <entry key="WhenTested">When Tested</entry>
    <entry key="WhenValid">When Valid</entry>
    <entry key="FunctionInlineOption">Function Inline Option </entry>
    <entry key="SymbolWizardHeader1">Unresolved symbols found in</entry>
    <entry key="SymbolWizardHeader2">All selected data/events/messages will be created in the chart</entry>
    <entry key="SymbolWizardFooter">View created data/events/messages in Model Explorer</entry>
    <entry key="CustomCodeIncludedAtTheTopOfGeneratedCodeExample">Custom code included at the top of generated code (for example, #include directives)</entry>
    <entry key="SimulationTarget">Simulation Target</entry>
    <entry key="RTWTarget">RTW Target</entry>
    <entry key="HDLTarget">HDL Target</entry>
    <entry key="SFCustomTarget">Stateflow Custom Target</entry>
    <entry key="ControlSimCodeGeneration">Control how simulation code is generated for MATLAB Function Blocks, Stateflow Charts, Truth Table Blocks, and Attribute Function Blocks in this model.</entry>
    <entry key="ControlHDLCodeGeneration">Control how HDL code is generated from MATLAB Functions, Stateflow Charts, and Truth Tables in this model.</entry>
    <entry key="Maximum">Maximum:</entry>
    <entry key="Minimum">Minimum:</entry>
    <entry key="InitialValue">Initial value</entry>
    <entry key="BusObject">Bus object:</entry>
    <entry key="Fixedpoint">Fixed-point</entry>
    <entry key="FixedpointInteger">Fixed-point &amp; Integer</entry>
    <entry key="OutputStateActivity">Output state activity</entry>
    <entry key="OutputStateActivityDisabledWithInitOutputs">This option has been disabled because
    the parent chart has ''Initialize Outputs Every Time Chart Wakes Up'' set to true.</entry>
    <entry key="StateDuring">State During</entry>
    <entry key="StateEntry">State Entry</entry>
    <entry key="StateExit">State Exit</entry>
    <entry key="MonitoringStateActivity">Monitor State Activity</entry>
    <entry key="MonitoringChartActivity">Monitor Chart Activity</entry>
    <entry key="ActivityMonitoringMode">Monitoring mode</entry>
    <entry key="ChildActivity">Child activity</entry>
    <entry key="SelfActivity">Self activity</entry>
    <entry key="LeafStateActivity">Leaf state activity</entry>
    <entry key="ActivityMonitoringAs">Monitoring type</entry>
    <entry key="AcitivityMonitoring">Monitoring</entry>
    <entry key="ActivityMonitorAsInteger">Internally determined integer type</entry>
    <entry key="ActivityMonitorAsBoolean">Boolean variable</entry>
    <entry key="ActivityOutputSettings">Output settings</entry>
    <entry key="UseStateName">Use state name</entry>
    <entry key="UseCustomName">Use custom name</entry>
    <entry key="ActivityCGSettings">Code generation settings</entry>
    <entry key="ActivityCGUseERTName">Use internal naming scheme</entry>
    <entry key="ActivityBindingToSlSigCheck">Activity variable must resolve to Simulink signal object</entry>
    <entry key="CreateTemplateEnumDefn">Create enum definition from template</entry>
    <entry key="OpenTemplateEnumDefn">Open enum definition</entry>
    <entry key="NoMonitoringMessageForChart">To monitor the chart activity a Stateflow chart must have exclusive (OR) decomposition and at least one substate.</entry>
    <entry key="BreakpointDialogTitle">{0} Breakpoints</entry>
    <entry key="TransitionBreakpointDialogTitle">Transition Breakpoints</entry>
    <entry key="ReqTableBreakpointDialogTitle">Requirements Table Breakpoints</entry>
    <entry key="ReenableMachineBreakpointsProp"><![CDATA[<a href="matlab:Stateflow.Debug.BreakpointDialog.enableMachineBreakpoints({0})">Model wide debugging is disabled. Click here to re-enable breakpoints in {1}</a>]]></entry>
    <entry key="OpenSimTargetToEnableDebugging"><![CDATA[<a href="matlab:Stateflow.Debug.BreakpointDialog.enableModelDebugging">Model wide debugging is disabled. Click here to re-enable debugging.</a>]]></entry>
    <entry key="JitSimulationDebugging">The debugger is enabled only when you add breakpoints before running your model. To enable adding breakpoints during simulation, select "Allow setting breakpoints during simulation". For more information, see <![CDATA[<a href="matlab:helpview(''simulink/simulink_gui'',''Tag_ConfigSet_Sim_SFSimEnableDebug'')">]]>the documentation<![CDATA[</a>]]>.</entry>
    <entry key="DataUsedBy">Data used by {0}:</entry>
    <entry key="MessageUsedBy">Messages used by {0}:</entry>
    <entry key="TemporalsUsedBy">Temporals used by {0}:</entry>
    <entry key="DataInputOutputDefinedBy">Input and output data defined by {0}:</entry>
    <entry key="HoverDataPrefix"><![CDATA[<b>Data information</b>]]></entry>
    <entry key="HoverStatePrefix"><![CDATA[<b>State information</b>]]></entry>
    <entry key="HoverStateNotActive">State {0} not active</entry>
    <entry key="HoverStateActiveTime">State {0} active {1} sec</entry>
    <entry key="HoverStateActiveNotice">State active time</entry>
    <entry key="HoverSourceStateNotActive">Source state not active</entry>
    <entry key="HoverSourceStateActiveTime">Source state active {0} sec</entry>
    <entry key="HoverPreviousValue">Previous value of {0} : {1}</entry>
    <entry key="DataUsedByTransitionSnippet">Data used by transition "{0}...":</entry>
    <entry key="DataUsedByTransition">Data used by transition "{0}":</entry>
    <entry key="TemporalsUsedByTransitionSnippet">Temporals used by transition "{0}...":</entry>
    <entry key="TemporalsUsedByTransition">Temporals used by transition "{0}":</entry>
    <entry key="MessageUsedByTransitionSnippet">Messages used by transition "{0}...":</entry>
    <entry key="MessageUsedByTransition">Messages used by transition "{0}":</entry>
    <entry key="NoDataForCommentedObj">Object is commented. No data to display.</entry>
    <entry key="DataNone">none</entry>
    <entry key="MessageNone">none</entry>
    <entry key="StateCreateDataOutport">Create data for monitoring</entry>
    <entry key="StateCreateOutport">Create output for monitoring</entry>
    <entry key="StateCreateOutportForChildActivity">Create data for monitoring child activity</entry>
    <entry key="StateCreateOutportForSelfActivity">Create data for monitoring self activity</entry>
    <entry key="Auto">Auto</entry>
    <entry key="Custom">Custom</entry>
    <entry key="UseMATLABEnumDefn">Define enumerated type manually</entry>
    <entry key="BadFileExtension">Cannot open a model without .mdl or .slx extensions: {0}{1}.</entry>
    <entry key="TypeInherited">Inherit: Same as Simulink</entry>
    <entry key="DataExpression">Expression</entry>
    <entry key="DataNotNeeded">Not Needed</entry>
    <entry key="EventName">Event Name</entry>
    <entry key="EventScope">Event Scope</entry>
    <entry key="DataName">Data Name</entry>
    <entry key="DataScope">Data Scope</entry>
    <entry key="MessageName">Message Name</entry>
    <entry key="MessageScope">Message Scope</entry>
    <entry key="MessageProperties">Message Queue Properties</entry>
    <entry key="MessageDataProperties">Message Data Properties</entry>
    <entry key="SymbolName">Name</entry>
    <entry key="SymbolClass">Class</entry>
    <entry key="SymbolScope">Scope</entry>
    <entry key="MessagePriority">Priority</entry>
    <entry key="MessageQueueCapacity"> Queue capacity</entry>
    <entry key="MessageQueueType"> Queue type</entry>
    <entry key="MessageQueuePriority"> Priority order</entry>
    <entry key="MessageQueueOverflowDiagnostic"> Queue overflow diagnostic</entry>
    <entry key="MessageQueueIsInternalQueue">Use internal queue</entry>
    <entry key="EnableDebuggingInChartToBrowseData">Enable debugging in this chart to browse data.</entry>
    <entry key="ActionLangConversionError">Action Language Conversion Error</entry>
    <entry key="MachineLockedDuringConversion">Library machine is locked. Please unlock it before converting the action language.</entry>
    <entry key="ConversionWizardTitle">Convert chart to use {0}</entry>
    <entry key="BackupModel">Back up model as {0} (recommended)</entry>
    <entry key="WarnMsg">Chart {0} threw {1} warnings on syntax correction</entry>
    <entry key="ConvertConfirmationMsg">The chart threw warnings during syntax correction.\nClick ''Next'' to continue conversion of supported constructs to MATLAB.</entry>
    <entry key="WithWarnings">Converted with warnings</entry>
    <entry key="WithoutWarnings">Converted without warnings</entry>
    <entry key="SuccessfulConversion">Successfully converted without warnings</entry>
    <entry key="SelectAll">(select all)</entry>
    <entry key="ActionLangConversionHyperlink">Convert action language to {0}</entry>
    <entry key="CastNotSupported">CAST function is NOT supported in MATLAB action language</entry>
    <entry key="ColonAssignNotSupported">Colon assignment operator(:=) is NOT supported in MATLAB action language</entry>
    <entry key="TypeNotSupported">TYPE function is NOT supported in MATLAB action language</entry>
    <entry key="AddressOfNotSupported">Address-of operator is NOT supported in MATLAB action language</entry>
    <entry key="DereferenceNotSupported">Dereference operator (*) is NOT supported in MATLAB action language</entry>
    <entry key="PointerNotSupported">Pointer operator (->) is NOT supported in MATLAB action language</entry>
    <entry key="CustomDataNotSupported">Data {0} has a zero id. Might be unsupported custom data</entry>
    <entry key="IllegalAccessToBaseWorkspaceVariable">Cannot convert ml.{0} where {1} is not a function name. MATLAB action language does not support access to base workspace variables</entry>
    <entry key="CodeGenSupportAmbiguous">File {0} may or may not support code generation. Declaring this function extrinsic</entry>
    <entry key="NoCodeGenSupport">Toolbox function {0} does not support code generation</entry>
    <entry key="InternalFunctionInTransCondition">Function {0} needs to be declared extrinsic to allow code generation. However, it is in a transition condition
    where inserting coder.extrinsic statements will cause parse errors. As a workaround, the function call preceded with the coder.extrinsic declaration can be
    implemented in a MATLAB function block, that can be called from the transition condition.
    </entry>
    <entry key="HexNotSupported">Hexadecimal notation is NOT supported in MATLAB action language</entry>
    <entry key="FNotSupported">Single precision floating point number symbol (F) is NOT supported in MATLAB action language</entry>
    <entry key="CNotSupported">Context-sensitive constants are NOT supported in MATLAB action language</entry>
    <entry key="SaveModel">Model has not been saved. Please save the model before retrying.</entry>
    <entry key="ParseErrorInChart"><![CDATA[Chart {0} has parse errors. To diagnose, open the Stateflow chart and, in the <b>Modeling</b> tab, select <b>Update Model</b> &gt <b>Update Chart</b>.]]></entry>
    <entry key="NoChartsConverted">No charts were converted to use MATLAB syntax</entry>
    <entry key="ChartAllowExportedFunctionsToBeCalledBySimulink">Allow exported functions to be called by Simulink</entry>
    <entry key="RenameAllButtonString">Rename all...</entry>
    <entry key="RenameDialogTitle">Rename all references...</entry>
    <entry key="RenameDialogDescription">Rename this object and update all the references to this object in state and transition labels to use the new name</entry>
    <entry key="RenameDialogOldName">Old Name</entry>
    <entry key="RenameDialogNewName">New Name</entry>
    <entry key="RenameDialogInvalidObjectNameError">New name of the object cannot be empty.</entry>
    <entry key="RenameDialogMachineParentedDataError">Rename All is not supported for machine parented data.</entry>
    <entry key="StateOutput">State Output</entry>
    <entry key="NextInQMessagePayload">next in queue</entry>
    <entry key="NumMsgsWaitingInQ">messages in queue</entry>
    <entry key="EmptyQueue">empty queue</entry>
    <entry key="DisabledDueToMessage">Temporal information unavailable due to messages without values.</entry>
    <entry key="ChartAllowGlobalAccessToExportedFunctions">Treat exported functions as globally visible</entry>
    <entry key="ChartTreatUndefinedSymbolsAsExtrinsic">Treat undefined symbols as extrinsic</entry>
    <entry key="UnderspecDiagnosticLabel">Underspecification</entry>
    <entry key="OverspecDiagnosticLabel">Overspecification</entry>
    <entry key="ActionLanguageLabel">Action Language</entry>
    <entry key="SpecTypeError">Error</entry>
    <entry key="SpecTypeWarning">Warning</entry>
    <entry key="SpecTypeNone">None</entry>
    <entry key="TransitionVariantCheckbox">Treat as variant transition</entry>
    <entry key="TransitionVariantTooltip">Treat this transition as a variant transition</entry>
    <entry key="UnlockLibraryDialogText">Unable to create data because chart {0} is in a locked library. Do you want to unlock the library?</entry>
    <entry key="UnlockLibraryDialogTitle">Unlock library</entry>
    <entry key="UnlockLibraryDialogYes">Yes</entry>
    <entry key="UnlockLibraryDialogNo">No</entry>
    <entry key="EnableStateAccess">Enable access from State Reader and State Writer blocks</entry>
    <entry key="PrefixForStateAccess">Prefix for type names</entry>
    <entry key="RefreshTypesForStateAccess">Refresh Types</entry>
    <entry key="DataIncludedInStateAccess">Access from State Reader and State Writer blocks</entry>
    <entry key="AutogenBusForStateAccess">Bus definition automatically generated in Stateflow chart ''{0}'' because access from State Reader and State Writer blocks is enabled. To update, open the chart properties and click 'Refresh Types'.</entry>
    <entry key="AutogenEnumForStateAccess">Enumerated data type definition automatically generated in Stateflow chart ''{0}'' because access from State Reader and State Writer blocks is enabled. To update, open the chart properties and click 'Refresh Types'.</entry>
    <entry key="RequirementsTable">Requirements Table</entry>
    <entry key="ScheduleEditorChart">Schedule Editor Chart</entry>
    <entry key="ChartTypeMealy">Mealy</entry>
    <entry key="ChartTypeMoore">Moore</entry>
    <entry key="ChartTypeSimplified">Simplified</entry>
    <entry key="ChartTypeClassic">Classic</entry>
    <entry key="ChartNonTerminalMaxCountsPI">Max iterations in a superstep</entry>
    <entry key="ChartNonTerminalUnstableBehaviorPI">After too many iterations</entry>
    <entry key="ChartTreatDimensionOfLengthOneAsFixedSize">Treat dimensions of length 1 as fixed size</entry>
    <entry key="TemporaryDataNotSupported"><![CDATA[Temporary data is not supported in charts that use MATLAB as the action language. Modify your logic to use undefined variables and delete the temporary data. <a href="matlab:sfhelp('mal_temporary_data')">Related documentation</a>.]]></entry>
    <entry key="DontShowWarningAgain">Don't show this warning again</entry>
    <entry key="InputEventMapping">Input Event Mapping</entry>
    <entry key="DataStoreMemoryDataMapping">Data Store Memory Mapping</entry>
    <entry key="InputDataMapping">Input Mapping</entry>
    <entry key="OutputDataMapping">Output Mapping</entry>
    <entry key="ParameterDataMapping">Parameter Mapping</entry>
  </message>
</rsccat>
