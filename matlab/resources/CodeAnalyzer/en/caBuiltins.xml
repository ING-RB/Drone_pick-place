<?xml version="1.0" encoding="UTF-8" ?>
<!-- Copyright 2012-2024 The MathWorks, Inc. -->

<!--
This file contains the text for messages produced by the
Code Analyzer, as primarily used by the MATLAB Editor.
It contains all such messages that ship with MATLAB product.
It should not contain any error messages that are thrown
which might be user visible. EI, the message ids of these
messages should not be exposed to users.
-->

<rsccat version="1.0" locale="en_US" product="CodeAnalyzer">
    <message>
        <!--Resource entries for src/mlint-->
        <entry key="ACABE">The McCabe cyclomatic complexity of the anonymous function on line {0} is {1}.</entry>
        <entry key="ACORR">Positional syntax for optional arguments has been removed from 'autocorr'. Use name-value pairs instead.</entry>
        <entry key="ADAPPREF">Use app as the first argument for {0}.</entry>
        <entry key="ADMTHDINV">Use {0}(app, ...) to call this function.</entry>
        <entry key="ADPROP">Use app.{0} to refer to this property.</entry>
        <entry key="ADPROPf">Use app.propertyname when referencing App Designer class property.</entry>
        <entry key="ADPROPLC">Use app.{0} to reference a property of app.</entry>
        <entry key="ADTPATHf">Replace 'path' with 'trajectory'.</entry>
        <entry key="AGROW">Variable appears to change size on every loop iteration. Consider preallocating for speed.</entry>
        <entry key="ALIGNMENT">This keyword might not be aligned with its matching END on line {0}.</entry>
        <entry key="AMCABE">The modified cyclomatic complexity of the anonymous function on line {0} is {1}.</entry>
        <entry key="AND2">When both arguments are numeric scalars, consider replacing &amp; with &amp;&amp; for performance.</entry>
        <entry key="AND2f">Replace &amp; by &amp;&amp;.</entry>
        <entry key="ASGLU">Value assigned to variable might be unused. Consider replacing the variable with ~ instead.</entry>
        <entry key="ASGSL">Assignment to variable might be unnecessary.</entry>
        <entry key="ASSRT">The first input argument to 'assert' must be a condition. To always throw an error, use 'error(msg)' instead.</entry>
        <entry key="ASSRTf">Replace 'assert(msg)' with 'error(msg)'.</entry>
        <entry key="ATAS">The attribute value is unexpected. Use a single meta-class object or a cell array of meta-class objects.</entry>
        <entry key="ATNAS">Set attribute to a single meta-class object or a cell array of meta-class objects.</entry>
        <entry key="ATNPI">Set attribute to 'public', 'private', 'protected', 'immutable', or a cell array of meta-classes instead.</entry>
        <entry key="ATNPP">Set attribute to 'public', 'private', 'protected', or a cell array of meta-classes instead.</entry>
        <entry key="ATPPI">The attribute value is unexpected. Use 'public', 'private', 'protected', 'immutable', or a cell array of meta-classes instead.</entry>
        <entry key="ATPPP">The attribute value is unexpected. Use 'public', 'private', 'protected', or a cell array of meta-classes instead.</entry>
        <entry key="ATTF">The Code Analyzer is unable to determine if the expression assigned to the {0} attribute evaluates to true or false.</entry>
        <entry key="ATLAB" note="MATLAB:functionValidation:InputOutputAssignedValue">Attribute 'Input' and 'Output' must not be assigned a value or negated.</entry>
        <entry key="ATTOF">Setting the class attribute Abstract to false is not recommended.</entry>
        <entry key="ATUNK">Unknown attribute name.</entry>
        <entry key="ATVIZW">The ''Visible'' attribute has been removed. Use the ''~Hidden'' attribute instead or omit the attribute since ''Hidden'' is false by default.</entry>
        <entry key="ATVIZE">The ''Visible'' attribute is invalid for classes and events. Use the ''~Hidden'' attribute instead or omit the attribute since ''Hidden'' is false by default.</entry>
        <entry key="ATVIZf">Rewrite ''Visible'' using ''Hidden''.</entry>
        <entry key="ATVIZg">Delete the (default) attribute ''Visible''.</entry>
        <entry key="AWTIUD">'awtinvoke' is unsupported and might have been changed without notice or might be removed without notice. With appropriate code changes, use javaMethodEDT instead. </entry>
        <entry key="AXCHUD">'axescheck' is unsupported and might have been changed without notice or might be removed without notice. There is no simple replacement for this.</entry>
        <entry key="AXSTATE">'axis('state')' has been removed. With appropriate code changes, use 'XLimMode', 'YLimMode', 'ZLimMode', 'Visible', 'XDir', and 'YDir' properties of an axes object instead.</entry>
        <entry key="B2G">'bin2gray' has been removed. Use the appropriate modulation object or function to remap constellation points instead.</entry>
        <entry key="BADCH">Invalid text character(s).</entry>
        <entry key="BADCT" note="MATLAB::lang::UnsupportedUnicodeCharacter">Unicode explicit directional formatting characters are not supported.</entry>
        <entry key="BADCTf">Remove unicode explicit directional formatting characters.</entry>
        <entry key="BADSP">Invalid text character(s). The text contains an unsupported non-ASCII whitespace character.</entry>
        <entry key="BADFP">Invalid floating-point constant.</entry>
        <entry key="BADHBH">Invalid digit in hexadecimal literal. Supported hexadecimal digits are 0-9 and A-F. Supported type suffixes are u8, u16, u32, u64, and s8, s16, s32, s64.</entry>
        <entry key="BADHBB">Invalid digit in binary literal. Supported binary digits are 0 and 1. Supported type suffixes are u8, u16, u32, u64, and s8, s16, s32, s64.</entry>
        <entry key="BADHBHT">Hexadecimal literal has too many digits for specified type suffix.</entry>
        <entry key="BADHBBT">Binary literal has too many digits for specified type suffix.</entry>
        <entry key="HEXTOOLONG">Hexadecimal literal has too many digits.</entry>
        <entry key="BINARYTOOLONG">Binary literal has too many digits.</entry>
        <entry key="BADNE">''Not Equals'' is spelled ~= in MATLAB, not !=.</entry>
        <entry key="BADNEf">Replace != by ~=.</entry>
        <entry key="BADNOT">Using ~ to ignore a value is not permitted in this context.</entry>
        <entry key="BADNOTLHS">Invalid use of logical not operator (~) on left side of an assignment. To use ~ to ignore function outputs, separate output variables with commas.</entry>
        <entry key="BADOT">Use of two dots (..) is an invalid MATLAB construction.</entry>
        <entry key="BADOTf">Add a dot to make a continuation.</entry>
        <entry key="BADOTg">Delete a dot to make a single-dot operator.</entry>
        <entry key="BADOTh">Delete both dots.</entry>
        <entry key="BDCFG">Code Analyzer configuration file is invalid. Factory configuration is used instead. Run matlab.codeanalysis.validateConfiguration({0}) to identify specific issues.</entry>
        <entry key="BDCFGW">Configuration file contains issues. Run matlab.codeanalysis.validateConfiguration({0}) to identify specific issues.</entry>
        <entry key="BDFIL">Invalid MATLAB file name. MATLAB file names must start with a letter, contain only letters, numbers, or underscores, and have no more than {0} characters.</entry>
        <entry key="BDLGI">Variable might be set by a nonlogical operator.</entry>
        <entry key="BDLOG1">A scalar logical value is expected in the conditional expression. Use 'any' or 'all' to reduce the array to a logical scalar.</entry>
        <entry key="BDLOG2">A scalar logical value is expected in the conditional expression. Use 'any' or 'all' to reduce the array to a logical scalar, or compare the scalar value to 0.</entry>
        <entry key="BDOPT">Option {0} is ignored because it is invalid.</entry>
        <entry key="BDSCA">Unexpected use of {0} in a scalar context.</entry>
        <entry key="BDSCI">Variable might be set by a nonscalar operator.</entry>
        <entry key="BEHAVELOW">Behavior Changes with Low Reliability Messages</entry>
        <entry key="BEHAVELOWFUT">Upcoming Behavior Changes with Low Reliability Messages</entry>
        <entry key="BEHAVEHIGH">Behavior Changes</entry>
        <entry key="BEHAVEHIGHFUT">Upcoming Behavior Changes</entry>
        <entry key="BRKFOR">BREAK statement can only be used in a FOR or WHILE loop.</entry>
        <entry key="CONTFOR">CONTINUE statement can only be used in a FOR or WHILE loop.</entry>
        <entry key="BUFSIZE">Option 'Bufsize' has been removed. Manual buffering in 'textscan' is no longer needed.</entry>
        <entry key="BUFSIZEf">Remove option 'Bufsize' and value.</entry>
        <entry key="BUGS">Bugs</entry>
        <entry key="CABE">The McCabe cyclomatic complexity of {0} is {1}.</entry>
        <entry key="CCAT">For improved performance, concatenate cell arrays using [] instead of extracting cell arrays and reconstructing them.</entry>
        <entry key="CCATf"> Replace '{' A'{':'}' B } with [ A(:)' '{'B'}'].</entry>
        <entry key="CCAT1">'{' A'{'I'}' '}' can usually be replaced by A(I) or A(I)'', which can be much faster.</entry>
        <entry key="CDFEPOCH">'cdfepoch' is not recommended. With appropriate code changes, use 'cdflib' low-level functions instead.</entry>
        <entry key="CDFEPOCH2DATE">'ConvertEpochToDatenum' is not recommended. With appropriate code changes, use the 'DatetimeType' parameter of 'cdfread' instead.</entry>
        <entry key="CFERR">Cannot open or read the Code Analyzer settings from file {0}. Using default settings instead.</entry>
        <entry key="CFIG">The Code Analyzer settings file, {0}, has an error on line {1}.</entry>
        <entry key="CHAIN">Expressions like a {0} b {1} c are interpreted as (a {0} b) {1} c. Typically, to test a {0} b {1} c mathematically, if all arguments are numeric scalars, use (a {0} b) &amp;&amp; (b {1} c), otherwise use (a {0} b) &amp; (b {1} c).</entry>
        <entry key="CHARTEN">For readability, consider using 'newline' instead of 'char(10)'.</entry>
        <entry key="CHKGR">The 'CheckGradients' option will be removed from 'optimoptions' in a future release. With appropriate code changes, use the 'checkGradients' function instead.</entry>
        <entry key="CLBGEN">Starting in R2020a, interfaces created by 'clibgen.generateLibraryDefinition' return clib.array object instead of the equivalent MATLAB array for primitive types. Notify your users to update their code to use clib arrays. To revert to the old behavior, call 'clibgen.generateLibraryDefinition' with the 'ReturnCArrays' argument set to false.</entry>
        <entry key="CLBBLD">Starting in R2020a, interfaces created by 'clibgen.buildInterface' return clib.array object instead of the equivalent MATLAB array for primitive types. Notify your users to update their code to use clib arrays. To revert to the old behavior, call 'clibgen.buildInterface' with the 'ReturnCArrays' argument set to false.</entry>
        <entry key="CLBARY">Starting in R2020a, clib.array object is the default return value, instead of the equivalent MATLAB array for primitive types. Notify your user to update code to use clib arrays. To revert to the old behavior, call 'clibgen.generateLibraryDefinition' or 'clibgen.buildInterface' with the 'ReturnCArrays' argument set to false.</entry>
        <entry key="CMDAND">Use 'A &amp;&amp; B' or 'A &amp; B' to test whether A and B are both true in MATLAB.</entry>
        <entry key="CMDOR">Use 'A || B' or 'A | B' to test whether either A or B is true in MATLAB.</entry>
        <entry key="CNNCGA">'cnncodegen' with 'targetlib' as 'arm-compute' has been removed. With appropriate code changes, use 'codegen' instead.</entry>
        <entry key="CNNCGC">'cnncodegen' with 'targetlib' as 'cudnn' has been removed. With appropriate code changes, use 'codegen' instead.</entry>
        <entry key="CNNCGD">'cnncodegen' with default 'targetlib' as 'cudnn' has been removed. With appropriate code changes, use 'codegen' instead.</entry>
        <entry key="CNNCGM">'cnncodegen' with 'targetlib' as 'mkldnn' has been removed. With appropriate code changes, use 'codegen' instead.</entry>
        <entry key="CNNCGT">'cnncodegen' with 'targetlib' as 'tensorrt' has been removed. With appropriate code changes, use 'codegen' instead.</entry>
        <entry key="CLALL">Using 'clear' with the 'all' option usually decreases code performance and is often unnecessary.</entry>
        <entry key="CLEAR0ARGS">Avoid using 'clear' to clear more than necessary, this decreases code performance and is usually unnecessary.</entry>
        <entry key="CLFUNC">Using 'clear' with the 'functions' option usually decreases code performance and is often unnecessary.</entry>
        <entry key="CLJAVA">Using 'clear' with the 'java' option usually decreases code performance and is often unnecessary.</entry>
        <entry key="CLMEX">Using 'clear' with the 'mex' option usually decreases code performance and is often unnecessary.</entry>
        <entry key="CLCLS">Using 'clear' with the 'classes' option will decrease code performance and is often unnecessary.</entry>
        <entry key="CLIS">Defining a class in script is not allowed.</entry>
        <entry key="CLSUNK">This class, or one of its superclasses, could not be found on MATLAB's path.</entry>
        <entry key="CLSAT">Specify class attributes before the name of the class.</entry>
        <entry key="CLSATf">Reorder class attribute and class name so class attributes are before class name.</entry>
        <entry key="CLTWO">Only one class definition is allowed per file, and it must come at the head of the file.</entry>
        <entry key="COMMSCOPEED">'commscope.eyediagram' has been removed. For line plotting, use the eyediagram function. There is no simple replacement for histogram plotting and measurement analysis.</entry>
        <entry key="COMMED">'comm.EyeDiagram' has been removed. For line plotting, use the eyediagram function. There is no simple replacement for histogram plotting and measurement analysis.</entry>
        <entry key="COLMP">In R2019a and previous releases, the default colormap size is 64. Starting in R2019b, colormaps have 256 colors by default. If your code depends on a colormap having 64 colors, specify the number of colors when querying the colormap. For example, parula(64) queries the 64-color parula colormap.</entry>
        <entry key="COLND">Consider explicitly defining the array, and then using the END operator to index into it.</entry>
        <entry key="IDXCOLND">The END operator must be used within an array index expression.</entry>
        <entry key="SYNEND">Invalid use for END operator.</entry>
        <entry key="COMNL">Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.</entry>
        <entry key="COMNC">Comment with percent (%) following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, replace the percent (%) with an ellipsis (...) to add a comment inside a row.</entry>
        <entry key="COMPAT">Compatibility Considerations</entry>
        <entry key="CONFIG">Code Analyzer Configuration Issues</entry>
        <entry key="CONTAINS">For readability, use {0} instead of {1}.</entry>
        <entry key="CPROP">Confusing function call. Did you mean to reference property {0}?</entry>
        <entry key="CPROPLC">Confusing function call. Maybe this is a reference to property {0}?</entry>
        <entry key="CPROPf">Use object.propertyname when referencing class property</entry>
        <entry key="CRNR">CORNER is not recommended. Use detectHarrisFeatures or detectMinEigenFeatures in Computer Vision Toolbox instead.</entry>
        <entry key="CRNRM">CORNERMETRIC is not recommended. Use detectHarrisFeatures or detectMinEigenFeatures and the cornerPoints class in Computer Vision Toolbox instead.</entry>
        <entry key="CTCH">Best practice is for CATCH to be followed by an identifier that gets the error information.</entry>
        <entry key="CTOINE">Use of constructed object as input to constructor is not supported.</entry>
        <entry key="CTOINW">Use of constructed object as input to constructor is not necessary.</entry>
        <entry key="CTORO">Class constructors must be declared with at least one output argument.</entry>
        <entry key="CTPCT" note="stringDatatypeUpdate">The format might not agree with the argument count.</entry>
        <entry key="CTRUE">This logical comparison always returns true. Did you mean to use {1} to evaluate function argument: {0}(...{1}...)?</entry>
        <entry key="CFALSE">This logical comparison always returns false. Did you mean to use {1} to evaluate function argument: {0}(...{1}...)?</entry>
        <entry key="COMPNOP">This logical comparison simplifies to {0}(...). Did you mean to use {1} to evaluate function argument: {0}(...{1}...)?</entry>
        <entry key="COMPNOT">This logical comparison simplifies to ~{0}(...). Did you mean to use {1} to evaluate function argument: {0}(...{1}...)?</entry>
        <entry key="CUSTOM">Custom Checks</entry>
        <entry key="DAFTC">Use of try/catch statement is disallowed by custom code analyzer configuration.</entry>
        <entry key="DAFPV">Use of persistent variable is disallowed by custom code analyzer configuration.</entry>
        <entry key="DAFCO">Use of continue statement is disallowed by custom code analyzer configuration.</entry>
        <entry key="DAFBR">Use of break statement is disallowed by custom code analyzer configuration.</entry>
        <entry key="DAFRT">Use of return statement is disallowed by custom code analyzer configuration.</entry>
        <entry key="DAFSC">Use of a script is disallowed by custom code analyzer configuration.</entry>
        <entry key="DAFNF">Use of a nested function is disallowed by custom code analyzer configuration.</entry>
        <entry key="DAFCF">Use of command syntax to call a function is disallowed by custom code analyzer configuration.</entry>
        <entry key="DAFAF">Use of an anonymous function is disallowed by custom code analyzer configuration.</entry>
        <entry key="DAFCV">Use of character vector is disallowed by custom code analyzer configuration.</entry>
        <entry key="DAFCVC">Use of cell array of character vectors is disallowed by custom code analyzer configuration.</entry>
        <entry key="DAFVI">Use of varargin is disallowed by custom code analyzer configuration.</entry>
        <entry key="DAFVO">Use of varargout is disallowed by custom code analyzer configuration.</entry>
        <entry key="DATENUM1">{0} with serial date number or text inputs is not recommended. With appropriate code changes, use 'datetime' as input instead.</entry>
        <entry key="DATENUM2">{0} with serial date number or text inputs is not recommended. With appropriate code changes, use 'datetime' instead.</entry>
        <entry key="DATEMETHOD">{0} is not recommended. With appropriate code changes, use {1} with a 'datetime' input instead.</entry>
        <entry key="DATETICK">'datetick' is not recommended. With appropriate code changes, use datetime and duration arrays directly in charts. Modify display using 'xtickformat', 'ytickformat', or 'ztickformat'.</entry>
        <entry key="DATOD">'addtodate' is not recommended. With appropriate code changes, use 'datetime', 'duration', and the plus operator instead.</entry>
        <entry key="DEBUGFUN">Debug functions are intended to be used at the command line. At runtime, they will generate an error. Remove the debug function.</entry>
        <entry key="DETIM">'etime' is not recommended. With appropriate code changes, use 'datetime' and the minus operator instead.</entry>
        <entry key="DCRENAME">Input argument 'distcomp' will be removed in a future release. Use 'parallel' instead.</entry>
        <entry key="DCRENAMEf">Replace 'distcomp' with 'parallel'.</entry>
        <entry key="DECR">--x operation does not decrement the value of x. To decrease the value by 1, use x = x - 1.</entry>
        <entry key="DEEPC">Block comments are nested too deeply.</entry>
        <entry key="DEEPN">Functions are nested too deeply.</entry>
        <entry key="DEEPS">Statements are nested too deeply.</entry>
        <entry key="DEFNU">Function might be unused.</entry>
        <entry key="DISFN">Function is disallowed by custom code analyzer configuration.</entry>
        <entry key="DISVN">Variable name is disallowed by custom code analyzer configuration.</entry>
        <entry key="DISGVER">'matlab.graphics.internal.isGraphicsVersion1' has been removed. Use 'verLessThan('matlab','8.4.0')' instead. </entry>
        <entry key="DISPLAY">Overloading DISPLAY is not recommended.</entry>
        <entry key="DNDLA">'discard' has been removed. There is no simple replacement for this.</entry>
        <entry key="DUPNAMEARG">This named argument will override a previous one. Remove one of the duplicated named arguments.</entry>
        <entry key="DISPLAYPROG">Programmatic use of DISPLAY is not recommended. Use DISP or FPRINTF instead.</entry>
        <entry key="DISPLAYPROGf">Replace DISPLAY(...) by DISP(...).</entry>
        <entry key="DPPSD">'dspdata.psd' will be removed in a future release. Use 'pburg', 'pcov', 'peig', 'pmcov', 'pmtm', 'periodogram', or 'pwelch' instead.</entry>
        <entry key="DPSD">'psd' has been removed. Use 'periodogram' or 'pwelch' instead.</entry>
        <entry key="DSPDF">'dsp.DigitalFilter' has been removed. Use 'dsp.FIRFilter', 'dsp.IIRFilter', or 'dsp.AllpoleFilter' instead.</entry>
        <entry key="DSPMDA">Distributed array must be created outside of an SPMD block.</entry>
        <entry key="DSPSP">'disp(sprintf(...))' can usually be replaced by 'fprintf(...\\n)'.</entry>
        <entry key="DSPSPf">Replace 'disp(sprintf(...))' with 'fprintf(...)'.</entry>
        <entry key="DSPSY">'display(sprintf(...))' can usually be replaced by 'fprintf(...\\n)'.</entry>
        <entry key="DSPSYf">Replace 'display(sprintf(...))' with 'fprintf(...)'.</entry>
        <entry key="DSPLPC">'dsp.LPCToLSP' has been removed. With appropriate code changes, use 'cos(poly2lsf)' instead.</entry>
        <entry key="DSPAVA">'dsp.ArrayVectorAdder' has been removed. With appropriate code changes, use '+' operator instead.</entry>
        <entry key="DSPAVS">'dsp.ArrayVectorSubtractor' has been removed. With appropriate code changes, use '-' operator instead.</entry>
        <entry key="DSPAVM">'dsp.ArrayVectorMultiplier' has been removed. With appropriate code changes, use '.*' operator instead.</entry>
        <entry key="DSPAVD">'dsp.ArrayVectorDivider' has been removed. With appropriate code changes, use './' operator instead.</entry>
        <entry key="DSPLTS">'dsp.LowerTriangularSolver' has been removed. With appropriate code changes, use 'mldivide' function or '\\' operator instead.</entry>
        <entry key="DSPUTS">'dsp.UpperTriangularSolver' has been removed. With appropriate code changes, use 'mldivide' function or '\\' operator instead.</entry>
        <entry key="DSPCTR">'dsp.Counter' has been removed. Create a variable and increment by one instead.</entry>
        <entry key="DSPKFT">'dsp.KalmanFilter' has been removed. With appropriate code changes, use the Kalman filter functionality in Sensor Fusion and Tracking Toolbox instead.</entry>
        <entry key="DSPPMS">'dsp.PulseMetrics' has been removed. With appropriate code changes, use 'dutycycle', 'midcross', 'pulseperiod', 'pulsesep' or 'pulsewidth' instead.</entry>
        <entry key="DSPTMS">'dsp.TransitionMetrics' has been removed. With appropriate code changes, use 'falltime', 'overshoot', 'risetime', 'settlingtime', 'slewrate' or 'undershoot' instead.</entry>
        <entry key="DUALC">Command might be prematurely ended by comma.</entry>
        <entry key="DUALCf">Remove the comma.</entry>
        <entry key="EFIND">To improve performance, replace ISEMPTY(FIND(X)) with ISEMPTY(FIND( X, 1 )).</entry>
        <entry key="EFINDf">Replace ISEMPTY(FIND(X)) with ISEMPTY(FIND(X,1)).</entry>
        <entry key="EGMGD">'egm96geoid(SAMPLEFACTOR,...)' has been removed. With appropriate code changes, use 'egm96geoid(R)' instead, where R is a geographic raster reference object.</entry>
        <entry key="EITYCN" note="settings is a MATLAB command">feature('EightyColumns') and feature('EightyColumns', VALUE) are unsupported and have been removed. With appropriate code changes, use 'settings' object instead.</entry>
        <entry key="EMFCN">This function is not supported in code generation.</entry>
        <entry key="EMGRO">Code generation only supports growing the size of an array through 'end + 1' indexing.</entry>
        <entry key="EML">MATLAB for Code Generation Messages</entry>
        <entry key="EMLMessage" note="This is a test message">Code generation does not support this feature.</entry>
        <entry key="EMNODEF">Variable might be used before it is defined, this is not allowed in code generation.</entry>
        <entry key="EMTAG">The compilation directive (or pragma) 'eml' is not recommended. Use 'codegen' instead.</entry>
        <entry key="EMTAGf">Change the pragma 'eml' to 'codegen'.</entry>
        <entry key="EMVDF">Code generation requires a variable to be assigned before subscripting it.</entry>
        <entry key="EMXTR">The 'eml' namespace is not recommended. Use 'codegen' instead.</entry>
        <entry key="EMXTRf">Change the 'eml' namespace to 'codegen'.</entry>
        <entry key="ENDCT">An END might be missing, possibly matching {0}.</entry>
        <entry key="ENDCT2">An END might be missing (after line {0}), possibly matching {1}.</entry>
        <entry key="ENDCT3">An END might be missing (before {0} on line {1}), possibly matching {2}.</entry>
        <entry key="ENDCT4">A METHODS block or END might be missing before the function definition. This might be causing additional error messages.</entry>
        <entry key="ENDPAR">A {0} might be missing a closing {1}, causing invalid syntax at end of file. </entry>
        <entry key="EOFER">Code analysis did not complete. File contains too many syntax errors.</entry>
        <entry key="EOFMI">Invalid syntax at end of file. File is incomplete.</entry>
        <entry key="EOLPAR">A {0} might be missing a closing {1}, causing invalid syntax at end of line. </entry>
        <entry key="EQEFF">To assign values to variables, use =. The == operator compares equality of values.</entry>
        <entry key="EQEFFf">Replace == by =.</entry>
        <entry key="ERTAG">The first argument of ERROR should be a message identifier.</entry>
        <entry key="ERTXT">Specify an error message with the message identifier.</entry>
        <entry key="EV2IN">Using 'eval' with two arguments is not recommended. Use try/catch statements instead to make code more clear and efficient.</entry>
        <entry key="EV3IN">Using 'evalin' with three arguments is not recommended. Use try/catch statements instead to make code more clear and efficient.</entry>
        <entry key="EVLC">Using 'evalc' with two arguments is not recommended. Use try/catch statements instead to make code more clear and efficient.</entry>
        <entry key="EVLCS">'eval' is inefficient and makes code less clear. Call the statement directly.</entry>
        <entry key="EVLDOT">'eval' is inefficient and makes code less clear. Use dynamic field names to access structure fields or object properties instead.</entry>
        <entry key="EVLDUAL">This use of 'eval' is unnecessary and can be removed. Call the evaluated function directly using parentheses. For example, use 'load(filename)' instead of 'eval([''load '' filename])'.</entry>
        <entry key="EVLSEQVAR">Using 'eval' to dynamically assign variables is not recommended.</entry>
        <entry key="EVLEQ">'eval' is inefficient and makes code less clear. Assign to the variable directly.</entry>
        <entry key="EVLSYS">'eval' is inefficient and makes code less clear. To make calls to the operating system use the system function instead.</entry>
        <entry key="EXIST">EXIST with two input arguments is generally faster and clearer than with one input argument.</entry>
        <entry key="Error" note="Error in Error Message">Error</entry>
        <entry key="FCNIL">Function has more than {0} input arguments. This makes the function difficult to understand and maintain.</entry>
        <entry key="LLMNC">Line has more than {0} characters (including whitespaces). This makes the line difficult to understand and maintain.</entry>
        <entry key="MNCSN">This control statement is deeply nested (nesting level = {0}) and might have more deeply nested control statements. This makes the code difficult to understand and maintain.</entry>
        <entry key="FCNLL">Function has more than {0} lines. This makes the function difficult to understand and maintain.</entry>
        <entry key="FCNOL">Function has more than {0} output arguments. This makes the function difficult to understand and maintain.</entry>
        <entry key="FCCPV">Class property validation is not available before R2017a.</entry>
        <entry key="FCDQS">Double-quoted strings are not available before R2017a. Use character vectors for scalar strings or cell arrays of character vectors for string arrays.</entry>
        <entry key="FCFAV">Function argument validation is not available before R2019b.</entry>
        <entry key="FCHBL">Hexadecimal and binary literals are not available before R2019b. Use 'hex2dec' and 'bin2dec' instead.</entry>
        <entry key="FCLEN">Identifiers longer than 63 characters are not supported before R2025a.</entry>
        <entry key="FCLFS">Local functions in a script are not available before R2016b.</entry>
        <entry key="FCNVA">Name=Value syntax is not available before R2021a. Use comma-separated syntax instead.</entry>
        <entry key="FCOMPAT">Forward Compatibility Considerations</entry>
        <entry key="FCONV">Unable to define variable {0} because it has the same name as the script.</entry>
        <entry key="FCONF">Unable to define local function {0} because it has the same name as the file.</entry>
        <entry key="FDDECI1">The 'Raised Cosine' response method of 'fdesign.decimator' object has been removed. With appropriate code changes use 'comm.RaisedCosineReceiveFilter' object instead.</entry>
        <entry key="FDDECI2">The 'Square Root Raised Cosine' response method of 'fdesign.decimator' object has been removed. With appropriate code changes use 'comm.RaisedCosineReceiveFilter' object instead.</entry>
        <entry key="FDINPO1">The 'Raised Cosine' response method of 'fdesign.interpolator' object has been removed. With appropriate code changes use 'comm.RaisedCosineTransmitFilter' object instead.</entry>
        <entry key="FDINPO2">The 'Square Root Raised Cosine' response method of 'fdesign.interpolator' object has been removed. With appropriate code changes use 'comm.RaisedCosineTransmitFilter' object instead.</entry>
        <entry key="FIXPT">Fixed-Point Messages</entry>
        <entry key="FWFORP">'fwrite' is writing to a file that is opened with read permission only. Open a file using 'fopen(...,'W',...)' instead. </entry>
        <entry key="FPFORP">'fprintf' is writing to a file that is opened with read permission only. Open a file using 'fopen(...,'W',...)' instead.</entry>
        <entry key="FPASE">Direct assignment to a possible fixed-point type is not recommended. Use the subscripted assignment syntax 'var(:) =' instead.</entry>
        <entry key="FPASEf">Replace assignment with subscripted assignment.</entry>
        <entry key="FVAL">Calling functions using 'feval' is usually not necessary. Call the function directly instead.</entry>
        <entry key="FVALf">Fix for 'feval' call.</entry>
        <entry key="FVIOA" note="copy from MATLAB:functionValidation:BothInputAndOutput">Specifying both 'Input' and 'Output' attributes on the same arguments block is not supported.</entry>
        <entry key="FVINR">For readability, add Input attribute to the input arguments block.</entry>
        <entry key="FVINRf">Add Input attribute.</entry>
        <entry key="FVOBI" note="copy from MATLAB:functionValidation:InputAfterOutput">Declare all input argument blocks before all output arguments blocks.</entry>
        <entry key="FVOCON" note="see VTPCON, FVVCON, MATLAB::functionValidation::InvalidOutputArgumentValidator">For output arguments, validation functions must only use the argument being validated or literals.</entry>
        <entry key="FVOOD" note="copy from MATLAB:functionValidation:OutputWithDefault">Specifying a default value for an output argument is not supported.</entry>
        <entry key="FVOOI">Use of ignored arguments in output arguments block is not supported.</entry>
        <entry key="FVOON" note="copy from MATLAB:functionValidation:OutputNamed">Using name-value argument as output argument is not supported.</entry>
        <entry key="FVOVREP" note="copy from MATLAB:functionValidation:VarargoutAsNonRepeating">Output argument varargout can only be used inside a Repeating output arguments block.</entry>
        <entry key="FVORM" note="copy from MATLAB:functionValidation:MultipleRepeatingOutputs">Declaring multiple repeating output arguments is not supported.</entry>
        <entry key="VTFIN">{0} should be the first input argument to the {1} function.</entry>
        <!-- Validator (for typed property) with empty argument list. -->
        <entry key="VTPEAL">Specify at least one input argument for validator.</entry>
        <entry key="VTPIN" note="FVVIN">Validation function must use the property as an input.</entry>
        <entry key="VTPCON">For properties, validation functions must only use the property being validated or literals.</entry>
        <entry key="VTPOD">Specify validation in the following order: size, then class, then functions.</entry>
        <entry key="VTPODf">Reorder validation in the order of size, class and functions.</entry>
        <entry key="FDTAG">'findall' with 'Exploration.Pan', 'Exploration.ZoomIn', 'Exploration.ZoomOut', 'Exploration.DataCursor', 'Exploration.Brushing', or 'Exploration.Rotate' might return empty because the data exploration buttons have moved from the figure toolbar to the axes toolbar. To customize the axes interactions, use the 'axtoolbar' and 'axtoolbarbtn' functions.</entry>
        <entry key="FILER">File Errors</entry>
        <entry key="FINS">Support for {0} in a script has been removed.</entry>
        <entry key="FISGET">'getfis' has been removed. Access FIS properties using dot notation instead.</entry>
        <entry key="FISSET">'setfis' has been removed. Set FIS properties using dot notation instead.</entry>
        <entry key="FISSHW">'showfis' has been removed. View FIS properties using dot notation instead.</entry>
        <entry key="FISM2M">'mf2mf' has been removed. Convert membership functions using dot notation on 'fismf' objects instead.</entry>
        <entry key="FLPST">For better performance in some cases, use SORT with the ''descend'' option.</entry>
        <entry key="FLPSTf">Fix the sort command.</entry>
        <entry key="FLUDLR">For readability, consider using rot90(x,2) instead of flipud(fliplr(x)) or fliplr(flipud(x)).</entry>
        <entry key="FLUDLRf">Replace flipud(fliplr(x)) or fliplr(flipud(x)) with rot90(x,2).</entry>
        <entry key="FNAN">Use ISNAN when comparing values to NaN.</entry>
        <entry key="FNANf">Use ISNAN.</entry>
        <entry key="FNDEF">Function name {0} is known to MATLAB by its file name: {1}.</entry>
        <entry key="FNDEFf">Replace function name by file name.</entry>
        <entry key="FNDSB">For array or cell array, performance can be improved using logical indexing instead of {0}.</entry>
        <entry key="FNDSBf">Remove the call to FIND.</entry>
        <entry key="FNSWA">Function name must start with alphabetic character.</entry>
        <entry key="FORMAT">Formatting Suggestions</entry>
        <entry key="FISADR">'addrule' is not recommended. Use 'addRule' instead.</entry>
        <entry key="MATCH3">STRMATCH is not recommended. Use STRCMP instead.</entry>
        <entry key="MRASTER1">{0} with referencing matrix has been removed. With appropriate code changes, use a geographic or map raster reference object as input instead.</entry>
        <entry key="MRASTER2">{0} with referencing matrix or referencing vector has been removed. With appropriate code changes, use a geographic or map raster reference object as input instead.</entry>
        <entry key="NUMCH">'NumberOfChannels' is not recommended. Use 'NumChannels' instead.</entry>
        <entry key="STRCLQT">'string('{''str1', 'str2''})' is not recommended. Use '["str1", "str2"]' instead.</entry>
        <entry key="VIDREAD">'NumberOfFrames' is not recommended. Use 'NumFrames' instead.</entry>
        <entry key="FPARK">{0} is not recommended. Use {1} instead.</entry>
        <entry key="EZPLT">EZPLOT is not recommended. Use FPLOT or FIMPLICIT instead.</entry>
        <entry key="EZCNTRF">EZCONTOURF is not recommended. Use FCONTOUR instead, and set the 'Fill' value to 'on'.</entry>
        <entry key="EZMSHC">EZMESHC is not recommended. Use FMESH instead, and set the 'ShowContours' value to 'on'.</entry>
        <entry key="EZSRFC">EZSURFC is not recommended. Use FSURF instead, and set the 'ShowContours' value to 'on'.</entry>
        <entry key="EZGRPH3">EZGRAPH3 is not recommended. Use FCONTOUR, FMESH, FPLOT, FPLOT3 or FSURF instead.</entry>
        <entry key="FEATUD">'feature' and flags passed to it are unsupported and might have been changed without notice or might be removed without notice. There is no simple replacement for this. </entry>
        <entry key="FORMATNOI">'format' with no input or output arguments is not recommended. Use 'format("default")' instead. </entry>
        <entry key="FORMATNOIf">Replace 'format' with 'format("default")'. </entry>
        <entry key="FNDPUD" note='findpackage is a function name'>'findpackage' is unsupported and might have been changed without notice or might be removed without notice. There is no simple replacement for this. </entry>
        <entry key="FREAD">FREAD(FID,...,''*char'') is more efficient than CHAR(FREAD(...)).</entry>
        <entry key="FROPT">{0} has been removed. Use Encapsulated PostScript instead.</entry>
        <entry key="FUNFUN">The first input argument must be a function handle. Did you mean '@{0}'?</entry>
        <entry key="FVACI">Use of name-value arguments in cell indexing is not supported.</entry>
        <entry key="FVACS">Using a character vector or string as a name in name=value syntax is not supported. Remove the quotes around the name.</entry>
        <entry key="FVACSf">Remove quotes.</entry>
        <entry key="FVAMI">Name in name-value argument syntax must be a valid MATLAB identifier.</entry>
        <entry key="FVAPN">Move name-value arguments that use the name=value syntax to the end of the argument list.</entry>
        <entry key="FVATF" note="copy from MATLAB::functionValidation::InvalidAttributeValue">Attribute values in arguments blocks must be logical constants.</entry>
        <entry key="FVBTN" note="copy from MATLAB::functionValidation::RestrictedExternal">Use of this function is not supported in arguments blocks.</entry>
        <entry key="FVDAN" note="copy from MATLAB::functionValidation::DuplicateNameStruct">Using the same name as both a name-value argument structure and as a positional argument is not supported.</entry>
        <entry key="FVDAP" note="copy from MATLAB::functionValidation::DuplicateArguments">Positional argument can only be declared once.</entry>
        <entry key="FVDNF" note="copy from MATLAB::functionValidation::DuplicateNamedArguments">Name-value argument can only be declared once.</entry>
        <entry key="FVDREP" note="copy from MATLAB::functionValidation::MultipleRepeatingBlocks">Multiple Repeating arguments blocks are not supported.</entry>
        <entry key="FVIDV" note="copy from MATLAB::functionValidation::ignoredWithValidation">Specifying validation or default value for ignored arguments is not supported.</entry>
        <entry key="FVMCL" note="copy to MATLAB::functionValidation::MultipleClassArguments">Specifying multiple name-value structures using .? syntax and a class name is not supported.</entry>
        <entry key="FVNDE" note="copy from MATLAB::functionValidation::ClassArgumentHasDefaultValue">When specifying name-value arguments using a class name, it is illegal to specify default values for the arguments.</entry>
        <entry key="FVNIV" note="copy from MATLAB::functionValidation::VariableNotInScope">This variable is not an input to the function and cannot be used in an arguments block.</entry>
        <entry key="FVNREP" note="copy from MATLAB::functionValidation::NamedWithinRepeating">Name-value arguments are not supported in a Repeating arguments block.</entry>
        <entry key="FVOND" note="copy from MATLAB::NamedArgumentInDefault">Use of name-value arguments in default values is not supported.</entry>
        <entry key="FVONV" note="copy from MATLAB::functionValidation::NamedArgumentInValidator">Use of name-value arguments without dotted name in the validation is not supported.</entry>
        <entry key="FVORDI" note="copy from MATLAB::functionValidation::IgnoredAfterNamed">Ignored input arguments are not allowed after a Repeating arguments block or name-value arguments.</entry>
        <entry key="FVORDN">Positional arguments must be defined before name-value arguments.</entry>
        <entry key="FVORDO">Repeating output arguments must be defined after required output arguments.</entry>
        <entry key="FVORDP">Positional arguments must be defined in the following order: required, optional, and repeating.</entry>
        <entry key="FVREPD" note="copy from MATLAB::functionValidation::RepeatingHasDefault">Default values are not supported in a Repeating arguments block.</entry>
        <entry key="FVREPO" note="copy from MATLAB::functionValidation::VararginNotAlone">Repeating input arguments block containing varargin must not have other arguments.</entry>
        <entry key="FVNST" note="copy from MATLAB::functionValidation::NestedFunctionArgumentsBlock">Arguments blocks in nested function declarations are not supported.</entry>
        <entry key="FVNSC" note="copy from MATLAB::functionValidation::NestedFunctionCall">Use of nested functions is not supported in arguments blocks.</entry>
        <entry key="FVNVL" note="copy from MATLAB::functionValidation::ClassArgumentHasValidation">When specifying name-value arguments using a class name, it is illegal to specify validation for the arguments.</entry>
        <entry key="FVSOR" note="copy from MATLAB::functionValidation::MismatchBetweenBlockAndLine">Input arguments block declarations and the function line must contain the same input arguments in the same order, including ignored arguments.</entry>
        <entry key="FVSORO" note="copy from MATLAB::functionValidation::MismatchBetweenBlockAndLineOutputs">Output arguments block declarations and the function line must contain the same output arguments in the same order.</entry>
        <entry key="FVSYN">Invalid function argument syntax at {0}.</entry>
        <entry key="FVUBD" note="copy from MATLAB::functionValidation::ArgumentNotInScope">Argument is referenced before it is declared in the arguments block.</entry>
        <entry key="FVVCON" note="copy from MATLAB::functionValidation::InvalidArgumentValidator">For input arguments, validation functions must only use previously declared positional arguments, the argument being validated, or literals.</entry>
        <entry key="FVVIN" note="copy from MATLAB::functionValidation::ValidatorNoSelfReference">Validation function must use the argument as an input.</entry>
        <entry key="FVVREP" note="copy from MATLAB::functionValidation::VararginAsNonRepeating">varargin can only be used inside repeating input arguments block.</entry>
        <entry key="FXSET">Loop index {0} is changed inside of a FOR loop.</entry>
        <entry key="FXUP">Outer loop index {0} is set inside a nested function.</entry>
        <entry key="G2B">'gray2bin' has been removed. Use the appropriate modulation object or function to remap constellation points instead.</entry>
        <entry key="GETERR">The 'ErrorMessage' property has been removed. At the command line, use 'MException.last' instead.</entry>
        <entry key="GETFMT" note="settings is a MATLAB command">Using get for retrieving values of numeric display format is not recommended. With appropriate code changes, use 'settings' object instead.</entry>
        <entry key="GETFSP" note="settings is a MATLAB command">Using get for retrieving values of line spacing is not recommended. With appropriate code changes, use 'settings' object instead.</entry>
        <entry key="GFLD">Use dynamic fieldnames with structures instead of GETFIELD.</entry>
        <entry key="GLGRI">Starting R2021a, the second output of 'geoloc2grid' is a geographic raster reference object instead of a referencing vector. Most Mapping Toolbox functions that accept referencing vectors as input also accept geographic raster reference objects, so existing code is unlikely to be affected.</entry>
        <entry key="GPFST">A GLOBAL or PERSISTENT declaration must precede first use.</entry>
        <entry key="GPNES">A GLOBAL or PERSISTENT declaration must be in the outermost function where it is used.</entry>
        <entry key="GRIDD">Consider replacing GRIDDATA with SCATTEREDINTERPOLANT for better performance.</entry>
        <entry key="GTARG">Function might be called with too many arguments.</entry>
        <entry key="GTRED">'geotiffread' is not recommended, except when reading a GeoTIFF file from a URL. With appropriate code changes, use 'readgeoraster' instead.</entry>
        <entry key="GVMIS">Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.</entry>
        <entry key="HGSTGT">hgsetget is not recommended. Use matlab.mixin.SetGet or matlab.mixin.SetGetExactNames instead.</entry>
        <entry key="HGCNUD">'hgconvertunits' is unsupported and might have been changed without notice or might be removed without notice. There is no simple replacement for this.</entry>
        <entry key="HOUGH">HOUGH(BW,''ThetaResolution'',VAL) is not recommended. Use HOUGH(BW,''Theta'',-90:VAL:(90-VAL) ) instead.</entry>
        <entry key="HHCNA">Input argument 'North America' has been removed. Use 'hrn:here:data::olp-here-had:here-hdlm-protobuf-na-2' instead.</entry>
        <entry key="HHCWE">Input argument 'Western Europe' has been removed. Use 'hrn:here:data::olp-here-had:here-hdlm-protobuf-weu-2' instead.</entry>
        <entry key="HPFLTR">Positional syntax for optional arguments has been removed from 'hpfilter'. Use name-value pairs instead.</entry>
        <entry key="I2CFUN">'i2c' will be removed in a future release. With appropriate code changes, use 'device' method of 'ni845x' or 'aardvark' instead.</entry>
        <entry key="I2CFUN2">'i2c' has been removed. With appropriate code changes, use 'device' method of 'ni845x' or 'aardvark' instead.</entry>
        <entry key="IDISVARLOW">To avoid a potential conflict with functions on the path, explicitly define the variable before indexing into it.</entry>
        <entry key="IDISVARHIGH">Variable must be explicitly defined before first use. In some cases, the definition was not required in previous releases, but it is now required.</entry>
        <entry key="IFBDUP">This condition has no effect because all blocks in this if statement are identical. This indicates a bug in the code. Remove the condition or change the code blocks.</entry>
        <entry key="IFCDUP">The statements under this {0} condition cannot be reached because it is a duplicate of the {1} condition on line {2}. This indicates a bug in the code. Remove or change the condition.</entry>
        <entry key="IFILE">&lt;FILE&gt;</entry>
        <entry key="IFUNC">&lt;FUNCTION&gt;</entry>
        <entry key="IJCL">For improved robustness, consider replacing i and j by 1i.</entry>
        <entry key="IJCLf">Replace by 1i.</entry>
        <entry key="IMGDT">Using 'DataAugmentation' in function 'imageInputLayer' is not recommended. Use function 'augmentedImageDatastore' instead.</entry>
        <entry key="IMPIVD" note="MATLAB:lang:MalformedImportArgumentWarning">Malformed import argument {0} will not be supported in a future release.</entry>
        <entry key="IMPKEY" note="MATLAB:lang:KeywordInImportArgumentWarning">Importing {0} will not be supported in a future release because {1} is a reserved word.</entry>
        <entry key="IMPORTDYN">Using function syntax to call 'import' is not recommended. With appropriate code changes, use command syntax instead.</entry>
        <entry key="IMCLASS">In a future release, 'ismethod' will treat a string or character vector in its first input as a 'string' or 'char' class object. Pass an object to 'ismethod' or use any(strcmp('methodName', methods('ClassName'))) instead.</entry>
        <entry key="IMPKG"> Functions in internal.matlab namespace are unsupported and might have been changed without notice or might be removed without notice. There is no simple replacement for this.</entry>
        <entry key="INAME">&lt;NAME&gt;</entry>
        <entry key="INBLK">A block comment is unterminated at the end of the file.</entry>
        <!-- Standard Incompatibility Messages -->
        <entry key="IncompatDiscourage0">{0} is not recommended. There is no simple replacement for this.</entry>
        <entry key="IncompatDiscourage1Direct">{0} is not recommended. Use {1} instead, which is a direct replacement.</entry>
        <entry key="IncompatDiscourage1">{0} is not recommended. With appropriate code changes, use {1} instead.</entry>
        <entry key="IncompatDiscourage2">{0} is not recommended. With appropriate code changes, use {1} or {2} instead.</entry>
        <entry key="IncompatDiscourage3">{0} is not recommended. With appropriate code changes, use {1}, {2} or {3} instead.</entry>
        <entry key="IncompatDiscourage4">{0} is not recommended. With appropriate code changes, use {1}, {2}, {3} or {4} instead.</entry>
        <entry key="IncompatRemoveFuture0">{0} will be removed in a future release. There is no simple replacement for this.</entry>
        <entry key="IncompatRemoveFuture1Direct">{0} will be removed in a future release. Use {1} instead, which is a direct replacement.</entry>
        <entry key="IncompatRemoveFuture1">{0} will be removed in a future release. With appropriate code changes, use {1} instead.</entry>
        <entry key="IncompatRemoveFuture2">{0} will be removed in a future release. With appropriate code changes, use {1} or {2} instead.</entry>
        <entry key="IncompatRemoveFuture3">{0} will be removed in a future release. With appropriate code changes, use {1}, {2} or {3} instead.</entry>
        <entry key="IncompatRemoveFuture4">{0} will be removed in a future release. With appropriate code changes, use {1}, {2}, {3} or {4} instead.</entry>
        <entry key="IncompatRemoveNow0">{0} has been removed. There is no simple replacement for this.</entry>
        <entry key="IncompatRemoveNow1Direct">{0} has been removed. Use {1} instead, which is a direct replacement.</entry>
        <entry key="IncompatRemoveNow1">{0} has been removed. With appropriate code changes, use {1} instead.</entry>
        <entry key="IncompatRemoveNow2">{0} has been removed. With appropriate code changes, use {1} or {2} instead.</entry>
        <entry key="IncompatRemoveNow3">{0} has been removed. With appropriate code changes, use {1}, {2} or {3} instead.</entry>
        <entry key="IncompatRemoveNow4">{0} has been removed. With appropriate code changes, use {1}, {2}, {3} or {4} instead.</entry>
        <entry key="IncompatDirectFix">Replace {0} with {1}.</entry>

        <entry key="IncompatNamespaceDiscourage0">{0} namespace and sub namespaces are not recommended. There is no simple replacement for this.</entry>
        <entry key="IncompatNamespaceDiscourage1Direct">{0} namespace and sub namespaces are not recommended. Use {1} instead, which is a direct replacement.</entry>
        <entry key="IncompatNamespaceDiscourage1">{0} namespace and sub namespaces are not recommended. With appropriate code changes, use {1} instead.</entry>
        <entry key="IncompatNamespaceDiscourage2">{0} namespace and sub namespaces are not recommended. With appropriate code changes, use {1} or {2} instead.</entry>
        <entry key="IncompatNamespaceDiscourage3">{0} namespace and sub namespaces are not recommended. With appropriate code changes, use {1}, {2} or {3} instead.</entry>
        <entry key="IncompatNamespaceDiscourage4">{0} namespace and sub namespaces are not recommended. With appropriate code changes, use {1}, {2}, {3} or {4} instead.</entry>
        <entry key="IncompatNamespaceRemoveFuture0">{0} namespace and sub namespaces will be removed in a future release. There is no simple replacement for this.</entry>
        <entry key="IncompatNamespaceRemoveFuture1Direct">{0} namespace and sub namespaces will be removed in a future release. Use {1} instead, which is a direct replacement.</entry>
        <entry key="IncompatNamespaceRemoveFuture1">{0} namespace and sub namespaces will be removed in a future release. With appropriate code changes, use {1} instead.</entry>
        <entry key="IncompatNamespaceRemoveFuture2">{0} namespace and sub namespaces will be removed in a future release. With appropriate code changes, use {1} or {2} instead.</entry>
        <entry key="IncompatNamespaceRemoveFuture3">{0} namespace and sub namespaces will be removed in a future release. With appropriate code changes, use {1}, {2} or {3} instead.</entry>
        <entry key="IncompatNamespaceRemoveFuture4">{0} namespace and sub namespaces will be removed in a future release. With appropriate code changes, use {1}, {2}, {3} or {4} instead.</entry>
        <entry key="IncompatNamespaceRemoveNow0">{0} namespace and sub namespaces have been removed. There is no simple replacement for this.</entry>
        <entry key="IncompatNamespaceRemoveNow1Direct">{0} namespace and sub namespaces have been removed. Use {1} instead, which is a direct replacement.</entry>
        <entry key="IncompatNamespaceRemoveNow1">{0} namespace and sub namespaces have been removed. With appropriate code changes, use {1} instead.</entry>
        <entry key="IncompatNamespaceRemoveNow2">{0} namespace and sub namespaces have been removed. With appropriate code changes, use {1} or {2} instead.</entry>
        <entry key="IncompatNamespaceRemoveNow3">{0} namespace and sub namespaces have been removed. With appropriate code changes, use {1}, {2} or {3} instead.</entry>
        <entry key="IncompatNamespaceRemoveNow4">{0} namespace and sub namespaces have been removed. With appropriate code changes, use {1}, {2}, {3} or {4} instead.</entry>

        <entry key="IncompatPropertyNoClassRemoveFuture0">{0} property will be removed in a future release. There is no simple replacement for this.</entry>
        <entry key="IncompatPropertyNoClassRemoveFuture1">{0} property will be removed in a future release. With appropriate code changes, use {1} property instead.</entry>
        <entry key="IncompatPropertyParentClassRemoveFuture1">{0} property will be removed in a future release. With appropriate code changes, use {1} property of the parent {2} class instead.</entry>
        <entry key="IncompatPropertyRemoveFuture0">{0} property of {1} class will be removed in a future release. There is no simple replacement for this.</entry>
        <entry key="IncompatPropertyRemoveFuture1">{0} property of {1} class will be removed in a future release. With appropriate code changes, use {2} property of {3} class instead.</entry>
        <entry key="IncompatPropertyRemoveMethodFuture1">{0} property of {1} class will be removed in a future release. With appropriate code changes, use {2} method of {3} class instead.</entry>
        <entry key="IncompatPropertyRemoveCtorFuture1">{0} property of {1} class will be removed in a future release. With appropriate code changes, use {2} constructor instead.</entry>
        <entry key="IncompatPropertyNoClassRemoveNow0">{0} property has been removed. There is no simple replacement for this.</entry>
        <entry key="IncompatPropertyNoClassRemoveNow1">{0} property has been removed. With appropriate code changes, use {1} property instead.</entry>
        <entry key="IncompatPropertyParentClassRemoveNow1">{0} property has been removed. With appropriate code changes, use {1} property of the parent {2} class instead.</entry>
        <entry key="IncompatPropertyRemoveNow0">{0} property of {1} class has been removed. There is no simple replacement for this.</entry>
        <entry key="IncompatPropertyRemoveNow1">{0} property of {1} class has been removed. With appropriate code changes, use {2} property of {3} class instead.</entry>
        <entry key="IncompatPropertyRemoveMethodNow1">{0} property of {1} class has been removed. With appropriate code changes, use {2} method of {3} class instead.</entry>
        <entry key="IncompatPropertyRemoveCtorNow1">{0} property of {1} class has been removed. With appropriate code changes, use {2} constructor instead.</entry>

        <entry key="IncompatMethodDiscourageFcn1">{0} method of {1} class is not recommended. With appropriate code changes, use {2} function instead.</entry>
        <entry key="IncompatMethodRemoveFuture0">{0} method of {1} class will be removed in a future release. There is no simple replacement for this.</entry>
        <entry key="IncompatMethodRemoveFuture1">{0} method of {1} class will be removed in a future release. With appropriate code changes, use {2} method of {3} class instead.</entry>
        <entry key="IncompatMethodRemoveCtorFuture1">{0} method of {1} class will be removed in a future release. With appropriate code changes, use {2} constructor instead.</entry>
        <entry key="IncompatMethodRemoveNow0">{0} method of {1} class has been removed. There is no simple replacement for this.</entry>
        <entry key="IncompatMethodRemoveNow1">{0} method of {1} class has been removed. With appropriate code changes, use {2} method of {3} class instead.</entry>
        <entry key="IncompatMethodRemoveCtorNow1">{0} method of {1} class has been removed. With appropriate code changes, use {2} constructor instead.</entry>

        <entry key="IncompatSetPropertyRemoveMethodFuture1">Manually setting {0} property of {1} class will be removed in a future release. With appropriate code changes, use {2} method of {3} class to set value instead.</entry>
        <entry key="IncompatSetPropertyRemoveMethodNow1">Manually setting {0} property of {1} class has been removed. With appropriate code changes, use {2} method of {3} class to set value instead.</entry>
        <!-- End Standard Incompatibility Messages -->
        <entry key="AVRREM">The 'Aero.VirtualRealityAnimation' class no longer creates visualizations and will be removed in a future release. With appropriate code changes, use sim3d classes to create and view a 3D environment instead.</entry>
        <entry key="AVRREM2">The 'Aero.VirtualRealityAnimation' class has been removed. With appropriate code changes, use sim3d classes to create and view a 3D environment instead.</entry>
        <entry key="CYCCOM">Function has a McCabe cyclomatic complexity of more than {0}. This makes the function difficult to understand and maintain.</entry>
        <entry key="INCR">++x operation does not increment the value of x. To increase the value by 1, use x = x + 1.</entry>
        <entry key="INSTHWB">'instrhwinfo('bluetooth',...)' will be removed in a future release. With appropriate code changes, use 'bluetoothlist' instead.</entry>
        <entry key="INSTHWS">'instrhwinfo('serial')' will be removed in a future release. With appropriate code changes, use 'serialportlist' instead.</entry>
        <entry key="INSTHWSP">'instrhwinfo('serialport')' will be removed in a future release. With appropriate code changes, use 'serialportlist' instead.</entry>
        <entry key="INSTHWT">'instrhwinfo('tcpip')' will be removed in a future release. There is no simple replacement for this.</entry>
        <entry key="INSTHWU">'instrhwinfo('udp')' will be removed in a future release. There is no simple replacement for this.</entry>
        <entry key="INSTHWV">'instrhwinfo('visa')' will be removed in a future release. With appropriate code changes, use 'visadevlist' instead.</entry>
        <entry key="INSTHWG">'instrhwinfo('gpib')' will be removed in a future release. With appropriate code changes, use 'visadevlist' instead.</entry>
        <entry key="INSTHWI">'instrhwinfo('ivi')' is not recommended. With appropriate code changes, use 'ividriverlist' or 'ividevlist' instead.</entry>
        <entry key="INSTHWI2C">'instrhwinfo('i2c')' will be removed in a future release. With appropriate code changes, use 'ni845xlist' or 'aardvarklist' instead.</entry>
        <entry key="INSTFNDREM">{0} will be removed in a future release. With appropriate code changes, instead use 'serialportfind', 'tcpclientfind', 'tcpserverfind', 'udpportfind', 'visadevfind', 'aardvarkfind', 'ni845xfind', or 'icdevicefind' when 'LegacyMode' for icdevice is false.</entry>
        <entry key="INSTFNDREM2">{0} has been removed. With appropriate code changes, instead use 'serialportfind', 'tcpclientfind', 'tcpserverfind', 'udpportfind', 'visadevfind', 'aardvarkfind', 'ni845xfind', or 'icdevicefind' when 'LegacyMode' for icdevice is false.</entry>
        <entry key="INSTRESREM">'instrreset' will be removed in a future release. With appropriate code changes, instead use 'delete(serialportfind)', 'delete(tcpclientfind)', 'delete(tcpserverfind)', 'delete(udpportfind)', 'delete(visadevfind)', 'delete(aardvarkfind)', 'delete(ni845xfind)', or 'delete(icdevicefind)' when 'LegacyMode' for icdevice is false.</entry>
        <entry key="INSTRESREM2">'instrreset' has been removed. With appropriate code changes, instead use 'delete(serialportfind)', 'delete(tcpclientfind)', 'delete(tcpserverfind)', 'delete(udpportfind)', 'delete(visadevfind)', 'delete(aardvarkfind)', 'delete(ni845xfind)', or 'delete(icdevicefind)' when 'LegacyMode' for icdevice is false.</entry>
        <entry key="INTLPOUTA">'algorithm' field of the 'intlinprog' solution process summary will be removed in a future release. 'intlinprog' will always use the 'highs' algorithm.</entry>
        <entry key="INTLLEG1">The 'Algorithm' option for the intlinprog solver will be removed in a future release. At that time, the intlinprog solver will use its current default algorithm, 'highs'.</entry>
        <entry key="INTLLEG">The {0} option for the intlinprog solver will be removed in a future release. There is no simple replacement for this.</entry>
        <entry key="INWVX">'instrhwinfo('vxipnp')' is not recommended. With appropriate code changes, use 'ividriverlist' or 'ividevlist' instead.</entry>
        <entry key="INTER">Internal</entry>
        <entry key="INTRN">Incomplete Analysis</entry>
        <entry key="INTRPP">'pp' is not recommended. Use the griddedInterpolant class instead.</entry>
        <entry key="INTRPC">'interp1(...,'cubic')' changed in R2020b to perform cubic convolution. To continue using shape-preserving piecewise cubic interpolation, use 'interp1(...,'pchip')' instead.</entry>
        <entry key="INUMB">&lt;number&gt;</entry>
        <entry key="INUSA">Input argument might be unused after the function arguments block(s).</entry>
        <entry key="INUSD">Input argument might be unused. Consider replacing the argument with ~ instead.</entry>
        <entry key="IOPER">&lt;operator&gt;</entry>
        <entry key="IOPTN">&lt;option&gt;</entry>
        <entry key="IPATH">&lt;FILE&gt;</entry>
        <entry key="IRESW">&lt;reserved word&gt;</entry>
        <entry key="ISCEL">Use ISCELL instead of comparing the class to ''cell''.</entry>
        <entry key="ISCELf">Replace by ISCELL call.</entry>
        <entry key="ISCLSTR">To support string in addition to cellstr, include a call to 'isstring'.</entry>
        <entry key="ISCHR">Use ISCHAR instead of comparing the class to ''char''.</entry>
        <entry key="ISCHRf">Replace by ISCHAR call.</entry>
        <entry key="ISCL">To improve performance, use 'isscalar' instead of length comparison.</entry>
        <entry key="ISCLf">Replace length comparison with 'isscalar'.</entry>
        <entry key="ISCOL">When checking if a variable is a column vector consider using ISCOLUMN.</entry>
        <entry key="ISCOLf">Use ISCOLUMN instead.</entry>
        <entry key="ISLOG">Use ISLOGICAL instead of comparing the class to ''logical''.</entry>
        <entry key="ISLOGf">Replace by ISLOGICAL call.</entry>
        <entry key="ISMAT">When checking if a variable is a matrix consider using ISMATRIX.</entry>
        <entry key="ISMATf">Use ISMATRIX instead.</entry>
        <entry key="ISMBUD">'ismembc' is unsupported and might have been changed without notice or might be removed without notice. There is no simple replacement for this. </entry>
        <entry key="ISMT">Using ISEMPTY is usually faster than comparing LENGTH to 0.</entry>
        <entry key="ISMTf">Convert to use ISEMPTY.</entry>
        <entry key="ISROW">When checking if a variable is a row vector consider using ISROW.</entry>
        <entry key="ISROWf">Use ISROW instead.</entry>
        <entry key="ISSTR">Use ISSTRUCT instead of comparing the class to ''struct''.</entry>
        <entry key="ISSTRf">Replace by ISSTR call.</entry>
        <entry key="ITERS">The Code Analyzer type analysis may be incorrect here.</entry>
        <entry key="Ifile">&lt;file&gt;</entry>
        <entry key="Iname">&lt;name&gt;</entry>
        <entry key="Info" note="Info in Info Message">Info</entry>
        <entry key="JAVCM">'javacomponent' is undocumented and will be removed in a future release. There is no simple replacement for this.</entry>
        <entry key="JAVCT">'JavaContainer' was undocumented and has been removed. There is no simple replacement for this.</entry>
        <entry key="JAVFM">'JavaFrame' was undocumented and has been removed. There is no simple replacement for this.</entry>
        <entry key="JAPIEXTA" note='this is for JAVA package'>{0} Java package and subpackages will not be available in MATLAB in a future release. To continue using this package, install its JAR file and add the JAR file to the static path in MATLAB.</entry>
        <entry key="JAPIEXTC" note='this is for JAVA package'>{0} Java package and subpackages are not available in MATLAB. To continue using this package, install its JAR file and add the JAR file to the static path in MATLAB.</entry>
        <entry key="KEYBOARDFUN">Consider removing 'keyboard' function once you have finished debugging. This function may have security implications.</entry>
        <entry key="LANER">Language Specification Errors</entry>
        <entry key="LAXES">Calling AXES(h) in a loop can be slow. Consider moving the call to AXES outside the loop.</entry>
        <entry key="LENEMP">Passing in text with no characters will omit the object from appearing in the legend. To revert to the old behavior, use a whitespace character instead of text with no characters.</entry>
        <entry key="LEGACYMD">Setting LegacyMode to true is not recommended. Set LegacyMode to false instead.</entry>
        <entry key="LEGACYTR">{0} is applicable only when LegacyMode is set to true. However, setting LegacyMode to true is not recommended.</entry>
        <entry key="LEGPVPAIR">'legend' has changed and might interpret the name of an argument as a legend property instead of a label. To include a label with the same name as a legend property, specify the labels using a cell array or string array. Refer to the documentation for a list of affected property names.</entry>
        <entry key="LERR">LASTERR and LASTERROR are not recommended. Use an identifier on the CATCH block instead.</entry>
        <entry key="LHROW">The left side of an assignment cannot have multiple rows ('';'').</entry>
        <entry key="LIMIM">'limitm' has been removed. With appropriate code changes, use 'LatitudeLimits' and 'LongitudeLimits' properties of a geographic raster reference object instead.</entry>
        <entry key="LBODUP">Since both operands are identical, the second operand has no effect on the {0} operation. This indicates a bug in the code. Change one of the operands or remove the {0} operation.</entry>
        <entry key="LTEFS">'ltehdlFramesToSamples' has been removed. Use 'whdlFramesToSamples' instead.</entry>
        <entry key="LTESF">'ltehdlSamplesToFrames' has been removed. Use 'whdlSamplesToFrames' instead.</entry>
        <entry key="LINPROGALG">{0} algorithm for 'linprog' solver has been removed. With appropriate code changes, set 'Algorithm' value to {1} or {2} instead.</entry>
        <entry key="LINPROGS">{0} algorithm has been removed. With appropriate code changes, set 'Algorithm' value to {1} or {2} instead.</entry>
        <entry key="LNGNM">Names longer than {0} characters are not supported. This name has been truncated to {0} characters.</entry>
        <entry key="LOAD">To avoid conflicts with functions on the path, specify variables to load from file.</entry>
        <entry key="LOGSUM">Consider using 'nnz' instead of 'sum' for logical vectors to improve readability.</entry>
        <entry key="LOGPROD">Using 'prod' on a logical expression is hard to understand and might be incorrect. Consider using 'all' instead.</entry>
        <entry key="LOGMIN">Using 'min' on a logical expression is hard to understand and might be incorrect. Consider using 'all' instead.</entry>
        <entry key="LOGMAX">Using 'max' on a logical expression is hard to understand and might be incorrect. Consider using 'any' instead.</entry>
        <entry key="LOGEMP">Using 'isempty' on a logical expression creates incorrect results. To determine if all the conditions are false, use '~any(..., "all")' instead.</entry>
        <entry key="LOGEMPf">Replace isempty(...) with '~any(..., "all")'.</entry>
        <entry key="LOGL">Use 'true' or 'false' instead of 'logical(1)' or 'logical(0)'.</entry>
        <entry key="LOGLf">Convert 'logical' call to 'true' or 'false'.</entry>
        <entry key="LTARG">Function might be called with too few arguments.</entry>
        <entry key="LXEINCOMPATIBLE">Do not overload {0} for fundamental data types.</entry>
        <entry key="M3COL">Using three colons (a:b:c:d) in an expression is probably unintended.</entry>
        <entry key="MANU">Input argument might be unused. Consider replacing the argument with ~, or make this method Static instead.</entry>
        <entry key="MAPBX">'mapbbox' has been removed. With appropriate code changes, use 'XWorldLimits' and 'YWorldLimits' properties of a map raster reference object instead.</entry>
        <entry key="MABSEAC">Instance properties and methods are illegal in classes that are both Sealed and Abstract.</entry>
        <entry key="MABSEAM">A method cannot be both Abstract and Sealed.</entry>
        <entry key="MATCH2">STRMATCH is not recommended. Use STRNCMP or VALIDATESTRING instead.</entry>
        <entry key="MBIG">Code analysis did not complete. File {0} is too large.</entry>
        <entry key="MCABE">The modified cyclomatic complexity of {0} is {1}.</entry>
        <entry key="MCABF">MCC use of absolute file names is likely to fail.</entry>
        <entry key="MCADE">Using Description as an attribute is unsupported and might have been changed without notice or might be removed without notice. There is no simple replacement for this.</entry>
        <entry key="MCANI">Abstract property {0} cannot be initialized.</entry>
        <entry key="MCAPP">Private property cannot be Abstract.</entry>
        <entry key="MCASC">Abstract property {0} cannot be used in a Sealed class.</entry>
        <entry key="MCATP">Using an @ sign to specify a class property restriction is unsupported and has been removed. Use property validation syntax instead.</entry>
        <entry key="MCC">MATLAB Compiler (Deployment) Messages</entry>
        <entry key="MCCBD">Constructor must be fully defined in the class definition file.</entry>
        <entry key="MCCBS">A superclass constructor is being called, but {0} is not a declared superclass name.</entry>
        <entry key="MCCBU">This superclass constructor is called after a use of the constructed object.</entry>
        <entry key="MCCD">MCC use of the CD function is problematic.</entry>
        <entry key="MCCMC">Constructor for superclass can only be called once.</entry>
        <entry key="MCCPE">Attempting to call a property or event {0} as a function.</entry>
        <entry key="MCCPI">Initialize the Constant property or make it an Abstract Constant property.</entry>
        <entry key="MCCSP">Constant property {3} is not modified. ''{0}.{1}'' creates a struct named {2} with a field named {3}.</entry>
        <entry key="MCCSOP">Unable to modify Constant property {0}.</entry>
        <entry key="MCDIR">Class name {0} and @directory name do not agree: {1}.</entry>
        <entry key="MCEB">Events can be defined only in a handle class.</entry>
        <entry key="MCFIL">Class name {0} and file name do not agree: {1}. Update the class name and constructor, if defined, or change the file name to match the class name.</entry>
        <entry key="MCFILf">Replace class name and constructor with the file name.</entry>
        <entry key="MCG1I">Get methods must have exactly one input.</entry>
        <entry key="MCG1O">Get methods must have exactly one output.</entry>
        <entry key="MCGCP">Defining a get method for a constant property is not supported.</entry>
        <entry key="MCGSA">Method {0} tries to set or get an abstract property.</entry>
        <entry key="MCHLP">MCC does not permit the HELP function.</entry>
        <entry key="MCHDP">A property default value that is a handle will cause all instances to share the same object data. To avoid sharing, create the property value in the constructor. For intentional sharing, consider using a Constant property.</entry>
        <entry key="MCHDT">Declaring the value of a property as a handle might cause all instances to share the same default handle. To avoid sharing, create the handle for this property in the constructor. To express that sharing is intentional, use the Constant property attribute.</entry>
        <entry key="MCVM">Value class method that modifies the object must return the modified object.</entry>
        <entry key="MCKBD">MCC does not permit the KEYBOARD function.</entry>
        <entry key="MCLL">MCC does not allow C++ files to be read directly using LOADLIBRARY.</entry>
        <entry key="MCMFL">MCC allows writing .m files, but they cannot be executed by the deployed application.</entry>
        <entry key="MCMLR">MCC use of the MATLABROOT function is problematic.</entry>
        <entry key="MCMSP">Private method cannot be Abstract.</entry>
        <entry key="MCMIO">Method has too many inputs or outputs.</entry>
        <entry key="MCMTP">TestParameterDefinition methods must be Static, so that they can be called at test suite creation time to set test parameter values.</entry>
        <entry key="MCMTPf">Set Static attribute to true.</entry>
        <entry key="MCNPN">{0} is referenced but is not a property, method, or event name defined in this class.</entry>
        <entry key="MCNPR">{0} is not a property, but is the target of an assignment.</entry>
        <entry key="MCPO">{0} property has no effect in a value class.</entry>
        <entry key="MCPDC">Specifying both the ''Constant'' and ''Dependent'' attributes on the same property is not supported.</entry>
        <entry key="MCPIN">Unable to initialize class property to an instance of the class itself.</entry>
        <entry key="MCPRD">MCC allows only one argument in the PRINTDLG function.</entry>
        <entry key="MCPSG">Set or get method must be fully defined in the class definition file.</entry>
        <entry key="MCPLD">Invalid property syntax at {0}.</entry>
        <entry key="MCRED">Property, event, or enumeration names must be different from the name of the class {0}.</entry>
        <entry key="MCS1O">Set Methods must have at most one output.</entry>
        <entry key="MCS2I">Set Methods must have exactly two inputs.</entry>
        <entry key="MCSAC">SetAccess cannot be set on Constant properties.</entry>
        <entry key="MCSCC">To call the superclass constructor, the name of the subclass constructor {0} must match the name of the subclass {1}.</entry>
        <entry key="MCSCF">A superclass constructor must be assigned to the first constructor output argument.</entry>
        <entry key="MCSCM">To call a superclass method, the method name {0} must match the name of the subclass method {1}.</entry>
        <entry key="MCSCN">Method {0} tries to set a constant property.</entry>
        <entry key="MCSCO">A superclass constructor must be called using the first constructor output argument.</entry>
        <entry key="MCSCT">Superclass constructor call must not be conditionalized or be part of another expression.</entry>
        <entry key="MCSGA">Set or get method must be defined in a METHODS block with no attributes.</entry>
        <entry key="MCSGP">The method {0} does not refer to a valid property name.</entry>
        <entry key="MCSMO">Returning multiple outputs from a superclass object initialization is not supported.</entry>
        <entry key="MCSNOV">Set function in value class must return the modified object.</entry>
        <entry key="MCSUP">The set method for the property {0} should not access another property ({1}).</entry>
        <entry key="MCSOH">Set function in handle class does not need to return the modified object.</entry>
        <entry key="MCSVP">MCC does not permit the SAVEPATH function.</entry>
        <entry key="MCSWA">A sealed class cannot specify allowed subclasses.</entry>
        <entry key="MCTBX">MCC use of toolbox folder file names is likely to fail.</entry>
        <entry key="MDEEP">Parentheses, brackets, and braces are nested too deeply.</entry>
        <entry key="MDEPIN">Default values should not be assigned to dependent properties because dependent properties do not store the values.</entry>
        <entry key="MDFLT1">BLKSZ is required for backward compatibility and is ignored. Use [] instead.</entry>
        <entry key="MDOTM">Unable to run code analysis. {0} has an invalid file extension.</entry>
        <entry key="MDMCR">Unable to run code analysis. {0} is a deployed MATLAB file.</entry>
        <entry key="MDUPC">The case value {0} is a duplicate of one on line {1}.</entry>
        <entry key="MEXCEP">To pass MException properties to the warning function, use a format specifier.  For example, warning(E.identifier, '%s', E.message).</entry>
        <entry key="MEXTM1">{0} will be removed in a future release. With appropriate code changes, use geospatial tables instead.</entry>
        <entry key="MEXTM2">{0} has been removed. With appropriate code changes, use geospatial tables instead.</entry>
        <entry key="MFAMB">Code Analyzer cannot determine whether {0} is a variable or a function, and assumes it is a function.</entry>
        <entry key="MGMD">'get' method should be implemented for each dependent property that does not also have private 'GetAccess' attribute.</entry>
        <entry key="MHERIT">Deriving from the built-in MATLAB {0} class is not supported.</entry>
        <entry key="MHERM">Parenthesize the multiplication of {0} and its transpose to ensure the result is Hermitian.</entry>
        <entry key="MINFO">Information and Metrics</entry>
        <entry key="MINV">INV(A)*b can be slower and less accurate than A\\b. Consider using A\\b for INV(A)*b or b/A for b*INV(A).</entry>
        <entry key="MIPC1">Calling the computer function with 'arch' returns 'win64', 'glnxa64', or 'maci64'.</entry>
        <entry key="MIPKG"> Functions in MATLAB's internal namespaces are unsupported and might have been changed without notice or might be removed without notice. There is no simple replacement for this. </entry>
        <entry key="MKRMT">'makerefmat' has been removed. With appropriate code changes, construct a raster reference object using 'georefcells', 'georefpostings', 'georasterref', 'maprefcells', 'maprefpostings' or 'maprasterref' instead.</entry>
        <entry key="MMTC">This use of MAT2CELL should probably be replaced by a simpler, faster call to NUM2CELL.</entry>
        <entry key="MNANC">NaN never compares equal to any value, so this case will never be matched.</entry>
        <entry key="MNUML">To create a square matrix, use {0}(numel(...), numel(...)). Alternatively, use {0}(size(...)) to create an array with same size as input array.</entry>
        <entry key="MOBSRV">Using SetObservable or GetObservable on a Constant property has no effect.</entry>
        <entry key="MOCUP">The variable {0} is an uplevel variable, invalid in a function called by onCleanup.</entry>
        <entry key="MREAD1">{0} will be removed in a future release. With appropriate code changes, use 'readmatrix', 'readtable', or a different file import function instead.</entry>
        <entry key="MREAD2">{0} has been removed. With appropriate code changes, use 'readmatrix', 'readtable', or a different file import function instead.</entry>
        <entry key="MRPBW">To use less memory, replace BWLABEL(bw) by LOGICAL(bw) in a call of REGIONPROPS.</entry>
        <entry key="MRPBWf">Replace BWLABEL(bw) by bw.</entry>
        <entry key="MSNU">A Code Analyzer message was once suppressed here, but the message is no longer generated.</entry>
        <entry key="MSNE">No Code Analyzer check is found for this check ID.</entry>
        <entry key="MSNUf">Remove the message suppression.</entry>
        <entry key="MSYSTEM">matlab.system.System has been removed. Use matlab.System instead.</entry>
        <entry key="MTAGS3">Cannot use the Access attribute when using the SetAccess or GetAccess attribute.</entry>
        <entry key="MTFA1">MAKETFORM(''AFFINE'',A) is not recommended. Use AFFINE2D or AFFINE3D instead.</entry>
        <entry key="MTFA2">MAKETFORM(''AFFINE'',U,X) is not recommended. Use FITGEOTRANS instead.</entry>
        <entry key="MTFB">MAKETFORM(''BOX'',...) is not recommended. Use IMREF2D or IMREF3D instead.</entry>
        <entry key="MTFP1">MAKETFORM(''PROJECTIVE'',A) is not recommended. Use PROJECTIVE2D instead.</entry>
        <entry key="MTFP2">MAKETFORM(''PROJECTIVE'',U,X) is not recommended. Use FITGEOTRANS instead.</entry>
        <entry key="MTMAT">Attribute can only be set once.</entry>
        <entry key="MULCC">This case cannot be matched due to a call to UPPER or LOWER on the SWITCH value.</entry>
        <entry key="MWKREF">Specifying both WeakHandle and Dependent attributes is invalid. A dependent property does not store a value.</entry>
        <entry key="MWKCT">Specifying both WeakHandle and Constant attributes on the same property is not supported.</entry>
        <entry key="MWKCL">A WeakHandle property must restrict its type using a class validation.</entry>
        <entry key="MXASET">The file is too complex to analyze. Simplify the code to improve code maintainability. For example, reduce the number of operations in expressions.</entry>
        <entry key="MXFND">Use FIND with the ''first'' or ''last'' option.</entry>
        <entry key="MXFNDf">Remove MIN, add '',1'' to FIND call.</entry>
        <entry key="MXFNDg">Remove MAX, add '', 1, ''last'''' to FIND call.</entry>
        <entry key="N2UNI">Instead of using 'native2unicode' with 'fread', specify the character encoding scheme in the call to 'fopen'.</entry>
        <entry key="N2UNIf">Remove call to NATIVE2UNICODE.</entry>
        <entry key="NAMING">Naming Checks</entry>
        <entry key="NAMINGCLASSMAXLENGTH">{0} should contain less than or equal to {1} character(s), as specified for this class name by custom code analyzer configuration.</entry>
        <entry key="NAMINGCLASSMINLENGTH">{0} should contain more than or equal to {1} character(s), as specified for this class name by custom code analyzer configuration.</entry>
        <entry key="NAMINGENUMERATIONMAXLENGTH">{0} should contain less than or equal to {1} character(s), as specified for this enumeration name by custom code analyzer configuration.</entry>
        <entry key="NAMINGENUMERATIONMINLENGTH">{0} should contain more than or equal to {1} character(s), as specified for this enumeration name by custom code analyzer configuration.</entry>
        <entry key="NAMINGEVENTMAXLENGTH">{0} should contain less than or equal to {1} character(s), as specified for this event name by custom code analyzer configuration.</entry>
        <entry key="NAMINGEVENTMINLENGTH">{0} should contain more than or equal to {1} character(s), as specified for this event name by custom code analyzer configuration.</entry>
        <entry key="NAMINGFUNCTIONMAXLENGTH">{0} should contain less than or equal to {1} character(s), as specified for this function name by custom code analyzer configuration.</entry>
        <entry key="NAMINGFUNCTIONMINLENGTH">{0} should contain more than or equal to {1} character(s), as specified for this function name by custom code analyzer configuration.</entry>
        <entry key="NAMINGLOCALFUNCTIONMAXLENGTH">{0} should contain less than or equal to {1} character(s), as specified for this local function name by custom code analyzer configuration.</entry>
        <entry key="NAMINGLOCALFUNCTIONMINLENGTH">{0} should contain more than or equal to {1} character(s), as specified for this local function name by custom code analyzer configuration.</entry>
        <entry key="NAMINGMETHODMAXLENGTH">{0} should contain less than or equal to {1} character(s), as specified for this method name by custom code analyzer configuration.</entry>
        <entry key="NAMINGMETHODMINLENGTH">{0} should contain more than or equal to {1} character(s), as specified for this method name by custom code analyzer configuration.</entry>
        <entry key="NAMINGNESTEDFUNCTIONMAXLENGTH">{0} should contain less than or equal to {1} character(s), as specified for this nested function name by custom code analyzer configuration.</entry>
        <entry key="NAMINGNESTEDFUNCTIONMINLENGTH">{0} should contain more than or equal to {1} character(s), as specified for this nested function name by custom code analyzer configuration.</entry>
        <entry key="NAMINGPROPERTYMAXLENGTH">{0} should contain less than or equal to {1} character(s), as specified for this property name by custom code analyzer configuration.</entry>
        <entry key="NAMINGPROPERTYMINLENGTH">{0} should contain more than or equal to {1} character(s), as specified for this property name by custom code analyzer configuration.</entry>
        <entry key="NAMINGVARIABLEMAXLENGTH">{0} should contain less than or equal to {1} character(s), as specified for this variable name by custom code analyzer configuration.</entry>
        <entry key="NAMINGVARIABLEMINLENGTH">{0} should contain more than or equal to {1} character(s), as specified for this variable name by custom code analyzer configuration.</entry>
        <entry key="NAMINGCLASSREGULAREXPRESSION">{0} should conform to the regular expression: {1}, as specified for this class name by custom code analyzer configuration.</entry>
        <entry key="NAMINGENUMERATIONREGULAREXPRESSION">{0} should conform to the regular expression: {1}, as specified for this enumeration name by custom code analyzer configuration.</entry>
        <entry key="NAMINGEVENTREGULAREXPRESSION">{0} should conform to the regular expression: {1}, as specified for this event name by custom code analyzer configuration.</entry>
        <entry key="NAMINGFUNCTIONREGULAREXPRESSION">{0} should conform to the regular expression: {1}, as specified for this function name by custom code analyzer configuration.</entry>
        <entry key="NAMINGLOCALFUNCTIONREGULAREXPRESSION">{0} should conform to the regular expression: {1}, as specified for this local function name by custom code analyzer configuration.</entry>
        <entry key="NAMINGMETHODREGULAREXPRESSION">{0} should conform to the regular expression: {1}, as specified for this method name by custom code analyzer configuration.</entry>
        <entry key="NAMINGNESTEDFUNCTIONREGULAREXPRESSION">{0} should conform to the regular expression: {1}, as specified for this nested function name by custom code analyzer configuration.</entry>
        <entry key="NAMINGPROPERTYREGULAREXPRESSION">{0} should conform to the regular expression: {1}, as specified for this property name by custom code analyzer configuration.</entry>
        <entry key="NAMINGVARIABLEREGULAREXPRESSION">{0} should conform to the regular expression: {1}, as specified for this variable name by custom code analyzer configuration.</entry>
        <entry key="NamingClassRequiredPrefix">{0} should contain one of the required prefix(es), as specified for this class name by custom code analyzer configuration.</entry>
        <entry key="NamingEnumerationRequiredPrefix">{0} should contain one of the required prefix(es), as specified for this enumeration name by custom code analyzer configuration.</entry>
        <entry key="NamingEventRequiredPrefix">{0} should contain one of the required prefix(es), as specified for this event name by custom code analyzer configuration.</entry>
        <entry key="NamingFunctionRequiredPrefix">{0} should contain one of the required prefix(es), as specified for this function name by custom code analyzer configuration.</entry>
        <entry key="NamingLocalFunctionRequiredPrefix">{0} should contain one of the required prefix(es), as specified for this local function name by custom code analyzer configuration.</entry>
        <entry key="NamingMethodRequiredPrefix">{0} should contain one of the required prefix(es), as specified for this method name by custom code analyzer configuration.</entry>
        <entry key="NamingNestedFunctionRequiredPrefix">{0} should contain one of the required prefix(es), as specified for this nested function name by custom code analyzer configuration.</entry>
        <entry key="NamingPropertyRequiredPrefix">{0} should contain one of the required prefix(es), as specified for this property name by custom code analyzer configuration.</entry>
        <entry key="NamingVariableRequiredPrefix">{0} should contain one of the required prefix(es), as specified for this variable name by custom code analyzer configuration.</entry>
        <entry key="NamingClassDisallowedPrefix">{0} should not contain any of the disallowed prefix(es), as specified for this class name by custom code analyzer configuration.</entry>
        <entry key="NamingEnumerationDisallowedPrefix">{0} should not contain any of the disallowed prefix(es), as specified for this enumeration name by custom code analyzer configuration.</entry>
        <entry key="NamingEventDisallowedPrefix">{0} should not contain any of the disallowed prefix(es), as specified for this event name by custom code analyzer configuration.</entry>
        <entry key="NamingFunctionDisallowedPrefix">{0} should not contain any of the disallowed prefix(es), as specified for this function name by custom code analyzer configuration.</entry>
        <entry key="NamingLocalFunctionDisallowedPrefix">{0} should not contain any of the disallowed prefix(es), as specified for this local function name by custom code analyzer configuration.</entry>
        <entry key="NamingMethodDisallowedPrefix">{0} should not contain any of the disallowed prefix(es), as specified for this method name by custom code analyzer configuration.</entry>
        <entry key="NamingNestedFunctionDisallowedPrefix">{0} should not contain any of the disallowed prefix(es), as specified for this nested function name by custom code analyzer configuration.</entry>
        <entry key="NamingPropertyDisallowedPrefix">{0} should not contain any of the disallowed prefix(es), as specified for this property name by custom code analyzer configuration.</entry>
        <entry key="NamingVariableDisallowedPrefix">{0} should not contain any of the disallowed prefix(es), as specified for this variable name by custom code analyzer configuration.</entry>
        <entry key="NamingClassRequiredSuffix">{0} should contain one of the required suffix(es), as specified for this class name by custom code analyzer configuration.</entry>
        <entry key="NamingEnumerationRequiredSuffix">{0} should contain one of the required suffix(es), as specified for this enumeration name by custom code analyzer configuration.</entry>
        <entry key="NamingEventRequiredSuffix">{0} should contain one of the required suffix(es), as specified for this event name by custom code analyzer configuration.</entry>
        <entry key="NamingFunctionRequiredSuffix">{0} should contain one of the required suffix(es), as specified for this function name by custom code analyzer configuration.</entry>
        <entry key="NamingLocalFunctionRequiredSuffix">{0} should contain one of the required suffix(es), as specified for this local function name by custom code analyzer configuration.</entry>
        <entry key="NamingMethodRequiredSuffix">{0} should contain one of the required suffix(es), as specified for this method name by custom code analyzer configuration.</entry>
        <entry key="NamingNestedFunctionRequiredSuffix">{0} should contain one of the required suffix(es), as specified for this nested function name by custom code analyzer configuration.</entry>
        <entry key="NamingPropertyRequiredSuffix">{0} should contain one of the required suffix(es), as specified for this property name by custom code analyzer configuration.</entry>
        <entry key="NamingVariableRequiredSuffix">{0} should contain one of the required suffix(es), as specified for this variable name by custom code analyzer configuration.</entry>
        <entry key="NamingClassDisallowedSuffix">{0} should not contain any of the disallowed suffix(es), as specified for this class name by custom code analyzer configuration.</entry>
        <entry key="NamingEnumerationDisallowedSuffix">{0} should not contain any of the disallowed suffix(es), as specified for this enumeration name by custom code analyzer configuration.</entry>
        <entry key="NamingEventDisallowedSuffix">{0} should not contain any of the disallowed suffix(es), as specified for this event name by custom code analyzer configuration.</entry>
        <entry key="NamingFunctionDisallowedSuffix">{0} should not contain any of the disallowed suffix(es), as specified for this function name by custom code analyzer configuration.</entry>
        <entry key="NamingLocalFunctionDisallowedSuffix">{0} should not contain any of the disallowed suffix(es), as specified for this local function name by custom code analyzer configuration.</entry>
        <entry key="NamingMethodDisallowedSuffix">{0} should not contain any of the disallowed suffix(es), as specified for this method name by custom code analyzer configuration.</entry>
        <entry key="NamingNestedFunctionDisallowedSuffix">{0} should not contain any of the disallowed suffix(es), as specified for this nested function name by custom code analyzer configuration.</entry>
        <entry key="NamingPropertyDisallowedSuffix">{0} should not contain any of the disallowed suffix(es), as specified for this property name by custom code analyzer configuration.</entry>
        <entry key="NamingVariableDisallowedSuffix">{0} should not contain any of the disallowed suffix(es), as specified for this variable name by custom code analyzer configuration.</entry>
        <entry key="NamingClassDisallowedPhrase">{0} should not contain any of the disallowed phrase(s), as specified for this class name by custom code analyzer configuration.</entry>
        <entry key="NamingEnumerationDisallowedPhrase">{0} should not contain any of the disallowed phrase(s), as specified for this enumeration name by custom code analyzer configuration.</entry>
        <entry key="NamingEventDisallowedPhrase">{0} should not contain any of the disallowed phrase(s), as specified for this event name by custom code analyzer configuration.</entry>
        <entry key="NamingFunctionDisallowedPhrase">{0} should not contain any of the disallowed phrase(s), as specified for this function name by custom code analyzer configuration.</entry>
        <entry key="NamingLocalFunctionDisallowedPhrase">{0} should not contain any of the disallowed phrase(s), as specified for this local function name by custom code analyzer configuration.</entry>
        <entry key="NamingMethodDisallowedPhrase">{0} should not contain any of the disallowed phrase(s), as specified for this method name by custom code analyzer configuration.</entry>
        <entry key="NamingNestedFunctionDisallowedPhrase">{0} should not contain any of the disallowed phrase(s), as specified for this nested function name by custom code analyzer configuration.</entry>
        <entry key="NamingPropertyDisallowedPhrase">{0} should not contain any of the disallowed phrase(s), as specified for this property name by custom code analyzer configuration.</entry>
        <entry key="NamingVariableDisallowedPhrase">{0} should not contain any of the disallowed phrase(s), as specified for this variable name by custom code analyzer configuration.</entry>
        <entry key="NamingClassCasing">{0} should conform to the required casing ({1}), as specified for this class name by custom code analyzer configuration.</entry>
        <entry key="NamingEnumerationCasing">{0} should conform to the required casing ({1}), as specified for this enumeration name by custom code analyzer configuration.</entry>
        <entry key="NamingEventCasing">{0} should conform to the required casing ({1}), as specified for this event name by custom code analyzer configuration.</entry>
        <entry key="NamingFunctionCasing">{0} should conform to the required casing ({1}), as specified for this function name by custom code analyzer configuration.</entry>
        <entry key="NamingLocalFunctionCasing">{0} should conform to the required casing ({1}), as specified for this local function name by custom code analyzer configuration.</entry>
        <entry key="NamingMethodCasing">{0} should conform to the required casing ({1}), as specified for this method name by custom code analyzer configuration.</entry>
        <entry key="NamingNestedFunctionCasing">{0} should conform to the required casing ({1}), as specified for this nested function name by custom code analyzer configuration.</entry>
        <entry key="NamingPropertyCasing">{0} should conform to the required casing ({1}), as specified for this property name by custom code analyzer configuration.</entry>
        <entry key="NamingVariableCasing">{0} should conform to the required casing ({1}), as specified for this variable name by custom code analyzer configuration.</entry>
        <entry key="NASGU">Value assigned to variable might be unused.</entry>
        <entry key="NBRAK1">If you intend to specify expression precedence, use parentheses () instead of brackets [].</entry>
        <entry key="NBRAK2">Use of brackets [] is unnecessary.</entry>
        <entry key="NBRAKf">Remove [].</entry>
        <entry key="NBRAKg">Replace [] by ( ).</entry>
        <entry key="NCHKE">Use NARGOUTCHK without ERROR.</entry>
        <entry key="NCHKEf">Use NARGOUTCHK directly.</entry>
        <entry key="NCHKI">NARGCHK is not recommended. Use NARGINCHK instead.</entry>
        <entry key="NCHKM">NARGCHK is not recommended. Use NARGOUTCHK without ERROR instead.</entry>
        <entry key="NCHKMf">Use NARGOUTCHK directly.</entry>
        <entry key="NCHKN">NARGCHK is not recommended. Use NARGINCHK without ERROR instead.</entry>
        <entry key="NCHKNO">NARGOUTCHK using more than two inputs will be removed in a future release. There is no simple replacement for this.</entry>
        <entry key="NCHKNf">Use NARGINCHK directly.</entry>
        <entry key="NCHKO">Using NARGCHK with NARGOUT is not recommended. Use NARGOUTCHK instead.</entry>
        <entry key="NCHKOS">NARGINCHK does not return any values.</entry>
        <entry key="NCOMMA">Best practice is to separate output variables with commas.</entry>
        <entry key="NCOMMAf">Insert comma before the output variable.</entry>
        <entry key="NEWLINEf">Replace {0} with newline.</entry>
        <entry key="NITS">Readability Improvements</entry>
        <entry key="NO4LP">Parentheses are not needed in a FOR statement.</entry>
        <entry key="NOANS">Using ANS as a variable is not recommended as ANS is frequently overwritten by MATLAB.</entry>
        <entry key="FCNANS">Using ANS as a function name is not supported.</entry>
        <entry key="MTHANS">Using ANS as a method name is not recommended as ANS is frequently overwritten by MATLAB.</entry>
        <entry key="CLANS">Using ANS as a class name is not supported.</entry>
        <entry key="NOCLS">Function name can only contain dots if it is a class method.</entry>
        <entry key="NOCOM">Extra comma is unnecessary.</entry>
        <entry key="NOCOMf">Remove comma.</entry>
        <entry key="NODEF">Variable might be used before it is defined.</entry>
        <entry key="NOEFF">The operation or expression {0} has no evident effect.</entry>
        <entry key="NOFIL">Unable to open file {0}. File is not found.</entry>
        <entry key="NOIN">Method {0} should either be a static method or have at least one input argument.</entry>
        <entry key="NOLHS">Left side of an assignment is empty.</entry>
        <entry key="NOPAR">A {0} might be missing a closing {1}, causing invalid syntax at {2}. </entry>
        <entry key="NOPAR2">A {0} might be missing a closing {1}, causing invalid syntax at {2} on line {3}.</entry>
        <entry key="NOPRT">Add a semicolon after the statement to hide the output (in a function).</entry>
        <entry key="NOPRTf">Add a semicolon.</entry>
        <entry key="NOPRTg">Replace comma by semicolon.</entry>
        <entry key="NOPRC">A line break terminates the statement so it may be incomplete. Use ellipsis (...) to continue the statement. Or add a semicolon to hide the output.</entry>
        <entry key="NOPRCf">Add '...' at the end of line.</entry>
        <entry key="NOPRCg">Replace '%' with '...'.</entry>
        <entry key="NOPRV">A class definition cannot be inside a private directory.</entry>
        <entry key="NOPTS">Add a semicolon after the statement to hide the output (in a script).</entry>
        <entry key="NOSEM">Extra semicolon is unnecessary.</entry>
        <entry key="NOSEMf">Remove semicolon.</entry>
        <entry key="NOSPC">The file is too complex to analyze. Refactor the code to improve code maintainability. For example, reduce the nesting level of conditions or functions.</entry>
        <entry key="NOV6">'v6' will be removed in a future release. There is no simple replacement for this.</entry>
        <entry key="NPERS">A PERSISTENT declaration is not valid in scripts.</entry>
        <entry key="NSTIMP" note='this might need update when package ships'>Nested functions now inherit import statements from this parent function. If the nested functions intend to call functions on the path, ensure that the imported namespaces do not contain functions with the same name.</entry>
        <entry key="NUSED">Global or persistent variable might be unused or unset in this function or script.</entry>
        <entry key="NUSEDf">Remove the unused variable.</entry>
        <entry key="NVREPLf">Replace the parameter.</entry>
        <entry key="OPTMOPT">solve(PROBLEM, OPTIONS) has been removed. Use solve(PROBLEM, 'Options', OPTIONS) instead.</entry>
        <entry key="OPTMOPTf">Replace 'solve(PROBLEM, OPTIONS)' with 'solve(PROBLEM, 'Options', OPTIONS)'.</entry>
        <entry key="OPTMSLV">solve(PROBLEM, SOLVER) has been removed. Use solve(PROBLEM, 'Solver', SOLVER) instead.</entry>
        <entry key="OPTMSLVf">Replace 'solve(PROBLEM, SOLVER)' with 'solve(PROBLEM, 'Solver', SOLVER)'.</entry>
        <entry key="OPTMNVP">solve(PROBLEM, SOLVER, OPTIONS) has been removed. Use solve(PROBLEM, 'Solver', SOLVER, 'Options', OPTIONS) instead.</entry>
        <entry key="OPTMNVPf">Replace 'solve(PROBLEM, SOLVER, OPTIONS)' with 'solve(PROBLEM, 'Solver', SOLVER, 'Options', OPTIONS)'.</entry>
        <entry key="OR2">When both arguments are numeric scalars, consider replacing | with || for performance.</entry>
        <entry key="OR2f">Replace | by ||.</entry>
        <entry key="OLDAPI">Suggested Improvements</entry>
        <entry key="OLDSIM">This syntax of the 'sim' command which returns multiple arguments is not recommended. With appropriate code changes, turn on 'ReturnWorkspaceOutputs' and return simulation results using the single-output format instead.</entry>
        <entry key="OOPS">Defining a class using 'function' syntax is not recommended. With appropriate code changes, use 'classdef' syntax instead.</entry>
        <entry key="OPCDAREM">{0} has been removed along with the support for OPC DA. To access live OPC data, use the OPC UA standard instead.</entry>
        <entry key="OPERATOR_PAREN_ERROR">The {1} operator in the expression {0}(A {1} B) is unexpected. Should this be {0}(A) {1} B?</entry>
        <entry key="PCORR">Positional syntax for optional arguments has been removed from 'parcorr'. Use name-value pairs instead.</entry>
        <entry key="PFANSLP">'ans' is not supported as a parfor loop variable.</entry>
        <entry key="PFANSNS">'ans' is not supported as a for loop variable in parfor loops.</entry>
        <entry key="PFANSRE">'ans' is not supported as a reduction variable in parfor loops.</entry>
        <entry key="PFANSSL">'ans' is not supported as a sliced variable in parfor loops.</entry>
        <entry key="PFFORA">Assigning to for loop variables is not supported in parfor loops.</entry>
        <entry key="PFGLOB">Global variable declarations are not supported in parfor loops.</entry>
        <entry key="PFINPT">'inputname' is not supported in parfor loops.</entry>
        <entry key="PFPERS">Persistent variable declarations are not supported in parfor loops.</entry>
        <entry key="PFCTXT">When indexing a sliced variable with a nested for loop variable, the sliced variable must be inside the for loop that defines the range of the for loop variable.</entry>
        <entry key="PFFRNG">When indexing a sliced variable with a nested for loop variable, the range of the for loop variable must be a row vector of positive constant numbers or variables.</entry>
        <entry key="PFMLTI">When indexing a sliced variable with a nested for loop variable, the for loop variable must not be assigned other than by its for statement.</entry>
        <entry key="PFANON">Using a sliced output variable in an anonymous function is not supported in parfor loops.</entry>
        <entry key="PFFSUB">Indexing a nested for loop variable is not supported in parfor loops.</entry>
        <entry key="PFINCR">Using different reduction functions with the same reduction variable is not supported in parfor loops.</entry>
        <entry key="PFVARS">Parfor loop contains too many variables.</entry>
        <entry key="PFVSUB">Indexing parfor loop variables is not supported in parfor loops.</entry>
        <entry key="PFBFN">Use of this function is invalid inside a PARFOR loop because it accesses or modifies the workspace in a non-transparent way.</entry>
        <entry key="PFBNS">The entire array or structure {0} is a broadcast variable. This might result in unnecessary communication overhead.</entry>
        <entry key="PFBRK">break statements cannot be used inside a parfor loop.</entry>
        <entry key="PFRTN">return statements cannot be used inside a parfor loop.</entry>
        <entry key="PFCEL">The function {0} does not support cell arrays (argument {1}).</entry>
        <entry key="PFEVB">Using EVALIN(''base'') or ASSIGNIN(''base'') inside a PARFOR loop refers to the worker machines'' base workspaces.</entry>
        <entry key="PFEVC">EVALIN(''caller'') and ASSIGNIN(''caller'') are invalid inside of a PARFOR loop.</entry>
        <entry key="PFGP">Avoid assigning to GLOBAL or PERSISTENT variable {0} inside a PARFOR loop.</entry>
        <entry key="PFGV">Avoid using GLOBAL variable {0} in a PARFOR loop.</entry>
        <entry key="PFIIN">The input variable {0} should be initialized before the PARFOR loop.</entry>
        <entry key="PFLD">'load' must assign to an output variable in parfor loops.</entry>
        <entry key="PFNACK">'narginchk' and 'nargoutchk' cannot be used in parfor loops.</entry>
        <entry key="PFNAIO">'nargin' and 'nargout' require a function argument in parfor loops.</entry>
        <entry key="PFNF">Nested functions cannot be called from within parfor loops.</entry>
        <entry key="PFOUS">The output variable {0} might not be used after the PARFOR loop.</entry>
        <entry key="PFPF">parfor loops cannot be used inside other parfor loops.</entry>
        <entry key="PFRFH">The parfor reduction function {0} must either be a function name or a broadcast variable.</entry>
        <entry key="PFRIN">The reduction variable {0} might not be set before the PARFOR loop.</entry>
        <entry key="PFRNC">Parfor reduction variable {0} must be used in the same position in each assignment statement when using non-commutative reduction operations '*', '[,]', or '[;]'.</entry>
        <entry key="PFRNI">Do not specify the increment explicitly. The parfor loop can only use an increment of one.</entry>
        <entry key="PFRNG">The range of a PARFOR statement must be increasing consecutive integers.</entry>
        <entry key="PFRUS">The reduction variable {0} might not be used after the PARFOR loop.</entry>
        <entry key="PFSPMD">spmd statements cannot be used inside parfor loops.</entry>
        <entry key="PFSV">SAVE cannot be called in a PARFOR loop without the '-fromstruct' option.</entry>
        <entry key="PFNAR">Subtracting reduction variable {0} from expressions is not supported in parfor loops.</entry>
        <entry key="PFUTMP">Temporary variable {0} must be set inside the parfor loop before it is used.</entry>
        <entry key="PFUTVR">Variable {0} may have been intended as a reduction variable, but is an uninitialized temporary.</entry>
        <entry key="PFTUS">The temporary variable {0} is used after the PARFOR loop on line {1}, but its value is not available after the loop.</entry>
        <entry key="PFTUSW">The temporary variable {0} might be used after the PARFOR loop on line {1}. The value set on this line is not available after the loop.</entry>
        <entry key="PFUIX">The index variable {0} might be used after the PARFOR loop on line {1}, but it is unavailable after the loop.</entry>
        <entry key="PFUIXW">The index variable {0} might be used after the PARFOR loop on line {1}. The value set on this line is not available after the loop.</entry>
        <entry key="PFSLO">Variable {0} is indexed using the parfor loop variable, but it is not a valid sliced output variable.</entry>
        <entry key="PFSLW">Parfor loop variable {0} has multiple sliced accesses, but they do not all have the same list of subscripts. Each access to a sliced variable must use precisely the same list of subscripts.</entry>
        <entry key="PFSLRD">Parfor loop variable {0} is accessed with an invalid combination of sliced indexing expressions and non-indexed reads. It is not valid to access the whole value of a sliced output variable.</entry>
        <entry key="PFUNK">Unable to classify variable {0} in the body of the parfor loop.</entry>
        <entry key="PFWHOS">Using "who" or "whos" without "-file" is invalid inside a PARFOR loop because it accesses the workspace in a non-transparent way.</entry>
        <entry key="PFXST">Assigning to the parfor loop index variable is not supported in parfor loops.</entry>
        <entry key="PMTMCONF">When using PMTM with three output arguments, the 'ConfidenceLevel' input argument is recommended.</entry>
        <entry key="POLAR">'polar' (MATLAB) is not recommended. Use 'polarplot' instead.</entry>
        <entry key="POLYREP">Use 'MergedReporting' instead of 'Reporting' for polyspace.Options.</entry>
        <entry key="POLYCS">Use 'MergedComputingSettings' instead of 'ComputingSettings' for polyspace.Options.</entry>
        <entry key="PREALL">The preallocated value assigned to variable might be unused.</entry>
        <entry key="PRMNOIN">For code generation, specify a binaryOccupancyMap object in the constructor of the mobileRobotPRM object.</entry>
        <entry key="PROP">There is a property named {0}. Did you mean to reference it?</entry>
        <entry key="DSPFDF">'DirectFeedthrough' property of 'dsp.VariableFractionalDelay' class has been removed.</entry>
        <entry key="DSPIDF">'DirectFeedthrough' property of 'dsp.VariableIntegerDelay' class has been removed.</entry>
        <entry key="SMPLMODE">The property 'FrameBasedProcessing' has been removed.</entry>
        <entry key="PMRTM1">'propagationModel(''raytracing-image-method'')' syntax has been removed. With appropriate code changes, use 'propagationModel(''raytracing'', ''Method'', ''image'')' syntax instead.</entry>
        <entry key="PMRTM2">'propagationModel(''raytracing-imagemethod'')' syntax has been removed. With appropriate code changes, use 'propagationModel(''raytracing'', ''Method'', ''image'')' syntax instead.</entry>
        <entry key="PMRTM3">'propagationModel(''raytracingimage-method'')' syntax has been removed. With appropriate code changes, use 'propagationModel(''raytracing'', ''Method'', ''image'')' syntax instead.</entry>
        <entry key="PMRTM4">'propagationModel(''raytracingimagemethod'')' syntax has been removed. With appropriate code changes, use 'propagationModel(''raytracing'', ''Method'' , ''image'')' syntax instead.</entry>
        <entry key="PMRTMf">Use 'propagationModel(''raytracing'', ''Method'', ''image'', ...)' syntax.</entry>
        <entry key="PRIRET">Positional syntax for optional arguments has been removed from 'price2ret'. Use name-value pairs instead.</entry>
        <entry key="PROPERROR">The property {0} has been removed.</entry>
        <entry key="PROPGONE">The property {0} will be removed in a future release.</entry>
        <entry key="PROPLC">There is a property named {0}. Maybe this is a reference to it?</entry>
        <entry key="PROPf">Use object.propertyname when referencing class property</entry>
        <entry key="PRTCAL">Add a semicolon after the function call to hide the output.</entry>
        <entry key="PSET">Persistent variable is used, but might be unset.</entry>
        <entry key="PSIZE">NUMEL(x) is usually faster than PROD(SIZE(x)).</entry>
        <entry key="PSIZEf">Replace PROD(SIZE(...)) by NUMEL.</entry>
        <entry key="PSRENAME">Input argument 'powersys' will be removed in a future release. Use 'sps' instead.</entry>
        <entry key="PSRENAMEf">Replace 'powersys' with 'sps'.</entry>
        <entry key="PSTAT">The ''Static'' attribute on properties has been removed. Use the ''Constant'' attribute instead.</entry>
        <entry key="PSTATf">Replace ''Static'' by ''Constant''.</entry>
        <entry key="PTCLO">Changing the axes LineStyleOrder or ColorOrder properties of an existing chart now affects the chart immediately. To revert to the old behavior, set either the axes LineStyleOrderIndex or ColorOrderIndex to any value (such as its current value) before changing LineStyleOrder or ColorOrder.</entry>
        <entry key="PTDLO">Specifying multiple line styles in the axes LineStyleOrder might result in charts that render differently than in the previous releases. MATLAB uses a new indexing scheme to select colors and line styles. To revert to the old behavior, set either the axes LineStyleOrderIndex or ColorOrderIndex to any value (such as its current value) and call 'hold on' before creating your chart.</entry>
        <entry key="PUSE">Persistent variable might be unused.</entry>
        <entry key="PUSEf">Remove unused variable.</entry>
        <entry key="QUIT">Code analysis did not complete. Code Analyzer encountered an error.</entry>
        <entry key="QAMDEP">{0} no longer accepts the initial phase of a signal.</entry>
        <entry key="QAMDEPf">Remove the initial phase input argument. This changes the behavior if the value is not 0 or [].</entry>
        <entry key="RAND">RAND or RANDN with the ''seed'', ''state'', or ''twister'' inputs is not recommended. Use RNG instead.</entry>
        <entry key="RDERR">Unable to read file {0}.</entry>
        <entry key="REDEF">The current use of {0} is inconsistent with its previous use or definition (line {1}).</entry>
        <entry key="REDEFGI">Declaring an input or output variable to be global might not be supported in a future release.</entry>
        <entry key="REDEFGG">Declaring a variable to be global more than once might not be supported in a future release.</entry>
        <entry key="RCSIIR">'rcosiir' is unsupported and has been removed. There is no simple replacement for this.</entry>
        <entry key="RCSFIR">'rcosfir' is unsupported and has been removed. With appropriate code changes, use 'rcosdesign' instead.</entry>
        <entry key="RCSFLT">'rcosflt' is unsupported and has been removed. With appropriate code changes, use 'rcosdesign' instead.</entry>
        <entry key="RCSINE">'rcosine' is unsupported and has been removed. With appropriate code changes, use 'rcosdesign' instead.</entry>
        <entry key="ROSDFMISSING">Use name-value argument 'DataFormat' to specify the message format as the default message format will change to 'struct' in a future release.</entry>
        <entry key="ROSDFOBJECT">For improved performance and code generation workflows, specify 'DataFormat' name-value argument as 'struct'. In a future release, the default format will change to 'struct'.</entry>
        <entry key="ROSSCFUN">Add the service type as the second input argument to 'rossvcclient'. In a future release, the service type will be a required input argument.</entry>
        <entry key="ROSSCPKG">Add the service type as the third input argument to 'ros.ServiceClient'. In a future release, the service type will be a required input argument.</entry>
        <entry key="DINLN">INLINE will be removed in a future release. Use anonymous functions instead.</entry>
        <entry key="ADTPATH">'path' will be removed in a future release. Use 'trajectory' instead.</entry>
        <entry key="DFCNCHK">FCNCHK will be removed in a future release. Use anonymous functions instead.</entry>
        <entry key="FPRENAME">Input argument 'fixpoint' will be removed in a future release. Use 'fixedpoint' instead.</entry>
        <entry key="FPRENAMEf">Replace 'fixpoint' with 'fixedpoint'.</entry>
        <entry key="SVFIGC">'compact' argument will be removed in a future release and currently has no effect. 'compact' behavior is always enabled.</entry>
        <entry key="SVFIGC2">'compact' argument has been removed. 'compact' behavior is always enabled.</entry>
        <entry key="SVFIGCf">Remove 'compact' argument.</entry>
        <entry key="SMTHC">'smithchart' has been removed. Use 'smithplot' instead.</entry>
        <entry key="SMTHF">The 'FontSmoothing' property will be removed in a future release, at which point font smoothing behavior will be enabled by default. Editing this property might not have an effect, in which case font smoothing behavior will be enabled by default.</entry>
        <entry key="SMTHF2">The 'FontSmoothing' property has been removed. Font smoothing behavior is enabled by default.</entry>
        <entry key="SMTHFA">The 'DefaultAxesFontSmoothing' setting will be removed in a future release, at which point font smoothing behavior will be enabled by default. Editing this setting might not have an effect, in which case font smoothing behavior will be enabled by default.</entry>
        <entry key="SMTHFA2">The 'DefaultAxesFontSmoothing' setting has been removed. Font smoothing behavior is enabled by default.</entry>
        <entry key="SMTHFT">The 'DefaultTextFontSmoothing' setting will be removed in a future release, at which point font smoothing behavior will be enabled by default. Editing this setting might not have an effect, in which case font smoothing behavior will be enabled by default.</entry>
        <entry key="SMTHFT2">The 'DefaultTextFontSmoothing' setting has been removed. Font smoothing behavior is enabled by default.</entry>
        <entry key="SMTHG">The 'GraphicsSmoothing' property will be removed in a future release, at which point graphics smoothing behavior will be enabled by default. Editing this property might not have an effect, in which case graphics smoothing behavior will be enabled by default.</entry>
        <entry key="SMTHG2">The 'GraphicsSmoothing' property has been removed. Graphics smoothing behavior is enabled by default.</entry>
        <entry key="SMTHGF">The 'DefaultFigureGraphicsSmoothing' setting will be removed in a future release, at which point graphics smoothing behavior will be enabled by default. Editing this setting might not have an effect, in which case graphics smoothing behavior will be enabled by default.</entry>
        <entry key="SMTHGF2">The 'DefaultFigureGraphicsSmoothing' setting has been removed. Graphics smoothing behavior is enabled by default.</entry>
        <entry key="TTSMP">'SamplingRate' has been removed. Use 'SampleRate' instead.</entry>
        <entry key="OBJMPOOL">'MATLABPOOL' has been removed. Use 'PARPOOL' instead.</entry>
        <entry key="DMSSPEC">'dspdata.msspectrum' will be removed in a future release. Use 'periodogram' or 'pwelch' instead.</entry>
        <entry key="DPSPEC">'dspdata.pseudospectrum' will be removed in a future release. Use 'pmusic' or 'peig' instead.</entry>
        <entry key="COMMERRATE">'commtest.ErrorRate' has been removed. Use 'comm.ErrorRate' or BERTool instead.</entry>
        <entry key="TCRESULT">'testconsole.Results' has been removed. Use 'comm.ErrorRate' or BERTool instead.</entry>
        <entry key="RAYNR">Input argument 'NumReflections' has been removed. Use 'MaxNumReflections' property of a ray tracing propagation model object instead.</entry>
        <entry key="MATPOOL">'matlabpool' has been removed. Use 'pool' instead.</entry>
        <entry key="FEGLO">'global' has been removed. There is no simple replacement for this.</entry>
        <entry key="RESOU">'resources' is a reserved folder. Running MATLAB files located in a folder named 'resources' is not supported.</entry>
        <entry key="RESWD">Invalid use of a reserved word.</entry>
        <entry key="RETPRI">Positional syntax for optional arguments has been removed from 'ret2price'. Use name-value pairs instead.</entry>
        <entry key="RGXP1" note="stringDatatypeUpdate">Using REGEXP(str, pattern, ''ONCE'') is faster in this case.</entry>
        <entry key="RGXPI" note="stringDatatypeUpdate">Using REGEXPI(str, pattern, ''ONCE'') is faster in this case.</entry>
        <entry key="RGXPf">Add ''ONCE'' option.</entry>
        <entry key="RHSFN">The expression cannot be assigned to multiple values.</entry>
        <entry key="RISKLMM">'Model' property of 'risk.credit.pd.LifetimePDModel' class is not recommended. Use 'UnderlyingModel' property of 'risk.credit.pd.LifetimePDModel' class instead.</entry>
        <entry key="RISKLMA">'modelAccuracy' method of 'risk.credit.pd.LifetimePDModel' class is not recommended. Use 'modelCalibration' method of 'risk.credit.pd.LifetimePDModel' class instead.</entry>
        <entry key="RISKLMAP">'modelAccuracyPlot' method of 'risk.credit.pd.LifetimePDModel' class is not recommended. Use 'modelCalibrationPlot' method of 'risk.credit.pd.LifetimePDModel' class instead.</entry>
        <entry key="RISKLGDMA">'modelAccuracy' method of 'risk.credit.lgd.LGDModel' class is not recommended. Use 'modelCalibration' method of 'risk.credit.lgd.LGDModel' class instead.</entry>
        <entry key="RISKLGDMAP">'modelAccuracyPlot' method of 'risk.credit.lgd.LGDModel' class is not recommended. Use 'modelCalibrationPlot' method of 'risk.credit.lgd.LGDModel' class instead.</entry>
        <entry key="RISKEADMA">'modelAccuracy' method of 'risk.credit.ead.EADModel' class is not recommended. Use 'modelCalibration' method of 'risk.credit.ead.EADModel' class instead.</entry>
        <entry key="RISKEADMAP">'modelAccuracyPlot' method of 'risk.credit.ead.EADModel' class is not recommended. Use 'modelCalibrationPlot' method of 'risk.credit.ead.EADModel' class instead.</entry>
        <entry key="RM2VEC">'refmat2vec' has been removed. With appropriate code changes, construct a geographic raster reference object using 'refvecToGeoRasterReference' instead.</entry>
        <entry key="RMFLD">RMFIELD output must be assigned back to the structure.</entry>
        <entry key="REPUDD">Classes defined using schema.m files are unsupported and will be removed in a future release. Use MATLAB Classes defined using the classdef keyword instead.</entry>
        <entry key="RMWRN">The warning with tag {0} has been removed from MATLAB, so this statement has no effect.</entry>
        <entry key="ROWLN">All matrix rows must be the same length.</entry>
        <entry key="RPMT1">For readability, consider using 'ones(x,y)' instead of 'repmat(1,x,y)'.</entry>
        <entry key="RPMT1f">Replace 'repmat(1,x,y)' with 'ones(x,y)'.</entry>
        <entry key="RPMT0">For readability, consider using 'zeros(x,y)' instead of 'repmat(0,x,y)'.</entry>
        <entry key="RPMT0f">Replace 'repmat(0,x,y)' with 'zeros(x,y)'.</entry>
        <entry key="RPMTT">For readability, consider using 'true(x,y)' instead of 'repmat(true,x,y)'.</entry>
        <entry key="RPMTTf">Replace 'repmat(true,x,y)' with 'true(x,y)'.</entry>
        <entry key="RPMTF">For readability, consider using 'false(x,y)' instead of 'repmat(false,x,y)'.</entry>
        <entry key="RPMTFf">Replace 'repmat(false,x,y)' with 'false(x,y)'.</entry>
        <entry key="RPMTN">For readability, consider using 'NaN(x,y)' instead of 'repmat(NaN,x,y)'.</entry>
        <entry key="RPMTNf">Replace 'repmat(NaN,x,y)' with 'NaN(x,y)'.</entry>
        <entry key="RPMTI">For readability, consider using 'Inf(x,y)' instead of 'repmat(Inf,x,y)'.</entry>
        <entry key="RPMTIf">Replace 'repmat(Inf,x,y)' with 'Inf(x,y)'.</entry>
        <entry key="RTWHWDR">'RTW.HWDeviceRegistry' is unsupported and has been removed. The replacement strategy can be found in MATLAB documentation.</entry>
        <entry key="RV2MAT">'refvec2mat' has been removed. With appropriate code changes, construct a geographic raster reference object using 'refvecToGeoRasterReference' instead.</entry>
        <entry key="SAGROW">Variable appears to change size on every loop iteration (within a script). Consider preallocating for speed.</entry>
        <entry key="SBTMP">Invalid array indexing or function call. Chaining outputs after parenthesis is not supported.</entry>
        <entry key="SCABE">The McCabe cyclomatic complexity is {0}.</entry>
        <entry key="SEPTUD">'setptr' is unsupported and might have been changed without notice or might be removed without notice. There is no simple replacement for this. </entry>
        <entry key="SHOCIRAA">Using the {1} operator in the expression {0}(A {1} B) is probably unintended.</entry>
        <entry key="SHOCIRT">The {1} operator is unexpected because {0}(A {1} B) always returns true.</entry>
        <entry key="SHOCIRF">The {1} operator is unexpected because {0}(A {1} B) always returns false.</entry>
        <entry key="SEMFU">Script file must contain executable code. Remove empty statements to make this file a function file.</entry>
        <entry key="SEPEX">Consider using newline, semicolon, or comma before this statement for readability.</entry>
        <entry key="SEPEXR">Use a newline, semicolon, or comma before this statement.</entry>
        <entry key="SEPEXC">Use comma to separate between input arguments.</entry>
        <entry key="SERENAME">Input argument 'simevents' will be removed in a future release. Use 'slde' instead.</entry>
        <entry key="SERENAMEf">Replace 'simevents' with 'slde'.</entry>
        <entry key="SETERR">The 'ErrorMessage' property has been removed. There is no simple replacement for this.</entry>
        <entry key="SETFMT" note="settings is a MATLAB command">Using set for assigning values of numeric display format is not recommended. With appropriate code changes, use 'settings' object instead.</entry>
        <entry key="SETFSP" note="settings is a MATLAB command">Using set for assigning values of line spacing is not recommended. With appropriate code changes, use 'settings' object instead.</entry>
        <entry key="SETNU">Variable is set, but might be unused.</entry>
        <entry key="SESSION">'Session' class will be removed in a future release. Use 'daq' instead, which is a direct replacement.</entry>
        <entry key="SESSIONf">Replace 'daq.createSession' with 'daq'.</entry>
        <entry key="SESSIONAIC">'addAnalogInputChannel' method of 'Session' class will be removed in a future release. Use 'addinput' of 'DataAcquisition' class instead.</entry>
        <entry key="SESSIONADIC">'addAudioInputChannel' method of 'Session' class will be removed in a future release. Use 'addinput' of 'DataAcquisition' class instead, which is a direct replacement.</entry>
        <entry key="SESSIONAOC">'addAnalogOutputChannel' method of 'Session' class will be removed in a future release. Use 'addoutput' of 'DataAcquisition' class instead, which is a direct replacement.</entry>
        <entry key="SESSIONADOC">'addAudioOutputChannel' method of 'Session' class will be removed in a future release. Use 'addoutput' of 'DataAcquisition' class instead, which is a direct replacement.</entry>
        <entry key="SESSIONCOC">'addCounterOutputChannel' method of 'Session' class will be removed in a future release. Use 'addoutput' of 'DataAcquisition' class instead, which is a direct replacement.</entry>
        <entry key="SESSIONFGC">'addFunctionGeneratorChannel' method of 'Session' class will be removed in a future release. Use 'addoutput' of 'DataAcquisition' class instead, which is a direct replacement.</entry>
        <entry key="SESSIONRC">'removeChannel' method of 'Session' class will be removed in a future release. Use 'removechannel' of 'DataAcquisition' class instead, which is a direct replacement.</entry>
        <entry key="SESSIONQOD">'queueOutputData' method of 'Session' class will be removed in a future release. Use 'write' of 'DataAcquisition' class instead, which is a direct replacement.</entry>
        <entry key="SESSIONRSC">'resetCounters' method of 'Session' class will be removed in a future release. Use 'resetcounters' of 'DataAcquisition' class instead, which is a direct replacement.</entry>
        <entry key="SESSIONCIC">'addCounterInputChannel' method of 'Session' class will be removed in a future release. Use 'addinput' of 'DataAcquisition' class instead, which is a direct replacement.</entry>
        <entry key="SESSIONRCON">'removeConnection' method of 'Session' class will be removed in a future release. With appropriate code changes, use 'removeclock' or 'removetrigger' of 'DataAcquisition' class instead.</entry>
        <entry key="SESSIONADC">'addDigitalChannel' method of 'Session' class will be removed in a future release. With appropriate code changes, use 'addinput' or 'addoutput' of 'DataAcquisition' class instead.</entry>
        <entry key="SESSIONACC">'addClockConnection' method of 'Session' class will be removed in a future release. With appropriate code changes, use 'addclock' of 'DataAcquisition' class instead.</entry>
        <entry key="SESSIONATC">'addTriggerConnection' method of 'Session' class will be removed in a future release. With appropriate code changes, use 'addtrigger' of 'DataAcquisition' class instead.</entry>
        <entry key="SESSIONDIS">'DurationInSeconds' property of 'Session' class will be removed in a future release. Specify 'Duration' as argument to 'read' or 'start' instead.</entry>
        <entry key="SESSIONNOS">'NumberOfScans' property of 'Session' class will be removed in a future release. Specify 'NumScans' as argument to 'read' or 'start' instead.</entry>
        <entry key="SESSIONISS">'inputSingleScan' method of 'Session' class will be removed in a future release. With appropriate code changes, use 'read' of 'DataAcquisition' class instead.</entry>
        <entry key="SESSIONOSS">'outputSingleScan' method of 'Session' class will be removed in a future release. With appropriate code changes, use 'write' of 'DataAcquisition' class instead.</entry>
        <entry key="SESSIONSB">'startBackground' method of 'Session' class will be removed in a future release. With appropriate code changes, use 'start' of 'DataAcquisition' class instead.</entry>
        <entry key="SESSIONSF">'startForeground' method of 'Session' class will be removed in a future release. With appropriate code changes, use 'write' of 'DataAcquisition' class instead.</entry>
        <entry key="SESSIONAL">'addlistener' method of 'Session' class will be removed in a future release. Use the DataAcquisition interface and its callback properties instead.</entry>
        <entry key="SFLD">Use dynamic fieldnames with structures instead of SETFIELD.</entry>
        <entry key="SHVAI">Explicitly define shared variables in the parent function before calling the nested function. MATLAB does not share uninitialized variables between a nested function and the parent function.</entry>
        <entry key="SHVAU">Confusing usage of name {0} on lines {1} and {2}. Initialize {0} before line {1} to make it a shared variable or rename {0} on line {2} to disambiguate.</entry>
        <entry key="SIM">'sim' in parfor loop is not recommended. Replace the parfor loop with 'parsim'.</entry>
        <entry key="SIMPT">This import statement runs before any other code in function {0}. Consider placing it at the top of the function body.</entry>
        <entry key="SIZEM">'sizem' has been removed. With appropriate code changes, use 'rastersize' property of a map raster reference object instead.</entry>
        <entry key="SLLERR">{0} will be removed in a future release. Use an identifier on the CATCH block instead.</entry>
        <entry key="SLLERR2">{0} has been removed. Use an identifier on the CATCH block instead.</entry>
        <entry key="SLRTRENAME">Input argument 'slrt' will be removed in a future release. Use 'slrealtime' instead.</entry>
        <entry key="SLRTRENAMEf">Replace 'slrt' with 'slrealtime'.</entry>
        <entry key="SMCABE">The modified cyclomatic complexity is {0}.</entry>
        <entry key="SMTHCf">Replace 'smithchart' with 'smithplot'.</entry>
        <entry key="SONUMIN">If 'stepImpl' accepts variable number of inputs, then you must define a 'getNumInputsImpl' method.</entry>
        <entry key="SONUMOUT">If 'stepImpl' returns variable number of outputs, then you must define a 'getNumOutputsImpl' method.</entry>
        <entry key="SODEPPROP">Dependent properties are not supported for MATLAB System blocks. {0} property is not included on System block.</entry>
        <entry key="SODFLTVAL">Invalid initialization of DiscreteState property {0}. Initialize property within a 'resetImpl' method.</entry>
        <entry key="SODISSTPROP">Initialize DiscreteState property {0} within a 'resetImpl' method.</entry>
        <entry key="SOFOC">Statement outside a class definition is not allowed.</entry>
        <entry key="SORSRVDNM">{0} property is a reserved name.</entry>
        <entry key="SOTUNPROP1">Logical attribute not supported for tunable properties on MATLAB System blocks. {0} property is made Nontunable on System block.</entry>
        <entry key="SOTUNPROP3">Tunable properties on MATLAB System blocks must be numeric. {0} property is made Nontunable on System block because it is a char.</entry>
        <entry key="SOTUNPROP4">Tunable properties on MATLAB System blocks must be numeric. {0} property is made Nontunable on System block because it is a string.</entry>
        <entry key="SOUNDVW">'soundview' has been removed. With appropriate code changes, use 'audioread' with 'plot' or 'sound' instead.</entry>
        <entry key="SYNTAX">Syntax Errors</entry>
        <entry key="SYSOBJ">System Objects</entry>
        <entry key="SPBFN">Use of this function is invalid inside an SPMD block because it accesses or modifies the workspace in a non-transparent way.</entry>
        <entry key="SPBRK">The loop containing the BREAK or CONTINUE must be completely contained in the SPMD block.</entry>
        <entry key="SPDEC">The bounds on the number of workers an SPMD block can use must be a nonnegative integer.</entry>
        <entry key="SPDEC3">An SPMD block can only specify a lower and upper bound for the number of workers to use.</entry>
        <entry key="SPEED">Performance Improvements</entry>
        <entry key="SPERR">ERROR takes SPRINTF-like arguments directly.</entry>
        <entry key="SPEVB">Using EVALIN(''base'') or ASSIGNIN(''base'') inside an SPMD block refers to the worker machines'' base workspaces.</entry>
        <entry key="SPEVC">EVALIN(''caller'') and ASSIGNIN(''caller'') are invalid inside of an SPMD block.</entry>
        <entry key="SPGP">Setting the GLOBAL or PERSISTENT variable {0} in an SPMD block might fail because the set happens on a worker machine.</entry>
        <entry key="SPGV">Using the GLOBAL or PERSISTENT variable {0} in an SPMD block might fail because it is accessed on a worker machine.</entry>
        <entry key="SPLD">To avoid a transparency violation, assign the output of LOAD to a variable in SPMD blocks.</entry>
        <entry key="SPNF">The nested function {0} cannot be called from within an SPMD block.</entry>
        <entry key="SPNST">PARFOR or SPMD cannot be used inside an SPMD block.</entry>
        <entry key="SPRET">{0} statement cannot be used inside an SPMD block.</entry>
        <entry key="SPRINTFN">For readability, consider using the 'newline' function instead of 'sprintf('\\n')'.</entry>
        <entry key="SPRIX">This sparse indexing expression is likely to be slow.</entry>
        <entry key="SPSV">SAVE cannot be called in an SPMD block without the '-fromstruct' option.</entry>
        <entry key="SPTL">'sptool' has been removed. Use 'signalAnalyzer' or 'filterDesigner' instead.</entry>
        <entry key="SPWHOS">Using "who" or "whos" without "-file" is invalid inside an SPMD block because it accesses the workspace in a non-transparent way.</entry>
        <entry key="SPWRN">WARNING takes SPRINTF-like arguments directly.</entry>
        <entry key="ST2NM">If you are operating on scalar values, consider using {0} for faster performance.</entry>
        <entry key="STCCS">It appears that STRCMPI/STRNCMPI can be replaced by a faster, case sensitive compare.</entry>
        <entry key="STCCSf">Replace STRCMPI/STRNCMPI.</entry>
        <entry key="STCI">Use STRCMPI(str1,str2) instead of using UPPER/LOWER in a call to STRCMP.</entry>
        <entry key="STCIf">Remove call to UPPER/LOWER, use STRCMPI.</entry>
        <entry key="STCMP" note="stringDatatypeUpdate">Use STRCMP instead of == or ~= to compare character vectors.</entry>
        <entry key="STCUL" note="stringDatatypeUpdate">The comparison will likely fail due to case mismatch.</entry>
        <entry key="STFLD">SETFIELD output must be assigned back to the structure.</entry>
        <entry key="STISA" note="stringDatatypeUpdate">Consider using ISA instead of comparing the class name.</entry>
        <entry key="STLOW" note="stringDatatypeUpdate">In this comparison the call to UPPER/LOWER is unnecessary.</entry>
        <entry key="STLOWf">Remove the UPPER/LOWER call.</entry>
        <entry key="STNCI">Use STRNCMPI(str1,str2) instead of using UPPER/LOWER in a call to STRNCMP.</entry>
        <entry key="STNCIf">Remove call to UPPER/LOWER, use STRNCMPI.</entry>
        <entry key="STOUT">Function return value might be unset.</entry>
        <entry key="STRIN" note="stringDatatypeUpdate">A quoted character vector is unterminated.</entry>
        <entry key="STRQUOT">string('...') is not recommended. Use "..." instead.</entry>
        <entry key="STRQUOTf">Replace string('...') with "...".</entry>
        <entry key="STRCMPCSTR">'strcmp' always returns false for string elements of a cell array. Use ["str1", "str2"] instead of '{'"str1", "str2"'}'.</entry>
        <entry key="DOUQT">A double quoted string is unterminated.</entry>
        <entry key="STRNU">This variable, apparently a structure, is changed but the value might be unused.</entry>
        <entry key="STRSZ" note="stringDatatypeUpdate">Use STRCMP to compare character vectors that can have different sizes.</entry>
        <entry key="STTOK">Use one call to 'split' instead of calling 'strtok' in a loop.</entry>
        <entry key="SUBSASGN">Output of SUBSASGN must be assigned to a variable.</entry>
        <entry key="SUSENS">Variable is used, but might be unset (within a script).</entry>
        <entry key="SVNODEF">Variable might not have a value, because variable definition may not be executed.</entry>
        <entry key="SYNER">Parse error at {0}: usage might be invalid MATLAB syntax.</entry>
        <entry key="SYDEUD">'system_dependent' is unsupported and might have been changed without notice or might be removed without notice. There is no simple replacement for this. </entry>
        <entry key="SYSBANG">Use of bang operator is disallowed by custom code analyzer configuration.</entry>
        <entry key="TCPC">'tcpip' with 'client' as a 'NetworkRole' will be removed in a future release.  With appropriate code changes, use 'tcpclient' instead.</entry>
        <entry key="TCPS">'tcpip' with 'server' as a 'NetworkRole' will be removed in a future release.  With appropriate code changes, use 'tcpserver' instead.</entry>
        <entry key="TODATENUM">'todatenum' is not recommended. With appropriate code changes, use the 'DatetimeType' parameter of 'cdfread' instead.</entry>
        <entry key="TREETEST">'treetest' has been removed. Use ClassificationTree or RegressionTree methods instead.</entry>
        <entry key="TEXTL">Text is too long for MATLAB to parse.</entry>
        <entry key="TLEV">{0} could be very inefficient unless it is a top-level statement in its function.</entry>
        <entry key="TMMSG">More than 10,000 Code Analyzer messages were generated, leading to some being deleted.</entry>
        <entry key="TMSMS">More than 1,000 parse error messages were generated, leading to some being deleted.</entry>
        <entry key="TNMLP">Move the toolbox function out of the loop for better performance.</entry>
        <entry key="TREEDISP">TREEDISP has been removed. Use ClassificationTree or RegressionTree VIEW methods instead.</entry>
        <entry key="TREEFIT">TREEFIT has been removed. Use fitctree or fitrtree instead.</entry>
        <entry key="TREEPRUNE">TREEPRUNE has been removed. Use ClassificationTree or RegressionTree PRUNE methods instead.</entry>
        <entry key="TREEVAL">TREEVAL has been removed. Use ClassificationTree or RegressionTree PREDICT methods instead.</entry>
        <entry key="TRIM1">Use STRTRIM(str) instead of nesting FLIPLR and DEBLANK calls.</entry>
        <entry key="TRIM1f">Replace by STRTRIM call.</entry>
        <entry key="TRIM2">Use STRTRIM(str) instead of DEBLANK(STRJUST(str,''left'')).</entry>
        <entry key="TRIM2f">Replace by STRTRIM call.</entry>
        <entry key="TRSRT">Transposing the input to {0} is often unnecessary.</entry>
        <entry key="TRYNC">TRY statement should have a CATCH statement to check for unexpected errors.</entry>
        <entry key="TWIDf">Replace name by ~.</entry>
        <entry key="TWOCM">A comma cannot immediately follow another comma.</entry>
        <entry key="TWOCMf">Remove a comma.</entry>
        <entry key="UDIM">Instead of using transpose ('' or .''), consider using a different DIMENSION input argument to {0}.</entry>
        <entry key="UIRSUD">'uirestore' is unsupported and might have been changed without notice or might be removed without notice. There is no simple replacement for this. </entry>
        <entry key="UISUUD">'uisuspend' is unsupported and might have been changed without notice or might be removed without notice. There is no simple replacement for this. </entry>
        <entry key="UNDOC">Unsupported Features</entry>
        <entry key="UNONC">Assign the onCleanup output argument to a variable. Do not use the tilde operator (~) in place of a variable.</entry>
        <entry key="UNRCH">This statement (and possibly following ones) cannot be reached.</entry>
        <entry key="UNRCHf">Remove unexecuted statement(s).</entry>
        <entry key="UNRPWR">Consider using parentheses to explicitly specify operator precedence.</entry>
        <entry key="UNSET">Invalid use of {0} on the left side of an assignment.</entry>
        <entry key="UNSEV">Unset Variables</entry>
        <entry key="UNUSD">Unused Constructions</entry>
        <entry key="USAGE">Good Practices</entry>
        <entry key="USENS">Explicitly initialize this variable to avoid a potential uninitialized variable, or use a valid syntax for function call on line {0}.</entry>
        <entry key="USESWNS">Variable must be explicitly defined before first use.</entry>
        <entry key="V2MTX">Starting R2021a, the second output of 'vec2mtx' is a geographic raster reference object instead of a referencing vector. '[Z,R] = vec2mtx(LAT,LON,Z1,R1,...)' is an exception, where R1 is a referencing vector or matrix. Most Mapping Toolbox functions that accept referencing vectors as input also accept geographic raster reference objects, so existing code is unlikely to be affected.</entry>
        <entry key="V6ON">USEV6PLOTAPI(''on'') will be removed in a future release. There is no simple replacement for this.</entry>
        <entry key="VALST">{0} must be the last argument in the argument list.</entry>
        <entry key="VANUS">Input argument ''varargin'' might be unused.</entry>
        <entry key="VARARG">Initialize VARARGOUT with a CELL.</entry>
        <entry key="VERMATLAB">ver('matlab') is not recommended. With appropriate code changes, use 'matlabRelease' instead.</entry>
        <entry key="VERLESSMATLAB">verLessThan('matlab', ...) is not recommended. With appropriate code changes, use 'isMATLABReleaseOlderThan' instead.</entry>
        <entry key="VREDT">3D World Editor has been removed, so 'vredit' does not open the virtual world. With appropriate code changes, use sim3d classes to create and view a 3D environment instead.</entry>
        <entry key="VREDT2">'vredit' and the 3D World Editor have been removed. With appropriate code changes, use sim3d classes to create and view a 3D environment instead.</entry>
        <entry key="VRML">{0} will be removed in a future release. With appropriate code changes, use sim3d classes to create and view a 3D environment instead.</entry>
        <entry key="VRML2">{0} has been removed. With appropriate code changes, use sim3d classes to create and view a 3D environment instead.</entry>
        <entry key="VRPLY">Simulink 3D Animation Player has been removed, so 'vrplay' does not open and play virtual world animation files. With appropriate code changes, use sim3d classes to create and view a 3D environment instead.</entry>
        <entry key="VRPLY2">'vrplay' and the Simulink 3D Animation Player have been removed. With appropriate code changes, use sim3d classes to create and view a 3D environment instead.</entry>
        <entry key="VRRPS">VIDEOREADER.ISPLATFORMSUPPORTED has been removed. VIDEOREADER is now supported on all platforms.</entry>
        <entry key="VRVIEWER">Simulink 3D Animation Viewer has been removed, so {0} does not open the virtual world. With appropriate code changes, use sim3d classes to create and view a 3D environment instead.</entry>
        <entry key="VRVIEWER2">{0} and the Simulink 3D Animation Viewer have been removed. With appropriate code changes, use sim3d classes to create and view a 3D environment instead.</entry>
        <entry key="VUNUS">{0} produces a value that might be unused.</entry>
        <entry key="VIDREADf">Replace 'NumberOfFrames' with 'NumFrames'.</entry>
        <entry key="WAVLT">{0} has been removed. With appropriate code changes, use Signal Multiresolution Analyzer, Wavelet Image Analyzer, Wavelet Signal Analyzer, Wavelet Signal Denoiser, or Wavelet Time-Frequency Analyzer instead.</entry>
        <entry key="WEBBEHAVE">The 'web' function now opens external sites in your system browser by default. In a future release, 'web' will open all pages using the system browser. Consider specifying the '-browser' option to open all pages in your system browser.</entry>
        <entry key="WEBREMOVE">The 'web' function does not return a handle or URL for pages that open in the system browser. Use 'stat = web(___, '-browser')' instead.</entry>
        <entry key="WFLRD">'worldfileread(worldFileName)' has been removed. With appropriate code changes, use 'worldfileread(worldFileName, coordinateSystemType, rasterSize)' instead.</entry>
        <entry key="WFMRM">'worldFileMatrixToRefmat' has been removed. With appropriate code changes, construct a raster reference object using 'georasterref' or 'maprasterref' instead.</entry>
        <entry key="WLAST">WARNING('''') does not reset the warning state. Use LASTWARN('''') instead.</entry>
        <entry key="WLASTf">Change WARNING to LASTWARN.</entry>
        <entry key="WLGC">'wlanGeneratorConfig' has been removed. Use the name-value pair syntax of 'wlanWaveformGenerator' instead.</entry>
        <entry key="WLRC">'wlanRecoveryConfig' has been removed. Instead, parameterize the function that accepts the 'wlanRecoveryConfig' object by using the name-value pair syntax.</entry>
        <entry key="WNTAG">The first argument of WARNING should be a message identifier. Using a message identifier allows users better control over the message.</entry>
        <entry key="WTXT">Specify a warning message with the message identifier.</entry>
        <entry key="TTOOFEWDIMS">Specify at least two dimensions for size.</entry>
        <entry key="TINVALDIM">Each dimension must be a nonnegative integer number or a colon.</entry>
        <entry key="Warning" note="Warning in Warning Message">Warning</entry>
        <entry key="XCORR">Positional syntax for optional arguments has been removed from 'crosscorr'. Use name-value pairs instead.</entry>
        <entry key="XFRWSB">The 'TransferBaseWorkspaceVariables' option is not recommended for 'batchsim'. With appropriate code changes, consider using project startup scripts or the 'SetupFcn' option instead.</entry>
        <entry key="XFRWSP">The 'TransferBaseWorkspaceVariables' option is not recommended for 'parsim'. With appropriate code changes, consider using project startup scripts or the 'SetupFcn' option instead.</entry>
        <entry key="XPCRENAME">Input argument 'xpc' will be removed in a future release. Use 'slrealtime' instead.</entry>
        <entry key="XPCRENAMEf">Replace 'xpc' with 'slrealtime'.</entry>
        <entry key="VSEMD">'EOSMode' property of 'visadev' class will be removed in a future release. With appropriate code changes, use 'configureTerminator' method and 'EOIMode' property of 'visadev' class instead.</entry>
        <entry key="TMTL">'tmtool' will be removed in a future release. Use 'serialExplorer', 'tcpipExplorer', 'udpExplorer', 'visaExplorer', or 'instrumentExplorer' instead.</entry>
        <entry key="TMTL2">'tmtool' has been removed. Use 'serialExplorer', 'tcpipExplorer', 'udpExplorer', 'visaExplorer', or 'instrumentExplorer' instead.</entry>
    </message>
</rsccat>

<!-- LocalWords:  EI XDir YDir codeanalysis Bufsize cdflib clibgen clib CArrays cnncodegen targetlib
     LocalWords:  cudnn mkldnn tensorrt commscope parula Eigen CORNERMETRIC xtickformat ytickformat
     LocalWords:  ztickformat IIR Allpole LSP dutycycle midcross pulseperiod pulsesep pulsewidth
     LocalWords:  falltime risetime slewrate SAMPLEFACTOR axtoolbar axtoolbarbtn FIS fismf FIMPLICIT
     LocalWords:  FCONTOUR FMESH FSURF EZGRAPH findpackage geoloc readgeoraster hrn olp hdlm
     LocalWords:  protobuf na weu ni bluetooth bluetoothlist serialportlist serialport visadevlist
     LocalWords:  ivi ividriverlist ividevlist xlist aardvarklist serialportfind tcpclientfind
     LocalWords:  tcpserverfind udpportfind visadevfind aardvarkfind xfind icdevicefind intlinprog
     LocalWords:  vxipnp Interpolant isstring subpackages ltehdl whdl XWorld YWorld BLKSZ maci
     LocalWords:  georefcells georefpostings georasterref maprefcells maprefpostings maprasterref
     LocalWords:  readmatrix readtable repeat:name UA fromstruct polarplot raytracing imagemethod
     LocalWords:  raytracingimage raytracingimagemethod powersys sps rcosdesign rossvcclient
     LocalWords:  smithplot PARPOOL commtest BER testconsole lgd ead refmat vec refvec slde addinput
     LocalWords:  addoutput removechannel resetcounters removeclock removetrigger addclock
     LocalWords:  addtrigger parsim rastersize slrt slrealtime audioread tcpclient tcpserver mtx
     LocalWords:  vredit Multiresolution Denoiser wlan batchsim xpc visadev EOI
-->
