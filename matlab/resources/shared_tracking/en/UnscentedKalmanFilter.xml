<?xml version="1.0" encoding="UTF-8" ?>
<!-- Copyright 2015-2020 The MathWorks, Inc. -->
<rsccat version="1.0" locale="en_US" product="shared_tracking" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../../schema/msgcat.xsd">
   <message>
      <entry key="invalidInputsToConstructor">
         Incorrect number of input arguments to filter: {0} arguments found. Provide 0, 2, or 3 input arguments, followed by optional name-value pairs.
      </entry>
      <entry key="invalidNumInputsToPredict">
         The number of optional arguments in the call to predict does not match the number of additional arguments expected by the {0}. Check that all additional arguments of {0} are provided as optional input arguments to predict.
      </entry>
      <entry key="StateNonMatchingSizeOrClass">
         {0} must return a {1} of dimension {2} and must have same type as the state of the filter.
      </entry>      
      <entry key="invalidCovarianceDims">
         {0} must be a scalar or {1}-by-{2} matrix.
      </entry>
      <entry key="invalidCovarianceValues">
         {0} must be a symmetric positive-semidefinite matrix.
      </entry>
      <entry key="invalidStateDims">
         State must be a scalar or a {0}-element vector.
      </entry>
      <entry key="notPredictedDistance">
         predict must be called prior to distance.
      </entry>
      <entry key="NonScalarFilter">
         Expected a single {0} in the call to {1}.
      </entry>
      <entry key="invalidNumInputsToCorrect">
         The number of optional arguments in the call to {0} does not match the number of additional arguments expected by the {1}. Check that all additional arguments of {1} are provided as optional input arguments to {0}.
      </entry>
      <entry key="MeasurementNonMatchingSizeOrClass">
         The output from {0} must have the same size and data type as the given measurement.
      </entry>
      <entry key="StateCovarianceNotPSD">
         Sigma points calculation failed because the state covariance is not positive semi-definite. One potential reason is a small Alpha parameter.
      </entry>
      <entry key="getUndefinedMeasurementNoise">
         MeasurementNoise must be set as a matrix before it can be retrieved when performing code generation.
      </entry>
      <entry key="getUndefinedProcessNoise">
         ProcessNoise must be set as a matrix before it can be retrieved when performing code generation.
      </entry>
      <entry key="getUndefinedStateCovariance">
         StateCovariance must be set as a matrix before it can be retrieved when performing code generation.
      </entry>
      <entry key="getUndefinedState">
         State must be set before it can be retrieved when performing code generation.
      </entry>
      <entry key="undefinedStateTransitionFcn">
         StateTransitionFcn must be specified.
      </entry>
      <entry key="undefinedMeasurementFcn">
         MeasurementFcn must be specified.
      </entry>
      <entry key="UnknownNumberOfMeasurementNoiseInputs">
         MeasurementNoise must be specified before performing this operation.
      </entry>
      <entry key="UnknownNumberOfProcessNoiseInputs">
         ProcessNoise must be specified before performing this operation.
      </entry>
      <entry key="UnknownNumberOfStates">
         State must be specified before performing this operation.
      </entry>
      <entry key="PropertyOnlySettableDuringConstruction">
         The property ''{0}'' must be set when constructing the filter.
      </entry>
      <entry key="InvalidJPDAInput">
         Expected sum({0}) to be equal to 1.
      </entry>
   </message>
</rsccat>
