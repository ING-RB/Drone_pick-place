<?xml version="1.0" encoding="UTF-8"?>
<!--Copyright 2025 The MathWorks, Inc.-->

<rsccat xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.0" locale="zh_CN" product="polyspace" xsi:noNamespaceSchemaLocation="../../resources/schema/msgcat.xsd">
  <message>
    <entry key="OptionNameProjectName">名称</entry>
    <entry key="OptionNameProjectLanguage">语言</entry>
    <entry key="OptionNameProjectCreated">创建时间</entry>
    <entry key="OptionNameProjectLastModified">最后修改时间</entry>
    <entry key="OptionNameProjectAuthor">作者</entry>
    <entry key="OptionNameApplicationSourceFolders">应用程序源文件夹</entry>
    <entry key="OptionHelpApplicationSourceFolders">显式添加到工程中的源文件夹。</entry>
    <entry key="OptionNameApplicationSourceFiles">应用程序源文件</entry>
    <entry key="OptionHelpApplicationSourceFiles">显式添加到工程中的源文件。</entry>
    <entry key="OptionNamePSTUnitTestSourceFolders">Polyspace xUnit 测试文件夹</entry>
    <entry key="OptionHelpPSTUnitTestSourceFolders">包含显式添加到工程中的 Polyspace Test xUnit 测试的文件夹。</entry>
    <entry key="OptionNamePSTUnitTestSourceFiles">Polyspace xUnit 测试文件</entry>
    <entry key="OptionHelpPSTUnitTestSourceFiles">包含显式添加到工程中的 Polyspace Test xUnit 测试的文件。</entry>
    <entry key="OptionNameExternalTestSourceFolders">外部测试文件夹</entry>
    <entry key="OptionHelpExternalTestSourceFolders">包含显式添加到工程中的外部测试的文件夹。</entry>
    <entry key="OptionNameExternalTestSourceFiles">外部测试文件</entry>
    <entry key="OptionHelpExternalTestSourceFiles">包含显式添加到工程中的外部测试的文件。</entry>
    <entry key="OptionNameProjectVariables">工程变量</entry>
    <entry key="OptionHelpProjectVariables">在工程设置中用作简化形式的变量名称。要引用这些变量，请将它们括在 $() 中。例如，您可以将变量 ROOTPATH 设置为根文件夹路径，并在其他位置输入以 $(ROOTPATH) 开头的文件夹路径。</entry>
    <entry key="OptionNameIncludePatterns">包括文件名模式</entry>
    <entry key="OptionHelpIncludePatterns">标识要从指定的文件夹添加到工程中的源文件的模式。使用通配符(如 * 和 ?)匹配多个文件。</entry>
    <entry key="OptionNameExcludePatterns">排除模式</entry>
    <entry key="OptionHelpExcludePatterns">从工程中永久排除的文件和文件夹。例如，如果排除某个文件，则刷新父级源文件夹不会将该文件添加回工程中。请注意，您无法排除显式添加到工程中的文件或文件夹。</entry>
    <entry key="OptionNameArtifactPath">工件目录</entry>
    <entry key="OptionHelpArtifactPath">存储工程工件(例如生成的测试代码和编译信息)的文件夹。如果设置环境变量 POLYSPACE_ARTIFACTS_DIR，它会覆盖此选项。</entry>
    <entry key="OptionNameAllowNegativeOperandInShift">允许左移负操作数</entry>
    <entry key="OptionHelpAllowNegativeOperandInShift">ANSI/ISO C-90 标准不允许对负数进行移位运算。默认情况下，验证停止。&lt;br&gt;&lt;br&gt;例如，代码 &lt;i&gt; -2 &lt;&lt; 2 &lt;/i&gt; 将导致验证停止。&lt;br&gt;但是，如果选择此选项，Polyspace 将认为操作有效并输出结果: -2 &lt;&lt; 2 = -8</entry>
    <entry key="OptionNameAllowNonFiniteFloats">考虑非有限浮点数</entry>
    <entry key="OptionHelpAllowNonFiniteFloats">将 Inf 和 NaN 纳入验证。例如: &lt;BR&gt; &lt;ul&gt; &lt;li&gt;允许浮点运算产生 Inf 和 NaN。&lt;li&gt;假定具有未知值的浮点变量可以是无限值或 NaN。&lt;/ul&gt;单使用这一选项实质上会禁止对浮点&lt;BR&gt;运算进行许多数值检查。如果已大体考虑了无限值和 NaN，但不确定&lt;BR&gt;是否涵盖了所有情况，则可以将 "无限值" 和 "NaN" 选项设置为 warn-first。&lt;br&gt;&lt;br&gt;在 Bug Finder 中，如果分析将无限值和 NaN 的比较标记为死代码，则可使用此选项。</entry>
    <entry key="OptionNameAllowPtrArithOnStruct">启用跨字段的指针算术</entry>
    <entry key="OptionHelpAllowPtrArithOnStruct">允许跨结构体字段边界的指针算术运算 - 这不是符合 ANSI/ISO C-90 的行为。</entry>
    <entry key="OptionNameAllowedPragmas">允许的 pragma</entry>
    <entry key="OptionHelpAllowedPragmas">指定进行以下检查的 pragma: &lt;ul&gt;&lt;li&gt;MISRA-C 和 MISRA AC AGC 规则 3.4 &lt;/li&gt; &lt;li&gt;MISRA C++ 规则 16-6-1&lt;/li&gt;&lt;/ul&gt; 此规则检查项将视这些 pragma 已提供文档说明，从而不会将其标记为违反这些规则。</entry>
    <entry key="OptionNameAutosarMultitasking">ARXML 文件选择</entry>
    <entry key="OptionHelpAutosarMultitasking">指定包含 AUTOSAR 多任务配置描述的 ARXML 文件列表。</entry>
    <entry key="OptionNameBooleanTypes">有效布尔类型</entry>
    <entry key="OptionHelpBooleanTypes">使用此选项指定希望 Polyspace 将其视为布尔值的数据类型。&lt;BR&gt;仅支持由 typedef 语句定义的数据类型。</entry>
    <entry key="OptionNameCheckGlobalsInit">检查全局变量在热重启后是否初始化</entry>
    <entry key="OptionHelpCheckGlobalsInit">检查全局变量是否在指定的初始化代码中进行了赋值。&lt;BR&gt;验证整个应用程序时，初始化代码从 'main' 开始，到 pragma 'polyspace_end_of_init' 结束。&lt;BR&gt;验证模块或库时，初始化代码是一组初始化函数的序列。</entry>
    <entry key="OptionNameCheckInfinite">无限值</entry>
    <entry key="OptionHelpCheckInfinite">检测产生无限值(Inf-s)的运算。&lt;BR&gt;&lt;ul&gt;&lt;li&gt;allow: 不对运算进行检查。&lt;BR&gt;&lt;/li&gt;&lt;li&gt;warn-first: 仅当操作数不是无限值时才对运算进行检查。&lt;BR&gt;即使检查变成红色，也会继续验证。&lt;BR&gt;此模式仅突出显示第一次出现的无限值。&lt;/li&gt;&lt;li&gt;forbid: 对运算进行检查。&lt;BR&gt;如果检查为红色，则停止验证。&lt;/li&gt;&lt;/ul&gt;</entry>
    <entry key="OptionNameCheckNan">NaN</entry>
    <entry key="OptionHelpCheckNan">检测产生 NaN 的运算。&lt;BR&gt;&lt;ul&gt;&lt;li&gt;allow: 不对运算进行检查。&lt;BR&gt;&lt;/li&gt;&lt;li&gt;warn-first: 仅当操作数不是 NaN 时才对运算进行检查。&lt;BR&gt;即使检查变为红色，也会继续验证。&lt;BR&gt;此模式仅突出显示第一次出现的 NaN。&lt;/li&gt;&lt;li&gt;forbid: 对运算进行检查。&lt;BR&gt;如果检查变为红色，则停止验证。&lt;/li&gt;&lt;/ul&gt;</entry>
    <entry key="OptionNameCheckSubnormal">次正规数值检测模式</entry>
    <entry key="OptionHelpCheckSubnormal">检测产生次正规浮点值的运算。&lt;BR&gt;&lt;ul&gt;&lt;li&gt;allow: 不对运算进行检查。&lt;BR&gt;&lt;/li&gt;&lt;li&gt;warn-first: 仅当操作数不是次正规值时才对运算进行检查。&lt;BR&gt;即使检查变为红色，也会继续验证。&lt;BR&gt;此模式仅突出显示第一次出现的次正规值。&lt;/li&gt;&lt;li&gt;warn-all: 即使操作数为次正规值，也对运算进行检查。&lt;BR&gt;即使检查变为红色，也会继续验证。&lt;BR&gt;此模式会突出显示所有出现的次正规值。&lt;/li&gt;&lt;li&gt;forbid: 对运算进行检查。&lt;BR&gt;如果检查变为红色，则停止验证。&lt;/li&gt;&lt;/ul&gt;</entry>
    <entry key="OptionNameCheckersActivationFile">检查项激活文件</entry>
    <entry key="OptionHelpCheckersActivationFile">选择检查项(缺陷和编码规则)。保存更改时，您的选择将保存为 XML 格式，并且为此选项指定该 XML 文件的路径。</entry>
    <entry key="OptionNameChecksUsingSystemInputValues">运行更严格的检查并考虑所有的系统输入值</entry>
    <entry key="OptionHelpChecksUsingSystemInputValues">考虑以下各项的所有可能的值: &lt;ul&gt;&lt;li&gt;全局变量&lt;/li&gt; &lt;li&gt;易失变量的读取值&lt;/li&gt; &lt;li&gt;插桩函数的返回值&lt;/li&gt; &lt;li&gt;使用 "考虑这些函数的输入" 指定的函数输入&lt;/li&gt;&lt;/ul&gt; 更严格的静态分析可检测极端数值情况可能导致的问题，&lt;BR&gt;并提供可能导致检测到的缺陷的示例值。&lt;BR&gt; &lt;BR&gt; 对使用选项 "考虑这些函数的输入" (-system-input -from)指定的函数执行更严格的分析。</entry>
    <entry key="OptionNameClassAnalyzer">类</entry>
    <entry key="OptionHelpClassAnalyzer">输入用于生成 main 函数的类列表:&lt;ul&gt;&lt;li&gt;none: 没有类&lt;BR&gt;&lt;li&gt;all: 每个类&lt;BR&gt;&lt;li&gt;custom: 给定类的列表。&lt;BR&gt;给定类列表的选定成员函数(由 '要调用的在指定类内函数' 定义)将由生成的 main 函数调用。&lt;BR&gt;&lt;/ul&gt;</entry>
    <entry key="OptionNameClassAnalyzerCalls">指定类内要调用的函数</entry>
    <entry key="OptionHelpClassAnalyzerCalls">验证由选项 -class-analyzer 指定的类的合格方法。合格方法是指定类的静态、公共和受保护方法。&lt;ul&gt;&lt;li&gt;all: 生成的 main 函数将调用指定类的所有公共和受保护方法。不调用从父类继承的成员。&lt;BR&gt;&lt;li&gt;all-public: 生成的 main 函数将调用受保护方法之外的所有方法。&lt;BR&gt;&lt;li&gt;inherited-all: 生成的 main 函数将调用指定类及其父类的所有公共和受保护方法。&lt;BR&gt;&lt;li&gt;inherited-all-public: 生成的 main 函数将调用指定类及其父类的所有公共方法。&lt;BR&gt;&lt;li&gt;unused: 默认。生成的 main 函数将调用指定类中未调用的所有方法。&lt;BR&gt;&lt;li&gt;unused-public: 除受保护方法之外，生成的 main 函数将调用指定类中未调用的所有方法。&lt;BR&gt;&lt;li&gt;inherited-unused: 生成的 main 函数将调用指定类及其父类的所有未被其他方法调用的公共和受保护方法。&lt;BR&gt;&lt;li&gt;inherited-unused-public: 生成的 main 函数将调用指定类及其父类的所有未被其他方法调用的所有公共方法。&lt;BR&gt;&lt;li&gt;custom=list_of_methods: 生成的 main 函数将调用在 list_of_methods 中提供的方法。&lt;BR&gt;&lt;/ul&gt;</entry>
    <entry key="OptionNameClassOnly">仅分析类内容</entry>
    <entry key="OptionHelpClassOnly">仅分析由类(-class-analyzer)选项指定的类中包含的代码。&lt;BR&gt;系统将为在类之外定义的所有函数插桩，即使为 Polyspace 提供了源代码也是如此。</entry>
    <entry key="OptionNameCodeMetrics">计算代码度量</entry>
    <entry key="OptionHelpCodeMetrics">计算代码度量。</entry>
    <entry key="OptionNameConsiderVolatileQualifierOnFields">考虑字段的 volatile 限定符</entry>
    <entry key="OptionHelpConsiderVolatileQualifierOnFields">不忽略结构体字段的 volatile 限定符。&lt;br&gt;如果启用此选项，软件会做出以下假设:&lt;ul&gt;&lt;li&gt;如果结构体的某个字段为易失类型，则整个结构体均视为易失类型。&lt;br&gt;所有字段均视为易失类型，即使没有 volatile 限定符也是如此。&lt;/li&gt;&lt;li&gt;易失结构体的每个字段在代码中的任何位置都具有完整范围的值。&lt;/li&gt;&lt;/ul&gt;</entry>
    <entry key="OptionNameContextSensitivity">上下文敏感</entry>
    <entry key="OptionHelpContextSensitivity">为给定函数中包含的检查添加调用上下文信息。&lt;br&gt;例如，如果对函数的一个调用结果为红色检查，而另一个调用结果为绿色检查，则两者的调用信息和颜色都将包含在检查中。&lt;br&gt;&lt;br&gt;选择以下值之一:&lt;ul&gt;&lt;li&gt;无 - 无上下文敏感&lt;br&gt;&lt;li&gt;自动 - 自动选择将应用上下文敏感的函数&lt;br&gt;&lt;li&gt;自定义 - 提供将应用上下文敏感的函数&lt;/li&gt;</entry>
    <entry key="OptionNameCriticalSection">临界区详细信息</entry>
    <entry key="OptionHelpCriticalSection">指定作为临界区起点和终点的例程的列表。每个临界区都有起点和终点。&lt;BR&gt;当您要模拟对共享资源的保护时，请使用这些临界区。</entry>
    <entry key="OptionNameCyclicTasks">周期任务</entry>
    <entry key="OptionHelpCyclicTasks">指定要分析的周期任务列表。这些任务不得使用参数。&lt;BR&gt;如果任务是带参数的函数，则可以将其&lt;BR&gt;封装在不带参数的函数中，并通过全局变量传递参数。</entry>
    <entry key="OptionNameDataRangeSpecifications">约束设置</entry>
    <entry key="OptionHelpDataRangeSpecifications">为全局变量、指针和函数参数指定数据约束。&lt;BR&gt;点击 "编辑" 按钮打开向导，引导您完成约束设置。或者，在字段中指定约束模板文件。&lt;BR&gt;&lt;BR&gt;指定的约束将覆盖从 Simulink 模型中提取的值。</entry>
    <entry key="OptionNameDetectPointerEscape">检测超出作用域的堆栈指针解引用</entry>
    <entry key="OptionHelpDetectPointerEscape">查找因为函数返回了指向其局部变量之一的指针而导致未定义行为的情况。</entry>
    <entry key="OptionNameDisableInitializationChecks">禁用非初始化检查</entry>
    <entry key="OptionHelpDisableInitializationChecks">禁用以下检查:&lt;ul&gt;&lt;li&gt;未初始化的局部变量&lt;br&gt;&lt;li&gt;未初始化的变量&lt;br&gt;&lt;li&gt;未初始化的指针&lt;br&gt;&lt;li&gt;初始化的返回值&lt;/i&gt;&lt;/ul&gt;如果启动此选项，则在声明时，变量被视为使用完整范围，指针为空或者指向未知偏移量处的内存模块。</entry>
    <entry key="OptionNameDoNotGenerateResultsFor">不为以下项生成结果</entry>
    <entry key="OptionHelpDoNotGenerateResultsFor">指定不需要分析结果的文件。&lt;ul&gt;&lt;li&gt;include-folders: 包含文件夹中的头文件 &lt;/li&gt; &lt;li&gt;all-headers: 位于包含文件夹中的头文件、与源文件位于同一文件夹中的头文件 &lt;/li&gt; &lt;li&gt;custom: 指定的文件，或指定文件夹中的文件 &lt;/li&gt;&lt;/ul&gt; 此选项仅适用于编码规则、代码度量和 Polyspace Bug Finder 缺陷。</entry>
    <entry key="OptionNameDos">代码来自 DOS 或 Windows 文件系统</entry>
    <entry key="OptionHelpDos">当代码来自 &lt;B&gt;DOS 或 Windows&lt;/B&gt; 文件系统时，使用此选项。&lt;BR&gt;此选项有助于解决大小写和控制字符问题。</entry>
    <entry key="OptionNameEnableBatchBugFinder">在远程集群上运行 Bug Finder 分析</entry>
    <entry key="OptionHelpEnableBatchBugFinder">将 Polyspace 分析作业发送到通过 MATLAB Distributed Computing Server 和 Polyspace Bug Finder Server 配置的远程集群。</entry>
    <entry key="OptionNameEnableBatchCodeProver">在远程集群上运行 Code Prover 分析</entry>
    <entry key="OptionHelpEnableBatchCodeProver">将 Polyspace 分析作业发送到通过 MATLAB Distributed Computing Server 和 Polyspace Code Prover Server 配置的远程集群。</entry>
    <entry key="OptionNameEnableCheckersActivationFile">使用自定义检查项文件</entry>
    <entry key="OptionHelpEnableCheckersActivationFile">指定必须使用检查项激活 XML 文件指定检查项。</entry>
    <entry key="OptionNameEnableConcurrencyDetection">为 Code Prover 启用自动并发检测</entry>
    <entry key="OptionHelpEnableConcurrencyDetection">自动识别某些并发原语，如 pthread_create。&lt;BR&gt; &lt;ul&gt; &lt;li&gt;Code Prover: 此选项用于包含并发原语的多任务应用程序。&lt;br&gt;您的应用程序必须具有 ‘main’ 函数。&lt;li&gt;Bug Finder: 此选项不是必需的。Bug Finder 默认识别并发原语。&lt;/ul&gt;点击 '更多帮助' 查看可检测的原语列表。</entry>
    <entry key="OptionNameEnableExternalMultitasking">使用文件指定多任务配置</entry>
    <entry key="OptionHelpEnableExternalMultitasking">指定 Polyspace 必须从外部文件中提取多任务描述。</entry>
    <entry key="OptionNameEnableMain">验证整个应用程序</entry>
    <entry key="OptionHelpEnableMain">指定您的应用程序包含 'main' 函数。Code Prover 使用此 'main' 函数作为验证的起点。</entry>
    <entry key="OptionNameEnableMultitasking">手动配置多任务</entry>
    <entry key="OptionHelpEnableMultitasking">指定任务、中断、共享变量保护和其他多任务构造。</entry>
    <entry key="OptionNameEnableKLimiting">设置结构体内部的验证深度</entry>
    <entry key="OptionHelpEnableKLimiting">指定必须指定结构体内部的验证深度。</entry>
    <entry key="OptionNameEnableReportGeneration">生成报告</entry>
    <entry key="OptionHelpEnableReportGeneration">从静态分析结果生成报告。</entry>
    <entry key="OptionNameEntryPoints">任务</entry>
    <entry key="OptionHelpEntryPoints">指定要分析的任务列表。这些入口函数不得使用参数。&lt;BR&gt;如果任务入口函数是带参数的函数，则可以将其&lt;BR&gt;封装在不带参数的函数中，并通过全局变量传递参数。</entry>
    <entry key="OptionNameExternalMultitaskingType">用于多任务的外部文件</entry>
    <entry key="OptionHelpExternalMultitaskingType">指定用于多任务的 OSEK OIL 文件或 AUTOSAR ARXML 文件。</entry>
    <entry key="OptionNameFastAnalysis">Bug Finder 使用快速分析模式</entry>
    <entry key="OptionHelpFastAnalysis">在快速分析模式下运行 Bug Finder 分析。只分析已修改的文件。&lt;BR&gt;注意: 快速分析模式只检查一部分 Bug Finder 缺陷和编码规则。</entry>
    <entry key="OptionNameFloatRoundingMode">浮点数舍入模式</entry>
    <entry key="OptionHelpFloatRoundingMode">指定在确定浮点运算结果时要考虑的舍入模式。&lt;BR&gt; &lt;ul&gt; &lt;li&gt;to-nearest: 考虑就近舍入模式，并且不使用扩展精度。&lt;li&gt;all: 考虑所有舍入模式并使用扩展精度。&lt;/ul&gt;</entry>
    <entry key="OptionNameFunctionsCalledAfterLoop">终止函数</entry>
    <entry key="OptionHelpFunctionsCalledAfterLoop">指定由生成的 main 函数在连续循环后调用的函数。</entry>
    <entry key="OptionNameFunctionsCalledBeforeMain">初始化函数</entry>
    <entry key="OptionHelpFunctionsCalledBeforeMain">指定初始化函数。&lt;br&gt;由自动生成的 main 函数在其他函数之前调用的函数。</entry>
    <entry key="OptionNameFunctionsToStub">要插桩的函数</entry>
    <entry key="OptionHelpFunctionsToStub">指定 Polyspace 要插桩的函数。</entry>
    <entry key="OptionNameGenerateResultsFor">为源代码和以下项生成结果</entry>
    <entry key="OptionHelpGenerateResultsFor">指定需要分析结果的头文件。&lt;ul&gt;&lt;li&gt;source-headers: 与源文件位于同一文件夹中的头文件 &lt;/li&gt; &lt;li&gt;all-headers: 与源文件位于同一文件夹中的头文件、位于包含文件夹中的头文件 &lt;/li&gt; &lt;li&gt;custom: 指定的文件，或指定文件夹中的文件 &lt;/li&gt;&lt;/ul&gt; 此选项仅适用于编码规则、代码度量和 Polyspace Bug Finder 缺陷。</entry>
    <entry key="OptionNameIgnoreAssemblyCode">忽略汇编代码</entry>
    <entry key="OptionHelpIgnoreAssemblyCode">忽略所有汇编代码。&lt;br&gt;除非您打开此选项，否则软件假定汇编代码可以修改 C/C++ 变量。</entry>
    <entry key="OptionNameInitOnlyMode">仅验证初始化代码</entry>
    <entry key="OptionHelpInitOnlyMode">检查代码的初始化部分是否有运行时错误和其他问题。&lt;BR&gt;验证整个应用程序时，初始化代码从 'main' 开始，到 pragma 'polyspace_end_of_init' 结束。&lt;BR&gt;验证模块或库时，初始化代码是一组初始化函数的序列。</entry>
    <entry key="OptionNameInline">内联</entry>
    <entry key="OptionHelpInline">针对列出的每个过程，为每次调用创建一份过程克隆。&lt;br&gt;此内联减少了给定过程中的别名数量，并且可能提高精度。&lt;br&gt;&lt;br&gt;&lt;b&gt;警告:&lt;/b&gt; 大规模使用此选项可能会导致过多的代码重复，并导致规模问题。</entry>
    <entry key="OptionNameInternalOther">InternalOther</entry>
    <entry key="OptionHelpInternalOther"/>
    <entry key="OptionNameInterrupts">中断</entry>
    <entry key="OptionHelpInterrupts">指定系统中的中断列表。中断是无法抢占的周期任务。</entry>
    <entry key="OptionNameKLimiting">结构体内部的验证深度</entry>
    <entry key="OptionHelpKLimiting">限制指针分析要区分的结构体中的字段数，即指定结构体内部的分析深度。&lt;br&gt;&lt;br&gt;警告: 应使用大于或等于 2 的值。否则，验证可能需要更长时间或不太准确。</entry>
    <entry key="OptionNameLibrary">使用的库</entry>
    <entry key="OptionHelpLibrary">指定在程序中使用的库。&lt;BR&gt;分析将使用智能桩件来代替这些库的函数，而非使用通用桩件(并且不尝试检查函数实现)。&lt;BR&gt;使用此选项可以在不损失精度的情况下加快分析速度，并基于库函数调用触发特定于库的检查。</entry>
    <entry key="OptionNameMain">主入口函数</entry>
    <entry key="OptionHelpMain">使用现有的 'main' 函数作为验证的起点。</entry>
    <entry key="OptionNameMainGenerator">验证模块或库</entry>
    <entry key="OptionHelpMainGenerator">自动生成一个 'main' 函数。</entry>
    <entry key="OptionNameMainGeneratorMBD">验证模型的生成代码</entry>
    <entry key="OptionHelpMainGeneratorMBD">指定所分析的代码是从模型中生成的。当您从 Simulink 启动 Polyspace 验证时，此选项会自动设置。</entry>
    <entry key="OptionNameMainGeneratorCalls">要调用的函数</entry>
    <entry key="OptionHelpMainGeneratorCalls">指定被视为公共函数的函数。&lt;BR&gt;由自动生成的 main 函数按随机顺序调用的函数。</entry>
    <entry key="OptionNameFunctionsCalledInLoop">单步函数</entry>
    <entry key="OptionHelpFunctionsCalledInLoop">指定在循环中调用的一组函数:&lt;BR&gt;&lt;li&gt;none - 不调用子程序时使用此选项。&lt;BR&gt;&lt;li&gt;unused - 生成的 main 函数仅调用文件中未调用的函数。&lt;BR&gt;&lt;li&gt;all - 生成的 main 函数调用所有函数。例如，如果函数 'f' 被 'g' 调用，则生成的 main 函数也会使用每个参数的随机值调用 'f'。&lt;BR&gt;&lt;li&gt;custom - 指定由生成的 main 函数调用的函数列表。</entry>
    <entry key="OptionNameMainGeneratorWritesVariables">要初始化的变量</entry>
    <entry key="OptionHelpMainGeneratorWritesVariables">指定生成的 main 函数将如何初始化全局变量:&lt;BR&gt;&lt;li&gt;uninit - main 函数生成器会向未初始化的全局变量写入随机值&lt;BR&gt;&lt;li&gt;none - main 函数不会写入任何全局变量&lt;BR&gt;&lt;li&gt;public - 除静态和常量变量之外，每个变量都被赋予一个 "随机" 值，表示可能值的完整范围&lt;BR&gt;&lt;li&gt;all - 每个变量都被赋予一个 "随机" 值，表示可能值的完整范围&lt;BR&gt;&lt;li&gt;custom - 仅列表中存在的变量被分配一个 "随机" 值，表示可能值的完整范围</entry>
    <entry key="OptionNameVariablesWrittenBeforeLoop">参数</entry>
    <entry key="OptionHelpVariablesWrittenBeforeLoop">指定被视为循环系统参数的一组变量。&lt;BR&gt;由生成的 main 函数在连续循环之前写入的变量。</entry>
    <entry key="OptionNameMisra3AgcMode">使用符合 MISRA C:2012 的生成代码要求</entry>
    <entry key="OptionHelpMisra3AgcMode">在自动代码生成的上下文中检查 MISRA C:2012 合规性。</entry>
    <entry key="OptionNameMisraC2023AgcMode">使用符合 MISRA C:2023 的生成代码要求</entry>
    <entry key="OptionHelpMisraC2023AgcMode">在自动代码生成的上下文中检查 MISRA C:2023 合规性。</entry>
    <entry key="OptionNameModulesPrecision">特定精度</entry>
    <entry key="OptionHelpModulesPrecision">指定要以特定精度来分析的编译单元列表，该精度与所指定 "精度等级" (-O)不同。&lt;BR&gt;&lt;BR&gt;默认情况下，所有编译单元都以相同的精度进行验证。&lt;BR&gt;编译单元均为 .c 文件。</entry>
    <entry key="OptionNameNoCodeMetrics">no-code-metrics</entry>
    <entry key="OptionHelpNoCodeMetrics"/>
    <entry key="OptionNameNoConstructorsInitCheck">跳过成员初始化检查</entry>
    <entry key="OptionHelpNoConstructorsInitCheck">指示生成的 main 函数不要检查所有类字段是否都已初始化。</entry>
    <entry key="OptionNameNoDefInitGlob">忽略全局变量的默认初始化</entry>
    <entry key="OptionHelpNoDefInitGlob">指定全局变量默认视为未初始化。&lt;BR&gt; - 'on': Polyspace 忽略全局变量的隐式初始化。&lt;BR&gt;如果在写入全局变量之前读取全局变量，则会产生未初始化变量错误。&lt;BR&gt; - 'off': Polyspace 根据 ANSI C (ISO C++) 标准将全局变量视为已初始化。&lt;BR&gt;对于浮点数，默认初始化值为 0.0，对于 int 和 char，默认初始化值为 0。</entry>
    <entry key="OptionNameNoExtern_C">忽略链接错误</entry>
    <entry key="OptionHelpNoExtern_C">同时支持 C 链接和 C++ 链接。</entry>
    <entry key="OptionNameOsekMultitasking">OIL 文件选择</entry>
    <entry key="OptionHelpOsekMultitasking">指定包含 OSEK 多任务配置描述的 OIL 文件列表。&lt;ul&gt;&lt;li&gt;自动: Polyspace 将在包含源文件或头文件的文件夹中查找 OIL 文件。&lt;/li&gt; &lt;li&gt;自定义: 指定 OIL 文件或包含 OIL 文件的文件夹。Polyspace 将在给定文件夹和子文件夹中查找 OIL 文件。&lt;/li&gt;&lt;/ul&gt;</entry>
    <entry key="OptionNameOtherPolyspaceOptions">其他</entry>
    <entry key="OptionHelpOtherPolyspaceOptions">为静态分析指定附加命令行标志。</entry>
    <entry key="OptionNamePathSensitivityDelta">提高过程间分析的精度</entry>
    <entry key="OptionHelpPathSensitivityDelta">提高过程间分析的精度。&lt;br&gt;&lt;br&gt;警告: 应该使用小于或等于 3 的值。&lt;br&gt;否则，验证可能需要更长时间。</entry>
    <entry key="OptionNamePermissiveFunctionPointer">宽松函数指针调用</entry>
    <entry key="OptionHelpPermissiveFunctionPointer">默认情况下，只有当函数指针和函数类型完全相同时，Polyspace 才允许函数指针调用函数。&lt;br&gt;例如，假设有一个以下类型的函数:&lt;br&gt;&lt;i&gt;int f(int*)&lt;/i&gt;&lt;br&gt;则该函数无法由以下类型的函数调用:&lt;br&gt;&lt;i&gt;int fptr(void*)&lt;/i&gt;&lt;br&gt;如果设置了此选项，则 Polyspace 允许此类调用。&lt;br&gt;对于大量使用函数指针的应用程序，此选项可能会导致性能显著下降和更多&lt;br&gt;橙色检查，因为 Polyspace 必须考虑更多执行路径。</entry>
    <entry key="OptionNamePostAnalysisCommand">代码验证结束后要应用的命令/脚本</entry>
    <entry key="OptionHelpPostAnalysisCommand">指定在代码验证完成后必须运行的命令或文件。</entry>
    <entry key="OptionNamePostPreprocessingCommand">要应用于预处理文件的命令/脚本</entry>
    <entry key="OptionHelpPostPreprocessingCommand">在预处理阶段之后，对每个源文件运行给定的命令。&lt;BR&gt;&lt;BR&gt;指定命令文件的绝对路径和文件名非常重要。&lt;BR&gt;此命令应设计为从其标准输入读取，并将其结果输出到标准输出。</entry>
    <entry key="OptionNamePreAnalysisCommand">pre-analysis-command</entry>
    <entry key="OptionHelpPreAnalysisCommand"/>
    <entry key="OptionNamePrecisionLevel">精度等级</entry>
    <entry key="OptionHelpPrecisionLevel">指定 Code Prover 分析的精度级别。精度越高，验证时间越长，但橙色检查越少。</entry>
    <entry key="OptionNameReportOutputFormat">输出格式</entry>
    <entry key="OptionHelpReportOutputFormat">指定报告的输出格式。</entry>
    <entry key="OptionNameReportTemplateBugFinder">报告模板(Bug Finder)</entry>
    <entry key="OptionHelpReportTemplateBugFinder">指定用于从 Bug Finder 分析结果生成报告的模板。</entry>
    <entry key="OptionNameReportTemplateCodeProver">报告模板(Code Prover)</entry>
    <entry key="OptionHelpReportTemplateCodeProver">指定用于从 Code Prover 分析结果生成报告的模板。</entry>
    <entry key="OptionNameRoutineInterrupts">禁用所有中断</entry>
    <entry key="OptionHelpRoutineInterrupts">输入为 Bug Finder 分析启用和禁用中断的例程。&lt;BR&gt;&lt;ul&gt; &lt;li&gt;调用禁用例程可防止某一任务被其他任务和中断抢占。&lt;li&gt;调用启用例程可重新允许其他任务和中断抢占某一任务(如果之前被禁用)。&lt;/ul&gt;</entry>
    <entry key="OptionNameSharedVariablesMode">仅显示全局变量的共享和使用情况</entry>
    <entry key="OptionHelpSharedVariablesMode">运行更快的分析以确定全局变量的共享和使用情况。&lt;BR&gt;&lt;BR&gt;分析结果包含:&lt;BR&gt;&lt;ul&gt;&lt;li&gt;全局变量(已共享、未共享、已使用、未使用)&lt;li&gt;编码规则(如启用)&lt;li&gt;代码度量(如启用)&lt;/ul&gt;&lt;BR&gt;"变量访问" 视图还显示对所有全局变量的读取和写入操作。</entry>
    <entry key="OptionNameSignedIntegerOverflows">有符号整数的溢出模式</entry>
    <entry key="OptionHelpSignedIntegerOverflows">指定当有符号整数计算产生超出范围(由数据类型确定)的值时 Code Prover 的行为:&lt;ul&gt;&lt;li&gt;allow - Code Prover 不会标记溢出。溢出结果将被绕回。&lt;br&gt;例如，MAX_INT + 1 的结果将绕回到 MIN_INT。&lt;br&gt;&lt;li&gt;forbid(默认) - Code Prover 会标记溢出。导致溢出的值不会传播到后续操作。&lt;br&gt;此行为符合 ANSI C (ISO C++)标准。&lt;br&gt;&lt;li&gt;warn-with-wrap-around - Code Prover 会标记溢出。溢出结果将被绕回。</entry>
    <entry key="OptionNameSizeInBytes">允许为结构体分配不足量的内存</entry>
    <entry key="OptionHelpSizeInBytes">允许使用 &lt;i&gt;malloc&lt;/i&gt; 或 &lt;i&gt;cast&lt;/i&gt; 语句分配不足量的内存。</entry>
    <entry key="OptionNameImpactAnalysis">启用影响分析</entry>
    <entry key="OptionHelpImpactAnalysis">检查指定为源点和汇点的程序元素之间是否存在影响。</entry>
    <entry key="OptionNameImpactSpecifications">指定源点和汇点</entry>
    <entry key="OptionHelpImpactSpecifications">指定将项目元素标识为影响分析的源点和汇点的 XML 文件。</entry>
    <entry key="OptionNameImpactAnalysisOnly">仅显示影响分析结果</entry>
    <entry key="OptionHelpImpactAnalysisOnly">跳过常规的 Code Prover 运行时错误检查，只执行影响分析。</entry>
    <entry key="OptionNameStackUsage">计算堆栈使用情况</entry>
    <entry key="OptionHelpStackUsage">计算和显示估计的堆栈使用情况</entry>
    <entry key="OptionNameStopIfCompileError">如果文件无法编译，则停止分析</entry>
    <entry key="OptionHelpStopIfCompileError">使用此选项以便解决所有编译错误，并确保分析所有文件。&lt;BR&gt;默认情况下，系统不会分析具有编译错误的文件。系统会对这些文件中的函数插桩，以便执行其余分析。</entry>
    <entry key="OptionNameStubEmbeddedCoderLookupTableFunctions">为 Embedded Coder 查找表生成桩件</entry>
    <entry key="OptionHelpStubEmbeddedCoderLookupTableFunctions">选中此选项可自动生成 Embedded Coder 查找表的桩件</entry>
    <entry key="OptionNameStubbedPointersAreUnsafe">将环境指针视为不安全</entry>
    <entry key="OptionHelpStubbedPointersAreUnsafe">指定除非另有约束，否则环境指针可以为空。&lt;br&gt;环境指针可以是以下各项之一:&lt;br&gt;&lt;ul&gt;&lt;li&gt;全局或外部变量，&lt;/li&gt;&lt;li&gt;已插桩函数的返回值，&lt;/li&gt;&lt;li&gt;生成调用的用户定义函数的参数。&lt;/li&gt;&lt;/ul&gt;&lt;br&gt;除非使用此选项，否则默认情况下环境指针被视为安全，而不是空。&lt;br&gt;</entry>
    <entry key="OptionNameSystemInputsFrom">考虑这些函数的输入</entry>
    <entry key="OptionHelpSystemInputsFrom">指定分析将考虑其所有可能输入值的函数。&lt;ul&gt;&lt;li&gt;auto: main 函数和任务(如有)，或者至少具有一个被调用方的未调用函数(当 main 函数不存在时)&lt;/li&gt; &lt;li&gt;uncalled: 所有未调用的函数&lt;/li&gt; &lt;li&gt;all: 所有函数&lt;/li&gt; &lt;li&gt;custom: 用户指定的函数&lt;/li&gt;&lt;/ul&gt;</entry>
    <entry key="OptionNameTemporalExclusions">时序互斥任务</entry>
    <entry key="OptionHelpTemporalExclusions">指定无法同时执行的任务。</entry>
    <entry key="OptionNameTimeout">验证时限</entry>
    <entry key="OptionHelpTimeout">如果验证未在指定时间限制 X[.Y] 内完成，则停止验证，其中 X 表示小时，Y (可选)表示小时的小数。&lt;br&gt;&lt;br&gt;例如:&lt;ul&gt;&lt;li&gt;timeout 5.75 指定时限为 5 小时 45 分钟。&lt;br&gt;&lt;li&gt;timeout 3.5 指定时限为 3 小时 30 分钟。&lt;/ul&gt;如果验证未在指定时限内完成，则认为验证失败。</entry>
    <entry key="OptionNameVerificationLevel">验证等级</entry>
    <entry key="OptionHelpVerificationLevel">指定验证等级。验证等级越高，选择度越高。&lt;br&gt;验证等级越高，验证时间越长。</entry>
    <entry key="OptionNameUncalledFunctionChecks">检测未调用的函数</entry>
    <entry key="OptionHelpUncalledFunctionChecks">检测在运行时未从主入口函数或其他入口函数直接或间接调用的函数。&lt;br&gt; &lt;li&gt;none - 不检测未调用的函数。&lt;br&gt;&lt;li&gt; never-called - 检测已定义但从未调用的函数。&lt;br&gt;如果函数 func 被标识为从未被调用，则仅从 func 调用的所有函数也被标识为从未被调用。&lt;br&gt;&lt;li&gt; called-from-unreachable - 检测从代码中不可达的部分定义和调用的函数。&lt;br&gt;如果函数 func 被标识为从不可达函数调用，则仅从 func 调用的所有函数也被标识为从不可达函数调用。&lt;br&gt;&lt;li&gt; all - 检测所有未调用的函数</entry>
    <entry key="OptionNameUnitByUnit">单独验证文件</entry>
    <entry key="OptionHelpUnitByUnit">为工程中的每个源文件创建一个单独的验证作业。&lt;br&gt;编译每个文件，然后分别验证。</entry>
    <entry key="OptionNameUnitByUnitCommonSource">共同源文件</entry>
    <entry key="OptionHelpUnitByUnitCommonSource">指定每次验证文件时要包含的一系列文件。&lt;br&gt;此列表中未包含的函数将会插桩。</entry>
    <entry key="OptionNameUnsignedIntegerOverflows">无符号整数的溢出模式</entry>
    <entry key="OptionHelpUnsignedIntegerOverflows">指定当无符号整数计算产生超出范围(由数据类型确定的范围)的值时 Code Prover 的行为:&lt;ul&gt;&lt;li&gt;allow(默认) - Code Prover 不会标记溢出。溢出结果将被绕回。&lt;br&gt;例如，MAX_INT + 1 的结果将绕回到 MIN_INT。&lt;br&gt;此行为符合 ANSI C (ISO C++)标准。&lt;br&gt;&lt;li&gt;forbid - Code Prover 会标记溢出。导致溢出的值不会传播到后续操作。&lt;br&gt;&lt;li&gt;warn-with-wrap-around - Code Prover 会标记溢出。溢出结果将被绕回。</entry>
    <entry key="OptionNameVariablesWrittenInLoop">输入</entry>
    <entry key="OptionHelpVariablesWrittenInLoop">指定被视为循环系统输入的一组变量。&lt;BR&gt;由生成的 main 函数在连续循环的每次迭代中重置的变量。</entry>
    <entry key="OptionNameArithmeticSignedIntegerRightShift">指定编译器以算术移位方式右移有符号整数(保留符号位)。</entry>
    <entry key="OptionHelpArithmeticSignedIntegerRightShift">指定编译器以算术移位方式实现有符号整数右移(保留符号位)。大多数编译器都这样做。</entry>
    <entry key="OptionNameBoardName">目标板名称(测试)</entry>
    <entry key="OptionHelpBoardName">指定要对其执行测试的硬件板。该选项仅适用于测试。</entry>
    <entry key="OptionNameIntegerDivisionRounding">向下舍入负的整数相除结果</entry>
    <entry key="OptionHelpIntegerDivisionRounding">指定编译器将两个整数相除所得的负商向下舍入(使其朝负无穷大方向舍入)。例如，-5/3 舍入到 -2。</entry>
    <entry key="OptionNameEnablePortableWordSizes">启用可移植字长</entry>
    <entry key="OptionHelpEnablePortableWordSizes">允许在主机上编译代码，同时保留代码要在其上运行的目标处理器的字长。</entry>
    <entry key="OptionNameNoUliterals">指定在代码中定义 char16/32_t 类型</entry>
    <entry key="OptionHelpNoUliterals">指定编译器不将 char16_t 和 char32_t 类型定义为内置类型，而是通过显式 typedef 定义它们。如果遇到 char16_t 和 char32_t 类型的类型重新声明错误，请使用此选项。该选项阻止这些类型的 Polyspace 定义。</entry>
    <entry key="OptionNamePackAlignmentValue">包对齐值</entry>
    <entry key="OptionHelpPackAlignmentValue">为结构体、联合和其他聚合类型指定包对齐值(以字节为单位)。</entry>
    <entry key="OptionNameExternalSymbols">外部符号</entry>
    <entry key="OptionHelpExternalSymbols">为不在代码中的符号(变量、函数等)提供声明。此选项仅适用于测试。</entry>
    <entry key="OptionNameStaticAnalysisCompilerName">编译工具链(静态分析)</entry>
    <entry key="OptionHelpStaticAnalysisCompilerName">指定用于编译源代码的编译器。该选项仅适用于静态分析。要指定用于测试的编译工具链，请指定选项 '编译工具链(测试)'。</entry>
    <entry key="OptionNameSfrTypes">SFR 类型和大小</entry>
    <entry key="OptionHelpSfrTypes">指定 SFR (特殊函数寄存器)类型以及位数(8、16 或 32)。</entry>
    <entry key="OptionNameToolchainName">编译工具链(测试)</entry>
    <entry key="OptionHelpToolchainName">指定用于编译源代码的编译器。该选项仅适用于测试。要为静态分析指定编译工具链，请指定选项 '编译工具链(静态分析)'。</entry>
    <entry key="OptionNameEnableCustomOptions">启用工具链自定义</entry>
    <entry key="OptionHelpEnableCustomOptions">覆盖默认工具链设定。</entry>
    <entry key="OptionNameToolchainOptions">工具链选项</entry>
    <entry key="OptionHelpToolchainOptions">指定工具链选项，如编译器、链接器等。</entry>
    <entry key="OptionNameCStandard">C 标准版本</entry>
    <entry key="OptionHelpCStandard">指定编译中使用的 C 标准版本。</entry>
    <entry key="OptionNameCppStandard">C++ 标准版本</entry>
    <entry key="OptionHelpCppStandard">指定编译中使用的 C++ 标准版本。</entry>
    <entry key="OptionNameDefines">预处理器定义</entry>
    <entry key="OptionHelpDefines">以 name=value 形式指定宏的定义。例如，int32_t=int 在预处理后的代码中用 int 替换所有出现的 int32_t。如果将该值留空，则将从预处理后的代码中删除宏。您也可以只输入名称(没有 =value 部分)。在这种情况下，宏替换为 1。</entry>
    <entry key="OptionNameImplicitCompilerDefinesC">隐式 C 编译器定义</entry>
    <entry key="OptionHelpImplicitCompilerDefinesC">来自编译器的预处理器定义。如果从编译命令创建 Polyspace 工程，此选项会自动设置。</entry>
    <entry key="OptionNameImplicitCompilerDefinesCpp">隐式 C++ 编译器定义</entry>
    <entry key="OptionHelpImplicitCompilerDefinesCpp">来自编译器的预处理器定义。如果从编译命令创建 Polyspace 工程，此选项会自动设置。</entry>
    <entry key="OptionNameImplicitCompilerDefinesAsm">隐式 Asm 编译器定义</entry>
    <entry key="OptionHelpImplicitCompilerDefinesAsm">来自编译器的预处理器定义。如果从编译命令创建 Polyspace 工程，此选项会自动设置。</entry>
    <entry key="OptionNameImplicitCompilerIncludePathsC">隐式 C 编译器包含路径</entry>
    <entry key="OptionHelpImplicitCompilerIncludePathsC">来自编译器的包含路径。如果从编译命令创建 Polyspace 工程，此选项会自动设置。</entry>
    <entry key="OptionNameImplicitCompilerIncludePathsCpp">隐式 C++ 编译器包含路径</entry>
    <entry key="OptionHelpImplicitCompilerIncludePathsCpp">来自编译器的包含路径。如果从编译命令创建 Polyspace 工程，此选项会自动设置。</entry>
    <entry key="OptionNameImplicitCompilerIncludePathsAsm">隐式 Asm 编译器包含路径</entry>
    <entry key="OptionHelpImplicitCompilerIncludePathsAsm">来自编译器的包含路径。如果从编译命令创建 Polyspace 工程，此选项会自动设置。</entry>
    <entry key="OptionNameIncludePaths">包含路径</entry>
    <entry key="OptionHelpIncludePaths">指定包含文件所在文件夹的路径。Polyspace 在这些文件夹中查找源文件中通过 #include 语句包含的头文件。</entry>
    <entry key="OptionNameExternalIncludePaths">包括外部测试的路径</entry>
    <entry key="OptionHelpExternalIncludePaths">指定包含外部测试的文件所在文件夹的路径。Polyspace 在这些文件夹中查找外部测试中通过 #include 语句包含的头文件。</entry>
    <entry key="OptionNameAdditionalIncludePaths">其他包含路径</entry>
    <entry key="OptionHelpAdditionalIncludePaths">指定其他包含文件所在文件夹的路径。除了在配置的 "工程" 选项卡中指定的包含文件外，Polyspace 还包含这些文件。</entry>
    <entry key="OptionNamePreIncludes">强制包含文件</entry>
    <entry key="OptionHelpPreIncludes">指定每个源文件必须通过 #include 包含的文件。这些 #include 是在预处理之前添加的，但不会修改原始源代码。请使用这些文件来定义源代码中未定义的类型等。此选项仅适用于静态分析。</entry>
    <entry key="OptionNameUndefines">已禁用的预处理器定义</entry>
    <entry key="OptionHelpUndefines">指定必须被视为未定义的宏。</entry>
    <entry key="OptionNameCoverageCompactMode">为覆盖率计算启用精简模式</entry>
    <entry key="OptionHelpCoverageCompactMode">使用此选项可以减少运行测试可执行文件所需的内存量。</entry>
    <entry key="OptionNameCoverageMetricLevel">覆盖率度量</entry>
    <entry key="OptionHelpCoverageMetricLevel">指定覆盖率度量计算的等级: &lt;BR&gt;&lt;li&gt;语句 &lt;li&gt;决策 &lt;li&gt;条件 &lt;li&gt;MC/DC。&lt;BR&gt;每个等级都包括前一等级的度量。</entry>
    <entry key="OptionNameRelationalBoundary">启用关系边界覆盖率</entry>
    <entry key="OptionHelpRelationalBoundary">指定是否必须为关系边界覆盖率对源代码进行插桩。</entry>
    <entry key="OptionNameRelationalBoundaryAbsTol">绝对容差</entry>
    <entry key="OptionHelpRelationalBoundaryAbsTol">指定关系边界覆盖率的绝对容差。</entry>
    <entry key="OptionNameRelationalBoundaryRelTol">相对容差</entry>
    <entry key="OptionHelpRelationalBoundaryRelTol">指定关系边界覆盖率的相对容差。</entry>
    <entry key="OptionNameExcludeFor">ExcludeFor</entry>
    <entry key="OptionHelpExcludeFor"/>
    <entry key="OptionNameLibraries">库</entry>
    <entry key="OptionHelpLibraries">为编译测试指定预编译库。</entry>
    <entry key="OptionNameExternalLibraries">用于外部测试的库</entry>
    <entry key="OptionHelpExternalLibraries">为编译外部测试指定预编译库。</entry>
    <entry key="OptionNameLibraryPaths">库路径</entry>
    <entry key="OptionHelpLibraryPaths">指定包含用于编译测试的预编译库的文件夹。</entry>
    <entry key="OptionNameExternalLibraryPaths">外部测试的库路径</entry>
    <entry key="OptionHelpExternalLibraryPaths">指定包含用于编译外部测试的预编译库的文件夹。</entry>
    <entry key="OptionNamePath">路径</entry>
    <entry key="OptionHelpPath"/>
    <entry key="OptionNameAlignment">对齐</entry>
    <entry key="OptionHelpAlignment">指定聚合类型(如结构体)成员的最大对齐值(以位为单位)。例如，如果对齐值为 8 位，则即使最小数据类型的成员也会对齐，并且可以在没有成员和尾部填充的情况下存储该结构体。</entry>
    <entry key="OptionNameAtomicFloatSize">AtomicFloatSize</entry>
    <entry key="OptionHelpAtomicFloatSize"/>
    <entry key="OptionNameAtomicIntegerSize">AtomicIntegerSize</entry>
    <entry key="OptionHelpAtomicIntegerSize"/>
    <entry key="OptionNameCharBitsSize">char 的大小</entry>
    <entry key="OptionHelpCharBitsSize">指定 'char' 数据类型的大小(以位为单位)。</entry>
    <entry key="OptionNameDoubleBitsSize">double 的大小</entry>
    <entry key="OptionHelpDoubleBitsSize">指定 'double' 数据类型的大小(以位为单位)。</entry>
    <entry key="OptionNameEndianess">字节顺序</entry>
    <entry key="OptionHelpEndianess">指定字节顺序(端序)是 Little Endian (最低有效位字节优先)还是 Big Endian (最高有效位字节优先)。</entry>
    <entry key="OptionNameEnumTypeDefinition">enum 的基础类型</entry>
    <entry key="OptionHelpEnumTypeDefinition">指定如何确定枚举的基础类型。</entry>
    <entry key="OptionNameFloatBitsSize">float 的大小</entry>
    <entry key="OptionHelpFloatBitsSize">指定 'float' 数据类型的大小(以位为单位)。</entry>
    <entry key="OptionNameHalfBitsSize">HalfBitsSize</entry>
    <entry key="OptionHelpHalfBitsSize"/>
    <entry key="OptionNameIntBitsSize">int 的大小</entry>
    <entry key="OptionHelpIntBitsSize">指定 'int' 数据类型的大小(以位为单位)。</entry>
    <entry key="OptionNameIsHalfSupported">IsHalfSupported</entry>
    <entry key="OptionHelpIsHalfSupported"/>
    <entry key="OptionNameIsLongLongSupported">支持 long long</entry>
    <entry key="OptionHelpIsLongLongSupported">指定您的编译器是否支持数据类型 'long long'。大多数 C99 编译器支持这种数据类型。</entry>
    <entry key="OptionNameLongBitsSize">long 的大小</entry>
    <entry key="OptionHelpLongBitsSize">指定 'long' 数据类型的大小(以位为单位)。</entry>
    <entry key="OptionNameLongDoubleBitsSize">long double 的大小</entry>
    <entry key="OptionHelpLongDoubleBitsSize">指定 'long double' 数据类型的大小(以位为单位)。</entry>
    <entry key="OptionNameLongLongBitsSize">long long 的大小</entry>
    <entry key="OptionHelpLongLongBitsSize">指定 'long long' 数据类型的大小(以位为单位)。</entry>
    <entry key="OptionNameManufacturer">处理器制造商</entry>
    <entry key="OptionNameConfigMode">配置模式</entry>
    <entry key="OptionHelpConfigMode">显示配置类型(只读)。</entry>
    <entry key="OptionHelpManufacturer">处理器制造商</entry>
    <entry key="OptionNameProcessorName">处理器名称</entry>
    <entry key="OptionHelpProcessorName">处理器名称</entry>
    <entry key="OptionNamePointerBitsSize">指针的大小</entry>
    <entry key="OptionHelpPointerBitsSize">指定指针数据类型的大小(以位为单位)。</entry>
    <entry key="OptionNamePtrDiffT">ptrdiff_t 的类型</entry>
    <entry key="OptionHelpPtrDiffT">指定数据类型 'ptrdiff_t' 的基础类型。</entry>
    <entry key="OptionNameShortBitsSize">short 的大小</entry>
    <entry key="OptionHelpShortBitsSize">指定 'short' 数据类型的大小(以位为单位)。</entry>
    <entry key="OptionNameSignedChar">纯字符有符号</entry>
    <entry key="OptionHelpSignedChar">指定 'char' 数据类型是有符号的。</entry>
    <entry key="OptionNameSizeT">size_t 的类型</entry>
    <entry key="OptionHelpSizeT">指定数据类型 'size_t' 的基础类型。</entry>
    <entry key="OptionNameSpecificOptions">SpecificOptions</entry>
    <entry key="OptionHelpSpecificOptions"/>
    <entry key="OptionNameStructureMinAlignment">结构体的最小对齐</entry>
    <entry key="OptionHelpStructureMinAlignment">为结构体或联合类型的变量指定最小对齐方式(以字节为单位)。</entry>
    <entry key="OptionNameWCharT">wchar_t 的类型</entry>
    <entry key="OptionHelpWCharT">指定数据类型 'wchar_t' 的基础类型。</entry>
    <entry key="OptionNameWordSize">原生字长</entry>
    <entry key="OptionHelpWordSize">指定测试硬件的处理器一次可以处理的位数。</entry>
    <entry key="OptionNameExtraAsmFlags">额外的汇编器标志</entry>
    <entry key="OptionHelpExtraAsmFlags">指定用于编译汇编代码的标志。静态分析期间不使用这些标志。</entry>
    <entry key="OptionNameExtraCFlags">额外的 C 标志</entry>
    <entry key="OptionHelpExtraCFlags">指定编译工程所需的 C 编译标志。使用此选项输入您无法通过其他选项输入的编译器标志。静态分析期间不使用这些标志。</entry>
    <entry key="OptionNameExtraCppFlags">额外的 C++ 标志</entry>
    <entry key="OptionHelpExtraCppFlags">指定编译工程所需的 C++ 编译标志。使用此选项输入您无法通过其他选项输入的编译器标志。静态分析期间不使用这些标志。</entry>
    <entry key="OptionNameExtraLinkFlags">用于链接的额外标志</entry>
    <entry key="OptionHelpExtraLinkFlags">指定编译工程所需的链接器标志。静态分析期间不使用这些标志。</entry>
    <entry key="OptionNameLanguage">源代码语言</entry>
    <entry key="OptionHelpLanguage">指定工程的源代码语言:&lt;BR&gt;&lt;li&gt; C 表示 C 源代码&lt;li&gt; C++ 表示 C++ 源代码&lt;li&gt; C-CPP 表示混合源代码</entry>
    <entry key="OptionNameTarget">目标</entry>
    <entry key="OptionHelpTarget"/>
    <entry key="OptionNameFileSpecificLanguage">源代码语言</entry>
    <entry key="OptionHelpFileSpecificLanguage">为所选文件指定源代码语言</entry>
    <entry key="OptionNameFileSpecificExtraFlags">额外标志</entry>
    <entry key="OptionHelpFileSpecificExtraFlags">为所选文件指定额外标志</entry>
    <entry key="OptionNameFileSpecificImplicitCompilerDefines">隐式编译器定义</entry>
    <entry key="OptionHelpFileSpecificImplicitCompilerDefines">来自编译器的选定文件的预处理器定义。如果从编译命令创建 Polyspace 工程，此选项会自动设置。</entry>
    <entry key="OptionNameFileSpecificImplicitCompilerIncludePaths">隐式编译器包含路径</entry>
    <entry key="OptionHelpFileSpecificImplicitCompilerIncludePaths">来自编译器的选定文件的包含路径。如果从编译命令创建 Polyspace 工程，此选项会自动设置。</entry>
    <entry key="OptionNameOverrideOp">覆盖</entry>
    <entry key="OptionHelpOverrideOp"/>
    <entry key="OptionNameCodegenDir">用于存储生成的测试代码的文件夹</entry>
    <entry key="OptionHelpCodegenDir">指定文件夹来存储从以图形方式创建的测试所生成的代码。</entry>
    <entry key="OptionNameProfilingSelection">探查的类型</entry>
    <entry key="OptionHelpProfilingSelection">指定是需要进行代码覆盖率探查还是代码执行探查。根据您的选择，将对源代码进行插桩以计算代码覆盖率或执行时间。</entry>
    <entry key="OptionNameDirToIgnore">要忽略的文件夹</entry>
    <entry key="OptionHelpDirToIgnore">指定要从源代码插桩中排除的文件夹。</entry>
    <entry key="OptionNameDirToInstrument">要探查的文件夹</entry>
    <entry key="OptionHelpDirToInstrument">指定包含要为代码探查进行插桩的源代码的文件夹。&lt;BR&gt;默认情况下，对所有源代码都进行插桩。使用此选项减少要插桩的源代码的列表。</entry>
    <entry key="OptionNameProfilingExtraOptions">附加选项</entry>
    <entry key="OptionHelpProfilingExtraOptions">为代码探查指定附加选项。</entry>
    <entry key="OptionNameFunCallToIgnore">要忽略的函数调用</entry>
    <entry key="OptionHelpFunCallToIgnore">指定要从源代码插桩中排除的函数调用。</entry>
    <entry key="OptionNameFileToIgnore">要忽略的文件</entry>
    <entry key="OptionHelpFileToIgnore">指定要从源代码插桩中排除的文件。</entry>
    <entry key="OptionNameFunToIgnore">要忽略的函数</entry>
    <entry key="OptionHelpFunToIgnore">指定要从源代码插桩中排除的函数。</entry>
    <entry key="OptionNameCommandOptions">命令选项</entry>
    <entry key="OptionHelpCommandOptions">要指定给测试可执行文件的命令选项。</entry>
    <entry key="OptionNameExtraCommandOptions">其他执行选项</entry>
    <entry key="OptionHelpExtraCommandOptions">要为测试可执行文件指定的附加选项。</entry>
    <entry key="OptionNameFiltersSeparator">过滤器分隔符</entry>
    <entry key="OptionHelpFiltersSeparator">在串联测试过滤器时用作分隔符的字符串。</entry>
    <entry key="OptionNameBuildConfigProcessor">处理器</entry>
    <entry key="OptionHelpBuildConfigProcessor">为当前编译配置选择处理器</entry>
    <entry key="ManageBoards">管理板</entry>
    <entry key="AvailableBoards">可用板</entry>
    <entry key="RegisterTargetPackage">注册目标</entry>
    <entry key="SelectTargetRegistrationScript">选择目标注册脚本</entry>
    <entry key="RegisteringTarget">正在注册新目标</entry>
    <entry key="FailedToRegisterTargetTitle">无法注册新目标</entry>
    <entry key="FailedToRegisterTargetDetails">无法注册新目标:\n\n{0}</entry>
    <entry key="UnregisterTargetPackage">注销目标</entry>
    <entry key="UnregisteringTarget">正在注销目标</entry>
    <entry key="FailedToUnregisterTargetTitle">无法注销目标</entry>
    <entry key="FailedToUnregisterTargetDetails">无法注销目标:\n\n{0}</entry>
    <entry key="SelectTargetUnregistrationScript">选择目标注销脚本</entry>
    <entry key="ManageProcessors">管理处理器</entry>
    <entry key="ManageProcessorsCurrentProject">管理添加到当前工程的处理器</entry>
    <entry key="DuplicateProcessorName">Processor ''{0}'' already exists in the project</entry>
    <entry key="EditProcessor">编辑处理器 ''{0}''</entry>
    <entry key="EditProcessorTooltip">编辑处理器</entry>
    <entry key="DeleteProcessorTooltip">删除处理器</entry>
    <entry key="CannotDeleteProcessorTooltip">无法删除 ''主机''</entry>
    <entry key="AvailableProcessors">可用的处理器</entry>
    <entry key="AddingNewProcessor">添加新处理器</entry>
    <entry key="FailedToAddNewProcessor">无法添加新处理器</entry>
    <entry key="FailedToEditProcessor">无法编辑处理器</entry>
    <entry key="FailedToRemoveProcessor">无法删除处理器</entry>
    <entry key="ProcessorInUse">无法删除该处理器，因为它当前正在以下编译配置变体中使用:\n\n{0}</entry>
    <entry key="AddAProcessor">添加处理器</entry>
    <entry key="SelectAManufacturer">选择制造商</entry>
    <entry key="ProcessorName">处理器名称</entry>
    <entry key="Custom">自定义</entry>
    <entry key="InvalidToolchain">工具链 ''{0}'' 未注册。</entry>
    <entry key="InvalidBoard">从目标存储库中找不到板 ''{0}''。</entry>
    <entry key="CannotConfigureBoardTitle">无法配置板连接</entry>
    <entry key="CannotConfigureBoardMessage">此板没有可配置的连接选项。</entry>
    <entry key="ConfigureBoardConnectionTooltip">配置板连接</entry>
    <entry key="ConfigureBoardConnection">为 ''{0}'' 配置板连接</entry>
    <entry key="ConfigureToolchainTitle">为 ''{0}'' 配置工具链选项</entry>
    <entry key="ConfigureCustomToolchainOptionsDescription">配置自定义工具链选项</entry>
    <entry key="OptionNameIPAddress">IP 地址</entry>
    <entry key="OptionNamePort">端口</entry>
    <entry key="OptionNameBaudRate">波特率</entry>
    <entry key="OptionNameParity">奇偶校验</entry>
    <entry key="OptionNameIgnoreUnusedExternalSymbols">解析代码时忽略未使用的外部符号(测试)</entry>
    <entry key="OptionHelpIgnoreUnusedExternalSymbols"/>
    <entry key="OptionNameCheckUndefinedSymbols">检查未定义的符号</entry>
    <entry key="OptionHelpCheckUndefinedSymbols">在开始编译过程之前，请检查工程中是否有未定义的符号。\n如果工程中的某些符号定义仅在编译时间可用，请禁用此选项。</entry>
    <entry key="OptionNameSourceEncoding">源代码编码</entry>
    <entry key="OptionHelpSourceEncoding">指定源文件的编码。如果您的代码由于存在非 ASCII 字符而无法编译或在用户界面中呈现不正确，您可能需要更改此选项的值。</entry>
    <entry key="OptionNameUseGoogleTest">使用 GoogleTest</entry>
    <entry key="OptionHelpUseGoogleTest">如果希望运行 GoogleTest 测试而不使用其他选项，请选择此选项。</entry>
    <entry key="OptionNameUseGoogleTestNonDefault">使用带非默认选项的 GoogleTest</entry>
    <entry key="OptionHelpUseGoogleTestNonDefault">如果您希望使用附加选项运行 GoogleTest 测试，请选择此选项。</entry>
    <entry key="OptionNameUseGenericExternalTestFramework">使用通用测试框架</entry>
    <entry key="OptionHelpUseGenericExternalTestFramework">在下列情况下，请选择此选项: &lt;br&gt;&lt;ul&gt;&lt;li&gt;您使用 GoogleTest 之外的测试框架&lt;/li&gt;&lt;li&gt;您使用 GoogleTest，但使用特定选项运行测试。&lt;/li&gt;&lt;/ul&gt;</entry>
    <entry key="OptionNameGenericExternalTestOutputOptions">测试输出选项</entry>
    <entry key="OptionHelpGenericExternalTestOutputOptions">输入用于测试可执行文件的命令行选项，以指定测试结果文件。&lt;br&gt;如果不想显式指定结果路径，您可以输入变量 $(TESTOUTPUT) 作为选项参量。</entry>
    <entry key="OptionNameGenericExternalTestImplicitOutputFile">显式指定测试输出文件</entry>
    <entry key="OptionHelpGenericExternalTestImplicitOutputFile">指定测试输出文件的路径。&lt;br&gt;除非您在测试输出选项中使用变量 $(TESTOUTPUT)，否则您必须显式指定测试输出文件的位置。</entry>
    <entry key="OptionNameGenericExternalTestOutputFile">测试输出文件</entry>
    <entry key="OptionHelpGenericExternalTestOutputFile">输入包含测试结果的文件的完整路径。</entry>
    <entry key="OptionNameGenericExternalTestAdditionalOptions">附加选项</entry>
    <entry key="OptionHelpGenericExternalTestAdditionalOptions">输入用于测试可执行文件的命令行选项。</entry>
    <entry key="OptionNameGenericExternalTestOutputIsXML">输出文件为 XML 格式</entry>
    <entry key="OptionHelpGenericExternalTestOutputIsXML">如果测试输出为 XML 格式，请选择此选项。</entry>
    <entry key="OptionNameGenericExternalTestOutputIsNotXML">输出文件不是 XML 格式</entry>
    <entry key="OptionHelpGenericExternalTestOutputIsNotXML">如果测试输出不是 XML 格式，请选择此选项。</entry>
    <entry key="OptionNameGenericExternalTestNoOutputConversion">XML 文件使用 Pst-xUnit 格式，不使用转换</entry>
    <entry key="OptionHelpGenericExternalTestNoOutputConversion">如果您的测试输出 XML 使用与 Polyspace Test xUnit 结果相同的 XML 标记，请选择此选项。</entry>
    <entry key="OptionNameGenericExternalTestConvertOutputUsingXSLT">使用 XSLT 转换输出</entry>
    <entry key="OptionHelpGenericExternalTestConvertOutputUsingXSLT">选择此选项以使用 XSLT 转换将 XML 测试结果转换为 Polyspace Test xUnit 格式。</entry>
    <entry key="OptionNameGenericExternalTestConversionXSLTFile">XSLT 文件</entry>
    <entry key="OptionHelpGenericExternalTestConversionXSLTFile">指定用于将 XML 测试结果转换为 Polyspace Test xUnit 格式的 XSLT 转换文件。</entry>
    <entry key="OptionNameGenericExternalTestConvertOutputUsingCmd">使用命令行转换输出</entry>
    <entry key="OptionHelpGenericExternalTestConvertOutputUsingCmd">选择此选项以使用命令将 XML 测试结果转换为 Polyspace Test xUnit 格式。</entry>
    <entry key="OptionNameGenericExternalTestConversionCmd">命令行</entry>
    <entry key="OptionHelpGenericExternalTestConversionCmd">选择此选项以使用命令将测试结果转换为 Polyspace Test xUnit 格式(XML)。</entry>
    <entry key="OptionTabProject">工程</entry>
    <entry key="OptionTabBuild">编译</entry>
    <entry key="OptionTabStatic">静态分析</entry>
    <entry key="OptionTabTestingProfiling">测试和探查</entry>
    <entry key="OptionPageProject">工程</entry>
    <entry key="OptionPageExternalTestsExecutionOptions">外部测试</entry>
    <entry key="OptionPageEnvironmentSettings">环境设置</entry>
    <entry key="OptionPageInputsStubbing">输入和插桩</entry>
    <entry key="OptionPageMultitasking">多任务</entry>
    <entry key="OptionPageBugFinderAnalysis">缺陷和编码标准</entry>
    <entry key="OptionPageCheckersBehavior">检查项行为</entry>
    <entry key="OptionPageCodeProverVerification">运行时错误</entry>
    <entry key="OptionPageVerificationAssumption">验证假设</entry>
    <entry key="OptionPageChecksBehavior">检查行为</entry>
    <entry key="OptionPagePrecision">精度</entry>
    <entry key="OptionPageScaling">规模</entry>
    <entry key="OptionPageReporting">报告</entry>
    <entry key="OptionPageComputingSettings">计算设置</entry>
    <entry key="OptionPageAdvanced">高级</entry>
    <entry key="OptionPageTargetCompiler">目标和编译器</entry>
    <entry key="OptionPageExternalTestBuildOptions">外部测试</entry>
    <entry key="OptionPageFileSpecificOptions">文件特定选项</entry>
    <entry key="OptionPageTesting">测试</entry>
    <entry key="OptionPageProfiling">所有探查</entry>
    <entry key="OptionPageCoverage">代码覆盖率</entry>
    <entry key="OptionPageExecutionProfiling">执行时间</entry>
    <entry key="UnableToExcludeFolder">不支持排除已添加文件夹/文件的父文件夹。</entry>
    <entry key="SelectFolder">选择文件夹</entry>
    <entry key="AddingExcludePattern">添加排除模式</entry>
    <entry key="SelectSourceFolder">选择源文件夹</entry>
    <entry key="MoveToPSTUnitFolders">移至 "Polyspace xUnit 测试文件夹" 部分</entry>
    <entry key="MoveToExternalTestFolders">移至外部测试文件夹</entry>
    <entry key="MoveToPSTUnitFiles">移至 "Polyspace xUnit 测试文件" 部分</entry>
    <entry key="MoveToExternalTestFiles">移至 "外部测试文件" 部分</entry>
    <entry key="ExcludePatternColumn">模式</entry>
    <entry key="ExcludeForColumn">从以下项中排除</entry>
    <entry key="ExcludePatterns">排除路径</entry>
    <entry key="PatternConcrete">具体</entry>
    <entry key="PatternGlob">全局</entry>
    <entry key="ExcludeForStaticAnalysis">静态分析</entry>
    <entry key="ExcludeForTest">测试</entry>
    <entry key="ExcludeForAll">全部</entry>
    <entry key="NonExistentPath">文件/文件夹 ''{0}'' 不存在</entry>
    <entry key="UnableToExpandPath">无法展开路径</entry>
    <entry key="UnableToExpandCommand">无法展开命令</entry>
    <entry key="UnableToValidateInput">无法验证输入</entry>
    <entry key="IncludeSubfolders">子文件夹</entry>
    <entry key="OverrideOpAppend">后追加</entry>
    <entry key="OverrideOpPrepend">前加</entry>
    <entry key="OverrideOpReplace">替换</entry>
    <entry key="OverrideOpAppendIncludePaths">追加到工程包含路径后</entry>
    <entry key="OverrideOpPrependIncludePaths">追加到工程包含路径前</entry>
    <entry key="OverrideOpReplaceIncludePaths">替换工程包含路径</entry>
    <entry key="ModulesPrecisionColumn1">文件名</entry>
    <entry key="ModulesPrecisionColumn2">精度</entry>
    <entry key="SfrTypesColumn1">名称</entry>
    <entry key="SfrTypesColumn2">大小</entry>
    <entry key="AutosarMainGeneratorMessage">此工程是从 AUTOSAR 规范生成的。在基于 AUTOSAR 的工程中，您无法修改 "运行时错误" 组中的选项。</entry>
    <entry key="ExternalTestsUnsupportedOptionMessage">该工程包含不支持的外部测试执行配置。选择要重置的选项之一。</entry>
    <entry key="SelectAFile">选择一个文件以查看文件特定选项</entry>
    <entry key="NoFileDataAvailable">文件特定选项不适用于此编译配置。</entry>
    <entry key="FileSpecificOptionInfo">从编译命令创建工程(或从 .psprj 文件导入)时，会填充文件特定选项。这些选项为只读。</entry>
    <entry key="UseGlobalSettings">使用全局设置</entry>
    <entry key="Remove">删除</entry>
    <entry key="RemoveSelectedRows">删除所选行</entry>
    <entry key="DetectedFunctions">检测到的函数</entry>
    <entry key="AddSelectedFunctions">添加所选函数</entry>
    <entry key="RemoveSelectedFunctions">删除所选函数</entry>
    <entry key="AvailableFunctionsCount">{0} 个函数，共 {1} 个</entry>
    <entry key="DetectedClasses">检测到的类</entry>
    <entry key="AddSelectedClasses">添加所选类</entry>
    <entry key="RemoveSelectedClasses">删除所选类</entry>
    <entry key="AvailableClassesCount">{0} 个类，共 {1} 个</entry>
    <entry key="CaseSensitive">区分大小写</entry>
    <entry key="WholeWord">全字匹配</entry>
    <entry key="UseRegularExpression">使用正则表达式</entry>
    <entry key="InvalidRegularExpression">正则表达式无效</entry>
    <entry key="CriticalSectionColumn1">起始例程</entry>
    <entry key="CriticalSectionColumn2">结束例程</entry>
    <entry key="AddStartingCriticalSectionText">开始</entry>
    <entry key="AddEndingCriticalSectionText">结束</entry>
    <entry key="AddStartingCriticalSectionTooltip">添加用于开始临界区的函数</entry>
    <entry key="AddEndingCriticalSectionTooltip">添加用于结束临界区的函数</entry>
    <entry key="RoutineDisableInterruptsColumn1">禁用例程</entry>
    <entry key="RoutineDisableInterruptsColumn2">启用例程</entry>
    <entry key="AddEnablingInterruptText">启用</entry>
    <entry key="AddDisablingInterruptText">禁用</entry>
    <entry key="AddEnablingInterruptTooltip">添加用于启用所有中断的函数</entry>
    <entry key="AddDisablingInterruptTooltip">添加用于禁用所有中断的函数</entry>
    <entry key="ToSelectedRow">至选定行</entry>
    <entry key="ToNewRow">至新行</entry>
    <entry key="AppendToSelectedText">选定</entry>
    <entry key="AppendToSelectedTooltip">选定</entry>
    <entry key="NewRowText">新行</entry>
    <entry key="NewRowTooltip">新行</entry>
    <entry key="SelectAFolder">选择文件夹</entry>
    <entry key="SelectingFolder">正在选择文件夹</entry>
    <entry key="SelectingFiles">正在选择文件</entry>
    <entry key="GettingFunctionList">正在获取函数列表</entry>
    <entry key="GettingClassList">正在获取类列表</entry>
    <entry key="SelectOsekFiles">选择 osek 文件</entry>
    <entry key="SelectAutosarFiles">选择 AUTOSAR 文件</entry>
    <entry key="SelectImpactSpecificationsFile">选择影响设定文件</entry>
    <entry key="SelectPreincludeFiles">选择预包含文件</entry>
    <entry key="SelectScript">选择脚本文件</entry>
    <entry key="SelectCFiles">选择 C 文件</entry>
    <entry key="AddIncludePath">添加包含路径</entry>
    <entry key="AddLibraryPath">添加库路径</entry>
    <entry key="SelectExternalTestOutputFile">选择输出文件</entry>
    <entry key="SelectExternalTestXSLTFile">选择 XSLT 文件</entry>
    <entry key="SwitchConfigTooltip">切换到不同配置</entry>
    <entry key="RenameConfiguration">重命名配置</entry>
    <entry key="Active">活动</entry>
    <entry key="Inactive">非活动</entry>
    <entry key="ActiveBuildConfig">活动编译配置</entry>
    <entry key="ActiveBuildConfigTooltip">活动编译配置为 ''{0}''。</entry>
    <entry key="ActiveStaticAnalysisConfig">活动静态分析配置</entry>
    <entry key="ActiveStaticAnalysisConfigTooltip">活动静态分析配置为 ''{0}''。</entry>
    <entry key="ActiveTestingConfig">活动测试配置</entry>
    <entry key="ActiveTestingConfigTooltip">活动测试配置为 ''{0}''。</entry>
    <entry key="UpdatingActiveConfig">更新活动配置</entry>
    <entry key="MakeActiveConfig">激活</entry>
    <entry key="MakeActiveConfigTooltip">激活当前配置</entry>
    <entry key="SetAsActiveConfig">''{0}'' 设置为活动配置。</entry>
    <entry key="ActiveConfigName">{0} (活动)</entry>
    <entry key="AutoGenerated">自动生成</entry>
    <entry key="AutoGeneratedProjectTooltip">当前工程是从编译命令自动生成的。更新工程时，对应用程序源和包含路径的任何更改都将被覆盖。</entry>
    <entry key="AutoGeneratedBuildConfigTooltip">当前编译配置 ''{0}'' 是从编译命令自动生成的。更新工程时，对此编译配置的任何更改都将被覆盖。</entry>
    <entry key="AutoGeneratedActiveConfigName">{0} (自动生成，活动)</entry>
    <entry key="AutoGeneratedConfigName">{0} (自动生成)</entry>
    <entry key="ConfigDuplicate">复制</entry>
    <entry key="ConfigDuplicateTooltip">复制当前配置</entry>
    <entry key="ConfigDuplicating">复制配置</entry>
    <entry key="ConfigDuplicated">配置 ''{0}'' 复制为 ''{1}''。</entry>
    <entry key="ConfigDuplicatedConfigure">配置 ''{0}'' 复制为 ''{1}''。从编译命令自动生成的选项(隐式编译器和文件特定选项)已删除。</entry>
    <entry key="RenameVariantTitle">重命名</entry>
    <entry key="RenameVariantPrompt">输入新名称</entry>
    <entry key="ConfigImportTooltip">从文件导入配置</entry>
    <entry key="ConfigImported">配置导入完成</entry>
    <entry key="ConfigImportItem">配置文件 ''{0}'' 导入为 ''{1}''。</entry>
    <entry key="ConfigImportInvalidElement">Cannot load config file {0}. This file does not contain configuration variant data.</entry>
    <entry key="CannotImportConfigFileError">Cannot load config file {0}. This file does not exist or is corrupted.</entry>
    <entry key="ConfigImportDialogTitle">选择要导入的配置文件</entry>
    <entry key="ConfigImporting">正在将配置导入当前工程</entry>
    <entry key="ConfigExportCurrentTooltip">将当前配置导出为文件</entry>
    <entry key="ConfigExportActive">导出活动配置</entry>
    <entry key="ConfigExportActiveTooltip">将活动配置导出为文件</entry>
    <entry key="ConfigExportAll">导出所有配置</entry>
    <entry key="ConfigExportAllTooltip">将所有配置导出为文件</entry>
    <entry key="ConfigExported">配置导出完成</entry>
    <entry key="ConfigExportItem">配置 ''{0}'' 导出为 ''{1}''。</entry>
    <entry key="ConfigExportItemConfigure">配置 ''{0}'' 导出为 ''{1}''。从编译命令自动生成的选项(隐式编译器和文件特定选项)已删除。</entry>
    <entry key="CannotExportConfigFileError">Cannot write to config file {0}.</entry>
    <entry key="ConfigExportCurrentDialogTitle">选择用于导出当前配置的文件</entry>
    <entry key="ConfigExportManyDialogTitle">选择用于导出配置的文件夹</entry>
    <entry key="ConfigExporting">正在导出配置</entry>
    <entry key="CreateNewConfigurationTooltip">创建当前类型的新配置</entry>
    <entry key="NewBuildConfiguration">新建编译配置</entry>
    <entry key="NewStaticAnalysisConfiguration">新建静态分析配置</entry>
    <entry key="NewTestingProfilingConfiguration">新建测试和探查配置</entry>
    <entry key="CreateNewBuildConfigurationTooltip">创建新编译配置</entry>
    <entry key="CreateNewStaticAnalysisConfigurationTooltip">创建新静态分析配置</entry>
    <entry key="CreateNewTestingProfilingConfigurationTooltip">创建新测试和探查配置</entry>
    <entry key="CreatingNewBuildConfiguration">创建新编译配置</entry>
    <entry key="CreatingNewStaticAnalysisConfiguration">创建新静态分析配置</entry>
    <entry key="CreatingNewTestingProfilingConfiguration">创建新测试和探查配置</entry>
    <entry key="CreatedNewBuildConfiguration">已创建新编译配置 ''{0}''</entry>
    <entry key="CreatedNewStaticAnalysisConfiguration">创建新静态分析配置 ''{0}''</entry>
    <entry key="CreatedNewTestingProfilingConfiguration">创建新测试和探查配置 ''{0}''</entry>
    <entry key="CannotRemoveActiveBuildConfigError">Cannot delete active build config.</entry>
    <entry key="CannotRemovePSConfigureBuildConfigError">Cannot delete build configuration created from a build command.</entry>
    <entry key="CannotRemoveActiveStaticAnalysisConfigError">Cannot delete active static analysis config.</entry>
    <entry key="CannotRemoveActiveTestingProfilingConfigError">Cannot delete active testing config.</entry>
    <entry key="ConfigRemoveTooltip">删除当前配置</entry>
    <entry key="ConfigRemoving">正在删除配置</entry>
    <entry key="ConfigRemoved">配置 ''{0}'' 已删除。</entry>
    <entry key="ListCannotBeEmpty">列表不能为空</entry>
    <entry key="NoEmptyValueInList">列表不能包含空值</entry>
    <entry key="ValueCannotBeEmpty">值不能为空</entry>
    <entry key="DuplicateValueFound">发现重复数值: ''{0}''</entry>
    <entry key="ValueAlreadyExists">''{0}'' 已存在</entry>
    <entry key="OneOrMoreInvalidPath">一个或多个路径无效</entry>
    <entry key="DuplicateProjectVariableKey">重复的工程变量键: {0}</entry>
    <entry key="ProjectVariableKeyExists">工程变量键 ''{0}'' 已存在</entry>
    <entry key="PathMustBeProvided">必须提供文件路径</entry>
    <entry key="CommandMustBeProvided">必须提供命令</entry>
    <entry key="InvalidFormat">格式无效</entry>
    <entry key="HasValidationErrors">一个或多个选项存在验证错误</entry>
    <entry key="HasStrayExcludePattern">存在一个或多个排除模式，但工程不包含任何源/测试文件或文件夹。</entry>
    <entry key="VariableNotAllowedInArtifactPath">工件路径不支持工程变量。</entry>
    <entry key="EnvironmentVariableOverridingArtifactPath">环境变量 ''{0}'' 设置为 ''{1}''。将使用它来代替此处提供的值</entry>
    <entry key="EnvironmentVariableArtifactPathWillBeUsed">将使用由环境变量 ''{1}'' 指定的工件路径 ''{0}''</entry>
    <entry key="LoadingPlaceholder">正在加载...</entry>
    <entry key="Add">添加</entry>
    <entry key="Cancel">取消</entry>
    <entry key="ClickToAddDescription">点击以添加描述</entry>
    <entry key="TestConnectivity">测试连接</entry>
    <entry key="RunningConnectivityTests">正在测试连接...</entry>
    <entry key="RunningConnectivityTestsDetail">正在测试与板 ''{0}'' 和工具链 ''{1}'' 的连接</entry>
    <entry key="RunningConnectivityTest">正在运行连接测试 ''{0}''</entry>
    <entry key="ConnectivityTestPassed">连接测试 ''{0}'' 通过</entry>
    <entry key="ConnectivityValidationError">连接测试 ''{0}'' 失败。有关更多详细信息，请查看日志。</entry>
    <entry key="AllConnectivityTestsPassed">所有连接测试均通过。</entry>
    <entry key="DefinedByCompiler">defined-by-compiler</entry>
    <entry key="Unspecified">Unspecified</entry>
    <entry key="LittleEndian">Little endian</entry>
    <entry key="BigEndian">Big endian</entry>
    <entry key="HostComputer">Host Computer</entry>
    <entry key="DetectAutomatically">Detect automatically</entry>
  </message>
</rsccat>
