<?xml version="1.0" encoding="UTF-8"?>
<!--Copyright 2024 The MathWorks, Inc.-->

<rsccat xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.0" locale="ja_JP" product="polyspace" xsi:noNamespaceSchemaLocation="../../resources/schema/msgcat.xsd">
  <message>
    <entry key="ForbiddenFunc">禁止されている関数 {0_symbol} が使用されています。</entry>
    <entry key="ImplicitCopyConstructorDefined">Implicit copy constructor for class {0_symbol} is defined.</entry>
    <entry key="ImplicitAssignOperatorOverload">Implicit copy assignment operator for class {0_symbol} is defined.</entry>
    <entry key="ExplicitCopyConstructorDefined">User-defined copy constructor for class {0_symbol}.</entry>
    <entry key="ExplicitAssignOperatorOverload">User-defined copy assignment operator for class {0_symbol}.</entry>
    <entry key="SensitiveInfoInCopyableClass">Information {0_symbol} is sensitive and the class has a copy constructor.</entry>
    <entry key="ContractIsNotEvaluated">{0} is not evaluated</entry>
    <entry key="ContractIsNotNull">{0} is not NULL</entry>
    <entry key="ContractMayBeNull">{0} may be NULL</entry>
    <entry key="ContractIsNull">{0} is NULL</entry>
    <entry key="ContractPointsToValidMemory">{0} points to valid memory</entry>
    <entry key="ContractMayPointToValidMemory">{0} may point to invalid memory</entry>
    <entry key="ContractPointsToInvalidMemory">{0} points to invalid memory</entry>
    <entry key="ContractPointsToInitializedMemory">{0} points to initialized memory</entry>
    <entry key="ContractMayPointToInitializedMemory">{0} may point to uninitialized memory</entry>
    <entry key="ContractPointsToUninitializedMemory">{0} points to uninitialized memory</entry>
    <entry key="ContractArgument">argument {0}</entry>
    <entry key="EXP12C_CantIgnoreResultOfSensitiveFunction">Return value of sensitive function {0_symbol} is not checked but value might contain useful information about possible errors.\n If you do not intend to check the return value, cast it to void.</entry>
    <entry key="EXP12C_CantIgnoreResultOfCriticalFunction">Return value of critical function {0_symbol} is not checked but value might contain useful information about possible errors.</entry>
    <entry key="EXP12C_MustCheckWithinScope">Return value of critical or sensitive function {0_symbol} is not checked in the block containing the function call.</entry>
    <entry key="EXP12C_MustCheckBeforeOtherCall">Return value of critical or sensitive function {0_symbol} not checked before call to other sensitive of critical function. Return value might contain useful information about possible errors.\n If you do not intend to check the return value of a sensitive function, cast it to void.</entry>
    <entry key="EXP12C_MustCheckBeforeUsingResult">Return value of critical or sensitive function {0_symbol} not checked before being used. Return value might contain useful information about possible errors.\n If you do not intend to check the return value of a sensitive function, cast it to void.</entry>
    <entry key="EXP12C_TraceBack_FunctionCall">Call to sensitive or critical function {0_symbol}</entry>
    <entry key="EXP12C_TraceBack_NonSensitiveCall">Call to function {0_symbol}</entry>
    <entry key="FIO08C_MustCheckBeforeOtherCall">Function {0_symbol} tries to remove an opened file.</entry>
    <entry key="FIO08C_TraceBack_FunctionCall">Call to function {0_symbol}.</entry>
    <entry key="FIO03C_OpenFileNotExclusif">Function {0_symbol} opens a file without use of exclusive mode.\nOpen the file in append or truncate mode if the file exists, or set exclusive mode when you create the file.</entry>
    <entry key="FIO06C_OpenFileNoWithoutPermissions">Function {0_symbol} opens a file without setting permissions.\nOpen the file in append or truncate mode if the file exists, or set access permissions when you create the file.</entry>
    <entry key="FIO10C_RenameFileNotPortable">Function {0_symbol} renames a file to {1_symbol} without checking if a file with this name already exists.\nIf the destination file exists, the behavior is implementation defined and makes the code nonportable.\nAvoid renaming to this file if the file already exists, or remove the destination file before renaming.</entry>
  </message>
</rsccat>
