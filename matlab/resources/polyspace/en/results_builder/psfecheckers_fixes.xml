<?xml version="1.0" encoding="UTF-8" ?>
<!-- Copyright 2022-2023 The MathWorks, Inc. -->
<rsccat version="1.0" locale="en_US" product="polyspace" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../../schema/msgcat.xsd">
  <message>
    <!-- PS_INTERNAL_UNUSED_NAMED_PARAMETER -->
    <entry key="CommentUnusedParameters" translate="true">comment out unused parameters</entry>
    <!-- PS_INTERNAL_FUNCTION_COULD_BE_CONSTEXPR -->
    <entry key="AddConstexprToFunction" translate="true">add constexpr specifier to function definition</entry>
    <!-- PS_INTERNAL_STD_ENDL_USE -->
    <entry key="ReplaceStdEndlByN" translate="true">replace "std::endl" with "''\\n''"</entry>
    <entry key="ReplaceStdEndlByNFlush" translate="true">replace "std::endl" with "''\\n'' &lt;&lt; std::flush"</entry>
    <!-- PS_INTERNAL_EXPENSIVE_PASS_BY_VALUE -->
    <entry key="AddReference" translate="true">pass parameter by reference</entry>
    <entry key="AddConstReference" translate="true">pass parameter by const reference (const&amp;)</entry>
    <!-- PS_INTERNAL_CHEAP_PASS_BY_REFERENCE -->
    <entry key="RemoveConstReference" translate="true">pass parameter by value instead of const reference</entry>
    <!-- PS_INTERNAL_UNMODIFIED_PARAM_NOT_CONST -->
    <entry key="AddConstToParam" translate="true">const-qualify parameter</entry>
    <!-- PS_INTERNAL_UNMODIFIED_LOCAL_VAR_NOT_CONST -->
    <entry key="AddConstToVariable" translate="true">const-qualify variable</entry>
    <!-- PS_INTERNAL_USELESS_INCLUDE -->
    <entry key="RemoveInclude" translate="true">remove useless #include directive</entry>
    <entry key="CommentInclude" translate="true">comment out useless #include directive</entry>
    <!-- PS_INTERNAL_EXPENSIVE_ANY_CAST -->
    <entry key="UseConstReference" translate="true">change cast to const reference</entry>
    <!-- PS_INTERNAL_EXPENSIVE_STD_STRING_APPEND -->
    <entry key="UsePlusEquals" translate="true">change '=' operator to '+=' operator</entry>
    <!-- PS_INTERNAL_EXPENSIVE_RETURN_STD_MOVE -->
    <entry key="RemoveTheMove" translate="true">remove the use of std::move</entry>
    <!-- PS_INTERNAL_EXPENSIVE_MAP_INSERT_OR_ASSIGN -->
    <entry key="UseInsertOrAssign" translate="true">replace [] operator with insert_or_assign</entry>
    <!-- PS_INTERNAL_EXPENSIVE_LOCAL_VARIABLE -->
    <entry key="UseConstRefLocalVar" translate="true">change local variable to const reference</entry>
    <!-- PS_INTERNAL_WRONG_LL_SUFFIX -->
    <entry key="IncorrectLLSuffix" translate="true">change suffix from 'L' to "LL"</entry>
    <entry key="LowercaseLSuffix" translate="true">change the 'l' in suffix to 'L'</entry>
    <!-- PS_INTERNAL_OCTAL_AND_HEX_NOT_TERMINATED -->
    <entry key="HexLiteralNotTerminated" translate="true">split the string after the hex literal</entry>
    <entry key="OctalLiteralNotTerminated" translate="true">split the string after the octal literal</entry>
    <entry key="UniversalNameNotTerminated" translate="true">split string after universal character name</entry>
    <entry key="UniversalNameIncorrect" translate="true">add leading zeros to match universal character name size</entry>
    <!-- PS_INTERNAL_UNARY_PLUS -->
    <entry key="RemoveUnaryPlus" translate="true">Remove unary +</entry>
    <!-- PS_INTERNAL_TYPE_QUALIFIED_FUNCTION_TYPE -->
    <entry key="RemoveQualifiers" translate="true">Remove qualifiers</entry>
    <!-- PS_INTERNAL_FUNCTION_WITH_EMPTY_PARAM -->
    <entry key="AddVoidParam" translate="true">Replace '()' with '(void)'</entry>
    <!-- PS_INTERNAL_USELESS_CAPTURE -->
    <entry key="RemoveDefaultCapture" translate="true">Remove default capture</entry>
    <!-- PS_INTERNAL_ASSERT_WITH_CONSTANT_EXPRESSION-->
    <entry key="assertTostatic_assert" translate="true">Replace 'assert' with 'static_assert'</entry>
  </message>
</rsccat>
