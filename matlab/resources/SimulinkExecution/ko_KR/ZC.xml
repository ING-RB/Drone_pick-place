<?xml version="1.0" encoding="UTF-8"?>
<!--Copyright 2024 The MathWorks, Inc.-->

<rsccat xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.0" locale="ko_KR" product="SimulinkExecution" xsi:noNamespaceSchemaLocation="../../resources/schema/msgcat.xsd">
  <message>
    <entry key="AttributeConversionFailed">
      Conversion of zero-crossing attributes from ''{0}'' to ''{1}'' format
      failed because the target attributes are contained in an enumeration and
      therefore, cannot contain an arbitrary combination of directions.
    </entry>
    <entry key="ZeroCrossingConsistencyCheckFailed">
  실행된 영점교차 벡터와 솔버에 캐시된 영점교차 벡터가 일치하지 않습니다. \n {0}
</entry>
    <entry key="ConsecutiveZeroCrossingsLimitExceeded">
  시간 {0}에서 시작하여, 영점교차 신호 #{1,number,integer}이(가) 시간 길이 {3} 내에서 {2,number,integer}개의 연속 이벤트를 발생시켰습니다. 짧은 시간 길이 내에 이러한 연속 이벤트가 너무 많으면 시뮬레이션이 느려지거나 시뮬레이션이 중단됩니다.
</entry>
    <entry key="ConsecutiveZeroCrossingEventsLimitExceeded">
  시간 {0}에서 시작하여, 영점교차 신호 {1,number,integer}이(가) 시간 길이 {3} 내에서 {2,number,integer}개의 연속 이벤트를 발생시켰습니다. 이 시간 간격 동안 영점교차 신호의 크기는 {4} 미만으로 유지되었습니다. 짧은 시간 길이 내에 이러한 연속 이벤트가 너무 많으면 시뮬레이션이 느려지거나 시뮬레이션이 중단됩니다.
</entry>
    <entry key="ZeroCrossingNotBracketedDueToConsecutiveEvents">
  시간 {0}에서 시작하여, 시간 간격 {2} 내에서 {1,number,integer}개의 연속 영점교차를 검출했습니다. 시뮬레이션이 중단되지 않고 계속 진행되도록 하기 위해, 적응형 영점교차 검출 알고리즘은 현재 스텝 크기({3})을(를) 더 줄이지 않고 그대로 받습니다.
</entry>
    <entry key="ZeroCrossingNotBracketedDueToSmallSignalValues">
  시간 {0} 및 스텝 크기 {1}에서 {2,number,integer}개의 영점교차를 찾았습니다. 하지만 이 시간 스텝 동안 영점교차가 있는 신호의 크기가 허용오차({3})보다 작으므로, 적응형 영점교차 검출 알고리즘은 스텝 크기를 더 줄이지 않습니다.
</entry>
    <entry key="SomeZeroCrossingNotBracketedDueToSmallSignalValues">
  시간 {0} 및 스텝 크기 {1}에서 {2,number,integer}개의 영점교차를 찾았습니다. 하지만 신호 크기가 허용오차({4})보다 작으므로, 적응형 영점교차 검출 알고리즘은 {3,number,integer}개의 신호로 인한 영점교차의 탐색 구간을 설정하지 않습니다.
</entry>
    <entry key="TooManyConsecutiveZeroCrossings">
  시간 {0}에서 {1,number,integer}개의 영점교차 신호가 {2,number,integer}개의 연속 이벤트 최대 개수를 초과했습니다. 이 영점교차를 무시하고 시뮬레이션을 계속하려면 적응형 영점교차 검출 알고리즘을 사용해 보십시오.
</entry>
    <entry key="DetectedMaskedZeroCrossings">
  {0}에서 {1}까지의 시뮬레이션 시간 스텝(스텝 크기 = {2}) 동안 #{3,number,integer}개의 마스크 처리된 영점교차, 즉 짝수 개의 영점교차를 갖는 신호를 발견했습니다. 이 시간 스텝에 다른 영점교차가 있기 때문에 검색 알고리즘에 이러한 영점교차만 감지되었습니다. 마스크 처리된 영점교차는 현재 시간 스텝에 짝수의 영점교차를 갖는 하나 이상의 영점교차 신호에 의해 발생합니다. 마스크 처리된 영점교차는 경우에 따라 감지되지 않을 수 있습니다.
</entry>
    <entry key="MaxNumberOfBracketingIterationsExceeded">
  {0}에서 {1}까지의 시뮬레이션 시간 스텝 동안 최대 {2, number, integer}회의 반복 후에도 영점교차 검출 알고리즘이 원래 시간 간격을 너비가 시간 허용오차보다 작거나 같고 영점교차를 포함하는 수렴 간격으로 줄이지 못했으므로 시뮬레이션이 영점교차 검색을 중지했습니다. 시뮬레이션은 검출 알고리즘 내의 현재 시간 간격에 대한 영점교차를 보고함으로써 계속됩니다.
</entry>
    <entry key="StateMismatchInZcConsistencyCheck">
  시간 {0}의 영점교차 일관성 검사에서 상태가 일치하지 않습니다.\n x (왼쪽 지점) : {1} \n x (재실행됨): {2} 
</entry>
    <entry key="FixedStepDiscreteSolverWithZc">
            Model ''{0}'' has fixed-step zero-crossing detection enabled but does not contain continuous states. Using fixed-step zero-crossing detection in models that do not contain continuous states is not recommended except when required for consistency for generating code from a model hierarchy that contains another model with continuous states. \n
                     &lt;actions exclusiveFixIts="yes"&gt;
                     &lt;action type="fixit"&gt;
                     &lt;cmd&gt;set_param( ''{0}'', ''EnableFixedStepZeroCrossing'', ''off'');&lt;/cmd&gt;
                     &lt;txt&gt;Turn off zero-crossing detection for fixed-step simulation.&lt;/txt&gt;
                     &lt;/action&gt;
                     &lt;/actions&gt;
        </entry>
    <entry key="FixedStepZCNotSupportedForRTCodeGen">
            고정 스텝 영점교차를 활성화한 상태에서 블록 다이어그램 "{0}"에 코드를 생성할 수 없습니다. \n &lt;actions exclusiveFixIts="yes"&gt; &lt;action type="fixit"&gt; &lt;cmd&gt;set_param( ''{0}'', ''EnableFixedStepZeroCrossing'', ''off'');&lt;/cmd&gt; &lt;txt&gt;고정 스텝 시뮬레이션에 대한 영점교차 검출을 끄십시오.&lt;/txt&gt; &lt;/action&gt; &lt;/actions&gt;
        </entry>
    <entry key="FixedStepZc_NonInlinedSFcnsNotSupported">
            블록 ''{0}''이(가) 인라인이 아닌 S-Function을 사용합니다. 이는 고정 스텝 솔버를 사용해 영점교차를 검출하는 모델에서 코드를 생성할 때 지원되지 않습니다. \n &lt;actions exclusiveFixIts="yes"&gt; &lt;action type="fixit"&gt; &lt;cmd&gt;set_param( bdroot(''{0}''), ''EnableFixedStepZeroCrossing'', ''off'');&lt;/cmd&gt; &lt;txt&gt;고정 스텝 시뮬레이션에 대한 영점교차 검출을 비활성화하십시오.&lt;/txt&gt; &lt;/action&gt; &lt;/actions&gt;
        </entry>
  </message>
</rsccat>
