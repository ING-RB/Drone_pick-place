<?xml version="1.0" encoding="UTF-8"?>
<!--Copyright 2024 The MathWorks, Inc.-->

<rsccat xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.0" locale="ko_KR" product="datacreation" xsi:noNamespaceSchemaLocation="../../resources/schema/msgcat.xsd">
  <message>
    <entry key="DataCreationLiveTask_Label">숫자형 신호 만들기</entry>
    <entry key="dataCreationLogicalTask_Label">논리형 신호 만들기</entry>
    <entry key="dataCreationEnumTask_Label">열거형 신호 만들기</entry>
    <entry key="dataCreationNumericPurpose">벡터, timeseries 또는 타임테이블에 대한 숫자형 신호 값을 그린 후 미세 조정합니다</entry>
    <entry key="dataCreationLogicalPurpose">벡터, timeseries 또는 타임테이블에 대한 논리형 신호 값을 그린 후 미세 조정합니다</entry>
    <entry key="dataCreationEnumPurpose">벡터, timeseries 또는 타임테이블에 대한 열거형 신호 값을 그린 후 미세 조정합니다</entry>
    <entry key="timetableSummary">`{1}` 데이터 값 및 `{2}` 시간 값을 사용하는 새 `{0}`</entry>
    <entry key="taskSummary">`{1}` 데이터 값을 사용하는 새 `{0}`</entry>
    <entry key="DataCreationLiveTask_Description">벡터, timeseries 또는 타임테이블에 대한 숫자형 신호 값을 그린 후 미세 조정합니다</entry>
    <entry key="storageTypeLabel">출력 형식 선택</entry>
    <entry key="vectorButtonLabel">벡터</entry>
    <entry key="vectorButtonTooltip">데이터를 벡터에 저장합니다.</entry>
    <entry key="tableButtonLabel">테이블</entry>
    <entry key="tableButtonTooltip">데이터를 테이블에 저장합니다.</entry>
    <entry key="timeTableButtonLabel">타임테이블</entry>
    <entry key="timeTableButtonTooltip">시간 및 데이터를 타임테이블에 저장합니다.</entry>
    <entry key="timeseriesButtonLabel">timeseries</entry>
    <entry key="timeseriesButtonTooltip">시간 및 데이터를 timeseries에 저장합니다.</entry>
    <entry key="dataArrayButtonLabel">데이터 배열</entry>
    <entry key="dataArrayButtonTooltip">시간 및 데이터를 Nx2 행렬에 저장합니다. 여기서 N은 점의 개수입니다.</entry>
    <entry key="storagePropertiesLabel">고급 속성 설정</entry>
    <entry key="storageTypeVectorDropDownLabel">벡터 유형</entry>
    <entry key="dataTypeVectorDropDownLabel">데이터형</entry>
    <entry key="dataTypeLogicalLabel">데이터형:</entry>
    <entry key="dataTypeEnumerationLabel">열거형</entry>
    <entry key="vectorTypeRow">행</entry>
    <entry key="vectorTypeColumn">열</entry>
    <entry key="dataCreationToolsLabel">신호 값 만들기</entry>
    <entry key="tableDataColumn">데이터</entry>
    <entry key="tableTimeColumn">시간</entry>
    <entry key="taskSummaryNoDT">출력 데이터형을 선택하고, 데이터를 그린 후 미세 조정하고, 데이터형을 선택합니다.</entry>
    <entry key="tableVarName">열 이름</entry>
    <entry key="tableVarNameEditTip">테이블의 열 이름</entry>
    <entry key="timetableVarName">변수 이름</entry>
    <entry key="timetableVarNameEditTip">타임테이블의 변수 이름</entry>
    <entry key="timeTableDurationLabel">시간 단위</entry>
    <entry key="timeTableDurationTip">시간을 나타내는 숫자형 값을 duration형 값으로 변환하기 위한 시간 단위</entry>
    <entry key="cannotCastToDataType">데이터를 {0}(으)로 형변환할 수 없습니다.</entry>
    <entry key="displayResults">결과 표시</entry>
    <entry key="plotResults">플롯</entry>
    <entry key="dataTypeNotSupported">{0} is not supported. Check spelling and your licensed software.</entry>
    <entry key="scopeDataTypeError">{0} data type is not a supported.</entry>
    <entry key="variableTypeTooltip">변수 데이터형</entry>
    <entry key="storageTypeVectorDropDownTip">행 우선 또는 열 우선을 선택합니다</entry>
    <entry key="dataTypeToolTip">출력 데이터 값을 형변환합니다</entry>
    <entry key="insertPointToolTip">클릭하거나 탭하여 점을 삽입합니다</entry>
    <entry key="insertLineToolTip">끌어서 라인을 삽입합니다</entry>
    <entry key="drawToolTip">끌어서 데이터 점을 그립니다</entry>
    <entry key="eraseToolTip">끌어서 데이터 점을 지웁니다</entry>
    <entry key="panToolTip">패닝</entry>
    <entry key="zoomToolTip">끌면서 확대/축소합니다. x축 또는 y축을 확대하려면 Ctrl 키 또는 Shift 키를 누르십시오. 축소하려면 더블 클릭하십시오. 홈으로 돌아가려면 트리플 클릭하십시오.</entry>
    <entry key="fitToViewToolTip">화면에 맞춥니다</entry>
    <entry key="selectToolTip">점을 선택하고 이동합니다</entry>
    <entry key="enumEditFieldTip">열거형의 이름을 입력합니다</entry>
    <entry key="enumEditFieldErrorTip">{0}은(는) Simulink에서 지원되는 열거형이 아닙니다</entry>
    <entry key="enumDataDefMisMatch">기존 데이터 값이 {0}의 멤버가 아님</entry>
    <entry key="zoomOutToolTip">축소합니다</entry>
    <entry key="snapTo">다음에 맞춤:</entry>
    <entry key="xtick">X 눈금</entry>
    <entry key="xgrid">X 그리드</entry>
    <entry key="ytick">Y 눈금</entry>
    <entry key="ygrid">Y 그리드</entry>
    <entry key="snapXTo">X를 다음에 맞춤:</entry>
    <entry key="snapYTo">Y를 다음에 맞춤:</entry>
    <entry key="tick">눈금</entry>
    <entry key="grid">그리드</entry>
    <entry key="deleteToolTip">점을 삭제합니다</entry>
    <entry key="numericalTaskToggleText">숫자형</entry>
    <entry key="logicalTaskToggleText">논리형</entry>
    <entry key="enumerationTaskToggleText">열거형</entry>
    <entry key="pluginFactoryInputForKey">The input for getSupportedContributor is expected to be a char array with the value of a datacreation live task key.</entry>
    <entry key="ueberdatacreation">신호 만들기</entry>
    <entry key="selecttypeofdata">신호 유형 선택</entry>
    <entry key="enumDefinitionMissing">{0}형에 대해 정의된 열거형이 없습니다.</entry>
    <entry key="uicomponentvaluenotstruct">Value property must be a struct with fields 'x','y' whose values are vectors of equal lengths.</entry>
    <entry key="uicomponentnonzeroindex">Child index value must be 1.</entry>
    <entry key="ucomponentvaluenottable">Value property must be a table with column values that are numerical.</entry>
    <entry key="ucomponentvaluenottimetable">Value property must be a timetable with variable values that are numerical.</entry>
    <entry key="ucomponentvaluenottimeseries">Value property must be a timeseries with variable values that are numerical.</entry>
    <entry key="toggleValueSetError">The Value property must be a char array representing a live task key for a registered live task template.</entry>
    <entry key="datavariantnoenum">{0} does not support enumeration data types.</entry>
    <entry key="datavariantinputstructthreshhold">The input structure must contains the fields 'dataIn', 'timeIn', 'lower_threshold', and 'upper_threshold'.</entry>
    <entry key="datavariantthresholdpercent">Threshold values must be a positive numeric value between 0 and 1.</entry>
    <entry key="datavariantthresholdflat">Threshold values must be numeric and scalar.</entry>
    <entry key="datavariantbias">The field 'biasvalue' must be numeric and scalar.</entry>
    <entry key="datavariantbasic">The input structure must contains the fields 'dataIn' and 'timeIn'.</entry>
    <entry key="datavariantinvert">To invert data the values must be double or logical.</entry>
    <entry key="datavariantscale">The input structure must contains the fields 'dataIn', 'timeIn', and 'scalefactor'.</entry>
    <entry key="datavariantscalefactorvalue">The 'scalefactor' field must be numeric and scalar.</entry>
    <entry key="datavarianttimeshift">The input structure must contains the fields 'dataIn', 'timeIn', and 'timeshift'.</entry>
    <entry key="datavarianttimeshiftvalue">'timeshift' 필드는 숫자형 스칼라여야 합니다.</entry>
    <entry key="mockerror">모의 오류 메시지.</entry>
    <entry key="taskerror">작업 오류</entry>
    <entry key="selectionValueError">선택한 인덱스는 비어 있거나 0보다 큰 double형 벡터여야 합니다.</entry>
    <entry key="doubleDataType">Double</entry>
    <entry key="singleDataType">Single</entry>
    <entry key="uint8DataType">Uint8</entry>
    <entry key="int8DataType">Int8</entry>
    <entry key="uint16DataType">Uint16</entry>
    <entry key="int16DataType">Int16</entry>
    <entry key="uint32DataType">Uint32</entry>
    <entry key="int32DataType">Int32</entry>
    <entry key="uint64DataType">Uint64</entry>
    <entry key="int64DataType">Int64</entry>
    <entry key="halfDataType">Half</entry>
    <entry key="logicalDataType">Logical</entry>
    <entry key="secondsDurationType">Seconds</entry>
    <entry key="minutesDurationType">Minutes</entry>
    <entry key="hoursDurationType">Hours</entry>
    <entry key="daysDurationType">Days</entry>
    <entry key="yearsDurationType">Years</entry>
    <entry key="numericalTaskToggleValue">Numerical</entry>
    <entry key="logicalTaskToggleValue">Logical</entry>
    <entry key="enumerationTaskToggleValue">Enumeration</entry>
    <entry key="taskcategory">SIMULINK INPUTS AND OUTPUTS</entry>
  </message>
</rsccat>
