<?xml version="1.0" encoding="UTF-8" ?>
<rsccat version="1.0" locale="en_US" product="Controllib" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../../schema/msgcat.xsd">
    <!-- Copyright 2009-2023 The MathWorks, Inc. -->
    <message>
        <!-- Common strings -->
        <entry key="lblEditWithEllipsis">Edit...</entry>
        <entry key="lblDelete">Delete</entry>
        <entry key="lblClose">Close</entry>
        <entry key="lblHelp">Help</entry>
        <entry key="lblOk">OK</entry>
        
        <!-- common plotconstr strings -->
        <entry key="lblDeleteConstraint">Delete Constraint</entry>
        <entry key="lblMoveConstraint">Move Constraint</entry>
        <entry key="lblResizeConstraint">Resize Constraint</entry>
        <entry key="lblEditConstraint">Edit Constraint</entry>
        <entry key="lblFlipConstraint">Flip Constraint</entry>
        <entry key="lblSplit">Split</entry>
        <entry key="lblSplitSegment">Split segment</entry>
        <entry key="lblJoinSegment">Join segment</entry>
        <entry key="lblFlip">Flip</entry>
        <entry key="lblJoinLeft">Join left</entry>
        <entry key="lblJoinRight">Join right</entry>
        <entry key="lblExtendToInf">Extend to inf</entry>
        
        <!-- common srorequirement strings -->
        <entry key="lblCopyOf">Copy of {0}</entry>
        <entry key="errDataFiniteNumeric">Data must be numeric and finite</entry>
        <entry key="errDataNbYTwo">Data must be an nx2 vector</entry>
        <entry key="errIncompatibleXY">X-data must have same size as Y-data</entry>
        
        <!-- plotconstr 'description' strings -->
        <entry key="lblLocationFromTo">Location: {0} to {1} ({2})</entry>
        <entry key="lblNewLocationFromTo">New location: {0} to {1} ({2})</entry>
        <entry key="lblMoveInstruction">Move requirement to desired location and release the mouse.</entry>
        <entry key="lblMoveInstructionDampingRatio">Move requirement to adjust damping/overshoot bound and release the mouse.</entry>
        <entry key="lblMoveInstructionNaturalFrequency">Move requirement to adjust natural frequency bound and release the mouse.</entry>
        <entry key="lblMoveInstructionSettlingTime">Move requirement to adjust settling time bound and release the mouse.</entry>
        <entry key="lblHoverInstruction">Left-click and drag to move this requirement.</entry>
        <entry key="lblHoverMarkerInstruction_PWL">Select and drag to adjust extent and slope of the requirement segment.</entry>
        <entry key="lblHoverMarkerInstruction">Left-click and drag to resize this requirement.</entry>
        <entry key="lblSlopeDB">Slope: {0} (dB/decade)</entry>
        <entry key="lblNewSlopeDB">New slope: {0} (dB/decade)</entry>
        <entry key="lblSlope">Slope: {0} ({1}/{2})</entry>
        <entry key="lblNewSlope">New slope: {0} ({1}/{2})</entry>
        <entry key="lblUpperLimit">Upper limit</entry>
        <entry key="lblUpperLimitFromTo">Upper limit from {0} to {1} ({2})</entry>
        <entry key="lblLowerLimit">Lower limit</entry>
        <entry key="lblLowerLimitFromTo">Lower limit from {0} to {1} ({2})</entry>
        <entry key="lblUpperGainLimit">Upper gain limit</entry>
        <entry key="lblUpperGainLimitFromTo">Upper gain limit from {0} to {1} ({2})</entry>
        <entry key="lblUpperGainLimitWithSlope">Upper gain limit with slope {0} dB/decade</entry>
        <entry key="lblLowerGainLimit">Lower gain limit</entry>
        <entry key="lblLowerGainLimitFromTo">Lower gain limit from {0} to {1} ({2})</entry>
        <entry key="lblLowerGainLimitWithSlope">Lower gain limit with slope {0} dB/decade</entry>
        <entry key="lblUpperGainPhaseLimit">Upper gain-phase limit</entry>
        <entry key="lblUpperGainPhaseLimitFromTo">Upper gain-phase limit from {0} to {1} ({2})</entry>
        <entry key="lblLowerGainPhaseLimit">Lower gain-phase limit</entry>
        <entry key="lblLowerGainPhaseLimitFromTo">Lower gain-phase limit from {0} to {1} ({2})</entry>
        <entry key="lblUpperTimeBound">Upper time response bound</entry>
        <entry key="lblUpperTimeBoundFromTo">Upper time response bound from {0} to {1} ({2})</entry>
        <entry key="lblLowerTimeBound">Lower time response bound</entry>
        <entry key="lblLowerTimeBoundFromTo">Lower time response bound from {0} to {1} ({2})</entry>
        
        <!-- plotconstr editor strings -->
        <entry key="errDeleteLastEdgeOfNew">A new requirement must contain at least one row.</entry>
        <entry key="errChangeVertices">The number of vertices cannot be changed from the command line, use the "addVertex" method.</entry>
        <entry key="errSameNumberOfRows">The values of the "xCoords" and "yCoords" properties must have matching number of rows.</entry>
        <entry key="errDataInconsistentRows">The "{0}" property must have {1,number,integer} rows to match the size of the constraint.</entry>
        <entry key="errPropertyFiniteNumeric">The value of the "{0}" property must be numeric and finite.</entry>
        <entry key="err2DData">Requirement data cannot have more than two dimensions.</entry>
        <entry key="errColumnSize">The second dimension of the "{0}" property must be of size "{1,number,integer}".</entry>
        <entry key="errUnknownUnit">The first argument of the "{0}" method must be 'xUnits' or 'yUnits'.</entry>
        <entry key="errHelpPage">Unable to find documentation help page: {0} topic: {1}</entry>
        <entry key="errDuplicateVertex">A vertex already exists at the requested location. Specify a different location to add a new vertex.</entry>
        <entry key="errPolygonOrientation">The value of the "Orientation" property must be 'horizontal' or 'vertical' or 'both'.</entry>
        <entry key="errArgumentDimension">The value of the "{0}" property must be a double matrix with two columns.</entry>
        <entry key="errArgumentType" note="stringDatatypeUpdate">The "{0}" property must be a character vector.</entry>
        <entry key="errFeedbackSignWithOpenLoop">The "FeedbackSign" property must be one of -1 or 0 or 1.</entry>
        <entry key="errFeedbackSign">The "FeedbackSign" property must be one of -1 or 1.</entry>
        <entry key="errGPMarginNonSquare">The first input argument of the "eval" command must be a linear system with the same number of inputs and outputs.</entry>
        <entry key="errInstallCST">The Control System Toolbox software must be installed to create a frequency-domain requirement.</entry>
        <entry key="errGainOrPhaseMargin">The "setData" command cannot be used to set both the gain and phase margins. Create separate objects for phase margin and gain margin requirements.</entry>
        <entry key="errFRD">The requirement "{0}" can not be applied to models of class "frd". </entry>
        <entry key="errDesignRequirement">Design Requirement Error </entry>
        <entry key="errNoDataToEdit">There is no requirement data to edit.</entry>
        <entry key="warnRecreateClassNotDefined">Could not load the saved requirement class {0}. The class declaration must be installed and on the MATLAB path.</entry>
        <entry key="warnSetParamValue">Encountered a problem setting the "{0}" property of a "{1}" class instance to the value "{2}", ignoring this property.</entry>
        <entry key="msgUpperLimit">Upper limit</entry>
        <entry key="msgLowerLimit">Lower limit</entry>
        <entry key="msgUpperLimitFromTo">Upper limit from {0} to {1} ({2})</entry>
        <entry key="msgLowerLimitFromTo">Lower limit from {0} to {1} ({2})</entry>
        <entry key="msgUpperBound">Upper bound</entry>
        <entry key="msgLowerBound">Lower bound</entry>
        <entry key="msgLowerScalarBound">Lower bound of {0}</entry>
        <entry key="msgUpperScalarBound">Upper bound of {0}</entry>
        <entry key="msgEditConstraint">Edit constraint</entry>
        <entry key="msgFlipConstraint">Flip constraint</entry>
        <entry key="lblSettlingTime">Settling time</entry>
        <entry key="lblSettlingTimeLEQ">Settling time &lt;</entry> <!-- less than symbol -->
        <entry key="lblDampingRatioGEQ">Damping ratio ></entry>
        <entry key="lblPercentOvershootLEQ">Percent overshoot (&#37;) &lt;</entry> <!-- percent symbol, less than symbol-->
        <entry key="lblDampingRatio">Damping ratio</entry>
        <entry key="lblPercentOvershoot" note="percent units in % [0-100]">Percent overshoot</entry>
        <entry key="lblRegionConstraint">Region constraint</entry>
        <entry key="lblGainMarginGEQ">Gain margin ></entry>
        <entry key="lblPhaseMarginGEQ">Phase margin ></entry>
        <entry key="lblGainPhaseMargins">Gain &#38; Phase margins</entry> <!-- ampersand symbol -->
        <entry key="lblPhaseMargin">Phase margin</entry>
        <entry key="lblGainMargin">Gain margin</entry>
        <entry key="lblGainPhaseRequirement">Gain-Phase requirement</entry>
        <entry key="lblGainPhase_GM" translate="false">GM > {0} ({1})</entry>
        <entry key="lblGainPhase_PM" translate="false">PM > {0} ({1})</entry>
        <entry key="lblGainPhase_GM_PM" translate="false">GM > {0} ({1}) \n PM > {2} ({3})</entry>
        <entry key="lblGainPhase_None">Disabled margin requirements</entry>
        <entry key="lblGainPhase_Moved">Margin moved from {0} to {1} ({2})</entry>
        <entry key="lblLocatedAt">Located at</entry>
        <entry key="lblNaturalFrequency">Natural frequency</entry>
        <entry key="lblAtMost">at most</entry>
        <entry key="lblAtLeast">at least</entry>
        <entry key="lblClosedLoopPeakGainLEQ">Closed-Loop peak gain &lt;</entry> <!-- less than symbol -->
        <entry key="lblClosedLoopPeakGain">Closed-Loop peak gain</entry>
        <entry key="lblClosedLoopPeakGain_Moved">Closed-Loop peak gain moved from {0} to {1} ({2})</entry>
        
        <!-- StepResponse strings -->
        <entry key="lblStepReqInitialValue">Initial value</entry>
        <entry key="lblStepReqStepTime">Step time</entry>
        <entry key="lblStepReqRiseTime">Rise time</entry>
        <entry key="lblStepReqSettlingTime">Settling time</entry>
        <entry key="lblStepReqPercentOvershoot">% Overshoot</entry>
        <entry key="lblStepReqOvershoot">Overshoot:</entry>
        <entry key="lblStepReqFinalValue">Final value</entry>
        <entry key="lblStepReqPercentRise">% Rise</entry>
        <entry key="lblStepReqRise">Rise:</entry>
        <entry key="lblStepReqPercentSettling">% Settling</entry>
        <entry key="lblStepReqSettling">Settling:</entry>
        <entry key="lblStepReqPercentUndershoot">% Undershoot</entry>
        <entry key="lblStepReqUndershoot">Undershoot:</entry>
        <entry key="lblStepResponseBound">Step response bound</entry>
        <entry key="lblStepResponseBoundFromTo">Step response bound from {0} to {1} ({2})</entry>
        <entry key="lblStepResponseBound_Break">Break</entry>
        
        <!-- PWL strings -->
        <entry key="lblPWLEditorMagnitude">Mag. ({0})</entry>
        <entry key="lblPWLEditorFrequency">Freq. ({0})</entry>
        <entry key="lblPWLEditorSlope">Slope ({0})</entry>
        <entry key="lblPWLEditorWeight">Weight</entry>
        <entry key="lblPWLEditorInsert">Insert Edge</entry>
        <entry key="lblPWLEditorDelete">Delete Edge</entry>
        <entry key="lblPWLEditorStart">Edge Start</entry>
        <entry key="lblPWLEditorEnd">Edge End</entry>
        <entry key="lblPWLEditorSegments">Segments:</entry>
        <entry key="lblPWLEditorOpenLoopPhase">Open-Loop phase ({0})</entry>
        <entry key="lblPWLEditorOpenLoopGain">Open-Loop gain ({0})</entry>
        <entry key="lblPWLEditorVertices">Vertices:</entry>
        <entry key="lblPWLEditorReal">Real</entry>
        <entry key="lblPWLEditorImaginary">Imaginary</entry>
        <entry key="lblPWLEditorTime">Time ({0})</entry>
        <entry key="lblPWLEditorAmplitude">Amplitude</entry>
        <entry key="lblPWLEditor_StartTime" note="linefeed not needed if translation is short">Start\nTime ({0})</entry>
        <entry key="lblPWLEditor_StartAmplitude" note="linefeed not needed if translation is short">Start\nAmplitude</entry>
        <entry key="lblPWLEditor_EndTime" note="linefeed not needed if translation is short">End\nTime ({0})</entry>
        <entry key="lblPWLEditor_EndAmplitude" note="linefeed not needed if translation is short">End\nAmplitude</entry>
        <entry key="lblPWLEditorSlopeOfBound" note="linefeed not needed if translation is short">Slope\n({0})</entry>
        <entry key="lblNewDlgNewDesignRequirement">New Design Requirement</entry>
        <entry key="lblNewDlgDesignRequirementType">Design requirement type:</entry>
        <entry key="lblNewDlgDesignRequirementParameters">Design requirement parameters</entry>
        <entry key="lblNewDlgAddRequirement">Add Requirement</entry>
        <entry key="lblEdtDlgEditDesignRequirement">Edit Design Requirement</entry>
        <entry key="lblEdtDlgDesignRequirement">Design requirement:</entry>
        <entry key="errNoReqToAdd">No more requirements can be added to this plot.</entry>
        
        <!-- SignalTracking Strings -->
        <entry key="lblSignalTracking">Signal tracking</entry>
        <entry key="lblSignalTrackingStatus">Signal tracking from {0} to {1} ({2}).</entry>
        <entry key="lblSignalTracking_TimeVector">Time vector</entry>
        <entry key="lblSignalTracking_Amplitude">Amplitude</entry>
        <entry key="lblSignalTracking_SetData">Update reference signal data</entry>
        <entry key="lblSignalTracking_Method">Tracking Method</entry>
        <entry key="lblSignalTracking_SSE" note="abbreviation for Sum of Squared Error">SSE</entry>
        <entry key="lblSignalTracking_SAE" note="abbreviation for Sum of Absolute Error">SAE</entry>
        <entry key="lblSignalTracking_RobustCost">Use robust cost</entry>
        
        <!-- CustomBound Strings -->
        <entry key="lblCustomBound_Function">Function</entry>
        <entry key="lblCustomBound_Type" note="type as a category or group">Type</entry>
        <entry key="lblCustomBound_CustomBound">Custom requirement</entry>
        <entry key="msgCustomBound_InstanceDescription">Custom ''{0}'' requirement\nusing the function:\n{1}</entry>
        <entry key="lblCustomBound_Open">Edit MATLAB file containing function definition...</entry>
        <entry key="msgCustomBound_NewFile">The custom requirement function ''{0}'' does not exist. Do you want to 
        create a requirement function with this name?</entry>
        <entry key="lblCustomBound_Yes">Yes</entry>
        <entry key="lblCustomBound_No">No</entry>
        <entry key="errCustomBound_OpenError">The custom requirement function ''{0}'' does not specify a valid MATLAB file
        name.\n\nTo open the custom requirement function the function must be specified as the name of a valid MATLAB file.</entry>
        <entry key="errCustomBound_Function">The ''Requirement function'' field must be a function handle.</entry>
        <entry key="cmbCustomBound_GTE">Constrain function output to be &gt;= 0</entry>
        <entry key="cmbCustomBound_LTE">Constrain function output to be &lt;= 0</entry>
        <entry key="cmbCustomBound_EQ">Constrain function output to be == 0</entry>
        <entry key="cmbCustomBound_Min">Minimize the function output</entry>
        <entry key="cmbCustomBound_Max">Maximize the function output</entry>
        <entry key="lblCustomBound_ErrorIfViolated">Error if constraint is violated</entry>
        
        <!-- SignalProperty strings -->
        <entry key="lblSignalProperty_Property">Property</entry>
        <entry key="lblSignalProperty_SignalProperty">Signal property</entry>
        <entry key="lblSignalProperty_Weighted">Time-Weighted</entry>
        <entry key="ttipSignalProperty_TimeWeight">Specify if computation is weighted by time interval around
        samples (greatest effect is when time steps are very nonuniformly spaced)</entry>      
        <entry key="lblSignalProperty_Type" note="type as a category or group">Type</entry>
        <entry key="cmbSignalProperty_GTE">Constrain property to be &gt;= the bound</entry>
        <entry key="cmbSignalProperty_LTE">Constrain property to be &lt;= the bound</entry>
        <entry key="cmbSignalProperty_EQ">Constrain property to be == the bound</entry>
        <entry key="cmbSignalProperty_Min">Minimize the property</entry>
        <entry key="cmbSignalProperty_Max">Maximize the property</entry>
        <entry key="lblSignalProperty_Bound">Bound</entry>
        <entry key="lblSignalProperty_Minimum">Signal minimum</entry>
        <entry key="lblSignalProperty_Maximum">Signal maximum</entry>
        <entry key="lblSignalProperty_Mean">Signal mean</entry>
        <entry key="lblSignalProperty_Median">Signal median</entry>
        <entry key="lblSignalProperty_Variance">Signal variance</entry>
        <entry key="lblSignalProperty_IQR">Signal inter-quartile range</entry>
        <entry key="lblSignalProperty_Sum">Signal sum</entry>
        <entry key="lblSignalProperty_SquareSum">Signal sum square</entry>
        <entry key="lblSignalProperty_AbsSum">Signal sum absolute</entry>
        <entry key="lblSignalProperty_Final">Signal final value</entry>
        <entry key="errSignalProperty_Bound">The "Bound" value must be a finite real scalar.</entry>
        
        <!-- SignalBound Strings -->
        <entry key="lblSignalBound_Type" note="type as a category or group">Type</entry>
        <entry key="cmbSignalBound_LTE">Constrain signal to be &lt;= the bound</entry>
        <entry key="cmbSignalBound_GTE">Constrain signal to be &gt;= the bound</entry>
        
        <!-- PhasePlaneEllipse Strings -->
        <entry key="lblPhasePlaneEllipse_PhasePlaneEllipse">Phase plane ellipse</entry>
        <entry key="lblEllipse_Signal">Signal</entry>
        <entry key="btnEllipse_SelectSignal">Select</entry>
        <entry key="lblEllipse_ClickSelectSignal">Click to select signal.</entry>
        <entry key="lblEllipse_SemiaxLength">Semi-axis length</entry>
        <entry key="lblEllipse_Center">Center</entry>
        <entry key="lblEllipse_Angle">Angle (rad)</entry>
        <entry key="lblEllipse_TypeLabel" note="type as a category or group">Type</entry>
        <entry key="cmbEllipse_LTE">Signal &lt;= bound</entry>
        <entry key="cmbEllipse_GTE">Signal &gt;= bound</entry>
        <entry key="errEllipse_Semiaxes">The "Semiaxis" length must be a positive finite real scalar.</entry>
        <entry key="errEllipse_Center">The "Center" value must be a finite real scalar.</entry>
        <entry key="errEllipse_Angle">The "Angle" value must be a finite real scalar.</entry>
        <entry key="errEllipse_NumSignalsSelected">You must select exactly one signal to bound for the phase plane
        ellipse requirement.</entry>
        <entry key="errEllipse_TotalNumSignalsSelected">You must select two model signals to bound when creating
        a phase plane ellipse requirement.</entry>
        
        <!-- MonotonicVariable Strings -->
        <entry key="lblMonotonic_MonotonicConstraint">Monotonic constraint</entry>
        <entry key="lblMonotonic_Variable" note="variable as an expression that can be assigned any of a set of values">Variable</entry>
        <entry key="btnMonotonic_ShowVariable">Show in Model</entry>
        <entry key="lblMonotonic_Direction">Direction</entry>
        <entry key="lblMonotonic_Dimension">Dimension {0}</entry>
        <entry key="lblMonotonic_SpecifyVariable">Type or Select</entry>
        <entry key="ttipMonotonic_SpecifyVariable">Type or select a variable, or type an expression,
        e.g. A(1:3) or s.x</entry>
        <entry key="lblMonotonic_StrictIncrease">Strictly increasing</entry>
        <entry key="lblMonotonic_Increase">Increasing</entry>
        <entry key="lblMonotonic_Decrease">Decreasing</entry>
        <entry key="lblMonotonic_StrictDecrease">Strictly decreasing</entry>
        <entry key="lblMonotonic_NotConstrained">Not constrained</entry>
        <entry key="lblMonotonic_VariableAttributes">Entries must be expressions that include a single
        variable used by the model and must resolve to a nonscalar finite double array.</entry>
        <entry key="lblMonotonic_EmptyVariableSize">&lt;Empty&gt;</entry>
        <entry key="lblMonotonic_ArrayVariableSize">&lt;{0}-dimensional&gt;</entry>
        <entry key="lblMonotonic_SourceNotSpecified">You must select a variable.</entry>

        <!-- SmoothnessConstraint Strings -->
        <entry key="lblSmoothness_SmoothnessConstraint">Smoothness constraint</entry>
        <entry key="lblSmoothness_GradientBound">Gradient maximum magnitude:</entry>
        <entry key="lblSmoothness_DependentVar">Dependent Variable</entry>
        <entry key="btnSmoothness_ShowVariable">Show in Model</entry>
        <entry key="lblSmoothness_IndepVar">Independent Variable</entry>
        <entry key="lblSmoothness_Dimension">Dimension {0}</entry>
        <entry key="errSmoothness_GradientMagnitude">The "Gradient Magnitude" must be a nonnegative finite real scalar.</entry>
        <entry key="lblSmoothness_SpecifyDependentVariable">Type or Select</entry>
        <entry key="ttipSmoothness_SpecifyDependentVariable">Type or select a variable, or type an expression,
        e.g. A(1:3) or s.x</entry>
        <entry key="lblSmoothness_SpecifyIndependentVariable">Type or Select</entry>
        <entry key="ttipSmoothness_SpecifyIndependentVariable">Type a scalar or vector value, select a variable, or
        type a scalar or vector expression, e.g. A(1) or s.x</entry>
        <entry key="lblSmoothness_VariableAttributes">Entries must evaluate to finite real numeric constants, or may be
        expressions that include a single variable used by the model and must resolve to a finite double array.</entry>
        <entry key="lblSmoothness_VariableAttributesNonScalar">Entries must evaluate to nonscalar finite real numeric
        constants, or may be expressions that include a single variable used by the model and must resolve to a finite
        double array.</entry>
        <entry key="errSmoothness_IncompatibleIndependentVariable">The Independent Variable must be either a nonzero
        scalar, or a monotonic vector whose length matches the size of the Dependent Variable in the corresponding
        dimension.</entry>
        <entry key="cmbSmoothness_1toNvector">[1 2 ... N]</entry>
        <entry key="lblSmoothness_SizeOfVector">&lt;{0} element vector, or scalar&gt;</entry>
        <entry key="lblSmoothness_SourceNotSpecified">You must select a dependent variable and an independent variable
        for each dimension of the independent variable.</entry>
        
        <!-- FunctionMatching Strings -->
        <entry key="lblFunctionMatch_FunctionMatching">Function Matching</entry>
        <entry key="lblFunctionMatch_Type">Functional Relation</entry>
        <entry key="lblFunctionMatch_Linear">Linear</entry>
        <entry key="lblFunctionMatch_PureQuadratic">Quadratic with no cross-terms</entry>
        <entry key="lblFunctionMatch_FullQuadratic">Quadratic with all cross-terms</entry>
        <entry key="lblFunctionMatch_DependentVar">Dependent Variable</entry>
        <entry key="lblFunctionMatch_SpecifyDependentVariable">Type or Select</entry>
        <entry key="ttipFunctionMatch_SpecifyDependentVariable">Type or select a variable, or type an expression,
        e.g. A(1:3) or s.x</entry>
        <entry key="lblFunctionMatch_SpecifyIndependentVariable">Type or Select</entry>
        <entry key="ttipFunctionMatch_SpecifyIndependentVariable">Type a scalar or vector value, select a variable, or
        type a scalar or vector expression, e.g. A(1) or s.x</entry>
        <entry key="lblFunctionMatch_VariableAttributesNonScalar">Entries must evaluate to nonscalar finite real numeric
        constants, or may be expressions that include a single variable used by the model and must resolve to a finite
        double array.</entry>
        <entry key="btnFunctionMatch_ShowVariable">Show in Model</entry>
        <entry key="lblFunctionMatch_IndepVar">Independent Variable</entry>
        <entry key="lblFunctionMatch_Dimension">Dimension {0}</entry>
        <entry key="lblFunctionMatch_SizeOfVector">&lt;{0} element vector&gt;</entry>
        <entry key="lblFunctionMatch_CenterScaleCheckBox">Center and scale independent variables</entry>
        <entry key="lblFunctionMatch_CenterScale">Center and Scale Settings</entry>
        <entry key="lblFunctionMatch_AutoCenterScale">Use automatic centers and scales</entry>
        <entry key="lblFunctionMatch_CustomCenterScale">Use custom centers and scales</entry>
        <entry key="lblFunctionMatch_Center">Center</entry>
        <entry key="lblFunctionMatch_Scale">Scale</entry>
        <entry key="errFunctionMatch_Center">The "Center" must be a finite real scalar.</entry>
        <entry key="errFunctionMatch_Scale">The "Scale" must be a positive finite real scalar.</entry>
        <entry key="errFunctionMatch_IncompatibleIndependentVariable">The Independent Variable must be a monotonic
        vector whose length matches the size of the Dependent Variable in the corresponding dimension.</entry>
        <entry key="cmbFunctionMatch_1toNvector">[1 2 ... N]</entry>
        <entry key="lblFunctionMatch_SourceNotSpecified">You must select a dependent variable and an independent variable
        for each dimension of the independent variable.</entry>

        <!-- VectorProperty Strings -->
        <entry key="lblVectorProperty_VectorProperty">Vector property</entry>
        <entry key="lblVectorProperty_Property">Property</entry>
        <entry key="lblVectorProperty_Type" note="type as a category or group">Type</entry>
        <entry key="lblVectorProperty_Bound">Bound</entry>
        <entry key="lblVectorProperty_Variable" note="variable as an expression that can be assigned any of a set of values">Variable</entry>
        <entry key="lblVectorProperty_NoVariableSize">&lt;Empty&gt;</entry>
        <entry key="btnVectorProperty_ShowVariable">Show in Model</entry>
        <entry key="lblVectorProperty_SpecifyVariable">Type or Select</entry>
        <entry key="ttipVectorProperty_SpecifyVariable">Select a variable, or type an expression that evaluates
        to a vector, e.g. A(1:3) or s.x</entry>
        <entry key="lblVectorProperty_Mean">Vector mean</entry>
        <entry key="lblVectorProperty_Median">Vector median</entry>
        <entry key="lblVectorProperty_Variance">Vector variance</entry>
        <entry key="lblVectorProperty_IQR">Vector inter-quartile range</entry>
        <entry key="lblVectorProperty_Sum">Vector sum</entry>
        <entry key="lblVectorProperty_SquareSum">Vector sum of squares</entry>
        <entry key="lblVectorProperty_AbsSum">Vector sum of absolute values</entry>
        <entry key="lblVectorProperty_Minimum">Vector minimum</entry>
        <entry key="lblVectorProperty_Maximum">Vector maximum</entry>
        <entry key="lblVectorProperty_TypeLessEqual">Constrain property to be &lt;= the bound</entry>
        <entry key="lblVectorProperty_TypeGreaterEqual">Constrain property to be &gt;= the bound</entry>
        <entry key="lblVectorProperty_TypeEqual">Constrain property to be == the bound</entry>
        <entry key="lblVectorProperty_TypeMinimize">Minimize the property</entry>
        <entry key="lblVectorProperty_TypeMaximize">Maximize the property</entry>
        <entry key="errVectorProperty_Bound">The "Bound" must be a finite real scalar.</entry>
        <entry key="lblVectorProperty_VariableAttributes">Entries must be expressions that include a single
        variable used by the model and must resolve to a nonscalar finite double vector.</entry>
        <entry key="lblVectorProperty_VectorVariableSize">&lt;{0} element vector&gt;</entry>
        <entry key="lblVectorProperty_SourceNotSpecified">You must select a variable.</entry>        
        
        <!-- RelationalConstraint Strings -->
        <entry key="lblRelational_RelationalConstraint">Relational constraint</entry>
        <entry key="lblRelational_Variable1" note="variable as an expression that can be assigned any of a set of values">Variable 1</entry>
        <entry key="lblRelational_Variable2" note="variable as an expression that can be assigned any of a set of values">Variable 2</entry>
        <entry key="lblRelational_SpecifyVariable">Type or Select</entry>
        <entry key="ttipRelational_SpecifyVariable">Type or select a variable, or type an expression,
        e.g. A(1:3) or s.x</entry>
        <entry key="lblRelational_NoVariableSize">&lt;Empty&gt;</entry>
        <entry key="btnRelational_ShowVariable">Show in Model</entry>
        <entry key="lblRelational_Less" translate="false" note="translate=false set due no translatable content">&lt;</entry>
        <entry key="lblRelational_LessEqual" translate="false" note="translate=false set due no translatable content">&lt;=</entry>
        <entry key="lblRelational_Equal" translate="false" note="translate=false set due no translatable content">==</entry>
        <entry key="lblRelational_GreaterEqual" translate="false" note="translate=false set due no translatable content">&gt;=</entry>
        <entry key="lblRelational_Greater" translate="false" note="translate=false set due no translatable content">&gt;</entry>
        <entry key="lblRelational_NotEqual" translate="false" note="translate=false set due no translatable content">~=</entry>
        <entry key="lblRelational_VariableAttributes">Entries must be expressions that include a single
        variable used by the model and must resolve to a nonscalar finite double array.</entry>
        <entry key="lblRelational_DuplicateVariable">Variable 1 and Variable 2 should not be the same.</entry>
        <entry key="lblRelational_UseForVar1">Use for Variable 1</entry>
        <entry key="lblRelational_UseForVar2">Use for Variable 2</entry>
        <entry key="lblRelational_SourceNotSpecified">You must make a selection for both variables, and both must
        be the same size.</entry>
        <entry key="lblRelational_SizeOfVector">&lt;{0} element vector&gt;</entry>
        <entry key="lblRelational_ArraySize" translate="false" note="translate=false set due no translatable content">&lt;{0}&gt;</entry>

        <!-- Helper function messages for variable requirements -->
        <entry key="errVariable_BadExpression">The entry ''{0}'' cannot be used as a variable.</entry>
        <entry key="FilterVars_VectorInput">The allVars input to the filterVariables function must be a vector
        of variables.</entry>
        
        <!-- BodeGain Strings -->
        <entry key="lblBodeGain_Type" note="type as a category or group">Type:</entry>
        <entry key="cmbBodeGain_LTE">Constrain system to be &lt;= the bound</entry>
        <entry key="cmbBodeGain_GTE">Constrain system to be &gt;= the bound</entry>
        <entry key="lblBodeGain_StartFreq" note="linefeed not needed if translation is short; Freq is for frequency">Start Freq.\n({0})</entry>
        <entry key="lblBodeGain_StartMagnitude" note="linefeed not needed if translation is short; Mag is for magnitude">Start Mag.\n({0})</entry>
        <entry key="lblBodeGain_EndFreq" note="linefeed not needed if translation is short; Freq is for frequency">End Freq.\n({0})</entry>
        <entry key="lblBodeGain_EndMagnitude" note="linefeed not needed if translation is short; Mag is for magnitude">End Mag.\n({0})</entry>
        <entry key="lblBodeGain_SlopeOfBound" note="linefeed not needed if translation is short; dB abbreviates decibels">Slope\n(dB/decade)</entry>

    </message>
</rsccat>
