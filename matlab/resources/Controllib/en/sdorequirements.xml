<?xml version="1.0" encoding="UTF-8" ?>
<rsccat version="1.0" locale="en_US" product="Controllib" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../../schema/msgcat.xsd">
    <!-- Copyright 2010-2020 The MathWorks, Inc. -->
    <message>
        <!-- Common Strings -->
        <entry key="errUnexpected">Unexpected error: {0}</entry>
        <entry key="errRequirement_SetTwoArguments">The "set" command requires at least two input arguments.
        See sdo.requirements.Requirement.set for more information.</entry>
        <entry key="errRequirement_SetPropValuePairs">Use property-value pairs to specify property values.
        See help sdo.requirements.Requirement.set for more information.</entry>
        <entry key="errRequirement_NoMatchingProp" note="stringDatatypeUpdate">No property of the class "{0}" matches "{1}".
        Use the "properties" command to get the list of properties for this class.</entry>
        <entry key="errRequirement_GetArguments" note="stringDatatypeUpdate">The second argument of the "get" command must be a character vector with a valid property name or a 
        cell array of valid property names. See help sdo.requirements.Requirement.get for more information. </entry>
        <entry key="errRequirement_getViewNoOverload">The "{0}" class does not support graphical visualization.</entry>
        <entry key="errRequirement_getEditorNoOverload">The "{0}" class does not have an edit dialog.</entry>
        <entry key="errRequirement_getDataObj">The "getDataObj" method does not support the specified client.</entry>
        <entry key="errRequirement_checkPropRealFinite">The "{0}" property must be real and finite.</entry>
        <entry key="errRequirement_checkPropLogical">The "{0}" property must be logical.</entry>
        <entry key="errRequirement_checkPropNbyM">The "{0}" property must be an array with dimensions {1}.</entry>
        <entry key="errRequirement_checkPropScalar">The "{0}" property must be a scalar.</entry>
        <entry key="errRequirement_checkPropString" note="stringDatatypeUpdate">The "{0}" property must be a character vector.</entry>
        <entry key="errRequirement_checkPropPercent">The "{0}" property must be a percentage value in the range [0 100].</entry>
        <entry key="errRequirement_checkPropNonNegative">The "{0}" property must be greater-than-or-equal-to zero.</entry>
        <entry key="errRequirement_checkPropPositive">The "{0}" property must be greater-than zero.</entry>
        <entry key="errRequirement_checkPropNonPositive">The "{0}" property must be less-than-or-equal-to zero.</entry>
        <entry key="errRequirement_checkPropNegative">The "{0}" property must ne less-than zero.</entry>
        <entry key="errRequirement_ConstructorArguments">The "{0}" constructor requires property-value pairs to specify property values.</entry>
        <entry key="errRequirement_CSTInstall">The "{0}" class requires the Control System Toolbox.</entry>
        <entry key="errRequirement_evalRequirementNumArgs">The "evalRequirement" command requires a "TestPoint" input argument. See {0} for more information.</entry>
        
        <!-- Check Strings -->
        <entry key="errCheck_RelTol">The "RelTol" property must be a real non-negative finite scalar.</entry>
        <entry key="errCheck_AbsTol">The "AbsTol" property must be a real non-negative finite scalar.</entry>
        <entry key="errCheck_NormalizeViolation"><![CDATA[The "NormalizeViolation" property must be one of '{'''on'',''off'''}'.]]></entry>
        <entry key="errScalarCheck_evaluateTypeArg"><![CDATA[The "type" argument of the "evaluate" method must be one of '{'''<='',''>='',''=='''}'.]]></entry>
        <entry key="errScalarCheck_evaluateBoundArg">The "bound" argument of the "evaluate" method must be a finite real scalar.</entry>
        <entry key="errScalarCheck_evaluateValueArg">The "value" argument of the "evaluate" method must be a real numeric value.</entry>
        <entry key="errPWLCheck_evaluateTypeArg"><![CDATA[The "type" argument of the "evaluate" method must be one of '{'''<='',''>='''}'.]]></entry>
        <entry key="errPWLCheck_evaluateResponseArg">The "value" argument must be a real valued matrix with at least two columns.</entry>
        <entry key="errPWLCheck_evaluateBoundArg">The "bound" argument must be a structure with 'XData', 'YData', and 'OpenEnd' fields.</entry>
        
        <!-- SignalBound Strings -->
        <entry key="errSignalBound_TimeMagnitudeRows">The "BoundTimes" and "BoundMagnitudes" properties must have the same number of rows.
        Use the "set" method to change the number of rows in the "BoundTimes" and "BoundMagnitudes" properties simultaneously.</entry>
        <entry key="errSignalBound_TimeUnits">The "{0}" property must specify a valid time unit. See the "getValidTimeUnits" command for a list of valid time units.</entry> 
        <entry key="errSignalBound_Type"><![CDATA[The "Type" property must be one of '{'''<='',''>='''}'.]]></entry>
        <entry key="errSignalBound_evalRequirementTestPoint">The "TestPoint" argument of the "evalRequirement" command must be a timeseries object with finite real data or a finite 
        real numeric matrix where the first column is time and subsequent columns are signal values.</entry>
                
        <!-- StepResponseEnvelope Strings -->
        <entry key="errStepResponseEnvelope_Type"><![CDATA[The "Type" property is read-only and cannot be changed from ''<=''.]]></entry>
        <entry key="errStepResponseEnvelope_Tr_lt_Ts">The "RiseTime" property must be less-than the "SettlingTime" property.</entry>
        <entry key="errStepResponseEnvelope_U0_ne_Uf">The "InitialValue" and "FinalValue" properties must not be equal.</entry>
        <entry key="errStepResponseEnvelope_Ps_lt_Pr">The "PercentSettling" property must be less-than-or-equal-to the "PercentOvershoot" property and the 
        "PercentSettling" property must be less-than-or-equal-to 100-"PercentRise".</entry>
        <entry key="errStepResponseEnvelope_Ps_gt_z">The "PercentSettling" property must be greater-than-or-equal-to zero.</entry>
        <entry key="errStepResponseEnvelope_Pr_gt_z">The "PercentRise" property must be greater-than-or-equal-to zero.</entry>
        <entry key="errStepResponseEnvelope_Po_gt_z">The "PercentOvershoot" property must be greater-than-or-equal-to zero.</entry>
        <entry key="errStepResponseEnvelope_Pu_gt_z">The "PercentUndershoot" property must be greater-than-or-equal-to zero.</entry>
        
        <!-- SignalTracking Strings -->
        <entry key="errSignalTracking_ReferenceSignal">The "ReferenceSignal" property must be a timeseries object.</entry>
        <entry key="errSignalTracking_Type"><![CDATA[The "Type" property must be one of '{'''=='',''<='',''>='''}'.]]></entry>
        <entry key="errSignalTracking_Normalize"><![CDATA[The "Normalize" property must be one of '{'''on'',''off'''}'.]]></entry>
        <entry key="errSignalTracking_RobustCost"><![CDATA[The "RobustCost" property must be one of '{'''on'',''off'''}'.]]></entry>
        <entry key="errSignalTracking_Method"><![CDATA[The "Method" property must be one of '{'''SSE'',''SAE'',''Residuals'''}'.]]></entry>
        <entry key="errSignalTracking_InterpolationTimes"><![CDATA[The "InterpolationTimes" property must be one of '{'''Reference only'',''Testpoint only'',''Reference and Testpoint'''}'.]]></entry>
        <entry key="errSignalTracking_evalRequirementRefSignalDimensions">The "ReferenceSignal" property and "TestPoint" signal must have matching sizes.</entry>
        <entry key="errSignalTracking_evalRequirementRefSignal">The "RefSignal" argument of the "evalRequirement" command must be a timeseries object.</entry>
        <entry key="errSignalTracking_TimeWeights">The "Weights" property must be the same size as the "Time" field of the "ReferenceSignal" property.
        Use the "set" command to change the "Weights" and "ReferenceSignal" properties simultaneously.</entry>
        
        <!-- GainPhaseMargin Strings -->
        <entry key="errGainPhaseMargin_GainMargin">The "GainMargin" property must be a real finite positive scalar. Set the "GainMargin" property to [] to disable the 
        gain margin requirement. The "GainMargin" and "PhaseMargin" properties cannot both be empty.</entry>
        <entry key="errGainPhaseMargin_PhaseMargin">The "PhaseMargin" property must be a real finite positive scalar. Set the "PhaseMargin" property to [] to disable the
        phase margin requirement. The "PhaseMargin" and "GainMargin" properties cannot both be empty.</entry>
        <entry key="errGainPhaseMargin_Type"><![CDATA[The "Type" property must be one of '{'''>='',''=='',''max'''}'.]]></entry>
        <entry key="errGainPhaseMargin_evalRequirementTestPoint">The "TestPoint" argument of the "evalRequirement" command must be a SISO LTI object.</entry>
        
        <!-- PZSettlingTime Strings -->
        <entry key="errPZSettlingTime_Type"><![CDATA[The "Type" property must be one of '{'''<='',''=='',''min'''}'.]]></entry>
        <entry key="errPZSettlingTime_evalRequirementTestPoint">The "TestPoint" argument of the "evalRequirement" command must be an LTI object with at least one output.</entry>
        
        <!-- PZNaturalFrequency Strings -->
        <entry key="errPZNaturalFrequency_Type"><![CDATA[The "Type" property must be one of '{'''>='',''<='',''=='',''max'''}'.]]></entry>
        <entry key="errPZNaturalFrequency_evalRequirementTestPoint">The "TestPoint" argument of the "evalRequirement" command must be an LTI object with at least one output.</entry>
        
        <!-- PZDampingRatio Strings -->
        <entry key="errPZDampingRatio_DampingRatio">The "DampingRatio" property must be a real finite scalar in the range [0 1].</entry>
        <entry key="errPZDampingRatio_Type"><![CDATA[The "Type" property must be one of '{'''>='',''<='',''=='',''max'''}'.]]></entry>
        <entry key="errPZDampingRatio_evalRequirementTestPoint">The "TestPoint" argument of the "evalRequirement" command must be an LTI object with at least one output.</entry>
        <entry key="errPZDampingRatio_Overshoot">The "Overshoot" argument must be a real finite scalar in the range [0 100].</entry>
        
        <!-- ClosedLoopPeakGain Strings -->
        <entry key="errClosedLoopPeakGain_Type"><![CDATA[The "Type" property must be one of '{'''<='',''=='',''min'''}'.]]></entry>
        <entry key="errClosedLoopPeakGain_evalRequirementTestPoint">The "TestPoint" argument of the "evalRequirement" command must be a LTI object 
        with the same number of inputs and outputs.</entry>
        
        <!-- OpenLoopGainPhase Strings -->
        <entry key="errOpenLoopGainPhase_Type"><![CDATA[The "Type" property must be one of '{'''<='',''>='''}'.]]></entry>
        <entry key="errOpenLoopGainPhase_evalRequirementTestPoint">The "TestPoint" argument of the "evalRequirement" command must be a SISO LTI object.</entry> 
        
        <!-- FrequencyBound Strings -->
        <entry key="errFrequencyBound_Type"><![CDATA[The "Type" property must be one of '{'''<='',''>='''}'.]]></entry>
        <entry key="errFrequencyBound_FrequencyScale"><![CDATA[The "XScale" property must be one of '{'''linear'',''log'''}'.]]></entry>
        <entry key="errFrequencyBound_evalRequirementTestPoint">The "TestPoint" argument of the "evalRequirement" command must be a 
        real numeric matrix where the first column is frequency and subsequent columns are frequency dependent values.</entry>
        <entry key="errFrequencyBound_FrequencyUnits">The "{0}" property must specify a valid frequency unit. See the "getValidFrequencyUnits" command for a list of valid frequency units.</entry>
        <entry key="errFrequencyBound_MagnitudeUnits">The "{0}" property must specify a valid magnitude unit. See the "getValidMagnitudeUnits" command for a list of valid magnitude units.</entry>
        <entry key="errFrequencyBound_PhaseUnits">The "{0}" property must specify a valid phase unit. See the "getValidPhaseUnits" command for a list of valid phase units.</entry>
        <entry key="errFrequencyBound_evalRequirementTestPoint_LTI">The "TestPoint" argument of the "evalRequirement" command must be a LTI object with at least one output.</entry>
        <entry key="errFrequencyBound_NegativeAbsGain">The "{0}" property must be non-negative when the "{1}" property is set to 'abs'. 
        Use the "set" command to change the "{2}" and "{3}" properties simultaneously.</entry>
        <entry key="errFrequencyBound_FreqMagnitudeRows">The "{0}" property must have the same number of rows as the "{1}" property. Use the "set" command 
        to change the "{2}" and "{3}" properties simultaneously.</entry>
        <entry key="errFrequencyBound_FrequencyEdgePositive">The rows of the "{0}" property must define positive lengths.</entry>
        <entry key="errFrequencyBound_FeedbackSign">The "FeedbackSign" must be one of ''{0}''.</entry>
        
        <!-- CustomBound Strings -->
        <entry key="errCustomBound_Type"><![CDATA[The "Type" property must be one of '{'''<='',''>='',''=='',''min'',''max'''}'.]]></entry>
        <entry key="errCustomBound_Function">The "{0}" property must be a function handle.</entry>
        <entry key="errCustomBound_ConstraintViolated_NoName">The constraint is not satisfied and the "ErrorIfViolated" property is set true.</entry>
        <entry key="errCustomBound_ConstraintViolated">The constraint ''{0}'' is not satisfied and the "ErrorIfViolated" property is set true.</entry>
        
        <!-- SignalProperty Strings -->
        <entry key="errSignalProperty_evalRequirementTestPoint">The "TestPoint" argument of the "evalRequirement" command must be a timeseries object.</entry>
        <entry key="errSignalProperty_evalRequirementTestPointData">In the "TestPoint" argument of the "evalRequirement" command, the "Data"
        field must be a numeric type, but the type is {0}.</entry>
        <entry key="errSignalProperty_evalRequirementTestPointDataWithFunction">In the "TestPoint" argument of the "evalRequirement" command, 
        when the function is variance, iqr, or uses time-weighted computation, the "Data" field must be a floating-point type (double or single),
        but the type is {0}.</entry>

        <!-- Monotonic Requirement Strings -->
        <entry key="errMonotonic_Type"><![CDATA[The "Type" property must be a cell array where each element is one of
        ''<'', ''<='', ''>'', ''>='', or ''unconstrained''.]]></entry>
        <entry key="errMonotonic_evalRequirementTestPointDimension">The number of dimensions in the "TestPoint" argument of the "evalRequirements"
        command must be the same as the number of constraints in the "Type" property of the monotonic requirement.  The "Type" property is {0},
        which has {1} constraints, so the "TestPoint" argument must be a {1}-dimensional matrix, i.e. {2}.</entry>
        <entry key="errMonotonic_evalRequirementTestPointCharacteristics">The "TestPoint" argument of the "evalRequirement" command must be a real, nonempty,
        numeric array.</entry>
        <entry key="errMonotonic_evalRequirementTestPointEnoughData">The "TestPoint" argument of the "evalRequirement" command must have at least two elements in
        each dimension, except dimensions in which the corresponding "Type" of the requirement is unconstrained.</entry>

        <!-- Smoothness Requirement Strings -->
        <entry key="errSmoothness_GradientBoundCharacteristics">The "GradientBound" property must be a nonnegative real scalar.</entry>
        <entry key="errSmoothness_TypeNoSet"><![CDATA[The "Type" property must be ''<=''.]]></entry>
        <entry key="errSmoothness_evalRequirementTooManyInputs">The "evalRequirement" command must have no more than two inputs,
        the "TestPoint" and an optional independent variable input, "indepVar", which is a cell array of independent variable vectors corresponding
        to the "TestPoint".</entry>
        <entry key="errSmoothness_evalRequirementTestpointAttributes">The "TestPoint" argument of the "evalRequirement" command must be a real numeric
        vector, matrix, or multidimensional array.  It must not be scalar.</entry>
        <entry key="errSmoothness_evalRequirementDomain">The "indepVar" argument of the "evalRequirement" command must be a cell array.  Each element
        must be numeric, finite and real.  Each element may be either a non-zero scalar, or a monotonic vector whose length matches
        the corresponding dimension of the "TestPoint" argument to the "evalRequirement" command.</entry>
        
        <!-- Function Matching Requirement Strings -->
        <entry key="errFunctionMatching_evalRequirementTooManyInputs">The "evalRequirement" command must have no more than two inputs,
        the "TestPoint" and an optional "indepVar" input which is a cell array of independent variable vectors corresponding to the "TestPoint".</entry>
        <entry key="errFunctionMatching_evalRequirementTestPoint">The "TestPoint" input to the "evalRequirement" command must be a real
        numeric vector, matrix, or multidimensional array.  It must not be scalar.</entry>
        <entry key="errFunctionMatching_evalRequirementTestPointSize">The number of dimensions in the "TestPoint" input to the "evalRequirement" command
        must be the same as the number of elements in the "Centers" and "Scales" properties.  Use the "set" method to change the number of elements in
        the "Centers" and "Scales" properties simultaneously.</entry>
        <entry key="errFunctionMatching_evalRequirementDomainType">The "indepVar" independent variable input to the "evalRequirement" command must be a cell
        array, and the number of elements must be the same as the dimension the "TestPoint" input.</entry>
        <entry key="errFunctionMatching_evalRequirementDomain">Each element in the Independent Variable input to the "evalRequirement" command must
        be a real, numeric, monotonic vector whose length matches the corresponding dimension of the Dependent Variable.</entry>
        <entry key="errFunctionMatching_evalNamedRequirementDomain">In requirement "{0}" each element in the Independent Variable input to the
        "evalRequirement" command must be a real, numeric, monotonic vector whose length matches the corresponding dimension of the Dependent
        Variable.</entry>
        <entry key="warnFunctionMatching_evalRequirementConditioning">The function fit in the "evalRequirement" command is ill conditioned.
        This may be improved by setting the "Centers" property to, for example, the means of the Domain vectors, and the "Scales" property to,
        for example, the standard deviations of the Domain vectors.</entry>
        <entry key="errFunctionMatching_CentersAttributes">The "Centers" property must be a nonempty vector of finite real values.</entry>
        <entry key="errFunctionMatching_ScalesAttributes">The "Scales" property must be a nonempty vector of positive, finite, real values.</entry>
        <entry key="errFunctionMatching_CentersScales">The "Centers" and "Scales" properties must have the same number of elements.
        Use the "set" method to change the number of elements in the "Centers" and "Scales" properties simultaneously.</entry>
        
        <!-- Relational Constraint Strings -->
        <entry key="errRelational_evalRequirementNumArgs">The "evalRequirement" command requires two "TestPoint" input arguments.  Type
        "help sdo.requirements.RelationalConstraint.evalRequirement" for more information.</entry>
        <entry key="errRelational_evalRequirementTestPointCharacteristics">The testpoints must have the same size.</entry>
        <entry key="errRelational_Type"><![CDATA[The "Type" property must be ''<'', ''<='', ''>'', ''>='', ''=='', or ''~=''.]]></entry>

        <!-- VectorProperty Strings -->
        <entry key="errVectorProperty_evalRequirementTestPoint">The "TestPoint" argument of the "evalRequirement" command must be a 
        real numeric vector.</entry>

        <!-- PhasePlaneEllipse & PhasePlaneRegion Strings -->
        <entry key="errPhasePlaneEllipse_Radius">The "Radius" property must be a 1x2 real finite positive array.</entry>
        <entry key="errPhasePlaneEllipse_Center">The "Center" property must be a 1x2 real finite array.</entry>
        <entry key="errPhasePlaneEllipse_Rotation">The "Rotation" property must be a real finite scalar.</entry>
        <entry key="errPhasePlaneEllipse_Type"><![CDATA[The "Type" property must be one of '{'''<='',''>='''}'.]]></entry>
        <entry key="errPhasePlaneEllipse_Method">The "Method" property must be one of '{''''Maximum''', '''Residuals''''}'</entry>
        <entry key="errPhasePlaneEllipse_evalRequirementTestPoint">The "TestPoint" argument must be a nx2 numeric array.</entry>
        <entry key="errPhasePlaneEllipse_evalRequirementSignal">The "TestPoint" argument must be a timeseries with one data channel.</entry>
        <entry key="errPhasePlaneEllipse_evalRequirementSignalIntersection">The "TestPoint" signals must be timeseries with time bases that overlap.</entry>
        <entry key="errPhasePlaneRegion_XYRows">The "BoundX" and "BoundY" properties must have the same number of rows.
        Use the "set" method to change the number of rows in the "BoundX" and "BoundY" properties simultaneously</entry>
        <entry key="errPhasePlaneRegion_Type"><![CDATA[The "Type" property must be one of '{'''<='',''>='''}'.]]></entry>
        
    </message>
</rsccat>