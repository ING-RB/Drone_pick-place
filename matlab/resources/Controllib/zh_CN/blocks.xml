<?xml version="1.0" encoding="UTF-8"?>
<!--Copyright 2024 The MathWorks, Inc.-->

<rsccat xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.0" locale="zh_CN" product="Controllib" xsi:noNamespaceSchemaLocation="../../resources/schema/msgcat.xsd">
  <message>
    <entry key="maskPromptKFDescription">估计离散时间或连续时间线性系统的状态。支持时变系统。</entry>
    <entry key="maskPromptKFContainerFilterSettings">滤波器设置</entry>
    <entry key="maskPromptKFTabModelParameters">模型参数</entry>
    <entry key="maskPromptKFContainerSystemModel">系统模型</entry>
    <entry key="maskPromptKFContainerInitialEstimates">初始估计值</entry>
    <entry key="maskPromptKFContainerNoiseCharacteristics">噪声特征</entry>
    <entry key="maskPromptKFContainerAdditionalInports">附加输入端口</entry>
    <entry key="maskPromptKFContainerAdditionalOutports">附加输出端口</entry>
    <entry key="maskPromptKFTabOptions">选项</entry>
    <entry key="maskPromptKFTimeDomain">时域:</entry>
    <entry key="maskPromptKFTimeDomainDT">离散时间</entry>
    <entry key="maskPromptKFTimeDomainCT">连续时间</entry>
    <entry key="maskPromptKFX0DT">初始状态 x[0]:</entry>
    <entry key="maskPromptKFX0CT">初始状态 x(0):</entry>
    <entry key="maskPromptKFModelSource">模型源:</entry>
    <entry key="maskPromptKFSource">源:</entry>
    <entry key="maskPromptKFSourceDialog">对话框</entry>
    <entry key="maskPromptKFSourceInport">输入端口</entry>
    <entry key="maskPromptKFModelSourceLTIObject">LTI 状态空间变量</entry>
    <entry key="maskPromptKFModelSourceMatrices">单个 A、B、C、D 矩阵</entry>
    <entry key="maskPromptKFModelSourceVariable">变量:</entry>
    <entry key="maskPromptKFNumberOfStates">状态数量:</entry>
    <entry key="maskPromptKFNumberOfInputs">输入数目:</entry>
    <entry key="maskPromptKFNumberOfProcessNoiseInputs">过程噪声输入数目:</entry>
    <entry key="maskPromptKFNumberOfOutputs">输出数目:</entry>
    <entry key="maskPromptKFUseGH">使用 G 和 H 矩阵(默认 G=I，H=0)</entry>
    <entry key="maskPromptKFUseK">使用来自模型变量的卡尔曼增益 K</entry>
    <entry key="maskPromptKFP0DT">状态估计误差协方差 P[0]</entry>
    <entry key="maskPromptKFP0CT">状态估计误差协方差 P(0)</entry>
    <entry key="maskPromptKFTimeInvariantG">时不变 G</entry>
    <entry key="maskPromptKFTimeInvariantH">时不变 H</entry>
    <entry key="maskPromptKFTimeInvariantQ">时不变 Q</entry>
    <entry key="maskPromptKFTimeInvariantR">时不变 R</entry>
    <entry key="maskPromptKFTimeInvariantN">时不变 N</entry>
    <entry key="maskPromptKFOutputEstimatedY">输出估计的模型输出 y</entry>
    <entry key="maskPromptKFOutputP">输出状态估计误差协方差 P</entry>
    <entry key="maskPromptKFOutputPZ">输出状态估计误差协方差 Z</entry>
    <entry key="maskPromptKFAddEnablePort">添加输入端口 Enable 以控制测量更新</entry>
    <entry key="maskPromptKFAddInputPort">添加输入端口 u</entry>
    <entry key="maskPromptKFUseCurrentMeasurement">使用当前测量 y[n] 来改进 xhat[n]</entry>
    <entry key="maskPromptKFTs">采样时间(-1 表示继承):</entry>
    <entry key="errorInternal">内部错误: {0}</entry>
    <entry key="KFErrorInvalidModelObject">Error in system model. 
        The system model variable must be a state-space model.</entry>
    <entry key="KFErrorInvalidModelDims">Error in system model. The LTI 
            state-space variable must be a single model. Arrays of models 
        are not supported.</entry>
    <entry key="KFErrorDescriptorSingularE">Error in system model. 
        Descriptor systems with singular E matrices are not supported.</entry>
    <entry key="KFErrorNoDelaySupportCT">Error in system model. 
            Continuous-time models with delays are not supported. Use the "pade"
        command to approximate delays.</entry>
    <entry key="KFErrorNoDelaySupportDT">Error in system model. 
            Discrete-time models with delays are not supported. Use the "absorbDelay"
        command to replace delays by poles at z=0.</entry>
    <entry key="KFErrorNeedAtLeast1State">Error in system model. The system 
        must have at least one state.</entry>
    <entry key="KFErrorNeedAtLeast1Output">Error in system model. The system 
        must have at least one output.</entry>
    <entry key="KFErrorNeedAtLeast1Input">Error in system model. The system 
            must have at least one input when the "Add input port u" check 
        box in the "Options" tab of the block dialog is checked.</entry>
    <entry key="KFErrorSystemHasInputs">Error in system model and block 
            configuration. The system model has inputs (non-empty B and D matrix),
            however the "Add input port u" check box in the "Options" tab of 
        the block dialog is not checked.</entry>
    <entry key="KFErrorInvalidA">The A matrix must be numeric, real and
        consist of finite values.</entry>
    <entry key="KFErrorInvalidADims">A 矩阵必须为方阵。</entry>
    <entry key="KFErrorInvalidB">The B matrix must be numeric, real and 
        consist of finite values.</entry>
    <entry key="KFErrorInvalidBDims">The A and B matrices must have 
        the same number of rows.</entry>
    <entry key="KFErrorInvalidC">The C matrix must be numeric, real and 
        consist of finite values.</entry>
    <entry key="KFErrorInvalidCDims">The A and C matrices must have the 
        same number of columns.</entry>
    <entry key="KFErrorInvalidD">The D matrix must be numeric, real and 
        consist of finite values.</entry>
    <entry key="KFErrorInvalidDDims">The matrix D must have the same 
            number of rows with the C matrix. It must also have the same 
        number of columns with the B matrix.</entry>
    <entry key="KFErrorInvalidNumberOfStates">The 'Number of states'
        must be a positive integer.</entry>
    <entry key="KFErrorInvalidNumberOfProcessNoiseInputs">The 'Number 
        of process noise inputs' must be a non-negative integer.</entry>
    <entry key="KFErrorInvalidNumberOfInputs">The 'Number of inputs' 
            must be a positive integer. If the model does not have inputs         
            uncheck the "Add input port u" check box in the "Options" tab of 
        the block dialog.</entry>
    <entry key="KFErrorInvalidNumberOfOutputs">The 'Number of outputs'
        must be a positive integer.</entry>
    <entry key="KFErrorP0RealFinite">'状态估计误差协方差 P0' 必须为实数值并包含有限值。</entry>
    <entry key="KFErrorP0InvalidScalar">当指定为标量时，'状态估计误差协方差 P0' 必须为正值。</entry>
    <entry key="KFErrorP0InvalidVector">当指定为向量时，'状态估计误差协方差 P0' 不能包含负值或全部为零。其长度必须等于模型中的状态数: {0}</entry>
    <entry key="KFErrorP0InvalidMatrix">'状态估计误差协方差 P0' 矩阵必须具有基于系统中状态数的维度 [{0}×{1}]。</entry>
    <entry key="KFErrorP0NotPosDef">'状态估计误差协方差 P0' 矩阵必须为正定矩阵。</entry>
    <entry key="KFErrorP0InvalidType">'状态估计误差协方差 P0' 必须指定为标量、向量或矩阵。</entry>
    <entry key="KFErrorQRealFinite">'Q' 必须为实数值并由有限元组成。</entry>
    <entry key="KFErrorQInvalidScalar">当指定为标量时，'Q' 必须为正值。</entry>
    <entry key="KFErrorQInvalidVector">当指定为向量时，'Q' 不能包含负值或全部为零。其长度必须等于模型中的状态数: {0}</entry>
    <entry key="KFErrorQInvalidMatrix">矩阵 'Q' 必须具有基于系统中过程噪声输入数目的维度 [{0}×{1}]。</entry>
    <entry key="KFErrorQNotPosSemiDef">矩阵 'Q' 必须为半正定矩阵。</entry>
    <entry key="KFErrorQInvalidType">'Q' 必须指定为标量、向量或矩阵。</entry>
    <entry key="KFErrorRRealFinite">'R' 必须为实数值并由有限元组成。</entry>
    <entry key="KFErrorRInvalidScalar">当指定为标量时，'R' 必须为正值。</entry>
    <entry key="KFErrorRInvalidVector">当指定为向量时，'R' 不能包含负值或全部为零。其长度必须等于模型中的输出数目: {0}</entry>
    <entry key="KFErrorRInvalidMatrix">矩阵 'R' 必须具有基于系统中输出数目的维度 [{0}×{1}]。</entry>
    <entry key="KFErrorRNotPosDef">矩阵 'R' 必须为正定矩阵。</entry>
    <entry key="KFErrorRInvalidType">'R' 必须指定为标量、向量或矩阵。</entry>
    <entry key="KFErrorNRealFinite">'N' must be numeric, real and 
        consist of finite elements.</entry>
    <entry key="KFErrorNInvalidType">'N' must be either the scalar zero, 
            or a matrix with as many rows as the number of process noise inputs
            in the system ({0}) and as many columns as the number of outputs in 
        the system ({1}).</entry>
    <entry key="KFErrorInvalidX0">Initial state estimate 'X0' must be 
        numeric, real and finite.</entry>
    <entry key="KFErrorInvalidX0Dims">Initial state estimate 'X0' must 
            be a scalar or a vector. If it is specified as a vector its length 
        must match the number of states in the model: {0}</entry>
    <entry key="KFErrorInvalidG">The G matrix must be numeric, real and 
        consist of finite elements.</entry>
    <entry key="KFErrorInvalidGDims">The matrix G must have as many 
            rows as the number of states ({0}) and as many columns as the 
        number of process noise inputs in the system ({1}).</entry>
    <entry key="KFErrorInvalidH">The H matrix must be numeric, real and 
        consist of finite elements.</entry>
    <entry key="KFErrorInvalidHDims">The matrix H must have as many 
            rows as the number of system outputs ({0}) and as many columns as the 
        number of process noise inputs in the system ({1}).</entry>
    <entry key="KFErrorInvalidTsDT">The sample time must be a real, 
            finite scalar. Its value must either be -1 (inherited) or positive 
        for the discrete-time Kalman filter.</entry>
    <entry key="KFErrorModelUndefinedTs">The sample time of the system 
            model variable "{0}" is undefined. You must set the sample time of 
        this model explicitly, e.g. {1}.Ts=1.</entry>
    <entry key="KFErrorTimeDomainMismatch1">Time-domain mismatch. The 
            option chosen in the block dialog is discrete-time while the supplied 
        model variable is continuous-time.</entry>
    <entry key="KFErrorTimeDomainMismatch2">Time-domain mismatch. The 
            option chosen in the block dialog is continuous-time while the supplied 
        model variable is discrete-time.</entry>
    <entry key="KFErrorRbarNotPosDef">The matrix H*Q*H.'+H*N+N.'*H.'+R 
        must be positive definite.</entry>
    <entry key="KFErrorQRNNotPosSemiDef">The matrix [Q N; N.' R] must be 
            positive semi-definite. The N matrix is the most likely cause of this 
        problem.</entry>
    <entry key="KFErrorQRNbarNotPosSemiDef">The matrix [Qbar Nbar; Nbar.' Rbar] 
            where Qbar=G*Q*G.', Rbar=H*Q*H.'+H*N+N.'*H.'+R, Nbar=G*Q*H.'+G*N must 
            be positive semi-definite. The G and H matrices are the
        most likely cause of this problem.</entry>
    <entry key="KFErrorRicattiConvergence">The block could not compute 
            a convergent Kalman estimator for this plant model and covariance 
            data. To remedy the problem:\n1. Make sure that all unstable poles 
            of A are observable through C (use MINREAL to check)\n2. Modify the 
            weights Q, R and N to make [G 0;H I]*[Q N;N'' R]*[G 0;H I]'' positive 
        definite (use EIG to check).</entry>
    <entry key="KFErrorUseKOutputPConflict">The "Output state 
            estimation error covariance P" setting in the "Options" tab 
            cannot be selected with the "Use the Kalman Gain K from the model 
            variable" setting located in the "Model Parameters" tab. The "Output 
            state estimation error covariance P" option is being unselected 
        automatically.</entry>
    <entry key="KFErrorInvalidDims">端口宽度或维度出错。连接到 "{1}" 模块的 "{0}" 输入端口的信号必须具有维度 [{2,number,integer}×{3,number,integer}]。</entry>
    <entry key="KFErrorInvalidDimsScalarExpansion">端口宽度或维度出错。连接到 "{1}" 模块的 "{0}" 输入端口的信号必须具有维度 [1×1], [{2,number,integer}×1] 或 [{3,number,integer}×{4,number,integer}]。</entry>
    <entry key="KFErrorDataTypeUnsupportedCT">数据类型出错。"{1}" 输入端口具有数据类型({2})。在估计连续时间状态时，模块 "{0}" 仅支持数据类型(double)。在估计离散时间状态时，它支持(double)和(single)。
        </entry>
    <entry key="KFErrorDataTypeUnsupportedDT">数据类型出错。模块 "{0}" 仅支持数据类型(double)或(single)。"{1}" 输入端口具有数据类型({2})。</entry>
    <entry key="KFErrorDataTypeUnsupportedEnableReset">数据类型出错。模块 "{0}" 的&lt;sldiag objui="inport" objparam="{1}" objname="{0}"&gt;输入端口 {1}&lt;/sldiag&gt; 仅支持(double)、(single)、(boolean)或整数数据类型。当前数据类型为({2})。</entry>
    <entry key="KFErrorDataTypeMismatch">数据类型出错。模块 "{0}" 的所有输入端口都必须具有其 "y" 输入端口的数据类型({1})。"{2}" 输入端口具有数据类型({3})。请考虑对此信号使用 "Data Type Conversion" 模块。</entry>
    <entry key="KFErrorPortSampleTimeInvalidDT">"{1}" 模块的 "{0}" 输入端口的端口采样时间出错。该模块正在估计离散时间状态，但连接到输入端口的信号具有连续时间采样时间。请考虑使用 "Rate Transition" 模块。</entry>
    <entry key="KFErrorPortSampleTimeInvalidCT">"{1}" 模块的 "{0}" 输入端口的端口采样时间出错。该模块正在估计连续时间状态，但连接到输入端口的信号不是连续时间。请考虑使用 "Rate Transition" 模块。</entry>
    <entry key="KFErrorPortSampleTimeMismatchDT">Error in port sample 
            time of the "{0}" inport of the "{1}" block. All block inports must 
            have the same discrete sample time. The inport "{2}" has the sample 
            and offset times [{3}, {4}] whereas the "y" inport has [{5},{6}]. 
            Consider using a "Rate Transition" block on this signal and 
        explicitly specifying its output port sample time.</entry>
    <entry key="KFErrorPortAndBlockSampleTimeMismatchDT">"{1}" 模块的 "{0}" 输入端口的端口采样时间出错。连接到输入端口({2})的信号的采样时间必须与为该模块指定的采样时间 Ts={3} 匹配。</entry>
    <entry key="KFErrorComplexSignal">复信号不匹配。"{1}" 的&lt;sldiag objui="inport" objparam="{0}" objname="{1}"&gt;输入端口 {0}&lt;/sldiag&gt; 需要实数数值类型的信号。然而，它由复数数值类型的信号驱动。
        </entry>
    <entry key="KFErrorInvalidKalmanGainFromSystemModel">Error in the 
            Kalman Gain K that was stored in the system model variable. It must 
            be a real, nonzero matrix with finite elements.
        </entry>
    <entry key="recursiveEstimationMaskRLSTitle">递归最小二乘估计器</entry>
    <entry key="recursiveEstimationMaskRLSDescription">求解线性最小二乘回归问题。</entry>
    <entry key="recursiveEstimationMaskTabModelParameters">模型参数</entry>
    <entry key="recursiveEstimationMaskTabAlgorithm">算法和模块选项</entry>
    <entry key="recursiveEstimationMaskGroupModelDescription">模型描述</entry>
    <entry key="recursiveEstimationMaskGroupAlgorithmOpts">算法选项</entry>
    <entry key="recursiveEstimationMaskGroupBlockOpts">模块选项</entry>
    <entry key="recursiveEstimationMaskSampleTime">采样时间(-1 表示继承):</entry>
    <entry key="recursiveEstimationMaskInitialEstimate">初始估计值:</entry>
    <entry key="recursiveEstimationMaskInitialEstimateNone">无</entry>
    <entry key="recursiveEstimationMaskInitialEstimateInternal">内部</entry>
    <entry key="recursiveEstimationMaskInitialEstimateExternal">外部</entry>
    <entry key="recursiveEstimationMaskNumberOfParameters">参数数目:</entry>
    <entry key="recursiveEstimationMaskInitialParameterValues">初始参数值:</entry>
    <entry key="recursiveEstimationMaskParameterCovariance">参数协方差矩阵:</entry>
    <entry key="recursiveEstimationMaskEstimationMethod">估计方法:</entry>
    <entry key="recursiveEstimationMaskEstimationMethodFF">遗忘因子</entry>
    <entry key="recursiveEstimationMaskEstimationMethodKF">卡尔曼滤波器</entry>
    <entry key="recursiveEstimationMaskEstimationMethodNG">归一化梯度</entry>
    <entry key="recursiveEstimationMaskEstimationMethodUG">梯度</entry>
    <entry key="recursiveEstimationMaskAdaptationParameterFF">遗忘因子:</entry>
    <entry key="recursiveEstimationMaskAdaptationParameterNCM">过程噪声协方差:</entry>
    <entry key="recursiveEstimationMaskAdaptationParameterAG">自适应增益:</entry>
    <entry key="recursiveEstimationMaskAdaptationParameterNormalizationBias">归一化偏差:</entry>
    <entry key="recursiveEstimationMaskOutputError">输出估计误差</entry>
    <entry key="recursiveEstimationMaskOutputCovariance">输出参数协方差矩阵</entry>
    <entry key="recursiveEstimationMaskInputEnable">添加使能端口</entry>
    <entry key="recursiveEstimationMaskTimeVarying">时变</entry>
    <entry key="recursiveEstimationMaskInputProcessing">输入处理:</entry>
    <entry key="recursiveEstimationMaskFrameBased">基于帧</entry>
    <entry key="recursiveEstimationMaskSampleBased">基于采样</entry>
    <entry key="recursiveEstimationMaskHistory">历史记录:</entry>
    <entry key="recursiveEstimationMaskInfinite">无限</entry>
    <entry key="recursiveEstimationMaskFinite">有限</entry>
    <entry key="recursiveEstimationMaskWindowLength">窗长度:</entry>
    <entry key="recursiveEstimationMaskInitialRegressors">初始回归量:</entry>
    <entry key="recursiveEstimationMaskInitialOutputs">初始输出:</entry>
    <entry key="recursiveEstimationMaskInitialInputs">初始输入:</entry>
    <entry key="recursiveEstimationTsInvalid">"Sample Time" must be a positive scalar or -1 (inherited).</entry>
    <entry key="recursiveEstimationNoiseCovarianceScalarNotPosSemidef">"Process Noise Covariance", when specified as a scalar, must be non-negative.</entry>
    <entry key="recursiveEstimationNoiseCovarianceVectorDim">'"Process Noise Covariance", when specified as a vector, must contain {0} elements (the number of estimated parameters).</entry>
    <entry key="recursiveEstimationNoiseCovarianceVectorNotPosSemidef">"Process Noise Covariance", when specified as a vector, must have all its elements non-negative.</entry>
    <entry key="recursiveEstimationNoiseCovarianceMatrixDim">"Process Noise Covariance", when specified as a matrix, must be square with {0} rows and columns (the number of estimated parameters).</entry>
    <entry key="recursiveEstimationNoiseCovarianceMatrixNotPosSemidef">"Process Noise Covariance", when specified as a matrix, must be symmetric and positive semi-definite.</entry>
    <entry key="recursiveEstimationNoiseCovarianceMatrixInvalid">"过程噪声协方差" 必须为标量、向量或二维矩阵。</entry>
    <entry key="recursiveEstimationParameterCovarianceMatrixScalarNotPosDef">"Parameter Covariance Matrix", when specified as a scalar, must be positive.</entry>
    <entry key="recursiveEstimationParameterCovarianceMatrixVectorDim">"Parameter Covariance Matrix", when specified as a vector, must have {0} elements (number of estimated model parameters).</entry>
    <entry key="recursiveEstimationParameterCovarianceMatrixVectorNotPosDef">"Parameter Covariance Matrix", when specified as a vector, must have all its elements positive.</entry>
    <entry key="recursiveEstimationParameterCovarianceMatrixMatrixDim">"Parameter Covariance Matrix" must be square with {0} rows and columns (number of estimated model parameters).</entry>
    <entry key="recursiveEstimationParameterCovarianceMatrixMatrixNotPosDef">"Parameter Covariance Matrix" must be square, symmetric and positive-definite.</entry>
    <entry key="recursiveEstimationParameterCovarianceMatrixMatrixInvalidType">"参数协方差矩阵" 必须为标量、向量或二维矩阵。</entry>
    <entry key="recursiveEstimationWindowShorterThanNumParams">"Window Length" must be equal to or greater than {0,number,integer} (the number of estimated parameters).</entry>
    <entry key="recursiveEstimationCheckSignalDimensionRLSRegressors1">端口宽度或维度出错。连接到 "{0}" 模块的 "回归量" 端口的信号必须是大小为 {1,number,integer} 的向量信号。请检查信号和模块对话框中的 "参数数目" 设置。</entry>
    <entry key="recursiveEstimationCheckSignalDimensionRLSRegressors2">端口宽度或维度出错。连接到 "{0}" 模块的 "回归量" 端口的信号必须是大小为 {1,number,integer} 的向量信号。这是因为模块对话框中的 "初始参数值" 设置有 {2,number,integer} 个元素。</entry>
    <entry key="recursiveEstimationCheckSignalDimensionRLSRegressors3">端口宽度或维度出错。"{0}" 模块的 "回归量" 端口需要一个二维信号，但找到的是一个 {1,number,integer} 维信号。请检查信号和模块对话框中的 "输入处理" 设置。</entry>
    <entry key="recursiveEstimationCheckSignalDimensionRLSRegressors4">端口宽度或维度出错。"{0}" 模块的 "回归量" 端口需要具有 {1,number,integer} 列的二维信号，但找到的信号包含 {2,number,integer} 列。</entry>
    <entry key="recursiveEstimationCheckSignalDimensionPolyModelInputs1">端口宽度或维度出错。连接到 "{0}" 模块的 "输入" 端口的信号必须是大小为 {1,number,integer} 的向量信号。这是因为估计的模型有 {2,number,integer} 个输入。请检查信号和模块对话框中 "B(q) (nb)中的参数数目" 设置中的元素数。</entry>
    <entry key="recursiveEstimationCheckSignalDimensionPolyModelInputs2">端口宽度或维度出错。连接到 "{0}" 模块的 "输入" 端口的信号必须是大小为 {1,number,integer} 的向量信号。这是因为估计的模型有 {2,number,integer} 个输入。请检查信号和模块对话框中的 "初始 B(q)" 设置。</entry>
    <entry key="recursiveEstimationCheckSignalDimensionPolyInitialParameterA">端口宽度或维度出错。模块 "{0}" 的 "InitialParameters" 输入总线端口中的信号 "A" 必须是大小为 [1×{1,number,integer}] 的矩阵信号，其中第二个维度是 A(q) 中的估计参数数目加 1 (na+1)。</entry>
    <entry key="recursiveEstimationCheckSignalDimensionPolyInitialParameterC">端口宽度或维度出错。模块 "{0}" 的 "InitialParameters" 输入总线端口中的信号 "C" 必须是大小为 [1×{1,number,integer}] 的矩阵信号，其中第二个维度是 C(q) 中的估计参数数目加 1 (nc+1)。</entry>
    <entry key="recursiveEstimationCheckSignalDimensionPolyInitialParameterD">端口宽度或维度出错。模块 "{0}" 的 "InitialParameters" 输入总线端口中的信号 "D" 必须是大小为 [1×{1,number,integer}] 的矩阵信号，其中第二个维度是 D(q) 中的估计参数数目加 1 (nd+1)。</entry>
    <entry key="recursiveEstimationCheckSignalDimensionPolyInitialParameterB">端口宽度或维度出错。模块 "{0}" 的 "InitialParameters" 输入总线端口中的信号 "B" 必须是大小为 [{1,number,integer}×{2,number,integer}] 的矩阵信号。第一个维度是估计的模型中的输入数目。第二个维度是模块对话框中 "B(q) (nb)中的参数数目" 和 "输入延迟(nk)" 设置之和的最大值。</entry>
    <entry key="recursiveEstimationCheckSignalDimensionPolyInitialParameterF">端口宽度或维度出错。模块 "{0}" 的 "InitialParameters" 输入总线端口中的信号 "F" 必须是大小为 [{1,number,integer}×{2,number,integer}] 的矩阵信号。第一个维度是估计的模型中的输入数目。第二个维度是模块对话框中 "F(q) (nf)中的参数数目" 设置加 1 之和的最大值。</entry>
    <entry key="recursiveEstimationCheckSignalDimensionNotScalar">端口宽度或维度出错。"{1}" 模块的 "{0}" 端口需要标量信号。</entry>
    <entry key="recursiveEstimationCheckSignalDimensionNotColumnVector">端口宽度或维度出错。"{1}" 的 "{0}" 端口需要列向量信号。请检查信号和模块对话框上的 "输入处理" 设置。</entry>
    <entry key="recursiveEstimationInvalidSignalDimension">"{1}" 的 "{0}" 端口需要维度为 [{2,number,integer}×{3,number,integer}] 的信号。</entry>
    <entry key="recursiveEstimationCheckSignalNotDiscrete">Error in port sample time. The signal connected to the "{0}" port of the "{1}" block must be a discrete-time signal.</entry>
    <entry key="recursiveEstimationCheckSignalDimensionPolyInitialCovariance">端口宽度或维度出错。连接到 "{0}" 模块的 "InitialCovariance" 端口的信号的维度必须为以下项之一: 标量、[{1,number,integer}×1] 向量或 [{2,number,integer}×{3,number,integer}] 矩阵。</entry>
    <entry key="recursiveEstimationCheckSignalDimensionRLSInitialParameters">端口宽度或维度出错。连接到 "{0}" 模块的 "InitialParameters" 端口的信号必须是大小为 {1,number,integer} 的向量信号。请检查信号和模块对话框中的 "参数数目" 设置。</entry>
    <entry key="recursiveEstimationCheckSignalDimensionRLSInitialCovariance">端口宽度或维度出错。连接到 "{0}" 模块的 "InitialCovariance" 端口的信号的维度必须为以下项之一: 标量、[{1,number,integer}×1] 向量或 [{2,number,integer}×{3,number,integer}] 矩阵。这是基于模块对话框中的 "参数数目" 设置确定的。</entry>
    <entry key="recursiveEstimationCheckSignalComplexity">端口复/实性出错: 连接到 "{1}" 模块的 "{0,number,integer}" 端口的信号必须为实信号。此端口不接受复信号。</entry>
    <entry key="recursiveEstimationCheckSignalTsMismatch">Error in port sample or offset times. The sample and offset times for the "{0}" and "{1}" ports of the "{2}" block must be equal. Consider inserting a "Rate Transition" block on one of the signals entering these ports.</entry>
    <entry key="recursiveEstimationCheckSignalInheritedTsMismatch">The input and output ports of the "{0}" block have inherited mismatching sample or offset times. Consider specifying the desired sample time in the block, or using "Signal Specification" blocks.</entry>
    <entry key="recursiveEstimationCheckSignalTsMismatchPort">Error in port sample time. The sample time specified in the block dialog of the "{0}" block and the sample time of the signal connected to its "{1}" port must be equal. Consider inserting a "Rate Transition" block on one of these signals.</entry>
    <entry key="recursiveEstimationCheckSignalTsUndetermined">Error in port sample time. The "{0}" block must operate at a discrete sample time. Either connect discrete-time signals to the "{1}" and "{2}" input ports of the block or explicitly provide a discrete time in the "Sample Time" setting in the block dialog.</entry>
    <entry key="recursiveEstimationCheckSignalDataTypeMismatch">数据类型出错。"{0}" 输入端口({1})和 "{4}" 模块的 "{2}" 输入端口({3})的数据类型必须相同。</entry>
    <entry key="recursiveEstimationCheckSignalDataTypeUnsupported">数据类型出错。"{2}" 模块的 "{0}" 和 "{1}" 输入端口的数据类型必须为单精度或双精度。</entry>
    <entry key="recursiveEstimationFiniteHistoryUnsupportedModelStructure">Finite history estimation is only supported for the AR, ARX and OE model structures.</entry>
    <entry key="recursiveEstimationFrameInputNotMatrixSL">{0} 的 "输入" 端口需要二维信号(矩阵)，但找到的信号包含 {1,number,integer} 个维度。请检查信号和模块对话框中的 "输入处理" 设置。</entry>
    <entry key="recursiveEstimationFrameInputWrongColDim">{0} 的 "输入" 端口需要具有 {1,number,integer} 列(模型中的输入数目)的信号，但找到的信号包含 {2,number,integer} 列。</entry>
    <entry key="recursiveEstimationACDFLeadingCoefficientNot1">为模块 "{0}" 提供的初始模型估计出错。连接到 "InitialParameters" 输入端口的 "{1}" 向量信号的第一个元素必须为 1。将忽略其值并假定为 1。</entry>
    <entry key="recursiveEstimationExportToPreviousVersionNormalizationBias">"{0}" 中的 NormalizationBias 参数不同于默认值 eps。在 Simulink 2015b 之前，此参数不可用。导出模型的行为可能与原始模型不同。</entry>
    <entry key="recursiveEstimationExportToPreviousVersionHasTimeVaryingAdaptationParameter">在 Simulink 2017b 之前，"{0}" 中的 HasTimeVaryingAdaptationParameter 参数不可用。导出模型的行为可能与原始模型不同。</entry>
    <entry key="recursiveEstimationExportToPreviousVersionUnsupportedModelStructure">在 Simulink 2014b 之前，"{1}" 中估计的模型结构 {0} 不可用。参数 ModelStructure 恢复为其默认值 ARX。不支持的参数 D0 和 F0 会被删除。导出模型的行为可能与原始模型不同。</entry>
    <entry key="recursiveEstimationSingularInitializationLS">"{0}" 中的初始化数据未包含足够的信息来唯一确定参数估计值。请考虑提供或更改 InitialRegressors 和 InitialOutputs。</entry>
    <entry key="recursiveEstimationSingularInitializationPoly">"{0}" 中的初始化数据未包含足够的信息来唯一确定参数估计值。请考虑提供或更改 InitialInputs 和 InitialOutputs。</entry>
    <entry key="recursiveEstimationSingularEstimation">提供给 "{0}" 的数据未包含足够的信息来唯一确定参数估计值。请考虑提供信息性数据，无法提供时则禁用参数自适应。</entry>
    <entry key="maskPromptKFTitle">Kalman Filter</entry>
    <entry key="maskPromptKFA">A:</entry>
    <entry key="maskPromptKFB">B:</entry>
    <entry key="maskPromptKFC">C:</entry>
    <entry key="maskPromptKFD">D:</entry>
    <entry key="maskPromptKFG">G:</entry>
    <entry key="maskPromptKFH">H:</entry>
    <entry key="maskPromptKFQ">Q:</entry>
    <entry key="maskPromptKFR">R:</entry>
    <entry key="maskPromptKFN">N:</entry>
  </message>
</rsccat>
