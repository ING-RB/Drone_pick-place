<?xml version="1.0" encoding="UTF-8" ?>
<!--Copyright 2017-2025 The MathWorks, Inc. -->
<rsccat version="1.0" locale="en_US" product="SimulinkFixedPoint" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../../schema/msgcat.xsd">
  <message>
    <entry key="resumeOptimization">Resuming data type optimization...</entry>
    <entry key="turnNSOn">PerformNeighborhoodSearch option will be turned on.</entry>
    <entry key="incorrectToleranceType">Incorrect tolerance type.</entry>
    <entry key="emptyWordLengthDomain">The specified allowable word lengths are incompatible with the hardware configuration of the model.</entry>
    <entry key="nsstop">Neighborhood search complete.</entry>
    <entry key="iterationsExceedMaxIterations">Maximum number of iterations completed.</entry>
    <entry key="elapsedTimeExceedsMaxTime">Elapsed time reached maximum time limit.</entry>
    <entry key="exhaustedPatience">Reached limit of number of iterations without updates to the current best solution.</entry>
    <entry key="stagnantRepository">Unable to find an unevaluated solution.</entry>
    <entry key="externalEvent">External event terminated the process.</entry>
    <entry key="preprocessingActionFailed">Unable to {0} for model ''{1}'', reverting to original settings.</entry>
    <entry key="removeSameDTActionDescription">remove requirement for all inputs to share a data type</entry>
    <entry key="modelSettingsActionDescription">edit model-wide settings</entry>
    <entry key="replaceInheritanceAction">remove inheritance settings</entry>
    <entry key="noConstraints"><![CDATA[No behavioral constraints found. Consider adding signal tolerances during setup or find out more about <a href="matlab:helpview(fullfile(docroot,'fixedpoint','fixedpoint.map'), 'FPT_BehavioralConstraints')">behavioral constraints</a> by visiting our <a href="matlab:helpview(fullfile(docroot,'fixedpoint','fixedpoint.map'), 'fxpopt_bestpractices')">best practices</a> documentation for fixed-point optimization.]]></entry>
    <entry key="invalidConstraint">Invalid tolerance found. Unable to set tolerance for block path {0} and port index {1}.</entry>
    <entry key="newLocalOptimalSolution">Updated best found solution, cost: {0}</entry>
    <entry key="enginePreprocessing">Preprocessing</entry>
    <entry key="engineRunningSolver">Running the optimization solver</entry>
    <entry key="modelingOptimizationProblem">Modeling the optimization problem</entry>
    <entry key="constructingDecisionVariables">Constructing decision variables</entry>
    <entry key="evaluatingSolution">Evaluating new solution: cost {0}, {1}</entry>
    <entry key="unableToExplore">Exploring an invalid solution. To restore the model to a working state, revert the changes.</entry>
    <entry key="unableToModel"><![CDATA[Unable to find any elements that can accept fixed-point data types in the system under design. For troubleshooting information, see <a href="matlab:helpview(fullfile(docroot,'fixedpoint','fixedpoint.map'), 'fxpopt_troubleshoot1')">Troubleshooting Data Type Optimization</a> in the documentation.]]></entry>
    <entry key="engineFinished">Optimization has finished.</entry>
    <entry key="engineFinishedNoValidSolution"><![CDATA[Unable to find a valid fixed-point implementation, reverting changes. See the <a href="matlab:helpview(fullfile(docroot,'fixedpoint','fixedpoint.map'), 'fxpopt_troubleshoot2')">documentation</a> for more information.]]></entry>
    <entry key="engineFinishedNoFeasibleSolution">Unable to find a fixed-point implementation that satisfies the behavioral constraints.</entry>
    <entry key="engineFinishedFeasibleSolution">Fixed-point implementation that satisfies the behavioral constraints found. The best found solution is applied on the model.</entry>
    <entry key="solutionCost">Total cost: {0}</entry>
    <entry key="solutionDifference">Maximum absolute difference: {0}</entry>
    <entry key="exploreSolution">Use the explore method of the result to explore the implementation.</entry>
    <entry key="infSimulationTime">Detected infinite simulation time for model {0}. Cannot proceed.</entry>
    <entry key="solutionMetConstraints">meets the behavioral constraints.</entry>
    <entry key="solutionDidNotMeetConstraints">does not meet the behavioral constraints.</entry>
    <entry key="outcomeNoValidSolution">Unable to find a valid fixed-point implementation.</entry>
    <entry key="conflictingSimulationInputVectorEntries">Conflicting entries found for property {0}.</entry>
    <entry key="conflictingSimulationInputEntries">Merging of property {0} is not defined.</entry>
    <entry key="missingMergingResolutionStrategy">Merging behavior is not defined for the property  {0}.</entry>
    <entry key="invalidScenariosSingleTopModel">Invalid scenarios definition. Simulation input objects must refer to a single top model.</entry>
    <entry key="invalidScenariosEmptyModelName">Invalid scenarios definition. Simulation input objects must specify the ModelName property.</entry>
    <entry key="invalidStateSingleError">The following error was reported:</entry>
    <entry key="invalidStateMultipleErrors">Multiple errors were reported. Use the getSimulationOutput function of the OptimizationSolution objects to examine the errors.</entry>
    <entry key="specificationsUnmappedBlockParameter">The following block parameters do not map to an element that relates to data types and will not be used in the optimization process. Please consider using simulation scenarios instead.</entry>
    <entry key="specificationsInvalidDataTypeParameter">The block parameters above do not specify proper data type specifications.</entry>
    <entry key="specificationsConflicting">The following data type specifications conflict with one another. If applied, an update diagram error will occur. \n{0} \n{1}</entry>
    <entry key="commentCustomCostDictionary">Dictionary mapping block type to user defined cost function.</entry>
    <entry key="commentMaxIterations">Maximum number of iterations to perform.</entry>
    <entry key="commentMaxTime">Maximum amount of time for the optimization to run (in seconds).</entry>
    <entry key="commentPatience">Maximum number of iterations where no new best solution is found.</entry>
    <entry key="commentUseParallel">Whether to run iterations in parallel.</entry>
    <entry key="commentObjectiveFunction">Objective function used for optimization.</entry>
    <entry key="commentVerbosity">Level of information displayed at the command line during the optimization.</entry>
    <entry key="commentPerformNeighborhoodSearch">Perform a neighborhood search for the optimized solution.</entry>
    <entry key="commentEnforceLooseCoupling">Some blocks have a parameter that forces inputs to share a data type, or forces the output to share the same data type as the input.</entry>
    <entry key="commentUseDerivedRangeAnalysis">Run range analysis as part of range collection.</entry>
    <entry key="commentSafetyMargin">Safety margin for ranges.</entry>
    <entry key="commentDataTypeOverride">Data type override used for range collection.</entry>
    <entry key="commentHandleUnsupported">Method to handle unsupported constructs.</entry>
    <entry key="commentPerformSlopeBiasCancellation">Perform slope bias cancellation optimization.</entry>
    <entry key="commentAllowableWordlengths">Word lengths that can be used in your optimized system under design.</entry>
    <entry key="commentClearSDIOnEval">Run Simulink.sdi.clear after each evaluation to maintain minimal memory footprint.</entry>
    <entry key="commentInstrumentationContext">Restrict range collection to a level lower than the top model.</entry>
    <entry key="simManagerTitle">Data type optimization result</entry>
    <entry key="simManagerCost">Cost</entry>
    <entry key="simManagerMaxDiff">Maximum absolute difference</entry>
    <entry key="simManagerPass">Pass</entry>
    <entry key="unsupportedError">The above paths have constructs that do not support fixed-point data types. To surround unsupported constructs with Data Type Conversion blocks, set the advanced option "HandleUnsupported" to "Isolate".</entry>
    <entry key="checkUnsupported">Checking for unsupported constructs.</entry>
    <entry key="handleUnsupported">The paths printed in the Command Window have constructs that do not support fixed-point data types. These constructs will be surrounded with Data Type Conversion blocks.</entry>
    <entry key="startOptimization">Starting data type optimization...</entry>
      <entry key="optimizationParametersViewOnly">Optimization parameters</entry>
      <entry key="stoppingCriteriaViewOnly">Stopping criteria</entry>
      <entry key="advancedOptionsViewOnly">Advanced Options</entry>
      <entry key="derivedRangeResultsNotFound">No derived range results were found for block {0}. The "HandleUnsupported" option "ReplaceLUT" requires either design or derived ranges for target blocks.</entry>
    <entry key="replaceLUTRequiresMinMax">Replacement of unsupported blocks requires input signals to have derived min/max. Please either specify design ranges on the input to {0} or an upstream block.
    </entry>
      <entry key="nonUniqueBlockPathDetected">Non-unique block paths detected in model {0}. Cannot proceed with analysis required for lookup table replacement.</entry>
      <entry key="memberAssignmentProhibited">Assignment to member variables is prohibited by the class {0}.</entry>
      <entry key="lazyValWrongCtorSignature">Class 'LazyPropertyGet' accepts a function handle accepting 0 arguments. The function handle that was passed in accepts {0} arguments.</entry>
      <entry key="attemptingReplaceLUT">Attempting to replace unsupported blocks with Lookup Tables.</entry>
      <entry key="workingOnBlock">Working on block {0}.</entry>
      <entry key="couldNotReplaceBlock">Could not replace block {0}.</entry>
      <entry key="failureReason">Reason:\n{0}.</entry>
      <entry key="blockReplaced">Replaced block {0} with Lookup Table Approximation.</entry>
      <entry key="unknownObjective">Objective function {0} is not supported. Choose either 'BitWidthSum', 'OperatorCount', 'CustomOperatorWeight', or 'CustomCostFunction'.</entry> 
      <entry key="badCostFunctionSignatureWrongArity">Functions used as custom cost functions must accept one input argument.\nFunction: {0}\nBlock: {1}\nNumber of arguments: {2}.</entry>
      <entry key="customCostNoVarargin">Functions used as custom cost functions cannot accept a variable number of arguments.\nFunction: {0}\nBlock: {1}.</entry>
      <entry key="customCostInvalidFunctionSpecification">Unable to validate custom cost function. Please fix the issues listed:</entry>
</message>
</rsccat>
