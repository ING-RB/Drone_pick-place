<?xml version="1.0" encoding="UTF-8"?>
<!--Copyright 2024 The MathWorks, Inc.-->

<rsccat xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.0" locale="ja_JP" product="gpucoder" xsi:noNamespaceSchemaLocation="../../resources/schema/msgcat.xsd">
  <message>
    <entry key="MissingCppTarget">''{0}'' ターゲット ライブラリに coder.DeepLearningConfig を使用するには、TargetLang を 'C++' に設定しなければなりません。コード構成オブジェクトの TargetLang を 'C++' に設定してください。</entry>
    <entry key="MissingCppTargetError">コード構成オブジェクトの TargetLang プロパティが 'C++' に設定されていません。''{0}'' ターゲット ライブラリに coder.DeepLearningConfig を使用するには、TargetLang を 'C++' に設定しなければなりません。</entry>
    <entry key="MissingCppTargetErrorSimulinkSimulation">'SimTargetLang' プロパティの設定が無効です。深層学習ネットワークを使用するシミュレーションでは、ターゲット言語を 'C++' に設定しなければなりません。</entry>
    <entry key="MissingGpuConfig">Using coder.DeepLearningConfig for the ''{0}'' target library requires GpuConfig property to be enabled. Enabling GpuConfig property of the code configuration object.</entry>
    <entry key="GpuCoderNotInstalled">GPU Coder must be installed to use coder.DeepLearningConfig for ''{0}'' target library.</entry>
    <entry key="MissingGpuCoderLicense">GPU Coder のライセンスが見つかりません。ターゲット ライブラリ ''{0}'' に coder.DeepLearningConfig を使用するには、GPU Coder の有効なライセンスが必要です。</entry>
    <entry key="unsupported_compute_host">''{0}'' データ型を使ったコード生成は、Compute Capability が ''{1}'' 以上の GPU デバイスの場合にのみサポートされています。</entry>
    <entry key="unsupported_compute">Code generation for ''{0}'' data type is not supported on devices with compute capability less than ''{1}''. Set the GpuConfig.ComputeCapability property of the code configuration object to a compute capability supported for ''{0}'' data type.</entry>
    <entry key="int8_unsupported_hardware">GPU device with a compute capability of 6.2 does not support 8-bit integer precision.</entry>
    <entry key="unsupported_target_lib">Target library ''{0}'' is invalid. Supported values for target library are {1}.</entry>
    <entry key="unsupported_target_lib_cnncodegen">ターゲット ライブラリ ''{0}'' は cnncodegen でサポートされていません。cnncodegen は {1} のみをサポートします。</entry>
    <entry key="empty_target_lib_cnncodegen">有効なターゲット ライブラリが cnncodegen に対して指定されていません。cnncodegen は {0} のみをサポートします。</entry>
    <entry key="InvalidInputForDeepLearningConfig">coder.DeepLearningConfig を引数なしで、または名前と値の引数 'TargetLibrary' を指定して呼び出してください。たとえば、coder.DeepLearningConfig(TargetLibrary=targetLib) とします。</entry>
    <entry key="ValidDeepLearningTargets"> サポートされているターゲット ライブラリの値は {0} です。 </entry>
    <entry key="GpuConfigEnabledForCPUTargets">ターゲット ライブラリ ''{0}'' に coder.DeepLearningConfig を使用するには、GpuConfig を無効にする必要があります。コード構成オブジェクトの GpuConfig.Enabled を false に設定してください。</entry>
    <entry key="MissingHardwareConfigurationObject">構成オブジェクトの Hardware プロパティが空であると検出されたか、ARM Compute Library と互換性がないため、コード構成オブジェクトの GenCodeOnly オプションを true に設定します。 </entry>
    <entry key="UnsupportedConfigurationObject">Deep learning code generation with ARM Compute library is not supported for MEX build target. Use 'LIB', 'EXE' or 'DLL' as the build target type. </entry>
    <entry key="InvalidHwtarget">指定されたハードウェア ターゲット ''{0}'' が無効です。サポートされるハードウェア ターゲットは 'NVIDIA Jetson' と 'NVIDIA Drive' です。</entry>
    <entry key="UnsupportedHWtarget">For code generation with ARM Compute Library, the hardware target must be an ARM processor that supports NEON instruction set.</entry>
    <entry key="InvalidDeviceParams">Unable to connect to ''{0}'' target hardware to check for NEON instruction set support. To connect to target hardware,  parameters such as username, password, and device address must be specified correctly.</entry>
    <entry key="UnsupportedToolchainSpecified">Configured toolchain ''{0}'' is not supported for cross-compilation on {1}. Cross-compilation for deep learning on ARM is supported only in Linux.</entry>
    <entry key="InvaidToolchainPathSpecified">Specified Linaro {1} toolchain path ''{0}'' does not contain Linaro {1} binaries. Set a valid path for cross-compilation.</entry>
    <entry key="UnsupportedBatchSize">Code generation for ''{0}'' is supported only when number of observations equals to 1.</entry>
    <entry key="TargetArchitectureMismatch">arm-compute ターゲットが ''{1}'' ツールチェーンを使用するために、coder.DeepLearningConfig に指定された ArmArchitecture ''{0}'' が正しくありません。ArmArchitecture を強制的に ''{2}'' にします。</entry>
    <entry key="UnspecifiedEnvironmentVariable">Environment Variable ''{0}'' must be set pointing to the ''{1}''.</entry>
    <entry key="MissingARMComputeLibraries">Cross-compiled ARM Compute libraries ''{0}'' must be present in ''{1}'' to build the generated code.</entry>
    <entry key="ARMComputeArchitectureMismatch">Found ARM Compute library built with incorrect arch option. ARM Compute library must be built with arch option set to ''{0}'' when Toolchain property was specified as ''{1}''.</entry>
    <entry key="ARMComputeVersionMismatch">ARM Compute library version ''{1}'' used in cross-compilation does not match the ''{0}'' specified on the ArmComputeVersion property of coder.DeepLearningConfig.</entry>
    <entry key="UnsupportedCrossCompilation">''{0}'' ツールチェーンを使用するクロスコンパイルはサポートされていません。</entry>
    <entry key="UnspecifiedMKLDNNlibrary">環境変数 INTEL_MKLDNN が指定されていません。環境変数 INTEL_MKLDNN を、Intel MKL-DNN library ライブラリ インストールのルート フォルダーに設定してください。</entry>
    <entry key="IncorrectMKLDNNlibrary">指定した INTEL_MKLDNN パス ''{0}'' が存在しません。環境変数 INTEL_MKLDNN を、Intel MKL-DNN library ライブラリ インストールのルート フォルダーに設定してください。</entry>
    <entry key="unsupported_cnncodegen_remote">cnncodegen は、リモート クライアントではサポートされていません。</entry>
    <entry key="unsupportedOS">ターゲット ライブラリ ''{0}'' は macOS ではサポートされていません。</entry>
    <entry key="DLTargetLibUnsetSfun">深層学習では、シミュレーションのターゲット言語を C++ に設定しなければなりません。</entry>
    <entry key="SimulinkNotSupportCustomLayer">カスタム層をもつ深層学習ネットワークは Simulink ではサポートされていません。</entry>
    <entry key="InvalidInputForGetDeepLearningLayers">coder.getDeepLearningLayers を引数なしで、または名前と値の引数 'TargetLibrary' を指定して呼び出してください。たとえば、coder.getDeepLearningLayers(TargetLibrary=targetLib) とします。</entry>
    <entry key="InvalidEnableOpenMPFlag">Using target library ''{0}'' requires OpenMP library. In the code configuration object, set the 'EnableOpenMP' property to true. Alternatively, in the MATLAB Coder app, select the 'Enable OpenMP library if possible' check box.</entry>
    <entry key="InvalidEnableOpenMPFlagForMKLDNN">ターゲット ライブラリ 'mkldnn' を MEX コード生成に使用するには、OpenMP ライブラリが必要です。coder.MexCodeConfig オブジェクト内で、'EnableOpenMP' プロパティを true に設定してください。または、MATLAB Coder アプリ内で、[可能な場合は OpenMP ライブラリを有効にする] チェック ボックスをオンにしてください。</entry>
    <entry key="UnsupportedCmsisnnConfigOption">CMSIS-NN を使用した深層学習コード生成は、MEX ビルド ターゲットではサポートされていません。ビルドのターゲット タイプとして 'LIB' を使用してください。 </entry>
    <entry key="UnsupportedCmsisnnBuildType">CMSIS-NN を使用した深層学習コード生成は、'C++' TargetLang オプションをサポートしていません。TargetLang オプションとして 'C' を使用してください。 </entry>
    <entry key="EmptyCalibrationResultFile">No valid CalibrationResultFile property specified. Save the results from the calibrate function to a MAT-file and specify the location of this MAT-file using this property.</entry>
    <entry key="UnsupportedToolchainForMkldnn"> Deep learning code generation using {0} toolchain is not supported for {1} target.</entry>
    <entry key="UnsupportedTargetArchitectureForMacOS">MKL-DNN ターゲット ライブラリ用の深層学習コード生成は、ARM ベースのアーキテクチャをもつ macOS プラットフォームではサポートされていません。 </entry>
    <entry key="LearnablesCompressionUnsupportedForGpu">Setting LearnablesCompression to 'bfloat16' is not supported for GPU code generation with TargetLibrary 'none'. 'bfloat16' is only supported for CPU code generation. Set LearnablesCompression to 'None' for GPU code generation. </entry>
  </message>
</rsccat>
