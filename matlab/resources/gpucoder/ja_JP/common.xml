<?xml version="1.0" encoding="UTF-8"?>
<!--Copyright 2025 The MathWorks, Inc.-->

<rsccat xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.0" locale="ja_JP" product="gpucoder" xsi:noNamespaceSchemaLocation="../../resources/schema/msgcat.xsd">
  <message>
    <entry key="CUDAMEXRuntimeError">CUDA 対応プログラムの実行中にエラーが発生しました: [{0},{1}] {2}</entry>
    <entry key="CUDAMEXThinRuntimeErrorTerm">CUDA 対応プログラムの実行中にエラーが発生しました: [{0},{1}] {2}。追加のデバッグ情報を生成するには、GPU コード生成オプション ''{3}'' を有効にしてください。</entry>
    <entry key="OlderToolkitVersionWarning">古い CUDA ツールキットのバージョン v{0} がシステム パスに見つかったため、生成コードに互換性がない可能性があります。サポートされる CUDA ツールキットの最小バージョンは v{1} です。</entry>
    <entry key="OpenCLMEXRuntimeError">OpenCL 対応のプログラムを実行中にエラーが発生しました: [{0},{1}]\n{2}</entry>
    <entry key="HalfLowComputeVersion">関数 {0} に half 型が見つかりました。半精度データ型を含むコードの生成と実行には、Compute Capability 5.3 以上が必要です。</entry>
    <entry key="HalfLowCudaVersion">関数 {0} に half 型が見つかりました。半精度データ型を含むコードの生成と実行には、CUDA の Version 10.0 以上が必要です。</entry>
    <entry key="HalfUnsupportedMallocMode">関数 {0} に half 型が見つかりました。半精度データ型を含むコードを生成および実行するには、MallocMode を discrete に設定しなければなりません。</entry>
    <entry key="InvalidShape">ステンシル関数の形状は、値 {0} のいずれかでなければなりません。</entry>
    <entry key="InvalidStencil">Neighborhood in a stencil function must be a constant, positive integer valued scalar, or vector with elements corresponding to each dimension of the input array.</entry>
    <entry key="KernelPragmaInvalidDimType">coder.gpu.kernel() プラグマのカーネル引数が無効です。グリッドとブロックの次元は数値でなければなりません。</entry>
    <entry key="KernelPragmaInvalidDimSize">coder.gpu.kernel() プラグマのカーネル引数が無効です。グリッドとブロックの次元の引数は、スカラーまたは 3 要素配列でなければなりません。</entry>
    <entry key="KernelPragmaInvalidMinBlocksPerSM">coder.gpu.kernel() プラグマのカーネル引数が無効です。ストリーミング マルチプロセッサあたり最小ブロック数は定数の整数でなければなりません。</entry>
    <entry key="KernelPragmaNoForLoop">for ループの直前に配置されていない coder.gpu.kernel() プラグマを無視します。</entry>
    <entry key="NoKernelPragmaNoForLoop">無効なステートメントに対して指定された coder.gpu.nokernel() プラグマは無視されます。</entry>
    <entry key="IterationsPragmaNoForLoop">while ループまたはサポートされていないステートメントに対して指定された coder.gpu.iterations() プラグマは無視されます。</entry>
    <entry key="UnsupportedInputType">{1} への入力データ型 ''{0}'' はサポートされません。入力は数値、logical、または文字配列でなければなりません。 </entry>
    <entry key="LoopNestLowering_TooManyIterations">並列ループの入れ子の合計反復回数が上限 {0} を超えています。ループの入れ子は CPU で実行されます。</entry>
    <entry key="KernelPragmaInvalidBlockSize">coder.gpu.kernel() プラグマに指定されたブロック サイズが無効であるか、サポートされている範囲を超えています。既定のサイズが使用されます。</entry>
    <entry key="KernelPragmaInvalidGridSize">coder.gpu.kernel() プラグマに指定されたグリッド サイズが無効であるか、サポートされている範囲を超えています。既定のサイズが使用されます。</entry>
    <entry key="MMKernelIncompatDims">gpucoder.matrixMatrixKernel の入力 A と B の次元に互換性がありません。互換性をもたせるために、A または B の次元を変更してください。</entry>
    <entry key="MMKernelUnsupportedType">gpucoder.matrixMatrixKernel の入力は、数値または logical データ型でなければなりません。</entry>
    <entry key="MMKernelIncompatTypes">gpucoder.matrixMatrixKernel のオペランド A および B は同じデータ型でなければなりません。</entry>
    <entry key="MMKernelInvalidFunctionHandle">gpucoder.matrixMatrixKernel の 1 番目の引数は関数ハンドルでなければなりません。</entry>
    <entry key="MMKernelInvalidFunctionHandleInputNum">gpucoder.matrixMatrixKernel へのユーザー定義関数ハンドルが無効です。ユーザー定義関数には 2 つの入力引数が必要です。</entry>
    <entry key="MMKernelNonConstDim">gpucoder.matrixMatrixKernel の引数 {1} の次元 {0} は定数でなければなりません。</entry>
    <entry key="MMKernelInvalidTrans">gpucoder.matrixMatrixKernel の転置引数が無効です。gpucoder.matrixMatrixKernel の転置引数は {0} のいずれかでなければなりません</entry>
    <entry key="MMKernelWrongNumArgs">{0} の引数の数が無効です。3 個または 4 個の引数が必要ですが、受け取った数は {1} 個です。</entry>
    <entry key="MMKernelSizeTooLarge">gpucoder.matrixMatrixKernel の引数 {1} の次元 {0} が大きすぎます。</entry>
    <entry key="MMKernelFunctionHandleOutputNonScalar">gpucoder.matrixMatrixKernel へのユーザー定義関数ハンドルが無効です。ユーザー定義関数はスカラーを出力する必要があります。</entry>
    <entry key="MMKernelInvalidFunctionHandleOutputType">gpucoder.matrixMatrixKernel へのユーザー定義関数ハンドルが無効です。ユーザー定義関数は入力行列と同じデータ型のスカラーを出力する必要があります。</entry>
    <entry key="MMKernelScalarizedSim">MATLAB での gpucoder.matrixMatrixKernel の実行にはかなり長時間かかる可能性があります。vectorizedSim 引数を true に設定して、パフォーマンスを改善してください。</entry>
    <entry key="SelectdataInvalidPredicate">述語関数の引数は、1 つまたは 2 つの入力を受け入れ、1 つの出力を返す関数ハンドルでなければなりません。この関数の出力は logical スカラーでなければなりません。</entry>
    <entry key="SelectdataInvalidPostProcess">後処理関数の引数は、厳密に 1 つの入力を受け入れ、厳密に 1 つの出力を返す関数ハンドルでなければなりません。出力データ型は、数値、logical、または char のデータ型でなければなりません。</entry>
    <entry key="ParForHasUnsupportedFunctions">GPU コード生成でサポートされていない関数がループに含まれています。その関数に指定された coder.gpu.kernel() プラグマを無視します。</entry>
    <entry key="ParForHasUnsupportedFunctionsOrVariables">GPU コード生成でサポートされていない関数または変数がループに含まれています。その関数に指定された coder.gpu.kernel() プラグマを無視します。</entry>
    <entry key="StencilInvalidFunctionHandle">予期せぬステンシルの引数です。関数ハンドルが必要です。</entry>
    <entry key="StencilInvalidFunctionHandleInput">Invalid user-defined function handle to stencil. Expected the user-defined function to have {0} input arguments. Found {1} input argument(s) .</entry>
    <entry key="StencilInvalidFunctionHandleOutput">Invalid user-defined function handle to stencil. The function must return a scalar output.</entry>
    <entry key="StencilInvalidInput">ステンシル関数の入力は、次元が 2 以下の空でない数値配列または logical 配列でなければなりません。</entry>
    <entry key="NoValidGpuCoderToolchain">有効な GPU Coder ツールチェーンが見つかりません。サポートされている GPU Coder コンパイラのリストについては、GPU Coder のドキュメンテーションを参照してください。</entry>
    <entry key="NoValidMexGpuCompiler">選択された MEX コンパイラ ''{0}'' は、GPU コード生成でサポートされていません。サポートされている GPU MEX コンパイラのリストについては、GPU Coder のドキュメンテーションを参照してください。</entry>
    <entry key="StaticDeviceVariablesWarning">生成されたコードのデバイス関数に静的変数が含まれています。生成コードを正常にコンパイルするには、CUDA ツールキット 8.0 以降が必要です。</entry>
    <entry key="CallbackNotSupported">{1} に対して指定された {0} コールバック関数はサポートされていません。{2}</entry>
    <entry key="CallbackNotGpuFriendly">コールバック関数に GPU カーネルで実行できないコードが含まれます。</entry>
    <entry key="CallbackIsNested">コールバック関数は入れ子関数を参照してはなりません。代わりに無名関数の使用を検討してください。</entry>
    <entry key="CallbackWrongNumInputs">コールバック関数には {0} 個の入力引数が必要ですが、見つかった引数は {1} 個です。これは、コールバック関数が無名か入れ子であり、入力として明示的に渡されていない変数に関数がアクセスできる場合に発生することがあります。</entry>
    <entry key="CallbackExtraArgBadType">関数に、サポートされていない型の 1 つ以上の暗黙的パラメーターがあります。</entry>
    <entry key="LoopCarriedDependence">ループで運ばれる依存のため、ループを並列化できません。変数 ''{0}'' の使用を確認してください。</entry>
    <entry key="LoopCarriedDependenceNoVarName">ループで運ばれる依存のため、ループを並列化できません。</entry>
    <entry key="GlobalAccessError">ループ内でグローバル変数または永続変数が使用されているため、ループを並列化できません。</entry>
    <entry key="IndexVariableUseError">ループ外でインデックス変数が使用されているため、ループを並列化できません。</entry>
    <entry key="ParallelLoopWithBreak">break または return ステートメントが含まれるループは並列化できません。</entry>
    <entry key="LoopFailedSanityChecks">正常性チェックに失敗したため、ループを並列化できません。</entry>
    <entry key="PersistentMemPragmaIgnore">coder.gpu.persistentMemory() を無視します。{0}</entry>
    <entry key="PersistentMemPragmaInvalidVar">coder.gpu.persistentMemory() プラグマに無効な変数が見つかりました。</entry>
    <entry key="PersistentMemPragmaNotMLPersistent">coder.gpu.persistentMemory() プラグマと共に使用される変数 ''{0}'' が、MATLAB 永続変数ではありません。</entry>
    <entry key="PersistentMemVarDims">可変サイズ配列 ''{0}'' は GPU の永続的なメモリに移動されません。</entry>
    <entry key="PersistentMemMCOSNotSupported">coder.gpu.persistentMemory() プラグマは MATLAB クラスでサポートされていないため、無視されます。</entry>
    <entry key="PersistentMemNotUsed">coder.gpu.persistentMemory で指定されている変数 ''{0}'' は GPU で一度も使用されない可能性があります。</entry>
    <entry key="PersistentMemUnsupportedAccess">GPU の永続的なメモリに変数を移動できません。変数が、サポートされない方法でアクセスされているためです。</entry>
    <entry key="ConstantMemPragmaIgnore">coder.gpu.constantMemory() を無視します。{0}</entry>
    <entry key="ConstantMemPragmaInvalidVar">coder.gpu.constantMemory() プラグマに無効な変数が見つかりました。</entry>
    <entry key="ConstantMemPragmaMissingLoops">coder.gpu.constantMemory() プラグマが for ループ内に指定されていませんでした。</entry>
    <entry key="ConstantMemPragmaVarDef">coder.gpu.constantMemory() プラグマと共に使用される変数が、デバイス コード内で読み取り専用になっていません。</entry>
    <entry key="ConstantMemPragmaVarWritable">coder.gpu.constantMemory() プラグマと共に使用される変数が読み取り専用になっていません。これにより、定数メモリへのメモリ コピーが非効率的となる可能性があります。</entry>
    <entry key="ConstantMemMaxExceeded">デバイスの定数メモリ制限 {0} を超えました。変数 ''{1}'' の定数メモリを使用できません。</entry>
    <entry key="ConstantMemNotStaticMatrix">coder.gpu.constantMemory() プラグマと共に使用される変数が、固定サイズの行列ではありません。</entry>
    <entry key="ConstantMemPragmaUnsupportedType">coder.gpu.constantMemory() プラグマの変数のデータ型が無効です。</entry>
    <entry key="GPUMetricsFileOpenFailure">GPU コード生成メトリクス ファイル {0} を開けません。コード生成データは保存されません。</entry>
    <entry key="RegionErrorNoEnd">対応する領域の末端が見つかりません。</entry>
    <entry key="RegionErrorNoStart">対応する領域の先頭が見つかりません。</entry>
    <entry key="RegionErrorNotValid">領域の先頭と領域の末端の配置が無効です。</entry>
    <entry key="RegionErrorOverlap">コード領域の無効なオーバーラップが見つかりました。</entry>
    <entry key="RegionErrorInsideKernel">領域の先頭と末端をカーネル内に配置することはサポートされていません。</entry>
    <entry key="oneLineDisplay">leakyReLU</entry>
    <entry key="Type">leakyReLU</entry>
    <entry key="ErrorVarModifiedOnCpuAndGpu">GPU Coder は、CPU と GPU の両方で 1 つの変数に同時に書き込みを行うステートメントをサポートしません。</entry>
    <entry key="ErrorDisqualifiedGpuIOVar">GPU Coder はこの変数を GPU 入力/出力として渡すことをサポートしていません。</entry>
    <entry key="ScreenerUnboundedVarSize">無制限の動的サイズ変数 {0} が見つかりました。変数を GPU にマッピングできません。</entry>
    <entry key="ScreenerCuBlasInParFor">cuBLAS 置換が並列カーネル推定を妨げている可能性があります。大きな GPU カーネルを推定するには、cuBLAS 置換を無効にすることを検討してください。</entry>
    <entry key="ScreenerCuSolverInParFor">cuSolver 置換が並列カーネル推定を妨げている可能性があります。大きな GPU カーネルを推定するには、cuSOLVER 置換を無効にすることを検討してください。</entry>
    <entry key="ScreenerCuFFTInParFor">cuFFT 置換が並列カーネル推定を妨げている可能性があります。大きな GPU カーネルを推定するには、cuFFT 置換を無効にすることを検討してください。</entry>
    <entry key="ScreenerNonCoalescedAccess">変数 {0} への非結合アクセスが検出されました。可能な場合は、変数を転置するか、外側のループを交換することを検討してください。</entry>
    <entry key="KernelFunLoopNotParallel">ループが並列化されていません。関数を含めるときに使用された coder.gpu.kernelfun() と依存関係の解析が、ループが並列であることを証明できませんでした。</entry>
    <entry key="GpuLoweringImperfectLoop">ループが完全な入れ子ではありません。ループ入れ子内の一部のループは並列化されません。</entry>
    <entry key="InvalidGpuConfigParameter">Error setting property {0} of class 'GpuConfig': Invalid value ''{1}''.\nAllowed values are:\n\t{2}</entry>
    <entry key="ParameterMustBePowerOf2">Error setting property {0} of class 'GpuConfig'. Value must be a power of 2.</entry>
    <entry key="MinMaxPoolSizeValues">GPU 構成パラメーターが無効です。'MinPoolSize' は 'MaxPoolSize' より小さい必要があります。</entry>
    <entry key="MultiInstanceCodeUnsupported">マルチインスタンスの再呼び出し可能なコードの生成は GPU Coder でサポートされていません。GPU コードを生成するためにこのオプションを無効にします。</entry>
    <entry key="CppPreserveClassesUnsupported">GPU Coder では、MATLAB クラスに対する C++ クラスの生成がサポートされていません。GPU コードを生成するためにこのオプションを無効にします。</entry>
    <entry key="DynamicMemoryAllocationForFixedSizeArraysUnSupported">固定サイズの配列の動的メモリ割り当ては、GPU Coder ではサポートされていません。GPU コードを生成するためにこのオプションを無効にします。</entry>
    <entry key="BwdistUnsupportedMultiDimImageError">GPU code generation not supported for embedded target when image dimension exceeds 3 with bwdist.</entry>
    <entry key="BwdistUnsupportedInputMethodError">bwdist による準ユークリッド距離メトリクスを使用する組み込みターゲットでの GPU コード生成はサポートされません。</entry>
    <entry key="BwdistUnsupportedMultiDimImage">3 を超えるイメージ次元の GPU コード生成は、bwdist でサポートされません。代わりに CPU (C/C++) コードを生成します。</entry>
    <entry key="BwdistUnsupportedInputMethod">準ユークリッド距離メトリクスの GPU コード生成は、bwdist でサポートされません。代わりに CPU (C/C++) コードを生成します。</entry>
    <entry key="MatchFeatureUnsupportedSearchMethod">Approximate メソッドの GPU コード生成はサポートされていません。代わりに CPU (C/C++) コードを生成します。</entry>
    <entry key="MatchFeaturesDimensionMisMatchError">FEATURES1 と FEATURES2 は同じ列数であることが必要です。</entry>
    <entry key="MatchFeaturesEmptyFeatureSetError">空でない特徴セットが必要です。</entry>
    <entry key="MatchFeaturesVarDims">可変入力サイズの GPU コード生成は最適化されません。コード生成を最適化するために、制限付き入力の使用を検討してください。</entry>
    <entry key="ImfilterUnsupportedMultiDimImage">GPU コードを生成するには、入力イメージが 1 次元、2 次元または 3 次元でなければなりません。</entry>
    <entry key="ImfilterUnsupportedKernelDim">GPU コードを生成するには、フィルター カーネルが 1 次元または 2 次元でなければなりません。</entry>
    <entry key="ImfilterComplexInputImage">GPU コード生成のデータ型が無効です。入力イメージは実数型でなければなりません。</entry>
    <entry key="ImfilterComplexKernelWithLogicalInputError">Invalid input combination. Input images of logical data type require filter kernels of real data type.</entry>
    <entry key="MorphOpUnsupportedStructuringElementDim">3-D 構造化要素向けの GPU コード生成は最適化されません。代わりに最適化されていないコードを生成します。</entry>
    <entry key="MorphOpUnsupportedNChannel3DImage">N チャネルの 3-D イメージ向けの GPU コード生成は、N が 3 より大きい場合は最適化されません。代わりに最適化されていないコードを生成します。</entry>
    <entry key="MorphOpUnsupportedUnboundedInputs">可変入力サイズの GPU コード生成は最適化されません。コード生成を最適化するために、制限付き入力の使用を検討してください。</entry>
    <entry key="MorphOpUnsupportedStreltype"> 非フラットな構造化要素向けの GPU コード生成は最適化されません。代わりに最適化されていないコードを生成します。</entry>
    <entry key="MorphOpUnsupportedInputDataError">入力データが無効です。GPU コード生成は、パックされた入力データにはサポートされていません。</entry>
    <entry key="WavedecLevelIsNotConstant">GPU コード生成を最適化するには、レベルはコンパイル時の定数でなければなりません。</entry>
    <entry key="Wavedec2LevelIsNotConstant">GPU コード生成を最適化するには、レベルはコンパイル時の定数でなければなりません。</entry>
    <entry key="MdwtdeclevelisNotConstant">GPU コード生成を最適化するには、レベルはコンパイル時の定数でなければなりません。</entry>
    <entry key="RegionfillUnsupportedSyntax">多角形の頂点 x および y を指定する GPU コード生成は最適化されません。</entry>
    <entry key="UnsupportedTypeAtomic">Input of type {0} is not supported for {1} function.</entry>
    <entry key="InputsNotOfSameTypeAtomic">関数 {0} の入力は同じデータ型でなければなりません。</entry>
    <entry key="InputsNotScalarAtomic">関数 {0} の入力は固定サイズのスカラー値でなければなりません。</entry>
    <entry key="UnsupportedTypeComputeAtomic">関数 {1} の {0} 型の入力は、Compute Capability が {2} 以上のデバイスでのみサポートされています。</entry>
    <entry key="CevalGpuDeviceFcnNoKernel">カーネルにマッピングされていない関数 {0} の呼び出し ceval('-gpudevicefcn', ...) が見つかりました。デバイス関数の呼び出しは、GPU カーネル内でのみ許可されています。</entry>
    <entry key="AtomicOpOnUnsupportedMemory">GPU 上でアトミック操作を実行できません。アトミック関数の呼び出しは、ループに含まれるすべての反復処理で共有される変数またはメモリ位置にのみ適用しなければなりません。</entry>
    <entry key="AtomicOpOnCpu">このアトミック関数の呼び出しは、GPU カーネルにマッピングされませんでした。操作は CPU 上で実行されます。</entry>
    <entry key="AtomicOpNotInLoop">このアトミック関数は、for ループ内で直接呼び出さなければなりません。</entry>
    <entry key="AtomicOpNeedsKernelPragma">このアトミック操作は、GPU 上で確実に操作が実行されるようにするため、coder.gpu.kernel() プラグマでタグ付けされたループ内で実行する必要があります。</entry>
    <entry key="Atomic64NotEnabled">Code generation for {1} with {0} data type requires 64-bit atomic operations. Set the EnableAtomic64 property of GpuConfig object to true.</entry>
    <entry key="GpucoderIncorrectNumArgs">Incorrect number of input arguments to the {0} function. See 'help {0}' for usage information.</entry>
    <entry key="GpucoderSortComplexInputs">データ型が無効です。関数 gpucoder.sort は複素数データ型をサポートしていません。</entry>
    <entry key="GpucoderReduceUnsupportedTypeForReduce">gpucoder.reduce は実数型または logical 型のデータのみ処理できます。</entry>
    <entry key="GpucoderReduceDimensionTooLarge">gpucoder.reduce の次元引数は、入力の次元数より大きくしてはなりません。</entry>
    <entry key="GpucoderReduceComplexInputs">関数 gpucoder.reduce は複素数データ型をサポートしていません。</entry>
    <entry key="GpucoderReduceExpectedPrepro">gpucoder.reduce の 4 番目の引数は、関数ハンドルでなければなりません。</entry>
    <entry key="GpucoderReduceInvalidPreprocessFcn">前処理関数は単項関数でなければなりません。</entry>
    <entry key="GpucoderReducePreprocessFcnUnsupportedType">前処理関数の出力は、数値または logical データ型の実数スカラーでなければなりません。</entry>
    <entry key="GpucoderReduceMultiplePreprocessFcn">関数 gpucoder.reduce は、複数の前処理関数をサポートしません。</entry>
    <entry key="GpucoderReduceFuncHandleInput">gpucoder.reduce の 2 番目の引数は、関数ハンドル、または関数ハンドルの行 cell 配列でなければなりません。</entry>
    <entry key="GpucoderReduceAnonymousFuncHandle">gpucoder.reduce は、無名関数ハンドルをサポートしていません。</entry>
    <entry key="GpucoderReduceTooManyFuncHandles">関数 gpucoder.reduce は、出力タイプが ''{1}'' である {0} 個を超える関数ハンドルをサポートしていません。</entry>
    <entry key="GpucoderReduceFuncHandleInvalid">gpucoder.reduce の ''{0}'' 関数ハンドル入力は、2 つの入力を受け入れ、同じデータ型の出力を 1 つ返さなければなりません。</entry>
    <entry key="GpucoderReduceFuncHandleUnsupportedType">関数ハンドル ''{0}'' の出力は、数値または logical データ型の実数スカラーでなければなりません。</entry>
    <entry key="GpucoderReducePreprocessing">前処理</entry>
    <entry key="GpucoderReduceReductionOperator">リダクション演算子</entry>
    <entry key="GpucoderReducePreprocessingCallbackInvalid">gpucoder.reduce に指定された前処理関数ハンドルは、GPU コード生成でサポートされていません。{0}</entry>
    <entry key="FunctionHandleInvalid">{0} に指定された関数ハンドルは、GPU コード生成でサポートされていません。{1}</entry>
    <entry key="FunctorWritesThroughParam">関数ハンドルは、参照により入力パラメーターに書き込みます。</entry>
    <entry key="FunctorNotQualifiedForGpu">関数ハンドルに GPU カーネルで実行できないコードが含まれます。</entry>
    <entry key="FunctorMayBeNested">このコードは入れ子関数を参照している可能性があります。最高のパフォーマンスを得るには、無名関数ハンドルを使用してください。</entry>
    <entry key="StencilfunVarsizedWindowUnsupported">可変サイズの配列のサポートが無効になっている場合、非定数のウィンドウ サイズはサポートされません。</entry>
    <entry key="StencilfunInvalidWindowSize">The window size argument must be a row vector of positive integers.</entry>
    <entry key="StencilfunInvalidStride">引数 stride は、要素が正の整数である定数の数値配列でなければなりません。</entry>
    <entry key="StencilfunInputUnsupportedType">入力配列は、数値または logical のデータ型でなければなりません。</entry>
    <entry key="StencilfunInvalidPaddingValue">パディング値は入力配列と同じ型のスカラーでなければなりません。</entry>
    <entry key="StencilfunInvalidPaddingValueComplexity">コード生成時に、入力配列が複素数の場合、パディング値には複素数のみ指定できます。</entry>
    <entry key="StencilfunInvalidPreprocess">前処理関数の引数は、厳密に 1 つの入力を受け入れ、厳密に 1 つの出力を返す関数ハンドルでなければなりません。出力は数値または logical データ型のスカラーでなければなりません。</entry>
    <entry key="StencilfunInvalidStencil">ステンシル関数の引数は、1 つ以上の入力を受け入れる、固定アリティの関数ハンドルでなければなりません。この関数の出力は、数値または logical データ型のスカラーでなければなりません。</entry>
    <entry key="StencilfunInconsistentPreprocessTypes">前処理関数は single データ型の値のみを返すことができます。</entry>
    <entry key="StencilfunInconsistentOutputTypes">Each output array may only be assigned values of the single data type.</entry>
    <entry key="StencilfunPreprocessingCallbackBad">前処理コールバックに GPU 上で実行できないコードが含まれるため、stencilfun 用に生成されたコードを最適化できません。</entry>
    <entry key="StencilfunStencilCallbackBad">ステンシル コールバックの記述方法が原因で、stencilfun 用に生成されたコードを最適化できません。GPU での実行と互換性のない、あるいはウィンドウ パラメーターへのアクセスが非効率的なコードが含まれます。</entry>
    <entry key="IterationsPragmaOneInputArg">coder.gpu.iterations プラグマには、平均ループ回数である入力引数が 1 つ必要です。</entry>
    <entry key="IterationsPragmaInputScalarNumeric">Input to coder.gpu.iterations pragma must be a numeric scalar value.</entry>
    <entry key="IterationsPragmaInputIntegral">Input to coder.gpu.iterations pragma must be an integral value.</entry>
    <entry key="BatchedBlasMatrixArgs">Function called with {0} input matrix argument(s). Amount of input matrix arguments must be divisible by {1}.</entry>
    <entry key="BatchedBlasNumOutputMismatch">関数呼び出し内のバッチ処理された乗算の数が、出力引数の数未満です。バッチ カウントは {0} ですが、関数は {1} 個の出力引数を想定して呼び出されました。</entry>
    <entry key="BatchedBlasNumArgs">この関数は厳密に {0} 個または {1} 個の引数を取ります。</entry>
    <entry key="BatchedBlasDataTypeMismatch">引数 {0} は引数 {1} と同じデータ型でなければなりません。</entry>
    <entry key="BatchedBlasTransposeArg">転置引数は 'N' (転置なし)、'T' (転置) または 'C' (共役転置) でなければなりません。</entry>
    <entry key="BatchedBlasMatrixDimMismatchRow">{0} の次元が {1} と一致していません。{2} 行が必要ですが、{3} 行となっています。</entry>
    <entry key="BatchedBlasMatrixDimMismatchCol">{0} の次元が {1} と一致していません。{2} 列が必要ですが、{3} 列となっています。</entry>
    <entry key="BatchedBlasNonUniformRowDims">行列 {0} の次元が一致していません。{2} 行が必要ですが、{3} 行があります。すべての {1} 行列の次元は同じでなければなりません。</entry>
    <entry key="BatchedBlasNonUniformColDims">行列 {0} の次元が一致していません。{2} 列が必要ですが、{3} 列があります。すべての {1} 行列の次元は同じでなければなりません。</entry>
    <entry key="StridedBlasMatrixDimMismatch">{0} は {1} に等しくなければなりません。</entry>
    <entry key="BatchedBlasMatrixWithAZeroDim">次元のサイズがゼロの行列が指定されました。すべての次元が 1 以上の行列を使用してください。</entry>
    <entry key="BatchedBlasNonMatrix">Argument {0} has too many dimensions ({1}). It must be a scalar or matrix.</entry>
    <entry key="BatchedBlasIndexOverflow">現在のパラメーターにより未割り当てのメモリにインデックスが付けられることがあります。{0}: {1}、{2}: {3}。</entry>
    <entry key="BatchedBlasNumArgsMod">この関数は、厳密に {0}+batchCount*{1} 個の引数を取ります。</entry>
    <entry key="BatchedBlasUnknownNvp">オプションの名前と値のペアの引数を解析する際に、パラメーターが認識されません: {0}。</entry>
    <entry key="BatchedBlasTransposeStrMustBeConst">転置文字列はコンパイル時の定数でなければなりません。この引数を codegen の呼び出しに直接渡す場合は、coder.Constant の使用を検討してください。</entry>
    <entry key="BatchedBlasInvalidTransStrLen">転置文字列は長さが 2 でなければなりませんが、実際は {0} でした。</entry>
    <entry key="BatchedBlasInvalidTransStrType">転置文字列は文字ベクトルか string でなければなりません。</entry>
    <entry key="BatchedBlasNonNumericMatrix">入力引数 {0} の型は {1} でした。入力行列は数値行列でなければなりません。</entry>
    <entry key="BatchedBlasVarDimsUnsupported">可変サイズの次元をもつ入力行列は、現在コード生成でサポートされていません。</entry>
    <entry key="BatchedBlasAlphaBetaNonNumeric">パラメーター {0} の値は数値型でなければなりませんが、実際は {1} でした。</entry>
    <entry key="BatchedBlasAlphaBetaNonScalar">パラメーター {0} の値はスカラーでなければなりません。</entry>
    <entry key="BatchedBlasNoMatricesProvided">行列が指定されていません。</entry>
    <entry key="GpucoderLicenseError">GPU Coder のライセンスをチェックアウトできません。</entry>
    <entry key="PCTLicenseError">Parallel Computing Toolbox ライセンスをチェックアウトできません。</entry>
    <entry key="RTWLapackCallbackWarnInMO">関数 ''{0}'' のこのモードは、NVIDIA cuSOLVER ライブラリで完全にサポートされているわけではありません。cuSOLVER ライブラリに加えて LAPACK ライブラリを使用するコードを生成する場合、&lt;a href="matlab:open(''{1}'')"&gt;lapackCallback.m&lt;/a&gt; で定義された LAPACK コールバック クラスを使用することを検討してください</entry>
    <entry key="RTWLapackCallbackWarn">関数 {0} のこのモードは、NVIDIA cuSOLVER ライブラリで完全にサポートされているわけではありません。cuSOLVER ライブラリに加えて LAPACK ライブラリを使用するコードを生成する場合、LAPACK コールバック クラスを指定することを検討してください。</entry>
    <entry key="LargeProfilingTrace">プロファイリング トレースに、{0} を超えるエントリがログ記録されています。プロファイリング トレースで表示される関数の数を減らすために、しきい値を設定することを検討してください。</entry>
    <entry key="HostUnifiedModeWarning">GPU コード生成で、ホストに対して unified の Malloc モードを使用することは、将来のリリースでサポートされなくなります。ホスト ターゲットでは、discrete の Malloc モードを使用してください。</entry>
    <entry key="ProdDoesNotSupportLongLongMode">CUDA code generation requires the use of the long long data type. The production hardware does not support the use of the long long data type.</entry>
    <entry key="TargetDoesNotSupportLongLongMode">CUDA code generation requires the use of the long long data type. The target hardware does not support the use of the long long data type.</entry>
    <entry key="ProdLongLongModeError">CUDA code generation requires the use of the long long data type. Enable the 'Support long long' option in the Hardware Implementation pane or set the 'ProdLongLongMode' parameter.</entry>
    <entry key="TargetLongLongModeError">CUDA code generation requires the use of the long long data type. Enable the 'Support long long' option in the Hardware Implementation pane or set the 'TargetLongLongMode' parameter.</entry>
    <entry key="UnsupportedCMakeToolchain">CMake ツールチェーンを使用できません。既定のツールチェーンに切り替えます。</entry>
    <entry key="SLCodegenNoGpuForGpuAccel">GPU Acceleration is on, but no supported GPUs can be found.
    &lt;actions exclusiveFixIts="yes"&gt;
        &lt;action type="fixit"&gt;
            &lt;cmd&gt;configset.internal.fixIt(''{0}'', ''GPUAcceleration'', ''off'')&lt;/cmd&gt;
            &lt;txt&gt;Disable &lt;sldiag objui="configset" objparam="GPUAcceleration"&gt;'GPU Acceleration'&lt;/sldiag&gt;.&lt;/txt&gt;
        &lt;/action&gt;
      &lt;/actions&gt;
    </entry>
    <entry key="InvalidGpuFeatureControlName">GPU 機能の名前 ''{0}'' が無効です。</entry>
    <entry key="Explicit">{0}</entry>
  </message>
</rsccat>
