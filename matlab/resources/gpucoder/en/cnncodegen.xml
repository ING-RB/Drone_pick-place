<?xml version="1.0" encoding="UTF-8" ?>
<!-- Copyright 2016-2024 The MathWorks, Inc. -->
<rsccat version="1.0" locale="en_US" product="gpucoder">
  <message>
    <entry key="invalid_main_file">Invalid target main file ''{0}''. Replacing with generated main file.</entry>
    <entry key="invalid_parameter">Invalid parameter name. See 'help cnncodegen'.</entry>    
    <entry key="invalid_matfile_object">MAT-file ''{0}'' does not contain a valid deep learning network for code generation.</entry>    
    <entry key="directoryfailure">''{0}'' directory already exists.</entry>
    <entry key="newdirectoryfailure">Unable to create new directory ''{0}''.</entry>
    <entry key="readonlydirectoryfailure">Unable to use the read-only directory ''{0}'' for code generation.</entry>
    <entry key="invalid_function">Function ''{0}'' must return a deep learning network object supported for code generation.</entry>
    <entry key="invalid_filename">Invalid file name ''{0}''. The file name must be the name of a valid MAT-file, or a valid function with no input argument.</entry>  
    <entry key="invalid_matfile">Invalid MAT-file name ''{0}''. MAT-file name must be a constant and must exist on the MATLAB path.</entry>
    <entry key="GenericNetworkWrapperNotSupportedLDN">{0} is not supported by coder.loadDeepLearningNetwork. To load {0} from a MAT-file for code generation, refer to the documentation of {0}.</entry>
    <entry key="unsupported_parameter_name">Parameter ''{0}'' is not supported for ''{1}'' target. See ''help cnncodegen''.</entry>
    <entry key="invalid_parameter_value_target">For ''{2}'' target, ''{1}'' parameter has invalid value {0}. {3} </entry>
    <entry key="invalid_parameter_value">Invalid value for parameter ''{0}''. Parameter value must be {1}. </entry>
    <entry key="supported_values">Supported values are {0}.</entry>
    <entry key="ignore_tensorrt_param"> Property {0} is not applicable for TensorRT targets with FP32 or FP16 datatype. The property value will be ignored.</entry>
    <entry key="missing_support_package">Code generation for ''{0}'' target library requires the {1} support package. To install this support package, use the &lt;a href="matlab: matlab.addons.supportpackage.internal.explorer.showSupportPackages(''{2}'', ''tripwire'')&quot;&gt;Add-On Explorer&lt;/a&gt;.</entry>
    <entry key="missing_support_package_simulink">Attempted to use ''{0}'' target library during Simulink code generation. However, the ''{0}'' library requires the {1} support package. To install this support package, use the &lt;a href="matlab: matlab.addons.supportpackage.internal.explorer.showSupportPackages(''{2}'', ''tripwire'')&quot;&gt;Add-On Explorer&lt;/a&gt;.</entry>
    <entry key="missing_support_package_simulation">Attempted to use ''{0}'' target library during model simulation. However, the ''{0}'' library requires the {1} support package. To install this support package, use the &lt;a href="matlab: matlab.addons.supportpackage.internal.explorer.showSupportPackages(''{2}'', ''tripwire'')&quot;&gt;Add-On Explorer&lt;/a&gt;.</entry>
    <entry key="missing_tflite_support_package">Use of 'loadTFLiteModel' function for TensorFlow Lite models requires the {0} support package. To install this support package, use the &lt;a href="matlab: matlab.addons.supportpackage.internal.explorer.showSupportPackages(''{1}'', ''tripwire'')&quot;&gt;Add-On Explorer&lt;/a&gt;.</entry>
    <entry key="unsupported_target_linux"> Code generation is not supported for ''{0}'' target library on the  Linux platform. </entry>
    <entry key="invalidDLObjectCount">Invalid MAT-file. MAT-file should contain a single instance of a supported deep learning network object.</entry>
    <entry key="FP16NotSupportedForCC6p1">Code generation for FP16 data type is not supported for GPU hardware with compute capability 6.1. Check the hardware and precision support matrix section of TensorRT documentation for hardware that supports FP16 computation.</entry>    
    <entry key="targetlib_removed">In future releases, cnncodegen will only support targeting the ARM Mali GPU target using the 'targetlib','arm-compute-mali' name-value argument. For all other targets, use the codegen command.</entry>
    <entry key="InvalidInt8Calibrator">Invalid value for parameter ''{0}''. Parameter value must be {1}.</entry>  
    <entry key="DLCoderInternalError" translate="false">Code generation for the deep neural network failed due to an internal error. Please contact technical support for assistance.</entry><!--internal error-->
    <entry key="NetworkShouldBeCompiletimeConstant">The input deep learning network must be a compile-time constant.</entry>
    <entry key="UnsupportedBigEndianForTarget">Code generation of deep learning models for big-endian machines is not supported for ''{0}'' target library. Consider setting the deep learning target library to 'none'.</entry>
    <entry key="UnsupportedBigEndianForCompression">Code generation of deep learning models for big-endian machines is not supported for ''{0}'' learnables compression option. Consider setting the learnables compression option to 'None'.</entry>
    <entry key="UnsupportedBigEndianForSerialization">Code generation of deep learning models for big-endian machines is not supported for ''{0}'' large constant generation option. Consider setting the large constant generation option to 'KeepInSourceFiles'.</entry>
    <entry key="TensorRTNotInstalled">Code generation for TensorRT target requires the TensorRT Library. To install TensorRT Library, run &lt;a href="matlab:gpucoder.installTensorRT"&gt;gpucoder.installTensorRT&lt;/a&gt;.</entry>
    <entry key="TensorRTInstalled">TensorRT Library has already been installed.</entry>
</message> 
</rsccat>
