<?xml version="1.0" encoding="UTF-8"?>
<!--Copyright 2025 The MathWorks, Inc.-->

<rsccat xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.0" locale="ko_KR" product="gpucoder" xsi:noNamespaceSchemaLocation="../../resources/schema/msgcat.xsd">
  <message>
    <entry key="CUDAMEXRuntimeError">Error generated while running CUDA-enabled program: [{0},{1}] {2}</entry>
    <entry key="CUDAMEXThinRuntimeErrorTerm">Error generated while running CUDA-enabled program: [{0},{1}] {2}. To generate additional debugging information, enable the ''{3}'' GPU code generation option.</entry>
    <entry key="OlderToolkitVersionWarning">시스템 경로에 이전 CUDA 툴킷 버전 v{0}이(가) 발견됐기 때문에 생성 코드가 호환되지 않을 수 있습니다. 지원되는 최소 CUDA 툴킷 버전은 v{1}입니다.</entry>
    <entry key="OpenCLMEXRuntimeError">OpenCL 지원 프로그램을 실행하는 동안 오류 발생: [{0},{1}]\n{2}</entry>
    <entry key="HalfLowComputeVersion">함수 {0}에서 half 유형이 발견됐습니다. 반정밀도(half) 데이터형을 갖는 코드를 생성하고 실행하려면 Compute Capability가 5.3 이상이어야 합니다.</entry>
    <entry key="HalfLowCudaVersion">함수 {0}에서 half 유형이 발견됐습니다. 반정밀도(half) 데이터형을 갖는 코드를 생성하고 실행하려면 CUDA 버전이 10.0 이상이어야 합니다.</entry>
    <entry key="HalfUnsupportedMallocMode">함수 {0}에서 half 유형이 발견됐습니다. 반정밀도(half) 데이터형을 갖는 코드를 생성하고 실행하려면 MallocMode를 이산으로 설정해야 합니다.</entry>
    <entry key="InvalidShape">Shape in a stencil function must be one of the values {0}.</entry>
    <entry key="InvalidStencil">Neighborhood in a stencil function must be a constant, positive integer valued scalar, or vector with elements corresponding to each dimension of the input array.</entry>
    <entry key="KernelPragmaInvalidDimType">coder.gpu.kernel() 프라그마의 커널 인수가 유효하지 않습니다. 그리드 차원과 블록 차원은 숫자형이어야 합니다.</entry>
    <entry key="KernelPragmaInvalidDimSize">coder.gpu.kernel() 프라그마의 커널 인수가 유효하지 않습니다. 그리드 차원 인수와 블록 차원 인수는 스칼라이거나 요소를 3개 가진 배열이어야 합니다.</entry>
    <entry key="KernelPragmaInvalidMinBlocksPerSM">coder.gpu.kernel() 프라그마의 커널 인수가 유효하지 않습니다. 스트리밍 멀티프로세서당 최소 블록 수는 상수 정수여야 합니다.</entry>
    <entry key="KernelPragmaNoForLoop">for 루프 바로 앞에 배치되지 않은 coder.gpu.kernel() 프라그마를 무시합니다.</entry>
    <entry key="NoKernelPragmaNoForLoop">유효하지 않은 명령문에 지정된 coder.gpu.nokernel() 프라그마를 무시합니다.</entry>
    <entry key="IterationsPragmaNoForLoop">while 루프 또는 지원되지 않는 명령문에 지정된 coder.gpu.iterations() 프라그마를 무시합니다.</entry>
    <entry key="UnsupportedInputType">The input data type ''{0}'' to {1} is not supported. The input must be a numeric, logical, or character array. </entry>
    <entry key="LoopNestLowering_TooManyIterations">병렬 중첩 루프의 총 반복 횟수가 최대 한도인 {0}을(를) 초과합니다. 중첩 루프는 CPU에서 실행됩니다.</entry>
    <entry key="KernelPragmaInvalidBlockSize">coder.gpu.kernel() 프라그마에 제공된 블록 크기가 유효하지 않거나 지원되는 한도를 초과합니다. 디폴트 크기가 사용됩니다.</entry>
    <entry key="KernelPragmaInvalidGridSize">coder.gpu.kernel() 프라그마에 제공된 그리드 크기가 유효하지 않거나 지원되는 한도를 초과합니다. 디폴트 크기가 사용됩니다.</entry>
    <entry key="MMKernelIncompatDims">gpucoder.matrixMatrixKernel에 대한 입력값 A와 B의 차원이 호환되지 않습니다. 서로 호환되도록 A 또는 B의 차원을 변경하십시오.</entry>
    <entry key="MMKernelUnsupportedType">gpucoder.matrixMatrixKernel에 대한 입력값은 숫자형 또는 논리형 데이터형이어야 합니다.</entry>
    <entry key="MMKernelIncompatTypes">gpucoder.matrixMatrixKernel의 피연산자 A와 B는 데이터형이 동일해야 합니다.</entry>
    <entry key="MMKernelInvalidFunctionHandle">gpucoder.matrixMatrixKernel에 대한 첫 번째 인수는 함수 핸들이어야 합니다.</entry>
    <entry key="MMKernelInvalidFunctionHandleInputNum">gpucoder.matrixMatrixKernel에 대한 사용자 정의 함수 핸들이 유효하지 않습니다. 사용자 정의 함수에는 2개의 입력 인수가 있어야 합니다.</entry>
    <entry key="MMKernelNonConstDim">gpucoder.matrixMatrixKernel에 대한 인수 {1}의 차원 {0}은(는) 상수여야 합니다.</entry>
    <entry key="MMKernelInvalidTrans">gpucoder.matrixMatrixKernel에 대한 전치 인수가 유효하지 않습니다. gpucoder.matrixMatrixKernel에 대한 전치 인수는 {0} 중 하나여야 합니다</entry>
    <entry key="MMKernelWrongNumArgs">{0}에 대한 인수 개수가 유효하지 않습니다. 3개 또는 4개의 인수가 필요하지만, {1}개를 받았습니다.</entry>
    <entry key="MMKernelSizeTooLarge">gpucoder.matrixMatrixKernel에 대한 인수 {1}의 차원 {0}이(가) 너무 큽니다.</entry>
    <entry key="MMKernelFunctionHandleOutputNonScalar">gpucoder.matrixMatrixKernel에 대한 사용자 정의 함수 핸들이 유효하지 않습니다. 사용자 정의 함수는 스칼라를 출력해야 합니다.</entry>
    <entry key="MMKernelInvalidFunctionHandleOutputType">gpucoder.matrixMatrixKernel에 대한 사용자 정의 함수 핸들이 유효하지 않습니다. 사용자 정의 함수는 입력 행렬과 동일한 데이터형의 스칼라를 출력해야 합니다.</entry>
    <entry key="MMKernelScalarizedSim">MATLAB에서 gpucoder.matrixMatrixKernel을 실행하는 데 매우 오랜 시간이 걸릴 수 있습니다. 성능을 향상시키려면 vectorizedSim 인수를 true로 설정하십시오.</entry>
    <entry key="SelectdataInvalidPredicate">술어 함수 인수는 1개 또는 2개의 입력값을 받고 1개의 출력값을 반환하는 함수 핸들이어야 합니다. 이 함수의 출력값은 논리형 스칼라여야 합니다.</entry>
    <entry key="SelectdataInvalidPostProcess">postprocess 함수 인수는 정확히 1개의 입력값을 받고 정확히 1개의 출력값을 반환하는 함수 핸들이어야 합니다. 출력 데이터형은 숫자형, 논리형 또는 문자 데이터형이어야 합니다.</entry>
    <entry key="ParForHasUnsupportedFunctions">루프에 GPU 코드 생성 시 지원되지 않는 함수가 포함되어 있습니다. 여기에 지정된 coder.gpu.kernel() 프라그마를 무시합니다.</entry>
    <entry key="ParForHasUnsupportedFunctionsOrVariables">루프에 GPU 코드 생성 시 지원되지 않는 함수 또는 변수가 포함되어 있습니다. 여기에 지정된 coder.gpu.kernel() 프라그마를 무시합니다.</entry>
    <entry key="StencilInvalidFunctionHandle">스텐실에 대해 예기치 않은 인수입니다. 함수 핸들이 필요합니다.</entry>
    <entry key="StencilInvalidFunctionHandleInput">Invalid user-defined function handle to stencil. Expected the user-defined function to have {0} input arguments. Found {1} input argument(s) .</entry>
    <entry key="StencilInvalidFunctionHandleOutput">Invalid user-defined function handle to stencil. The function must return a scalar output.</entry>
    <entry key="StencilInvalidInput">Input for stencil function must be non-empty numeric or logical array of dimensions less than or equal to 2.</entry>
    <entry key="NoValidGpuCoderToolchain">Unable to find a valid GPU Coder toolchain. Refer to the GPU Coder documentation for a list of supported GPU Coder compilers.</entry>
    <entry key="NoValidMexGpuCompiler">GPU 코드 생성에는 선택한 MEX 컴파일러 ''{0}''이(가) 지원되지 않습니다. 지원되는 GPU MEX 컴파일러 목록은 GPU Coder 문서를 참조하십시오.</entry>
    <entry key="StaticDeviceVariablesWarning">생성 코드는 장치 함수 내부에 정적 변수를 포함합니다. 생성 코드를 성공적으로 컴파일하려면 CUDA 툴킷 8.0 이상이 필요합니다.</entry>
    <entry key="CallbackNotSupported">{1}에 제공된 {0} 콜백 함수는 지원되지 않습니다. {2}</entry>
    <entry key="CallbackNotGpuFriendly">콜백 함수에 GPU 커널에서 실행할 수 없는 코드가 포함되어 있습니다.</entry>
    <entry key="CallbackIsNested">콜백 함수는 중첩 함수를 참조해서는 안 됩니다. 익명 함수를 대신 사용해 보십시오.</entry>
    <entry key="CallbackWrongNumInputs">콜백 함수에 입력 인수가 {0}개 있어야 하지만 {1}개의 인수가 발견됐습니다. 콜백 함수가 명시적으로 입력값으로서 전달되지 않은 변수에 액세스할 수 있는 경우에 발생할 수 있는데, 이는 콜백 함수가 익명 함수 또는 중첩 함수인 경우에 생길 수 있습니다.</entry>
    <entry key="CallbackExtraArgBadType">함수에 지원되는 유형이 아닌 묵시적 파라미터가 하나 이상 있습니다.</entry>
    <entry key="LoopCarriedDependence">루프에 예속된 종속성(loop carried dependencies)으로 인해 루프를 병렬화할 수 없습니다. 변수 ''{0}''의 사용을 확인하십시오.</entry>
    <entry key="LoopCarriedDependenceNoVarName">루프에 예속된 종속성(loop carried dependencies)으로 인해 루프를 병렬화할 수 없습니다.</entry>
    <entry key="GlobalAccessError">루프 내부에서 전역 변수 또는 영속 변수가 사용되어 루프를 병렬화할 수 없습니다.</entry>
    <entry key="IndexVariableUseError">인덱스 변수가 루프 외부에서 사용되어 루프를 병렬화할 수 없습니다.</entry>
    <entry key="ParallelLoopWithBreak">break 문 또는 return 문을 포함하는 루프는 병렬화할 수 없습니다.</entry>
    <entry key="LoopFailedSanityChecks">온전성 검사에 실패하여 루프를 병렬화할 수 없습니다.</entry>
    <entry key="PersistentMemPragmaIgnore">coder.gpu.persistentMemory()를 무시합니다. {0}</entry>
    <entry key="PersistentMemPragmaInvalidVar">coder.gpu.persistentMemory() 프라그마에 대해 유효하지 않은 변수가 발견됐습니다.</entry>
    <entry key="PersistentMemPragmaNotMLPersistent">coder.gpu.persistentMemory() 프라그마가 있는 변수 ''{0}''이(가) MATLAB 영속 변수가 아닙니다.</entry>
    <entry key="PersistentMemVarDims">가변 크기 배열 ''{0}''은(는) GPU 영속 메모리로 이동되지 않습니다.</entry>
    <entry key="PersistentMemMCOSNotSupported">MATLAB 클래스에 지원되지 않으므로 coder.gpu.persistentMemory() 프라그마를 무시합니다.</entry>
    <entry key="PersistentMemNotUsed">coder.gpu.persistentMemory에 의해 지정된 변수 ''{0}''은(는) GPU에서 전혀 사용되지 않는 변수일 수 있습니다.</entry>
    <entry key="PersistentMemUnsupportedAccess">지원되지 않는 방식으로 변수에 액세스되고 있으므로 변수를 영속 GPU 메모리로 이동할 수 없습니다.</entry>
    <entry key="ConstantMemPragmaIgnore">coder.gpu.constantMemory()를 무시합니다. {0}</entry>
    <entry key="ConstantMemPragmaInvalidVar">coder.gpu.constantMemory() 프라그마에 대해 유효하지 않은 변수가 발견됐습니다.</entry>
    <entry key="ConstantMemPragmaMissingLoops">coder.gpu.constantMemory() 프라그마가 for 루프 내에서 지정되지 않았습니다.</entry>
    <entry key="ConstantMemPragmaVarDef">coder.gpu.constantMemory() 프라그마가 장치 코드에서 읽기 전용이 아닙니다.</entry>
    <entry key="ConstantMemPragmaVarWritable">coder.gpu.constantMemory() 프라그마가 읽기 전용이 아닙니다. 이로 인해 상수 메모리로 비효율적인 메모리 복사가 발생할 수 있습니다.</entry>
    <entry key="ConstantMemMaxExceeded">장치 상수 메모리 제한 {0}을(를) 초과했습니다. 변수 ''{1}''에 대해 상수 메모리를 사용할 수 없습니다.</entry>
    <entry key="ConstantMemNotStaticMatrix">coder.gpu.constantMemory() 프라그마가 있는 변수가 고정 크기 행렬이 아닙니다.</entry>
    <entry key="ConstantMemPragmaUnsupportedType">coder.gpu.constantMemory() 프라그마 변수의 데이터형이 유효하지 않습니다.</entry>
    <entry key="GPUMetricsFileOpenFailure">GPU 코드 생성 메트릭 파일 {0}을(를) 열 수 없습니다. 코드 생성 데이터가 저장되지 않습니다.</entry>
    <entry key="RegionErrorNoEnd">대응하는 영역 끝을 찾을 수 없습니다.</entry>
    <entry key="RegionErrorNoStart">대응하는 영역 시작을 찾을 수 없습니다.</entry>
    <entry key="RegionErrorNotValid">영역 시작과 영역 끝의 배치가 유효하지 않습니다.</entry>
    <entry key="RegionErrorOverlap">유효하지 않은 코드 영역 중첩을 발견했습니다.</entry>
    <entry key="RegionErrorInsideKernel">커널 내부에 영역 시작 또는 영역 끝을 배치하는 것은 지원되지 않습니다.</entry>
    <entry key="oneLineDisplay">leakyReLU</entry>
    <entry key="Type">leakyReLU</entry>
    <entry key="ErrorVarModifiedOnCpuAndGpu">GPU Coder는 CPU와 GPU 양쪽의 변수에 동시에 쓰는 명령문을 지원하지 않습니다.</entry>
    <entry key="ErrorDisqualifiedGpuIOVar">GPU Coder는 이 변수를 GPU 입력값/출력값으로 전달하는 것을 지원하지 않습니다.</entry>
    <entry key="ScreenerUnboundedVarSize">비유계 동적 크기 변수 {0}을(를) 발견했습니다. GPU에 변수를 매핑할 수 없습니다.</entry>
    <entry key="ScreenerCuBlasInParFor">cuBLAS로 대체하면 병렬 커널 추론을 방해할 수 있습니다. 더 큰 GPU 커널을 추론하려면 cuBLAS로의 대체를 비활성화해 보십시오.</entry>
    <entry key="ScreenerCuSolverInParFor">cuSolver로 대체하면 병렬 커널 추론을 방해할 수 있습니다. 더 큰 GPU 커널을 추론하려면 cuSOLVER로의 대체를 비활성화해 보십시오.</entry>
    <entry key="ScreenerCuFFTInParFor">cuFFT로 대체하면 병렬 커널 추론을 방해할 수 있습니다. 더 큰 GPU 커널을 추론하려면 cuFFT로의 대체를 비활성화해 보십시오.</entry>
    <entry key="ScreenerNonCoalescedAccess">{0} 변수에 대한 불연속적(non-coalesced) 액세스가 감지되었습니다. 가능한 경우 변수를 전치하거나, 감싸는 루프들을 교환해 보십시오.</entry>
    <entry key="KernelFunLoopNotParallel">루프가 병렬화되지 않았습니다. coder.gpu.kernelfun()이 포함된 함수에 사용되었으며 의존성 분석에서 루프가 병렬임을 증명하지 못했습니다.</entry>
    <entry key="GpuLoweringImperfectLoop">루프가 완벽하게 중첩되지 않았습니다. 루프 중첩의 일부 루프가 병렬화되지 않습니다.</entry>
    <entry key="InvalidGpuConfigParameter">Error setting property {0} of class 'GpuConfig': Invalid value ''{1}''.\nAllowed values are:\n\t{2}</entry>
    <entry key="ParameterMustBePowerOf2">Error setting property {0} of class 'GpuConfig'. Value must be a power of 2.</entry>
    <entry key="MinMaxPoolSizeValues">Invalid GPU configuration parameter. 'MinPoolSize' must be less than 'MaxPoolSize'.</entry>
    <entry key="MultiInstanceCodeUnsupported">GPU Coder에서는 다중 인스턴스 재진입 코드 생성을 지원하지 않습니다. GPU 코드 생성을 위해 이 옵션을 비활성화합니다.</entry>
    <entry key="CppPreserveClassesUnsupported">GPU Coder에서는 MATLAB 클래스에 대한 C++ 클래스 생성을 지원하지 않습니다. GPU 코드 생성을 위해 이 옵션을 비활성화합니다.</entry>
    <entry key="DynamicMemoryAllocationForFixedSizeArraysUnSupported">GPU Coder에서는 고정 크기 배열에 대한 동적 메모리 할당을 지원하지 않습니다. GPU 코드 생성을 위해 이 옵션을 비활성화합니다.</entry>
    <entry key="BwdistUnsupportedMultiDimImageError">GPU code generation not supported for embedded target when image dimension exceeds 3 with bwdist.</entry>
    <entry key="BwdistUnsupportedInputMethodError">GPU code generation not supported for embedded target with Quasi-Euclidean distance metric with bwdist.</entry>
    <entry key="BwdistUnsupportedMultiDimImage">bwdist의 경우 3을 초과하는 영상 차원에 대한 GPU 코드 생성이 지원되지 않습니다. CPU (C/C++) 코드를 대신 생성합니다.</entry>
    <entry key="BwdistUnsupportedInputMethod">bwdist의 경우 준유클리드 거리 측정법에 대한 GPU 코드 생성이 지원되지 않습니다. CPU (C/C++) 코드를 대신 생성합니다.</entry>
    <entry key="MatchFeatureUnsupportedSearchMethod">Approximate 메서드에 대한 GPU 코드 생성은 지원되지 않습니다. CPU (C/C++) 코드를 대신 생성합니다.</entry>
    <entry key="MatchFeaturesDimensionMisMatchError">FEATURES1과 FEATURES2는 열 개수가 동일해야 합니다.</entry>
    <entry key="MatchFeaturesEmptyFeatureSetError">비어 있지 않은 특징 세트가 있어야 합니다.</entry>
    <entry key="MatchFeaturesVarDims">가변 입력 크기에 대한 GPU 코드 생성이 최적화되지 않았습니다. 최적화된 코드 생성을 위해 비유계 입력값을 사용해 보십시오.</entry>
    <entry key="ImfilterUnsupportedMultiDimImage">GPU 코드를 생성하려면 입력 영상이 1차원, 2차원, 3차원 중 하나여야 합니다.</entry>
    <entry key="ImfilterUnsupportedKernelDim">GPU 코드를 생성하려면 필터 커널이 1차원 또는 2차원이어야 합니다.</entry>
    <entry key="ImfilterComplexInputImage">GPU 코드 생성의 데이터형이 유효하지 않습니다. 입력 영상의 유형은 실수형이어야 합니다.</entry>
    <entry key="ImfilterComplexKernelWithLogicalInputError">Invalid input combination. Input images of logical data type require filter kernels of real data type.</entry>
    <entry key="MorphOpUnsupportedStructuringElementDim">3차원 구조 요소에 대한 GPU 코드 생성이 최적화되지 않았습니다. 최적화되지 않은 코드를 대신 생성합니다.</entry>
    <entry key="MorphOpUnsupportedNChannel3DImage">N이 3보다 큰 경우 N-채널 3차원 영상에 대한 GPU 코드 생성이 최적화되지 않습니다. 최적화되지 않은 코드를 대신 생성합니다.</entry>
    <entry key="MorphOpUnsupportedUnboundedInputs">가변 입력 크기에 대한 GPU 코드 생성이 최적화되지 않았습니다. 최적화된 코드 생성을 위해 비유계 입력값을 사용해 보십시오.</entry>
    <entry key="MorphOpUnsupportedStreltype"> 비평탄 구조 요소에 대한 GPU 코드 생성이 최적화되지 않았습니다. 최적화되지 않은 코드를 대신 생성합니다.</entry>
    <entry key="MorphOpUnsupportedInputDataError">Invalid input data. GPU code generation not supported for packed input data.</entry>
    <entry key="WavedecLevelIsNotConstant">최적화된 GPU 코드 생성을 위해 level은 컴파일타임 상수여야 합니다.</entry>
    <entry key="Wavedec2LevelIsNotConstant">최적화된 GPU 코드 생성을 위해 level은 컴파일타임 상수여야 합니다.</entry>
    <entry key="MdwtdeclevelisNotConstant">최적화된 GPU 코드 생성을 위해 level은 컴파일타임 상수여야 합니다.</entry>
    <entry key="RegionfillUnsupportedSyntax">다각형 꼭짓점 x와 y를 지정하는 GPU 코드 생성이 최적화되지 않았습니다.</entry>
    <entry key="UnsupportedTypeAtomic">Input of type {0} is not supported for {1} function.</entry>
    <entry key="InputsNotOfSameTypeAtomic">Inputs to {0} function must be of the same data type.</entry>
    <entry key="InputsNotScalarAtomic">Inputs to {0} function must be fixed-size scalar values.</entry>
    <entry key="UnsupportedTypeComputeAtomic">{1} 함수에 대한 유형 {0}의 입력값은 Compute Capability가 {2} 이상인 장치에 대해서만 지원됩니다.</entry>
    <entry key="CevalGpuDeviceFcnNoKernel">Found ceval('-gpudevicefcn', ...) call to function {0} that did not get mapped to a kernel. Device function calls are only allowed within GPU kernels.</entry>
    <entry key="AtomicOpOnUnsupportedMemory">GPU에서 아토믹 연산을 수행할 수 없습니다. 아토믹 함수에 대한 호출은 아토믹 함수를 포함하는 루프의 모든 반복에서 공유하는 변수 또는 메모리 위치에만 적용되어야 합니다.</entry>
    <entry key="AtomicOpOnCpu">이 아토믹 함수 호출은 GPU 커널에 매핑되지 않았습니다. 연산은 CPU에서 수행됩니다.</entry>
    <entry key="AtomicOpNotInLoop">이 아토믹 함수는 for 루프 내부에서 직접 호출되어야 합니다.</entry>
    <entry key="AtomicOpNeedsKernelPragma">GPU에서 연산이 실행되도록 하려면 coder.gpu.kernel() 프라그마가 태그된 루프 내에서 이 아토믹 연산이 수행되어야 합니다.</entry>
    <entry key="Atomic64NotEnabled">Code generation for {1} with {0} data type requires 64-bit atomic operations. Set the EnableAtomic64 property of GpuConfig object to true.</entry>
    <entry key="GpucoderIncorrectNumArgs">Incorrect number of input arguments to the {0} function. See 'help {0}' for usage information.</entry>
    <entry key="GpucoderSortComplexInputs">데이터형이 유효하지 않습니다. gpucoder.sort function은 복소수 데이터형을 지원하지 않습니다.</entry>
    <entry key="GpucoderReduceUnsupportedTypeForReduce">gpucoder.reduce는 실수 숫자형 또는 논리형 데이터만 처리할 수 있습니다.</entry>
    <entry key="GpucoderReduceDimensionTooLarge">gpucoder.reduce에 대한 차원 인수는 입력값의 차원 수보다 커서는 안 됩니다.</entry>
    <entry key="GpucoderReduceComplexInputs">gpucoder.reduce 함수는 복소수 데이터형을 지원하지 않습니다.</entry>
    <entry key="GpucoderReduceExpectedPrepro">gpucoder.reduce에 대한 네 번째 인수는 함수 핸들이어야 합니다.</entry>
    <entry key="GpucoderReduceInvalidPreprocessFcn">전처리 함수는 단항 함수여야 합니다.</entry>
    <entry key="GpucoderReducePreprocessFcnUnsupportedType">전처리 함수의 출력값은 숫자형 또는 논리형의 실수형 스칼라여야 합니다.</entry>
    <entry key="GpucoderReduceMultiplePreprocessFcn">gpucoder.reduce 함수는 2개 이상의 전처리 함수를 지원하지 않습니다.</entry>
    <entry key="GpucoderReduceFuncHandleInput">gpucoder.reduce에 대한 두 번째 인수는 함수 핸들이거나 함수 핸들로 구성된 행 셀형 배열이어야 합니다.</entry>
    <entry key="GpucoderReduceAnonymousFuncHandle">gpucoder.reduce는 익명 함수 핸들을 지원하지 않습니다.</entry>
    <entry key="GpucoderReduceTooManyFuncHandles">gpucoder.reduce 함수는 {0}개를 초과하는, 출력 유형이 ''{1}''인 함수 핸들을 지원하지 않습니다.</entry>
    <entry key="GpucoderReduceFuncHandleInvalid">''{0}'' function handle input to gpucoder.reduce must accept two inputs and return one output of the same data type.</entry>
    <entry key="GpucoderReduceFuncHandleUnsupportedType">''{0}'' 함수 핸들의 출력값은 숫자형 또는 논리형의 실수형 스칼라여야 합니다.</entry>
    <entry key="GpucoderReducePreprocessing">전처리</entry>
    <entry key="GpucoderReduceReductionOperator">축소 연산자</entry>
    <entry key="GpucoderReducePreprocessingCallbackInvalid">gpucoder.reduce에 제공된 전처리 함수 핸들이 GPU 코드 생성 시 지원되지 않습니다. {0}</entry>
    <entry key="FunctionHandleInvalid">{0}에 제공된 함수 핸들이 GPU 코드 생성 시 지원되지 않습니다. {1}</entry>
    <entry key="FunctorWritesThroughParam">함수 핸들은 참조를 통해 입력 파라미터에 씁니다.</entry>
    <entry key="FunctorNotQualifiedForGpu">함수 핸들에 GPU 커널에서 실행할 수 없는 코드가 포함되어 있습니다.</entry>
    <entry key="FunctorMayBeNested">이 코드는 중첩 함수를 참조할 수 있습니다. 최상의 성능을 위해 익명 함수 핸들을 대신 사용하십시오.</entry>
    <entry key="StencilfunVarsizedWindowUnsupported">가변 크기 배열 지원을 비활성화한 경우 상수가 아닌 윈도우 크기는 지원되지 않습니다.</entry>
    <entry key="StencilfunInvalidWindowSize">The window size argument must be a row vector of positive integers.</entry>
    <entry key="StencilfunInvalidStride">The stride argument must be a constant numeric array whose elements are positive integers.</entry>
    <entry key="StencilfunInputUnsupportedType">The input array must be of numeric or logical data type.</entry>
    <entry key="StencilfunInvalidPaddingValue">The padding value must be a scalar with the same type as the input array.</entry>
    <entry key="StencilfunInvalidPaddingValueComplexity">코드를 생성할 때 입력 배열이 복소수인 경우에만 채우기 값이 복소수일 수 있습니다.</entry>
    <entry key="StencilfunInvalidPreprocess">The preprocess function argument must be a function handle that accepts exactly one input and returns exactly one output. The output must be a scalar of numeric or logical data type.</entry>
    <entry key="StencilfunInvalidStencil">The stencil function argument must be a function handle of fixed arity that accepts one or more inputs. The outputs of this function must be scalars of numeric or logical data type.</entry>
    <entry key="StencilfunInconsistentPreprocessTypes">전처리 함수는 single 데이터형의 값만 반환할 수 있습니다.</entry>
    <entry key="StencilfunInconsistentOutputTypes">Each output array may only be assigned values of the single data type.</entry>
    <entry key="StencilfunPreprocessingCallbackBad">전처리 콜백에 GPU에서 실행할 수 없는 코드가 포함되어 있기 때문에 stencilfun에 대해 생성된 코드가 최적화되지 않을 수 있습니다.</entry>
    <entry key="StencilfunStencilCallbackBad">스텐실 콜백이 작성되는 방식 때문에 stencilfun에 대해 생성된 코드가 최적화되지 않을 수 있습니다. GPU 실행과 호환되지 않거나 윈도우 파라미터에 비효율적으로 액세스하는 코드가 포함되어 있습니다.</entry>
    <entry key="IterationsPragmaOneInputArg">coder.gpu.iterations pragma requires one input argument which is the average loop bound.</entry>
    <entry key="IterationsPragmaInputScalarNumeric">Input to coder.gpu.iterations pragma must be a numeric scalar value.</entry>
    <entry key="IterationsPragmaInputIntegral">Input to coder.gpu.iterations pragma must be an integral value.</entry>
    <entry key="BatchedBlasMatrixArgs">Function called with {0} input matrix argument(s). Amount of input matrix arguments must be divisible by {1}.</entry>
    <entry key="BatchedBlasNumOutputMismatch">Number of batched multiplications in function call is less than number of output arguments. Batch count is {0}, but function was called expecting {1} output arguments.</entry>
    <entry key="BatchedBlasNumArgs">This function takes exactly {0} or {1} arguments.</entry>
    <entry key="BatchedBlasDataTypeMismatch">Argument {0} must be the same data type as argument {1}.</entry>
    <entry key="BatchedBlasTransposeArg">Transpose argument must be 'N' (no transpose), 'T' (transpose), or 'C' (conjugate transpose).</entry>
    <entry key="BatchedBlasMatrixDimMismatchRow">{0} has a dimension mismatch with {1}. Expected {2} row(s), got {3}.</entry>
    <entry key="BatchedBlasMatrixDimMismatchCol">{0} has a dimension mismatch with {1}. Expected {2} column(s), got {3}.</entry>
    <entry key="BatchedBlasNonUniformRowDims">Matrix {0} has a dimension mismatch, expected {2} row(s), got {3}. The dimensions of all {1} matrices must be the same.</entry>
    <entry key="BatchedBlasNonUniformColDims">Matrix {0} has a dimension mismatch, expected {2} column(s), got {3}. The dimensions of all {1} matrices must be the same.</entry>
    <entry key="StridedBlasMatrixDimMismatch">{0} must equal {1}.</entry>
    <entry key="BatchedBlasMatrixWithAZeroDim">A matrix with a zero-sized dimension was provided. Use matrices where all dimensions are greater than or equal to 1.</entry>
    <entry key="BatchedBlasNonMatrix">Argument {0} has too many dimensions ({1}). It must be a scalar or matrix.</entry>
    <entry key="BatchedBlasIndexOverflow">Current parameters would cause indexing into unallocated memory. {0}: {1}, {2}: {3}.</entry>
    <entry key="BatchedBlasNumArgsMod">This function takes exactly {0}+batchCount*{1} arguments.</entry>
    <entry key="BatchedBlasUnknownNvp">선택적 이름 값 쌍 인수를 구문 분석할 때 인식할 수 없는 파라미터: {0}.</entry>
    <entry key="BatchedBlasTransposeStrMustBeConst">The transpose string must be a compile time constant. Consider using coder.Constant if passing this argument directly to the codegen invocation.</entry>
    <entry key="BatchedBlasInvalidTransStrLen">Transpose string must have length 2, was {0}.</entry>
    <entry key="BatchedBlasInvalidTransStrType">Transpose string must be either a character vector or a string.</entry>
    <entry key="BatchedBlasNonNumericMatrix">Input argument {0} was of type {1}. Input matrices must be numeric.</entry>
    <entry key="BatchedBlasVarDimsUnsupported">Input matrices with variable-sized dimensions are currently not supported for code generation.</entry>
    <entry key="BatchedBlasAlphaBetaNonNumeric">Value for parameter {0} must be a numeric type, was {1}.</entry>
    <entry key="BatchedBlasAlphaBetaNonScalar">Value for parameter {0} must be a scalar.</entry>
    <entry key="BatchedBlasNoMatricesProvided">No matrices were provided.</entry>
    <entry key="GpucoderLicenseError">GPU Coder 라이선스를 확인할 수 없습니다.</entry>
    <entry key="PCTLicenseError">Parallel Computing Toolbox 라이선스를 확인할 수 없습니다.</entry>
    <entry key="RTWLapackCallbackWarnInMO">''{0}'' 함수의 이 모드는 NVIDIA cuSOLVER 라이브러리에서 완전히 지원되지 않습니다. cuSOLVER 라이브러리 외에 LAPACK 라이브러리를 사용하는 코드를 생성하려면 &lt;a href="matlab:open(''{1}'')"&gt;lapackCallback.m&lt;/a&gt;에 정의된 LAPACK 콜백 클래스를 사용해 보십시오</entry>
    <entry key="RTWLapackCallbackWarn">{0} 함수의 이 모드는 NVIDIA cuSOLVER 라이브러리에서 완전히 지원되지 않습니다. cuSOLVER 라이브러리 외에 LAPACK 라이브러리를 사용하는 코드를 생성하려면 LAPACK 콜백 클래스를 제공해 보십시오.</entry>
    <entry key="LargeProfilingTrace">프로파일링 추적에 {0}개 이상의 항목이 기록되었습니다. 임계값을 설정하여 프로파일링 추적에 표시되는 함수의 양을 줄여 보십시오.</entry>
    <entry key="HostUnifiedModeWarning">호스트의 통합 malloc 모드에 대한 GPU 코드 생성 지원은 향후 릴리스에서 더 이상 사용되지 않을 예정입니다. 호스트 타깃의 경우 이산 malloc 모드를 사용하십시오.</entry>
    <entry key="ProdDoesNotSupportLongLongMode">CUDA code generation requires the use of the long long data type. The production hardware does not support the use of the long long data type.</entry>
    <entry key="TargetDoesNotSupportLongLongMode">CUDA code generation requires the use of the long long data type. The target hardware does not support the use of the long long data type.</entry>
    <entry key="ProdLongLongModeError">CUDA code generation requires the use of the long long data type. Enable the 'Support long long' option in the Hardware Implementation pane or set the 'ProdLongLongMode' parameter.</entry>
    <entry key="TargetLongLongModeError">CUDA code generation requires the use of the long long data type. Enable the 'Support long long' option in the Hardware Implementation pane or set the 'TargetLongLongMode' parameter.</entry>
    <entry key="UnsupportedCMakeToolchain">CMake 툴체인을 사용할 수 없어 디폴트 툴체인으로 전환합니다.</entry>
    <entry key="SLCodegenNoGpuForGpuAccel">GPU Acceleration is on, but no supported GPUs can be found.
    &lt;actions exclusiveFixIts="yes"&gt;
        &lt;action type="fixit"&gt;
            &lt;cmd&gt;configset.internal.fixIt(''{0}'', ''GPUAcceleration'', ''off'')&lt;/cmd&gt;
            &lt;txt&gt;Disable &lt;sldiag objui="configset" objparam="GPUAcceleration"&gt;'GPU Acceleration'&lt;/sldiag&gt;.&lt;/txt&gt;
        &lt;/action&gt;
      &lt;/actions&gt;
    </entry>
    <entry key="InvalidGpuFeatureControlName">Invalid GPU feature name ''{0}''.</entry>
    <entry key="Explicit">{0}</entry>
  </message>
</rsccat>
