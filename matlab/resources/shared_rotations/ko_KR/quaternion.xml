<?xml version="1.0" encoding="UTF-8"?>
<!--Copyright 2024 The MathWorks, Inc.-->

<rsccat xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.0" locale="ko_KR" product="shared_rotations" xsi:noNamespaceSchemaLocation="../../resources/schema/msgcat.xsd">
  <message>
    <entry key="QuatAddReals">Quaternion addition requires operands to be quaternions or real, double or single precision numbers.</entry>
    <entry key="QuatSubReals">Quaternion subtraction requires operands to be quaternions or real, double or single precision numbers.</entry>
    <entry key="QuatTimesReals">쿼터니언 곱셈을 수행하려면 피연산자는 쿼터니언이거나 배정밀도 또는 단정밀도 실수여야 합니다.</entry>
    <entry key="QuatMtimesArg">mtimes에 대한 한 인수는 쿼터니언의 스칼라여야 합니다.</entry>
    <entry key="QuatMldivideArg">mldivide에 대한 한 인수는 쿼터니언의 스칼라여야 합니다.</entry>
    <entry key="QuatMrdivideArg">mrdivide에 대한 한 인수는 쿼터니언의 스칼라여야 합니다.</entry>
    <entry key="QuatPointFrame">마지막 인수는 'point' 또는 'frame'이어야 합니다.</entry>
    <entry key="QuatRotvecConv">회전 벡터(단위: 라디안)에서 변환하려면 quaternion(x,'rotvec')를 사용하십시오.</entry>
    <entry key="QuatRotvecdConv">To convert from a rotation vector in degrees, use quaternion(x,'rotvecd').</entry>
    <entry key="QuatRotmatConv">회전 행렬에서 변환하려면 quaternion(x,'rotmat', pf)를 사용하십시오. 여기서 pf는 'point' 또는 'frame'입니다.</entry>
    <entry key="QuatUnexpectedConv">쿼터니언 생성자 구문이 유효하지 않습니다. &lt;a href="matlab:help quaternion"&gt;''help quaternion''&lt;/a&gt;을 입력하여 허용되는 구문을 확인하십시오.</entry>
    <entry key="QuatEulerConv">오일러 각(단위: 라디안)에서 변환하려면 quaternion(x,'euler', cv, pf)를 사용하십시오. 여기서 cv는 'ZYX' 같은 변환 문자열이고, pf는 'point' 또는 'frame'입니다.</entry>
    <entry key="QuatEulerdConv">오일러 각(단위: 도)에서 변환하려면 quaternion(x,'eulerd', cv, pf)를 사용하십시오. 여기서 cv는 'ZYX' 같은 변환 문자열이고, pf는 'point' 또는 'frame'입니다.</entry>
    <entry key="ExpectedQuat">The first argument must be an N-by-1 or 1-by-N quaternion.</entry>
    <entry key="RotArgs">인수 크기가 서로 호환되지 않습니다.</entry>
    <entry key="RotmatDims">Invalid rotation matrix dimensions. Specify a rotation matrix with 2 or 3 dimensions.</entry>
    <entry key="AllQuat">모든 입력값은 쿼터니언이어야 합니다.</entry>
    <entry key="CatQuat">cat을 사용하는 중 오류가 발생했습니다. 차원은 양의 실수형 정수 스칼라여야 합니다. 그 외 모든 입력값은 쿼터니언이어야 합니다.</entry>
    <entry key="NoSeqConv">{0}은(는) 유효한 회전 시퀀스가 아닙니다.</entry>
    <entry key="SameClass">쿼터니언 생성자에 대한 모든 입력값은 클래스가 동일해야 합니다(double형 또는 single형).</entry>
    <entry key="MustBeReal">쿼터니언 생성자에 대한 모든 입력값은 실수여야 합니다.</entry>
    <entry key="SameSize">쿼터니언 생성자에 대한 모든 입력값은 크기가 동일해야 합니다.</entry>
    <entry key="Constructor4Inputs">각 부분으로부터 쿼터니언을 만들려면 quaternion(a,b,c,d)를 사용하십시오. 4개 부분이 모두 필요합니다.</entry>
    <entry key="QuatExpected">cast(a, 'like', b)에서 쿼터니언이 첫 번째 인수여야 합니다.</entry>
    <entry key="QuatAllArgs">모든 인수는 쿼터니언이어야 합니다.</entry>
    <entry key="QuatRHS">쿼터니언이 우변에 있어야 합니다.</entry>
    <entry key="RotArg2">두 번째 인수는 double형 또는 single형의 N×3 배열이어야 합니다.</entry>
    <entry key="SingleDouble">{0}은(는) 쿼터니언에 유효한 기본 클래스가 아닙니다. 'single' 또는 'double'을 선택하십시오.</entry>
    <entry key="ValAttrNonzero">특성 'nonzero'는 쿼터니언 입력값으로 지원되지 않습니다.</entry>
    <entry key="ValAttrReal">특성 'real'은 쿼터니언 입력값으로 지원되지 않습니다.</entry>
    <entry key="QuatOrNumeric">All arguments must be quaternions or numeric.</entry>
    <entry key="QuatDivReals">Quaternion division requires operands to be quaternions or real numbers (double or single precision).</entry>
    <entry key="QuatPowerReal">Quaternion power requires exponent to be a real number (double or single precision).</entry>
    <entry key="MeanRot2Arg">Expected the second argument to meanrot to be either a dimension or a string indicating how to handle NaNs.</entry>
    <entry key="MeanRotDimInt">차원 인수는 양의 정수 스칼라여야 합니다.</entry>
    <entry key="MeanRotNanFlag">NANFLAG에 유효한 값은 ''{0}'' 및 ''{1}''입니다.</entry>
    <entry key="QuatExpectedArg">Expected input {0} to be a quaternion.</entry>
  </message>
</rsccat>
