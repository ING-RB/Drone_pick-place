<?xml version="1.0" encoding="UTF-8" ?>
<!-- Copyright 2024 The MathWorks, Inc.-->
<rsccat version="1.0"
        locale="en_US"
        product="hwmanagerapp"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:noNamespaceSchemaLocation="../../schema/msgcat.xsd">
    <message>
        <!-- Communications Toolbox AddOnData -->
        <entry key="CommunicationsToolboxAddOnDataFullName">Communications Toolbox</entry>

        <!-- HardwareKeywordData -->
        <entry key="HardwareKeywordDataKeyword">Software-Defined Radios (SDR)</entry>
        <entry key="HardwareKeywordDataDescription">Connect to Software-Defined Radios (ADALM-Pluto, RTL-SDR, USRP™)</entry>
        <entry key="HardwareKeywordDataTooltip">Use MATLAB and Simulink to interactively communicate with ADALM-Pluto, RTL-SDR, and USRP radios for transmission and reception of RF signals.</entry>
        <entry key="RadioHardwareSetupDataDisplayName">Hardware Setup</entry>
        <entry key="RadioMATLABExampleDataDisplayName">Example (MATLAB)</entry>
        <entry key="RadioSimulinkExampleDataDisplayName">Example (Simulink)</entry>
        <entry key="RadioDocumentationDataDisplayName">Documentation</entry>

        <!-- Pluto SPKG Radios -->
        <!-- PlutoRadio FMBroadcastReceiverExampleData -->
        <entry key="FMBroadcastReceiverExampleDataName">FM Broadcast Receiver</entry>
        <entry key="FMBroadcastReceiverExampleDataDescription">This example shows how to build an FM mono or stereo receiver. You can either use recorded data from a file, or receive signals in real time using the RTL-SDR Radio, ADALM-PLUTO Radio, or USRP™ Radio.</entry>
        <!-- PlutoRadio CaptureRFDataExampleData -->
        <entry key="CaptureRFDataExampleDataName">Capture RF Data to Baseband File Using ADALM-PLUTO Radio</entry>
        <entry key="CaptureRFDataExampleDataDescription">Use the capture function and an ADALM-PLUTO radio to record RF signals for post-capture processing in MATLAB®. Save an FM broadcast signal to a file as baseband samples. Read the file containing the recorded signal and demodulate the baseband samples.</entry>
        <!-- PlutoRadio PlutoRadioDocData -->
        <entry key="PlutoRadioDocDataName">ADALM-Pluto Radio</entry>
        <entry key="PlutoRadioDocDataDescription">Design SDR systems using Analog Devices® ADALM-Pluto Radio</entry>
        <!-- PlutoRadio HardwareSetupData -->
        <entry key="PlutoRadioHardwareSetupDataDescription">Prototype and test software-defined radio (SDR) systems using ADALM-Pluto with MATLAB and Simulink.</entry>
        <!-- PlutoRadio AddOnData -->
        <entry key="PlutoRadioAddOnDataFullName">Communications Toolbox Support Package for Analog Devices ADALM-Pluto Radio</entry>

        <!-- RTL-SDR SPKG Radios -->
        <!-- RTL RunOnTargetHWDocData -->
        <entry key="FMReceptionWithRTLSDRRadioExampleDataName">FM Reception with RTL-SDR Radio on Raspberry Pi Hardware with Simulink</entry>
        <entry key="FMReceptionWithRTLSDRRadioExampleDataDescription">This example shows how to build an FM mono receiver using a Raspberry Pi™ and RTL-SDR radio. You will learn how to deploy a Simulink® model that processes FM broadcast signals and play the audio through the Raspberry Pi's speaker.</entry>
        <!-- RTL RTLRadioDocData -->
        <entry key="RTLRadioDocDataName">RTL-SDR Radio</entry>
        <entry key="RTLRadioDocDataDescription">Acquire RF data using RTL-SDR</entry>
        <!-- RTL HardwareSetupData -->
        <entry key="RTLRadioHardwareSetupDataDescription">Prototype and test software-defined radio (SDR) systems using RTL-SDR with MATLAB and Simulink.</entry>
        <!-- RTL AddOnData -->
        <entry key="RTLRadioAddOnDataFullName">Communications Toolbox Support Package for RTL-SDR Radio</entry>

        <!-- USRP SPKG Radios -->
        <!-- USRP FMDemodulationExampleData -->
        <entry key="FMDemodulationExampleDataName">FM Demodulation and Spectrum Analysis with USRP Radio</entry>
        <entry key="FMDemodulationExampleDataDescription">This example shows how to demodulate and perform wideband and narrowband analysis of the FM radio spectrum using a USRP™ radio. The wideband analysis involves capturing the entire FM band and identifying the strongest station, while the narrowband analysis focuses on real-time processing of a single FM station signal.</entry>
        <!-- USRP MultipleChannelIOExampleData -->
        <entry key="MultipleChannelIOExampleName">Multiple Channel Input and Output Operations</entry>
        <entry key="MultipleChannelIOExampleDescription">For multiple input multiple output (MIMO) operations, you can use multichannel radios or use single channel radios bundled together.</entry>
        <!-- USRP USRP200RadioDocData -->
        <entry key="USRP200RadioDocDataName">USRP Radio</entry>
        <entry key="USRP200RadioDocDataDescription">Design SDR systems using USRP™ Radio</entry>
        <!-- USRP HardwareSetupData -->
        <entry key="USRPSPKGRadioHardwareSetupDataDescription">Prototype and test software-defined radio (SDR) systems using USRP™ B2xx and N2xx radios with MATLAB and Simulink.</entry>
        <!-- USRP AddOnData -->
        <entry key="USRPRadioAddOnDataFullName">Communications Toolbox Support Package for USRP Radio</entry>

        <!-- WT Radios -->
        <!-- USRP LoopbackTransmitAndCaptureExampleData -->
        <entry key="LoopbackTransmitAndCaptureExampleDataName">Loopback Transmit and Capture</entry>
        <entry key="LoopbackTransmitAndCaptureExampleDataDescription">This example shows how to configure an SDR as a baseband transceiver to transmit and capture a custom wireless waveform over the air.</entry>
        <!-- USRP TriggeredCaptureUsingEnergyDetectionExampleData -->
        <entry key="TriggeredCaptureUsingEnergyDetectionExampleDataName">Triggered Capture Using Energy Detection</entry>
        <entry key="TriggeredCaptureUsingEnergyDetectionExampleDataDescription">This example shows how to use an SDR to capture data from the air using energy detection. The example also shows how to use the transmit capabilities of the same radio to loop back a test waveform.</entry>
        <!-- USRP NIUSRPTargetingWorkflowExampleData -->
        <entry key="NIUSRPTargetingWorkflowExampleDataName">Getting Started with NI USRP Targeting Workflow</entry>
        <entry key="NIUSRPTargetingWorkflowExampleDataDescription">This example shows how to deploy a custom algorithm on the FPGA of an NI™ USRP™ radio. The example starts with a Simulink® model of an algorithm that applies a gain to incoming samples and takes you through steps to generate HDL code and deploy the design on your radio.</entry>
        <!-- USRP HardwareSetupData -->
        <entry key="WTRadiosSPKGHardwareSetupDataDescription">Prototype and test software-defined radio (SDR) systems using USRP™ E320, N3xx, X3xx, and X410 radios with MATLAB and Simulink.</entry>
        <!-- USRP AddOnData -->
        <entry key="WTToolboxAddOnDataFullName">Wireless Testbench</entry>
        <entry key="WTRadiosSPKGAddOnDataFullName">Wireless Testbench Support Package for NI USRP Radios</entry>

    </message>
</rsccat>
