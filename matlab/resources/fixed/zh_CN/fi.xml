<?xml version="1.0" encoding="UTF-8"?>
<!--Copyright 2025 The MathWorks, Inc.-->

<rsccat xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.0" locale="zh_CN" product="fixed" xsi:noNamespaceSchemaLocation="../../resources/schema/msgcat.xsd">
  <message>
    <entry key="AllFloatSameClassOrBinaryPoint">{0} 必须全部为具有相同类的浮点数，或全部为具有二进制小数点定标的定点数。</entry>
    <entry key="AllRealFloatSameClassOrBinaryPoint">{0} 必须为实数，并且全部为具有相同类的浮点数，或全部为具有二进制小数点定标的定点数。</entry>
    <entry key="DimAgree">矩阵维度必须一致。</entry>
    <entry key="DimensionMustBePositiveInteger">维度参量必须是处于索引范围内的正整数标量。</entry>
    <entry key="DimsIncompatible">输入维度不兼容。</entry>
    <entry key="DivideNoComplexDivisor">除法不支持复数除数。</entry>
    <entry key="FloatOrBinaryPoint">{0} 必须为浮点数或具有二进制小数点定标的定点数。</entry>
    <entry key="IndexAssignElementCountMismatch">在 A(I) = B 赋值中，B 和 I 中的元素数必须相同。</entry>
    <entry key="InterpNoExtrap">{0} 不支持 ''extrap'' 外插策略。</entry>
    <entry key="InvalidFiConstructorUse">fi 构造函数的输入无效。</entry>
    <entry key="InvalidFixedNumberInput">Expected input of class fixed.BinaryScaling, found something else.</entry>
    <entry key="InvalidInputNotNumeric">值必须为数值。</entry>
    <entry key="InvalidInputNotReal">值必须为实数。</entry>
    <entry key="InvalidInputNotRealScalar">{0} must be a real scalar quantity.</entry>
    <entry key="InvalidInputNotScalarBuiltinNumericOrLogical">''{0}'' must be a scalar built-in numeric or logical type.</entry>
    <entry key="InvalidInputNotString">{0} 必须为字符向量。</entry>
    <entry key="InvalidInputNotStringOrNumericOrLogical">{0} must be numeric, logical, or a character vector that evaluates to numeric or logical.</entry>
    <entry key="InvalidOverflowMode">Overflowmode 必须为 ''wrap'' 或 ''saturate''。</entry>
    <entry key="InvalidRoundMode">RoundMode 必须为 ''zero''、''nearest''、''ceiling''、''floor''、''simplest''、''round'' 或 ''convergent'' 之一。</entry>
    <entry key="InvalidSizeParameter">在 {0} 中，SIZE 参数必须为双精度数组。</entry>
    <entry key="InvalidSumDimParameter">在 {0} 中，sumDim 参数必须大于 1。</entry>
    <entry key="InvalidWordLength">Invalid WordLength specified. It must be greater than 0 and less than 65536.</entry>
    <entry key="MustBeFinite">Parameter ''{0}'' must be finite.</entry>
    <entry key="MustBeNonnegative">输入 {0} 必须为非负值。</entry>
    <entry key="MustBeNumber">参数 ''{0}'' 必须为数值。</entry>
    <entry key="MustBeReal">{0} 必须为实数。</entry>
    <entry key="MustNotBeEmpty">Parameter ''{0}'' must not be empty.</entry>
    <entry key="RealFloatOrBinaryPoint">{0} 必须为实数和浮点数或具有二进制小数点定标的定点数。</entry>
    <entry key="SubsrefBadIndex">索引超出矩阵维度。</entry>
    <entry key="TooManyFixedPointInputs">Fixed-point {0} only supports {1} input arguments.</entry>
    <entry key="UnsupportedInterpolationMethod">{0} 仅支持 {1} 和 {2} 插值。</entry>
    <entry key="XYBothFixedOrFloat">Inputs {0} and {1} must either be both floating-point or both fixed-point types</entry>
    <entry key="allTypesEquivalent">The types of all inputs must be equivalent.</entry>
    <entry key="antiDiagonalConflict">输入列的最后一个元素与输入行的第一个元素不匹配。\n反对角线冲突中列优先。</entry>
    <entry key="argSizeMismatch">The {0} and {1} arguments to {2} must be the same size.</entry>
    <entry key="badIndex">索引超出矩阵维度。</entry>
    <entry key="badSubscript">下标索引必须为正实整数或逻辑值。</entry>
    <entry key="baseMustBeNumeric">底必须为数值。</entry>
    <entry key="baseOutOfRange">Base value must be &gt;= 2 and &lt;= {0, number, integer}.</entry>
    <entry key="binaryPointOnlyFi_NT">{0} can only be calculated for FI object A and \n numerictype T when the scaling of A and T have an integer power of 2 slope, \n and a bias of 0 (binary-point only scaling).</entry>
    <entry key="binaryPointOnlyInputs">定点和定标双精度输入必须为二进制小数点定标数。</entry>
    <entry key="binaryPointOnlyMath">''{0}'' is only supported for FI object operands that have an integer power of 2 slope, and a bias of 0.</entry>
    <entry key="binaryopSignatureNotFound">找不到签名。</entry>
    <entry key="bitIndicesNotInRange">在 ''{0}'' 中，字长 &gt;= 左索引 &gt;= 右索引 &gt;= 1。</entry>
    <entry key="bitMustBeInteger">BIT must be integer in ''{0}''.</entry>
    <entry key="bitPositionInvalid">位的位置无效: {0} 必须为正数，并且小于或等于 {2} 中的 {1}.WordLength。</entry>
    <entry key="bitRotateIndexFINotSupported">{0} 旋转索引不能为 FI 对象。</entry>
    <entry key="bitRotateIndexMustBeReal">{0} 旋转索引操作数必须为实数。</entry>
    <entry key="bitShiftNotInteger">K must be an integer in BITSHIFT(A,K) when A is a FI object.</entry>
    <entry key="bitShiftNotReal">K must be real in BITSHIFT(A,K) when A is a FI object.</entry>
    <entry key="bitsetValueInvalid">BITSET(A,BIT,V) 中的值 V 必须为内置数值或逻辑值类型。</entry>
    <entry key="bothInputsSameBias">Both inputs must have the same Bias.</entry>
    <entry key="bothInputsSameSlopeAdjustmentFactor">Both inputs must have the same SlopeAdjustmentFactor.</entry>
    <entry key="cannotOperateOnMatrix">Cannot operate on a matrix-valued fi object; must be a row or column vector.</entry>
    <entry key="colonOperandsMustBeIntegerValued">与类型 ''embedded.fi'' 交互时，冒号操作数必须具有整数值。</entry>
    <entry key="columnNumberOutOfRange">{0} 中的列号超出范围。</entry>
    <entry key="complexNoLogicalInput">COMPLEX 的输入参数不能为布尔值。</entry>
    <entry key="complexNotSupported">统一定点转换不支持复数值。</entry>
    <entry key="convIncorrectShapeInput">Shape must be one of ''FULL'', ''SAME'' or ''VALID''.</entry>
    <entry key="dataTypeNotSupported">数据类型不受支持。</entry>
    <entry key="diagonalConflict">输入列的第一个元素与输入行的第一个元素\n不匹配。在对角线冲突中，列具有更高优先级。</entry>
    <entry key="dialogDataTypePrompt">数据类型:</entry>
    <entry key="dialogLocalFimathPrompt">局部 fimath:</entry>
    <entry key="dialogValuePrompt">值:</entry>
    <entry key="digitsOfPrecisionOutOfRange">精度的位数必须为小于 65536 的正整数。</entry>
    <entry key="dimInputMustBeNumeric">''{0}'' 的维度输入必须为 ''数值'' 类型。</entry>
    <entry key="divideByZero">出现除以零。商经过饱和处理。</entry>
    <entry key="divideDenominatorNotReal">在 A./B 和 A/B 中，如果 A 或 B 为 fi 对象，则分母 B 必须为实数。</entry>
    <entry key="divideNonDoubleUnsupported">Fixed-point DIVIDE not supported for (built-in non-double)/(built-in non-double).</entry>
    <entry key="divideNonScalarDivisor">对于 fi 对象，A/B 中的 B 必须为标量。</entry>
    <entry key="divideNonSpecifiedScaling">DIVIDE(T,A,B) is not supported when numerictype T has unspecified scaling.</entry>
    <entry key="divideNonSpecifiedSign">DIVIDE(T,A,B) is only supported when the SIGNEDNESS of NUMERICTYPE object T is SIGNED or UNSIGNED.</entry>
    <entry key="divideSignatureNotFound">找不到签名。</entry>
    <entry key="divideUnhandledIntegerType">定点除法中的整数类型无法识别。</entry>
    <entry key="divideUnhandledOutputType">无法计算定点除法的输出数据类型。</entry>
    <entry key="emptyArgumentUnsupported">{1} 中的参数 {0} 不能为空。</entry>
    <entry key="emptyNotAllowed">Empty input not allowed in function {0}.</entry>
    <entry key="evenspacingFailed">The attempt to produce an exactly evenly spaced vector failed. The minimum spacing was {0} and the maximum spacing was {1}.</entry>
    <entry key="exactPowerOfTwo">必须正好是 2 的幂。</entry>
    <entry key="filterIncorrectStateNumerictype">The states must be a fi object matching the output numerictype, which is DataType = {0}, Signedness = {1}, WordLength = {2,number,integer}, FractionLength = {3,number,integer}.</entry>
    <entry key="filterInsufficientMaxProdWordLength">The minimum number of bits required to guarantee that this product can be computed with no loss of precision exceeds the MaxProductWordLength setting</entry>
    <entry key="filterInsufficientMaxSumWordLength">The minimum number of bits required to guarantee that this sum can be computed with no loss of precision exceeds the MaxSumWordLength setting</entry>
    <entry key="filterInvalidInitialConditionSize">Initial conditions must be a vector of length length(b)-1 or an array with the leading dimension of size length(b)-1 and with remaining dimensions matching those of x.</entry>
    <entry key="filterNumVectorOnly">The numerator must be a vector.</entry>
    <entry key="filterSupportFIROnly">FILTER 仅支持等于 1 的分母(FIR)。</entry>
    <entry key="fimathMismatch">两个操作数的 embedded.fimath 必须相等。</entry>
    <entry key="firstDimensionMustNotBeVariableSized">''{0}'' 输入的第一个维度不能为可变大小。</entry>
    <entry key="firstInputMustBe2D">第一个输入必须为二维。</entry>
    <entry key="firstInputNotFi">第一个输入参数必须为 fi 对象。</entry>
    <entry key="fixedAndFloatInputArgs">不支持定点和浮点输入的组合。</entry>
    <entry key="floatAndNonFloatInputArgsNotSupported">不支持浮点和非浮点输入的组合。</entry>
    <entry key="indexMustBeNumeric">{0} 索引必须为数值。</entry>
    <entry key="indexMustBePositiveInteger">{0} 索引仅对正整数有效。</entry>
    <entry key="indexNotDouble">索引参数必须为双精度值。</entry>
    <entry key="indexNotNumeric">Index must be numeric.</entry>
    <entry key="indexNotScalar">Index must be scalar.</entry>
    <entry key="indexOutOfRange">{0} 超过 {1} 中的原始矩阵大小。</entry>
    <entry key="indexToRemoveExceedsMatrixDimensions">要删除的元素的索引超出矩阵维度。</entry>
    <entry key="innerDimAgree">内部矩阵维度必须一致。</entry>
    <entry key="inputArgMustBeNonScalar">输入参数 A 在 {0}(A) 中必须有至少两个元素。</entry>
    <entry key="inputArgMustBeSigned">Input argument {0} must be signed.</entry>
    <entry key="inputArgsNotFis">输入参数必须为 fi 对象。</entry>
    <entry key="inputEitherFirstTwoMustBeFixed">The first or second input must be fixed-point. The first two input types are {0} and {1}.</entry>
    <entry key="inputFiMustBeBinPtScaled">当输入参数 {0} 是 fi 对象时，它必须具有二进制小数点定标。</entry>
    <entry key="inputFloatingPoint">The type of the inputs must be floating-point.</entry>
    <entry key="inputMustBe2D">Input to ''{0}'' must be two-dimensional.</entry>
    <entry key="inputMustBeDouble">输入值必须为双精度。</entry>
    <entry key="inputMustBeFi">Input must be a fi object.</entry>
    <entry key="inputMustBeFixedPointNumericType">The {0} function only supports integer, fixed-point, and ScaledDouble inputs.</entry>
    <entry key="inputMustBeFullNumericType">Input must be a fully specified numerictype. Unspecified scaling and auto signedness are not supported.</entry>
    <entry key="inputMustBeIntFixPtOrBool">Input must be an integer, fixed-point, or logical.</entry>
    <entry key="inputMustBeIntFixPtOrScaledDouble">Input must be an integer, fixed-point, or scaled double.</entry>
    <entry key="inputMustBeIntLogicalOrNonFloatingPointFi">''{0}'' 的输入必须为内置整数类型、逻辑类型或定点数，并且 ''DataType'' 属性设置为 ''Fixed''。</entry>
    <entry key="inputMustBeIntOrFixPt">Input must be an integer or fixed-point.</entry>
    <entry key="inputMustBeScalarInteger">输入必须为标量和整数值。</entry>
    <entry key="inputMustHaveZeroBias">The fixed-point scaling of the input must have zero bias.</entry>
    <entry key="inputOutOfRange">''{1}'' 的输入 ''{0}'' 必须 &gt;= {2} 且 &lt;= {3}。</entry>
    <entry key="inputsFirstTwoMustHaveSameDatatype">The first two inputs must have equivalent numerictypes. The types are {0} and {1}.</entry>
    <entry key="inputsMustBe2D">输入参数必须为二维。</entry>
    <entry key="inputsMustBeFixPtBPSOrFloatSameDTMode">Input arguments must have the same ''DataTypeMode'' property. This property setting must be ''Fixed-point: binary point scaling'', ''Scaled double: binary point scaling'', ''double'', or ''single''.</entry>
    <entry key="inputsMustBeFixPtBPSOrNumTypeOrInt">Input arguments must be binary point scaled FI or NUMERICTYPE objects, or integer types.</entry>
    <entry key="inputsMustBeIntOrFixPtBPSOrSDBPS">Input argument must be an integer or a binary point scaled FI object with fixed-point or scaled double data type or a floating-point FI object.</entry>
    <entry key="inputsMustBeNumeric">输入必须为数值。</entry>
    <entry key="inputsMustHaveSameDatatypeMode">{0} 的所有输入必须具有相同的 ''DataTypeMode'' 属性。</entry>
    <entry key="inputsNotNumericVectors">''{0}'' 的输入必须为数值向量。</entry>
    <entry key="intOver64Bits">INT 方法不支持大于 64 位的整数。将改为返回 DOUBLE。对于大于 64 位的字长，INT 方法的返回值中可能会引入舍入误差。要获得任意字长的精确整数表示，请使用 BIN、OCT、DEC 或 HEX。</entry>
    <entry key="intarrayInvalidDataType">当 fi 为双精度、单精度或定标双精度值时，\n整数数组必须为双精度或单精度类。</entry>
    <entry key="intarrayLeadingDim">整数数组的第一个维度必须能被 {0, number,integer} 整除。</entry>
    <entry key="intarrayNot32or64BitInt">当字长大于 32 位时，整数数组必须为 uint32、uint64 或 int64。</entry>
    <entry key="intarrayNotUint32">当字长大于 32 时，整数数组必须为 uint32。</entry>
    <entry key="invalidBitAndVRange">BIT 必须为整数，V 必须为 0 或 1。</entry>
    <entry key="invalidBitReplicationConstant">The bit replication constant must be greater than 0.</entry>
    <entry key="invalidConstructor">Fixed-Point Designer: 对虚拟 {0} 构造函数的调用无效。请向 support@mathworks.com 报告此问题，\n包括重现错误的示例代码。</entry>
    <entry key="invalidConstructorInput">fi 构造函数的输入不能属于 {0} 类。</entry>
    <entry key="invalidConstructorNonNumericInputs">FI constructor only valid for numeric data.</entry>
    <entry key="invalidConstructorNumericInputs">Too many initial numeric arguments.</entry>
    <entry key="invalidConstructorPVPairs">参数/值对组参数无效。</entry>
    <entry key="invalidConstructorSignedValue">FI 对象的 SIGNED 属性必须为 1 (true)或 0 (false)。</entry>
    <entry key="invalidDataType">The data type ''{0}'' is not supported for input {1} to function {2}.</entry>
    <entry key="invalidDimInput">Dimension must be a real, positive, integer scalar.</entry>
    <entry key="invalidElement">元素({0,number,integer},{1,number,integer})处的输入数组无效。</entry>
    <entry key="invalidExponent">''{0}'' 的指数输入必须为实数标量，并且该值必须为非负整数。</entry>
    <entry key="invalidInputDataTypeCombination">Unsupported input data type combination.</entry>
    <entry key="invalidLogType">GETQLOGGERSTRUCT 的 logtype 参数无效。</entry>
    <entry key="invalidNumberOfInputArgs">输入参数的数目无效。</entry>
    <entry key="invalidPropertyEnum">PropertyEnum 超出范围。有效值为 {0,number,integer} 到 {1,number,integer}，但输入了 {2,number,integer}。</entry>
    <entry key="invalidShiftIndex">移位索引必须大于或等于 0。</entry>
    <entry key="invalidSyntax">This syntax is not supported by the {0} function. See the Function Reference page in the Fixed-Point Designer documentation for a list of supported syntaxes.</entry>
    <entry key="kMustBeNumeric">当 A 为 FI 对象时，{0} 中的 K 必须为数值。</entry>
    <entry key="kMustBeScalar">K must be scalar in {0} when A is a FI object.</entry>
    <entry key="kthDiagonalInputNotFinite">对于 DIAG 的向量输入形式，第 K 个对角输入必须为有限输入。</entry>
    <entry key="kthDiagonalInputNotInteger">第 K 个对角输入必须为整数标量。</entry>
    <entry key="legacyArithmeticRule1or2inputs">对于一个或两个输入，fi 对象只使用旧的 {0} 规则。</entry>
    <entry key="licenseCheckoutFailed">无法签出 Fixed-Point Designer 的许可证。</entry>
    <entry key="localFimathMismatch"> The local embedded.fimath objects attached to the fi objects must be equal.</entry>
    <entry key="mathModeSlopeBiasNotDefined">Math is only supported for slope-bias FIs when the {0}Mode is SpecifyPrecision.</entry>
    <entry key="maxProductWordLengthExceeded">MaxProductWordLength 为 {0,number,integer} 位，最小字长为 {1,number,integer} 位是必要的，这样可以在不损失精度的情况下计算此乘积。如果希望乘积增长到更大的字长，请增大 MaxProductWordLength。要将结果约束为具有较小字长的类型，请使用冒号等号赋值 A(:) = B 或 CAST 函数。</entry>
    <entry key="maxSumWordLengthExceeded">MaxSumWordLength 为 {0,number,integer} 位，最小字长为 {1,number,integer} 位是必要的，这样可以在不损失精度的情况下计算此和或差。如果希望和增长到更大的字长，请增大 MaxSumWordLength。要将结果约束为具有较小字长的类型，请使用冒号等号赋值 A(:) = B 或 CAST 函数。</entry>
    <entry key="maxVariableSizeExceeded">超出了程序允许的最大变量值。</entry>
    <entry key="maxWordLengthExceeded">The computed word length of the result is {0,number,integer} bits. This exceeds the maximum supported wordlength of {1,number,integer} bits.</entry>
    <entry key="mismatchedNumericTypes"> {0} 函数的定点输入必须具有匹配的类型。</entry>
    <entry key="mixedNumericTypes">{0} 必须具有匹配的操作数类型。</entry>
    <entry key="noBuiltinIntegerInputs">不支持内置整数输入。</entry>
    <entry key="noMixedTypes">不支持 {0} 和 {1} 输入的组合。</entry>
    <entry key="noNaN">NaN is not allowed in FI.</entry>
    <entry key="noOpLeadingToComplexSlopeBias">Fixed-Point Designer 操作创建的所有复数 FI 对象\n必须具有 2 的整数次幂斜率和 0 偏置。</entry>
    <entry key="noSignalToolboxLicense">There must be a Signal Processing Toolbox license available to use the ''{0}'' command with fi objects.</entry>
    <entry key="notCharArray">{0} 输入数组不是字符数组。</entry>
    <entry key="notDefinedForComplexFi">Function ''{0}'' is not defined for complex-valued FI objects.</entry>
    <entry key="notDefinedForComplexSlopeBiasFi">函数 {0} 只支持斜率为 2 的整数次幂且偏置为 0 的复数值 FI 对象。</entry>
    <entry key="notDefinedForOneBitFi">The function ''{0}'' is not defined for 1 bit fi objects.</entry>
    <entry key="notDefinedFunction">Function ''{0}'' is not defined for FI objects of data type ''{1}''.</entry>
    <entry key="notNumericDataType">{0} is only valid for built-in numeric data types.</entry>
    <entry key="numerictypeMismatch">两个操作数的 NUMERICTYPE 必须相等。</entry>
    <entry key="onlyBinaryPointMath">Math is supported only for binary-point scaling.</entry>
    <entry key="operandMustBeNumeric">操作数必须为数值。</entry>
    <entry key="outOfMemory">没有足够的内存来分配新 fi 对象。</entry>
    <entry key="overflow">fi {2} 运算中发生 {0, number, integer}{1} 次溢出。</entry>
    <entry key="parameterMustBeFi">此参数必须为 fi。</entry>
    <entry key="pow2BinaryPointOnly">pow2(A,K) can only be calculated for FI object A when the scaling of A has a fractional slope of 1 and 0 bias (binary-point only scaling).</entry>
    <entry key="pow2NotSupported">POW2(A) is not supported when A is a FI object.</entry>
    <entry key="qrEconomyModeNotSupported">Economy size decomposition is not supported for fixed-point inputs.</entry>
    <entry key="qrLeastSquaresNotSupported">The least-squares-solution form is not supported for fixed-point inputs.</entry>
    <entry key="qrPivotingNotSupported">Pivoting is not supported for fixed-point inputs.</entry>
    <entry key="quantizerFromFiBadDataType">DataType not recognized.</entry>
    <entry key="quantizerFromFiBadScaling">Scaling value not recognized.</entry>
    <entry key="quantizerFromFiNTArgMustBeFixedPoint">Only fixed-point NUMERICTYPE input arguments are supported by QUANTIZER objects.</entry>
    <entry key="quantizerFromFiNoSlopeBias">SlopeBias scaling not supported by QUANTIZER objects.</entry>
    <entry key="quantizerFromFiNoUnspecifiedScaling">Unspecified scaling not supported by QUANTIZER objects.</entry>
    <entry key="realAndNumeric">Input argument must be real and numeric.</entry>
    <entry key="realAndSigned">Input must be real and signed.</entry>
    <entry key="reinterpretcastNotAllowed">函数 ''reinterpretcast'' 没有定义为支持数据类型为 ''{0}'' 的输入。</entry>
    <entry key="reinterpretcastUnspecifiedScaling">REINTERPRETCAST(A,T) is not supported when numerictype T has unspecified scaling.</entry>
    <entry key="reinterpretcastUnspecifiedSign">REINTERPRETCAST(A,T) 仅在 NUMERICTYPE 对象 T 的 SIGNEDNESS \n为 SIGNED 或 UNSIGNED 时受支持。</entry>
    <entry key="reinterpretcastWordLengthMismatch">在对 REINTERPRETCAST(A, T) 的调用中，A 和 T 的字长必须匹配。当前，A 的数据类型为 ''{0}''，T.WordLength 为 {1}。</entry>
    <entry key="rescaleInvalidParamValuePair">参数/值对组参量无效。</entry>
    <entry key="rescaleInvalidPropertyChange">Changing the {0} is not allowed in RESCALE.</entry>
    <entry key="rescaleNoSignChange">Changing the Sign is not allowed in RESCALE.</entry>
    <entry key="rescaleNoUnspecifiedScaling">Unspecified scaling is not allowed in RESCALE.</entry>
    <entry key="rescaleNoWordLengthChange">Changing the WordLength is not allowed in RESCALE.</entry>
    <entry key="rescaleTooManyNumericArgs">Too many initial numeric arguments.</entry>
    <entry key="reshapeDimsNotDivisible">已知维度的乘积 {0} 不能整除元素总数 {1}。</entry>
    <entry key="reshapeDimsNotRealInt">大小参量必须为整型实数。</entry>
    <entry key="reshapeNotSameNumel">要执行 RESHAPE，请勿更改元素数目。</entry>
    <entry key="reshapeSizNotDouble">FI_RESHAPE 需要 DOUBLE 类型的 SIZ 向量。</entry>
    <entry key="reshapeSizeIsNegative">大小向量元素应为非负数。</entry>
    <entry key="reshapeSizeIsScalar">大小向量必须包含至少两个元素。</entry>
    <entry key="reshapeSizeNotVector">大小向量必须是包含整数元素的行向量。</entry>
    <entry key="reshapeUnknownDim">大小只能具有一个未知维度。</entry>
    <entry key="roundingMethodUnknown">舍入方法 {0} 未知。</entry>
    <entry key="saturateToMaxCodegenWordlength">已超过 Simulink 和代码生成的最大字长 {0,number,integer}。字长将设置为最大值。</entry>
    <entry key="saturateToMaxWordlength">已超过最大字长 {0,number,integer}。字长将设置为最大值。</entry>
    <entry key="setBestPrecisionMustBeNumeric">设置最佳精度仅对数值数据有效。</entry>
    <entry key="setBestPrecisionUnspecifiedSign">Sign 必须指定为 true (有符号)或 false (无符号)才能计算最佳精度。</entry>
    <entry key="simulinkData128Bits">Simulink 中的定点数据类型的字长必须小于或等于 128 位。</entry>
    <entry key="sortInvalidFiDimInput">DIM and MODE arguments to SORT cannot be FI objects.</entry>
    <entry key="sqrtMethodAmbiguous">指定的方法名称具有多义性。</entry>
    <entry key="sqrtMethodNotFound">找不到 ''{0}'' 平方根方法。</entry>
    <entry key="sqrtNoBoolean">当 A 或 T 的数据类型为布尔类型时，不支持 sqrt 函数。</entry>
    <entry key="sqrtNoNegative">The sqrt function is not supported for negative valued fi.</entry>
    <entry key="sqrtOutputRangeTooSmall">输出类型的范围无法表示输入类型范围的平方根。</entry>
    <entry key="sqrtUnspecifiedScaling">sqrt(A,T) or sqrt(A,T,F) is not supported when numerictype T has unspecified scaling.</entry>
    <entry key="sqrtUnspecifiedSign">当 numerictype T 具有未指定的符号时，不支持 sqrt(A,T) 或 sqrt(A,T,F)。</entry>
    <entry key="staticEmptyMethodUnsupported">embedded.fi 类不支持静态方法 empty。请使用 ''fi()'' 创建一个空 fi 对象。</entry>
    <entry key="storedIntegerOver64bits">Integers greater than 64 bits are not supported in the ''{0}'' function. For exact integer representation for any word length, use BIN, OCT, DEC, or HEX. To convert a stored integer value to double for any word length, use storedIntegerToDouble. </entry>
    <entry key="subsasgnRhsOfUnsupportedType">The operand on the right hand side of operator '=' in the \n subscripted assignment operation must belong to a type that can be cast \n into a FI object.</entry>
    <entry key="subscriptedIndexParenthesisLast">下标索引必须出现在索引表达式的最后。</entry>
    <entry key="sumRepeatedFlagNaN">Invalid option combination. Can only set one of ''omitnan'' and ''includenan''.</entry>
    <entry key="sumUnknownFlag">Invalid option. Option must be ''double'', ''native'', ''default'', ''omitnan'', or ''includenan''.</entry>
    <entry key="tooManyBits">fi 对象的字长比您尝试分配的\n位数短。仅使用了 {0, number, integer} 个最低有效位。</entry>
    <entry key="tooManyInputs">输入参数太多。</entry>
    <entry key="tooManyOutputs">输出参数太多。</entry>
    <entry key="transposeNDArray">未定义 N 维数组的转置。</entry>
    <entry key="twoInpArgsNonScalarNotSameSize">If both input arguments are non-scalar, then they must be the same size.</entry>
    <entry key="undefinedFunction">未定义与 ''embedded.fi'' 类型的输入参数相对应的函数 ''{0}''。</entry>
    <entry key="undefinedFunctionGeneral">未定义与 ''{1}'' 类型的输入参数相对应的函数 ''{0}''。</entry>
    <entry key="underflow">fi {2} 运算中发生 {0, number, integer}{1} 次下溢。</entry>
    <entry key="unrecognizedProperty">属性 ''{0}'' 未识别为有效属性。</entry>
    <entry key="unsupportedBooleanMath">Math operations are not allowed on fi objects with a boolean data type.</entry>
    <entry key="unsupportedCastBeforeSumFalseSlopeBias">函数 {0} 没有定义为在 CastBeforeSum 为 false 时支持具有斜率和偏置定标的 FI 对象。</entry>
    <entry key="unsupportedComplexArguments">The input arguments to the ''{0}'' function must be real.</entry>
    <entry key="unsupportedComplexBoolean"> The ''{0}'' function does not support complex fi objects of data type ''boolean''.</entry>
    <entry key="unsupportedComplexDatatype">Complex FI objects with ''DataType'' {0} are unsupported as inputs to the ''{1}'' function.</entry>
    <entry key="unsupportedComplexInput">The {0} function is not supported for complex fi.</entry>
    <entry key="unsupportedComplexSlopeBias">复数 FI 对象必须具有 2 的整数次幂斜率和 0 偏置。</entry>
    <entry key="unsupportedDataType">FI objects of data type ''{0}'' are not supported.</entry>
    <entry key="unsupportedFiMixedMath">Math operations are not allowed on fi objects with different data types.</entry>
    <entry key="unsupportedFloat16Math">不允许对具有半精度数据类型的 fi 对象进行数学运算。</entry>
    <entry key="unsupportedInfInput">Inf is not supported for best-precision scaling fixed-point.  To use Inf as a fixed-point value, fully specify the numeric type.</entry>
    <entry key="unsupportedMixedMath">Data type mismatches between fi object operands of the ''{0}'' function are only allowed when the mismatch occurs between a ''Fixed'' and ''ScaledDouble'' data type.</entry>
    <entry key="unsupportedNanInput">最佳精度定标定点不支持 NaN。要将 NaN 用作定点值，请完全指定数值类型。</entry>
    <entry key="unsupportedNumericTypeFirstInput">The first input to the fi constructor cannot be of type embedded.numerictype or Simulink.NumericType.</entry>
    <entry key="unsupportedPropCodeGen">Property ''{0}'' is not supported in code generation.</entry>
    <entry key="unsupportedScaledDoubleFunction">当 DataType 为 ''ScaledDouble'' 时，不支持 ''{0}''。</entry>
    <entry key="unsupportedScaledDoubleSlopeBiasMath">当 DataTypeMode 为 ''定标双精度: 斜率和偏置定标'' 时，\n不支持对斜率偏置 FI 进行数学运算。</entry>
    <entry key="unsupportedSlopeBias">The ''{0}'' function only supports fi objects that have a power of 2 slope and a bias of 0.</entry>
    <entry key="unsupportedSlopeBiasObj">The object ''{0}'' only support fi inputs with a power of 2 slope and a bias of 0.</entry>
    <entry key="unsupportedSparseInput">The {0} does not support inputs with sparse attributes.</entry>
    <entry key="unsupportedSparseInputs">{0} 不支持具有稀疏属性的输入。</entry>
    <entry key="unsupportedSparseOperations">fi 对象不支持对稀疏矩阵的运算。</entry>
    <entry key="unsupportedStructFirstInput">fi 构造函数的第一个输入不能为结构体类型。</entry>
    <entry key="unsupportedSyntax">{1} 函数不支持 {0} 语法。</entry>
    <entry key="unsupportedType">不支持 ''{0}'' 类的输入。</entry>
    <entry key="wordLengthTooBig">FI 对象的字长必须等于或小于 32 位。</entry>
    <entry key="wrongWordlength">数值类型的字长必须等于\n要强制转换的 fi 对象的字长。</entry>
    <entry key="DataTypeModeFixedUnspecified">定点: 未指定定标</entry>
    <entry key="DataTypeModeFixedBinaryPoint">定点: 二进制小数点定标</entry>
    <entry key="DataTypeModeFixedSlopeAndBias">定点: 斜率和偏置定标</entry>
    <entry key="DataTypeModeScaledDoubleUnspecified">定标双精度: 未指定定标</entry>
    <entry key="DataTypeModeScaledDoubleBinaryPoint">定标双精度: 二进制小数点定标</entry>
    <entry key="DataTypeModeScaledDoubleSlopeAndBias">定标双精度: 斜率和偏置定标</entry>
    <entry key="RoundingMethodCeiling">向上</entry>
    <entry key="RoundingMethodConvergent">收敛</entry>
    <entry key="RoundingMethodZero">零</entry>
    <entry key="RoundingMethodFloor">向下</entry>
    <entry key="RoundingMethodNearest">最邻近值</entry>
    <entry key="RoundingMethodRound">舍入</entry>
    <entry key="SignednessSigned">有符号</entry>
    <entry key="SignednessUnsigned">无符号</entry>
    <entry key="SignednessAuto">自动</entry>
    <entry key="OverflowActionSaturate">饱和</entry>
    <entry key="OverflowActionWrap">绕回</entry>
    <entry key="ProductModeFullPrecision">全精度</entry>
    <entry key="ProductModeKeepLSB">保留 LSB</entry>
    <entry key="ProductModeKeepMSB">保留 MSB</entry>
    <entry key="ProductModeSpecifyPrecision">指定精度</entry>
    <entry key="SumModeFullPrecision">全精度</entry>
    <entry key="SumModeKeepLSB">保留 LSB</entry>
    <entry key="SumModeKeepMSB">保留 MSB</entry>
    <entry key="SumModeSpecifyPrecision">指定精度</entry>
    <entry key="DialogTitle">插入 {0} 构造函数</entry>
    <entry key="InsertFiButtonText">插入 fi 构造函数...</entry>
    <entry key="InsertFiButtonDescription">指定定点数据</entry>
    <entry key="InsertNumericTypeText">插入 numerictype 构造函数...</entry>
    <entry key="InsertNumericTypeDescription">定义定点数据类型属性</entry>
    <entry key="InsertFiMathButtonText">插入 fimath 构造函数...</entry>
    <entry key="InsertFiMathButtonDescription">控制定点算术行为</entry>
    <entry key="dialogValuePlaceholder">例如，pi、2.718 或 x/2</entry>
    <entry key="numericTypePanelText">numerictype</entry>
    <entry key="dialogTitle">embedded.fi: {0}</entry>
    <entry key="DataTypeModeBoolean">Boolean</entry>
    <entry key="DataTypeModeSingle">Single</entry>
    <entry key="DataTypeModeDouble">Double</entry>
  </message>
</rsccat>
