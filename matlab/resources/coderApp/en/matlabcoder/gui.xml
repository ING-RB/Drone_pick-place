<?xml version="1.0" encoding="UTF-8" ?>
<!-- Copyright 2022-2025 The MathWorks, Inc. -->
<rsccat version="1.0" locale="en_US" product="coderApp" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../../../schema/msgcat.xsd">
    <message>
        <!-- Language/workflow button entries -->
        <entry key="languageGroupTitle" translate="false">MATLAB Coder</entry>
        <entry key="languageCTitle" translate="false">C</entry>
        <entry key="languageCDesc">C programming language</entry>
        <entry key="languageCppTitle" translate="false">C++</entry>
        <entry key="languageCppDesc">C++ programming language</entry>

        <!-- Miscellaneous toolstrip -->
        <entry key="tabTitle" translate="false">MATLAB Coder</entry>
        <entry key="settingsButtonTitle">Settings</entry>
        <entry key="settingsActionDesc">Configure code generation settings</entry>
        <entry key="outputTypeButtonTitle">Output Type</entry>
        <entry key="outputTypeButtonDesc">Select the code generation output type</entry>
        <entry key="reportButtonTitle">View\nReport</entry>
        <entry key="reportButtonDesc">Open the code generation report</entry>

        <!-- Output type menu -->
        <entry key="mexItemText" translate="false">MEX</entry>
        <entry key="mexItemDesc">Compiled code to run inside MATLAB</entry>
        <entry key="libItemText" note="Hole is for a file extension">Static Library ({0})</entry>
        <entry key="libItemDesc">Binary library for static linking with an external project</entry>
        <entry key="dllItemText" note="Hole is for a file extension">Dynamic Library ({0})</entry>
        <entry key="dllItemDesc">Binary library for dynamic linking with an external project</entry>
        <entry key="exeItemText">Executable</entry>
        <entry key="exeItemTextWin">Executable (.exe)</entry>
        <entry key="exeItemDesc">Standalone program (requires a separate main file written in C)</entry>

        <!-- Settings button -->
        <entry key="settingsLoadingText">Loading...</entry>
        <entry key="settingsDebugHeading">Debugging</entry>
        <entry key="hardwareHeader">Hardware</entry>
        <entry key="toolchainHeader">Toolchain</entry>
        <entry key="cppInterfaceStyleHeader">C++ Interface Style</entry>
        <entry key="cppInterfaceStyleFunctions">Functions</entry>
        <entry key="cppInterfaceStyleMethods">Methods</entry>
        <entry key="openSettingsDialogItem">View all settings</entry>
        <entry key="openSettingsDialogItemDesc">View and modify all code generation settings</entry>

        <!-- Config dialog -->
        <entry key="standaloneConfigTitle">Standalone Code Generation Settings</entry>
        <entry key="mexConfigTitle">MEX Code Generation Settings</entry>
        <entry key="checkConfigTitle">Check For Issues Settings</entry>

        <!-- Generate button -->
        <entry key="generateAndBuildButton">Generate Code\nand Build</entry>
        <entry key="generateCodeButton">Generate Code</entry>
        <entry key="generateButtonMexDesc">Generate a MEX function</entry>
        <entry key="generateCodeItem">Generate code only</entry>
        <entry key="generateCodeDesc">Generate code without building the generated code</entry>
        <entry key="generateAndBuildItem">Generate code and build</entry>
        <entry key="generateAndBuildDesc">Generate code and build the generated code</entry>
        <entry key="generateDisabledNoEntryPoints">Entry-points must be specified before attempting to generate code</entry>
        <entry key="generateDisabledUndefinedInputs">Fully define all input types before generating code</entry>

        <!-- Output panel -->
        <entry key="mainOutputDescStandalone" note="First hole for programming language, second hole for build type (LIB, DLL, EXE), third hole for hardware name (Intel x86)">{0} {1} - {2}</entry>
        <entry key="mainOutputDescMex" note="First hole for programming language">{0} MEX</entry>
        <entry key="mainGenerateOnlyOutput">source code</entry>
        <entry key="verifyOutputDesc">Verification</entry>
        <entry key="mainSuccess">Code generation successful.</entry>
        <entry key="verifySuccess">Test file ran without errors.</entry>
        <entry key="mainStepGenerate">Generating code</entry>
        <entry key="mainStepBuild">Building</entry>
        <entry key="verifyStepGenerate">Generating code</entry>
        <entry key="verifyStepBuild">Building code</entry>
        <entry key="verifyStepTest">Running test file</entry>

        <!-- Check for Issues -->
        <entry key="checkActionDesc">Generate a MEX function and run it using a test bench</entry>
        <entry key="checkSettingsHeaderText">Verify Settings</entry>
        <entry key="checkSettingsDialogItemText">Modify MEX Settings...</entry>
        <entry key="checkSettingsDialogActionDesc">Modify MEX code generation settings</entry>

        <!-- Verify -->
        <entry key="verifySectionTitle">Run</entry>
        <entry key="verifyButtonIdleTitle">Run</entry>
        <entry key="verifyButtonActiveTitle">Stop</entry>
        <entry key="verifyModeHeaderText">Verification Mode</entry>
        <entry key="verifyModeGeneratedItem">Use generated code</entry>
        <entry key="verifyModeGeneratedItemDesc">Run tests against generated code</entry>
        <entry key="verifyModeMatlabItem">Use MATLAB code</entry>
        <entry key="verifyModeMatlabOriginalDesc">Run tests against original MATLAB code</entry>
        <entry key="verifySettingsHeaderText">Verification Settings</entry>
        <entry key="verifyMex">Run Generated\n MEX</entry>
        <entry key="verifyMexDesc">Run test using the generated MEX file</entry>
        <entry key="verifySil" note="SIL refers to software-in-the-loop testing">Run Generated\n Code</entry>
        <entry key="verifySilDesc">Run generated code using software-in-the-loop verification (SIL)</entry>
        <entry key="verifyRequiresOutputChange">Verification requires an output type of MEX</entry>
        <entry key="verifyRequiresOutputChangeXil">Verification requires an output type of static library, dynamic library, or MEX</entry>
        <entry key="verifyPil" note="PIL refers to processor-in-the-loop testing">Run\nUsing PIL</entry>
        <entry key="verifyPilDesc">Verify behavior of generated code by using processor-in-the-loop verification (PIL)</entry>
        <entry key="verifyClearSilMex" note="SIL refers to software-in-the-loop testing">Terminate SIL</entry>
        <entry key="verifyClearSilMexDesc">End SIL verification by clearing the SIL MEX file from memory</entry>
        <entry key="verifyClearPilMex">End PIL verification by clearing the PIL MEX file from memory</entry>
        <entry key="verifyClearPilMexDesc">End PIL verification by clearing the PIL MEX file from memory</entry>
        <entry key="verifyClearBetweenRunsItem">Reset persistent state between runs</entry>
        <entry key="verifyClearBetweenRunsItemDesc">Reset state between runs by clearing the MEX file</entry>

        <!-- Config Import/Export -->
        <entry key="importConfigFromVariableItem">Import from workspace variable</entry>
        <entry key="importConfigFromVariableItemDesc">Import code generation settings from a workspace variable.</entry>
        <entry key="exportConfigFromVariableItem">Export code generation settings</entry>
        <entry key="exportConfigFromVariableItemDesc">Export code generation settings to a workspace variable.</entry>

        <!-- Export -->
        <entry key="exportFailedTitle">Export Failed</entry>
        <entry key="exportToScriptDialogTitle">Output Script Location</entry>
        <entry key="exportToScriptItem">Convert To Script</entry>
        <entry key="exportToScriptItemDesc">Export the current project as a MATLAB script file</entry>
        <entry key="exportReportInfoDesc">Export code generation report information to a variable in the workspace</entry>
        <entry key="exportReportInfoItem">Export Code Generation Information</entry>
        <entry key="exportReportInfoItemDesc">Export information from code generation to a workspace variable</entry>
        <entry key="exportReportInfoTitle">Export Code Generation Report Information</entry>
        <entry key="exportReportInfoSuccess">Code generation report information exported to variable "{0}"</entry>
        <entry key="exportPackageHeader">Package Generated Code as a ZIP File</entry>
        <entry key="exportPackageHierarchyItem">Package as a Hierarchical ZIP File</entry>
        <entry key="exportPackageHierarchyItemDesc">Package generated code as a hierarchically structured ZIP file</entry>
        <entry key="exportPackageFlatItem">Package as a Flat ZIP File</entry>
        <entry key="exportPackageFlatItemDesc">Package generated code as a ZIP file with a single folder</entry>
        <entry key="exportPackageFileDialogTitle">ZIP File Location</entry>
        <entry key="exportPackageZipFilter">ZIP File</entry>
        <entry key="exportPackageFailedTitle">Error Packaging Code</entry>
        <entry key="exportPackageSuccess">Generated code successfully packaged to file {0}.</entry>

        <!-- Dashboard Hints -->
        <entry key="generateCodeHintTitle">Generate code</entry>
        <entry key="generateCodeHintDesc">Generate code from your entry points after configuring code generation settings such as build type, language etc.</entry>
        <entry key="verifyMexHintTitle">Run using MEX</entry>
        <entry key="verifyMexHintDesc">Verify behavior of generated code by running tests against a MEX file generated from the code</entry>
        <entry key="verifySilPilHintTitle">Run using SIL/PIL</entry>
        <entry key="verifySilPilHintDesc">Verify behavior of generated code using either software-in-the-loop (SIL) or processor-in-the-loop verification (PIL)</entry>
        <entry key="learnMoreHintTitle">Learn more</entry>
        <entry key="learnMoreHintDesc">Use the documentation to learn more on how to optimize and deploy the generated code</entry>

        <!-- CLI activity messages -->
        <entry key="bannerVerifyUsingOriginalCode">Verifying using Original Code</entry>
        <entry key="bannerVerifyUsingMex">Running using MEX</entry>
        <entry key="bannerVerifyUsingSilPil">Running using SIL/PIL</entry>
        <entry key="bannerGenerateCode">Generating code</entry>
        <entry key="bannerGenerateCodeAndBuild">Generating code and building</entry>
        <entry key="bannerGenerateCodeFailed">Code generation failed.</entry>
        <entry key="cliRunningTestFile" note="Hole is for the path to a MATLAB file">Running test file "{0}"...</entry>
        <entry key="cliRunningTestSnippet" note="Hole is for the path to a MATLAB file">Running test code...</entry>

        <!-- Miscellaneous -->
        <entry key="viewReportFailedTitle">View Report Failed</entry>
    </message>
</rsccat>
