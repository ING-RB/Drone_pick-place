<?xml version="1.0" encoding="UTF-8" ?>
<!-- Copyright 2022-2025 The MathWorks, Inc. -->
<rsccat version="1.0" locale="en_US" product="coderApp" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../../schema/msgcat.xsd">
    <message>
        <!-- ============================= UI Messages ============================= -->

        <!-- Entry Points Document Tab and QAB -->
        <entry key="coderInterfaceDocumentTitle">Entry Points</entry>
        <entry key="coderInterfaceDocumentType">Entry Points</entry>
        <entry key="coderInterfaceTabText">Entry Points</entry>
        <entry key="undoQabButtonText">Undo</entry>
        <entry key="redoQabButtonText">Redo</entry>

        <!-- Entry points -->
        <entry key="entryPointsSectionHeaderText">Entry Points</entry>
        <entry key="newEntryPointInlineActionText">New entry point</entry>
        <entry key="addFileAsEntryPointPrompt">Enter name of MATLAB function to add as entry point</entry>
        <entry key="attachFileToEntryPointPrompt">Enter name of MATLAB function to use as entry point</entry>
        <entry key="entryPointFileSelectorTooltipText">Browse for entry-point file</entry>
        <entry key="removeEntryPointActionText">Remove entry point</entry>
        <entry key="confirmRemoveEntryPointDialogTitle">Remove entry point</entry>
        <entry key="confirmRemoveEntryPointDialogMsg">Are you sure you want to remove the entry point {0}?</entry>
        <entry key="removeAllEntryPointsActionText">Remove all entry points</entry>
        <entry key="confirmRemoveAllEntryPointsDialogTitle">Remove all entry points</entry>
        <entry key="confirmRemoveAllEntryPointsDialogMsg">Are you sure you want to remove all entry points?</entry>
        <entry key="entryPointsUndefinedDesc">The input types for one or more entry points have not been fully defined</entry>
        <entry key="entryPointsFullyDefinedDesc">The input types for all entry points have been fully defined</entry>
        <entry key="entryPointsScreenerIssuesDesc">The code generation readiness tool has identified issues with one or more entry points or their dependencies</entry>
        <entry key="entryPointFunctionNoInputsTooltipText">This entry-point function has no inputs</entry>
        <entry key="entryPointFunctionNoOutputsTooltipText">This entry-point function has no outputs</entry>
        <entry key="entryPointFunctionWithNoInputsDesc">This entry-point function does not have any input arguments. No input type definitions are required.</entry>
        <entry key="entryPointFunctionNameTooltipText">Click to open the entry-point function {0}</entry>
        <entry key="noEntryPointsMessage">To begin, add an entry point. An entry point is a top-level MATLAB function from which you generate code.</entry>

        <!-- Entry-point function signatures -->
        <entry key="addSignatureActionText">Add signature</entry>
        <entry key="removeSignatureActionText">Remove signature</entry>
        <entry key="functionSignatureTooltipText">Signature {0} of entry-point function {1}</entry>
        <entry key="disableMultiOutputTooltipText">Click to disable the output {0} and all subsequent outputs for this entry-point signature in the generated code</entry>
        <entry key="disableSingleOutputTooltipText">Click to disable the output {0} for this entry-point signature in the generated code</entry>
        <entry key="enableMultiOutputTooltipText">Click to enable the output {0} and all prior outputs for this entry-point signature in the generated code</entry>
        <entry key="enableSingleOutputTooltipText">Click to enable the output {0} for this entry-point signature in the generated code</entry>
        <entry key="varargoutSizeTooltipText">Set the number of additional outputs for this entry-point signature in the generated code</entry>

        <!-- Globals -->
        <entry key="globalVariablesSectionHeaderText">Globals</entry>
        <entry key="newGlobalInlineActionText">New global</entry>
        <entry key="confirmRemoveGlobalDialogTitle">Remove global</entry>
        <entry key="confirmRemoveGlobalDialogMsg">Are you sure you want to remove the global variable {0}?</entry>
        <entry key="removeAllGlobalsActionText">Remove all globals</entry>
        <entry key="confirmRemoveAllGlobalsDialogTitle">Remove all globals</entry>
        <entry key="confirmRemoveAllGlobalsDialogMsg">Are you sure you want to remove all global variables?</entry>
        <entry key="globalsUndefinedDesc">One or more global variables have not been defined</entry>
        <entry key="globalsFullyDefinedDesc">All global variables have been defined and initialized</entry>
        <entry key="globalsUninitializedDesc">One or more global variables are uninitialized</entry>
        <entry key="enterVariableNamePrompt">Enter variable name</entry>
        <entry key="invalidIdentifierErrorMessage">The value must be a valid MATLAB identifier</entry>

        <!-- Types -->
        <entry key="actionsBtnTooltipText">Actions</entry>
        <entry key="addFieldTooltipText">Add field</entry>
        <entry key="addInputTooltipText">Add input</entry>
        <entry key="clearAllTypesActionText">Clear all types</entry>
        <entry key="defineAllUndefinedTypesActionText">Define undefined types as</entry>
        <entry key="scalarDoubleActionText">Scalar double</entry>
        <entry key="scalarSingleActionText">Scalar single</entry>
        <entry key="modeOpSelectorTooltipText">Modes and actions</entry>
        <entry key="modeOpSelectorModesHeaderText">Modes</entry>
        <entry key="modeOpSelectorActionsHeaderText">Actions</entry>
        <entry key="modeOpSelectorAddFieldOpText">Add field</entry>
        <entry key="modeOpSelectorAddInputOpText">Add input</entry>
        <entry key="modeOpSelectorCopyOpText">Copy</entry>
        <entry key="modeOpSelectorPasteOpText">Paste</entry>
        <entry key="modeOpSelectorClearOpText">Clear</entry>
        <entry key="modeOpSelectorRemoveOpText">Remove</entry>
        <entry key="modeOpSelectorManualModeText">Define type manually</entry>
        <entry key="modeOpSelectorManualModeDesc">Manually specify class, size, and properties of the type</entry>
        <entry key="undefinedTypePrompt">Click to define data type</entry>
        <entry key="loadingTypeMessage">Loading type...</entry>
        <entry key="namedTypeGenericUndefinedMsg">The data type has not been specified</entry>
        <entry key="invalidFieldNameErrorMessage">The value must be a valid field name</entry>
        <entry key="invalidVariableNameErrorMessage">The value must be a valid variable name</entry>
        <entry key="typePropertiesPlaceholderText">Edit type properties</entry>
        <entry key="typePropertiesPopupHeaderText">Type Properties</entry>

        <!-- Define by example -->
        <entry key="modeOpSelectorByExampleOpText">Derive type from example code</entry>
        <entry key="exampleEditorPrompt">Enter MATLAB code that produces an example value</entry>

        <!-- Constants and initial values -->
        <entry key="modeOpSelectorConstantModeText">Use constant</entry>
        <entry key="modeOpSelectorConstantModeDesc">Specify a constant value</entry>
        <entry key="constantValueFromCodePlaceholder">Enter MATLAB code that produces the constant value</entry>
        <entry key="constantValueFromMatFilePlaceholder">Select a variable in a MAT-file that contains the constant value</entry>
        <entry key="modeOpSelectorSetInitialValueOpText">Set initial value</entry>
        <entry key="initialValueFromCodePlaceholder">Enter MATLAB code that produces the initial value</entry>
        <entry key="initialValueFromMatFilePlaceholder">Select a variable in a MAT-file that contains the initial value</entry>
        <entry key="useCodeForValueOptionText">Use MATLAB code</entry>
        <entry key="useCodeForValueFieldPrompt">Enter MATLAB code that produces the value</entry>
        <entry key="useCustomMatFileForValue">Load from MAT-file</entry>
        <entry key="valueSelectorValueSourceLabel">Value source</entry>
        <entry key="matFileSelectorBtnTooltipText">Browse for MAT-file</entry>
        <entry key="matFileSelectorDialogTitle">Select MAT-file</entry>
        <entry key="matFileSelectorLabel">MAT-file</entry>
        <entry key="matFileSelectorPrompt">Enter MAT-file name</entry>
        <entry key="matFileSelectorFilterText">MAT-file</entry>
        <entry key="matFileVariableSelectorLabel">Variable</entry>

        <!-- Output type -->
        <entry key="modeOpSelectorOutputModeText">Use output</entry>
        <entry key="modeOpSelectorOutputModeDesc">Set the type to be the output type of another entry point</entry>
        <entry key="outputAssistantFunctionHelperLabel">Function name</entry>
        <entry key="outputAssistantFunctionHelperPlaceholder">Enter entry-point function name</entry>
        <entry key="outputAssistantOutputHelperLabel">Output name</entry>
        <entry key="outputAssistantOutputHelperPlaceholder">Enter output variable name</entry>
        <entry key="outputAssistantOutputHelperDesc">To select the output variable name, specify an entry-point function</entry>
        <entry key="invalidFunctionNameErrorMessage">The value must be a valid entry-point function name</entry>
        <entry key="invalidOutputNameErrorMessage">The value must be a valid output variable name</entry>
        <entry key="invalidOutputTypeFunctionNameMsg">The data type references an entry-point function that does not exist</entry>
        <entry key="invalidOutputTypeMultiSigFunctionNameMsg">The data type must not reference an entry-point function that has multiple signatures</entry>
        <entry key="invalidOutputTypeIndexMsg">The data type references an entry-point function output that does not exist</entry>

        <!-- FAV / Preconditions -->
        <entry key="useProgrammaticTypesButtonText">Source input types from function definition</entry>
        <entry key="useProgrammaticTypesOffTooltipText">Click to determine input types from the entry-point function</entry>
        <entry key="useProgrammaticTypesOnTooltipText">Click to manually edit input types determined from the entry-point function</entry>
        <entry key="editProgrammaticTypesButtonText">Edit input type specification</entry>

        <!-- Screener -->
        <entry key="openScreenerButtonText">View issues</entry>
        <entry key="suppressScreenerIssuesButtonText">Suppress issues</entry>

        <!-- Autodefine -->
        <entry key="typeRecorderTitle">Automatically Define Input Types</entry>
        <entry key="typeRecorderScriptModeText">Using Script</entry>
        <entry key="typeRecorderCmdWinModeText">Using Command Window</entry>
        <entry key="typeRecorderScriptOptionLabel">To generate code, you must define the type of each input for every entry point. To automatically define input types, select a script that exercises your entry points:</entry>
        <entry key="typeRecorderScriptFieldPlaceholder">Enter name of script that exercises your entry points</entry>
        <entry key="typeRecorderEmptyScriptNameError">Script name cannot be empty</entry>
        <entry key="typeRecorderInvalidScriptNameError" note="First hole is for the text tied to the message ID 'typeRecorderTitle' and the second hole is for the text tied to the message ID 'typeRecorderCmdWinModeText'">Enter a valid script name. Alternatively, set the ''{0}'' parameter to ''{1}'', and exercise your entry points directly using the Command Window.</entry>
        <entry key="typeRecorderScriptSelectorButtonDesc">Choose a MATLAB script that exercises your entry points</entry>
        <entry key="typeRecorderRunScriptButtonText">Run</entry>
        <entry key="typeRecorderRunScriptButtonDesc">Run script</entry>
        <entry key="typeRecorderStopScriptButtonText">Stop</entry>
        <entry key="typeRecorderStopScriptButtonDesc">Stop script</entry>
        <entry key="typeRecorderCmdWinOptionLabel" note="The hole is for the text tied to the message ID 'typeRecorderStartRecordingButtonText'">To generate code, you must define the type of each input for every entry point. To automatically define input types, click the ''{0}'' button below and exercise your entry points using the Command Window:</entry>
        <entry key="typeRecorderStartRecordingButtonText">Start</entry>
        <entry key="typeRecorderStopRecordingButtonText">Stop</entry>
        <entry key="typeRecorderCmdWinRecordingMessage" note="The hole is for the text tied to the message ID 'typeRecorderStopRecordingButtonText'">Exercise your entry points from the Command Window to automatically define their input types. Click the ''{0}'' button below when finished:</entry>
        <entry key="typeRecorderErrorDialogTitle">Automatic input type definition failed</entry>
        <entry key="recordingTypeMessage">Defining type...</entry>

        <!-- Size Constraints Dialog -->
        <entry key="constrainSizeActionText">Constrain size</entry>
        <entry key="constrainSizeDialogTitle">Set size constraints for input types</entry>
        <entry key="constrainSizeVarSizeCheckboxLabel">Make dimensions variable-size if size is at least:</entry>
        <entry key="constrainSizeUnboundedSizeCheckboxLabel">Make dimensions unbounded if size is at least:</entry>
        <entry key="recordTypesApplySizeConstraintsCheckboxLabel">Apply size constraints when automatically defining input types</entry>

        <!-- Expand/Collapse -->
        <entry key="expandAllEntryPointsActionText">Expand all entry points</entry>
        <entry key="expandActionDesc">Click to expand</entry>
        <entry key="collapseAllEntryPointsActionText">Collapse all entry points</entry>
        <entry key="collapseActionDesc">Click to collapse</entry>

        <!-- Status Banner -->
        <entry key="closeStatusBannerText">Close</entry>
        
        <!-- Rich File Field -->
        <entry key="all">All</entry>
        <entry key="chooseFile">Choose file</entry>
        <entry key="fileSelectorButtonDesc">Browse for file</entry>
        <entry key="submitButtonDesc">Submit</entry>

        <!-- Generic Errors -->
        <entry key="fileOrFolderPathNotFound">No file or folder with path ''{0}'' found</entry>
        <entry key="invalidVariableName">''{0}'' is not a valid variable name</entry>
        <entry key="genericErrorDialogTitle">An error has occurred</entry>

        <!-- Standalone Entry Points Editor Dialog -->
        <entry key="interfaceEditorDialogTitle">Coder Entry Points Editor</entry>
        <entry key="entryPointsToolstripSectiontext">Entry Points</entry>
        <entry key="addEntryPointToolstripButtonText">New\nEntry Point</entry>
        <entry key="globalsToolstripSectionText">Globals</entry>
        <entry key="addGlobalToolstripButtonText">New\nGlobal</entry>

        <!-- ============================= Backend Messages ============================= -->

        <!-- Messages shown for invalid entry points -->
        <entry key="classEntryPointUnsupported">Using MATLAB classes as entry points is not supported</entry>
        <entry key="entryPointFileInClassFolderNotSupported">Using files inside class folders as entry points is not supported</entry>
        <entry key="genericInvalidEntryPoint">''{0}'' is not a valid entry-point file</entry>
        <entry key="internalEntryPointUnsupported">Using MATLAB built-in functions and toolbox functions as entry points in the app is not supported</entry>
        <entry key="missingEntryPointFile">Unable to find file ''{0}'' or no read permission</entry>
        <entry key="scriptEntryPointUnsupported">Using MATLAB scripts as entry points is not supported</entry>
        <entry key="unsupportedEntryPointFileExtensions">Entry point files must have either .m or .mlx extension</entry>
        <entry key="duplicateEntryPointQualifiedName">Unable to add ''{0}'' as there is an existing entry point with this name</entry>

        <!-- Messages shown for signatures -->
        <entry key="entryPointFunctionWithNoInputsCannotBeMultiSig">Unable to add a signature to the entry-point function ''{0}'' as it does not have any inputs</entry>
        <entry key="entryPointFunctionWithProgrammaticTypesCannotBeMultiSig">Unable to add a signature to the entry-point function ''{0}'' as its input types have been defined programmatically</entry>
        <entry key="entryPointFunctionWithOutputDepCannotBeMultiSig">Unable to add a signature to the entry-point function ''{0}'' as its output is being used by another entry-point function</entry>

        <!-- Messages shown for inputs -->
        <entry key="tooManyInputTypesSpecified">Too many input arguments specified for entry-point function ''{0}''. Expected {1,number,integer}, but found {2,number,integer}.</entry>
        <entry key="tooFewInputTypesSpecified">Expected at least {0,number,integer} input arguments for ''{1}'', but found only {2,number,integer}.</entry>
        <entry key="invalidSignatureNumOutputs">Too many outputs specified for entry-point function ''{0}''. Expected {1,number,integer} or less, but found {2,number,integer}.</entry>

        <!-- Messages shown for output type usage in inputs -->
        <entry key="invalidOutputFunctionName">''{0}'' is not a valid entry-point function name.</entry>
        <entry key="invalidMultiSigOutputFunctionName">Unable to use the output of entry-point function ''{0}'' as it has multiple signatures.</entry>
        <entry key="invalidOutputIndex">{0,number,integer} is not a valid output index for entry-point function ''{1}''.</entry>
        <entry key="circularDependencyOnEntryPointsUnsupported">Unable to use an output type of entry-point function ''{0}'' as an input type for entry-point function ''{1}'' as this usage leads to a circular dependency</entry>
        
        <!-- Messages shown for globals -->
        <entry key="duplicateGlobalVariableName">Duplicate global variable name ''{0}''</entry>
        <entry key="globalVariableUninitializedMsg">This global variable has not been initialized. Either set its initial value, or ensure that the MATLAB global workspace contains this variable.</entry>
        <entry key="globalsCannotUseOutputType">Globals cannot use the output of another function</entry>

        <!-- Messages shown for autodefine feature -->
        <entry key="invalidTestBenchFile">''{0}'' is not a valid script name.</entry>
        <entry key="recordInputTypesFromTestBenchFailed">One or more errors were encountered when running the file ''{0}''.\n\nRefer to the MATLAB Command Window for more information on these errors.</entry>
        <entry key="recordInputTypesForEntryPointsInNamespacesNotSupported">Automatically defining input types for entry-point functions in namespaces is not supported</entry>
        <entry key="typeRecordingError">Error defining type for input ''{0}'' of entry point ''{1}''</entry>
        <entry key="cmdWinRecordBeginHeader">Starting Automatic Input Type Definition</entry>
        <entry key="cmdWinRecordInstructions">Exercise your entry points to automatically define their input types. When finished, click the 'Stop' button in the 'Entry Points' tab.</entry>
        <entry key="cmdWinRecordEndHeader">Stopping Automatic Input Type Definition</entry>
        <entry key="hasNoEntryPointsRegisteredWithTypeRecorder">No entry points found</entry>
        
        <!-- Messages shown for entry points -->
        <entry key="entryPointFunctionGenericDefinedMsg">The input types for this entry-point function have been fully defined</entry>
        <entry key="entryPointFunctionGenericUndefinedMsg">The input types for this entry-point function have not been fully defined. Either define the input types manually or define the types automatically using a script.</entry>
        <entry key="entryPointFunctionHasDuplicateSignaturesMsg">This entry-point function contains one or more duplicate signatures</entry>
        <entry key="entryPointFunctionHasScreenerIssuesMsg">The code generation readiness tool has identified issues with this entry-point function or one of its dependencies</entry>

        <!-- Generic Errors -->
        <entry key="genericError" translate="false">{0}</entry>

        <!-- Messages shown when deserializing an interface -->
        <entry key="unableToAddEntryPoint">Unable to add entry point ''{0}''.</entry>
        <entry key="unableToSetInputType">Unable to set the type for input ''{0}'' of entry-point function ''{1}''.</entry>
        <entry key="unableToAddGlobal">Unable to add global variable ''{0}''.</entry>
        <entry key="unableToSetGlobalType">Unable to set the type for global variable ''{0}''.</entry>
        <entry key="unableToAddTestBenchFile">Unable to add test script ''{0}''.</entry>

        <!-- Internal Errors -->
        <entry key="invalidInput" translate="false">The provided input(s) do not belong to the active interface</entry>
        <entry key="invalidEntryPoint" translate="false">The provided entry point(s) do not belong to the active interface</entry>
        <entry key="fileTypeIsNotFunction" translate="false">The file with path {0} is not a MATLAB function</entry>
        <entry key="invalidGlobal" translate="false">The provided global(s) do not belong to the active interface</entry>
        <entry key="hasActiveTypeRecordingSession" translate="false">Cannot start new type recording session while another session is active</entry>
        <entry key="hasNoActiveTypeRecordingSession" translate="false">No active type recording session found</entry>
        <entry key="hasNoScreenerClient" translate="false">No ScreenerServiceClient found</entry>
        <entry key="hasNoScreenerResult" translate="false">No ScreenerResult found</entry>
        <entry key="mfzStatesMustBeInSameModel" translate="false">Project and run-time MF0 states must belong to the same MF0 model</entry>
        <entry key="mustBeUnlatched" translate="false">Interface must be unlatched</entry>
        <entry key="matlabFileAnalysisFailure" translate="false">Static file analysis failed for the MATLAB file {0}</entry>
        <entry key="invalidValueInfo" translate="false">A valid value must be provided for each input or global</entry>
        <entry key="signatureDoesNotBelongToEntryPointFunction" translate="false">The provided signature(s) do not belong to this entry-point function</entry>
        <entry key="signatureDoesNotSupportExtraInputs" translate="false">This function signature does not support extra inputs</entry>
        <entry key="invalidOptionalInput" translate="false">The provided optional input(s) do not belong to this composite input</entry>
        <entry key="invalidTypeMakerNode" translate="false">The provided TypeMakerNode is not associated with any input or global in the active interface</entry>
        <entry key="invalidSignature" translate="false">The provided signature(s) do not belong to the active interface</entry>
        <entry key="invalidSignatureIndex" translate="false">The provided index exceeds the number of signatures associated with this entry-point function</entry>
        <entry key="unsupportedOperationWhenUsingProgrammaticTypes" translate="false">This operation is not supported as the entry-point function uses preconditions / FAV for input type specification</entry>
    </message>
</rsccat>
