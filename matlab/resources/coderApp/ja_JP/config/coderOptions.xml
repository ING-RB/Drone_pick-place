<?xml version="1.0" encoding="UTF-8"?>
<!--Copyright 2025 The MathWorks, Inc.-->

<rsccat xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.0" locale="ja_JP" product="coderApp" xsi:noNamespaceSchemaLocation="../../resources/schema/msgcat.xsd">
  <message>
    <entry key="genericNone">なし</entry>
    <entry key="buildTypeMex">MEX</entry>
    <entry key="buildTypeLib">スタティック ライブラリ</entry>
    <entry key="buildTypeDll">ダイナミック ライブラリ</entry>
    <entry key="buildTypeExe">実行可能ファイル</entry>
    <entry key="globalSyncNone">無効</entry>
    <entry key="globalSyncAlways">MEX 関数エントリ時、終了時、および外部の呼び出し時</entry>
    <entry key="globalSyncEntryAndExits">MEX 関数エントリ時と終了時</entry>
    <entry key="dynamicMemoryEnabled">常時</entry>
    <entry key="dynamicMemoryDisabled">なし</entry>
    <entry key="dynamicMemoryThreshold">配列の最大サイズがしきい値以上になった場合</entry>
    <entry key="rowMajorRow">行優先</entry>
    <entry key="rowMajorColumn">列優先</entry>
    <entry key="filePartitionMap">MATLAB ファイルごとに 1 つのファイルを生成</entry>
    <entry key="filePartitionSingle">すべての関数を 1 つのファイルに生成</entry>
    <entry key="largeConstantGenerationWriteOnlyDNNConstantsToDataFiles">深層学習の定数のみをデータ ファイルに書き込む</entry>
    <entry key="largeConstantGenerationWriteToDataFiles">データ ファイルに書き込む</entry>
    <entry key="largeConstantGenerationKeepInSourceFiles">ソース ファイル内に保持する</entry>
    <entry key="commentStyleAuto">自動 (ターゲット言語の標準のコメント スタイルを使用)</entry>
    <entry key="commentStyleMulti">複数行 (C スタイルのコメントを使用)</entry>
    <entry key="commentStyleSingle">単一行 (C++ スタイルのコメントを使用)</entry>
    <entry key="parenthesesMax">最大 (かっこで優先度を指定)</entry>
    <entry key="parenthesesMin">最小 (C/C++ の演算子の優先度に依存)</entry>
    <entry key="parenthesesNominal">ノミナル (可読性のために最適化)</entry>
    <entry key="headerGuardInclude">インクルード ガードを使用</entry>
    <entry key="headerGuardPragma">プラグマを 1 回使用</entry>
    <entry key="dataTypeReplacementC">組み込みの C データ型を使用</entry>
    <entry key="dataTypeReplacementCoder">Coder の typedef を使用</entry>
    <entry key="cppInterfaceFunctions">各エントリポイント関数が C++ 関数として生成されます</entry>
    <entry key="cppInterfaceMethods">各エントリポイント関数が C++ クラス内のメソッドとして生成されます</entry>
    <entry key="castingModeNominal">ノミナル</entry>
    <entry key="castingModeStandards">標準準拠</entry>
    <entry key="castingModeExplicit">明示的</entry>
    <entry key="indentStyleKandR">K&amp;R</entry>
    <entry key="indentStyleAllman">オールマン</entry>
    <entry key="exampleMainDoNotGenerate">main 関数の例を生成しない</entry>
    <entry key="exampleMainGenerateCodeOnly">main 関数の例を生成するが、コンパイルしない</entry>
    <entry key="exampleMainGenerateCodeAndCompile">main 関数の例を生成してコンパイルする</entry>
    <entry key="preserveVariableNamesNone">なし</entry>
    <entry key="preserveVariableNamesUserNames">ユーザー名</entry>
    <entry key="preserveVariableNamesAll">すべて</entry>
    <entry key="constantInputsCheckValues">実行時に値をチェック</entry>
    <entry key="constantInputsIgnoreValues">入力値を無視</entry>
    <entry key="constantInputsRemove">MEX シグネチャから削除</entry>
    <entry key="defaultVariableInitializationNone">初期化されていない宣言を許可</entry>
    <entry key="defaultVariableInitializationScalarsOnly">常にスカラーを初期化</entry>
    <entry key="defaultVariableInitializationScalarsAndArrays">常にスカラーと配列を初期化</entry>
    <entry key="inlineBetweenNever">なし</entry>
    <entry key="inlineBetweenReadability">可読性</entry>
    <entry key="inlineBetweenSpeed">速度</entry>
    <entry key="inlineBetweenAlways">常時</entry>
    <entry key="endiannessBig">ビッグ エンディアン</entry>
    <entry key="endiannessLittle">リトル エンディアン</entry>
    <entry key="endiannessUnspecified">指定なし</entry>
    <entry key="divRoundingFloor">負方向</entry>
    <entry key="divRoundingUndefined">未定義</entry>
    <entry key="divRoundingZero">ゼロ方向</entry>
    <entry key="largestAtomicIntChar">char</entry>
    <entry key="largestAtomicIntInt">int</entry>
    <entry key="largestAtomicIntLong">long</entry>
    <entry key="largestAtomicIntLongLong">long long</entry>
    <entry key="largestAtomicIntShort">short</entry>
    <entry key="largestAtomicFloatFloat">float</entry>
    <entry key="largestAtomicFloatDouble">double</entry>
    <entry key="largestAtomicFloatNone">なし</entry>
    <entry key="repositoryStyleAuto">自動</entry>
    <entry key="repositoryStyleForced">新規 Git リポジトリの作成を強制</entry>
    <entry key="dynamicMemoryAllocationC">C スタイルの EmxArray を使用</entry>
    <entry key="dynamicMemoryAllocationCpp">C++ の coder::array を使用</entry>
    <entry key="dynamicMemoryAllocationAuto">言語に基づいて動的なメモリ割り当てインターフェイスを決定</entry>
    <entry key="verbosityInfo">情報、警告、およびエラーのメッセージを表示</entry>
    <entry key="verbositySilent">警告とエラーのメッセージのみを表示</entry>
    <entry key="verbosityVerbose">すべてのメッセージを表示</entry>
    <entry key="codeFormatToolAuto">ヒューリスティックな方法に基づき clang 形式を使用</entry>
    <entry key="codeFormatToolClang">常に clang 形式を使用</entry>
    <entry key="codeFormatToolMW">常に MathWorks コード形式のツールを使用</entry>
    <entry key="useClangFormatFileGen">新しい clang 形式の構成ファイルを生成</entry>
    <entry key="useClangFormatFileExt">既存の clang 形式の構成ファイルを使用</entry>
    <entry key="misraCppInterfaceClassName">なし</entry>
    <entry key="misraCppNamespaceRecommendation">任意の有効な C++ 名前空間</entry>
    <entry key="silPilVerbosityOff">オフ</entry>
    <entry key="silPilVerbosityOn">オン</entry>
    <entry key="codeProfilingCodeMetricsTime">時間</entry>
    <entry key="codeProfilingCodeMetricsTotInstr">合計命令数</entry>
    <entry key="codeProfilingCodeMetricsFloatInstr">浮動小数点命令</entry>
    <entry key="codeProfilingCodeMetricsFloatOpts">浮動小数点演算</entry>
    <entry key="codeProfilingCodeMetricsIntInstr">整数命令</entry>
    <entry key="codeProfilingCodeMetricsLoadInstr">読み込み命令</entry>
    <entry key="codeProfilingCodeMetricsStoreInstr">保存命令</entry>
    <entry key="codeProfilingCodeMetricsTotCyc">合計サイクル数</entry>
    <entry key="codeProfilingCodeMetricsL1DCM">L1 データ キャッシュ ミス</entry>
    <entry key="codeProfilingCodeMetricsL1ICM">L1 命令キャッシュ ミス</entry>
    <entry key="codeProfilingCodeMetricsL2DCM">L2 データ キャッシュ ミス</entry>
    <entry key="codeProfilingCodeMetricsL2ICM">L2 命令キャッシュ ミス</entry>
    <entry key="codeProfilingCodeMetricsTLBDM">TLB データ ミス</entry>
    <entry key="codeProfilingCodeMetricsTLBIM">TLB 命令ミス</entry>
    <entry key="codeProfilingCodeMetricsMemStall">メモリ ストール サイクル</entry>
    <entry key="codeProfilingCodeMetricsTotStall">合計ストール サイクル数</entry>
    <entry key="buildFolderTypeProject">プロジェクト フォルダーのサブフォルダー</entry>
    <entry key="buildFolderTypeCurrent">MATLAB の現在の作業フォルダーのサブフォルダー</entry>
    <entry key="workingFolderTypeProject">プロジェクト フォルダー</entry>
    <entry key="workingFolderTypeCurrent">MATLAB の現在の作業フォルダー</entry>
    <entry key="folderTypeSpecified">指定したフォルダー</entry>
    <entry key="allData">すべてのデータ</entry>
    <entry key="summaryOnly">概要のみ</entry>
    <entry key="metricsOnly">メトリクスのみ</entry>
    <entry key="simdAccelerationNone">なし</entry>
    <entry key="simdAccelerationPortableFormat">移植可能 ({0})</entry>
    <entry key="simdAccelerationFullFormat">完全 ({0})</entry>
    <entry key="simdAccelerationAutoFormat">自動 ({0})</entry>
    <entry key="usePrecompiledLibrariesPrefer">使用可能な場合はプリコンパイルされたライブラリを優先</entry>
    <entry key="usePrecompiledLibrariesAvoid">可能な場合はプリコンパイルされたライブラリを回避</entry>
  </message>
</rsccat>
