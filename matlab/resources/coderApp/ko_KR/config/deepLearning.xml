<?xml version="1.0" encoding="UTF-8"?>
<!--Copyright 2025 The MathWorks, Inc.-->

<rsccat xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.0" locale="ko_KR" product="coderApp" xsi:noNamespaceSchemaLocation="../../resources/schema/msgcat.xsd">
  <message>
    <entry key="category_deepLearning">딥러닝</entry>
    <entry key="category_dl_none_compression">압축</entry>
    <entry key="dlCustomCallback">딥러닝 콜백 클래스</entry>
    <entry key="dlCustomCallback_desc">딥러닝 codegen 옵션을 공급하는 사용자 콜백 클래스</entry>
    <entry key="dlTargetLib">딥러닝 라이브러리</entry>
    <entry key="dlTargetLib_desc">딥러닝 코드 생성을 위한 타깃 라이브러리</entry>
    <entry key="tensorRt_dataType">데이터형</entry>
    <entry key="tensorRt_dataType_desc">TensorRT를 사용한 추론에 사용하기 위한 데이터형</entry>
    <entry key="tensorRt_dataPath">보정 데이터 경로</entry>
    <entry key="tensorRt_dataPath_desc">int8 추론에 사용되는 이미지 데이터셋의 위치</entry>
    <entry key="tensorRt_numCalibrationBatches">보정 배치 개수</entry>
    <entry key="tensorRt_numCalibrationBatches_desc">int8 보정에 대한 배치 개수를 지정하는 숫자형 값</entry>
    <entry key="cudnn_dataType">데이터형</entry>
    <entry key="cudnn_dataType_desc">cuDNN을 사용한 추론에 사용하기 위한 데이터형</entry>
    <entry key="cudnn_autoTuning">자동 조정 사용</entry>
    <entry key="cudnn_autoTuning_desc">자동 조정은 입력과 커널 크기 및 메모리 가용성을 기준으로 최적의 컨벌루션 알고리즘을 고릅니다</entry>
    <entry key="armCompute_version">ARM Compute Library 버전</entry>
    <entry key="armCompute_version_desc">타깃 하드웨어에서 사용되는 ARM Compute Library의 버전</entry>
    <entry key="armCompute_arch">ARM Compute 아키텍처</entry>
    <entry key="armCompute_arch_desc">타깃 하드웨어에서 지원되는 ARM 아키텍처</entry>
    <entry key="armCompute_dataType">데이터형</entry>
    <entry key="armCompute_dataType_desc">ARM Compute를 사용한 추론에 사용하기 위한 데이터형</entry>
    <entry key="cmsisnn_dataType">데이터형</entry>
    <entry key="cmsisnn_dataType_desc">CMSIS-NN을 사용한 추론에 사용하기 위한 데이터형</entry>
    <entry key="noneTargetLib_learnablesCompression">학습 가능 압축</entry>
    <entry key="noneTargetLib_learnablesCompression_desc">가능한 경우 신경망의 학습 가능한 파라미터를 단정밀도 유형에서 더 낮은 정밀도 유형으로 압축합니다.</entry>
    <entry key="targetLibNone">안 함</entry>
    <entry key="armArchUnspecified">지정되지 않음</entry>
    <entry key="tagTensorRt">TensorRT 구성</entry>
    <entry key="tagCudnn">CuDNN 구성</entry>
    <entry key="tagArmCompute">ARM Compute 구성</entry>
    <entry key="tagCmsisnn">CMSIS-NN 구성</entry>
    <entry key="tagNoneTargetLib">일반 딥러닝 C/C++ 코드 구성</entry>
    <entry key="tagMatlabSpkg">MATLAB Coder Interface for Deep Learning</entry>
    <entry key="tagGpuSpkg">GPU Coder Interface for Deep Learning</entry>
    <entry key="calibrationResultFile">보정 결과 파일 경로</entry>
    <entry key="calibrationResultFile_desc">dlquantizer 객체가 포함된 MAT 파일의 위치</entry>
    <entry key="requireArmCompute">타깃 라이브러리를 &lt;app-link action="setParam" arg-key="dlTargetLib" arg-value="arm-compute"&gt;Arm Compute&lt;/app-link&gt;로 설정해야 합니다</entry>
    <entry key="requireArmComputeNoGpu">타깃 라이브러리를 &lt;app-link action="setParam" arg-key="dlTargetLib" arg-value="arm-compute"&gt;Arm Compute&lt;/app-link&gt;로 설정해야 하며, GPU 코드 생성은 &lt;app-link action="setParam" arg-key="gpuEnabled" arg-value="false"&gt;비활성화됨&lt;/app-link&gt;으로 설정해야 합니다</entry>
    <entry key="requireCudnn">타깃 라이브러리를 &lt;app-link action="setParam" arg-key="dlTargetLib" arg-value="cudnn"&gt;cuDNN&lt;/app-link&gt;으로 설정해야 합니다</entry>
    <entry key="requireCudnnAndGpu">타깃 라이브러리를 &lt;app-link action="setParam" arg-key="dlTargetLib" arg-value="cudnn"&gt;cuDNN&lt;/app-link&gt;으로 설정해야 하며, GPU 코드 생성은 &lt;app-link action="setParam" arg-key="gpuEnabled" arg-value="true"&gt;활성화됨&lt;/app-link&gt;으로 설정해야 합니다</entry>
    <entry key="requireTensorRt">타깃 라이브러리를 &lt;app-link action="setParam" arg-key="dlTargetLib" arg-value="tensorrt"&gt;TensorRT&lt;/app-link&gt;로 설정해야 합니다</entry>
    <entry key="requireTensorRtAndGpu">타깃 라이브러리를 &lt;app-link action="setParam" arg-key="dlTargetLib" arg-value="tensorrt"&gt;TensorRT&lt;/app-link&gt;로 설정해야 하며, GPU 코드 생성은 &lt;app-link action="setParam" arg-key="gpuEnabled" arg-value="true"&gt;활성화됨&lt;/app-link&gt;으로 설정해야 합니다</entry>
    <entry key="category_dl_tensorRt">TensorRT</entry>
    <entry key="category_dl_cudnn">cuDNN</entry>
    <entry key="category_dl_armCompute">ARM Neon</entry>
    <entry key="category_dl_cmsisnn">CMSIS-NN</entry>
    <entry key="targetLibMKLDNN">MKL-DNN</entry>
    <entry key="targetLibCuDNN">cuDNN</entry>
    <entry key="targetLibTensorRT">TensorRT</entry>
    <entry key="targetLibArmCompute">ARM Compute</entry>
    <entry key="targetLibCMSISNN">CMSIS-NN</entry>
    <entry key="armArchV8">armv8</entry>
    <entry key="armArchV7">armv7</entry>
    <entry key="learnablesCompression_None">None</entry>
    <entry key="learnablesCompression_bfloat16">bfloat16</entry>
    <entry key="tagDeepLearningToolbox">Deep Learning Toolbox</entry>
    <entry key="spkgLinkGpu">ARM Compute</entry>
  </message>
</rsccat>
