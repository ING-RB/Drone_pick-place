<?xml version="1.0" encoding="UTF-8"?>
<!--Copyright 2024 The MathWorks, Inc.-->

<rsccat xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.0" locale="ko_KR" product="coderApp" xsi:noNamespaceSchemaLocation="../../resources/schema/msgcat.xsd">
  <message>
    <entry key="category_gpu">GPU 코드</entry>
    <entry key="category_gpu_device">장치</entry>
    <entry key="category_gpu_optimization">코드 최적화</entry>
    <entry key="category_gpu_customization">코드 사용자 지정</entry>
    <entry key="category_gpu_advanced">고급</entry>
    <entry key="gpuEnabled">GPU 코드 생성</entry>
    <entry key="gpuEnabled_desc">GPU 코드 생성을 제어합니다</entry>
    <entry key="kernelNamePrefix">커널 이름 접두사</entry>
    <entry key="kernelNamePrefix_desc">생성되는 모든 커널 앞에 이 이름을 추가합니다</entry>
    <entry key="selectCudaDevice">GPU 장치 ID</entry>
    <entry key="selectCudaDevice_desc">다중 GPU 환경에서 GPU 장치를 선택합니다</entry>
    <entry key="maxKernelDepth">최대 커널 시작 깊이</entry>
    <entry key="maxKernelDepth_desc">최대 동적 커널 시작 깊이</entry>
    <entry key="maxBlocksPerKernel">커널당 최대 블록 수</entry>
    <entry key="maxBlocksPerKernel_desc">GPU 커널당 최대 스레드 블록 수</entry>
    <entry key="mallocMode">Malloc 모드</entry>
    <entry key="mallocMode_desc">CPU 및 GPU 전역 메모리에 대한 메모리 할당 모드</entry>
    <entry key="stackLimitPerThread">스택 제한</entry>
    <entry key="stackLimitPerThread_desc">GPU에서 스레드당 사용 가능한 스택 제한</entry>
    <entry key="mallocThreshold">Malloc 임계값</entry>
    <entry key="mallocThreshold_desc">이 값보다 클 경우 프라이빗 변수가 스택 대신 힙에 할당됩니다</entry>
    <entry key="enableCUBLAS">cuBLAS 사용</entry>
    <entry key="enableCUBLAS_desc">cuBLAS(선형 대수) 라이브러리 사용을 활성화합니다</entry>
    <entry key="enableCUSOLVER">cuSOLVER 사용</entry>
    <entry key="enableCUSOLVER_desc">cuSOLVER(선형 대수) 라이브러리 사용을 활성화합니다</entry>
    <entry key="enableCUFFT">cuFFT 사용</entry>
    <entry key="enableCUFFT_desc">cuFFT 라이브러리 사용을 활성화합니다</entry>
    <entry key="enableMemoryManager">GPU 메모리 관리자 활성화</entry>
    <entry key="enableMemoryManager_desc">할당 및 할당 해제를 위해 GPU 메모리 관리자를 사용합니다</entry>
    <entry key="benchmarking">벤치마킹</entry>
    <entry key="benchmarking_desc">코드를 추가하여 GPU 연산을 벤치마킹합니다</entry>
    <entry key="safeBuild">안전한 빌드</entry>
    <entry key="safeBuild_desc">런타임에 GPU 코드에서 오류를 검사합니다</entry>
    <entry key="computeCapability">최소 Compute Capability</entry>
    <entry key="computeCapability_desc">코드 생성을 위한 최소 CUDA Compute Capability를 선택합니다</entry>
    <entry key="customComputeCapability">사용자 지정 Compute Capability</entry>
    <entry key="customComputeCapability_desc">사용자 지정 CUDA 아키텍처 플래그 값을 지정합니다</entry>
    <entry key="compilerFlags">컴파일러 플래그</entry>
    <entry key="compilerFlags_desc">GPU 컴파일러로 추가 플래그를 전달합니다</entry>
  </message>
</rsccat>
