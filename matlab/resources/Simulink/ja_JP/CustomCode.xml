<?xml version="1.0" encoding="UTF-8"?>
<!--Copyright 2025 The MathWorks, Inc.-->

<rsccat xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.0" locale="ja_JP" product="Simulink" xsi:noNamespaceSchemaLocation="../../resources/schema/msgcat.xsd">
  <message>
    <entry key="CustomCodeParsingFailed">カスタム コードを解析できませんでした。カスタム コードで C++ 言語構文が使用されている場合は、[言語] が [C++] に設定されていることを確認してください。パーサー エラー メッセージ: {0}</entry>
    <entry key="NonwritableFolder">Unable to write to current working directory ''{0}''.  Change your current working directory to a directory that is not write-protected.</entry>
    <entry key="CustomCodeInstrumBuildFailed">カスタム コードをビルドできませんでした。指定したカスタム コードはカバレッジと互換性がありません。</entry>
    <entry key="CustomCodeParsingError">モデル ''{0}'' のカスタム コードの解析中にエラーが発生しました。カスタム コードに非互換性が存在する場合は、カスタム コード内のエラーを修正するか、''{1}'' を無効にしてください。カスタム コードで C++ 言語構文が使用されている場合は、モデルの [コンフィギュレーション パラメーター] &gt; [シミュレーション ターゲット] で [言語] が [C++] に設定されていることを確認してください。</entry>
    <entry key="CustomCodeParsingDiagnostic">{0}{1} 内で、\n{2}:\n{3}</entry>
    <entry key="CustomCodeSnippet">カスタム コード</entry>
    <entry key="CustomCodeParsingUnknownException">不明な例外処理です。</entry>
    <entry key="BlockCustomCodeParsingError">ブロック ''{0}'' のカスタム コードの解析中にエラーが発生しました。カスタム コードのエラーを修正してください。カスタム コードで C++ 言語構文が使用されている場合は、モデルの [コンフィギュレーション パラメーター] &gt; [シミュレーション ターゲット] で [言語] が [C++] に設定されていることを確認してください。</entry>
    <entry key="CallTheFunction">関数を呼び出します: {0}。</entry>
    <entry key="CustomCodeLibBuildError">モデル ''{0}'' のカスタム コード シミュレーション ターゲットのビルド中にエラーが発生しました。カスタム コードに非互換性が存在する場合は、カスタム コード内のエラーを修正するか、''{1}'' を無効にしてください。</entry>
    <entry key="CustomCodeLibLoadFailed">カスタム コード シミュレーション ライブラリを読み込むことができませんでした:{0}</entry>
    <entry key="CustomCudeParseSuccessful">モデル ''{0}'' 内のカスタム コードの解析が正常に完了しました。</entry>
    <entry key="CustomCodeBuildSuccessful">モデル ''{0}'' のカスタム コードを正常にビルドしました。</entry>
    <entry key="CustomCudeParseSuccessfulWithImport">モデル ''{0}'' 内のカスタム コードの解析が正常に完了しました。 &lt;actions exclusiveFixIts="yes"&gt; &lt;action type="suggestion" btn="apply"&gt; &lt;cmd&gt;Simulink.importExternalCTypes(''{0}'',''Names'',{3});&lt;/cmd&gt; &lt;txt&gt;関数 ''{1}'' のインターフェイスは次のカスタム データ型をもちます。 \n\n{2}\n次のコマンドを使用して、Simulink.AliasType、Simulink.Bus、Simulink のいずれかの列挙クラス オブジェクトとしてベース ワークスペースに手動でインポートする:\n&lt;a href="matlab:doc('Simulink.importExternalCTypes')"&gt;Simulink.importExternalCTypes&lt;/a&gt;(''{0}'',''Names'',{3});\n[適用] をクリックして、自動的にインポートする。&lt;/txt&gt; &lt;/action&gt; &lt;/actions&gt;
    
</entry>
    <entry key="CustomCodeUndefinedFcnMsg">指定されたカスタム コード ソース ファイルまたはライブラリ ファイルで次の関数が定義されていません。\n{0}</entry>
    <entry key="CustomCodeUndefinedVarMsg">指定されたカスタム コードのソース ファイルまたはライブラリ ファイルで次の変数が定義されていません。\n{0}</entry>
    <entry key="CustomCodeUndefinedFcnFilteredOut">C Caller ブロック ''{0}'' 内で指定した関数 ''{1}'' はカスタム コード ソース ファイルまたはライブラリ ファイルで未定義のため、フィルターで除外されました。</entry>
    <entry key="UnsupportedCustomCodeVarAccess">
    カスタム コード変数 ''{0}'' にアクセスできません。次の場合、カスタム コード変数へのアクセスはサポートされません。&lt;ul&gt; &lt;li&gt; カスタム コード ソースまたはライブラリ ファイルで変数が定義されていない。[未定義の関数の処理] パラメーターを調整することで、Simulink が未定義の関数と変数を処理する方法を指定してください。&lt;/li&gt; &lt;li&gt; 変数のデータ型がサポートされていない。参照型、共用体型、無名の構造体または列挙型、および値クラス型はサポートされていません&lt;/li&gt; &lt;/ul&gt;</entry>
    <entry key="AmbiguousCustomType">Simulink type ''{0}'' must be imported into the Architectural Data section of the Simulink Data Dictionary with the ''C++ Namespace'' parameter value set explicitly because Simulink type ''{0}'' matches names of multiple types in the custom code associated with model ''{1}''. Otherwise, the generated code may be incorrect because of unintentional use of namespace.</entry>
    <entry key="SLCCBlockDoesNotSupportMultiExecInstances">サブシステム内のブロック ''{0}'' は、サポートされている ''{1}'' ではありません。サブシステムには For Each ブロック ''{2}'' が含まれており、このブロックが呼び出すカスタム コードは確定的な出力をもたない場合があるからです。&lt;actions exclusiveFixIts="yes"&gt; &lt;action type="suggestion"&gt; &lt;cmd&gt;load_system(''{3}'');configset.highlightParameter(''{3}'','DefaultCustomCodeDeterministicFunctions');&lt;/cmd&gt; &lt;txt&gt;出力が状態をもたず確定的であると仮定するよう選択を行うことにより、カスタム コードの複数の実行インスタンスのサポートを有効にする。 ''{3}'' \nブロックがそのカスタム コードに依存する C Function ブロックである場合、''CustomCodeIsMultiInstantiable'' を ''on'' に設定する。&lt;/txt&gt; &lt;/action&gt; &lt;/actions&gt;
         </entry>
    <entry key="NoAvailableFunctionsInFilterOutMode">No available functions to have in C Caller block ''{0}''. Undefined functions are filtered out by default. See ''{1}'' for details. </entry>
    <entry key="CustCodeSrcFiles">カスタム ソース ファイルのstring</entry>
    <entry key="CustCodeLibFiles">カスタム ライブラリ ファイルの string</entry>
    <entry key="CustCodeIncludeDirs">カスタム インクルード ディレクトリ パスの string</entry>
    <entry key="TokenizeError">カスタム コードの解決中にエラーが発生しました。</entry>
    <entry key="MismatchedDollars">$ 文字が一致しません。{0} での代入を続行できませんでした。</entry>
    <entry key="CustCodeFileNotFoundInSRootDir">モデル ディレクトリに対して {1} で指定された ''{0}'' は存在しません: {2}</entry>
    <entry key="InvalidDollarString">'$' encapsulated token ''{0}'' does not evaluate to a string in the base workspace for substitution in the expression ''{1}''.</entry>
    <entry key="CustCodeFileNotFoundInSearchDirs">{1} で指定された {0} は、次のどの検索ディレクトリにも存在しません:\n{2}</entry>
    <entry key="ErrorInDollarString">Unable to evaluate ''$'' encapsulated token ''{0}'' in base workspace for substitution in {1}.</entry>
    <entry key="SizeFcnInInputArgDims">引数 ''{0}'' の次元を判定できません。size() 式は出力引数の次元の指定でのみ使用できます。</entry>
    <entry key="SizeFcnIncorrectInputs">引数 ''{0}'' の次元を判定できません。size() 式は 1 つまたは 2 つの引数のみを受け入れます。</entry>
    <entry key="SizeFcnInvalidSymbolName">引数 ''{0}'' の次元を判定できません。size() 式の最初の引数は入力を参照しなければなりません。</entry>
    <entry key="SizeFcnOnlyInputInOutputOrParameter">''{0}'' を使用して ''{1}'' の次元を指定できませんでした。パラメーターの値か、または出力の次元を指定してください。</entry>
    <entry key="DataMustBeInSizeFcn">引数 ''{0}'' の次元を判定できませんでした。size() 式では ''{1}'' を使用しなければなりません。</entry>
    <entry key="SizeFcnInvalidDimension">引数 ''{0}'' の次元を判定できません。size() 式の 2 番目の入力は次元でなければなりません。</entry>
    <entry key="SizeComputationFailedGeneric">次元を計算できませんでした。"size()" 式を使用して次元指定の構文エラーをチェックしてください。</entry>
    <entry key="SizeComputationFailed">次元を計算できませんでした。''{0}'' の次元指定の構文エラーをチェックしてください。</entry>
    <entry key="SizeComputationFailedInCBlock">''{0}'' の端子の次元を解決できません。次元指定の構文エラーをチェックしてください。入力端子および InputOutput 端子は継承されたサイズのみをサポートします。出力端子は size() 式をサポートします。 </entry>
    <entry key="SizeComputationFailedInPyBlock">''{0}'' の端子の次元を解決できません。次元指定の構文エラーをチェックしてください。入力端子は継承されたサイズのみをサポートします。出力端子は size() 式をサポートします。 </entry>
    <entry key="SizeComputationInvalidDimensionShapeOrValue">引数 ''{0}'' の次元を評価できませんでした。次元指定は整数値のスカラーまたはベクトルとして評価されなければなりません。各次元の長さは 1 と {1, number, integer} の間でなければなりません。</entry>
    <entry key="SizeExpressionMustBeBuiltInNumeric"> size() 式は組み込みの数値型でなければなりません。指定されている型 ''{0}'' を解決できません。</entry>
    <entry key="TypeImporterModelHeaderFieldEmpty">モデル ''{0}'' で指定されているカスタム コードを解決できません。</entry>
    <entry key="TypeImporterParamValueOutputDirInvalid">指定された出力ディレクトリ ''{0}'' が見つかりません。</entry>
    <entry key="TypeImporterModelHasNoConfigurationParameters">Invalid configuration parameter in the model ''{0}''.</entry>
    <entry key="TypeImporterArgumentShadowed">プロパティ ''{0}'' を設定できません。これよりもモデルのコンフィギュレーション パラメーターが優先されるためです。</entry>
    <entry key="TypeImporterParamValueIsNotString">''{0}'' の値は空でない string または文字ベクトルでなければなりません。</entry>
    <entry key="TypeImporterParamValueIsNotStringOrStringArray">''{0}'' の値は空でない string または string 配列でなければなりません。</entry>
    <entry key="TypeImporterParamValueIsNotHardwareImplementation">''{0}'' の値は "coder.HardwareImplementation" または "Simulink.ConfigSet" のインスタンスでなければなりません。</entry>
    <entry key="TypeImporterParamNotSupportSimultaneously">プロパティ ''{0}'' と ''{1}'' は同時に使用できません。</entry>
    <entry key="TypeImporterParamDataDictionaryAndEnumClassConflict">"DataDictionary" の使用中は、プロパティ "EnumClass" を "MATLAB file" に設定できません。</entry>
    <entry key="TypeImporterBusTypeImported">ファイル ''{1}'' の ''{0}'' は Simulink.Bus オブジェクトとしてインポートされます。</entry>
    <entry key="TypeImporterEnumTypeImported">ファイル ''{1}'' の ''{0}'' は列挙型クラスとしてインポートされます。</entry>
    <entry key="TypeImporterAliasTypeImported">ファイル ''{1}'' の ''{0}'' は Simulink.AliasType オブジェクトとしてインポートされます。</entry>
    <entry key="TypeImporterExistingBusType">ファイル ''{1}'' から ''{0}'' を再インポートできません。整合性のある、同じ名前の Simulink.Bus オブジェクトが存在します。</entry>
    <entry key="TypeImporterExistingEnumType">ファイル ''{1}'' から ''{0}'' を再インポートできません。整合性のある、同じ名前の列挙型クラスが存在します。</entry>
    <entry key="TypeImporterExistingAliasType">ファイル ''{1}'' から ''{0}'' を再インポートできません。整合性のある、同じ名前の Simulink.AliasType オブジェクトが存在します。</entry>
    <entry key="TypeImporterInconsistentBusType">ファイル ''{1}'' から ''{0}'' を再インポートできません。既存の Simulink.Bus オブジェクトと矛盾します。</entry>
    <entry key="TypeImporterInconsistentAliasType">ファイル ''{1}'' から ''{0}'' を再インポートできません。既存の Simulink.AliasType オブジェクトと矛盾します。</entry>
    <entry key="TypeImporterInconsistentEnumTypeEnumNames">ファイル ''{1}'' から ''{0}'' をインポートできません。列挙名が既存の列挙型クラスと矛盾します。</entry>
    <entry key="TypeImporterInconsistentEnumTypeEnumValues">ファイル ''{1}'' の ''{0}'' はインポートされません。列挙値が既存の列挙型クラスと矛盾します。</entry>
    <entry key="TypeImporterInconsistentNotValidBusType">ファイル ''{1}'' から ''{0}'' をインポートできません。同じ変数名をもつ無効な Simulink.Bus オブジェクトが存在します。</entry>
    <entry key="TypeImporterInconsistentNotValidAliasType">ファイル ''{1}'' から ''{0}'' をインポートできません。同じ変数名をもつ無効な Simulink.AliasType オブジェクトが存在します。</entry>
    <entry key="TypeImporterInconsistentBusTypeElementField">ファイル ''{1}'' の ''{0}'' は、{0}.Elements({2, number, integer}).{3} 内で既存の Simulink.Bus オブジェクトと矛盾しています。</entry>
    <entry key="TypeImporterInconsistentBusTypeNewElement">ファイル ''{1}'' の ''{0}'' には、既存の Simulink.Bus オブジェクトと比較して新しい Elements({2, number, integer}) があります。</entry>
    <entry key="TypeImporterNonImportableBusType">ファイル ''{1}'' から ''{0}'' をインポートできません。空であるか、Simulink でサポートされていないタイプのフィールドがあります。</entry>
    <entry key="TypeImporterInvalidVariableName">ファイル ''{1}'' から ''{0}'' をインポートできません。有効な MATLAB 変数名ではありません。</entry>
    <entry key="TypeImporterInvalidFieldName">フィールド名が無効なため、ファイル ''{1}'' から ''{0}'' をインポートできません。</entry>
    <entry key="TypeImporterAmbiguousType">ファイル ''{1}'' から ''{0}'' をインポートできません。異なる名前空間に同じ名前の型が複数存在するためです。名前空間で修飾された型名を指定した [名前] オプションを使用して、1 つの型のみを指定してください。</entry>
    <entry key="TypeImporterEnumStorageType64Bits">列挙のストレージ型が 64 ビットであるため、ファイル ''{1}'' から ''{0}'' をインポートできません。</entry>
    <entry key="TypeImporterFailToCreateEnumTypeFile">Unable to open enum file for enum type ''{0}''. \n{1}</entry>
    <entry key="TypeImporterDataDictionaryNeededForDataDictioanrySection">A valid value of ''DataDictionary'' option is required when specifying a value for ''DataDictionarySection'' option.</entry>
    <entry key="TypeImporterInconsistentTypeNamespace">ファイル ''{1}'' から ''{0}'' を再インポートできません。型 ''{0}'' は Simulink データ ディクショナリに存在し、その C++ 名前空間が既存の型のコード生成の C++ 名前空間と異なります。</entry>
    <entry key="TypeImporterInconsistentTargetDataSection">ファイル ''{1}'' から ''{0}'' を再インポートできません。型 ''{0}'' は Simulink データ ディクショナリに存在し、指定された ''DataDictionarySection'' が既存の型のデータ セクションと異なります。</entry>
    <entry key="TypeImporterFailToCreateEnumTypeBecauseOfConflict">Failed to create enumeration type ''{0}'' because an enumeration with the same name already exists in the path or has been loaded in another data dictionary.</entry>
    <entry key="CFcnCallerBlkFcnNotExist">関数 ''{1}'' を C Caller ブロック ''{0}'' から呼び出すことができません。関数がカスタム コードで定義されていないか、または C Caller ブロックでサポートされていないタイプです。</entry>
    <entry key="CFcnCallerSyncToolTip">カスタム コードを更新します。</entry>
    <entry key="CFcnCallerGotoFcnDefNoFcnDlgErrTitle">カスタム コード エラー</entry>
    <entry key="CustomCodeGenericError">カスタム コード エラー</entry>
    <entry key="CFcnCallerGotoFcnDefNoFcn">選択した関数 ''{0}'' が見つかりません。更新ボタンをクリックしてください。</entry>
    <entry key="CFcnCallerGotoFcnDefToolTip">関数に移動します。</entry>
    <entry key="CFcnCallerConfigSetToolTip">カスタム コード設定を構成します。</entry>
    <entry key="InvalidTypeForInport">''{0}'' を ''{2}'' の&lt;sldiag objui="inport" objparam="{1, number, integer}" objname="{2}"&gt;入力端子 {1, number, integer}&lt;/sldiag&gt; の有効なタイプに関連付けられません。</entry>
    <entry key="InvalidTypeForOutport">''{0}'' を ''{2}'' の&lt;sldiag objui="outport" objparam="{1, number, integer}" objname="{2}"&gt;出力端子 {1, number, integer}&lt;/sldiag&gt; の有効なタイプに関連付けられません。</entry>
    <entry key="InvalidTypeForParam">''{0}'' を ''{2}'' のブロック パラメーターまたは定数 ''{1}'' の有効なタイプに関連付けられません。</entry>
    <entry key="ParsingTypeFailed">引数 ''{1}'' について string 型 ''{0}'' を解析できませんでした。</entry>
    <entry key="CCallerParameterRegisterError">Unable to register parameters for C Caller block ''{0}''.</entry>
    <entry key="ParameterCFcnDimensionMismatch">パラメーターのデータ サイズが一致しません。指定した次元 ''{1}'' のブロック パラメーター ''{0}'' が、評価済みパラメーター ''{2}'' のサイズと一致しません。</entry>
    <entry key="ParameterValueCannotBeEmptyMatrix">ブロック パラメーター ''{0}'' の値が空行列に設定されています。C 関数への入力であるパラメーター値を空行列にすることはできません。</entry>
    <entry key="PortSpec_Prompt">端子仕様:</entry>
    <entry key="CFunctionPortSpec_Prompt">端子とパラメーター</entry>
    <entry key="PortSpec_ArgName">名前</entry>
    <entry key="PortSpec_Scope">スコープ</entry>
    <entry key="PortSpec_Index">端子</entry>
    <entry key="PortSpec_Label">ラベル</entry>
    <entry key="PortSpec_Type">タイプ</entry>
    <entry key="PortSpec_Size">次元</entry>
    <entry key="CSPortSpec_Size">次元</entry>
    <entry key="NameColumnForClassTooltip">クラスのオブジェクトを、名前を付けてインスタンス化します。たとえば、"obj" や "obj()" などです。\n引数をクラス コンストラクターに渡すには、定数のほかに、\nこのテーブルで定義されている定数やパラメーターのシンボルを含む式も使用できます。\nたとえば、"obj(10)" や "obj(aParam[0])" などです。</entry>
    <entry key="NameColumnTooltip">端子またはパラメーターの変数名</entry>
    <entry key="LabelColumnTooltipInputOutput">端子ラベル文字列</entry>
    <entry key="LabelColumnTooltipParam">パラメーター ダイアログ プロンプト</entry>
    <entry key="LabelColumnTooltipConstant">定数シンボルの値として評価される式</entry>
    <entry key="FailToRegisterCustomType">カスタム タイプ ''{0}'' を登録できませんでした。</entry>
    <entry key="CustomTypeNameCollision">同名の別のタイプが既に登録されているため、名前 ''{0}'' のカスタム タイプを登録できませんでした。</entry>
    <entry key="ContinuousSampleTimeNotAllowed">C Caller ブロック "{0}" では非確定的な出力をもつ可能性のあるカスタム コードを呼び出しているため、連続サンプル時間はサポートされません。&lt;actions exclusiveFixIts="yes"&gt; &lt;action type="suggestion"&gt; &lt;cmd&gt;load_system(''{1}'');configset.highlightParameter(''{1}'','DefaultCustomCodeDeterministicFunctions');&lt;/cmd&gt; &lt;txt&gt;確定的な関数を指定することで、カスタム コードでの連続サンプル時間のサポートを有効にする。&lt;/txt&gt; &lt;/action&gt; &lt;/actions&gt;
 </entry>
    <entry key="ContinuousTimeNotAllowedForNonDeterministic">C Function ブロック ''{0}'' では非確定的な出力をもつ可能性のあるカスタム コードが使用されているため、連続サンプル時間はサポートされません。&lt;actions exclusiveFixIts="yes"&gt; &lt;action type="suggestion"&gt; &lt;cmd&gt;load_system(''{1}'');configset.highlightParameter(''{1}'','DefaultCustomCodeDeterministicFunctions');&lt;/cmd&gt; &lt;txt&gt;確定的な関数を指定することで、カスタム コードでの連続サンプル時間のサポートを有効にする。&lt;/txt&gt; &lt;/action&gt; &lt;/actions&gt;
 </entry>
    <entry key="EmptyCustomCodeSetting">C Caller ブロック ''{0}'' では、モデルをインポート可能なカスタム コードに関連付ける必要があります。カスタム コードが指定されていないか、''{1}'' が無効になっています。 &lt;actions exclusiveFixIts="yes"&gt; &lt;action type="suggestion"&gt; &lt;cmd&gt;load_system(''{2}'');configset.highlightParameter(''{2}'','SimCustomHeaderCode');&lt;/cmd&gt; &lt;txt&gt;カスタム コードの依存関係をモデル ''{2}'' に追加する&lt;/txt&gt; &lt;/action&gt; &lt;action type="suggestion"&gt; &lt;cmd&gt;load_system(''{2}'');configset.highlightParameter(''{2}'',''SimParseCustomCode'');&lt;/cmd&gt; &lt;txt&gt;モデル ''{2}'' の ''{1}'' を有効にする&lt;/txt&gt; &lt;/action&gt; &lt;/actions&gt;
    
</entry>
    <entry key="CFcnCallerBlockFcnOutputArgSizeNotSpecified">Specify size of output argument ''{0}'' for C Caller block ''{1}'' or select "Simulate custom code in a separate process" in Configuration Parameters &gt; Simulation Target pane.</entry>
    <entry key="CCallerParseTypeError">C Caller ブロック ''{0}'' の引数タイプを解析できません。</entry>
    <entry key="UnexpectedExtension">カスタム コード ソース/ヘッダー ファイルの予期せぬ拡張子: ''{0}''</entry>
    <entry key="NonConstCPointerInputNotGoodAsInputOrParameter">C Caller ブロック ''{0}'' では、関数の引数 ''{1}'' は ''const'' 修飾子のないポインターとして渡されます。ただし、これは端子仕様テーブルでブロック ''{2}'' として指定されており、読み取り専用の引数を示します。関数 ''{3}'' がポインターを介して引数 ''{1}'' に書き込まないことを確認してください。</entry>
    <entry key="AddDeleteGIOErrorWithAutoInfer"> Error using ''addGlobalArg'' or ''deleteGlobalArg'' function with ''Automatically infer global variables as function interfaces'' parameter selected. To use those functions, in the model Configuration Parameters dialog box, deselect 'Simulation Target &gt; Import settings &gt; Automatically infer global variables as function interfaces'.</entry>
    <entry key="CCallerName">C Caller ブロック</entry>
    <entry key="CCallerPort">引数</entry>
    <entry key="CFunctionName">C Function ブロック</entry>
    <entry key="CFunctionPort">シンボル</entry>
    <entry key="SimulinkTypeIncompatibleWithCustomCodeType">Simulink data type specified for argument ''{0}'' for C Caller block ''{1}'' is incompatible with the argument's type in the custom code. Ensure that a compatible Simulink data type is specified for argument ''{0}''.</entry>
    <entry key="BusTypeNameMismatch">{4} ''{1}'' の {3} ''{0}'' に指定されたバス型が、カスタム コード内の {3} の型と一致しません。[コンフィギュレーション パラメーター] &gt; [シミュレーション ターゲット] ペインで {2} の構造体定義を確認してください。</entry>
    <entry key="BusTypeFieldNameMismatch">{4} ''{1}'' の {3} ''{0}'' に指定されたバス型のフィールド名が、カスタム コード内の {3} の型と一致しません。[コンフィギュレーション パラメーター] &gt; [シミュレーション ターゲット] ペインで {2} の構造体定義を確認してください。</entry>
    <entry key="BusTypeFieldTypeMismatch">{4} ''{1}'' の {3} ''{0}'' のバスで指定されたフィールド タイプが、カスタム コード内の {3} のタイプと一致しません。[コンフィギュレーション パラメーター] &gt; [シミュレーション ターゲット] ペインで {2} の構造体定義を確認してください。</entry>
    <entry key="BusTypeElementEnumNameMismatch">{4} ''{1}'' の {3} ''{0}'' のバス フィールドの型に指定された列挙名が、カスタム コード内の {3} の型と一致しません。[コンフィギュレーション パラメーター] &gt; [シミュレーション ターゲット] ペインで {2} の列挙定義を確認してください。</entry>
    <entry key="BusTypeElementEnumFieldValueMismatch">{4} ''{1}'' の {3} ''{0}'' のバス フィールドの型に指定された列挙要素の値が、カスタム コード内の {3} の型と一致しません。[コンフィギュレーション パラメーター] &gt; [シミュレーション ターゲット] ペインで {2} の列挙定義を確認してください。</entry>
    <entry key="BusTypeFieldNumMismatch">{4} ''{1}'' の {3} ''{0}'' のバス型に指定されたフィールド数が、カスタム コード内の {3} の型と一致しません。[コンフィギュレーション パラメーター] &gt; [シミュレーション ターゲット] ペインで {2} の構造体定義を確認してください。</entry>
    <entry key="BusTypeElementEnumFieldNumMismatch">{4} ''{1}'' の {3} ''{0}'' のバス フィールドの型に指定された列挙要素の数が、カスタム コード内の {3} の型と一致しません。[コンフィギュレーション パラメーター] &gt; [シミュレーション ターゲット] ペインで {2} の列挙定義を確認してください。</entry>
    <entry key="BusTypeElementCPPEnumStorageTypeMismatch">{4} ''{1}'' の {3} ''{0}'' のバス フィールドの型に指定された Simulink 列挙ストレージ型が、カスタム コードで基となる C++ enum 型 {2} と一致しません。</entry>
    <entry key="EnumTypeNameMismatch">{4} ''{1}'' の {3} ''{0}'' に指定された列挙型が、カスタム コード内の {3} の型と一致しません。[コンフィギュレーション パラメーター] &gt; [シミュレーション ターゲット] ペインで {2} の列挙定義を確認してください。</entry>
    <entry key="EnumTypeFieldNumMismatch">{4} ''{1}'' の {3} ''{0}'' に指定された列挙要素の数が、カスタム コード内の {3} の型と一致しません。[コンフィギュレーション パラメーター] &gt; [シミュレーション ターゲット] ペインで {2} の列挙定義を確認してください。</entry>
    <entry key="EnumTypeFieldValueMismatch">{4} ''{1}'' の {3} ''{0}'' に指定された列挙要素の値が、カスタム コード内の {3} の型と一致しません。[コンフィギュレーション パラメーター] &gt; [シミュレーション ターゲット] ペインで {2} の列挙定義を確認してください。</entry>
    <entry key="CPPEnumStorageTypeMismatch">{4} ''{1}'' の {3} ''{0}'' に指定された Simulink 列挙ストレージ型が、カスタム コードで基となる C++ enum 型 {2} と一致しません。</entry>
    <entry key="MultiWordFixptNotSupported">C Caller ブロック ''{1}'' の引数 ''{0}'' に指定された Simulink データ型は、現在のターゲットではマルチワードの固定小数点型です。マルチワードの固定小数点型の使用は、C Caller ブロックではサポートされていません。現在のターゲットでは、最大語長が {2,number,integer} の固定小数点型のみを使用できます。</entry>
    <entry key="PortSpecConsistencyError"> 関数 ''{2}'' の引数 ''{1}'' の {0} が、C Caller ブロック {3} では ''{4}''、C Caller ブロック {6} では ''{5}'' として指定されています。同じ関数を呼び出す C Caller ブロックでは、同じ引数 {0} を指定しなければなりません。 </entry>
    <entry key="PortSpecInconsistencyTopError">同じカスタム コード関数を呼び出す 2 つの C Caller ブロック間で矛盾した端子仕様が検出されました。</entry>
    <entry key="CCallerInvalidArgumentType">Invalid type ''{0}'' for argument ''{1}''.</entry>
    <entry key="UnableToCallFunctionWithNDArrayCPP">関数の引数の 1 つが多次元配列で、シミュレーション ターゲットまたはコード生成言語が ''C++'' に設定されているため、ブロック ''{1}'' でカスタム コード関数 ''{0}'' を呼び出せません。</entry>
    <entry key="UnableToCallFunctionWithNDArrayCPP_SF">関数の引数の 1 つが多次元配列で、シミュレーション ターゲットまたはコード生成言語が ''C++'' に設定されているため、カスタム コード関数 ''{0}'' を呼び出せません。</entry>
    <entry key="InputArgumentSizeMismatchWarning">ブロック ''{2}'' で、カスタム コード関数 ''{1}'' の引数 ''{0}'' に渡された入力パラメーターのサイズがカスタム コード関数に必要なサイズと一致していません。</entry>
    <entry key="GIOWriteOnlyAsInputWarning">ブロック ''{2}'' のグローバル引数 ''{0}'' のスコープ設定が無効です。引数はブロック内で ''Input'' スコープに設定されていますが、このグローバル変数はカスタム コード関数 ''{1}'' にのみ書き込まれており、''Output'' であることを示しています。</entry>
    <entry key="InputArgumentSizeMismatchWarningCFunctionBlk">ブロック ''{2}'' で、カスタム コード関数 ''{1}'' の引数 [{0, number, integer}] に渡された入力パラメーターのサイズがカスタム コード関数に必要なサイズと一致していません。</entry>
    <entry key="CCallerRowMajorFunctionWithStructInColumnMajorCodegen">C Caller ブロック ''{0}'' は、非スカラー フィールドを入力または出力とする struct をもつ、行優先のカスタム コード関数 ''{1}'' を呼び出しますが、これは、列優先のコード生成ではサポートされていません。</entry>
    <entry key="DynamicSLStringAsOutput">引数 ''{0}'' に指定された Simulink string 型は、C Caller ブロック ''{1}'' の string の最大長を指定しなければなりません。"stringtype" を使用して、出力端子と InputOutput 端子の string の最大長を指定してください。</entry>
    <entry key="StdStringToNonConstFcnArg">カスタム コード関数 ''{1}'' を呼び出す C Caller ブロック ''{0}'' の C++ コードを生成できません。モデルが入力 ''{2}'' に対し ''std::string'' を生成するよう構成されているためです。const 修飾子が付いていない関数引数 ''{2}'' は std::string をサポートしません。関数引数 ''{2}'' に const 修飾子を追加することを検討してください。</entry>
    <entry key="ParameterScopeNotSupportedForSLString">引数 ''{0}'' では、パラメーター範囲は Simulink の string をサポートしません。</entry>
    <entry key="GlobalSLStringVar">C Caller ブロック ''{1}'' はグローバル変数 ''{0}'' に対し Simulink の string をサポートしません。</entry>
    <entry key="CFunctionBlockParsingFailed">C Function ブロック ''{2}'' での ''{0}'' コードの解析に失敗し、次のメッセージが返されました。\n{1}</entry>
    <entry key="CFunctionBlockParsingFailedAddOn">[コード生成] タブの [&lt;a href="matlab:doc('c function')"&gt;コードをそのまま生成&lt;/a&gt;] をオンにすることを検討してください。</entry>
    <entry key="CFunctionBlockParsingFailedWithImportCustomCodeOff">C Function ブロック ''{3}'' の解析に失敗しました。C Function ブロックが外部コードを使用する場合は、''{0}'' を有効にしなければなりません。{1} の解析に失敗し、次のメッセージが返されました:\n{2}</entry>
    <entry key="SymbolTableBlockParameterCannotBeEmpty">ブロック パラメーター ''{0}'' の値が空行列に設定されています。{2} ''{1}'' の入力であるパラメーター値を空行列にすることはできません。</entry>
    <entry key="SymbolTableBlockParameterDimensionMismatch">{3} ''{2}'' のパラメーターのデータ サイズが一致しません。指定した次元 ''{1}'' のブロック パラメーター ''{0}'' が、評価済みパラメーター ''{0}'' のサイズと一致しません。</entry>
    <entry key="SymbolTableBlockInvalidTypeForInputPort">''{0}'' を ''{2}'' の&lt;sldiag objui="inport" objparam="{1, number, integer}" objname="{2}"&gt;入力端子 {1, number, integer}&lt;/sldiag&gt; の有効な型に関連付けられません。</entry>
    <entry key="SymbolTableBlockInvalidTypeForOutputPort">''{0}'' を ''{2}'' の&lt;sldiag objui="outport" objparam="{1, number, integer}" objname="{2}"&gt;出力端子 {1, number, integer}&lt;/sldiag&gt; の有効な型に関連付けられません。</entry>
    <entry key="CFunctionFunctionPointerError">C Function ブロック ''{1}'' 内の関数ポインター ''{0}'' はサポートされていません。</entry>
    <entry key="StaticDeclaration"> C Function ブロック ''{1}'' 内での静的変数 {0} の宣言は許可されていません。端子仕様内でブロックのスコープを 'Persistent' として宣言してください。</entry>
    <entry key="DuplicateDeclaration"> 変数 {0} が複数の場所で宣言されています。C Function ブロック ''{1}'' 上または C コード上で、削除または名前の変更を行ってください。</entry>
    <entry key="WritingToInputVar"> C Function ブロック ''{1}'' 内の読み取り専用入力またはパラメーター シンボル ''{0}'' に書き込んでいます。</entry>
    <entry key="ArgumentNameConflict"> Another symbol with name ''{0}'' already exists in the {2} ''{1}''. Select a different name for your new symbol. </entry>
    <entry key="CFunctionInvalidAccessToArraySymbol"> C Function ブロック ''{1}'' 内の配列の型のシンボル ''{0}'' へのアクセスが無効です。 </entry>
    <entry key="CFunctionReadOnlyAddressEscaping"> C Function ブロック ''{1}'' では、読み取り専用の入力またはパラメーター シンボル ''{0}'' のアドレスを、"const" 修飾子の付いていないポインター ターゲットの型に割り当てることは推奨されておらず、コード生成時にビルド エラーが発生する原因となる可能性があります。</entry>
    <entry key="CFunctionProhibitedConstantAddress"> C Function ブロック ''{1}'' では、定数シンボル ''{0}'' のアドレスへの書き込みまたはアドレスの取得は許可されていません。 </entry>
    <entry key="SymbolTableBlockInvalidArgumentName"> ブロック ''{1}'' のシンボル ''{0}'' は有効な変数名ではありません。 </entry>
    <entry key="CFunctionBlockModelColumnMajorityMismatch"> C Function ブロック ''{0}'' は行優先の構成になっており、列優先のコード生成をサポートしません。 </entry>
    <entry key="CFunctionBlockModelRowMajorityMismatch"> C Function ブロック ''{0}'' は列優先の構成になっており、行優先のコード生成をサポートしません。 </entry>
    <entry key="CFunctionBlockInvalidArgumentType"> データ型 ''{0}'' が無効です。 </entry>
    <entry key="SymbolTableBlockOutputArgSizeNotSpecified"> 継承されたサイズ "-1" は、出力シンボルについてサポートされていません。{2} ''{1}'' 用に出力シンボル ''{0}'' の正確なサイズを指定してください </entry>
    <entry key="SymbolTableBlockCodeParsingTypeFailed">シンボル ''{1}'' の string 型 ''{0}'' の解析が、{3} ''{2}'' 内で失敗しました。</entry>
    <entry key="CFunctionIntrinsicMismatchedInputs">C Function ブロック ''{1}'' 内の ''{0}'' への入力が一致しません。関数 ''{0}'' は [{2, number, integer}] 個の入力を取りますが、[{3, number, integer}] 個の入力が見つかりました。</entry>
    <entry key="CFunctionUnsupportedLibraryFunctionCall">Error with unsupported call to function ''{0}'' in C Function block ''{1}''. Calling C library functions directly in C Function block is not supported. To see a list of supported Simulink library functions in C Function block, view the &lt;a href="matlab:doc('c function')"&gt;documentation&lt;/a&gt;.</entry>
    <entry key="CFunctionFunctionNotFound">宣言されていない関数 ''{0}'' が C Function ブロック ''{1}'' に指定されています。関数 ''{0}'' は、カスタム コードのソース ファイルまたはライブラリ ファイルで未定義であるため、フィルターで除外される可能性があります。</entry>
    <entry key="CFunctionVariableNotFound">宣言されていない変数 ''{0}'' が C Function ブロック ''{1}'' に指定されています。変数 ''{0}'' は、カスタム コードのソース ファイルまたはライブラリ ファイルで未定義であるため、フィルターで除外される可能性があります。</entry>
    <entry key="CFunctionBlockPassByRefOutputDirectPass">C Function ブロック ''{1}'' 内で関数 ''{0}'' を呼び出せません。関数の出力を参照として使用することはサポートされていません。</entry>
    <entry key="CFunctionBlockUnsupportedFcnCalled">C Function ブロック ''{1}'' から関数 ''{0}'' を呼び出せません。関数が C Function ブロックでサポートされていないタイプであるためです。 </entry>
    <entry key="CFunctionBlockOverloadedFcnCalled">C Function ブロック ''{1}'' からオーバーロードされた関数 ''{0}'' を呼び出せません。 </entry>
    <entry key="CFunctionIntrinsicTypeVariantUnsupported">C Function ブロック ''{2}'' で指定されている ''{0}'' の呼び出しはサポートされていません。代わりに ''{1}'' を使用してください。</entry>
    <entry key="CFunctionInvalidAdditionalType">C Function ブロック ''{2}'' で、''{0}'' を ''{1}'' の有効なタイプに解決できません。</entry>
    <entry key="SymbolTableBlockInvalidDimensionInInputDims">{2} ''{1}'' 内でシンボル ''{0}'' のサイズの判定中にエラーが発生しました。入力シンボルまたは inputoutput シンボルの次元には、継承されたサイズ "-1" または正確なサイズのみを指定できます。</entry>
    <entry key="SymbolTableBlockInvalidDimensionInOutputDims">{2} ''{1}'' 内でシンボル ''{0}'' のサイズの判定中にエラーが発生しました。出力シンボルの次元には、正確なサイズまたは size() 式のみを指定できます。</entry>
    <entry key="SymbolTableBlockInvalidDimensionInParameterDims">{2} ''{1}'' 内でシンボル ''{0}'' のサイズの判定中にエラーが発生しました。パラメーター シンボルの次元には、継承されたサイズ "-1" または正確なサイズのみを指定できます。</entry>
    <entry key="SymbolTableBlockInvalidDimensionInPersistentDims">{2} ''{1}'' 内でシンボル ''{0}'' のサイズの判定中にエラーが発生しました。永続シンボルの次元には、正の整数のみを指定できます。</entry>
    <entry key="SymbolTableBlockEmptySizeFcnInArgDims">{2} ''{1}'' 内のシンボル ''{0}'' のサイズには、空を指定できません。</entry>
    <entry key="CFunctionBlockMatrixSymbol">C Function ブロック ''{1}'' 内のシンボル ''{0}'' は、行列にすることも行列を含めることもできません。C Function ブロックでは、スカラーおよびベクトルのシンボルのみがサポートされています。</entry>
    <entry key="CFunctionBlockMatrixVar">C Function ブロック ''{1}'' 内のローカル変数 ''{0}'' は、行列にすることも行列を含めることもできません。C Function ブロックでは、ベクトル変数のみがサポートされています。</entry>
    <entry key="CFunctionMemcpyNDUnsupported">行列または多次元配列を memcpy または memset に渡すことは、C Function ブロック ''{0}'' でサポートされていません。</entry>
    <entry key="CFunctionAliasTypeMismatch">シンボル テーブルで指定されたシンボル ''{0}'' のエイリアス型が、解析された C Function ブロック ''{1}'' のエイリアス typedef と一致しません。[コンフィギュレーション パラメーター] &gt; [シミュレーション ターゲット] ペインで ''{2}'' の型定義を確認してください。</entry>
    <entry key="CFunctionBlockMatrixCustomCodeVar">C Function ブロック ''{1}'' 内で使用されているカスタム コード変数 ''{0}'' は、行列にすることも行列を含めることもできません。C Function ブロックでは、ベクトルのカスタム コード変数のみがサポートされています。</entry>
    <entry key="SymbolTableBlockMatrixPersistent">{2} ''{1}'' 内のシンボル ''{0}'' を行列にすることはできません。{2} の 'Persistent' スコープでは、スカラーまたはベクトルのみがサポートされています。</entry>
    <entry key="SymbolTableBlockOpaquePtrMustBeScalar">{3} ''{1}'' 内のシンボル ''{0}'' のサイズは '1' でなければなりません。'Persistent' スコープでタイプが ''{2}'' のシンボルでは、スカラーのみがサポートされています。</entry>
    <entry key="SymbolTableBlockOpaquePtrNotAllowed">{3} ''{1}'' 内のシンボル ''{0}'' のタイプを ''{2}'' にすることはできません。'Persistent' スコープのシンボルのみ、タイプを ''{2}'' にすることができます。</entry>
    <entry key="SymbolTableBlockStringTypeNotAllowed">{2} ''{1}'' 内のシンボル ''{0}'' の型を Simulink の string にすることはできません。'Parameter' スコープは Simulink の string をサポートしません。</entry>
    <entry key="CFunctionBlockMatrixIndexOutOfRange">C Function ブロック ''{4}'' 内の行列 ''{1}'' の添字 [{0, number, integer}] が範囲外です。有効な添字範囲は {2, number, integer}...{3, number, integer} です。</entry>
    <entry key="CFunctionBlockMatrixElementAddressEscape">C Function ブロック ''{0}'' では、行列要素のアドレスを取得することはサポートされていません。ブロック コードを修正して、行列要素のアドレスの取得を避けてください。</entry>
    <entry key="CFunctionBlockMatrixElementAddressEscapeToCustomCodeCall">C Function ブロック ''{0}'' では、行列の最初の要素以外のアドレスを外部関数へ渡すことはサポートされていません。ブロック コードを修正して、行列の最初の要素のアドレスのみを外部関数に渡してください。</entry>
    <entry key="CFunctionBlockMatrixPartialAccess">C Function ブロック ''{0}'' では、行列への部分的アクセスは許可されていません。C Function ブロックでは、行列の要素へのアクセスのみがサポートされています。</entry>
    <entry key="CFunctionBlockUnionFieldAccess">C Function ブロック ''{0}'' では、共用体のフィールドへのアクセスは許可されていません。</entry>
    <entry key="CFunctionBlockFunctionMajorityNotSpecifiedInRowMajorCodegen">C Function ブロック ''{0}'' は、関数配列のレイアウトが [指定なし] であるカスタム コード関数 ''{1}'' を呼び出しています。[コンフィギュレーション パラメーター] &gt; [シミュレーション ターゲット] ペインで、''{1}'' の関数配列のレイアウトを指定してください。</entry>
    <entry key="CFunctionBlockRowMajorFunctionWithStructInColumnMajorCodegen">C Function ブロック ''{0}'' は、非スカラー フィールドを入力または出力とする struct をもつ、行優先のカスタム コード関数 ''{1}'' を呼び出します。非スカラー フィールドの入力または出力を含む struct をもつ行優先のカスタム コード関数を呼び出すことは、列優先のコード生成ではサポートされていません。</entry>
    <entry key="CFunctionBlockUninitializedlocalVarUsage">C Function ブロック ''{1}'' 内のローカル変数 ''{0}'' が、初期化される前に使用されました。 </entry>
    <entry key="FixedPointNumBitMismatch">C Function ブロック ''{2}'' の関数 ''{1}'' に渡された引数 ''{0, number, integer}'' で固定小数点データ型が一致しません。</entry>
    <entry key="CFunctionBlockDiagSourceLocation">発生した行:\n\t{0}</entry>
    <entry key="CFunctionIncompatiblePointerArgument">C Function ブロック ''{2}'' 内の外部 C 関数 ''{1}'' の引数 {0, number, integer} が、互換性のないポインター型から渡されています。ポインター引数が外部 C 関数のパラメーターの型と互換性があることを確認してください。</entry>
    <entry key="CFunctionBlockPointerConversionNotSupported">C Function ブロック ''{0}'' では、ポインター型と非ポインター型の間の変換がサポートされていません。ブロック コードを修正して、ポインター型と非ポインター型の間の暗黙的または明示的な変換を避けてください。</entry>
    <entry key="CFunctionVariadicFunctionNotSupported">C Function ブロック ''{1}'' 内の外部関数 ''{0}'' は可変個引数関数です。C Function ブロック内では、可変個引数関数の呼び出しはサポートされていません。</entry>
    <entry key="SymbolTableBlockScaledDoubleNotSupported">{2} ''{1}'' 内のシンボル ''{0}'' に指定された型が無効です。スケーリングされた double 型は {2} ではサポートされていません。</entry>
    <entry key="IncludeFoundInScript"> C Function ブロック ''{0}'' 内に '#include' 命令が見つかりました。インクルードはコンフィギュレーション パラメーターでのみ追加できます。\n{1} </entry>
    <entry key="InputVarUsedInMethod"> C Function ブロック ''{1}'' 内の開始コード、InitializeConditions コードまたは終了コードでの、入力シンボルまたは InputOutput シンボル ''{0}'' の使い方によるエラーです。入力シンボルおよび InputOutput シンボルは、''出力コード'' 内からのみアクセスできます。 </entry>
    <entry key="CFunctionBlockUnsupportedVarTypes">C Function ブロック ''{1}'' のローカル変数またはグローバル変数 ''{0}'' のデータ型はサポートされていません。</entry>
    <entry key="CFunctionBlockLocalVarOfStructWithNDTypeNotSupported">ローカル変数 ''{0}'' は、行列型のフィールドを含む struct です。変数の型がカスタム コード内で定義されている場合、行列型をもつ struct のローカル変数は C Function ブロック ''{1}'' ではサポートされません。</entry>
    <entry key="ClassDefinitionInScript">C Function ブロック ''{1}'' 内でのクラス タイプ ''{0}'' の定義はサポートされていません。</entry>
    <entry key="SymbolTableBlockUnsupportedParameterComplex">{2} ''{1}'' 内のパラメーター シンボル ''{0}'' は複素数として評価されました。複素数は {2} ではサポートされていません。</entry>
    <entry key="SymbolTableBlockMultiWordNotSupported">C Function ブロック {3} ''{1}'' 内のシンボル ''{0}'' は、現在のターゲットでマルチワード型です。現在のターゲットの {3} では、最大語長が {2,number,integer} の整数型のみを使用できます。</entry>
    <entry key="ConstantEvalFailed">''{2}'' のシンボル ''{1}'' の 'Constant' 式 ''{0}'' を評価中にエラーが発生しました。''{0}'' の 'Constant' 指定の構文エラーまたは未定義の変数名をチェックしてください。'Constant' 式は組み込みの数値スカラーとして評価されなければなりません。</entry>
    <entry key="SizeComputationConstantNotScalar">式 ''{1}'' のシンボル ''{0}'' の評価中にエラーが発生しました。サイズ式をもつ定数スコープ値は組み込みの数値スカラーとして評価されなければなりません。</entry>
    <entry key="SizeComputationConstantOutOfRange">式 ''{1}'' のシンボル ''{0}'' の評価中にエラーが発生しました。サイズ式をもつ定数スコープ値は {2, number, integer} から {3, number, integer} までの整数として評価される必要があります。</entry>
    <entry key="SizeComputationConstantEvalFailedInBlock">''{0}'' の 'Constant' 値の評価中にエラーが発生しました。'Constant' 式の構文エラーをチェックしてください。サイズ式では、入力のサイズのみを使用できます。 </entry>
    <entry key="SizeComputationConstantEvalFailed">'Constant' 式の評価に失敗しました。''{0}'' の 'Constant' 指定の構文エラーをチェックしてください。</entry>
    <entry key="SizeComputationConstantEvalFailedGeneric">'Constant' 式の評価に失敗しました。'Constant' 指定の構文エラーまたは型の不一致をチェックしてください。</entry>
    <entry key="ConstantSizeFcnIncorrectInputs">引数 ''{0}'' の 'Constant' 値の評価中にエラーが発生しました。size() 式は 1 つまたは 2 つの引数のみを受け入れます。</entry>
    <entry key="ConstantSizeFcnInvalidSymbolName">引数 ''{0}'' の 'Constant' 値の評価中にエラーが発生しました。size() 式の最初の引数は入力を参照しなければなりません。</entry>
    <entry key="ConstantSizeFcnOnlyInputInOutputOrParameter">''{0}'' は ''{1}'' の 'Constant' 値の指定に使用できません。パラメーターの値、または入力のサイズ式を指定してください。定数スコープ値は組み込みの数値スカラーとして評価されなければなりません。</entry>
    <entry key="DataMustBeInConstantSizeFcn">引数 ''{0}'' の 'Constant' 値の評価中にエラーが発生しました。size() 式では ''{1}'' を使用しなければなりません。</entry>
    <entry key="ConstantSizeFcnInvalidExpression">引数 ''{0}'' の 'Constant' 値の評価中にエラーが発生しました。size() 式の 2 番目の入力は次元でなければなりません。</entry>
    <entry key="CFunctionUseCustomCodeFunctionWithImportCustomCodeOff">C Function ブロック ''{0}'' はカスタム コード関数を呼び出します。''{1}'' を有効にする必要があります。</entry>
    <entry key="ContinuousSampleTimeNotAllowedSymbolTable">{1} "{0}" は永続変数をもつため、連続サンプル時間をサポートしません。[サンプル時間] ブロック パラメーターを離散値または固定マイナー ステップ値に設定してください。</entry>
    <entry key="CFunctionBlockCodeParsingWarnings">C Function ブロック ''{1}'' の {0} の解析で、次の警告メッセージが生成されました:\n</entry>
    <entry key="CFunctionBlockUnsupportBusOfSymbolicDimsInitCodegen">C Function ブロック ''{0}'' の永続シンボルまたは出力シンボル ''{1}'' がシンボリック次元の要素を含むバス型です。これは組み込みリアルタイム ターゲットを使用した C Function ブロックのコード生成ではサポートされていません。シンボリック次元を無効にするには、[コンフィギュレーション パラメーター] ダイアログ ボックスで [シンボリック次元指定の許可] チェックボックスを検索してオフにします。</entry>
    <entry key="InCompatiableSimulinkAndCustomCodeTypes"> C Function ブロック ''{2}'' にあるシンボル ''{1}'' の Simulink データ型 ''{0}'' は、カスタム コードの型 ''{3}'' と矛盾しています。カスタム コードのデータ型は、等価な Simulink データ型と一致しなければなりません。</entry>
    <entry key="PortVarAddressEscaping">struct 型のシンボル ''{0}'' のアドレスをとることは、C Function ブロック ''{1}'' でサポートされていません。</entry>
    <entry key="AddressEscapeForTypeContainingND">C Function ブロック ''{0}'' 内では、多次元配列のアドレスを変数に代入することはサポートされません。</entry>
    <entry key="CFcnBlkBusWithSLString">Simulink の string を含むバスは、C Function ブロック ''{1}'' のシンボル ''{0}'' ではサポートされません。</entry>
    <entry key="NonExtendedASCIIString">string にサポートされていない文字が含まれています。拡張 ASCII 文字 (ISO-8859-1) のみがサポートされています。</entry>
    <entry key="ClassTypeNotSupported">C Function ブロック ''{2}'' の [シンボル] テーブルで、シンボル ''{1}'' に対して無効なタイプ ''{0}'' が指定されています。C Function ブロックでは C++ クラス タイプはサポートされません。</entry>
    <entry key="ClassTypeNotFound">C Function ブロック ''{2}'' の [シンボル] テーブルで、シンボル ''{1}'' に対して宣言されていない、またはサポートされていないクラス タイプ ''{0}'' が指定されています。[コンフィギュレーション パラメーター] &gt; [シミュレーション ターゲット] ペインに含まれているカスタム コードを確認してください。</entry>
    <entry key="ClassTypeNotInPersistentScope">C Function ブロック ''{2}'' の [シンボル] テーブルで、シンボル ''{1}'' に対して無効なクラス タイプ ''{0}'' が指定されています。クラス タイプをもつことができるのは永続シンボルのみです。</entry>
    <entry key="AccessingNonPublicClassData">C Function ブロック ''{2}'' で、クラス ''{1}'' のフィールド ''{0}'' にアクセス中にエラーが発生しました。パブリック クラス メンバーのみにアクセスできます。</entry>
    <entry key="AccessingClassDataOfPrivateType">C Function ブロック ''{2}'' で、クラス ''{1}'' のフィールド ''{0}'' にアクセス中にエラーが発生しました。プライベート タイプまたは保護されたタイプのクラス メンバーにはアクセスできません。</entry>
    <entry key="OpOverloadDisallowed">オーバーロード演算子 ''{0}'' の呼び出しは、C Function ブロック ''{1}'' 内ではサポートされていません。</entry>
    <entry key="ExplicitDestructorCallError"> C Function ブロック ''{1}'' でクラス ''{0}'' のデストラクターを明示的に呼び出すことはサポートされていません。 </entry>
    <entry key="CFunctionBlockClassPassedByValueOrReturnByRef"> C Function ブロック ''{0}'' は、値によってクラスを取り込む、または値や参照によってクラスを返すカスタム コード メソッド ''{1}'' を呼び出します。値によってクラス インスタンスを渡すことや、値または参照によってクラス インスタンスを返すことは、C Function ブロックではサポートされていません。</entry>
    <entry key="CFunctionBlockFcnReturnsPtr2ND"> C Function ブロック ''{0}'' は、多次元配列へのポインターを返すカスタム コード関数 ''{1}'' を呼び出します。C Function ブロックでは、多次元配列へのポインターを返すことはサポートされていません。</entry>
    <entry key="CFunctionBlockUnsupportedArg"> C Function ブロック ''{0}'' は、サポートされていない引数を取り込むカスタム コード メソッド ''{1}'' を呼び出します。 </entry>
    <entry key="NoMatchingConstructor">C Function ブロック ''{3}'' の ''Class: {1}'' タイプのシンボル ''{0}'' に対して、入力引数 ''{2}'' に一致するパブリック コンストラクターが見つかりません</entry>
    <entry key="ConstructorResolutionMessage">コンストラクターの解決が失敗し、次のメッセージが表示されました。\n {0}</entry>
    <entry key="AbstractClassError">C Function ブロック ''{2}'' で使用されている抽象クラス タイプ ''{1}'' のシンボル ''{0}'' をインスタンス化できません。 </entry>
    <entry key="StaticMemberAccessUnsupported">C Function ブロック ''{1}'' で、静的クラス データ メンバー ''{0}'' のアクセスが無効です。静的クラス データ メンバーへのアクセスはサポートされていません。</entry>
    <entry key="CFunctionUnsupportedClassAccess">C Function ブロック ''{1}'' でのクラス ''{0}'' へのアクセスはサポートされていません。</entry>
    <entry key="TemplateClassSymbolError">C Function ブロック ''{2}'' で使用されているテンプレート パラメーター ''{1}'' をもつクラス タイプのシンボル ''{0}'' をインスタンス化できません。 </entry>
    <entry key="PrivateConstructorError">クラス タイプ ''{2}'' に有効なパブリック コンストラクターがないため、C Function ブロック ''{1}'' で使用されているシンボル ''{0}'' をインスタンス化できません。</entry>
    <entry key="PrivateDestructorError"> クラス タイプ ''{2}'' に有効なパブリック デストラクターがないため、C Function ブロック ''{1}'' で使用されているシンボル ''{0}'' を破棄できません。 </entry>
    <entry key="InvalidVariableInConstructorArgs">C Function ブロック ''{2}'' のシンボル ''{1}'' のクラス コンストラクター引数に無効な変数 ''{0}'' が指定されています。クラス コンストラクターの引数のスコープは [Parameter] または [Constant] でなければなりません。</entry>
    <entry key="FcnCalledInConstructorArgs">C Function ブロック ''{2}'' のシンボル ''{1}'' のクラス コンストラクター引数に無効な関数呼び出し ''{0}'' が指定されています。コンストラクター引数は、他の関数を呼び出すことができません。</entry>
    <entry key="IllegalConstructorArgument">C Function ブロック ''{2}'' のシンボル ''{1}'' のクラス コンストラクター引数に無効な式 ''{0}'' が指定されています。</entry>
    <entry key="CFunctionBlockIncorrectRTWLangForCPP">コードの解析には C++ が使用されるため、C Function ブロック ''{0}'' に指定されているカスタム コードを使用するコード生成の設定が無効です。[モデル コンフィギュレーション パラメーター] で、''[コード生成] &gt; [言語]'' を [C++] に設定します。 &lt;actions exclusiveFixIts="yes"&gt; &lt;action type="suggestion"&gt; &lt;cmd&gt;load_system(''{1}'');configset.highlightParameter(''{1}'','TargetLang');&lt;/cmd&gt; &lt;txt&gt;コード生成の言語設定を [C++] に変更する。&lt;/txt&gt; &lt;/action&gt; &lt;/actions&gt;
    </entry>
    <entry key="CFunctionBlockIncorrectSimLangForCPP">コードの解析には C++ が使用されるため、C Function ブロック ''{0}'' に指定されているカスタム コードを使用するシミュレーションの設定が無効です。[モデル コンフィギュレーション パラメーター] で、''[シミュレーション ターゲット] &gt; [言語]'' を [C++] に設定します。 &lt;actions exclusiveFixIts="yes"&gt; &lt;action type="suggestion"&gt; &lt;cmd&gt;load_system(''{1}'');configset.highlightParameter(''{1}'','SimTargetLang');&lt;/cmd&gt; &lt;txt&gt;シミュレーションのターゲット言語設定を [C++] に変更する。&lt;/txt&gt; &lt;/action&gt; &lt;/actions&gt;
    </entry>
    <entry key="CFcnLocalVarOfClassType">C Function ブロック ''{1}'' では、クラス タイプのローカル変数 ''{0}'' はサポートされていません。</entry>
    <entry key="CopyAssignmentDisallowed">C Function ブロック ''{0}'' では、クラス シンボルへの割り当てはサポートされていません。</entry>
    <entry key="NDDataMemberAccessDisallowed">C Function ブロック ''{2}'' で、クラス ''{1}'' のフィールド ''{0}'' にアクセス中にエラーが発生しました。行列クラス メンバーへのアクセスはサポートされていません。</entry>
    <entry key="DisallowPointerToClassArrayDataMemberAccess">C Function ブロック ''{2}'' で、クラス ''{1}'' のフィールド ''{0}'' にアクセスできません。クラス配列へのポインター型のデータ メンバーへのアクセスはサポートされていません。</entry>
    <entry key="DisallowDirectClassArrayDataMemberAccess">C Function ブロック ''{2}'' で、クラス ''{1}'' のフィールド ''{0}'' に直接アクセスできません。インデックスを付けずに型クラス配列のデータ メンバーにアクセスすることはサポートされていません。</entry>
    <entry key="CFunctionBlockGlobalClassTypeUnsupported">C Function ブロック ''{1}'' で、C++ クラス タイプのカスタム コードのグローバル変数 {0} へのアクセスはサポートされていません。</entry>
    <entry key="CFunctionBlockInvalidInitialization">C Function ブロック ''{1}'' のシンボル "{0}" を初期化できません。[シンボル] テーブルの初期化は、C++ クラス タイプの [Persistent] シンボルに対してのみサポートされます。</entry>
    <entry key="ColMajorMethodConst">''{0}'' の関数配列のレイアウト設定が無効です。クラス メソッドおよびコンストラクターに対する関数配列のレイアウト設定は [行優先] または [任意] でなければなりません。</entry>
    <entry key="ClassArgumentToColMajorFcn">列優先の関数 ''{0}'' にクラス オブジェクトを渡すことはサポートされていません。</entry>
    <entry key="MatchingMethodNotFoundInCustomCode">C Function ブロック ''{0}'' の内部エラー: 関数呼び出し ''{1}'' のカスタム コード内で一致するオーバーロードされた関数が見つかりませんでした。このバグを MathWorks テクニカル サポートに報告してください。</entry>
    <entry key="CFunctionBlockUnsupportedLocalNestedClassType">C Function ブロック ''{1}'' では、入れ子形式のクラス タイプ ''{0}'' はサポートされていません。</entry>
    <entry key="CFunctionBlockSlError">C Function ブロック ''{2}'' のシミュレーション ''{1}'' のコードの行 {0, number, integer} でエラーが発生しました。\n{3}\n\n''{4}''</entry>
    <entry key="CFunctionBlockSlWarning">C Function ブロック ''{2}'' のシミュレーション ''{1}'' のコードの行 {0, number, integer} で警告が発生しました。\n{3}\n\n''{4}''</entry>
    <entry key="OOPUnsupportedClassDataMemberAccess">クラス ''{1}'' のデータ メンバー ''{0}'' にアクセスできません。別のプロセスでカスタム コードをシミュレートする場合、クラス タイプとクラス ベクトル タイプ以外のデータ メンバーへのアクセスはサポートされません。 </entry>
    <entry key="OOPUnsupportedClassMemberFunctionAccess">
    クラス ''{1}'' のメンバー関数 ''{0}'' を呼び出せません。別のプロセスでカスタム コードをシミュレートする場合、次の戻り値と関数の引数の型をもつメンバー関数へのアクセスはサポートされません。 &lt;ul&gt; &lt;li&gt; 戻り値の型: クラスへの非クラス ポインターとマルチレベルのポインター&lt;/li&gt; &lt;li&gt; 関数の引数の型: クラス タイプ、複素数型、および共用体型への void ポインター型、ポインターの配列、およびマルチレベルのポインター&lt;/li&gt; &lt;/ul&gt;</entry>
    <entry key="CFunctionBlockUINoSelectionForRemove">table の 1 行を選択して、シンボルを削除してください。</entry>
    <entry key="CFunctionBlockDialogText">カスタム C/C++ アルゴリズムを統合するコードを入力</entry>
    <entry key="CFunctionBlockDialogStatementDesc"> 実行する {0} を入力してください。 </entry>
    <entry key="CFunctionBlockDialogSimTabTitle">シミュレーション</entry>
    <entry key="CFunctionBlockUseSameCodeAsSimPrompt">シミュレーションと同じコードを使用</entry>
    <entry key="CFunctionBlockDialogWidgetCodegenCodeChkBoxToolTip">シミュレーションと同じコードおよびカスタム コード設定を使用するかどうかを指定</entry>
    <entry key="CFunctionBlockGenCodeAsIsPrompt">コードをそのまま生成</entry>
    <entry key="CFunctionBlockArrayLayout">配列のレイアウト:</entry>
    <entry key="CFunctionBlockLanguageLevel">言語サポート レベル:</entry>
    <entry key="CFunctionLanguageLevelManaged">C/C++ のサブセット (解析が有効)</entry>
    <entry key="CFunctionLanguageLevelFull">完全 (コードをそのまま使用)</entry>
    <entry key="CFunctionBlockDialogWidgetGenCodeAsIsChkBox">コードをそのまま生成 (最適化オフ)</entry>
    <entry key="CFunctionBlockDialogWidgetGenCodeAsIsToolTip">マクロ拡張などのパーサー ベースの最適化を行わずに、コードをそのままインライン化するかどうかを指定します。</entry>
    <entry key="CFunctionBlockDialogCodegenCodeTabTitle">コード生成</entry>
    <entry key="CFunctionBlockDialogcScriptName">出力</entry>
    <entry key="CFunctionBlockDialogstartScriptName">開始</entry>
    <entry key="CFunctionBlockDialogtermScriptName">終了</entry>
    <entry key="CFunctionBlockDialogAddButtonName">追加</entry>
    <entry key="CFunctionBlockDialogDeleteButtonName">削除</entry>
    <entry key="CFunctionBlockDialoginitScriptName">初期化条件</entry>
    <entry key="SimulinkInterfaceDialogOutputCodeDesc">シミュレーション中に各タイム ステップで実行される C コードを入力します。\nたとえば、"y = classObject.process(u);" とします。\ny、classObject および u は [シンボル] テーブルで定義します。</entry>
    <entry key="SimulinkInterfaceDialogInitCodeDesc">シミュレーション開始時に実行される C コードを入力します。\nたとえば、"classObject.initialize(param);" とします。\nclassObject および param は [シンボル] テーブルで定義します。</entry>
    <entry key="SimulinkInterfaceDialogTermCodeDesc">シミュレーション終了時に実行される C コードを入力します。\nたとえば、"classObject.cleanup();" とします。\nclassObject は [シンボル] テーブルで定義します。</entry>
    <entry key="DeterministicFunctionsDlgDescriptionTitle">説明</entry>
    <entry key="DeterministicFunctionsDlgDescription">確定的なカスタム コード関数を指定するには、追加ボタンと削除ボタンを使用します。</entry>
    <entry key="DeterministicFunctionsDlgTitle">カスタム コードの確定的な関数のリスト</entry>
    <entry key="DeterministicFunctionsDlgSSFcnNameColHeader">関数名</entry>
    <entry key="DeterministicFunctionsDlgAddButtonTooltip">確定的なカスタム コード関数を追加します。</entry>
    <entry key="DeterministicFunctionsDlgDeleteButtonTooltip">確定的なカスタム コード関数のリストから、選択した関数を削除します。</entry>
    <entry key="DeterministicFunctionsInvalidCharacterNames">Invalid characters in function name ''{0}''.Function names must be valid C identifiers</entry>
    <entry key="SymbolTableBlockAPIIncorrectPortIndex"> {4} ''{3}'' 内のシンボル ''{0}'' の端子番号は ''{1}'' と ''{2}'' の間の整数値でなければなりません。 </entry>
    <entry key="SymbolTableBlockAPIMethodInputIsNotString"> {2} ''{1}'' 内のメソッド ''{0}'' の入力は文字配列/string でなければなりません。 </entry>
    <entry key="SymbolTableBlockAPIMethodUnexpectedInputArgument"> ''{0}'' メソッドには入力は不要です。 </entry>
    <entry key="SymbolTableBlockAPIMethodUnexpectedOutputArgument"> ''{0}'' メソッドには出力は不要です。 </entry>
    <entry key="SymbolTableBlockAPIMethodLessThanTwoInputOnly"> ''{0}'' メソッドは、入力として最大 1 つのシンボル名をサポートしています。 </entry>
    <entry key="SymbolTableBlockAPIMethodInputNotFound"> {2} ''{1}'' 内のシンボル ''{0}'' は存在しません。 </entry>
    <entry key="SymbolTableBlockAPIMethodInputNumInvalid"> ''{0}'' メソッドには、入力としてシンボル名が 1 つのみ必要です。 </entry>
    <entry key="LockedSymbolTableBlock">{1} ''{0}'' を含むライブラリがロックされているため、SymbolSpec オブジェクトを変更できません。ブロックを変更するには、ライブラリのロックを解除してください。</entry>
    <entry key="LinkedSymbolTableBlock">現在 {1} ''{0}'' がライブラリにリンクされているため、SymbolSpec オブジェクトを変更できません。このブロックを変更するには、ライブラリからブロックを変更するか、リンクを切断してください。</entry>
    <entry key="ModelIsExecutingSymbolTableBlock">モデルの実行中に {1} ''{0}'' の SymbolSpec オブジェクトを変更することはできません。</entry>
    <entry key="DeletedSymbolTableBlock">ブロックが削除されたため、SymbolSpec オブジェクトを取得できません。</entry>
    <entry key="CFunctionBlockIndexReadOnly">C Function ブロック ''{0}'' 内の 'Persistent' スコープと 'Constant' スコープの端子番号は読み取り専用です。</entry>
    <entry key="PythonFunctionBlockIndexReadOnly">Python Code ブロック ''{0}'' 内の 'Persistent' スコープの端子番号は読み取り専用です。</entry>
    <entry key="CFunctionBlockAPIArrayLayoutReadOnly">C Function ブロック ''{1}'' の 'LanguageLevel' が 'subset' の場合、ブロック パラメーター ''{0}'' の値を変更できません。</entry>
    <entry key="CFunctionBlockAPILangLevelReadOnly">C Function ブロック ''{1}'' の 'CustomCodeSettingsLocation' が 'Model Configuration Parameters' の場合、ブロック パラメーター ''{0}'' の値を変更できません。</entry>
    <entry key="CFunctionBlockAPISizeReadOnly">C Function ブロック ''{0}'' 内の 'Constant' シンボルと 'Persistent' VoidPointer シンボルの [サイズ] は読み取り専用です。</entry>
    <entry key="PythonFunctionBlockAPISizeReadOnly">Python Function ブロック ''{0}'' 内の 'Persistent' PythonObject シンボルのサイズは読み取り専用です。</entry>
    <entry key="CFunctionBlockAPIGenCodeAsIsReadOnly">Cannot modify the value for block parameter ''{0}'' when 'Use same code as Simulation' is off for C Function block ''{1}''.</entry>
    <entry key="CFunctionBlockAPICodegenCodeReadOnly">Cannot modify the value for block parameter ''{0}'' when 'Use same code as Simulation' is on for C Function block ''{1}''.</entry>
    <entry key="MajorityDlgDescriptionTitle">説明</entry>
    <entry key="MajorityDlgDescription">カスタム コード関数の配列レイアウトの例外を指定するには、追加ボタンと削除ボタンを使用します。</entry>
    <entry key="MajorityDlgTitle">カスタム コード関数の配列のレイアウト</entry>
    <entry key="MajorityDlgSSFcnNameColHeader">関数名</entry>
    <entry key="MajorityDlgSSSettingColHeader">配列のレイアウト</entry>
    <entry key="MajorityDlgAddButtonTooltip">関数配列レイアウトの例外をもつカスタム コード関数を追加します。</entry>
    <entry key="MajorityDlgDeleteButtonTooltip">選択した関数配列のレイアウトの設定を削除します。</entry>
    <entry key="FunctionArrayLayoutWrongFormat">
  データ型が無効です。パラメーター 'CustomCodeFunctionArrayLayout' は、'FunctionName' フィールドと 'ArrayLayout' フィールドをもつ 1 行 n 列の構造体でなければなりません。
</entry>
    <entry key="FunctionArrayLayoutEmptyNames">関数名が無効です。関数名を空にしてはなりません。</entry>
    <entry key="FunctionArrayLayoutNamesWithWhitespace">関数名 {0} が無効です。関数名に空白文字が含まれていてはなりません。</entry>
    <entry key="FunctionArrayLayoutDuplicateNames">関数名 {0} が無効です。重複した関数名はサポートされていません。</entry>
    <entry key="FunctionArrayLayoutInvalidSetting">
  関数配列のレイアウトの設定が無効です。関数配列のレイアウトの設定は、[列優先]、[行優先]、または [任意] でなければなりません。
</entry>
    <entry key="FunctionMajorityNotSpecifiedInRowMajorCodegen">C Caller ブロック ''{0}'' は、関数配列のレイアウトが [指定なし] であるカスタム コード関数 ''{1}'' を呼び出しています。[コンフィギュレーション パラメーター] &gt; [シミュレーション ターゲット] ペインで、''{1}'' の関数配列のレイアウトを指定してください。</entry>
    <entry key="FunctionArrayLayoutIgnored">カスタム コード関数 ''{0}'' に、すべてスカラーの入力/出力引数があります。カスタム コード関数 ''{0}'' の配列レイアウト設定は無視されます。この警告メッセージを削除するには、[コンフィギュレーション パラメーター] &gt; [シミュレーション ターゲット] &gt; [関数による例外...] から、''{0}'' の配列レイアウト設定を削除します</entry>
    <entry key="FunctionArrayLayoutOverrideForSNDF">行列フィールドをもつ struct を入力引数/出力引数として含むカスタム コード関数 ''{0}'' の配列レイアウトは [行優先] である必要があります。カスタム コード関数 ''{0}'' の配列レイアウト設定 ''{1}'' は無視されます。この警告メッセージを削除するには、[コンフィギュレーション パラメーター] &gt; [シミュレーション ターゲット] &gt; [関数による例外...] から、''{0}'' の配列レイアウト設定を [行優先] に指定します</entry>
    <entry key="FunctionArrayLayoutOverrideForPtrToArr">行列へのポインターを入力引数として含むカスタム コード関数 ''{0}'' は、配列のレイアウトが [行優先] でなければなりません。カスタム コード関数 ''{0}'' の配列レイアウト設定 ''{1}'' は無視されます。この警告メッセージを削除するには、[コンフィギュレーション パラメーター] &gt; [シミュレーション ターゲット] &gt; [関数による例外...] から、''{0}'' の配列レイアウト設定を [行優先] に指定します</entry>
    <entry key="BlockUsedInModelReferenceSimTargetCustomCodeUnchecked">{3} ''{1}'' を無効にしたアクセラレータ モードでシミュレートできない参照モデルで、''{0}'' が使用されています。 &lt;actions exclusiveFixIts="yes"&gt;&lt;action type="suggestion"&gt;&lt;cmd&gt;open_system(''{2}'');configset.highlightParameter(''{2}'','SupportModelReferenceSimTargetCustomCode');&lt;/cmd&gt;&lt;txt&gt;モデル ''{2}'' で ''{1}'' を有効にしてモデルを再保存する。&lt;/txt&gt;&lt;/action&gt;&lt;/actions&gt;
        
    </entry>
    <entry key="UnrecognizedFileFormat">SLXConfigSetAdapter を介して読み取ることができるのは .slx ファイル形式のコンフィギュレーション セットのみです</entry>
    <entry key="FileNotFound">指定された場所にはファイルはありません</entry>
    <entry key="NoWriteForFunctions">コンフィギュレーション セットの関数では書き込み操作はサポートされていません。</entry>
    <entry key="SegVOccurredInOOP">ID ''{0}'' の別のプロセスでカスタム コードをシミュレーション中に、セグメンテーション違反が発生しました。</entry>
    <entry key="ErrorCauseSegVInOOP">\nセグメンテーション違反が発生しました。これは、プログラムに割り当てられているメモリ外での読み取りや書き込み、または読み取り専用のメモリへの書き込みを行おうとしたときに発生する可能性があります。</entry>
    <entry key="ErrorCauseAbortInOOP">\n中止されました。これは、プログラム呼び出しが中断したときに発生する可能性があります。</entry>
    <entry key="ErrorCauseIllegalInstructionInOOP">\n無効な命令が検出されました。これは、プログラムがガベージまたは特権命令を実行しようとしたときに発生する可能性があります。</entry>
    <entry key="ErrorCauseArithmeticErrorInOOP">\n致命的な算術エラーが発生しました。一般的な算術エラーには、ゼロ除算やオーバーフローが含まれます。</entry>
    <entry key="ProcessCrashedInOOP">Process with ID ''{0}'' crashed during simulating custom code in a separate process. {1}</entry>
    <entry key="SegVStackTraceInfo">ID ''{0}'' のプロセスがクラッシュしました。クラッシュ時のスタック トレース情報:\n{1}</entry>
    <entry key="ComplexParamNotSupportedInOOP">C Caller ブロック ''{1}'' のパラメーター ''{0}'' は複素数として評価されます。C Caller ブロックに対するプロセス外の実行は実数パラメーターのみをサポートします。</entry>
    <entry key="CustomTypeUnsupportedInOOP">カスタム関数 ''{0}'' にはカスタム データ型をもつ引数が含まれます。別のプロセスでカスタム コードをシミュレートする際、カスタム データ型はサポートされません。</entry>
    <entry key="ComplexTypeUnsupportedInOOP">カスタム関数 ''{0}'' には複素数の引数が含まれます。別のプロセスでカスタム コードをシミュレートする際、複素数の引数はサポートされません。</entry>
    <entry key="OOPExeBuildFailure">モデル ''{0}'' に関連付けられているカスタム コードについて、別の実行可能ファイルの生成時にエラーが発生しました。</entry>
    <entry key="FcnNotFoundInCustomCode">''{0}'' がカスタム コードの実行可能ファイル ''{1}'' で見つかりません。</entry>
    <entry key="LoadLibFailure">ライブラリ ''{0}'' を読み込めません。</entry>
    <entry key="MemoryInconsistentBetweenSimulinkAndOOP">ID ''{1}'' のプロセスにあるカスタム関数 ''{0}'' を呼び出す際に、矛盾したデータが検出されました。これは、カスタム コードの範囲外インデックスが原因となっている可能性があります。</entry>
    <entry key="UnKnownResponseFromSeparateProcess">別のプロセスでカスタム コードをシミュレーション中に、プロセスから不明な応答を受信しました。</entry>
    <entry key="LibNotRegisteredWithOOPForModel">別のプロセスでカスタム コードをシミュレートする場合、モデル ''{0}'' に関連付けられたカスタム コード ライブラリは登録されません。</entry>
    <entry key="LibNotRegisteredWithOOPForBlock">別のプロセスでカスタム コードをシミュレートする場合、ブロック ''{0}'' に関連付けられたカスタム コード ライブラリは登録されません。</entry>
    <entry key="LibNotRegisteredWithOOP">別のプロセスでカスタム コードをシミュレートする場合、ID ''{0}'' のカスタム コード ライブラリは登録されません。</entry>
    <entry key="ProcessNotRunning">ID ''{0}'' のプロセスが実行されていません。</entry>
    <entry key="CrashOccurredInOOP">別のプロセスでカスタム コードをシミュレーション中に、ID ''{0}'' のプロセスがクラッシュしました。</entry>
    <entry key="IncompatibleEnumTypeInOOP">別のプロセスでカスタム コードをシミュレートする場合、enum 型 ''{0}'' はサポートされません。すべての enum 型が桁落ちせずに ''int32'' に変換できなければなりません。</entry>
    <entry key="UnsupportedDataTypeError">別のプロセスでカスタム コードをシミュレートする場合、データ型 ''{0}'' はサポートされません。</entry>
    <entry key="BlockRunningInOOPModeMsg">ブロック ''{0}'' は ID ''{1}'' の別のプロセスを使用してデバッグ モードで実行中です。</entry>
    <entry key="InitTermCodeNotSupportedInOOP">モデル ''{0}'' に関連付けられているカスタム コード設定に初期化関数または終了関数、あるいはその両方が含まれています。このシナリオはプロセス外の実行でサポートされません。</entry>
    <entry key="LibMustBeLoaded">モデル ''{1}'' にカスタム コードをインポートするには、ライブラリ ''{0}'' を読み込まなければなりません。 </entry>
    <entry key="AtLeastOneLibraryMustBeLinked">モデル ''{0}'' は、インポートされるカスタム コードを含む少なくとも 1 つの Simulink ライブラリにリンクしていなければなりません。</entry>
    <entry key="MultipleLibrariesAreLinked">モデル ''{0}'' はインポートされるカスタム コードに対する複数の Simulink ライブラリ ''{1}'' にリンクしていますが、これは許可されません。</entry>
    <entry key="EditDisabledProperty">引数 ''{1}'' のプロパティ ''{0}'' は編集できません。 </entry>
    <entry key="IncorrectScopeForArgument">''{0}'' は引数 ''{1}'' の有効なスコープ値ではありません。</entry>
    <entry key="InvalidFunctionName">''{0}'' は認識された関数ではありません。C Caller ブロックをマッピングできる有効な関数名のリストを表示するには、get_param(gcb,''AvailableFunctions'') を使用してください。</entry>
    <entry key="LockedCCaller">C Caller ブロックが含まれるライブラリがロックされているため、FunctionPortSpecification オブジェクトを変更できません。ブロックを変更するには、ライブラリのロックを解除してください。</entry>
    <entry key="LinkedCCaller">現在 C Caller ブロックがライブラリにリンクされているため、FunctionPortSpecification オブジェクトを変更できません。このブロックを変更するには、ライブラリからブロックを変更するか、リンクを切断してください。</entry>
    <entry key="ModelIsExecuting">モデルの実行中は、FunctionPortSpecification オブジェクトを変更できません。</entry>
    <entry key="IndexExceedsDimsLinear">インデックスが配列要素数を超えています。</entry>
    <entry key="LinkedCCallerFcnName">現在 C Caller ブロックがライブラリにリンクされているため、関数名を変更できません。このブロックを変更するには、ライブラリからブロックを変更するか、リンクを切断してください。</entry>
    <entry key="NonexistentGlobalArgument">''{0}'' は有効なグローバル引数ではありません。</entry>
    <entry key="AddNonexistentGlobalArgument">''{0}'' は追加するのに有効なグローバル引数ではありません。</entry>
    <entry key="RemoveNonexistentGlobalArgument">''{0}'' は削除するのに有効なグローバル引数ではありません。</entry>
    <entry key="InvalidNumberOfInputsForAPIMethod"> ''{0}'' メソッドには 1 つのグローバル引数名が入力として必要です。 </entry>
    <entry key="CCallerGlobalIOAPIMethodInvalidInput"> メソッド ''{0}'' の入力は、文字ベクトルまたはスカラー string でなければなりません。 </entry>
    <entry key="AddDuplicateGlobalArgument"> グローバル引数 ''{0}'' は既に存在します。 </entry>
    <entry key="GlobalIOParsingError"> モデル ''{0}'' のグローバル変数解析を実行中にエラーが発生しました。グローバル変数が関数インターフェイスとして使用されていない場合は、カスタム コード内のエラーを修正するか、''{1}'' を無効にしてください。 </entry>
    <entry key="GlobalInputTooltip"> 入力としてのグローバル変数 </entry>
    <entry key="GlobalOutputTooltip"> 出力としてのグローバル変数 </entry>
    <entry key="GlobalInputOutputTooltip"> 入力および出力としてのグローバル変数 </entry>
    <entry key="GlobalNonInterfaceTooltip"> グローバル変数はブロック インターフェイスではありません。</entry>
    <entry key="GlobalVariableUsageWarning"> グローバル変数 {0} は {1} で読み取られ、{2} で書き込まれます。実行順序が正しく定義されていないと、{0} で行われた変更によって他のブロックで予期しない結果が生じる可能性があります。 </entry>
    <entry key="InvalidOrDeletedObject">'FunctionPortSpecification' オブジェクトが無効であるか削除されています。</entry>
    <entry key="GlobalArgsTotalCountMismatchError">The total number of global arguments for function ''{0}'' is {1} in C Caller block ''{2}'' and {3} in C Caller block ''{4}''. These C Caller blocks that call the same function don't have the same number of global arguments. </entry>
    <entry key="GlobalArgNotFoundError">Global argument ''{0}'' for function ''{1}'' is in C Caller block ''{2}'' but is not in C Caller block ''{3}''. These C Caller blocks that call the same function don't use the same arguments.</entry>
    <entry key="IncompatibleArgument">coder.ceval を含む外部 C 関数 ''{1}'' の引数 {0, number, integer} に、互換性のない型が渡されています。</entry>
    <entry key="IncompatiblePointerArgument">coder.ceval を含む外部 C 関数 ''{1}'' の引数 {0, number, integer} に、互換性のないポインター型が渡されています。</entry>
    <entry key="MatrixArgumentDifferentElements">coder.ceval を含む外部 C 関数 ''{1}'' の引数 {0, number, integer} に、要素数の異なる行列が渡されています。</entry>
    <entry key="CustomCodeUndefinedCevalFcn">coder.ceval を含む外部 C 関数 ''{0}'' は、カスタム コードのソース ファイルまたはライブラリ ファイルで定義されていないため、フィルターで除外されました。</entry>
    <entry key="CppReferenceNotSupportedCeval">coder.ceval は、カスタム コード引数として、または戻り値として C++ 参照をサポートしません。ポインターを受け入れるか、または返すように、カスタム コードを変更してください。</entry>
    <entry key="GlobalVarPointerTypeUnsupportedForOOP">カスタム コードのグローバル変数 ''{0}'' はポインター型です。別のプロセスでカスタム コードをシミュレートする際、ポインター型のグローバル変数はサポートされません。</entry>
    <entry key="GlobalVarUnsupportedTypeForOOP">カスタム コードのグローバル変数 ''{0}'' の型がサポートされていません。別のプロセスでカスタム コードをシミュレートする際、void ポインター、ポインターの配列、複素数型、共用体型の各 C/C++ 型はサポートされません。</entry>
    <entry key="CustomCodeFcnCallParamTypeUnsupportedForOOP">カスタム関数 ''{0}'' では、引数 ''{1}'' の型はサポートされていません。別のプロセスでカスタム コードをシミュレートする際、void ポインター型、ポインターの配列、複素数型、共用体型の各 C/C++ 型はサポートされません。</entry>
    <entry key="GlobalVarAddressEscapeOOP">カスタム コードを別個のプロセスでシミュレートする場合、グローバル変数 ''{0}'' のアドレスを非定数ポインターに割り当てることは C Function ブロックでサポートされていません。</entry>
    <entry key="CustomCodeFcnCallUnsupportedForOOP">カスタム コード関数 ''{0}'' を呼び出せません。別のプロセスでカスタム コードをシミュレートする場合、次の戻り値と関数の引数の型をもつ関数へのアクセスはサポートされません。 &lt;ul&gt; &lt;li&gt; 戻り値の型: ポインター型、複素数型、クラス タイプ、および共用体型&lt;/li&gt; &lt;li&gt; 関数の引数の型: void ポインター型、ポインターの配列、マルチレベルのポインター、クラス タイプ、複素数型、および共用体型&lt;/li&gt; &lt;/ul&gt;</entry>
    <entry key="CustomCodeFcnCallPassingNullptrForOOP">カスタム関数 ''{0}'' では、別のプロセスでカスタム コードをシミュレートする際に引数 ''{1}'' の空の配列または行列を渡すことはサポートされていません。</entry>
    <entry key="CustomCodeVariadicFcnUnsupportedForOOP">別のプロセスでカスタム コードをシミュレートする際、可変個引数関数 ''{0}'' はサポートされません。</entry>
    <entry key="CustomCodeDebugExecutionError">別のプロセスでカスタム コードをシミュレートする際に ''{0}'' でエラーが発生しました。</entry>
    <entry key="CustomCodeDebugExecutionErrorWithDebugger">別のプロセスでカスタム コードをシミュレートする際に ''{0}'' でエラーが発生しました。
        
            &lt;actions exclusiveFixIts="yes"&gt;
                &lt;action type="suggestion" id="launchDebuggerFromDV" retvalue="false"&gt;
                    &lt;cmd&gt;SLCC.OOP.LaunchDebuggerForOOP(''{0}'');&lt;/cmd&gt;
                    &lt;txt&gt;外部のデバッガーを起動して、外部カスタム コードをデバッグする。&lt;/txt&gt;
                &lt;/action&gt;
            &lt;/actions&gt;
        
    </entry>
    <entry key="CustomCodeDebugExecutionErrorInInit">モデル ''{0}'' のカスタム コードを別のプロセスでシミュレーション中に、初期化関数でエラーが発生しました。</entry>
    <entry key="CustomCodeDebugExecutionErrorInTerm">モデル ''{0}'' のカスタム コードを別のプロセスでシミュレーション中に、終了関数でエラーが発生しました。</entry>
    <entry key="CustomCodeDebugExecutionDebuggerLaunchingStatusTip">外部のデバッガーを起動しています。これには、通常で最大 1 分かかります。[開く] ボタンを 2 回以上クリックしないでください。</entry>
    <entry key="OOPExeDebuggingFailure">モデル ''{0}'' に関連付けられているカスタム コードのデバッグに際してエラーが発生しました。</entry>
    <entry key="MatrixElementAddressEscapeToCustomCodeFcnCallForOOP">別のプロセスでカスタム コードをシミュレートする際、行列の最初以外の要素のアドレスを外部カスタム関数 ''{0}'' に渡すことはサポートされません。</entry>
    <entry key="OOPExeDebuggerLaunchFailure">モデル ''{0}'' に関連付けられているカスタム コードに対してデバッガーを起動できませんでした。デバッグ情報が見つかりません。</entry>
    <entry key="OOPExeDebuggerLaunchMissingExecutable">''{0}'' が見つかりませんでした。</entry>
    <entry key="MacroFunctionUnsupportedForOOP">別のプロセスでカスタム コードをシミュレートする際、関数呼び出しに展開される C マクロ ''{0}'' はサポートされません。</entry>
    <entry key="OOPExeLaunchFailure">''{0}'' で実行可能ファイルを起動できませんでした。</entry>
    <entry key="OOPExeDebuggerNoCustomCodeWithModel">モデル ''{0}'' にはデバッグ対象のカスタム コードがありません。</entry>
    <entry key="OOPExeDebuggerNonExistSrcFile">カスタム関数 ''{1}'' のソース ファイル ''{0}'' が存在しません。</entry>
    <entry key="ExternalDebuggerLaunchFailure">Error occurred when launching external debugger.</entry>
    <entry key="ExternalDebuggerUnsupported">Current compiler selected for external code is ''{0}'', which is unsupported for external code debugging. Use ''mex -setup'' to select a compatible compiler.</entry>
    <entry key="ExternalDebuggerUnsupportedOnMacWithOOP">Mac OS プラットフォームでは、別のプロセスでのカスタム コードのデバッグはサポートされていません。</entry>
    <entry key="ExternalDebuggerVSCodeNotSupportedInProcess">VSCode によるカスタム コードのデバッグは、別のプロセスでのシミュレーションでのみサポートされています。</entry>
    <entry key="ExternalDebuggerVSCodeNotSupportedInProcess_FixIt">モデルまたはライブラリ ''{0}'' について、別のプロセスでのカスタム コードのシミュレーションを有効にしてください。</entry>
    <entry key="ExternalDebuggerNoCustomCode">外部デバッガーを起動できません。モデル ''{0}'' にデバッグ可能なカスタム コードはありません。モデル ''{0}'' でデバッグ対象のカスタム コードが指定され、モデル コンフィギュレーション パラメーターで ''{1}'' オプションが有効になっているかどうかをチェックしてください。</entry>
    <entry key="ExternalDebuggerNotLaunchForOOP">カスタム コード関数は ''{0}'' と互換性がない場合、除外された可能性があります。</entry>
    <entry key="ExternalDebuggerLaunchedMSVC">外部デバッガーの準備ができました。デバッグ セッションを開始するには、外部デバッガーにブレークポイントを設定して、モデルをシミュレートしてください。</entry>
    <entry key="ExternalDebuggerLaunchedUnix">外部デバッガーの準備ができました。すべてのカスタム コード関数エントリ ポイントにおけるブレークポイントは、外部デバッガーで設定します。デバッグ セッションを開始するには、モデルをシミュレートしてください。デバッグ セッションを終了するには、外部デバッガーを閉じる前にプロセスをデタッチしてください。</entry>
    <entry key="ExternalDebuggerAlreadyLaunched">外部デバッガーは既に起動されています。外部デバッガーのウィンドウが最小化されているか、他のアプリケーション ウィンドウに隠れている可能性があります。</entry>
    <entry key="ExternalDebuggerStatusBarInfo">カスタム コードをデバッグ中: 呼び出し元の関数 ''{0}''</entry>
    <entry key="ExternalDebuggerMSVCDLLLimit">Visual Studio デバッガーに読み込まれるモジュールの最大数は現在 ''{0}'' です。この限度を超える数のカスタム コード モジュールが読み込まれなかったため、ブレークポイントがヒットしない場合があります。カスタム コードを Simulink 内でデバッグするには、読み込まれるモジュールの最大数を 4096 以上に設定することをお勧めします。関連ドキュメンテーション。</entry>
    <entry key="ExternalDebuggerSessionEnd">カスタム コードのデバッグ セッションが終了しました。新規デバッグ セッションを開始するには、Simulink ツールストリップからデバッガーを起動してください。</entry>
    <entry key="ExternalDebuggerLaunchingStatusTip">外部デバッガーの起動中</entry>
    <entry key="ExternalDebuggerLaunchingWarnDlgMsgUnix">\\bf 注意: \\rm 外部デバッガーでは ''kill'' コマンドを実行しないでください。実行した場合、MATLAB が予告なく終了します。デバッグ セッションを終了するには、''detach'' コマンドを使用してください。</entry>
    <entry key="ExternalDebuggerDebuggingWithMinGW">カスタム コードのデバッグで MinGW を使用するには、{0} サポート パッケージをインストールしてください。</entry>
    <entry key="MexDebuggingWithVSCodeError">MEX のデバッグについて、VS Code によるデバッグはサポートされていません。 </entry>
    <entry key="PrebuildFailed">モデル ''{0}'' について、カスタム コードのシミュレーション実行可能ファイルをビルドできませんでした。</entry>
    <entry key="PrebuildInterfaceHeaderUnsuccessful">指定されたカスタム コードからインターフェイス ヘッダーを生成できませんでした。</entry>
    <entry key="InferringHeadersFailed">ヘッダー情報をオートフィルできませんでした。</entry>
    <entry key="InferredHeadersEmpty">ヘッダー情報が空です。ソース ファイルを確認し、ディレクトリの指定を含めるか、ヘッダー ファイルを明示的に指定してください。</entry>
    <entry key="EmptyCustomCodeHeader">モデル ''{0}'' にヘッダー ファイルが指定されていません。解析前に &lt;sldiag objui="configset" objparam="SimCustomHeaderCode"&gt;[ヘッダー ファイル]&lt;/sldiag&gt; を指定してください。</entry>
    <entry key="EmptyCustomCodeSource">モデル ''{0}'' にソース ファイルが指定されていません。解析前に &lt;sldiag objui="configset" objparam="SimUserSources"&gt;[ソース ファイル]&lt;/sldiag&gt; を指定してください。</entry>
    <entry key="ValidateCustomCode">次のモデルのカスタム コードを検証しています: {0}</entry>
    <entry key="InferHdrConfirmationDlgTitle">ヘッダー ファイルのオートフィル</entry>
    <entry key="InferHdrConfirmationDlgMsg">''{0}'' の前の値をオートフィルされたヘッダーに置き換えますか?</entry>
    <entry key="InferHdrConfirmationDlgYesLabel">はい</entry>
    <entry key="InferHdrConfirmationDlgNoLabel">いいえ</entry>
    <entry key="InferHdrUnappliedChanges">ヘッダー ファイルをオートフィルするには、モデル ''{0}'' の [コンフィギュレーション パラメーター] ダイアログに、適用されていない変更がないことが必要です。 &lt;actions exclusiveFixIts="yes"&gt; &lt;action type="suggestion" id="apply" btn="apply"&gt; &lt;cmd&gt;configset.internal.util.applyChanges(''{0}'');&lt;/cmd&gt; &lt;txt&gt;変更を適用する&lt;/txt&gt; &lt;/action&gt; &lt;/actions&gt;
</entry>
    <entry key="ValidateCCUnappliedChanges">カスタム コードを検証するには、モデル ''{0}'' の [コンフィギュレーション パラメーター] ダイアログに、適用されていない変更がないことが必要です。 &lt;actions exclusiveFixIts="yes"&gt; &lt;action type="suggestion" id="apply" btn="apply"&gt; &lt;cmd&gt;configset.internal.util.applyChanges(''{0}'');&lt;/cmd&gt; &lt;txt&gt;変更を適用する&lt;/txt&gt; &lt;/action&gt; &lt;/actions&gt;
</entry>
    <entry key="PythonBlockInferenceFail">Python 関数の入出力の型 ''{0}'' を推定できませんでした</entry>
    <entry key="UnsupportedPythonTypeToMATLABTypeConversionError">''{1}'' から ''{0}'' への変換はサポートされていません。</entry>
    <entry key="OutputDictionaryKeysDoNotContainBusField">出力ディクショナリ キーで ''{0}'' が見つかりません。出力ディクショナリ キーには、出力 Simulink.Bus オブジェクトのすべてのフィールドが含まれていなければなりません。</entry>
    <entry key="UnsupportedPythonTypeToSimulinkTypeConversion">Python 関数の出力の型を、指定した Simulink の型に変換できません。</entry>
    <entry key="PythonRuntimeError">Python エラー:\n{0}</entry>
    <entry key="PythonBufferWrongNDims">Python から返される配列または行列の次元数は、Simulink で指定されている次元数と一致しなければなりません。</entry>
    <entry key="PythonBufferWrongType">Python から返される配列または行列の型は、Simulink で必要とされている型と一致しなければなりません。</entry>
    <entry key="PythonBufferWrongShape">Python から返される配列または行列の次元は、Simulink で指定されている次元と一致しなければなりません。</entry>
    <entry key="PythonBusElementNameNotDictKey">バス要素 ''{0}'' の名前が、Python によって返されたディクショナリの string 型のキーとして存在していません。</entry>
    <entry key="PythonDictBusMismatch">Python によって返されるディクショナリの要素数は、バスの要素数以上でなければなりません</entry>
    <entry key="PythonAccessNonTupleAsTuple">Python によって返されるオブジェクトは、タプルであることが必要です。</entry>
    <entry key="PythonBoolMarshaling">Python によって返されるオブジェクトは boolean でなければなりません。</entry>
    <entry key="PythonIdxOutOfRange">インデックスがシーケンス要素数を超えています。</entry>
    <entry key="PythonListToNdArray">Python リストから多次元 Simulink 配列への変換はサポートされていません。</entry>
    <entry key="PythonUnsupportedTypeEnum">コード生成に基づく実行で、enum 型に Python との互換性がありません。enum 名: ''{0}'' </entry>
    <entry key="PythonUnsupportedTypeComplex">コード生成に基づく実行で、複素数型に Python との互換性がありません。</entry>
    <entry key="PythonFloatToIntMayLosePrecision">Python の浮動小数点を Simulink の整数に変換すると、精度が低下する可能性があります。</entry>
    <entry key="PythonOOPExecutionMLSB">Code generation based execution of Python is not supported for ''{0}'' when the Python environment in MATLAB is set to Out-of-Process. Change the MATLAB Python environment to In-Process or change the block simulation mode to interpreted execution.</entry>
    <entry key="PythonOOPExecutionPyCode">Code generation based execution of Python is not supported for ''{0}'' when the Python environment in MATLAB is set to Out-of-Process. Change the MATLAB Python environment to In-Process.</entry>
    <entry key="PythonNotConfigured">Python Function ブロックでは、Python を使用するよう MATLAB を構成する必要があります。</entry>
    <entry key="PythonCodeBlockInDataflow">Python Code ブロック ''{0}'' は Dataflow Subsystem 内に配置できません。 </entry>
    <entry key="PythonCodeBlockArrayOfBusInput">コード生成に基づく Python コードの実行を使用するブロックは、バス型を含む入力配列をサポートしません。</entry>
    <entry key="PythonCodeBlockArrayOfBusOutput">コード生成に基づく Python コードの実行を使用するブロックは、バス型を含む出力配列をサポートしません。</entry>
    <entry key="PythonStringCppCodegen">Simulink の string データ型を使用する場合、Python Code ブロック ''{0}'' は C++ コードを生成できません</entry>
    <entry key="PythonRapidAccelForEach">ラピッド アクセラレータでは、Python Code ブロック ''{0}'' を For Each Subsystem 内で実行できません</entry>
    <entry key="PythonHeaderNotFound">Python.h ヘッダー ファイルが見つかりません。MATLAB で使用される Python のバージョンと合致する Python 開発ヘッダーがインストールされていることを確認してください。</entry>
    <entry key="PythonFunctionMaskDialogText">Python コードを入力してカスタム Python アルゴリズムを統合</entry>
    <entry key="PythonFunctionName">Python Code ブロック</entry>
    <entry key="MultiWordBusFieldRequiresLongLong">カスタム コードからインポートされたバス オブジェクト ''{0}'' にマルチワード フィールドが含まれています。[ハードウェア実行] ペインで [long long のサポート] オプションを有効にしてください。 &lt;actions exclusiveFixIts="yes"&gt; &lt;action type="fixit" id="rtw_fixit" retvalue="false"&gt; &lt;cmd&gt;set_param(''{1}'',''ProdLongLongMode'',''on'');&lt;/cmd&gt; &lt;txt&gt;&lt;sldiag objui="configset" objparam="ProdLongLongMode"&gt;[long long のサポート]&lt;/sldiag&gt; を ''オン'' に設定する&lt;/txt&gt; &lt;/action&gt; &lt;/actions&gt;
	</entry>
    <entry key="StructWithNDInGRTCodegen">ブロック線図 ''{1}'' のコード生成ターゲットはサポートされていません。カスタム コードからインポートされたバス オブジェクト ''{0}'' に行列タイプの要素があるためです。モデルが行列フィールドを含むバス オブジェクトをインポートした場合、ERT ベースのターゲットのみがサポートされます。</entry>
    <entry key="NdIndexingMismatchCustomCodeExpectsUnflattenedType">ブロック線図 ''{1}'' はカスタム コード内の行列フィールドを含むバスをインポートしましたが、その場合、要素の次元保持を有効にする必要があります。ブロック線図 ''{1}'' について、''{0}'' の PreserveElementDimensions プロパティを変更してください。</entry>
    <entry key="NdIndexingMismatchCustomCodeExpectsFlattenedType">ブロック線図 ''{1}'' はカスタム コード内のベクトル場を含むバスをインポートしましたが、その場合、バス要素の次元保持を無効にする必要があります。ブロック線図 ''{1}'' について、''{0}'' の PreserveElementDimensions プロパティを変更してください。</entry>
    <entry key="IncorrectUseOfMajorityFunction">多数の仕様関数 ''{0}'' の使用方法が正しくありません。完全修飾カスタム コード関数名は、多数の仕様関数の string 入力として渡さなければなりません。</entry>
    <entry key="CannotFindMajorityFunction">多数の仕様関数 ''{1}'' で指定されているカスタム コード関数 ''{0}'' が見つかりません。多数の仕様は次の関数に設定できます: ''{2}''。</entry>
    <entry key="NoFcnInCCCanTakeMajority">{0} カスタム コード仕様に、多数の仕様をとることができる関数がありません。この警告メッセージを削除するには、多数の仕様関数の呼び出しをブロックのコードから削除してください。</entry>
    <entry key="FunctionArrayLayoutOverrideForSNDF_BlockCC">行列フィールドをもつ struct を入力引数/出力引数として含むカスタム コード関数 ''{0}'' の配列レイアウトは [行優先] である必要があります。カスタム コード関数 ''{0}'' の配列レイアウト設定 ''{1}'' は無視されます。この警告メッセージを削除するには、ブロック コードで関数 ''slSetRowMajor'' を使用して、''{0}'' の配列のレイアウト設定を [行優先] に設定してください。</entry>
    <entry key="FunctionArrayLayoutOverrideForPtrToArr_BlockCC">行列へのポインターを入力引数として含むカスタム コード関数 ''{0}'' は、配列のレイアウトが [行優先] でなければなりません。カスタム コード関数 ''{0}'' の配列レイアウト設定 ''{1}'' は無視されます。この警告メッセージを削除するには、ブロック コードで関数 ''slSetRowMajor'' を使用して、''{0}'' の配列のレイアウト設定を [行優先] に設定してください。</entry>
    <entry key="CFunctionBlockLibMultiInstanceError">Generating code from the model, simulating the model in rapid accelerator mode, or simulating the model using model reference in accelerator mode is not supported since multiple instances of library block ''{0}'' are used and ''CustomCodeIsMultiInstantiable'' is set to ''off''.</entry>
    <entry key="CFunctionBlockMultiInstanceError">ブロック ''{0}'' とブロック ''{1}'' が同じブロック カスタム コードをもち、''CustomCodeIsMultiInstantiable'' が ''off'' に設定されているため、モデルからのコード生成、ラピッド アクセラレータ モードでのモデルのシミュレーション、またはアクセラレータ モードでのモデル参照を使用したモデルのシミュレーションはサポートされません。</entry>
    <entry key="ContinuousSampleTimeNotAllowForNonDeterministicBlockCC">C Function ブロック ''{0}'' では非確定的な出力をもつ可能性のあるカスタム コードが使用されているため、連続サンプル時間はサポートされません。ブロックでの連続サンプル時間のサポートを有効にするには、含まれるカスタム コードの動作が確定的である場合、''CustomCodeIsMultiInstantiable'' を ''on'' に設定してください。</entry>
    <entry key="CFcnHeaderFiles">ヘッダー</entry>
    <entry key="CFcnSourceFiles">ソース</entry>
    <entry key="CFcnSearchDirs">ディレクトリ検索</entry>
    <entry key="CFcnLibraries">ライブラリ</entry>
    <entry key="CFcnDefines">定義</entry>
    <entry key="CFcnCompilerFlags">コンパイラ フラグ</entry>
    <entry key="CFcnLinkerFlags">リンカー フラグ</entry>
    <entry key="CFcnAdvancedSettings">詳細設定</entry>
    <entry key="CFcnMultiInstance">ブロックで指定されたカスタム コードが、複数のインスタンスをサポートしています</entry>
    <entry key="CFcnLocalCustomCode">ブロックのカスタム コードを使用</entry>
    <entry key="CFcnConfigSetCustomCode">コンフィギュレーション パラメーターのカスタム コードを使用</entry>
    <entry key="CFcnSimulationCC">シミュレーションのカスタム コード </entry>
    <entry key="CFcnCodeGenCC">コード生成のカスタム コード</entry>
    <entry key="CFcnDependencyPromp">ブロックのカスタム コードの依存関係を指定</entry>
    <entry key="CFunctionBlockLocalCCInDataflow">C Function ブロック ''{0}'' はローカル カスタム コードを使用しているため、Dataflow Subsystem 内に配置できません。 </entry>
    <entry key="OOPExeBuildFailureBlockCC">ブロック ''{0}'' に関連付けられたカスタム コードのビルド中にエラーが発生しました。</entry>
    <entry key="ExportingTargetCodegenToPrvsRelease">C Function ブロック ''{0}'' は、ブロックに新規追加された [コード生成] セクションを使用して、シミュレーションとコード生成に異なるコードを指定します。この機能は R2024a で導入されたため、コード生成のコードはエクスポート時に削除されます。</entry>
    <entry key="ExportingLocalCCToPrvsRelease">C Function ブロック ''{0}'' には、カスタム コード設定がブロックに指定されています。この機能は Release R2024a 以降向けに追加されたもので、古いリリースとは互換性がありません。ブロックはエクスポート時に削除されます。</entry>
    <entry key="ExportingFullLangToPrvsRelease">C Function ブロック ''{0}'' で、ブロックの 'LanguageLevel' が 'full' に設定されています。この機能は Release R2025b 以降向けに追加されるため、古いリリースとは互換性がありません。</entry>
    <entry key="CustomCodeLibBuildErrorCause">{0}</entry>
    <entry key="CFcnCallerDefaultFunctionName">&lt;FunctionName&gt;</entry>
    <entry key="ParsingTypeFailedDetail">{0}</entry>
    <entry key="DeterministicFunctionsDlgSSFcnNameEditHint">functionName</entry>
    <entry key="MajorityDlgSSFcnNameEditHint">functionName</entry>
    <entry key="GlobalIOParsingErrorCause">{0}</entry>
  </message>
</rsccat>
