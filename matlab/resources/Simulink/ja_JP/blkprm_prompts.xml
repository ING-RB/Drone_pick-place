<?xml version="1.0" encoding="UTF-8"?>
<!--Copyright 2025 The MathWorks, Inc.-->

<rsccat xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.0" locale="ja_JP" product="Simulink" xsi:noNamespaceSchemaLocation="../../resources/schema/msgcat.xsd">
  <message>
    <entry key="AllSrcBlksSampleTime">サンプル時間:</entry>
    <entry key="AllSrcBlksFramePeriod">フレーム周期:</entry>
    <entry key="AllBlksSampleTime">サンプル時間 (継承は -1):</entry>
    <entry key="AllBlksPartitionName">分割の名前:</entry>
    <entry key="AllBlksSaturate">整数オーバーフローで飽和</entry>
    <entry key="AllBlksInitConds">初期条件:</entry>
    <entry key="AllBlksDecimation">間引き:</entry>
    <entry key="AllBlksEnableZC">ゼロクロッシング検出を有効にする</entry>
    <entry key="AllBlksZcTolerance">ゼロクロッシング信号の許容誤差:</entry>
    <entry key="AllBlksContStateAttr">状態名:(例: ''position'')</entry>
    <entry key="TimeSrc">時間 (t):</entry>
    <entry key="ShowAdditionalParam">--------------- 追加パラメーターの表示 ---------------</entry>
    <entry key="DesignMin">最小値:</entry>
    <entry key="OutputDesignMin">出力の最小値:</entry>
    <entry key="AccumDesignMin">アキュムレータの最小値:</entry>
    <entry key="CoefDesignMin">係数の最小値:</entry>
    <entry key="NumCoefDesignMin">分子係数の最小値:</entry>
    <entry key="DenCoefDesignMin">分母係数の最小値:</entry>
    <entry key="TableDesignMin">テーブルの最小値:</entry>
    <entry key="DesignMax">最大値:</entry>
    <entry key="OutputDesignMax">出力の最大値:</entry>
    <entry key="AccumDesignMax">アキュムレータの最大値:</entry>
    <entry key="CoefDesignMax">係数の最大値:</entry>
    <entry key="NumCoefDesignMax">分子係数の最大値:</entry>
    <entry key="DenCoefDesignMax">分母係数の最大値:</entry>
    <entry key="TableDesignMax">テーブルの最大値:</entry>
    <entry key="OutputDataTypeMode">出力データ型モード:</entry>
    <entry key="DataTypeAsDataTypeMode">データ型:</entry>
    <entry key="IndexMode">インデックス モード:</entry>
    <entry key="DiagOptionNoAll">任意の出力要素が割り当てられない場合のアクション:</entry>
    <entry key="OutputDataType">出力データ型:</entry>
    <entry key="OutputDataType_EditField">出力のデータ型 (例  sfix(16)、uint(8)、float(''single'')):</entry>
    <entry key="OutputUnit">出力単位:</entry>
    <entry key="OutputUnit_EditField">単位 (m、m/s^2、N*m など):</entry>
    <entry key="LogicalOutputDataType_EditField">出力のデータ型 (例. uint(8), sint(32)):</entry>
    <entry key="OutputScaling_EditField">出力のスケーリング (傾き, 例 2^-9 または [傾き バイアス]、例 [1.25 3]):</entry>
    <entry key="InputSameDT">すべての入力が同じデータ型をもつ</entry>
    <entry key="LookupNDInputSameDT">すべての入力 (u) が同じデータ型をもつ</entry>
    <entry key="AllPortsSameDT">すべての入出力が同じデータ型をもつ</entry>
    <entry key="SwitchInputSameDT">すべてのデータ端子入力が同じデータ型をもつ</entry>
    <entry key="SignedPower">符号付きべき乗</entry>
    <entry key="LockScale">固定小数点ツールによる変更に対して出力データ型の設定をロックする</entry>
    <entry key="LockAllScale">固定小数点ツールによる変更に対してデータ型の設定をロックする</entry>
    <entry key="DataTypeOverride">double でデータ型をオーバーライドする</entry>
    <entry key="SPP_RndMeth_ID">整数丸めモード:</entry>
    <entry key="ParameterDesignMin">パラメーターの最小値:</entry>
    <entry key="ParameterDesignMax">パラメーターの最大値:</entry>
    <entry key="ParameterDataTypeMode">パラメーターのデータ型モード:</entry>
    <entry key="ParameterDataType_EditField">パラメーターのデータ型 (例: sfix(16)、uint(8)、float(''single'')):</entry>
    <entry key="ParameterScaling_EditField">パラメーターのスケーリング (傾き, 例 2^-9 または [傾き バイアス]、例: [1.25 3]):</entry>
    <entry key="OutputScalingMode">出力スケーリング モード</entry>
    <entry key="ParameterScalingMode">パラメーター スケーリング モード</entry>
    <entry key="UNIFIEDDATATYPE">データ型:</entry>
    <entry key="OUTPUT_UNIFIEDDATATYPE">出力データ型:</entry>
    <entry key="ACCUM_UNIFIEDDATATYPE">アキュムレータのデータ型:</entry>
    <entry key="NUM_ACCUM_UNIFIEDDATATYPE">分子係数のアキュムレータのデータ型:</entry>
    <entry key="DEN_ACCUM_UNIFIEDDATATYPE">分母係数のアキュムレータのデータ型:</entry>
    <entry key="PRODUCT_UNIFIEDDATATYPE">乗算出力のデータ型:</entry>
    <entry key="NUM_PRODUCT_UNIFIEDDATATYPE">分子係数の乗算出力のデータ型:</entry>
    <entry key="DEN_PRODUCT_UNIFIEDDATATYPE">分母係数の乗算出力のデータ型:</entry>
    <entry key="COEF_UNIFIEDDATATYPE">係数のデータ型:</entry>
    <entry key="NUM_COEF_UNIFIEDDATATYPE">分子係数のデータ型:</entry>
    <entry key="DEN_COEF_UNIFIEDDATATYPE">分母係数のデータ型:</entry>
    <entry key="STATE_UNIFIEDDATATYPE">状態のデータ型:</entry>
    <entry key="MULTIPLICAND_UNIFIEDDATATYPE">被乗数データ型:</entry>
    <entry key="TAPSUM_UNIFIEDDATATYPE">タップの加算のデータ型:</entry>
    <entry key="PARAMETER_UNIFIEDDATATYPE">パラメーターのデータ型:</entry>
    <entry key="TABLE_UNIFIEDDATATYPE">テーブルのデータ型:</entry>
    <entry key="AllSrcsVector1D">ベクトル パラメーターを 1 次元として解釈</entry>
    <entry key="LinearizeAsGain">線形化時にゲインとして扱う</entry>
    <entry key="LinearizeDirectFeedthrough">線形化中に入力を直達する</entry>
    <entry key="LinearizeAsDelay">離散サンプル時間で線形化した場合に単位遅延として扱う</entry>
    <entry key="MaintainDataDependency">データの依存関係を維持</entry>
    <entry key="DescriptorStateSpaceDirectFeedthrough">直達:</entry>
    <entry key="DescriptorStateSpaceLinearizeToSparse">スパース モデルに線形化する</entry>
    <entry key="ContinuousLinearBlocksParameterTunability">パラメーターの調整可能性:</entry>
    <entry key="StateSpaceAllowTunableMatrixD">初期状態で 0 に指定されている D 行列で非ゼロの値を許可</entry>
    <entry key="ZeroPoleZeros">零点:</entry>
    <entry key="ZeroPolePoles">極:</entry>
    <entry key="ZeroPoleGain">ゲイン:</entry>
    <entry key="StateName">状態名:</entry>
    <entry key="StateResolveIdentifier">状態名を Simulink の信号オブジェクトに関連付ける</entry>
    <entry key="StateStorageClass">コード生成ストレージ クラス:</entry>
    <entry key="StateTypeQualifier">コード生成ストレージ型修飾子:</entry>
    <entry key="ActionInitStates">実行を再開時の状態:</entry>
    <entry key="AssertionEnabled">アサーションを有効にする</entry>
    <entry key="AssertionCallback">アサーションが失敗したときのシミュレーション コールバック:</entry>
    <entry key="AssertionStopRequest">アサーションが失敗したときにシミュレーションを中止</entry>
    <entry key="AsyncTaskPriority">タスクの優先順位:</entry>
    <entry key="BacklashDeadBandWidth">不感帯幅:</entry>
    <entry key="BacklashDeadInitOutput">初期出力:</entry>
    <entry key="BreakpointObject">ブレークポイント オブジェクト:</entry>
    <entry key="BusSelOutSignals">出力信号:</entry>
    <entry key="BusSelMuxOutput">バーチャル バスとして出力</entry>
    <entry key="SubrefProxyInSelectionMode">選択モード</entry>
    <entry key="CaseConditions">Case 条件 (例: '{'1,[2,3]'}'):</entry>
    <entry key="CaseShowDefault">default ケースを表示</entry>
    <entry key="ClockBlkDispTime">時間を表示</entry>
    <entry key="CmbLogicTruthTable">真理値表:</entry>
    <entry key="CmpxBlkOutput">出力:</entry>
    <entry key="ConcatNumInputs">入力数:</entry>
    <entry key="ConcatMode">モード:</entry>
    <entry key="ConcatDimension">連結の次元:</entry>
    <entry key="ConstConstValue">定数値:</entry>
    <entry key="InheritPrmsFromInput">出力端子の属性を入力端子から継承</entry>
    <entry key="MatrixMode">モード:</entry>
    <entry key="ExpandScalarElementValue">要素の値:</entry>
    <entry key="MatrixOutputDimensions">出力の次元:</entry>
    <entry key="DstoreMemDstoreName">データ ストア名:</entry>
    <entry key="DstoreMemBlk">Data Store Memory ブロック: </entry>
    <entry key="DstoreMemInitvalue">初期値:</entry>
    <entry key="DstoreMemShareAcrossModelInstances">モデル インスタンス間で共有する</entry>
    <entry key="DstoreMemResolveDstoreName">データ ストア名を Simulink の信号オブジェクトに関連付ける</entry>
    <entry key="DstoreMemRef">データ ストア参照</entry>
    <entry key="DstoreMemStorageClass">ストレージ クラス: </entry>
    <entry key="DstoreMemTypeQualifier">ストレージ型修飾子: </entry>
    <entry key="DstoreMemDiagnostics">診断</entry>
    <entry key="DstoreMemReadBeforeWriteDiagnostic">書き込み前の読み取りを検出:</entry>
    <entry key="DstoreMemWriteAfterWriteDiagnostic">書き込み後の書き込みを検出:</entry>
    <entry key="DstoreMemWriteAfterReadDiagnostic">読み取り後の書き込みを検出:</entry>
    <entry key="DstoreMemDimensions">次元 (初期値からの推定 - 1):</entry>
    <entry key="DstoreRefDimensions">次元:</entry>
    <entry key="DstoreMemLogDSM">ログ データ:</entry>
    <entry key="DstoreMemLimitDataPoints">データ点を制限します</entry>
    <entry key="DstoreMemDecimateData">データの間引き</entry>
    <entry key="DstoreMemDataLoggingMode">ログモード: </entry>
    <entry key="DstoreMemDataLoggingName">ログ名: </entry>
    <entry key="DtypeCnvDataType">データ型:</entry>
    <entry key="DtypeCnvInputOutputValue">等価な値をもつ入力と出力:</entry>
    <entry key="DeadZoneStartOfDeadZone">不感帯の下限:</entry>
    <entry key="DeadZoneEndOfDeadZone">不感帯の上限:</entry>
    <entry key="DemuxNumOfOutputs">出力数:</entry>
    <entry key="DemuxBusSelectMode">バス選択モード</entry>
    <entry key="DerivBlkLinearizePole">線形化に使用される伝達関数近似 s/(c*s + 1) の係数 c: </entry>
    <entry key="PulseType">パルス タイプ:</entry>
    <entry key="PulseAmplitude">振幅:</entry>
    <entry key="PulseDefaultPeriod">周期 (秒):</entry>
    <entry key="PulseDefaultPulseWidth">パルス幅:</entry>
    <entry key="PulseDefaultPhaseDelay">位相遅延 (秒):</entry>
    <entry key="PulseDiscPeriod">周期 (サンプル数):</entry>
    <entry key="PulseDiscPulseWidth">パルス幅 (サンプル数):</entry>
    <entry key="PulseDiscPhaseDelay">位相遅延 (サンプル数):</entry>
    <entry key="PulseContPeriod">周期 (秒):</entry>
    <entry key="PulseContDutyCycle">パルス幅 (周期の割合 (%)):</entry>
    <entry key="PulseContPhaseDelay">位相遅延 (秒):</entry>
    <entry key="DiscIntegratorIntMeth">積分手法:</entry>
    <entry key="DiscIntegratorGain">ゲイン値:</entry>
    <entry key="DiscreteIntegratorPrevOutput">前の出力:</entry>
    <entry key="DiscreteIntegratorPrevState">前の重み付き入力 K*Ts*u/2:</entry>
    <entry key="IntegratorInitCondSetting">初期条件設定:</entry>
    <entry key="DisplayFormat">数値表示形式:</entry>
    <entry key="DisplayFloating">フローティング表示</entry>
    <entry key="DisplayLockdown">ロックダウン</entry>
    <entry key="EnabPortStates">イネーブル時の状態:</entry>
    <entry key="SignalSizeVariation">可変サイズの信号のサイズを伝播:</entry>
    <entry key="TrigEnabShowOutPort">出力端子の表示</entry>
    <entry key="FcnCallGeneratorNumIterations">反復回数:</entry>
    <entry key="FcnCallGeneratorDisallowWideoutput">広範囲の出力を許可しない</entry>
    <entry key="FcnCallGeneratorShowEnableOutPort">イネーブル端子を表示する</entry>
    <entry key="InitialTriggerSignalState">トリガー信号の初期状態:</entry>
    <entry key="EnabTrigPortDims">端子の次元:</entry>
    <entry key="FcnExpression">式:</entry>
    <entry key="MSFcn_MFile">MATLAB ファイル名:</entry>
    <entry key="MSFcn_Params">パラメーター:</entry>
    <entry key="GotoTag">タグ:</entry>
    <entry key="GotoTagVis">タグの可視性:</entry>
    <entry key="IconDisplay">アイコン表示:</entry>
    <entry key="Gotosource">Goto ソース: </entry>
    <entry key="FromGotoTag">Goto タグ:</entry>
    <entry key="FrameConvInherit">出力サンプリング モードを &lt;Ref&gt; 入力端子から継承</entry>
    <entry key="FrameConvMode">出力信号のサンプリング モード:</entry>
    <entry key="FilterTFNumerator">分子係数:</entry>
    <entry key="FilterTFDenominator">分母係数:</entry>
    <entry key="FilterCoefficients">係数:</entry>
    <entry key="FindFunction">インデックスの出力形式:</entry>
    <entry key="FindNumberOfInputDimensions">入力の次元数:</entry>
    <entry key="FindValueOutputPort">ゼロではない入力値に対する出力端子の表示</entry>
    <entry key="ForEachSpecifiedNumIters">反復回数 (自動計算の場合 -1):</entry>
    <entry key="ForIterationLimit">反復制限 (N):</entry>
    <entry key="ForShowIterPort">反復変数の表示</entry>
    <entry key="IterInitStates">開始時の状態:</entry>
    <entry key="ForIterationSrc">反復制限元:</entry>
    <entry key="ForExternalIncrement">次の i (反復変数) を外部で設定</entry>
    <entry key="ForIterVarDataType">反復変数のデータ型:</entry>
    <entry key="FromFileExtrapolationBeforeFirstDataPoint">最初のデータ点前のデータ外挿:</entry>
    <entry key="FromFileInterpolationWithinTimeRange">時間範囲内のデータ内挿:</entry>
    <entry key="FromFileExtrapolationAfterLastDataPoint">最後のデータ点後のデータ外挿:</entry>
    <entry key="FromWksData">データ:</entry>
    <entry key="FromWksOutAfterFinalVal">最後のデータ後の出力フォーム:</entry>
    <entry key="FromWksHoldFinalVal">最後のデータ値を保持</entry>
    <entry key="GainMultiplication">乗算:</entry>
    <entry key="GainGain">ゲイン:</entry>
    <entry key="InitialStates">初期状態:</entry>
    <entry key="InitialNumeratorStates">分子側の開始ステート:</entry>
    <entry key="InitialDenominatorStates">分母側の開始ステート:</entry>
    <entry key="a0Optimization">最初の分母係数 (a0) を正規化することで最適化する</entry>
    <entry key="CoefficientSource">係数のソース: </entry>
    <entry key="FilterStructure">フィルター構造: </entry>
    <entry key="HitcrossOffset">ヒット クロッシング オフセット:</entry>
    <entry key="HitcrossDirection">ヒット クロッシング方向:</entry>
    <entry key="HitcrossShowOutport">出力端子の表示</entry>
    <entry key="OutputPortType">出力タイプ:</entry>
    <entry key="IfNumInputs">入力数:</entry>
    <entry key="IfCondition">If 式 (例: u1 ~= 0):</entry>
    <entry key="ElseIfConds">Elseif 式 (コンマ区切りのリスト。例: e.g. u2 ~= 0, u3(2) &lt; u2):</entry>
    <entry key="IfShowElse">else 条件の表示</entry>
    <entry key="IfEnsureIfElseCode">生成コードで If-else ステートメントを指定する (疑似代数ループの\n原因となる場合がある)</entry>
    <entry key="ImpIterInpIter">分割</entry>
    <entry key="ImpIterInpIterDim">分割\n次元</entry>
    <entry key="ImpIterInpIterStepSize">分割\n幅</entry>
    <entry key="ImpIterInpIterStepOffset">分割\nオフセット</entry>
    <entry key="ImpIterOutConcat">連結</entry>
    <entry key="ImpIterOutConcatDim">連結\n次元</entry>
    <entry key="ImpIterDataType">分割インデックスの出力データ型:</entry>
    <entry key="ImpIterOutputIterIdx">分割インデックスの出力端子を表示 (0 ベースのインデックス)</entry>
    <entry key="ImpIterStateType">状態の取り扱い:</entry>
    <entry key="ImpIterStateReset">リセット状態:</entry>
    <entry key="ImpIterShowResetFlag">リセット状態フラグの表示</entry>
    <entry key="ImpIterNeedActIterSig">アクティブな反復信号あり</entry>
    <entry key="ImpIterShowActIterCnt">アクティブな反復信号の表示</entry>
    <entry key="ImpIterShowActIterFlag">アクティブな反復フラグの表示</entry>
    <entry key="ImpIterInpBlkName">入力端子</entry>
    <entry key="ImpIterOutBlkName">出力端子</entry>
    <entry key="ImpIterMaskPrmName">パラメーター</entry>
    <entry key="ImpIterGenReuseFcn">1 つの反復に対する再利用可能な関数の生成</entry>
    <entry key="ImpIterSepOutputUpdateFcn">出力関数と更新関数を結合しない</entry>
    <entry key="ImpSelMthd">分割法</entry>
    <entry key="ImpSliceSelDim">分割次元</entry>
    <entry key="ImpSliceSelSize">分割サイズ</entry>
    <entry key="ImpSliceSelOffset">分割オフセット</entry>
    <entry key="ImpAsgMthd">連結方法</entry>
    <entry key="ImpSliceAsgDim">連結の次元</entry>
    <entry key="InitCondInitValue">初期値:</entry>
    <entry key="InOutportPortNum">端子番号:</entry>
    <entry key="OutputWhenUnconnected">ソース非接続時に出力を指定</entry>
    <entry key="SpecifyBusObject">バス オブジェクトによるプロパティの指定</entry>
    <entry key="LatchInputOutsideDelay">外部信号を遅延して入力をラッチ</entry>
    <entry key="LatchInputFcnCallFeedback">Function-Call Subsystem 出力のフィードバック信号の入力をラッチする</entry>
    <entry key="StateControlSemantics">状態制御: </entry>
    <entry key="InportOutputFcnCall">関数呼び出しの出力</entry>
    <entry key="InportPortDims">端子の次元 (継承は -1):</entry>
    <entry key="InportPortDimsMode">可変サイズの信号:</entry>
    <entry key="TriggerOnData">データでトリガー</entry>
    <entry key="InputAsMessage">親モデルのメッセージとして入力</entry>
    <entry key="OutputAsMessage">親モデルのメッセージとして出力</entry>
    <entry key="OnAvailableEvent">データ利用可能イベント時</entry>
    <entry key="DeadlineTime">データ期限</entry>
    <entry key="DisabledDataEvent">無効 (イベントなし)</entry>
    <entry key="SubsystemComputationalDelayAmount">計算遅延量:</entry>
    <entry key="SubsystemComputationalDelayDF">計算遅延によるデータの依存関係の維持:</entry>
    <entry key="SubsystemComputationalDelayIC">計算遅延の初期条件:</entry>
    <entry key="EnsureOutportIsVirtual">出力端子がバーチャルであることを確認</entry>
    <entry key="InportFramePeriod">フレーム周期 (継承は -1):</entry>
    <entry key="InportSignalType">信号タイプ:</entry>
    <entry key="InportFunctionClockResolution">クロック分解能 (継承は -1):</entry>
    <entry key="InpFrmWksInterpolate">データを内挿する</entry>
    <entry key="InpFrmWksConnect">入力の接続</entry>
    <entry key="InpFrmWksConnectTip">UI を起動して入力を接続</entry>
    <entry key="InpFrameStatus">サンプリング モード:</entry>
    <entry key="IntegratorExtReset">外部リセット:</entry>
    <entry key="IntegratorInitCondSrc">初期条件のソース:</entry>
    <entry key="IntegratorInitCond">初期条件:</entry>
    <entry key="IntegratorLimitOutput">出力を制限する</entry>
    <entry key="IntegratorUpperSatLim">飽和の上限:</entry>
    <entry key="IntegratorLowerSatLim">飽和の下限:</entry>
    <entry key="IntegratorShowSatPort">飽和端子の表示</entry>
    <entry key="IntegratorShowStatePort">状態端子の表示</entry>
    <entry key="IntegratorWrapState">状態のラップ</entry>
    <entry key="IntegratorWrappedUpperValue">ラップした状態の上限値:</entry>
    <entry key="IntegratorWrappedLowerValue">ラップした状態の下限値:</entry>
    <entry key="IntegratorIgnoreLimit">線形化時に出力制限とリセットの設定を無視</entry>
    <entry key="LogicOperator">演算子:</entry>
    <entry key="LogicNumInputPorts">入力端子の数:</entry>
    <entry key="LookupInputValues">入力値のベクトル:</entry>
    <entry key="LookupOutputValues">テーブル データ:</entry>
    <entry key="PreLookupInputValues">ブレークポイント:</entry>
    <entry key="TableSpecification">仕様</entry>
    <entry key="DataSpecification">データの仕様:</entry>
    <entry key="LookupTableObject">名前:</entry>
    <entry key="BreakpointsSpecificationPrelookup">指定</entry>
    <entry key="BreakpointsSpecificationLookupND">ブレークポイントの指定:</entry>
    <entry key="BreakpointsFirstPoint">最初の点</entry>
    <entry key="BreakpointsNumPoints">点数</entry>
    <entry key="BreakpointsSpacing">間隔</entry>
    <entry key="PreLookupIdSearchMd">インデックス検索法:</entry>
    <entry key="PreLookupIdSearchByPreId">前回のインデックス結果を使ってインデックス検索を始める</entry>
    <entry key="PrelookupOutputSelection">出力の選択:</entry>
    <entry key="ExpectBusInput">インデックスと小数部をバスにする</entry>
    <entry key="OutputBusDataType">出力:</entry>
    <entry key="PreLookupOutputOnlyId">インデックスのみ出力</entry>
    <entry key="PreLookupIndexUnifiedDataType">インデックスのデータ型:</entry>
    <entry key="PreLookupIndexDataType">インデックスのデータ型 (例: sfix(16), uint(8)):</entry>
    <entry key="PreLookupIndexDataTypeMode">インデックスのデータ型モード:</entry>
    <entry key="PreLookupIndexOORInput">上限またはそれを超える入力に対して最後のブレークポイントを使用する</entry>
    <entry key="LookupTableActOutRange">範囲外入力の診断:</entry>
    <entry key="LookupTableInternalRulePriority">内部ルール優先順位:</entry>
    <entry key="PreLookupFractionDataTypeMode">小数部のデータ型モード:</entry>
    <entry key="PreLookupFractionUnifiedDataType">小数部のデータ型:</entry>
    <entry key="PreLookupFractionDataType">小数部のデータ型 (例: sfix(16), uint(8), float(''single'')):</entry>
    <entry key="PreLookupFractionScaling">小数部のスケーリング (傾き, 例. 2^-9):</entry>
    <entry key="AbsOutputScaling_EditField">出力のスケーリング (傾き, 例. 2^-9):</entry>
    <entry key="Lookup2DRowIndex">入力値の行インデックス:</entry>
    <entry key="Lookup2DColIndex">入力値の列インデックス:</entry>
    <entry key="LookupNdNumDims">テーブルの次元数:</entry>
    <entry key="LookupNDDirectNumDims">テーブルの次元数:</entry>
    <entry key="InterpndNumDims">次元数:</entry>
    <entry key="InterpndTable">テーブル データ:</entry>
    <entry key="InterpndInterpMethod">内挿法:</entry>
    <entry key="InterpndExtrapMethod">外挿法:</entry>
    <entry key="InterpndNumSelectDims">サブテーブル選択次元数:</entry>
    <entry key="InterpndCheckInCode">生成コード内のインデックスをチェック</entry>
    <entry key="InterpndValidLastIdxMayReachLast">インデックスの入力を最後のインデックスに達するようにする</entry>
    <entry key="MagAngInput">入力:</entry>
    <entry key="MATLABFcnFunction">MATLAB 関数:</entry>
    <entry key="MATLABFcnOutDims">出力の次元:</entry>
    <entry key="MATLABFcnOutSigType">出力信号タイプ:</entry>
    <entry key="MATLABFcnOut1D">2-D の結果を 1-D に変換</entry>
    <entry key="MemBlkInitCond">初期条件:</entry>
    <entry key="MemBlkInheritSampleTime">サンプル時間を継承</entry>
    <entry key="MergeNumInputs">入力数:</entry>
    <entry key="MergeInitOutput">初期出力:</entry>
    <entry key="MergeAllowUneqPortWid">異なる端子幅を許可</entry>
    <entry key="MergeInpPortOffsets">入力端子のオフセット:</entry>
    <entry key="MinMaxCollapseMode">適用範囲:</entry>
    <entry key="MinMaxCollapseDim">次元:</entry>
    <entry key="MinMaxFunction">関数:</entry>
    <entry key="MinMaxNumInPorts">入力端子の数:</entry>
    <entry key="ModelRefCRCSDebug">デバッグを有効にする</entry>
    <entry key="ModelRefCRCSRelease">リリースを選択:</entry>
    <entry key="ModelRefCRCSSampleTime">コシミュレーション サンプル時間:</entry>
    <entry key="ModelRefCRCSSetupScript">コシミュレーション セットアップ スクリプト:</entry>
    <entry key="ModelRefCRCSCleanupScript">コシミュレーション クリーンアップ スクリプト:</entry>
    <entry key="ModelRefCRCSVersion">コシミュレーション MATLAB バージョン:</entry>
    <entry key="ModelRefBlockDescription">指定したモデルを参照します。</entry>
    <entry key="ModelRefModelName">モデル名:</entry>
    <entry key="ModelRefParameterArgumentNames">モデルの引数:</entry>
    <entry key="ModelRefModelParametersToggle">インスタンス パラメーター</entry>
    <entry key="ModelRefParameterArgumentValues">モデルの引数値 (このインスタンス用):</entry>
    <entry key="ModelRefSimulationMode">シミュレーション モード:</entry>
    <entry key="ModelRefModelEventsSimulation">モデル イベントのシミュレーション:</entry>
    <entry key="ModelRefModelEventsSimulationToggle">モデル イベントのシミュレーション</entry>
    <entry key="ModelRefShowModelInitializePort">モデル初期化端子を表示</entry>
    <entry key="ModelRefShowModelReinitPorts">モデル再初期化端子を表示</entry>
    <entry key="ModelRefShowModelResetPorts">モデル リセット端子を表示</entry>
    <entry key="ModelRefShowModelTerminatePort">モデル終了端子を表示</entry>
    <entry key="ModelRefUseLocalSolverOptions">ソルバー オプション:</entry>
    <entry key="ModelRefSetLocalSolverUsage">ソルバーの使用法:</entry>
    <entry key="ModelRefInheritLocalSolver">参照モデルで指定されたソルバーを使用</entry>
    <entry key="ModelRefConfigureLocalSolver">ソルバーの構成</entry>
    <entry key="ModelRefNoLocalSolver">最上位モデルで指定されたソルバーを使用</entry>
    <entry key="ModelRefSetLocalSolverName">固定ステップ ソルバー:</entry>
    <entry key="ModelRefSetLocalSolverFixedStepSize">固定ステップ サイズ:</entry>
    <entry key="ModelRefSetLocalSolverCommunicationStepSize">通信ステップ サイズ:</entry>
    <entry key="ModelRefInputCompensationMethods">入力信号の処理:</entry>
    <entry key="ModelRefOutputApproximationMethods">出力信号の処理:</entry>
    <entry key="ModelRefScheduleRates">レートのスケジュール</entry>
    <entry key="ModelRefScheduleRatesWith">次を使用してレートをスケジュール:</entry>
    <entry key="ModelRefCodeInterface">コード インターフェイス:</entry>
    <entry key="ModelRefMainToggle">メイン</entry>
    <entry key="ModelRefLocalSolverToggle">ソルバー</entry>
    <entry key="ModelRefUseLocalSolver">ローカル ソルバーを使用:</entry>
    <entry key="ModelRefUseLocalSolverOn">オン</entry>
    <entry key="ModelRefUseLocalSolverOff">オフ</entry>
    <entry key="ModelRefLocalSolverName">ソルバー:</entry>
    <entry key="ModelRefLocalSolverFixedStep">固定ステップ:</entry>
    <entry key="ModelRefLocalSolverLoadModel">表示するモデルの読み込み</entry>
    <entry key="ModelRefLocalSolverProtected">保護</entry>
    <entry key="ModelRefSimulationInterface">シミュレーション インターフェイス:</entry>
    <entry key="MpSwitchNumInputs">データ端子数:</entry>
    <entry key="MPSwitch_DataPortOrder">データ端子の順序:</entry>
    <entry key="MpSwitch_DataPortIndices">データ端子インデックス (例: '{'1,[2,3]'}'):</entry>
    <entry key="MpSwitch_ZeroBasedIndexing">0 ベースのインデックスを使用</entry>
    <entry key="MpSwitch_MarkFixedInMinorTimeSteps">マイナー タイム ステップで固定としてマークする</entry>
    <entry key="MATLABSystemName">System object 名:</entry>
    <entry key="DataPortForDefaultCase">default ケースのデータ端子:</entry>
    <entry key="DiagnosticForDefaultCase">default ケースの診断:</entry>
    <entry key="MuxNumInputs">入力数:</entry>
    <entry key="MuxDisplayOpt">表示オプション:</entry>
    <entry key="MuxNonVirtualBus">非バーチャル バスとして出力</entry>
    <entry key="InheritFromInputs">バス オブジェクトからではなく入力からの名前を使用する</entry>
    <entry key="MatchInputsString">入力信号名をリストと一致させる</entry>
    <entry key="MuxBusObject">入力バスを検証するためのバス オブジェクト:</entry>
    <entry key="BusObjectName">登録するバス オブジェクト名:</entry>
    <entry key="OutportInitOutputSrc">初期出力の値のソース:</entry>
    <entry key="OutportDisabledOutput">ディセーブル時の出力:</entry>
    <entry key="OutportInitOutput">初期出力:</entry>
    <entry key="OutPortNonVirtualBus">親モデル内の非バーチャル バスとして出力</entry>
    <entry key="PermuteDimsOrder">順序:</entry>
    <entry key="CustomCodeFcnName">関数名:</entry>
    <entry key="CustomCodeUseLocalHeader">ローカルのヘッダー ファイルを使用:</entry>
    <entry key="CustomCodePortSpec">端子仕様:</entry>
    <entry key="CustomCodeMajorityColumn">列優先</entry>
    <entry key="CustomCodeMajorityRow">行優先</entry>
    <entry key="CustomCodeMajorityAny">任意</entry>
    <entry key="CustomCodeMajority">配列のレイアウト:</entry>
    <entry key="ProbeProbeWidth">幅の調査</entry>
    <entry key="ProbeProbeSampleTime">サンプル時間の調査</entry>
    <entry key="ProbeProbeComplexSignal">複素信号の検出</entry>
    <entry key="ProbeProbeDimensions">信号の次元の調査</entry>
    <entry key="ProbeProbeFrame">フレーム信号の検出</entry>
    <entry key="ProbeFrameDataType">信号フレームのデータ型:</entry>
    <entry key="ProbeComplexDataType">信号の実数/複素数に対するデータ型:</entry>
    <entry key="ProbeWidthDataType">幅に対するデータ型:</entry>
    <entry key="ProbeDimensionDataType">信号の次元のデータ型:</entry>
    <entry key="ProbeSampleTimeDataType">サンプル時間のデータ型:</entry>
    <entry key="ProdMultiplication">乗算:</entry>
    <entry key="ProdNumInputs">入力数:</entry>
    <entry key="ProdOptim">行列乗算の最適化:</entry>
    <entry key="ProdOperationType">適用範囲:</entry>
    <entry key="ProdOperationDim">次元:</entry>
    <entry key="ParamSourceLabelId">ソース</entry>
    <entry key="ParamValueLabelId">値</entry>
    <entry key="ParamNameLabelId">名前</entry>
    <entry key="BreakpointsParamGroupLabelId">ブレークポイント データ</entry>
    <entry key="TableParamGroupLabelId">テーブル データ</entry>
    <entry key="TableGroupLabelId">テーブル</entry>
    <entry key="QuantizeQuantInterval">量子化間隔:</entry>
    <entry key="RandNumMean">平均:</entry>
    <entry key="RandNumVar">分散:</entry>
    <entry key="RandNumInitSeed">シード:</entry>
    <entry key="RateTransDataIntegrity">データ転送中の整合性を確保</entry>
    <entry key="RateTransDeterministic">確定的にデータ転送を確保 (最大遅延)</entry>
    <entry key="RateTransDeferred">RTE モデルへの実装を延期</entry>
    <entry key="RateTransAccessed">実装はアクセスされる必要がある</entry>
    <entry key="RateTransOutportTsOpt">出力端子のサンプル時間オプション:</entry>
    <entry key="RateTransTsMultiple">サンプル時間の倍数 (&gt;0):</entry>
    <entry key="RateTransOutportTs">出力端子のサンプル時間:</entry>
    <entry key="RateTransType">データのレート変換:</entry>
    <entry key="RateLimRisingSlewRate">スルー レートの立ち上がり:</entry>
    <entry key="RateLimFallingSlewRate">スルー レートの立ち下り:</entry>
    <entry key="RateLimSampleTimeMode">サンプル時間モード: </entry>
    <entry key="ReferenceSourceBlock">ソース ブロック:</entry>
    <entry key="ReferenceSourceType">ソース タイプ:</entry>
    <entry key="ReferenceSourceProductName">ソース製品:</entry>
    <entry key="ReferenceSourceProductCode">ソース製品の基本コード:</entry>
    <entry key="RelaySwitchOnPoint">スイッチオン ポイント:</entry>
    <entry key="RelaySwitchOffPoint">スイッチオフ ポイント:</entry>
    <entry key="RelayOutputWhenOn">オンの時の出力:</entry>
    <entry key="RelayOutputWhenOff">オフの時の出力:</entry>
    <entry key="RelopOperator">関係演算子:</entry>
    <entry key="ResetInitInitCond">初期条件:</entry>
    <entry key="DelayBlkStateEnablePort">イネーブル端子を表示する</entry>
    <entry key="DelayBlkExternalReset">外部リセット:</entry>
    <entry key="DelayBlkDelayLength">遅延の長さ:</entry>
    <entry key="ComputDelayBlkLength">遅延量:</entry>
    <entry key="ParameterComputDelayLengthIsNotTunable">ダイアログ パラメーター ''{0}'' をシミュレーション中に変更することはできません。</entry>
    <entry key="ParameterComputDelaySrcTsIsContinous">Computational Delay ブロック ''{0}'' の入力サンプル時間は連続です。このブロックを Transport Delay ブロックに置き換えてください。</entry>
    <entry key="ParameterComputDelayLengthIsHigherThanPeriod">Computational Delay ブロック ''{0}'' に指定する遅延量は、駆動ブロックの期間サンプル時間より小さくなければなりません。</entry>
    <entry key="ParameterOwnerBlock">パラメーター オーナー ブロック:</entry>
    <entry key="AccessedParameterName">アクセスされたパラメーターの名前:</entry>
    <entry key="AccessWorkspaceVariable">モデル ワークスペース パラメーターへのアクセス</entry>
    <entry key="AccessBusElement">バス型パラメーターの要素へのアクセス</entry>
    <entry key="WorkspaceVariableName">ワークスペース変数名:</entry>
    <entry key="ParameterValidationEnable">パラメーターの検証</entry>
    <entry key="ParameterValidationEnableTooltip">パラメーターの検証をローカルで有効または無効にします。</entry>
    <entry key="DestinationTypeOptions">保存先:</entry>
    <entry key="DelayBlkUpperLimit">遅延の上限:</entry>
    <entry key="DelayBlkInitCond">初期条件:</entry>
    <entry key="DelayBlkPreventDFT">直達の防止</entry>
    <entry key="DelayBlkDiagnostic">遅延の長さの診断:</entry>
    <entry key="DelayBlkRemoveProtection">生成コード内の遅延の長さのチェックを削除</entry>
    <entry key="DelayBlkUseCirculer">リング バッファーを使用</entry>
    <entry key="ReshapeOutputDimensionality">出力次元:</entry>
    <entry key="ReshapeOutputDimensions">出力の次元:</entry>
    <entry key="RoundOperator">関数:</entry>
    <entry key="SaturateUpLim">上限:</entry>
    <entry key="SaturateLowLim">下限:</entry>
    <entry key="AssignmentNumDims">出力の次元数:</entry>
    <entry key="AssignmentOutputInitMode">出力 (Y) の初期化:</entry>
    <entry key="DSMEnableIndexing">インデックスの有効化</entry>
    <entry key="DSMNumDims">次元数:</entry>
    <entry key="SelectorNumDims">入力の次元数:</entry>
    <entry key="SelectorInputSize">入力の端子サイズ:</entry>
    <entry key="AssignSelectIndexOption">インデックス オプション</entry>
    <entry key="AssignSelectIndex">インデックス</entry>
    <entry key="AssignSelectOutputSize">出力サイズ</entry>
    <entry key="AssignSelectParameters">パラメーター</entry>
    <entry key="AssignSelectRuntimeRangeChecks">アクセラレータ シミュレーションで範囲外インデックスをチェック</entry>
    <entry key="AssignSelectRuntimeRangeChecksTooltip">アクセラレータ モードとラピッド アクセラレータ モードのシミュレーション中に範囲外インデックス エラーをチェックします。ノーマル モードのシミュレーション中には常にチェックが実行されます。</entry>
    <entry key="ScaleReciprocalGainFactor">ゲイン ファクターの逆数による出力のスケール</entry>
    <entry key="SecondOrderIntegratorReinitializeAtSaturation">x が飽和に達したときに dx/dt を再初期化</entry>
    <entry key="SecondOrderIntegratorIgnoreStateLimitsAndResetForLinearization">状態制限を無視し、線形化のためにリセット</entry>
    <entry key="SecondOrderIntegratorStateNameX">状態名 x:</entry>
    <entry key="SecondOrderIntegratorStateNameDXDT">状態名 dx/dt:</entry>
    <entry key="SecondOrderIntegratorAbsoluteToleranceX">絶対許容誤差 x:</entry>
    <entry key="SecondOrderIntegratorAbsoluteToleranceDXDT">絶対許容誤差 dx/dt:</entry>
    <entry key="SecondOrderIntegratorShowOutput">出力の表示:</entry>
    <entry key="SecondOrderIntegratorLimitX">制限 x</entry>
    <entry key="SecondOrderIntegratorLimitDXDT">制限 dx/dt</entry>
    <entry key="SecondOrderIntegratorUpperLimitX">上限 x:</entry>
    <entry key="SecondOrderIntegratorLowerLimitX">下限 x:</entry>
    <entry key="SecondOrderIntegratorUpperLimitDXDT">上限 dx/dt:</entry>
    <entry key="SecondOrderIntegratorLowerLimitDXDT">下限 dx/dt:</entry>
    <entry key="SecondOrderIntegratorWrapX">x のラップ</entry>
    <entry key="SecondOrderIntegratorWrappedUpperValueX">ラップした上限値 x:</entry>
    <entry key="SecondOrderIntegratorWrappedLowerValueX">ラップした下限値 x:</entry>
    <entry key="SecondOrderIntegratorICX">初期条件 x:</entry>
    <entry key="SecondOrderIntegratorICDXDT">初期条件 dx/dt:</entry>
    <entry key="SecondOrderIntegratorICSourceX">初期条件ソース x:</entry>
    <entry key="SecondOrderIntegratorICSourceDXDT">初期条件ソース dx/dt:</entry>
    <entry key="SfcnSfcnName">S-function 名:</entry>
    <entry key="SfcnSfnParams">S-function パラメーター:</entry>
    <entry key="SfcnPortCounts">端子数:</entry>
    <entry key="SfcnSfcnModules">S-function モジュール:</entry>
    <entry key="SiggenWaveform">波形:</entry>
    <entry key="SiggenAmplitude">振幅:</entry>
    <entry key="SiggenFrequency">周波数:</entry>
    <entry key="SiggenUnits">単位:</entry>
    <entry key="SignalConversionOutput">出力:</entry>
    <entry key="SignalConversionAlwaysCreateBuffer">''ブロック削減'' の最適化からこのブロックを排除する</entry>
    <entry key="SigSpecBusType">非バーチャル バスが必要</entry>
    <entry key="SigSpecDims">次元 (継承は -1):</entry>
    <entry key="SinWaveType">正弦波タイプ:</entry>
    <entry key="SinWaveAmplitude">振幅:</entry>
    <entry key="SinWaveBias">バイアス:</entry>
    <entry key="SinWaveFrequency">周波数 (rad/sec):</entry>
    <entry key="SinWavePhase">位相 (rad):</entry>
    <entry key="SinWaveNumSamplesPerPeriod">1 周期のサンプル数:</entry>
    <entry key="SinWaveOffsetSamples">オフセット サンプル数:</entry>
    <entry key="StateOwnerBlock">状態オーナー ブロック:</entry>
    <entry key="AccessedStateName">アクセスされた状態名:</entry>
    <entry key="StepStepTime">ステップ時間:</entry>
    <entry key="StepInitVal">初期値:</entry>
    <entry key="StepFinalVal">最終値:</entry>
    <entry key="SubsysShowPortLabels">端子ラベルを表示</entry>
    <entry key="ResetIdentifier">識別子:</entry>
    <entry key="EventName">イベント名:</entry>
    <entry key="EventType">イベント タイプ:</entry>
    <entry key="IncludeImplicitInitialize">暗黙的な初期化を含める</entry>
    <entry key="SubsysBlockChoice">ブロック選択:</entry>
    <entry key="SubsysTemplateBlock">テンプレート ブロック:</entry>
    <entry key="SubsysMemberBlocks">メンバー ブロック:</entry>
    <entry key="SubsysPermissions">読み取り/書き込みアクセス許可:</entry>
    <entry key="SubsysErrorFcn">エラー コールバック関数名:</entry>
    <entry key="SubsysTreatAtomic">Atomic サブシステムとして扱う</entry>
    <entry key="SubsysExplicitlySchedule">明示的にスケジュールする</entry>
    <entry key="SubsysScheduleAs">名前を付けてスケジュール</entry>
    <entry key="SubsysReinitializePorts">サブシステム再初期化端子の表示</entry>
    <entry key="SubsysIsInjector">これは Injector Subsystem です</entry>
    <entry key="SubsysTreatFunction">Simulink 関数として扱う</entry>
    <entry key="SimulinkFunctionArgName">引数名:</entry>
    <entry key="SubsysRTWSystemCode">関数のパッケージ化:</entry>
    <entry key="SubsysRTWInterfaceOptSS">関数インターフェイス:</entry>
    <entry key="SubsysRTWStandaloneSS">別々のデータをもつ関数</entry>
    <entry key="SubsysRTWMatchGrInterface">グラフィカル インターフェイスとの一致</entry>
    <entry key="SubsysRTWInlineFunctionSS">インラインのキーワードを含む関数</entry>
    <entry key="SubsysRTWFcnNameOpts">関数名オプション:</entry>
    <entry key="SubsysRTWFcnName">関数名:</entry>
    <entry key="SubsysRTWFileNameOpts">ファイル名オプション:</entry>
    <entry key="SubsysRTWFileName">ファイル名 (拡張子なし):</entry>
    <entry key="SubsysRTWMemSecFuncInitTerm">初期化/終了関数のメモリ セクション:</entry>
    <entry key="SubsysRTWMemSecFuncExecute">実行関数のメモリ セクション:</entry>
    <entry key="SubsysRTWMemSecDataConstants">定数のメモリ セクション:</entry>
    <entry key="SubsysRTWMemSecDataInternal">内部データのメモリ セクション:</entry>
    <entry key="SubsysRTWMemSecDataParameters">パラメーターのメモリ セクション:</entry>
    <entry key="SubsysPermitHierRes">階層の関連付けを許可:</entry>
    <entry key="SubsysMinAlgLoopOccurrences">疑似代数ループの発生の最小化</entry>
    <entry key="SubsysUnitMismatchHandling">単位の不一致の処理:</entry>
    <entry key="SubsysUnitSystemsAllowed">許可された単位系</entry>
    <entry key="SubsysAllowAllUnitSystems">すべての単位系を許可</entry>
    <entry key="SubsysEnableExecContextProp">サブシステムの境界全体に実行コンテキストの伝播</entry>
    <entry key="SubsysParameterDialogDescr">Subsystem ブロックの設定を選択します。コード生成パラメーターは非バーチャル サブシステムでのみ使用できます。バーチャル サブシステムに対しコード生成パラメーターを有効にするには、サブシステムの [Atomic サブシステムとして扱う] パラメーターを選択して、バーチャル サブシステムを非バーチャル サブシステムに変換します。</entry>
    <entry key="SupportPartialWrites">相互に排他的かつ完全な書き込みを確保</entry>
    <entry key="SumIconShape">アイコン形状:</entry>
    <entry key="SumListofSigns">符号リスト:</entry>
    <entry key="SumOperationType">適用範囲:</entry>
    <entry key="SumOperationDim">次元:</entry>
    <entry key="SwitchCriteria">1 番目の入力が通過する条件:</entry>
    <entry key="SwitchThreshold">しきい値:</entry>
    <entry key="SwitchOutputVarDims">異なるデータの入力サイズを許可する (可変サイズの出力信号となる)</entry>
    <entry key="FileName">ファイル名:</entry>
    <entry key="ToFileMatrixName">変数名:</entry>
    <entry key="ToFileSaveFormat">保存形式:</entry>
    <entry key="ToWksVarName">変数名:</entry>
    <entry key="ToWksMaxDataPoints">直近のデータ点数に制限:</entry>
    <entry key="ToWksSaveFormat">保存形式:</entry>
    <entry key="ToWksFixptAsFi">fi オブジェクトとして固定小数点データのログを記録する</entry>
    <entry key="ToWksNumInputs">入力数:</entry>
    <entry key="ToWksMaxRows">最大行数:</entry>
    <entry key="TrigFcnOperator">関数:</entry>
    <entry key="TrigRemoveProtectionAgainstOutOfRangeInput">範囲外入力に対する保護を削除する</entry>
    <entry key="TrigPortTrigType">トリガー タイプ:</entry>
    <entry key="TrigPortIsSimulinkFunction">Simulink 関数として扱う</entry>
    <entry key="TrigPortIsMessageFunction">メッセージ関数として処理</entry>
    <entry key="TrigPortTrigTime">トリガー時間:</entry>
    <entry key="TrigPortScheduleAperiodic">非周期的分割としてスケジュールする</entry>
    <entry key="TrigPortEmptyQueue">キュー取り込みオプション:</entry>
    <entry key="SimulinkFunctionVisibility">関数の可視性:</entry>
    <entry key="SimulinkFunctionUserScopeName">端子へのスコープ:</entry>
    <entry key="TrigPortSampleType">サンプル時間タイプ:</entry>
    <entry key="TrigPortFunctionClockResolution">クロック分解能 (継承は -1):</entry>
    <entry key="TrigPortOutDataType">出力データ型:</entry>
    <entry key="TrigPortInputSampleTime">トリガー信号サンプル時間:</entry>
    <entry key="TransDelayTimeDelay">時間遅延:</entry>
    <entry key="TransDelayInitOutput">初期出力:</entry>
    <entry key="InitBuffSize">初期バッファー サイズ:</entry>
    <entry key="TransDelayPadeOrder">パデ次数 (線形化用):</entry>
    <entry key="UseFixedBuffer">固定バッファー サイズを使用</entry>
    <entry key="VariableDelayType">遅延タイプの選択:</entry>
    <entry key="VTransDelayMaxDelay">最大遅延:</entry>
    <entry key="ContinuousStateAbsoluteTolerance">絶対許容誤差:</entry>
    <entry key="TransDelayHandleZeroDelay">0 遅延を扱う</entry>
    <entry key="UnitsDisplay">使用する単位表示:</entry>
    <entry key="URandNumMin">最小値:</entry>
    <entry key="URandNumMax">最大値:</entry>
    <entry key="VarNumInputs">入力数:</entry>
    <entry key="VarActivePortIdx">アクティブな端子インデックス:</entry>
    <entry key="WhileMaxIters">最大反復回数 (無制限の場合 -1):</entry>
    <entry key="WhileShowIterPort">反復回数の端子を表示</entry>
    <entry key="WhileBlockType">While ループ タイプ:</entry>
    <entry key="LookupMeth">ルックアップ手法:</entry>
    <entry key="ApproximationMethod">近似法:</entry>
    <entry key="TrigAngleUnit">角度の単位:</entry>
    <entry key="Shift_Bit">シフトするビット:</entry>
    <entry key="Shift_Bnp">シフトする 2 進小数点:</entry>
    <entry key="BitShiftDirection">方向</entry>
    <entry key="BitShiftNumber">数</entry>
    <entry key="BitShiftSource">ソース</entry>
    <entry key="CheckOORBitShift">生成コードで範囲外の 'シフトするビット' をチェック</entry>
    <entry key="DiagnosticOORShift">範囲外シフト値の診断:</entry>
    <entry key="BiasBias">バイアス:</entry>
    <entry key="MakeTableAnInput">テーブルを入力とする</entry>
    <entry key="InputSelectThisObject">テーブルからこのオブジェクトの選択を入力:</entry>
    <entry key="AlgebraicConstraintTolerance">許容誤差:</entry>
    <entry key="AlgebraicConstraintInitialValue">初期推定:</entry>
    <entry key="AlgebraicConstraintAlgorithmType">ソルバー:</entry>
    <entry key="AlgebraicConstraintType">制約:</entry>
    <entry key="BpDesignMax">ブレークポイントの最大値:</entry>
    <entry key="BpDesignMin">ブレークポイントの最小値:</entry>
    <entry key="ResetPortTriggerType">トリガー タイプのリセット:</entry>
    <entry key="ImpIterParallelInAccel">ラピッド アクセラレータ シミュレーションで並列実行を要求する</entry>
    <entry key="BlkMultithreadedSimMode">マルチスレッド シミュレーション:</entry>
    <entry key="InputProcessing">入力処理:</entry>
    <entry key="SubsysVariantObject">バリアント制御:</entry>
    <entry key="ModelVariant">バリアント</entry>
    <entry key="OverrideUsingVariant">バリアント:</entry>
    <entry key="GeneratePreprocessorConditionals">プリプロセッサの条件を生成</entry>
    <entry key="VariantActivationTime">バリアントのアクティベーションのタイミング:</entry>
    <entry key="TreatAsGroupedWhenPropagatingVariantConditions">バリアント条件の伝播時にはグループとして処理</entry>
    <entry key="PropagateConditions">Variant Subsystem の外部に条件を伝播する</entry>
    <entry key="FlexibleInterfaceMode">柔軟なインターフェイスを許可</entry>
    <entry key="EmptyChoiceVSS">組み込みの空の選択肢</entry>
    <entry key="PassThroughVSS">組み込みのパススルーの選択肢</entry>
    <entry key="PassThroughVariantControl">パススルーの選択肢のバリアント制御</entry>
    <entry key="EmptyChoiceVariantControl">バリアント制御の選択肢が空です</entry>
    <entry key="AZVC">組み込みの空の選択肢</entry>
    <entry key="LookupNdTunableTableSize">コード生成で調整可能なテーブル サイズをサポート</entry>
    <entry key="LookupNdMaxIndex">次元ごとの最大インデックス:</entry>
    <entry key="LookupNdUseOneInputForAll">すべての入力 (u) に対して 1 つの入力端子を使用</entry>
    <entry key="LookupNdIndexOORInput">最後のブレークポイントまたはそれを超える入力に対してテーブルの最後の値を使用する</entry>
    <entry key="LookupNdApplyBigProduct">可能であれば完全精度の固定小数点アルゴリズムを適用</entry>
    <entry key="LookupNdApplyAccurateEfficientRound">可能な場合、より精度と効率の高い丸めを適用する</entry>
    <entry key="LookupNdObsolete5thBP">5 N 番目のブレークポイント設定 (セル配列)</entry>
    <entry key="LookupNdFractionUnifType">小数部のデータ型:</entry>
    <entry key="RemoveRangeInCode">入力が範囲内と仮定</entry>
    <entry key="RemoveIndexInCode">インデックスが範囲内と仮定</entry>
    <entry key="CheckPWLBound_BoundData">データ範囲:</entry>
    <entry key="CheckPWLBound_LogInputs">ブロック入力信号のログ</entry>
    <entry key="CheckPWLBound_LogCallback">ログ コールバック:</entry>
    <entry key="SigToWksSaveTwoDim">2 次元信号の保存形式:</entry>
    <entry key="ElementSelection">要素の選択</entry>
    <entry key="ElementSelectionDetail1">選択された要素</entry>
    <entry key="ElementSelectionDetail2">選択する要素の指定:</entry>
    <entry key="ElementAssignment">要素の代入</entry>
    <entry key="ElementAssignmentDetail1">代入された要素</entry>
    <entry key="ElementAssignmentDetail2">代入する要素の指定:</entry>
    <entry key="SignalsInTheBus">バス内信号</entry>
    <entry key="ElementsInTheArray">配列内の要素</entry>
    <entry key="BusAssignedSignals">割り当てられる信号</entry>
    <entry key="BlockParameterDlg">ブロック パラメーター: {0} </entry>
    <entry key="FcnEntryPrototype">プロトタイプ:</entry>
    <entry key="FcnEntryArguments">引数: </entry>
    <entry key="FcnCallerInputArgSpec">入力引数の仕様 (例: int8(1)):</entry>
    <entry key="FcnCallerOutputArgSpec">出力引数の仕様 (例: int8(1)):</entry>
    <entry key="FcnCallerFunctionPrototype">関数プロトタイプ:</entry>
    <entry key="FcnCallerThisModel">このモデル</entry>
    <entry key="UpdateTags">タグの更新</entry>
    <entry key="VariantSourceCondition">バリアント制御:</entry>
    <entry key="SampleTimeWidgetSuggestion">このブロックでは推奨されません。削除するには -1 に設定します。</entry>
    <entry key="SampleTimeWidgetSuggestionConstant">このブロックでは推奨されません。''Inf'' に設定して削除してください。</entry>
    <entry key="SampleTimeWidgetReason">理由</entry>
    <entry key="LUTTunableTableSizeSuggestion">''SupportTunableTableSize'' は置き換えられています。使用は推奨されません。</entry>
    <entry key="LUTTunableTableSizeReason">理由</entry>
    <entry key="IsWebBlock">Web ブロック</entry>
    <entry key="IsWebBlockPanel">Web ブロック パネル</entry>
    <entry key="TreatAsComponent">コンポーネントとして扱う</entry>
    <entry key="ComponentLockOptions">コンポーネント オプション:</entry>
    <entry key="SampleTimeWidgetTypeLabel">タイプ:</entry>
    <entry key="SampleTimeWidgetValueLabel">値:</entry>
    <entry key="EnableVariant">バリアント条件を有効にする</entry>
    <entry key="NumOutputPorts">出力端子の数:</entry>
    <entry key="OutputPortLayout">出力端子のレイアウト:</entry>
    <entry key="Public">パブリック</entry>
    <entry key="SignalName">信号名:</entry>
    <entry key="PMCPortLocation">親サブシステムの端子の位置:</entry>
    <entry key="PMCPortNumber">端子番号:</entry>
    <entry key="ConcurrencyLatency">レイテンシ (サンプル数):</entry>
    <entry key="DataflowAutoFrameSize">フレーム サイズの自動計算:</entry>
    <entry key="NumIndexPorts">インデックス端子の数:</entry>
    <entry key="AlgorithmDescriptorAlgorithmName">アルゴリズム名:</entry>
    <entry key="AlgorithmDescriptorNumberOfInputs">入力数:</entry>
    <entry key="AlgorithmDescriptorInputBlock">入力 {0,number,integer} ブロック パス:</entry>
    <entry key="AlgorithmDescriptorNumberOfParameters">パラメーター数:</entry>
    <entry key="AlgorithmDescriptorParameterBlock">パラメーター {0,number,integer} ブロック パス:</entry>
    <entry key="AlgorithmDescriptorParameterName">パラメーター {0,number,integer} 名:</entry>
    <entry key="AlgorithmDescriptorNumberOfStates">状態数:</entry>
    <entry key="AlgorithmDescriptorStateBlock">状態 {0,number,integer} ブロック パス:</entry>
    <entry key="AlgorithmDescriptorNumberOfOutputs">出力数:</entry>
    <entry key="AlgorithmDescriptorOutputBlock">出力 {0,number,integer} ブロック パス:</entry>
    <entry key="AlgorithmDescriptorNumberOfAlgorithmParameters">アルゴリズム パラメーター数:</entry>
    <entry key="AlgorithmDescriptorAlgorithmParameterName">アルゴリズム パラメーター名 {0,number,integer}:</entry>
    <entry key="AlgorithmDescriptorAlgorithmParameterValue">アルゴリズム パラメーター値 {0,number,integer}:</entry>
    <entry key="AlgorithmDescriptorAlgorithmParameterPrimary">主な方法</entry>
    <entry key="AddSimscapeBusPort">新規端子の追加 </entry>
    <entry key="DeleteSimscapeBusPort">端子の削除 </entry>
    <entry key="DeleteSimscapeBusForConnectedPort">接続されている端子に対して削除は無効です </entry>
    <entry key="DeleteSimscapeBusForMultiSelection">複数の端子が選択されている場合、削除は無効です </entry>
    <entry key="RefreshSimscapeBusDialog">ダイアログの更新 </entry>
    <entry key="BusTypeFromBusObject">接続タイプ:</entry>
    <entry key="HierarchyStrings">階層文字列 </entry>
    <entry key="NoPortsToDisplayInSpreadsheet">表示される端子はありません </entry>
    <entry key="fohBlkInitialOutput">初期出力:</entry>
    <entry key="fohOutAlgoType">出力アルゴリズム:</entry>
    <entry key="fohBlkErrorTol">相対外挿誤差が超えた場合にリセット: </entry>
    <entry key="fohAllowContinuousInput">連続入力を許可</entry>
    <entry key="EntityTransportDelayOutputNumberOfEntities">ブロックでのエンティティ出力数、n</entry>
    <entry key="Capacity">容量:</entry>
    <entry key="PWMGenPeriod">周期: </entry>
    <entry key="PWMGenRunAtFixedTimeIntervals">固定の時間間隔で実行 </entry>
    <entry key="PWMGenSampTime">サンプル時間: </entry>
    <entry key="PWMGenDisallowZeroDutyCycle">ゼロのデューティ比を許可しない</entry>
    <entry key="PWMGenInitDelay">初期遅延: </entry>
    <entry key="VPGRunAtFixedTimeIntervals">固定の時間間隔で実行 </entry>
    <entry key="VPGSampTime">サンプル時間: </entry>
    <entry key="VPGAllowZeroPulseWidth">ゼロのパルス幅を許可</entry>
    <entry key="NeighborhoodDimension">近傍サイズ: </entry>
    <entry key="Stride">ストライド: </entry>
    <entry key="ProcessingOffset">処理オフセット: </entry>
    <entry key="ProcessingWidth">処理幅: </entry>
    <entry key="PaddingMethod">パディング オプション: </entry>
    <entry key="PaddingValue"> パディング定数: </entry>
    <entry key="OutputSubsection">出力サイズ: </entry>
    <entry key="UsageType">使用法のタイプ: </entry>
    <entry key="AllowAsynchronousExecution">関数呼び出しを非同期で実行</entry>
    <entry key="OutputErrorStatus">出力エラー ステータス</entry>
    <entry key="ErrorStatusNames">エラー ステータス名</entry>
    <entry key="ErrorStatusValues">エラー ステータスの指定 (例: int8(0)):</entry>
    <entry key="FilterSpatialDimensions">フィルターの空間次元: </entry>
    <entry key="NumberOfChannels">チャネル数: </entry>
    <entry key="NumberOfFilters">フィルター数: </entry>
    <entry key="NumberOfGroups">グループの数: </entry>
    <entry key="ActivateFasterSimulation">高速なシミュレーションの有効化 </entry>
    <entry key="ConvMathOperation">算術演算: </entry>
    <entry key="ZCType">ゼロクロッシング タイプ:</entry>
    <entry key="ResetType">リセット タイプ:</entry>
    <entry key="WidthBlkConstSampleTime">常に定数のサンプル時間を使用</entry>
    <entry key="DescriptorStateSpaceE">E:</entry>
    <entry key="DescriptorStateSpaceA">A:</entry>
    <entry key="DescriptorStateSpaceB">B:</entry>
    <entry key="DescriptorStateSpaceC">C:</entry>
    <entry key="DescriptorStateSpaceD">D:</entry>
    <entry key="StateSpaceA">A:</entry>
    <entry key="StateSpaceB">B:</entry>
    <entry key="StateSpaceC">C:</entry>
    <entry key="StateSpaceD">D:</entry>
    <entry key="CustomCodeVarExpr">VarExpr:</entry>
  </message>
</rsccat>
