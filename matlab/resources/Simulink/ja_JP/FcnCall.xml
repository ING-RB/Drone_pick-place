<?xml version="1.0" encoding="UTF-8"?>
<!--Copyright 2025 The MathWorks, Inc.-->

<rsccat xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.0" locale="ja_JP" product="Simulink" xsi:noNamespaceSchemaLocation="../../resources/schema/msgcat.xsd">
  <message>
    <entry key="FcnCallConnMustBeSFcnOrCoreBlk">ブロック ''{0}'' の関数呼び出し端子が、関数呼び出し信号を生成しない ''{1}'' に接続しています。関数呼び出し信号を生成するブロックには、Stateflow チャート、パラメーター [関数呼び出しの出力] が選択されたルートレベルの Inport ブロック、S-Function などがあります。</entry>
    <entry key="FcnCallConnMustBeRootFcnCallInportBlk">ブロック ''{0}'' の関数呼び出し端子が、関数呼び出し信号を生成しない ''{1}'' に接続しています。 &lt;actions exclusiveFixIts="yes"&gt; &lt;action type="fixit"&gt; &lt;cmd&gt;set_param_action(''{2}'', ''OutputFunctionCall'', ''on'');&lt;/cmd&gt; &lt;txt&gt;Inport ブロック ''{2}'' で [関数呼び出しの出力] パラメーターを選択する。&lt;/txt&gt; &lt;/action&gt; &lt;action type="suggestion"&gt; &lt;txt&gt;あるいは、Function-Call Generator、Stateflow チャート、または S-Function を使用して関数呼び出し信号を生成する。&lt;/txt&gt; &lt;/action&gt; &lt;/actions&gt;
    </entry>
    <entry key="FcnCallConnMustBeFromPort0">ブロック ''{0}'' の Function-Call 端子は、出力端子が関数呼び出し信号を生成するブロックに接続しなければなりません。関数呼び出し信号を生成できるブロックには、Stateflow チャート、パラメーター [関数呼び出しの出力] が選択されたルートレベルの Inport ブロック、S-Function (端子 1 からのみ信号を生成しなければならない) などがあります。''{1}'' は関数呼び出し信号を生成していません。</entry>
    <entry key="InvFcnCallConn">"関数呼び出し" 接続が無効です。</entry>
    <entry key="InvFcnCallConnEnd_FcnCallSysEnd">&lt;sldiag objui="inport" objparam="{1,number,integer}" objname="{0}"&gt;入力端子 {1,number,integer}&lt;/sldiag&gt; の要素 {2,number,integer} でブロック ''{0}'' で終わる接続が無効です。</entry>
    <entry key="InvFcnCallConnStart_NonSFcnStart">有効な関数呼び出し開始プログラムではないため、''{0}'' (出力端子 {1,number,integer}、要素 {2,number,integer}) から開始する接続は無効です。関数呼び出し信号を生成するブロックには、Stateflow チャート、ルートレベルの Inport ブロック、S-Function などがあります。</entry>
    <entry key="InvFcnCallConn_MultSys">&lt;sldiag objui="outport" objparam="{1,number,integer}" objname="{3}"&gt;出力端子 {1,number,integer}&lt;/sldiag&gt; の要素 {2,number,integer} での関数呼び出しイニシエーター ''{0}'' からの関数呼び出し接続が無効です。接続先の関数呼び出しブロック ''{3}'' が非バーチャル サブシステム内にあります。エラーを修正するには、関数呼び出しイニシエーターとして、接続先の関数呼び出しブロックをモデル階層の同じ (またはより上位) のレベルに置いてください。</entry>
    <entry key="InvFcnCallConn_NonFcnCallEnd">関数呼び出しブロックでないため、''{0}'' で終わる接続が無効です。</entry>
    <entry key="InvFcnCallConn_SFcnStart">関数呼び出し開始プログラム ''{0}'' が出力端子 {1,number,integer} の要素 {2,number,integer} で関数呼び出しブロックを呼び出そうとしていますが、この端子要素には関数呼び出し信号の出力が構成されていません。</entry>
    <entry key="InvFcnCallConn_Async">出力端子の要素 {1,number,integer} に関数呼び出しを作成する S-Function ''{0}'' から無効な接続が開始します。非同期の関数呼び出しジェネレーターによってサブシステムまたは Model ブロックの関数呼び出し端子を駆動しなければなりません。 </entry>
    <entry key="InvFcnCallInport_Dst">Invalid function-call connection from Inport block ''{0}'' to function-call block ''{1}''. Cannot invoke a function-call from function-call initiator ''{2}'' that is outside nonvirtual subsystem ''{3}'' with the function-call block.</entry>
    <entry key="InvFcnCallInport_VarDst">Inport ブロック ''{0}'' から Variant Source ブロックまたは Variant Subsystem の Outport ''{1}'' への関数呼び出し接続が無効です。関数呼び出しブロックをもつ非バーチャル サブシステム ''{3}'' の外部にある関数呼び出しイニシエーター ''{2}'' から関数呼び出しを行うことはサポートされていません。</entry>
    <entry key="InvFcnCallInport_Src">Invalid function-call connection originating from function-call initiator ''{0}'' on &lt;sldiag objui="outport" objparam="{1,number,integer}" objname="{2,number,integer}"&gt;output port {1,number,integer}&lt;/sldiag&gt; element {2,number,integer}. The function-call initiator cannot invoke a function-call block inside a nonvirtual subsystem ''{3}'' via the subsystem input port {4,number,integer}.</entry>
    <entry key="InvFcnCallConn_MdlRef_RefBld">関数呼び出し開始プログラム ''{0}'' から Model ブロック ''{2}'' の端子 {1,number,integer} への関数呼び出し接続が無効です。関数呼び出し開始プログラムは、モデルの階層構造内で Model ブロックと同じレベルに配置されなければなりません。モデルの階層構造内で関数呼び出し開始プログラムを異なるレベルのままにする場合は、サブシステム ''{3}'' の [関数のパッケージ化] を [インライン] に変更してください。</entry>
    <entry key="InvFcnCallSigToStream">Unable to log signal that originates from &lt;sldiag objui="outport" objparam="{0,number,integer}" objname="{1}"&gt;output port {0,number,integer}&lt;/sldiag&gt; of block ''{1}'' because logging function-call signals is not supported. To stop logging the signal, ensure that it is not marked for signal logging, connected to a To Workspace block or Record block, or connected to an Outport block if output logging is enabled.</entry>
    <entry key="InvFcnCallSigToWks">The To Workspace block ''{0}'' is connected to a function-call signal.  To Workspace blocks do not support function-call signals.</entry>
    <entry key="InvVariantSrcInExportFcn">複数の入力端子をもつバリアント ソース ブロック ''{0}'' が ''{1}'' のルート ウィンドウで見つかりました。エクスポート関数用にモデルが構成されている場合、ルート ウィンドウでは単一の入力端子をもつバリアント ソース ブロックのみがサポートされます。</entry>
    <entry key="FcnCallGeneratorNumOfIterationsMustBeScalar">Invalid setting for Function-Call Generator block ''{0}''. &lt;sldiag objui="blockdlg" objparam="{1}"&gt;''Number of iterations''&lt;/sldiag&gt; must be scalar when &lt;sldiag objui="blockdlg" objparam="{2}"&gt;''Disallow wide output''&lt;/sldiag&gt; option is selected.</entry>
    <entry key="FcnCallGeneratorNumOfIterationsMustBePositive">Invalid setting for Function-Call Generator block ''{0}''. Each element of &lt;sldiag objui="blockdlg" objparam="{1}"&gt;''Number of iterations''&lt;/sldiag&gt; parameter must be a positive integer.</entry>
    <entry key="FcnCallGeneratorUnsupportedEnablePortDataType">Function-Call Generator ブロック ''{1}'' のイネーブル入力端子に対しデータ型 ''{0}'' はサポートされません。データ型は double、single、int8、uint8、int16、uint16、int32、uint32、または boolean でなければなりません。</entry>
    <entry key="RootOutportCannotAcceptFcnCall">ルートレベル Outport ブロック ''{0}'' は、関数呼び出し信号を受け入れることができません。</entry>
    <entry key="CannotMuxFcnCallRootInportWithOtherBlock">
  ルートレベルの Inport ブロック ''{0}'' は関数呼び出し信号を出力するよう設定されています。そのため、その出力をブロック ''{2}'' による ''{1}'' の出力と組み合わせることはできません。
</entry>
    <entry key="NoFCSSCycles">関数呼び出しサイクルはサポートされていません。関数呼び出しサイクルは、関数呼び出しイニシエーター ブロック (Stateflow チャートまたは S-Function ブロック) を含むブロックが、その同じブロックの他の関数呼び出し入力端子を直接または間接に駆動すると発生します。</entry>
    <entry key="FCSSCycle1">ブロック ''{0}'' の出力端子 {1} が、ブロック ''{2}'' の入力端子 {3} を駆動しています。</entry>
    <entry key="FCSSCycle2">ブロック ''{0}'' の出力端子 {1} とブロック ''{2}'' の出力端子 {3} が、ブロック ''{4}'' の入力端子 {5} を駆動しています。</entry>
    <entry key="FCSSCycle3">{0} と ''{1}'' の関数呼び出し出力端子が、ブロック ''{2}'' の入力端子 {3} を駆動しています。</entry>
    <entry key="MessageCannotBeFcnCallInpArg">
  無効なメッセージ信号が ''{3}'' の&lt;sldiag objui="inport" objparam="{0,number,integer}" objname="{1}"&gt;出力端子 {2,number,integer}&lt;/sldiag&gt; から ''{1}'' の&lt;sldiag objui="outport" objparam="{2,number,integer}" objname="{3}"&gt;入力端子 {0,number,integer}&lt;/sldiag&gt; に渡されています。メッセージ信号をイニシエーターから Function-Call ブロックに渡すことは許可されません。
</entry>
    <entry key="MessageCannotBeFcnCallRetVal">
  無効なメッセージ信号が ''{3}'' の&lt;sldiag objui="inport" objparam="{0,number,integer}" objname="{1}"&gt;出力端子 {2,number,integer}&lt;/sldiag&gt; から ''{1}'' の&lt;sldiag objui="outport" objparam="{2,number,integer}" objname="{3}"&gt;入力端子 {0,number,integer}&lt;/sldiag&gt; に渡されています。メッセージ信号を Function-Call ブロックからイニシエーターにフィードバックすることは許可されていません。
</entry>
    <entry key="UnresolvableRootDataPortGroupInLoop">
  このモデルのシミュレーションをアクセラレータ モードで行うことはできません。このモデルをノーマル モードでシミュレーションするか、Asynchronous Task Specification ブロック ''{1}'' の [タスクの優先順位] パラメーターを空でない値に変更することを検討してください。&lt;actions exclusiveFixIts="yes"&gt;&lt;action type="fixit"&gt;&lt;cmd&gt;set_param_action(''{0}'', ''SimulationMode'', ''Normal'');&lt;/cmd&gt;&lt;txt&gt;[シミュレーション モード] を [ノーマル] に変更する。&lt;/txt&gt;&lt;/action&gt;&lt;/actions&gt;
</entry>
    <entry key="NGSrcsForMdlBlkEventInitsInLoop">
  データ依存性違反が検出されました。Model ブロック ''{0}'' にモデル イベント端子がある場合、そのモデル初期化端子が最高の優先順位を持ち、その後は、モデル リセット端子、モデル終了端子、その他の関数呼び出し入力端子の順に続きます。したがって、モデル イベント端子のいずれかを駆動するブロック ''{1}'' を ''{2}'' の前に実行する必要があります。しかし、これら 2 つのブロック間のデータ依存関係はこの要件に違反しています。詳細については、&lt;a href="matlab:helpview([docroot ''/toolbox/simulink/helptargets.map''], ''function_call_adaptation'')"&gt;ヘルプ ページ&lt;/a&gt;を参照してください。
</entry>
    <entry key="NGSrcsForAsyncFcnCallInLoop">
  非同期関数呼び出しイニシエーターおよび対応する Rate Transition ブロック、あるいはそのような Rate Transition ブロックを含むサブシステムまたは参照モデルについて、データ依存性違反が検出されました。詳細については、&lt;a href="matlab:helpview([docroot ''/toolbox/simulink/helptargets.map''], ''rate_transitions_and_ansynchronous_blocks'')"&gt;ヘルプ ページ&lt;/a&gt;を参照してください。
</entry>
    <entry key="NonGraphicalSrcsLoop">
  データ依存性違反が検出されました。詳細については、&lt;a href="matlab:helpview([docroot ''/toolbox/simulink/helptargets.map''], ''function_call_adaptation'')"&gt;ヘルプ ページ&lt;/a&gt;を参照してください。
</entry>
    <entry key="NGSrcForMultiRateInitsForExpFcnMdlRefInLoop">
  Model ブロック ''{1}'' が&lt;a href="matlab:helpview([docroot ''/toolbox/simulink/helptargets.map''], ''export_function_models'')"&gt;エクスポート関数モデル&lt;/a&gt; ''{0}'' を参照する場合、その関数呼び出しイニシエーターはレート モノトニックで実行しなければなりません。これは、速いレートで&lt;sldiag objui="inport" objparam="{3}" objname="{1}"&gt;入力端子 ''{3}''&lt;/sldiag&gt; を駆動する ''{2}'' を、遅いレートで&lt;sldiag objui="inport" objparam="{5}" objname="{1}"&gt;入力端子 ''{5}''&lt;/sldiag&gt; を駆動する ''{4}'' より前に実行しなければならないことを意味します。
</entry>
    <entry key="NGSrcForSameRateInitsForIRTPortsInLoop">
  Model ブロック ''{0}'' の [モデル イベントのシミュレーション] のパラメーターが 1 つ以上選択されています。Model ブロックにモデル イベント端子がある場合、そのモデル初期化端子が最高の優先順位を持ち、その後はモデル リセット端子、モデル終了端子、その他の関数呼び出し入力端子の順です。2 つのイニシエーターが同じタスク内で実行される場合、参照モデルの&lt;sldiag objui="inport" objparam="{2}" objname="{0}"&gt;入力端子 ''{2}''&lt;/sldiag&gt; を駆動する ''{1}'' が、&lt;sldiag objui="inport" objparam="{4}" objname="{0}"&gt;入力端子 ''{4}''&lt;/sldiag&gt; を駆動する ''{3}'' より前に実行されなければならないことを意味します。
</entry>
    <entry key="NGSrcForSameRateInitsForAdaptedMdlRefInLoop">
  Model ブロック ''{0}'' の &lt;sldiag objui="blockdlg" objparam="ShowModelPeriodicEventPorts"&gt;[レートのスケジュール]&lt;/sldiag&gt; パラメーターが選択されています。このため、その関数呼び出し入力端子をサンプル時間またはタスクの優先順位に従って実行しなければなりません。2 つのイニシエーターが同じタスク内で実行される場合、参照モデルの&lt;sldiag objui="inport" objparam="{2}" objname="{0}"&gt;入力端子 ''{2}''&lt;/sldiag&gt; を駆動する ''{1}'' が、&lt;sldiag objui="inport" objparam="{4}" objname="{0}"&gt;入力端子 ''{4}''&lt;/sldiag&gt; を駆動する ''{3}'' より前に実行されなければならないことを意味します。
</entry>
    <entry key="TaskCausedNonGraphicalSrcsLoopSuggestion1">
  
  &lt;actions exclusiveFixIts="yes"&gt; &lt;action type="fixit"&gt; &lt;cmd&gt;set_param_action(''{0}'', ''Solver'', ''FixedStepDiscrete'');set_param_action(''{0}'', ''SolverMode'', ''MultiTasking'');&lt;/cmd&gt; &lt;txt&gt;これらの関数呼び出し入力端子を別のタスクで実行することによるこの問題の修正を検討する。解決策の 1 つとして、モデル ''{0}'' のマルチタスク モードへの変更による、異なるサンプル時間をもつ開始プログラムの別タスクでの実行があります。&lt;/txt&gt; &lt;/action&gt; &lt;/actions&gt;
</entry>
    <entry key="TaskCausedNonGraphicalSrcsLoopSuggestion2">
  
  &lt;actions exclusiveFixIts="yes"&gt; &lt;action type="suggestion"&gt; &lt;txt&gt;モデル ''{0}'' がマルチタスク モードのときに開始プログラムが別タスクで実行するように、開始プログラムに異なるサンプル時間を指定することを検討する。&lt;/txt&gt; &lt;/action&gt; &lt;/actions&gt;
</entry>
    <entry key="NGSrcForMuxedFcnCallInLoop">
  ''{2}'' は ''{3}'' の前に並べ替えなければなりません。これらは両方とも、Mux ブロック ''{4}'' 経由で関数呼び出しブロック ''{1}'' の入力端子 {0,number,integer} を駆動するためです。同一タスク内にある複数のイニシエーターの関数呼び出し出力信号を多重化して 1 つの関数呼び出しブロックが呼び出される場合、信号は Mux ブロックへの接続順序でスケジュールされます。
</entry>
    <entry key="NGSrcForMergeFcnCallInLoop">
  ''{2}'' は ''{3}'' の前に並べ替えなければなりません。これらは両方とも、Merge ブロック ''{4}'' 経由で関数呼び出しブロック ''{1}'' の入力端子 {0,number,integer} を駆動するためです。同一タスク内にある複数のイニシエーターの関数呼び出し出力信号をマージして 1 つの関数呼び出しブロックが呼び出される場合、信号は Merge ブロックへの接続順序でスケジュールされます。
</entry>
    <entry key="NGSrcForExpFcnMdlRootPortGroupInLoop">
  関数呼び出しのルートレベル Inport ブロック ''{0}'' の仕様では、このブロックをエクスポート関数モデルの ''{1}'' より前に実行する必要があることが示されています。エクスポート関数モデルにおける、関数呼び出しのルートレベル Inport ブロックの相対的なスケジュール順序には、ブロックの優先順位、指定されたサンプル時間、端子番号の各要因が影響します。
</entry>
    <entry key="PeriodicFCSSMustBeCalledOnceWhenEnabled">The function-call initiator executed function-call subsystem ''{0}'' multiple times on time step {1}. This periodic function-call subsystem must be invoked periodically once it is activated (enabled) and until it is terminated (disabled).
    &lt;actions exclusiveFixIts="yes"&gt;
        &lt;action type="suggestion"&gt;
            &lt;txt&gt;Consider adjusting the initiator to invoke the function-call periodically.&lt;/txt&gt;
        &lt;/action&gt;
        &lt;action type="fixit"&gt;
            &lt;cmd&gt;set_param_action(''{2}'', ''SampleTimeType'', ''triggered'');&lt;/cmd&gt;
            &lt;txt&gt;Alternatively, consider changing dialog parameter &lt;sldiag objui="blockdlg" objparam="SampleTimeType"&gt;'Sample time type'&lt;/sldiag&gt; of ''{2}'' from 'periodic' to 'triggered'.&lt;/txt&gt;
        &lt;/action&gt;
    &lt;/actions&gt;
    </entry>
    <entry key="PeriodicFcnCallMdlMustBeCalledOnceWhenEnabled">関数呼び出しイニシエーターは、タイム ステップ {1} で関数呼び出し Model ブロック ''{0}'' を複数回実行しました。この周期的な関数呼び出しブロックは、アクティブ (有効) になってから終了する (無効になる) まで、定期的に呼び出されなければなりません。&lt;actions exclusiveFixIts="yes"&gt; &lt;action type="suggestion"&gt; &lt;txt&gt;関数呼び出しを定期的に呼び出すようイニシエーターを調整することを検討する。&lt;/txt&gt; &lt;/action&gt; &lt;action type="suggestion"&gt; &lt;txt&gt;あるいは、''{2}'' のダイアログ パラメーター &lt;sldiag objui="blockdlg" objparam="SampleTimeType"&gt;[サンプル時間タイプ]&lt;/sldiag&gt; を [周期的] から [トリガー] に変更することを検討する。&lt;/txt&gt; &lt;/action&gt; &lt;/actions&gt;
</entry>
    <entry key="PeriodicFCSSMustNotBeCalledWhenDisabled">関数呼び出しブロック ''{0}'' は周期的なサンプル時間をもつため、その関数呼び出し開始プログラムで非アクティブ (ディセーブル) にされたときのタイム ステップ中に実行してはなりません。関数呼び出し開始プログラムによってタイム ステップ ''{1}'' で関数呼び出しブロックの実行とディセーブルが行われました。</entry>
    <entry key="RootPeriodicFcnCallMustBeCalledOnceWhenEnabled">The function-call initiator executed function-call block ''{0}'' multiple times on time step {1}. This periodic function-call block must be invoked periodically at a rate of {2} once it is activated (enabled) and until it is terminated (disabled).
    &lt;actions exclusiveFixIts="yes"&gt;
        &lt;action type="suggestion"&gt;
            &lt;txt&gt;Consider adjusting the initiator to invoke the function-call periodically.&lt;/txt&gt;
        &lt;/action&gt;
        &lt;action type="suggestion"&gt;
            &lt;txt&gt;Alternatively, consider changing dialog parameter &lt;sldiag objui="blockdlg" objparam="SampleTimeType"&gt;'Sample time type'&lt;/sldiag&gt; of ''{3}'' from 'periodic' to 'triggered'.&lt;/txt&gt;
        &lt;/action&gt;
     &lt;/actions&gt;
    </entry>
    <entry key="RootPeriodicFcnCallMustBeCalledOnceWhenEnabled2">関数呼び出しイニシエーターは、タイム ステップ {1} で関数呼び出しブロック ''{0}'' を複数回実行しました。この周期的な関数呼び出しブロックは、アクティブ (有効) になってから終了する (無効になる) まで、{2} のレートで定期的に呼び出されなければなりません。関数呼び出しを定期的に呼び出すようイニシエーターを調整することを検討してください。</entry>
    <entry key="RootPeriodicFcnCallMustBeCalledWhenEnabled2">関数呼び出しイニシエーターは、タイム ステップ {1} で関数呼び出しブロック ''{0}'' を実行しませんでした。この周期的な関数呼び出しブロックは、アクティブ (有効) になってから終了する (無効になる) まで、{2} のレートで定期的に呼び出されなければなりません。関数呼び出しを定期的に呼び出すようイニシエーターを調整することを検討してください。</entry>
    <entry key="RootPeriodicFcnCallWithAbsTimeMustBeCalledWhenEnabled">関数呼び出しイニシエーターは、タイム ステップ {1} で関数呼び出しブロック ''{0}'' を実行しませんでした。この周期的な関数呼び出しブロックには、絶対時間または経過時間を使用する ''{3}'' が含まれており、アクティブ (有効) になってから終了する (無効になる) まで、{2} のレートで定期的に呼び出されなければなりません。関数呼び出しを定期的に呼び出すようイニシエーターを調整することを検討してください。</entry>
    <entry key="PeriodicEventPortCannotBeGrounded">Model ブロック ''{0}'' の [レートのスケジュール] パラメーターが選択され、かつ [次を使用してレートをスケジュール] が [端子] に設定されている場合、その関数呼び出し入力端子 ''{1}'' は、周期的なサンプル時間をもつため、関数呼び出しイニシエーターによって有効 (イネーブル) になるときに周期的に実行されなければなりません。ただし、この関数呼び出し入力端子はアクティブなイニシエーターに接続されていないため、呼び出されることはありません。</entry>
    <entry key="PeriodicEventPortMustBeCalledOnceWhenEnabled">入力端子 ''{0}'' に接続されている関数呼び出しイニシエーターは、タイム ステップ ''{2}'' で Model ブロック ''{1}'' を複数回実行しました。Model ブロックの [レートのスケジュール] パラメーターが選択され、かつ [次を使用してレートをスケジュール] が [端子] に設定されている場合、Model ブロックは、関数呼び出しイニシエーターによってアクティブ (有効) になってから終了する (無効になる) まで、周期的に実行されなければなりません。</entry>
    <entry key="PeriodicEventPortMustBeCalledWhenEnabled">入力端子 ''{0}'' に接続されている関数呼び出しイニシエーターは、タイム ステップ ''{2}'' で Model ブロック ''{1}'' を実行しませんでした。Model ブロックの [レートのスケジュール] パラメーターが選択され、かつ [次を使用してレートをスケジュール] が [端子] に設定されている場合、Model ブロックは、関数呼び出しイニシエーターによってアクティブ (有効) になってから終了する (無効になる) まで、周期的に実行されなければなりません。</entry>
    <entry key="AccExpFcnMdlPeriodicFcnCallMustBeCalledOnceWhenEnabled">
  関数呼び出しイニシエーター ''{2}'' は、時間 {3} に Model ブロック ''{1}'' の関数呼び出し入力端子 ''{0}'' を複数回実行しました。参照モデル内で、Model ブロックの対応する入力端子によって駆動される関数呼び出しブロックは、周期的な関数呼び出しブロックに構成されています。これは、関数呼び出しイニシエーターによってアクティブ (有効) になってから終了する (無効になる) まで周期的に実行されなければなりません。
</entry>
    <entry key="AccExpFcnMdlPeriodFCWithAbsElpsTMustBeCalledWhenEnabled">
      関数呼び出しイニシエーター ''{2}'' は、時間 {3} に Model ブロック ''{1}'' の関数呼び出し入力端子 ''{0}'' を実行しませんでした。Model ブロックの対応する入力端子によって駆動される関数呼び出しブロックが、周期的な関数呼び出しブロックに設定されています。これには ''{4}'' が含まれています。これは、[レートのスケジュール] パラメーターが選択されているか、絶対時間もしくは経過時間を使用している Model ブロックで、いったんアクティブ (有効) になってから終了する (無効になる) まで定期的に実行されなければなりません。
    </entry>
    <entry key="ExpFcnMdlMustNotBeEnabledDuringSim">Model ブロック ''{0}'' が参照するモデルには、関数呼び出し信号を出力するルートの Inport があります。ルートの Inport によって駆動される Function-Call Subsystem は、シミュレーション開始時に有効にしなければなりません。また、シミュレーション中に無効にしたり、再度有効にしてはなりません。しかし、時間 {1} で、''{3}'' の出力端子 {2,number,integer} から発生する関数呼び出し信号が、Model ブロックの入力端子 {4,number,integer} から関数を有効にしようとしています。</entry>
    <entry key="ExpFcnMdlMustNotBeDisabledDuringSim">Model ブロック ''{0}'' が参照するモデルには、関数呼び出し信号を出力するルートの Inport があります。ルートの Inport によって駆動される Function-Call Subsystem は、シミュレーション開始時に有効にしなければなりません。また、シミュレーション中に無効にしたり、再度有効にしてはなりません。しかし、時間 {1} で、''{3}'' の出力端子 {2,number,integer} から発生する関数呼び出し信号が、Model ブロックの入力端子 {4,number,integer} から関数を無効にしようとしています。</entry>
    <entry key="ExplicitFCSSCalledWhenNotEnabled">関数呼び出し開始プログラム ''{0}'' は、タイム ステップ ''{2}'' で非アクティブ (ディセーブル) にされている Function-Call Subsystem ''{1}'' を実行しようとしました。Function-Call Subsystem は実行前に関数呼び出し開始プログラムでアクティブになっていなければなりません。</entry>
    <entry key="ExplicitFCSSDisabledWhenDisabled">関数呼び出し開始プログラム ''{0}'' は、タイム ステップ ''{2}'' で Function-Call Subsystem ''{1}'' を再度ディセーブルにしようとしました。Function-Call Subsystem は、同じ関数呼び出し開始プログラムで再度ディセーブルにすることはできないため、この関数呼び出し開始プログラムの実行は失敗します。</entry>
    <entry key="ExplicitFCSSEnabledWhenEnabled">関数呼び出し開始プログラム ''{0}'' は、タイム ステップ ''{2}'' で Function-Call Subsystem ''{1}'' を再度イネーブルにしようとしました。Function-Call Subsystem は、同じ関数呼び出し開始プログラムで再度アクティブにすることはできないため、この関数呼び出し開始プログラムの実行は失敗します。</entry>
    <entry key="SfcnNotAdvCallingDisable">関数呼び出し開始プログラム ''{0}'' は、ssSetExplicitFCSSCtrl のような機能が構成されていないため、ssDisableSystemWithTid を呼び出せません。</entry>
    <entry key="SfcnNotAdvCallingEnable">関数呼び出し開始プログラム ''{0}'' は、ssSetExplicitFCSSCtrl のような機能が構成されていないため、ssEnableSystemWithTid を呼び出せません。</entry>
    <entry key="PeriodicFCSSCannotBeChildOfTriggeredFCSS">Function-call subsystem ''{0}'' is configured to execute periodically. Therefore, it cannot be placed inside a triggered function-call subsystem or model ''{1}''.
    &lt;actions exclusiveFixIts="yes"&gt;
        &lt;action type="fixit"&gt;
            &lt;cmd&gt;set_param_action(''{2}'', ''SampleTimeType'', ''triggered'');&lt;/cmd&gt;
            &lt;txt&gt;Consider changing dialog parameter &lt;sldiag objui="blockdlg" objparam="SampleTimeType"&gt;'Sample time type'&lt;/sldiag&gt; of ''{2}'' from 'periodic' to 'triggered'.&lt;/txt&gt;
        &lt;/action&gt;
        &lt;action type="fixit"&gt;
            &lt;cmd&gt;set_param_action(''{3}'', ''SampleTimeType'', ''periodic'');&lt;/cmd&gt;
            &lt;txt&gt;Alternatively, consider changing dialog parameter &lt;sldiag objui="blockdlg" objparam="SampleTimeType"&gt;'Sample time type'&lt;/sldiag&gt; of ''{3}'' to 'periodic'.&lt;/txt&gt;
        &lt;/action&gt;
     &lt;/actions&gt;
    </entry>
    <entry key="PeriodicFCSSCannotBeChildOfTriggeredFCSS2">関数呼び出しブロック ''{0}'' は定期的に実行するよう構成されています。そのため、トリガーされた Function-Call Subsystem またはモデル ''{1}'' 内には配置できません。&lt;actions exclusiveFixIts="yes"&gt; &lt;action type="suggestion"&gt; &lt;txt&gt;''{2}'' のダイアログ パラメーター &lt;sldiag objui="blockdlg" objparam="SampleTimeType"&gt;[サンプル時間タイプ]&lt;/sldiag&gt; を [周期的] から [トリガー] に変更することを検討する。&lt;/txt&gt; &lt;/action&gt; &lt;action type="fixit"&gt; &lt;cmd&gt;set_param_action(''{3}'', ''SampleTimeType'', ''periodic'');&lt;/cmd&gt; &lt;txt&gt;あるいは、''{3}'' のダイアログ パラメーター &lt;sldiag objui="blockdlg" objparam="SampleTimeType"&gt;[サンプル時間タイプ]&lt;/sldiag&gt; を [周期的] に変更することを検討する。&lt;/txt&gt; &lt;/action&gt; &lt;/actions&gt;
</entry>
    <entry key="PeriodicFCSSCannotBeChildOfTriggeredSS">Function-call subsystem ''{0}'' is configured to execute periodically. Therefore, it cannot be placed inside a triggered subsystem ''{1}''.
    &lt;actions exclusiveFixIts="yes"&gt;
        &lt;action type="fixit"&gt;
            &lt;cmd&gt;set_param_action(''{2}'', ''SampleTimeType'', ''triggered'');&lt;/cmd&gt;
            &lt;txt&gt;Consider changing dialog parameter &lt;sldiag objui="blockdlg" objparam="SampleTimeType"&gt;'Sample time type'&lt;/sldiag&gt; of ''{2}'' from 'periodic' to 'triggered'.&lt;/txt&gt;
        &lt;/action&gt;
     &lt;/actions&gt;
    </entry>
    <entry key="PeriodicFCSSCannotBeChildOfTriggeredSS2">関数呼び出しブロック ''{0}'' は定期的に実行するよう構成されています。そのため、Triggered Subsystem ''{1}'' 内には配置できません。&lt;actions exclusiveFixIts="yes"&gt; &lt;action type="suggestion"&gt; &lt;txt&gt;''{2}'' のダイアログ パラメーター &lt;sldiag objui="blockdlg" objparam="SampleTimeType"&gt;[サンプル時間タイプ]&lt;/sldiag&gt; を [周期的] から [トリガー] に変更することを検討する。&lt;/txt&gt; &lt;/action&gt; &lt;/actions&gt;
</entry>
    <entry key="PeriodicFCSSCallerMustHaveDiscreteTs">
Function-Call Subsystem ''{0}'' は定期的に実行するように設定されています。そのため、離散サンプル時間をもつ開始プログラムで呼び出さなければなりません。
</entry>
    <entry key="InvRootLvlPeriodicFcnCallPort">Trigger Port ブロック ''{0}'' の [サンプル時間タイプ] ダイアログ パラメーターは [周期的] に指定されています。このブロックはモデルのルート レベルに配置されているため、[サンプル時間] パラメーターを -1 に設定することはできません。&lt;actions exclusiveFixIts="yes"&gt; &lt;action type="suggestion"&gt; &lt;txt&gt;離散サンプル時間の指定を検討する。&lt;/txt&gt; &lt;/action&gt; &lt;action type="fixit"&gt; &lt;cmd&gt;set_param_action(''{0}'', ''SampleTimeType'', ''triggered'');&lt;/cmd&gt; &lt;txt&gt;あるいは、''{0}'' のダイアログ パラメーター &lt;sldiag objui="blockdlg" objparam="SampleTimeType"&gt;[サンプル時間タイプ]&lt;/sldiag&gt; を [トリガー] に変更することを検討する。&lt;/txt&gt; &lt;/action&gt; &lt;/actions&gt;
</entry>
    <entry key="InvRootInportFcnCallMultiIteration">
    Since the function-call root-level Inport block ''{0}'' has specified a discrete sample time ''{1}'', and none of function-call blocks it directly drives is set up to execute periodically, executing the function-call multiple times at a given sample time is not supported. However, the workspace variable specified as the external input has specified the block will invoke function-call multiple times at time ''{2}''. Consider either updating the workspace variable so that at any time step the function-call will be invoked only once, or set up any function-call subsystem this root-level Inport block directly drives to execute periodically, by specifying dialog parameter 'Sample time type' to 'periodic' on the Trigger Port block inside the function-call subsystem.
    </entry>
    <entry key="AdaptedModelInvalidExecOrder1">
    When the Model block ''{0}'' has the ''Schedule rates'' parameter selected and ''Schedule rates with'' is set to ''Ports'', all its function-call input ports must be invoked in the sequence of the task priorities of specified rates. Function-call &lt;sldiag objui="inport" objparam="{1}" objname="{0}"&gt;input port ''{1}''&lt;/sldiag&gt; was specified a discrete rate {2}, which has a higher priority than that of discrete rate {4} specified for function-call input port ''{3}''. However, at time {5}, function-call &lt;sldiag objui="inport" objparam="{3}" objname="{0}"&gt;input port ''{3}''&lt;/sldiag&gt; was invoked before ''{1}''.
    </entry>
    <entry key="AdaptedModelInvalidExecOrder2">
    When the Model block ''{0}'' has the ''Schedule rates'' parameter selected and ''Schedule rates with'' is set to ''Ports'', all its function-call input ports must be invoked in the sequence of the specified task priorities. Function-call &lt;sldiag objui="inport" objparam="{1}" objname="{0}"&gt;input port ''{1}''&lt;/sldiag&gt; was specified a task priority {2,number,integer} via an Asynchronous Task Specification block inside the referenced model, which has a higher priority than the task priority {4,number,integer} specified for function-call input port ''{3}''. However, at time {5}, function-call &lt;sldiag objui="inport" objparam="{3}" objname="{0}"&gt;input port ''{3}''&lt;/sldiag&gt; was invoked before ''{1}''.
    </entry>
    <entry key="InvalidExecOrderForFcnsAdaptedToPartitions">
Model ブロック ''{0}'' が 'スケジュール エディター' を使用してレートをスケジューリングしている場合、非同期関数呼び出しに対応する分割はすべて、指定されたタスクの優先順位に従って呼び出さなければなりません。関数呼び出し&lt;sldiag objui="inport" objparam="{1}" objname="{0}"&gt;入力端子 ''{1}''&lt;/sldiag&gt; には参照モデル内の Asynchronous Task Specification ブロック経由でタスク優先順位 {2,number,integer} が指定されました。これはタスク優先順位 {4,number,integer} をもつ関数呼び出し&lt;sldiag objui="inport" objparam="{3}" objname="{0}"&gt;入力端子 ''{3}''&lt;/sldiag&gt; より高い優先順位をもちます。しかし、時間 {5} で、分割 ''{6}'' が ''{7}'' の前に呼び出されました。
</entry>
    <entry key="AdaptedModelInvalidExecOrder3">
    When the Model block ''{0}'' has the ''Schedule rates'' parameter selected and ''Schedule rates with'' is set to ''Ports'', all its function-call input ports must be invoked in the sequence of the specified task priorities. Function-call &lt;sldiag objui="inport" objparam="{1}" objname="{0}"&gt;input port ''{1}''&lt;/sldiag&gt; was specified a task priority {2,number,integer} via an Asynchronous Task Specification block inside the referenced model, which has a higher priority than the discrete rate {4} specified for function-call input port ''{3}''. However, at time {5}, function-call &lt;sldiag objui="inport" objparam="{3}" objname="{0}"&gt;input port ''{3}''&lt;/sldiag&gt; was invoked before ''{1}''.
    </entry>
    <entry key="DataDepViolationInvolvingDataPortGroup">検出されたデータ依存性エラーは、関数呼び出し信号を出力するルートレベル Inport ブロックによって駆動される Function-Call ブロックの少なくとも 1 つに関連しています。モデル ''{0}'' では、関数呼び出し信号を出力するルートレベル Inport ブロックによって駆動されないすべてのブロックの実行は、対応する関数呼び出しが起動される前または後のいずれかでなければなりません。このデータ依存性エラーの詳細を以下に示します。</entry>
    <entry key="DataDepViolationInvolvingDataPortGroup1">ルートレベル Inport ブロック ''{2}'' によって Function-Call ブロック ''{1}'' が駆動された後に、ブロック ''{0}'' を実行しなければなりません。</entry>
    <entry key="DataDepViolationInvolvingDataPortGroup1a">ブロック ''{0}'' はルートレベル Inport ブロック ''{1}'' の後に実行しなければなりません。</entry>
    <entry key="DataDepViolationInvolvingDataPortGroup2">ルートレベル Inport ブロック ''{2}'' によって Function-Call ブロック ''{1}'' が駆動される前に、ブロック ''{0}'' を実行しなければなりません。</entry>
    <entry key="DataDepViolationInvolvingDataPortGroup2a">ルートレベル Inport ブロック ''{1}'' によって駆動される Function-Call ブロック ''{0}'' は、別のルートレベル Inport ブロック ''{3}'' によって駆動される Function-Call ブロック ''{2}'' の前に実行しなければなりません。</entry>
    <entry key="DataDepViolationInvolvingFcnCallPortGroups">検出されたデータ依存ループは、関数呼び出し信号を出力するルートレベル Inport ブロックによって駆動される少なくとも 2 つの Function-Call ブロックに関連しています。このループの詳細を以下に示します。</entry>
    <entry key="DataDepViolationInvolvingFcnCallPortGroup">ルートレベル Inport ブロック ''{1}'' によって駆動される Function-Call ブロック ''{0}'' は、別のルートレベル Inport ブロック ''{3}'' によって駆動される Function-Call ブロック ''{2}'' の出力を読み取らなければなりません。ただし、後者の Function-Call ブロックの出力は、前者の出力から直接的または間接的に計算されます。</entry>
    <entry key="DataDepViolationInvolvingFcnCallPortGroup2">ルートレベル Inport ブロック ''{1}'' によって駆動される Function-Call ブロック ''{0}'' は、別のルートレベル Inport ブロック ''{2}'' の後に実行しなければなりません。ただし、後者のブロックの出力は、前者の出力から直接的または間接的に計算する Function-Call ブロックを起動します。</entry>
    <entry key="NonInlinedSFcnCannotCallModelBlkWithFcnCallInput">Model ブロック ''{2}'' の入力端子 {1,number,integer} で関数呼び出し入力を起動する非インライン S-Function ''{0}'' について、コード生成はサポートされていません。対応する TLC 実装を指定することによって、非インライン S-Function ''{3}'' をインライン S-Function に変換することを検討してください。</entry>
    <entry key="ExpFcnMdlInvUnionRateWithGroundSrc">
  &lt;a href="matlab:helpview([docroot ''/toolbox/simulink/helptargets.map''], ''export_function_models'')"&gt;エクスポート関数モデル&lt;/a&gt; ''{0}'' をモデル参照として使用することはできません。ルート レベルの Outport ブロック ''{1}'' では、接地されたソースを、複数のエクスポートされた関数 (初期化関数、リセット関数、終了関数) からの信号と混在させてはなりません。
</entry>
    <entry key="BranchedFunctionCallCannotProduceRetVal">関数呼び出し開始プログラム ''{0}'' の関数呼び出し信号は正しく分岐されていません。この分岐された関数呼び出しネットワークの一部である関数呼び出しブロック ''{1}'' は次の要件に違反しています。ブロック出力信号を関数呼び出し開始プログラムに直接フィードバックすることはできません。ブロックを挿入してこのフィードバック信号に無駄時間を挿入することを検討してください。</entry>
    <entry key="BranchedFunctionCallInvalidBranching">関数呼び出しイニシエーター ''{2}'' の&lt;sldiag objui="outport" objparam="{1,number,integer}" objname="{2}"&gt;出力端子 {1,number,integer}&lt;/sldiag&gt; の要素 {0,number,integer} からの関数呼び出し信号が正しく分岐していません。''{3}'' に接続されている関数呼び出し信号分岐を Function-Call Split ブロックを使用して作成し直さなければなりません。</entry>
    <entry key="BranchedFunctionCallInvalidCommonInitiatorCallingFCSS">関数呼び出しイニシエーター ''{1}'' の&lt;sldiag objui="outport" objparam="{0,number,integer}" objname="{1}"&gt;出力端子 {0,number,integer}&lt;/sldiag&gt; からの関数呼び出し信号が正しく分岐されていません。関数呼び出し信号は、ブロック ''{5}'' の&lt;sldiag objui="inport" objparam="{4}" objname="{5}"&gt;入力端子 {4}&lt;/sldiag&gt; の要素 {2,number,integer} と要素 {3,number,integer} に送信されます。複数のイニシエーターを使用して Function-Call ブロックを呼び出すには、ブロックを呼び出す関数呼び出し信号をすべて一意にしなければなりません。</entry>
    <entry key="BranchedFunctionCallInvalidCommonInitiatorCallingNonSS">関数呼び出しイニシエーター ''{1}'' の&lt;sldiag objui="outport" objparam="{0,number,integer}" objname="{1}"&gt;出力端子 {0,number,integer}&lt;/sldiag&gt; からの関数呼び出し信号が正しく分岐されていません。関数呼び出し信号は、ブロック ''{5}'' の&lt;sldiag objui="inport" objparam="{4,number,integer}" objname="{5}"&gt;入力端子 {4,number,integer}&lt;/sldiag&gt; の要素 {2,number,integer} と要素 {3,number,integer} に送信されます。複数のイニシエーターを使用して Function-Call ブロックを呼び出すには、ブロックを呼び出す関数呼び出し信号をすべて一意にしなければなりません。</entry>
    <entry key="BranchedFunctionCallInvalidCompInfo">関数呼び出しイニシエーター ''{1}'' の&lt;sldiag objui="outport" objparam="{0,number,integer}" objname="{1}"&gt;出力端子 {0,number,integer}&lt;/sldiag&gt; からの関数呼び出し信号が正しく分岐されていません。関数呼び出しブロック ''{2}'' と ''{3}'' は、分岐された関数呼び出しネットワーク内のすべての関数呼び出しブロックがモデルの同じ非バーチャル階層レベルに常駐しなければならないという要件に違反しています。</entry>
    <entry key="BranchedFunctionCallInvalidFcnCallBlock">関数呼び出しイニシエーター ''{1}'' の&lt;sldiag objui="outport" objparam="{0,number,integer}" objname="{1}"&gt;出力端子 {0,number,integer}&lt;/sldiag&gt; からの関数呼び出し信号が正しく分岐されていません。モデルをノーマル モードでシミュレートする場合にのみ、分岐された関数呼び出しネットワークで S-Function ブロック ''{2}'' がサポートされます。このモデルのシミュレーション モードを [ノーマル] に変更するか、次の回避策を使用することを検討してください: Stateflow チャートなどの関数呼び出しイニシエーターを内部にもつ Function-Call Subsystem を挿入する。挿入した Function-Call Subsystem の関数呼び出し入力端子に、''{3}'' からの元の関数呼び出し信号が接続するように接続を変更し、挿入した Function-Call Subsystem の内部の関数呼び出しイニシエーターにより S-Function ブロックを駆動する。</entry>
    <entry key="BranchedFunctionCallInvalideMultipleCaller">関数呼び出しイニシエーター ''{1}'' の&lt;sldiag objui="outport" objparam="{0,number,integer}" objname="{1}"&gt;出力端子 {0,number,integer}&lt;/sldiag&gt; からの関数呼び出し信号が正しく分岐されていません。関数呼び出しブロック ''{2}'' が複数のイニシエーターによって呼び出されています。分岐された関数呼び出しネットワーク内の各関数呼び出しブロックは一意のイニシエーターによって呼び出さなければなりません。</entry>
    <entry key="BranchedFunctionCallInvalidWideFcnCall">関数呼び出しイニシエーター ''{1}'' の&lt;sldiag objui="outport" objparam="{0,number,integer}" objname="{1}"&gt;出力端子 {0,number,integer}&lt;/sldiag&gt; からの関数呼び出し信号が正しく分岐されていません。関数呼び出しイニシエーター ''{2}'' が複数の要素をもつ関数呼び出し信号を出力しています。分岐された関数呼び出しネットワーク内のすべての関数呼び出しイニシエーターは、スカラー関数呼び出し信号を出力しなければなりません。</entry>
    <entry key="NonInlinedSFcnCannotInvokeBranchedFcnCall">分岐関数呼び出し信号を呼び出す非インライン S-Function ''{0}'' には、コード生成がサポートされていません。対応する TLC 実装を指定することによって、非インライン S-Function をインライン S-Function に変換することを検討してください。</entry>
    <entry key="FcnCallLatchDisallowVarSizeInput">Function-Call Feedback Latch ブロック ''{0}'' への入力信号が可変サイズの信号か、可変サイズの信号を含むバス信号です。このブロックは可変サイズの信号入力をサポートしていません。</entry>
    <entry key="FcnCallLatchInvalidDstBlock">Function-Call Feedback Latch ブロック ''{0}'' の出力が無効な接続先 ''{1}'' に接続しています。Function-Call Feedback Latch ブロックの出力は、関数呼び出しブロックのデータ入力端子に接続しなければなりません。</entry>
    <entry key="FcnCallLatchInvalidDstSFcn">Function-Call Feedback Latch ブロック ''{0}'' の出力が無効な接続先 ''{1}'' に接続しています。モデルをノーマル モードでシミュレートする場合にのみ、S-Function ブロックのデータ入力端子から Function-Call Feedback Latch ブロックの出力への接続が許可されます。</entry>
    <entry key="FcnCallLatchInvalidDstPort">Function-Call Feedback Latch ブロック ''{0}'' の出力がブロック ''{2}'' の無効な接続先端子 {1,number,integer} に接続しています。Function-Call Feedback Latch ブロックの出力は、Function-Call Subsystem または関数呼び出しモデルのデータ入力端子に接続しなければなりません。</entry>
    <entry key="FcnCallLatchInvalidDstPortOfMdlBlk">Function-Call Feedback Latch ブロック ''{0}'' の出力を Model ブロック ''{2}'' の&lt;sldiag objui="inport" objparam="{1}" objname="{2}"&gt;入力端子 ''{1}''&lt;/sldiag&gt; に接続できません。このデータ入力端子は ''{2}'' のいずれの関数呼び出し入力端子にも関連付けられていません。</entry>
    <entry key="FcnCallLatchInvalidDstPortOfExpSFcnBlk">Function-Call Feedback Latch ブロック ''{0}'' の出力を、関数呼び出しをエクスポートするように構成された S-Function ブロック ''{2}'' の&lt;sldiag objui="inport" objparam="{1,number,integer}" objname="{2}"&gt;入力端子 {1,number,integer}&lt;/sldiag&gt; に接続できません。この S-Function ブロックに 1 つを超える関数呼び出し入力端子が含まれるためです。</entry>
    <entry key="FcnCallLatchInvalidDstPortOfFcnCallCoreBlk">Function-Call Feedback Latch ブロック ''{0}'' の出力を、関数呼び出しをエクスポートするように設定されたブロック ''{2}'' の&lt;sldiag objui="inport" objparam="{1,number,integer}" objname="{2}"&gt;入力端子 {1,number,integer}&lt;/sldiag&gt; に接続できません。このブロックに複数の関数呼び出し入力端子が含まれるためです。</entry>
    <entry key="FcnCallLatchInvalidDstWithMultiCaller">Function-Call Feedback Latch ブロック ''{0}'' の出力を非スカラー関数呼び出しトリガー信号で Function-Call Subsystem ''{1}'' に接続することはできません。入力信号をラッチするには、対応する Inport ブロックで [Function-Call Subsystem 出力のフィードバック信号の入力をラッチする] オプションを選択してください。 </entry>
    <entry key="FcnCallLatchInvalidMultiDsts">Function-Call Feedback Latch ブロック ''{0}'' の出力が複数の接続先に接続しています。Function-Call Feedback Latch ブロックの出力は、Function-Call Subsystem またはモデルの 1 つのデータ入力端子に接続しなければなりません。</entry>
    <entry key="FcnCallLatchInvalidMultiDstsDetail">ブロック ''{1}'' の&lt;sldiag objui="inport" objparam="{0,number,integer}" objname="{1}"&gt;入力端子 {0,number,integer}&lt;/sldiag&gt; が Function-Call Feedback Latch ブロック ''{2}'' の出力に接続しています。</entry>
    <entry key="FcnCallLatchInvalidMultiDstBlocks">Function-Call Feedback Latch ブロック ''{0}'' の出力が複数の接続先ブロックに接続されています。Function-Call Feedback Latch ブロックの出力は、1 つの Function-Call Subsystem ブロックまたは Model ブロックに接続しなければなりません。</entry>
    <entry key="FcnCallLatchInvalidMultiDstsBlocksDetail"> ブロック ''{0}'' およびブロック ''{1}'' が、Function-Call Feedback Latch ブロック ''{2}'' の出力に接続されています。</entry>
    <entry key="FcnCallLatchInvalidMultiDstPortGroup">Function-Call Feedback Latch ブロック ''{0}'' の出力は、エクスポートされた複数の関数を駆動する Model ブロック ''{2}'' の入力端子 ''{1}'' に接続しています。Function-Call Feedback Latch ブロックの出力は、エクスポートされた関数を最大で 1 つ駆動する端子に接続できます。</entry>
    <entry key="FcnCallLatchInvalidDst">Function-Call Feedback Latch ブロック ''{0}'' の出力は、Function-Call Subsystem または関数呼び出しモデルのデータ入力に接続しなければなりません。</entry>
    <entry key="FcnCallLatchNoFeedbackSignal1a">Function-Call Feedback Latch ブロック ''{0}'' は、関数呼び出しブロックに関連するフィードバック信号に接続していません。これは、分岐された関数呼び出しネットワークでは、ソース ブロック ''{1}'' が接続先ブロック ''{2}'' より前に実行されるようにスケジュールされているためです。Function-Call Feedback Latch ブロックを削除することを検討してください。</entry>
    <entry key="FcnCallLatchNoFeedbackSignal1b">Function-Call Feedback Latch ブロック ''{0}'' は、関数呼び出しブロックに関連するフィードバック信号に接続していません。これは、ソース ブロック ''{1}'' が接続先ブロック ''{2}'' よりも関数的に上位にあるため、接続先ブロックよりも前に実行されるためです。Function-Call Feedback Latch ブロックを削除することを検討してください。</entry>
    <entry key="FcnCallLatchNoFeedbackSignal2">Function-Call Feedback Latch ブロック ''{0}'' が、関数呼び出しブロックに関連するフィードバック信号に接続していません。そのソース ブロック ''{1}'' と接続先ブロック ''{2}'' は、共通の開始プログラムからの関数呼び出し信号で駆動されていません。Function-Call Feedback Latch ブロックを削除してみてください。</entry>
    <entry key="FcnCallLatchNoFeedbackSignal3">Function-Call Feedback Latch ブロック ''{0}'' が、関数呼び出しブロックに関連するフィードバック信号に接続していません。その入力は、関数呼び出しブロックからではありません。Function-Call Feedback Latch ブロックを削除してみてください。</entry>
    <entry key="FcnCallLatchRedundantSSInportLatched">Function-Call Feedback Latch ブロック ''{0}'' を ''{2}'' の&lt;sldiag objui="inport" objparam="{1,number,integer}" objname="{2}"&gt;入力端子 {1,number,integer}&lt;/sldiag&gt; の前に配置する必要はありません。''{3}'' で [Function-Call Subsystem 出力のフィードバック信号の入力をラッチする] ダイアログ パラメーターが選択されているためです。Function-Call Feedback Latch ブロックを削除するか、ダイアログ パラメーターをオフにすることを検討してください。</entry>
    <entry key="FcnCallLatchRedundantSimulinkFcnLatched">Function-Call Feedback Latch ブロック ''{0}'' を Simulink 関数 ''{2}'' の&lt;sldiag objui="inport" objparam="{1,number,integer}" objname="{0}"&gt;入力端子 {1,number,integer}&lt;/sldiag&gt; の前に配置する必要はありません。この Simulink Function ブロックがすべての入力信号を既にラッチしているためです。Function-Call Feedback Latch ブロックの削除を検討してください。</entry>
    <entry key="FcnCallLatchRedundantSimulinkFcnInMdlRefLatched">Function-Call Feedback Latch ブロック ''{0}'' は不要です。このブロックは、参照モデル内に Simulink 関数 ''{3}'' をもつ Model ブロック ''{2}'' の&lt;sldiag objui="inport" objparam="{1}" objname="{2}"&gt;入力端子 ''{1}''&lt;/sldiag&gt; の前に配置されていますが、この Simulink Function ブロックはすべての入力信号を既にラッチしています。Function-Call Feedback Latch ブロックを削除することを検討してください。</entry>
    <entry key="FcnCallLatchRedundantMdlRefInportLatched">Function-Call Feedback Latch ブロック ''{0}'' を ''{2}'' の&lt;sldiag objui="inport" objparam="{1}" objname="{0}"&gt;入力端子 ''{1}''&lt;/sldiag&gt; の前に配置する必要はありません。これは、参照モデル内のルートレベル Inport ブロックでダイアログ パラメーター [Function-Call Subsystem 出力のフィードバック信号の入力をラッチする] がオンになっているためです。Function-Call Feedback Latch ブロックを削除するか、ダイアログ パラメーターをオフにすることを検討してください。</entry>
    <entry key="FcnCallLatchInvalidWideFcnCall">Function-Call Feedback Latch ブロック ''{0}'' の出力を関数呼び出しブロック ''{1}'' に接続することはできません。関数呼び出しイニシエーター ''{2}'' によって ''{1}'' が呼び出され、複数の要素をもつ関数呼び出し信号を出力するため、この設定は誤りです。Function-Call Feedback Latch ブロックの出力は、スカラー関数呼び出し信号を出力する関数呼び出しイニシエーターによって呼び出される関数呼び出しブロックに接続しなければなりません。</entry>
    <entry key="FcnCallLatchCannotWorkWithNonInlinedSFcn">Function-Call Feedback Latch ブロック ''{1}'' と組み合わせて使用される Function-Call ブロックを起動する非インライン S-Function ''{0}'' について、コード生成はサポートされていません。対応する TLC 実装を指定することによって、非インライン S-Function ''{2}'' をインライン S-Function に変換することを検討してください。</entry>
    <entry key="FcnCallSplitBlkHasInvalidSrc">Function-Call Split ブロック ''{0}'' は関数呼び出しイニシエーターで駆動されなければなりません。ただし、このブロックの入力はブロック ''{2}'' の&lt;sldiag objui="outport" objparam="{1,number,integer}" objname="{2}"&gt;出力端子 {1,number,integer}&lt;/sldiag&gt; から発生し、関数呼び出し信号ではありません。</entry>
    <entry key="FcnCallSplitDisallowVarSizeInput">Function-Call Split ''{0}'' への入力信号が可変サイズの信号です。このブロックは可変サイズの信号入力をサポートしていません。</entry>
    <entry key="FcnCallSplitDisallowsCompositeDims">Function-Call Split ''{0}'' への入力に複数の要素が含まれています。このブロックは、スカラーの関数呼び出し入力のみをサポートします。</entry>
    <entry key="BlockRunFcnCallError">
関数呼び出しの起動中に、ブロック ''{0}'' にエラーが発生しました:\n{1}
</entry>
    <entry key="BlockDisableFcnCallError">
関数呼び出しの無効化中に、ブロック ''{0}'' にエラーが発生しました:\n{1}
</entry>
    <entry key="BlockEnableFcnCallError">
関数呼び出しの有効化中に、ブロック ''{0}'' にエラーが発生しました:\n{1}
</entry>
    <entry key="InvalidMdlInitFcnCall">Model ブロック ''{0}'' のモデル初期化端子で関数呼び出しを実行中に時間 {1} でエラーが発生しました。Model ブロックを再度初期化するには、モデル終了端子を呼び出さなければなりません。モデル終了端子を非表示にして、モデル終了イベントが Simulink で自動的に処理されるようにすることもできます。</entry>
    <entry key="InvalidMdlResetFcnCall">Model ブロック ''{1}'' のモデル リセット端子 ''{0}'' で関数呼び出しを実行中に時間 {2} でエラーが発生しました。他の関数呼び出しを実行するには、モデル初期化端子で Model ブロックを初期化しなければなりません。モデル初期化端子を非表示にして、モデル初期化イベントが Simulink で自動的に処理されるようにすることもできます。</entry>
    <entry key="InvalidMdlTermFcnCall">Model ブロック ''{0}'' のモデル終了端子で関数呼び出しを実行中に時間 {1} でエラーが発生しました。関数呼び出しを実行するには、モデル初期化端子で Model ブロックを初期化しなければなりません。モデル初期化端子を非表示にして、モデル初期化イベントが Simulink で自動的に処理されるようにすることもできます。</entry>
    <entry key="InvalidNonMdlEventFcnCall">Model ブロック ''{1}'' の&lt;sldiag objui="inport" objparam="{0}" objname="{1}"&gt;入力端子 ''{0}''&lt;/sldiag&gt; において、関数呼び出しを実行中に時間 {2} でエラーが発生しました。関数呼び出しを実行するには、モデル初期化端子で Model ブロックを初期化しなければなりません。また、モデル終了端子で終了している Model ブロックは、関数呼び出しで呼び出すことはできません。モデル初期化端子とモデル終了端子を非表示にして、モデル初期化イベントおよびモデル終了イベントが Simulink で自動的に処理されるようにすることもできます。</entry>
    <entry key="InvalidNonMdlEventSimulinkFcn">Model ブロック ''{1}'' が時間 {2} に参照したモデル内で、Simulink 関数 ''{0}'' の実行エラーが発生しました。関数呼び出しを実行するには、モデル初期化端子で Model ブロックを初期化しなければなりません。また、モデル終了端子で終了している Model ブロックは、関数呼び出しで呼び出すことはできません。モデル初期化端子とモデル終了端子を非表示にして、モデル初期化イベントおよびモデル終了イベントが Simulink で自動的に処理されるようにすることもできます。</entry>
    <entry key="FcnCallPortMustBeDrivenByAsyncFcnCaller">The function call input port ''{0}'' of model block ''{1}'' must be driven by an asynchronous function call initiator.</entry>
    <entry key="FcnCallPortCannotBeDrivenByAsyncFcnCaller">Model ブロック ''{1}'' の関数呼び出し入力端子 ''{0}'' は、非同期関数呼び出しイニシエーターによって駆動できません。</entry>
    <entry key="NoRTWForRootFcnCallInport">関数呼び出し信号を出力するルートレベル Inport ブロック ''{1}'' が含まれているため、モデル ''{0}'' ではスタンドアロンのコード生成がサポートされていません。</entry>
    <entry key="NoVarStepSolverForRootFcnCall">
  モデル ''{0}'' には、関数呼び出し信号を出力するルートレベル Inport ブロック ''{1}'' が含まれているため、可変ステップ ソルバーはサポートされていません。&lt;actions exclusiveFixIts="yes"&gt; &lt;action type="fixit" id="SolverParameterFixedStepFix"&gt; &lt;cmd&gt;set_param_action(''{0}'', 'Solver', 'FixedStepDiscrete');&lt;/cmd&gt; &lt;txt&gt;コンフィギュレーション パラメーター &lt;sldiag objui="configset" objparam="SolverType" objname="{0}"&gt;[ソルバーの選択] &gt; [タイプ]&lt;/sldiag&gt; を [固定ステップ] に設定することを検討する。&lt;/txt&gt; &lt;/action&gt; &lt;/actions&gt;
</entry>
    <entry key="NoVarStepSolverForSimulinkFunction">
  モデル ''{0}'' は Simulink 関数をエクスポートするため、可変ステップ ソルバーはこのモデルでサポートされていません。&lt;actions exclusiveFixIts="yes"&gt; &lt;action type="fixit"&gt; &lt;cmd&gt;set_param_action(''{0}'', 'Solver', 'FixedStepDiscrete');&lt;/cmd&gt; &lt;txt&gt;コンフィギュレーション パラメーターの &lt;sldiag objui="configset" objparam="SolverType" objname="{0}"&gt;[ソルバーの選択] &gt; [タイプ]&lt;/sldiag&gt; を [固定ステップ] に設定することを検討する。&lt;/txt&gt; &lt;/action&gt; &lt;/actions&gt;
</entry>
    <entry key="NoVarStepSolverForSWArchModel">
      ソフトウェア アーキテクチャ モデル ''{0}'' では可変ステップ ソルバーはサポートされていません。&lt;actions exclusiveFixIts="yes"&gt; &lt;action type="fixit"&gt; &lt;cmd&gt;set_param_action(''{0}'', 'Solver', 'FixedStepDiscrete');&lt;/cmd&gt; &lt;txt&gt;コンフィギュレーション パラメーターの &lt;sldiag objui="configset" objparam="SolverType" objname="{0}"&gt;[ソルバーの選択] &gt; [タイプ]&lt;/sldiag&gt; を [固定ステップ] に設定することを検討する。&lt;/txt&gt; &lt;/action&gt; &lt;/actions&gt;
    </entry>
    <entry key="NoModelRefMinAlgLoopForSimulinkFunction">Simulink 関数をエクスポートするモデル ''{0}'' について、[コンフィギュレーション パラメーター] ダイアログ ボックスの [モデル参照] ペインの [疑似代数ループの発生の最小化] オプションの設定が無効です。 &lt;actions exclusiveFixIts="yes"&gt; &lt;action type="fixit"&gt; &lt;cmd&gt;set_param_action(''{0}'', 'ModelReferenceMinAlgLoopOccurrences', 'off');&lt;/cmd&gt; &lt;txt&gt;[コンフィギュレーション パラメーター] のオプション [疑似代数ループの発生の最小化] をオフにする。&lt;/txt&gt; &lt;/action&gt; &lt;/actions&gt;</entry>
    <entry key="NoModelRefMinAlgLoopForRootFcnCallInport">関数呼び出し信号を出力するルートレベルの Inport ブロック ''{1}'' を含むモデル ''{0}'' について、[コンフィギュレーション パラメーター] ダイアログ ボックスの [モデル参照] ペインの [疑似代数ループの発生の最小化] オプションの設定が無効です。 &lt;actions exclusiveFixIts="yes"&gt; &lt;action type="fixit"&gt; &lt;cmd&gt;set_param_action(''{0}'', 'ModelReferenceMinAlgLoopOccurrences', 'off');&lt;/cmd&gt; &lt;txt&gt;[コンフィギュレーション パラメーター] のオプション [疑似代数ループの発生の最小化] をオフにする。&lt;/txt&gt; &lt;/action&gt; &lt;/actions&gt;</entry>
    <entry key="NoModelRefMinAlgLoopForSWArchMdl">ソフトウェア アーキテクチャ モデル ''{0}'' について、[コンフィギュレーション パラメーター] ダイアログ ボックスの [モデル参照] ペインの [疑似代数ループの発生の最小化] オプションの設定が無効です。 &lt;actions exclusiveFixIts="yes"&gt; &lt;action type="fixit"&gt; &lt;cmd&gt;set_param_action(''{0}'', 'ModelReferenceMinAlgLoopOccurrences', 'off');&lt;/cmd&gt; &lt;txt&gt;[コンフィギュレーション パラメーター] の [疑似代数ループの発生の最小化] オプションをオフにする。&lt;/txt&gt; &lt;/action&gt; &lt;/actions&gt;</entry>
    <entry key="SWArchModelRefMustBeFcnCallAtRoot">Unable to compile model ''{0}''. Trigger type of root-level trigger ports in software architectures must be function-call.</entry>
    <entry key="MultiInstanceFcnCallInport">[コンフィギュレーション パラメーター] &gt; [モデル参照] &gt; [最上位モデルごとに可能なインスタンスの総数] が、モデル ''{0}'' では [複数] に設定されています。このモデルのブロック ''{1}'' は関数呼び出し信号を出力するルートレベル Inport ブロックです。関数呼び出しのルートレベル Inport ブロックを含むモデルは、複数回参照されるように構成できません。&lt;actions exclusiveFixIts="yes"&gt; &lt;action type="fixit"&gt; &lt;cmd&gt;configset.internal.fixIt(''{0}'',''ModelReferenceNumInstancesAllowed'',''Single'')&lt;/cmd&gt; &lt;txt&gt;コンフィギュレーション パラメーターの &lt;sldiag objui="configset" objparam="ModelReferenceNumInstancesAllowed" objname="{0}"&gt;[最上位モデルごとに可能なインスタンスの総数]&lt;/sldiag&gt; を [1] に設定することを検討する。&lt;/txt&gt; &lt;/action&gt; &lt;/actions&gt;
</entry>
    <entry key="InvFcnCallerBlockInAlgLoop">Function Caller ブロック ''{0}'' を含んだ代数ループを検出しました。Function Caller ブロックの使用は、代数ループ内で許可されていません。</entry>
    <entry key="InvFcnCallMdlRefInAlgLoop">関数呼び出し入力信号が少なくとも 1 つある Model ブロック ''{0}'' (参照元のモデル ''{1}'') が含まれている代数ループが検出されました。そのような Model ブロックは代数ループでは許可されません。</entry>
    <entry key="FcnCallModelRefInvDiagSettings">モデル ''{0}'' に Model ブロック ''{1}'' が含まれ、参照モデル ''{2}'' には関数呼び出し信号を出力するルートレベル Inport ブロックが含まれるため、このモデルの現在の診断設定は無効です。詳細は、下記で報告されているエラーを参照してください。</entry>
    <entry key="FcnCallRootInportInvDiagSettings">関数呼び出し信号を出力するルートレベル Inport ブロック ''{1}'' が含まれるため、モデル ''{0}'' の現在の診断設定は無効です。詳細は、下記で報告されているエラーを参照してください。</entry>
    <entry key="FcnCallRootInvMultiTaskRateTransMsg">モデル ''{0}'' の [コンフィギュレーション パラメーター] ダイアログ ボックスの [診断] &gt; [サンプル時間] ペインで、&lt;sldiag objui="configset" objparam="MultiTaskRateTransMsg" objname="{0}"&gt;[マルチタスク データ転送]&lt;/sldiag&gt; オプションが [エラー] に設定されていません。&lt;actions exclusiveFixIts="no"&gt; &lt;action type="fixit"&gt; &lt;cmd&gt;set_param_action(''{0}'', ''MultiTaskRateTransMsg'', ''error'');&lt;/cmd&gt; &lt;txt&gt;&lt;sldiag objui="configset" objparam="MultiTaskRateTransMsg" objname="{0}"&gt;[マルチタスク データ転送]&lt;/sldiag&gt; を [エラー] に設定する。&lt;/txt&gt; &lt;/action&gt; &lt;/actions&gt; 

</entry>
    <entry key="FcnCallRootInvMultiTaskCondExecSysMsg">モデル ''{0}'' の [コンフィギュレーション パラメーター] ダイアログ ボックスの [診断] &gt; [サンプル時間] ペインで、[マルチタスクの条件付き実行サブシステム] オプションが [エラー] に設定されていません。&lt;actions exclusiveFixIts="no"&gt; &lt;action type="fixit"&gt; &lt;cmd&gt;set_param_action(''{0}'', ''MultiTaskCondExecSysMsg'', ''error'');&lt;/cmd&gt; &lt;txt&gt;''{0}'' の [マルチタスクの条件付き実行サブシステム] を [エラー] に設定する。&lt;/txt&gt; &lt;/action&gt; &lt;/actions&gt; 

</entry>
    <entry key="FcnCallRootNeedSimplifiedInitMode">モデル ''{0}'' は [簡易] 初期化モードになっている必要があります。詳細については、「&lt;a href="matlab:helpview([docroot '/simulink/ug/simplified-initialization-mode.html'])"&gt;簡易初期化モード&lt;/a&gt;」を参照してください。&lt;actions exclusiveFixIts="yes"&gt; &lt;action type="fixit"&gt; &lt;cmd&gt;configset.internal.fixIt(''{0}'',''UnderspecifiedInitializationDetection'',''Simplified'')&lt;/cmd&gt; &lt;txt&gt;[コンフィギュレーション パラメーター] ダイアログの [診断] ページにある &lt;sldiag objui="configset" objparam="UnderspecifiedInitializationDetection"&gt;[指定不足の初期化の検出]&lt;/sldiag&gt; パラメーターを [簡易] に設定する。&lt;/txt&gt; &lt;/action&gt; &lt;/actions&gt;

</entry>
    <entry key="InvalidAsyncLoggingForExportFcnMdl1">継承したサンプル時間 (-1) をもつ関数呼び出しのルートレベル Inport ブロックにより Outport ブロックまたは信号が駆動される場合、&lt;a href="matlab:helpview([docroot ''/toolbox/simulink/helptargets.map''], ''export_function_models'')"&gt;エクスポート関数モデル&lt;/a&gt; ''{0}'' 内で、ルートレベルの Outport ブロックまたは信号を Dataset 形式で記録することはサポートされていません。''{1}'' で離散サンプル時間を指定するか、[コンフィギュレーション パラメーター] &gt; [データのインポート/エクスポート] &gt; [ワークスペースに保存] の [形式] パラメーターを [データセット] 以外のオプションに変更することを検討してください。
</entry>
    <entry key="InvalidAsyncLoggingForExportFcnMdl2">
  Simulink 関数 ''{1}'' により Outport ブロックまたは信号が駆動される場合、&lt;a href="matlab:helpview([docroot ''/toolbox/simulink/helptargets.map''], ''export_function_models'')"&gt;エクスポート関数モデル&lt;/a&gt; ''{0}'' 内で、ルートレベル Outport ブロックまたは信号を Dataset 形式で記録することはサポートされていません。[コンフィギュレーション パラメーター] &gt; [データのインポート/エクスポート] &gt; [ワークスペースに保存] の [形式] パラメーターを [データセット] 以外のオプションに変更することを検討してください。
</entry>
    <entry key="InvPartialSrcForMuxInExpFcnMdl">
  ''{3}'' の&lt;sldiag objui="outport" objparam="{2,number,integer}" objname="{3}"&gt;出力端子 {2,number,integer}&lt;/sldiag&gt; から Mux ブロック ''{0}'' の&lt;sldiag objui="inport" objparam="{1,number,integer}" objname="{0}"&gt;入力端子 {1,number,integer}&lt;/sldiag&gt; までの部分要素選択が無効です。エクスポート関数モデルのルートレベル Outport ブロックに接続する Mux ブロックの入力信号は、接続元の出力端子の要素をすべて含まなければなりません。信号パス上から Selector ブロックや Demux ブロックなどの要素選択ブロックを削除することを検討してください。
</entry>
    <entry key="InvSameSrcsForMuxInExpFcnMdl">
  ''{4}'' の&lt;sldiag objui="outport" objparam="{3,number,integer}" objname="{4}"&gt;出力端子 {3,number,integer}&lt;/sldiag&gt; から Mux ブロック ''{0}'' の入力端子 {1,number,integer} および {2,number,integer} への接続が無効です。エクスポート関数モデルのルートレベル Outport ブロックに接続する Mux ブロックの入力信号は、異なる接続元の出力端子から出力されなければなりません。
</entry>
    <entry key="InvStorageClassForMuxInExpFcnMdl">
  Mux ブロック ''{0}'' がエクスポート関数モデルのルートレベル Outport ブロックに接続している場合、Mux ブロックの&lt;sldiag objui="inport" objparam="{1,number,integer}" objname="{0}"&gt;入力端子 {1,number,integer}&lt;/sldiag&gt; の入力信号は非自動ストレージ クラスをもつことができません。
</entry>
    <entry key="InvalidCallingSequenceForExportFcnMdl">
  Model block ''{0}'' requires that function-call input port ''{1}'' execute before function-call input port ''{2}''. However, this execution order was violated at time {3}.
  
      &lt;actions exclusiveFixIts="yes"&gt;
          &lt;action type="fixit"&gt;
              &lt;cmd&gt;configset.internal.fixIt(''{4}'', ''EnableRefExpFcnMdlSchedulingChecks'', ''off'')&lt;/cmd&gt;
              &lt;txt&gt;To disable this error message, clear the parameter &lt;sldiag objui="configset" objparam="EnableRefExpFcnMdlSchedulingChecks"&gt;'Enable strict scheduling checks for referenced models'&lt;/sldiag&gt; in the Model Referencing page of the Configuration Parameters dialog.&lt;/txt&gt;
          &lt;/action&gt;
  &lt;/actions&gt;
</entry>
    <entry key="PotentialExpFcnMdlWithReferenceBlock">
      モデル''{0}'' に、ライブラリ リンクのあるブロックが含まれています。モデル ''{0}'' が&lt;a href="matlab:helpview([docroot ''/toolbox/simulink/helptargets.map''], ''export_function_models'')"&gt;エクスポート関数モデル&lt;/a&gt;か否かと、その実行領域タイプを判別するには、'[アップグレード アドバイザー] &gt; [エクスポート関数モデルのチェック]' を選択します。 </entry>
    <entry key="InvalidExpFcnDomain">[エクスポート関数] 実行領域は、モデルのルート レベルにのみ適用されます。</entry>
    <entry key="InportSampleTimeMsg">Inport ''{0}'' にはサンプル時間 {1} があります。</entry>
    <entry key="OutportSampleTimeMsg">Outport ''{0}'' にはサンプル時間 {1} があります。</entry>
    <entry key="FunctionSampleTimeMsg">Function ''{0}'' にはサンプル時間 {1} があります。</entry>
    <entry key="InvalidBranchingToMultiRootOutport">
  ''{0}'' は、関数呼び出しのルートレベルの Inport ブロックにより駆動されます。このため、このブロックの出力端子 {1,number,integer} からの出力信号を分岐して、複数のルート Outport ブロック ''{2}'' および ''{3}'' に接続することはできません。
</entry>
    <entry key="DiffTsBetweenRootAndNestedFcnCallPortGroupInExpFcnMdl">
  &lt;a href="matlab:helpview([docroot ''/toolbox/simulink/helptargets.map''], ''export_function_models'')"&gt;エクスポート関数モデル&lt;/a&gt;の内部で、''{1}'' の&lt;sldiag objui="inport" objparam="{0}" objname="{1}"&gt;入力端子 ''{0}''&lt;/sldiag&gt; への関数呼び出し信号は、ルートレベルの Inport ブロック ''{2}'' からの関数呼び出し信号によって直接駆動されています。したがって、これらの関数呼び出し信号は同じサンプル時間でなければなりません。しかし、ブロック ''{2}'' にはサンプル時間 {3} が指定され、''{1}'' の&lt;sldiag objui="inport" objparam="{0}" objname="{1}"&gt;入力端子 ''{0}''&lt;/sldiag&gt; への関数呼び出し信号にはサンプル時間 {4} が指定されています。
</entry>
    <entry key="DiffTsBetweenRootInportAndPeriodicFCSSInExpFcnMdl">
  &lt;a href="matlab:helpview([docroot ''/toolbox/simulink/helptargets.map''], ''export_function_models'')"&gt;エクスポート関数モデル&lt;/a&gt;内において、''{0}'' はサンプル時間が {1} の周期的な Function-Call Subsystem に設定されています。しかしこれは、異なるサンプル時間 {3} を指定している関数呼び出しのルートレベルの Inport ブロック ''{2}'' で駆動されます。&lt;actions exclusiveFixIts="yes"&gt; &lt;action type="suggestion"&gt; &lt;txt&gt;サンプル時間を更新して一致させることを検討する。&lt;/txt&gt; &lt;/action&gt; &lt;action type="fixit"&gt; &lt;cmd&gt;set_param_action(''{4}'', ''SampleTime'', ''-1'');&lt;/cmd&gt; &lt;txt&gt;あるいは、Trigger Port ブロック ''{4}'' の &lt;sldiag objui="blockdlg" objparam="SampleTimeType"&gt;[サンプル時間]&lt;/sldiag&gt; パラメーターを '-1' に設定する。&lt;/txt&gt; &lt;/action&gt; &lt;/actions&gt;
</entry>
    <entry key="DiffTsBetweenRootInportAndPeriodicFCSSInExpFcnMdl2">
  &lt;a href="matlab:helpview([docroot ''/toolbox/simulink/helptargets.map''], ''export_function_models'')"&gt;エクスポート関数モデル&lt;/a&gt;内において、''{0}'' はサンプル時間が {1} の周期的な Function-Call Subsystem に設定されています。しかしこれは、異なるサンプル時間 {3} を指定している関数呼び出しのルートレベル Inport ブロック ''{2}'' によって駆動されます。&lt;actions exclusiveFixIts="yes"&gt; &lt;action type="suggestion"&gt; &lt;txt&gt;サンプル時間を更新して矛盾をなくすことを検討する。&lt;/txt&gt; &lt;/action&gt; &lt;action type="suggestion"&gt; &lt;txt&gt;あるいは、Trigger Port ブロック ''{4}'' の &lt;sldiag objui="blockdlg" objparam="SampleTimeType"&gt;[サンプル時間]&lt;/sldiag&gt; パラメーターを '-1' に設定する。&lt;/txt&gt; &lt;/action&gt; &lt;/actions&gt;
</entry>
    <entry key="IndirectConnBetweenRootAndNestedFcnCallPortGroupInExpFcnMdl">
  Model ブロック ''{0}'' によって参照されるモデル内で、Model ブロックの&lt;sldiag objui="inport" objparam="{1}" objname="{0}"&gt;入力端子 ''{1}''&lt;/sldiag&gt; に対応するルートレベルの Inport ブロックには、継承されないサンプル時間 {2} が指定されています。この場合、Model ブロックの入力端子への関数呼び出し信号は、同じサンプル時間をもつ関数呼び出しのルートレベルの Inport ブロックで直接駆動されていなければなりません。
</entry>
    <entry key="ExpFcnMdlCompAndSpecifiedSampleTimeNotEqual">
      Inside the model referenced by Model block ''{0}'', the function-call context driven by the function-call signal to its input port ''{1}'' has specified the sample time of {2}. However, the function-call initiator ''{3}'' has a different sample time of {4}.
       &lt;actions exclusiveFixIts="yes"&gt;
           &lt;action type="fixit"&gt;
               &lt;cmd&gt;configset.internal.fixIt(''{5}'', ''EnableRefExpFcnMdlSchedulingChecks'', ''off'')&lt;/cmd&gt;
               &lt;txt&gt;To disable this error message, clear the parameter &lt;sldiag objui="configset" objparam="EnableRefExpFcnMdlSchedulingChecks"&gt;'Enable strict scheduling checks for referenced models'&lt;/sldiag&gt; in the Model Referencing page of the Configuration Parameters dialog.&lt;/txt&gt;
           &lt;/action&gt;
           &lt;action type="suggestion"&gt;
               &lt;txt&gt;Alternatively, consider updating the sample time of the function-call initiator.&lt;/txt&gt;
           &lt;/action&gt;
        &lt;/actions&gt;
    </entry>
    <entry key="ExpFcnMdlCompAndSpecifiedSampleTimeMismatch">
  Model ブロック ''{0}'' によって参照されるモデル内で、&lt;sldiag objui="inport" objparam="{1}" objname="{0}"&gt;入力端子 ''{1}''&lt;/sldiag&gt; への関数呼び出し信号によって駆動される関数呼び出しコンテキストには、対応する Inport ブロックのダイアログでのサンプル時間 {2} が指定されています。しかし、関数呼び出しイニシエーター ''{3}'' は十分な関連付けを提供できないサンプル時間 {4} をもっています。サンプル時間 {5} の値を変更し、サンプル時間 {6} がその整数倍になるように検討してください。
</entry>
    <entry key="ExpFcnMdlCompAndSpecifiedSampleTimeMismatch2">
  Model ブロック ''{0}'' によって参照されるモデル内で、&lt;sldiag objui="inport" objparam="{1}" objname="{0}"&gt;入力端子 ''{1}''&lt;/sldiag&gt; への関数呼び出し信号によって駆動される関数呼び出しコンテキストには、対応する Inport ブロックのダイアログでの離散サンプル時間 {2} が指定されています。しかし、関数呼び出しイニシエーター ''{3}'' は非同期のサンプル時間をもっています。
</entry>
    <entry key="ExpFcnMdlCompAndSpecifiedSampleTimeMismatch3">
  Model ブロック ''{0}'' によって参照されるモデル内で、&lt;sldiag objui="inport" objparam="{1}" objname="{0}"&gt;入力端子 ''{1}''&lt;/sldiag&gt; への関数呼び出し信号によって駆動される関数呼び出しコンテキストには、対応する Inport ブロックのダイアログ ボックスでのサンプル時間 {2} が指定されています。ただし、関数呼び出しイニシエーター ''{3}'' によって、指定のサンプル時間の倍数ではない時間 {4} に呼び出されています。
</entry>
    <entry key="InvalidSampleTimeSetOnRootDataOutportInExpFcnMdl">
      &lt;a href="matlab:helpview([docroot ''/toolbox/simulink/helptargets.map''], ''export_function_models'')"&gt;エクスポート関数モデル&lt;/a&gt;またはソフトウェア アーキテクチャ モデルのルート レベルにある Outport ブロック ''{1}'' のサンプル時間 {0} が無効です。ブロックのサンプル時間は継承 (-1) に設定しなければなりません。&lt;actions exclusiveFixIts="no"&gt; &lt;action type="fixit"&gt; &lt;cmd&gt;set_param_action(''{1}'', ''SampleTime'', ''-1'');&lt;/cmd&gt; &lt;txt&gt;Outport ブロック ''{1}'' の &lt;sldiag objui="blockdlg" objparam="SampleTime"&gt;[サンプル時間]&lt;/sldiag&gt; パラメーターを '-1' に設定することを検討する。&lt;/txt&gt; &lt;/action&gt; &lt;/actions&gt;
    </entry>
    <entry key="InvalidSampleTimeSetOnRootDataInportInExpFcnMdl">
  サンプル時間 {0} をルートレベル Inport ブロック ''{1}'' に設定することはできません。データのルートレベル Inport ブロックが&lt;a href="matlab:helpview([docroot ''/toolbox/simulink/helptargets.map''], ''export_function_models'')"&gt;エクスポート関数モデル&lt;/a&gt;内にある場合、このブロックのサンプル時間は継承 (-1) でなければなりません。&lt;actions exclusiveFixIts="no"&gt; &lt;action type="fixit"&gt; &lt;cmd&gt;set_param_action(''{1}'', ''SampleTime'', ''-1'');&lt;/cmd&gt; &lt;txt&gt;Inport ブロック ''{1}'' の &lt;sldiag objui="blockdlg" objparam="SampleTime"&gt;[サンプル時間]&lt;/sldiag&gt; パラメーターを '-1' に設定することを検討する。&lt;/txt&gt; &lt;/action&gt; &lt;/actions&gt;
</entry>
    <entry key="InvalidSampleTimeSetOnSynthRootDataInportInExpFcnMdl">
       &lt;a href="matlab:helpview([docroot ''/toolbox/simulink/helptargets.map''], ''export_function_models'')"&gt;エクスポート関数モデル&lt;/a&gt;またはソフトウェア アーキテクチャ モデルのルート レベルにある In Bus Element ブロック ''{0}'' に対応する Inport ブロックのサンプル時間は継承 (-1) でなければなりません。&lt;actions exclusiveFixIts="yes"&gt; &lt;action type="fixit" id="BEPInExportFunctionMdl" retvalue="false"&gt; &lt;cmd&gt;Simulink.internal.setInheritedSampleTimeForPortInExpFcnMdl(''{0}'');&lt;/cmd&gt; &lt;txt&gt;In Bus Element ブロック ''{0}'' に対応するバス端子のすべての要素で、&lt;sldiag objui="blockdlg" objparam="SampleTime"&gt;[サンプル時間]&lt;/sldiag&gt; を [-1] に設定する。&lt;/txt&gt; &lt;/action&gt; &lt;/actions&gt;
  </entry>
    <entry key="InvalidSampleTimeSetOnRootDataBEPInExpFcnMdl">
      In Bus Element ブロック ''{0}'' が&lt;a href="matlab:helpview([docroot ''/toolbox/simulink/helptargets.map''], ''export_function_models'')"&gt;エクスポート関数モデル&lt;/a&gt;のルート レベルにある場合、サンプル時間を継承 (-1) しなければなりません。
  </entry>
    <entry key="InvalidSampleTimeSetOnRootFcnCallInportInExpFcnMdl">
  サンプル時間 {0} をルートレベル Inport ブロック ''{1}'' に設定することはできません。ルートレベル Inport ブロックが関数呼び出し信号を出力し、&lt;a href="matlab:helpview([docroot ''/toolbox/simulink/helptargets.map''], ''export_function_models'')"&gt;エクスポート関数モデル&lt;/a&gt;内にある場合、このブロックのサンプル時間は離散または継承 (-1) でなければなりません。&lt;actions exclusiveFixIts="no"&gt; &lt;action type="suggestion"&gt; &lt;cmd&gt;Simulink.internal.OpenBlockParamsDialog(''{1}'', ''SampleTime'')&lt;/cmd&gt; &lt;txt&gt;Inport ブロック ''{1}'' の &lt;sldiag objui="blockdlg" objparam="SampleTime"&gt;[サンプル時間]&lt;/sldiag&gt; パラメーターを '-1' または離散レートに指定することを検討する。&lt;/txt&gt; &lt;/action&gt; &lt;/actions&gt;
</entry>
    <entry key="InvalidSampleTimeSetOnRootFcnCallInportInAsyncFcnCallMdl">
  サンプル時間 {0} をルートレベル Inport ブロック ''{1}'' に設定することはできません。ルートレベル Inport ブロックが Asynchronous Task Specification ブロックへの接続によって非同期関数呼び出し信号を出力する場合、この Inport ブロックのサンプル時間は継承 (-1) でなければなりません。&lt;actions exclusiveFixIts="no"&gt; &lt;action type="fixit"&gt; &lt;cmd&gt;set_param_action(''{1}'', ''SampleTime'', ''-1'');&lt;/cmd&gt; &lt;txt&gt;Inport ブロック ''{1}'' の &lt;sldiag objui="blockdlg" objparam="SampleTime"&gt;[サンプル時間]&lt;/sldiag&gt; パラメーターを '-1' に設定することを検討する。&lt;/txt&gt; &lt;/action&gt; &lt;/actions&gt;
</entry>
    <entry key="InvalidPeriodicFCSSInExpFcnMdl">
      Inside an &lt;a href="matlab:helpview([docroot ''/toolbox/simulink/helptargets.map''], ''export_function_models'')"&gt;export-function model&lt;/a&gt;, to configure ''{0}'' to a periodic function-call block, it must be directly driven by a function-call root-level Inport block that has specified a discrete sample time.
      &lt;actions exclusiveFixIts="yes"&gt;
        &lt;action type="suggestion"&gt;
            &lt;txt&gt;Consider connecting the function-call input of this block directly to a function-call root-level Inport block and specify a discrete sample time on the Inport block.&lt;/txt&gt;
        &lt;/action&gt;
        &lt;action type="fixit"&gt;
            &lt;cmd&gt;set_param_action(''{1}'', ''SampleTimeType'', ''triggered'');&lt;/cmd&gt;
            &lt;txt&gt;Alternatively, consider changing dialog parameter &lt;sldiag objui="blockdlg" objparam="SampleTimeType"&gt;'Sample time type'&lt;/sldiag&gt; of ''{1}'' to 'triggered'.&lt;/txt&gt;
        &lt;/action&gt;
     &lt;/actions&gt;
    </entry>
    <entry key="InvalidPeriodicFCSSInExpFcnMdl2">
  &lt;a href="matlab:helpview([docroot ''/toolbox/simulink/helptargets.map''], ''export_function_models'')"&gt;エクスポート関数モデル&lt;/a&gt;内では、''{0}'' を周期的な関数呼び出しブロックに構成するには、離散サンプル時間を指定した関数呼び出しのルートレベル Inport ブロックによって直接駆動しなければなりません。&lt;actions exclusiveFixIts="yes"&gt; &lt;action type="suggestion"&gt; &lt;txt&gt;このブロックの関数呼び出し入力を関数呼び出しのルートレベル Inport ブロックに直接接続し、Inport ブロックで離散サンプル時間を指定することを検討する。&lt;/txt&gt; &lt;/action&gt; &lt;action type="suggestion"&gt; &lt;txt&gt;あるいは、''{1}'' のダイアログ パラメーター &lt;sldiag objui="blockdlg" objparam="SampleTimeType"&gt;[サンプル時間タイプ]&lt;/sldiag&gt; を [トリガー] に変更することを検討する。&lt;/txt&gt; &lt;/action&gt; &lt;/actions&gt;
</entry>
    <entry key="PeriodicFcnCallInputMustBeScalar">
  Model ブロック ''{0}'' により参照されるモデル内で、Model ブロックの&lt;sldiag objui="inport" objparam="{1}" objname="{0}"&gt;入力端子 {1}&lt;/sldiag&gt; から関数呼び出し信号により直接駆動される Function-Call Subsystem は、サンプル時間 {2} の周期的な Function-Call Subsystem に設定されています。したがって、この入力端子への関数呼び出し信号はスカラー信号でなくてはなりません。しかし、この入力への信号の幅は {3,number,integer} です。
</entry>
    <entry key="InvExpFcnMdlInFcnCallSubsystem">
  モデル ''{1}'' を参照している Model ブロック ''{0}'' は、{2} のサブシステム ''{3}'' に不適切に置かれています。参照モデルは、このようなサブシステムでのサンプル時間を継承しなければなりません。しかし、参照モデル ''{4}'' は&lt;a href="matlab:helpview([docroot ''/toolbox/simulink/helptargets.map''], ''export_function_models'')"&gt;関数をエクスポートする&lt;/a&gt;よう設定されており、サンプル時間を継承できません。
</entry>
    <entry key="ExpFcnMdlInFcnCallSubsystemMustInheritSampleTime">
  Model block ''{0}'' has been improperly placed in the {1} subsystem ''{2}''. All function-call root inports in the referenced &lt;a href="matlab:helpview([docroot ''/toolbox/simulink/helptargets.map''], ''export_function_models'')"&gt;export function model&lt;/a&gt; ''{3}'' must inherit sample time.
</entry>
    <entry key="RefExpCallMdlMustBeInRootOfExpFcnMdl">
  エクスポート関数モデル ''{1}'' を参照する Model ブロック ''{0}'' が、非バーチャル サブシステム ''{2}'' 内に不適切に置かれています。親モデル ''{3}'' が&lt;a href="matlab:helpview([docroot ''/toolbox/simulink/helptargets.map''], ''export_function_models'')"&gt;関数をエクスポートする&lt;/a&gt;よう設定されている場合、参照できるのはルート レベルに配置された別のエクスポート関数モデルだけです。
</entry>
    <entry key="FcnCallPortCannotResetState">
  Trigger Port ブロック ''{0}'' はパラメーター [イネーブル時の状態] が [リセット] に設定されています。このブロックは、&lt;a href="matlab:helpview([docroot ''/toolbox/simulink/helptargets.map''], ''export_function_models'')"&gt;エクスポート関数モデル&lt;/a&gt; ''{3}'' 内にある関数呼び出しのルート レベル Inport ブロック ''{2}'' によって直接駆動される、Function-Call Subsystem ''{1}'' の内部にあります。エクスポート関数モデル内にある関数呼び出しのルートレベル Inport ブロックは、直接駆動する関数呼び出しブロックを有効化または無効化しないため、[リセット] オプションには効果がありません。&lt;actions exclusiveFixIts="yes"&gt; &lt;action type="fixit"&gt; &lt;cmd&gt;set_param_action(''{0}'', ''StatesWhenEnabling'', ''held'');&lt;/cmd&gt; &lt;txt&gt;この警告を回避するため、パラメーターを [保持] に変更することを検討する。&lt;/txt&gt; &lt;/action&gt; &lt;/actions&gt;
</entry>
    <entry key="OutportCannotResetInitVal">
  Outport ブロック ''{0}'' は、パラメーター [ディセーブル時の出力] が [リセット] に設定されています。このブロックは、&lt;a href="matlab:helpview([docroot ''/toolbox/simulink/helptargets.map''], ''export_function_models'')"&gt;エクスポート関数モデル&lt;/a&gt; ''{3}'' 内にある関数呼び出しのルート レベル Inport ブロック ''{2}'' によって直接駆動される、Function-Call Subsystem ''{1}'' の内部にあります。エクスポート関数モデル内にある関数呼び出しのルートレベル Inport ブロックは、直接駆動する関数呼び出しブロックを有効化または無効化しないため、[リセット] オプションには効果がありません。&lt;actions exclusiveFixIts="yes"&gt; &lt;action type="fixit"&gt; &lt;cmd&gt;set_param_action(''{0}'', ''OutputWhenDisabled'', ''held'');&lt;/cmd&gt; &lt;txt&gt;この警告を回避するため、パラメーターを [保持] に変更することを検討する。&lt;/txt&gt; &lt;/action&gt; &lt;/actions&gt;
</entry>
    <entry key="SWArchModelHasNoSimBehaviorForDirectlyConnectedRootIO1">
      ソフトウェア アーキテクチャ モデル ''{0}'' 内で、ルートレベル Outport ブロック ''{2}'' が、シミュレーション中にルートレベル Inport ブロック ''{1}'' から入力をコピーしません。これは、Inport ブロック ''{1}'' が、Interface Adapter ブロック ''{3}'' 経由で Outport ブロック ''{2}'' に接続されているためです。シミュレーション中に信号のコピーが必要な場合は、関数に Interface Adapter ブロックを含めてください。
    </entry>
    <entry key="SWArchModelHasNoSimBehaviorForDirectlyConnectedRootIO2">
      ソフトウェア アーキテクチャ モデル ''{0}'' 内で、ルートレベル Outport ブロック ''{2}'' が、シミュレーション中にルートレベル Inport ブロック ''{1}'' から入力をコピーしません。これは、Inport ブロック ''{1}'' が Outport ブロック ''{2}'' に直接接続されているためです。シミュレーションで信号のコピーが必要な場合は、これらのルートレベルの Inport および Outport ブロックを関数経由で接続してください。
    </entry>
    <entry key="AsyncFcnCallPortGroupsAccessingGlobalDSM">
  Model ブロック ''{0}'' によって参照されるモデル内で、&lt;sldiag objui="inport" objparam="{1}" objname="{0}"&gt;入力端子 ''{1}''&lt;/sldiag&gt; への関数呼び出し信号によって駆動される関数呼び出しコンテキストは、グローバル Simulink.Signal オブジェクト ''{2}'' で定義されるグローバルなデータ ストアにアクセスしますが、非同期タスクで実行されるよう設定されています。モデル内でアクセスされるグローバル データ ストアは、すべて周期的なシングル タスクで実行されなければなりません。
</entry>
    <entry key="SimulinkFunctionPortGroupsAccessingGlobalDSM">
  Model ブロック ''{1}'' 内の関数 ''{0}'' は非同期サンプリング時間を指定して呼び出されており、Simulink.Signal オブジェクト ''{2}'' で定義されたグローバル データ ストアに対するリーダーまたはライターを含みます。モデル内でアクセスされるグローバル データ ストアは、すべて周期的なシングル タスクで実行されなければなりません。
</entry>
    <entry key="MultiTsGlobalDSMAccessedByDescExpFcnMdls">
      モデル ''{0}'' では、グローバル Simulink.Signal オブジェクト ''{1}'' によって定義されたグローバル データ ストアが、Model ブロック ''{2}'' および ''{3}'' でそれぞれ参照されるモデル内のブロックによってアクセスされます。しかしながら、アクセサー ブロックにはそれぞれ異なるサンプル時間 {4} と {5} が指定されています。これにより、データ整合性の問題が発生する可能性があります。
          &lt;actions exclusiveFixIts = "yes"&gt;
             &lt;action_catalog id="Simulink:SampleTime:DSMErrMsgFixits" ids="AdjustSampleTimes"&gt;
                 &lt;arg&gt;{1}&lt;/arg&gt;
             &lt;/action_catalog&gt;
             &lt;action_catalog id="Simulink:SampleTime:DSMErrMsgFixits" ids="MultiTaskDSMMsgSetToNone"&gt;
                 &lt;arg&gt;{0}&lt;/arg&gt;
             &lt;/action_catalog&gt;
         &lt;/actions&gt;
    </entry>
    <entry key="MultiTsGlobalDSMAccessedByDescExpFcnMdls2">
      モデル ''{0}'' では、グローバル Simulink.Signal オブジェクト ''{1}'' によって定義されたグローバル データ ストアが、Model ブロック ''{2}'' で参照されるモデル内のブロックによってアクセスされます。しかしながら、アクセサー ブロックではそれぞれ異なるサンプル時間 {3} と {4}が指定されています。これにより、データ整合性の問題が発生する可能性があります。
         &lt;actions exclusiveFixIts = "yes"&gt;
             &lt;action_catalog id="Simulink:SampleTime:DSMErrMsgFixits" ids="AdjustSampleTimes"&gt;
                 &lt;arg&gt;{1}&lt;/arg&gt;
             &lt;/action_catalog&gt;
             &lt;action_catalog id="Simulink:SampleTime:DSMErrMsgFixits" ids="MultiTaskDSMMsgSetToNone"&gt;
                 &lt;arg&gt;{0}&lt;/arg&gt;
             &lt;/action_catalog&gt;
         &lt;/actions&gt;
    </entry>
    <entry key="MultitaskRateTransitionBetweenExpFcnMdlPortGroupsErr">
Model ブロック ''{0}'' によって参照されるモデルでは、入力端子 ''{1}'' と ''{2}'' によって駆動される Function-Call ブロック間はデータ転送で接続されています。しかし、これらのブロックのサンプル時間 {3} と {4} は異なるので、データ整合性の問題が発生する可能性があります。&lt;actions exclusiveFixIts="yes"&gt; &lt;action type="suggestion"&gt; &lt;txt&gt;関数呼び出し入力信号のサンプル時間を調整することを検討する。&lt;/txt&gt; &lt;/action&gt; &lt;action type="fixit"&gt; &lt;cmd&gt;configset.internal.fixIt(''{5}'', ''MultiTaskRateTransMsg'', ''warning'')&lt;/cmd&gt; &lt;txt&gt;このエラー メッセージを無効にするには、[コンフィギュレーション パラメーター] ダイアログでパラメーター &lt;sldiag objui="configset" objparam="MultiTaskRateTransMsg"&gt;MultiTaskRateTransMsg&lt;/sldiag&gt; を [警告] に設定する。&lt;/txt&gt; &lt;/action&gt; &lt;/actions&gt;
  
</entry>
    <entry key="MultitaskRateTransitionBetweenExpFcnMdlPortGroupsWarn">
Model ブロック ''{0}'' によって参照されるモデルでは、入力端子 ''{1}'' と ''{2}'' によって駆動される Function-Call ブロック間はデータ転送で接続されています。しかし、これらのブロックのサンプル時間 {3} と {4} は異なるので、データ整合性の問題が発生する可能性があります。関数呼び出し入力信号のサンプル時間を調整することを検討してください。
</entry>
    <entry key="MultitaskRateTransitionBetweenExpAndSLFcnPortGroupsErr">
Model ブロック ''{0}'' によって参照されるモデルでは、&lt;sldiag objui="inport" objparam="{1}" objname="{0}"&gt;入力端子 {1}&lt;/sldiag&gt; によってトリガーされる Function-Call ブロックと Simulink 関数 ''{2}'' が接続されています。2 つの関数が異なるサンプル時間 {3} と {4} で呼び出されているため、データ整合性の問題が発生する可能性があります。&lt;actions exclusiveFixIts="yes"&gt; &lt;action type="suggestion"&gt; &lt;txt&gt;関数呼び出し入力信号のサンプル時間を調整することを検討する。&lt;/txt&gt; &lt;/action&gt; &lt;action type="fixit"&gt; &lt;cmd&gt;configset.internal.fixIt(''{5}'', ''MultiTaskRateTransMsg'', ''warning'')&lt;/cmd&gt; &lt;txt&gt;このエラー メッセージを無効にするには、[コンフィギュレーション パラメーター] ダイアログでパラメーター &lt;sldiag objui="configset" objparam="MultiTaskRateTransMsg"&gt;MultiTaskRateTransMsg&lt;/sldiag&gt; を [警告] に設定する。&lt;/txt&gt; &lt;/action&gt; &lt;/actions&gt;
  
</entry>
    <entry key="MultitaskRateTransitionBetweenExpAndSLFcnPortGroupsWarn">
Model ブロック ''{0}'' によって参照されるモデルでは、&lt;sldiag objui="inport" objparam="{1}" objname="{0}"&gt;入力端子 {1}&lt;/sldiag&gt; によってトリガーされる Function-Call ブロックと Simulink 関数 ''{2}'' が接続されています。2 つの関数が異なるサンプル時間 {3} と {4} で呼び出されているため、データ整合性の問題が発生する可能性があります。関数呼び出し入力信号のサンプル時間を調整することを検討してください。
</entry>
    <entry key="MultitaskRateTransitionBetweenSLFcnPortGroupsErr">
Model ブロック ''{0}'' によって参照されるモデルで、Simulink 関数 ''{1}'' と ''{2}'' が接続されています。2 つの関数が異なるサンプル時間 {3} と {4} で呼び出されているため、データ整合性の問題が発生する可能性があります。これらの関数を呼び出すブロックのサンプル時間を調整することを検討してください。&lt;actions exclusiveFixIts="yes"&gt; &lt;action type="suggestion"&gt; &lt;txt&gt;関数呼び出し入力信号のサンプル時間を調整することを検討する。&lt;/txt&gt; &lt;/action&gt; &lt;action type="fixit"&gt; &lt;cmd&gt;configset.internal.fixIt(''{5}'', ''MultiTaskRateTransMsg'', ''warning'')&lt;/cmd&gt; &lt;txt&gt;このエラー メッセージを無効にするには、[コンフィギュレーション パラメーター] ダイアログでパラメーター &lt;sldiag objui="configset" objparam="MultiTaskRateTransMsg"&gt;MultiTaskRateTransMsg&lt;/sldiag&gt; を [警告] に設定する。&lt;/txt&gt; &lt;/action&gt; &lt;/actions&gt;
  
</entry>
    <entry key="MultitaskRateTransitionBetweenSLFcnPortGroupsWarn">
Model ブロック ''{0}'' によって参照されるモデルで、Simulink 関数 ''{1}'' と ''{2}'' が接続されています。2 つの関数が異なるサンプル時間 {3} と {4} で呼び出されているため、データ整合性の問題が発生する可能性があります。これらの関数を呼び出すブロックのサンプル時間を調整することを検討してください。関数呼び出し入力信号のサンプル時間を調整することを検討してください。
</entry>
    <entry key="UnionTsInputMultitaskRateTransMsgErr">
  Model ブロック ''{1}'' の入力端子 ''{0}'' は、それぞれ異なるサンプル時間 {2} によって駆動される複数の関数呼び出しコンテキストに接続されています。これにより、データ整合性の問題が発生する可能性があります。&lt;actions exclusiveFixIts="yes"&gt; &lt;action type="suggestion"&gt; &lt;txt&gt;あるいは、この入力端子を複数の端子に分割し、関数呼び出しコンテキストを個別にフィードすることを検討する。&lt;/txt&gt; &lt;/action&gt; &lt;action type="fixit"&gt; &lt;cmd&gt;configset.internal.fixIt(''{3}'', ''MultiTaskRateTransMsg'', ''warning'')&lt;/cmd&gt; &lt;txt&gt;このエラー メッセージを無効にするには、[コンフィギュレーション パラメーター] ダイアログでパラメーター &lt;sldiag objui="configset" objparam="MultiTaskRateTransMsg"&gt;MultiTaskRateTransMsg&lt;/sldiag&gt; を [警告] に設定する。&lt;/txt&gt; &lt;/action&gt; &lt;/actions&gt;
</entry>
    <entry key="UnionTsInputMultitaskRateTransMsgWarn">
  Model ブロック ''{1}'' の入力端子 ''{0}'' は、それぞれ異なるサンプル時間 {2} によって駆動される複数の関数呼び出しコンテキストに接続されています。これにより、データ整合性の問題が発生する可能性があります。この入力端子を複数の端子に分割し、関数呼び出しコンテキストを個別にフィードすることを検討してください。
</entry>
    <entry key="UnionTsOutputMultitaskLoggingWarn">
  Model ブロック ''{1}'' の出力端子 ''{0}'' のサンプル時間 {2} は、次の関数呼び出しイニシエーターまたはそれを駆動する Simulink 関数のサンプル時間より高速です。モデルがマルチタスク モードで実行された場合、関数が呼び出される前に出力信号の値がログに記録されるか、下流のブロックで使用されるため、遅延が発生します。 &lt;actions exclusiveFixIts="yes"&gt; &lt;action type="fixit"&gt; &lt;cmd&gt;set_param_action(''{3}'', ''SolverMode'', ''SingleTasking'');&lt;/cmd&gt; &lt;txt&gt;コンフィギュレーション パラメーターの &lt;sldiag objui="configset" objparam="EnableMultiTasking" objname="{0}"&gt;[ソルバー] &gt; [各離散レートを個別のタスクとして扱う]&lt;/sldiag&gt; オプションをオフにして、モデル ''{3}'' がシングルタスク モードで実行されるように変更する。&lt;/txt&gt; &lt;/action&gt; &lt;action type="suggestion"&gt; &lt;txt&gt;あるいは、単一のブロックを使用して、この出力端子を駆動するすべての関数を呼び出す。&lt;/txt&gt; &lt;/action&gt; &lt;/actions&gt;
</entry>
    <entry key="UnionTsOutputMultitaskLoggingWarnDetail1">
  関数呼び出しイニシエーター ''{0}'' にはサンプル時間 {1} があります。
</entry>
    <entry key="UnionTsOutputMultitaskLoggingWarnDetail2">
  Simulink 関数 ''{0}'' にはサンプル時間 {1} があります。
</entry>
    <entry key="InvalidDstsForRootInportInDataPortGroup">
  ルートレベルの Inport ブロック ''{0}'' は、エクスポートされた関数のいずれにも存在しない非バーチャル ブロック ''{1}'' に接続されています。&lt;a href="matlab:helpview([docroot ''/toolbox/simulink/helptargets.map''], ''export_function_models'')"&gt;エクスポート関数モデル&lt;/a&gt;では、ルートレベルの Inport ブロックは 1 つ以上のエクスポートされた関数に接続されているか、未接続のままでなければなりません。
</entry>
    <entry key="InvalidSrcsForRootOutportInDataPortGroup">
  ルートレベルの Outport ブロック ''{0}'' は、エクスポートされた関数のいずれにも存在しないブロック ''{1}'' によって駆動されます。&lt;a href="matlab:helpview([docroot ''/toolbox/simulink/helptargets.map''], ''export_function_models'')"&gt;エクスポート関数モデル&lt;/a&gt;では、ルートレベルの Outport ブロックは、1 つ以上のエクスポートされた関数によって駆動されるか、未接続のままでなければなりません。
</entry>
    <entry key="InvalidSrcsForRootOutportInMultiFcnCallPortGroups">
  ルートレベル Outport ブロック ''{0}'' は、関数呼び出しのルートレベル Inport ブロック ''{1}'' および ''{2}'' によって駆動されています。&lt;a href="matlab:helpview([docroot ''/toolbox/simulink/helptargets.map''], ''export_function_models'')"&gt;エクスポート関数モデル&lt;/a&gt;において、複数の関数呼び出しのルートレベル Inport ブロックによって駆動されるルートレベル Outport ブロックの入力は、ソース ブロックの出力の全領域からのものでなければなりません。
</entry>
    <entry key="InvalidSrcsForRootOutportInMultiServerFcnCallPortGroups">
  ルートレベルの Outport ブロック ''{0}'' は、Simulink 関数の ''{1}'' および ''{2}'' によって駆動されます。&lt;a href="matlab:helpview([docroot ''/toolbox/simulink/helptargets.map''], ''export_function_models'')"&gt;エクスポート関数モデル&lt;/a&gt;内において、複数の Simulink Function ブロックによって駆動されるルートレベル Outport ブロックの入力は、ソース ブロックの出力の全領域からのものでなければなりません。
</entry>
    <entry key="InvalidSrcsForRootOutportInMixedFcnCallPortGroups">
  ルートレベル Outport ブロック ''{0}'' は、Simulink 関数 ''{1}'' および関数呼び出しのルートレベル Inport ブロック ''{2}'' によって駆動されます。&lt;a href="matlab:helpview([docroot ''/toolbox/simulink/helptargets.map''], ''export_function_models'')"&gt;エクスポート関数モデル&lt;/a&gt;内において、Simulink Function ブロックおよび関数呼び出しのルートレベル Inport ブロックによって駆動されるルートレベル Outport ブロックの入力は、ソース ブロックの出力の全領域からのものでなければなりません。
</entry>
    <entry key="NonVirtBusCreatorDrvRegularRootOutportInExpFcnMdl">
      Bus Creator ブロック ''{1}'' は、ルート レベルの Out Bus Element ブロックに直接接続しなければなりません。これは、Bus Creator ブロックが非バーチャル バスを作成し、&lt;a href="matlab:helpview([docroot ''/toolbox/simulink/helptargets.map''], ''export_function_models'')"&gt;エクスポート関数モデル&lt;/a&gt; ''{0}'' のルート レベルにあるためです。Outport ブロック ''{2}'' を Out Bus Element ブロックに置き換えてください。
     </entry>
    <entry key="NonVirtBusCreatorInvDstInExpFcnMdl">
      Bus Creator ブロック ''{1}'' は、ルート レベルの Out Bus Element ブロックに直接接続しなければなりません。これは、Bus Creator ブロックが非バーチャル バスを作成し、&lt;a href="matlab:helpview([docroot ''/toolbox/simulink/helptargets.map''], ''export_function_models'')"&gt;エクスポート関数モデル&lt;/a&gt; ''{0}'' のルート レベルにあるためです。
     </entry>
    <entry key="NonVirtBusCreatorInMultiFcnsInExpFcnMdl">
      Bus Creator ブロック ''{1}'' への入力は、同じルートレベルの関数呼び出し信号または Simulink 関数で駆動しなければなりません。これは、Bus Creator ブロックが非バーチャル バスを作成し、&lt;a href="matlab:helpview([docroot ''/toolbox/simulink/helptargets.map''], ''export_function_models'')"&gt;エクスポート関数モデル&lt;/a&gt; ''{0}'' のルート レベルにあるためです。
    </entry>
    <entry key="NonFcnCallBlkNotAllowedForExportFcn">
  For nonvirtual block ''{1}'' of type ''{2}'' to be placed at the root level of &lt;a href="matlab:helpview([docroot ''/toolbox/simulink/helptargets.map''], ''export_function_models'')"&gt;export-function model&lt;/a&gt; ''{0}'', the block must have a constant sample time.
</entry>
    <entry key="NonFcnCallBlkDisallowConstRateNotAllowedForExportFcn1">
タイプ ''{2}'' の非バーチャル ブロック ''{1}'' を&lt;a href="matlab:helpview([docroot ''/toolbox/simulink/helptargets.map''], ''export_function_models'')"&gt;エクスポート関数モデル&lt;/a&gt; ''{0}'' のルート レベルに配置することはサポートされていません。 &lt;actions exclusiveFixIts="yes"&gt; &lt;action type="fixit" retvalue="false"&gt; &lt;cmd&gt;delete_block(''{1}'');&lt;/cmd&gt; &lt;txt&gt;ブロック ''{1}'' を ''{0}'' のルート レベルから削除する。&lt;/txt&gt; &lt;/action&gt; &lt;/actions&gt;

</entry>
    <entry key="NonFcnCallBlkDisallowConstRateNotAllowedForExportFcn2">
タイプ ''{2}'' の非バーチャル ブロック ''{1}'' を&lt;a href="matlab:helpview([docroot ''/toolbox/simulink/helptargets.map''], ''export_function_models'')"&gt;エクスポート関数モデル&lt;/a&gt; ''{0}'' のルート レベルに配置することはサポートされていません。 &lt;actions exclusiveFixIts="yes"&gt; &lt;action type="fixit" retvalue="false"&gt; &lt;cmd&gt;delete_block(''{1}'');&lt;/cmd&gt; &lt;txt&gt;ブロック ''{1}'' を ''{0}'' のルート レベルから削除する。&lt;/txt&gt; &lt;/action&gt; &lt;action type="fixit"&gt; &lt;cmd&gt;set_param_action(''{0}'', ''SetExecutionDomain'', ''off'');&lt;/cmd&gt; &lt;txt&gt;このモデルの目的がエクスポート関数モデルではない場合は、モデル ''{0}'' のルート レベルでプロパティ インスペクターを開く。[実行] タブで、[実行領域の設定] をオフにするか、[エクスポート関数] 以外の [領域] オプションを選択する。&lt;/txt&gt; &lt;/action&gt; &lt;/actions&gt;

</entry>
    <entry key="ConstBlkNotAllowedForExportFcnWithNonConstRate">
  Constant ブロック ''{1}'' を&lt;a href="matlab:helpview([docroot ''/toolbox/simulink/helptargets.map''], ''export_function_models'')"&gt;エクスポート関数モデル&lt;/a&gt; ''{0}'' のルート レベルに配置するには、このブロックの [サンプル時間] パラメーターを [inf] に設定する必要があります。 &lt;actions exclusiveFixIts="yes"&gt; &lt;action type="fixit" retvalue="false"&gt; &lt;cmd&gt;set_param_action(''{1}'', ''SampleTime'', ''inf'');&lt;/cmd&gt; &lt;txt&gt;''{1}'' の [サンプル時間] パラメーターを [inf] に設定する。&lt;/txt&gt; &lt;/action&gt; &lt;/actions&gt;
</entry>
    <entry key="NonVirtualSubsysNotAllowedForExportFcn">
  非バーチャル サブシステム ''{1}'' を&lt;a href="matlab:helpview([docroot ''/toolbox/simulink/helptargets.map''], ''export_function_models'')"&gt;エクスポート関数モデル&lt;/a&gt; ''{0}'' のルート レベルに配置するには、ブロックのサンプル時間が定数である必要があります。
</entry>
    <entry key="TunableConstTsBlkNotAllowedForExpFcnMdlWithSuggestion1">
  &lt;a href="matlab:helpview([docroot ''/toolbox/simulink/helptargets.map''], ''export_function_models'')"&gt;エクスポート関数モデル&lt;/a&gt; ''{0}'' のルート レベルのブロック ''{1}'' には、Constant ブロックから発生した入力信号があり、調整可能なランタイム パラメーターをもっています。この場合、コード生成はサポートされていません。ブロック ''{1}'' を接続先の関数呼び出しブロック ''{2}'' に移動することを検討してください。
</entry>
    <entry key="TunableConstTsBlkNotAllowedForExpFcnMdlWithSuggestion2">
  &lt;a href="matlab:helpview([docroot ''/toolbox/simulink/helptargets.map''], ''export_function_models'')"&gt;エクスポート関数モデル&lt;/a&gt; ''{0}'' のルート レベルのブロック ''{1}'' には、Constant ブロックから発生した入力信号があり、調整可能なランタイム パラメーターをもっています。この場合、コード生成はサポートされていません。ブロック ''{1}'' は関数呼び出しブロックを駆動しないため、このブロック ''{1}'' を削除することを検討してください。
</entry>
    <entry key="TunableConstTsBlkNotAllowedForExpFcnMdlWithFix">
  &lt;a href="matlab:helpview([docroot ''/toolbox/simulink/helptargets.map''], ''export_function_models'')"&gt;エクスポート関数モデル&lt;/a&gt; ''{0}'' のルート レベルのブロック ''{1}'' には、Constant ブロックから発生した入力信号があり、調整可能なランタイム パラメーターをもっています。この場合、コード生成はサポートされていません。&lt;actions exclusiveFixIts="yes"&gt;&lt;action type="fixit"&gt;&lt;cmd&gt;configset.internal.fixIt(''{0}'',''DefaultParameterBehavior'',''Inlined'')&lt;/cmd&gt;&lt;txt&gt;モデル ''{0}'' の [既定のパラメーター動作] オプションで [インライン] を選択する。&lt;/txt&gt;&lt;/action&gt;&lt;action type="suggestion"&gt;&lt;txt&gt;ブロック ''{1}'' を接続先の関数呼び出しブロック ''{2}'' に移動する。&lt;/txt&gt;&lt;/action&gt;&lt;/actions&gt;
  
</entry>
    <entry key="TunableConstBlkNotAllowedToDrvMultiExportFcns">
  &lt;a href="matlab:helpview([docroot ''/toolbox/simulink/helptargets.map''], ''export_function_models'')"&gt;エクスポート関数モデル&lt;/a&gt; ''{0}'' のルート レベルにおいて、Constant ブロック ''{1}'' に調整可能なランタイム パラメーターがあります。このブロックはブロック ''{3}'' の&lt;sldiag objui="inport" objparam="{2,number,integer}" objname="{3}"&gt;入力端子 {2,number,integer}&lt;/sldiag&gt; とブロック ''{5}'' の&lt;sldiag objui="inport" objparam="{4,number,integer}" objname="{5}"&gt;入力端子 {4,number,integer}&lt;/sldiag&gt; の両方を、それぞれ異なるサンプル時間 ''{6}'' および ''{7}'' で駆動しているため、コード生成はサポートされていません。ブロック ''{1}'' のコピーを作成し、このブロックとその各コピーが 1 つの接続先のみをもつように接続を配線し直すことを検討してください。
</entry>
    <entry key="TunableConstBlkNotAllowedToDrvMultiExportFcnsWithFix">
  &lt;a href="matlab:helpview([docroot ''/toolbox/simulink/helptargets.map''], ''export_function_models'')"&gt;エクスポート関数モデル&lt;/a&gt; ''{0}'' のルート レベルにおいて、Constant ブロック ''{1}'' に調整可能なランタイム パラメーターがあります。このブロックはブロック ''{3}'' の&lt;sldiag objui="inport" objparam="{2,number,integer}" objname="{3}"&gt;入力端子 {2,number,integer}&lt;/sldiag&gt; とブロック ''{5}'' の&lt;sldiag objui="inport" objparam="{4,number,integer}" objname="{5}"&gt;入力端子 {4,number,integer}&lt;/sldiag&gt; の両方を、それぞれ異なるサンプル時間 ''{6}'' および ''{7}'' で駆動しているため、コード生成はサポートされていません。次の操作の一方または両方を行うことを検討してください: &lt;actions exclusiveFixIts="yes"&gt;&lt;action type="fixit"&gt;&lt;cmd&gt;configset.internal.fixIt(''{0}'',''DefaultParameterBehavior'',''Inlined'')&lt;/cmd&gt;&lt;txt&gt;モデル ''{0}'' の [既定のパラメーター動作] オプションで [インライン] を選択する。&lt;/txt&gt;&lt;/action&gt;&lt;action type="suggestion"&gt;&lt;txt&gt;ブロック ''{1}'' のコピーを作成し、このブロックとその各コピーが 1 つの接続先のみをもつように接続を配線し直す。&lt;/txt&gt;&lt;/action&gt;&lt;/actions&gt;
  
</entry>
    <entry key="FcnCallSubsysMustBeDrvByRootFcnCallInportInExpFcnMdl1">
  &lt;a href="matlab:helpview([docroot ''/toolbox/simulink/helptargets.map''], ''export_function_models'')"&gt;エクスポート関数モデル&lt;/a&gt; ''{0}'' では、ブロック ''{1}'' の関数呼び出し入力端子 {2,number,integer} は、関数呼び出しのルートレベルの Inport ブロックによって駆動される必要があります。
</entry>
    <entry key="FcnCallSubsysMustBeDrvByRootFcnCallInportInExpFcnMdl2">
&lt;a href="matlab:helpview([docroot ''/toolbox/simulink/helptargets.map''], ''export_function_models'')"&gt;エクスポート関数モデル&lt;/a&gt; ''{0}'' では、ブロック ''{1}'' の関数呼び出し入力端子 {2,number,integer} は、関数呼び出しのルートレベルの Inport ブロックによって駆動される必要があります。 &lt;actions exclusiveFixIts="yes"&gt; &lt;action type="fixit" retvalue="false"&gt; &lt;cmd&gt;delete_block(''{1}'');&lt;/cmd&gt; &lt;txt&gt;ブロック ''{1}'' を ''{0}'' のルート レベルから削除する。&lt;/txt&gt; &lt;/action&gt; &lt;action type="fixit"&gt; &lt;cmd&gt;set_param_action(''{0}'', ''SetExecutionDomain'', ''off'');&lt;/cmd&gt; &lt;txt&gt;このモデルの目的がエクスポート関数モデルではない場合は、モデル ''{0}'' のルート レベルでプロパティ インスペクターを開く。[実行] タブで、[実行領域の設定] をオフにするか、[エクスポート関数] 以外の [領域] オプションを選択する。&lt;/txt&gt; &lt;/action&gt; &lt;/actions&gt;
</entry>
    <entry key="InvExpFcnMdlDataPortGroupRootInport">
      ''{1}'' と、タイプ ''{4}'' である ''{2}'' の入力端子 {3,number,integer} との間で接続が無効です。&lt;a href="matlab:helpview([docroot ''/toolbox/simulink/helptargets.map''], ''export_function_models'')"&gt;エクスポート関数モデル&lt;/a&gt; ''{0}'' において、ルートレベルの Inport ブロックは、エクスポートした関数、Simulink 関数、初期化/リセット/終了関数、Terminator ブロックのいずれかのブロックに接続しなければなりません。
    </entry>
    <entry key="RootOutportMustBeDrvByRootFcnCallInportInExpFcnMdl1">
  &lt;a href="matlab:helpview([docroot ''/toolbox/simulink/helptargets.map''], ''export_function_models'')"&gt;エクスポート関数モデル&lt;/a&gt; ''{0}'' では、ルートレベルの Outport ブロック ''{1}'' は、関数呼び出しのルートレベルの Inport ブロックによって駆動される関数呼び出しブロック、Simulink 関数、またはそのような関数呼び出しブロックによってのみ駆動される Merge ブロックまたは Mux ブロックに接続されている必要があります。
</entry>
    <entry key="RootOutportMustBeDrvByRootFcnCallInportInExpFcnMdl2">
&lt;a href="matlab:helpview([docroot ''/toolbox/simulink/helptargets.map''], ''export_function_models'')"&gt;エクスポート関数モデル&lt;/a&gt; ''{0}'' では、ルートレベルの Outport ブロック ''{1}'' は、関数呼び出しのルートレベルの Inport ブロックによって駆動される関数呼び出しブロック、Simulink 関数、またはそのような関数呼び出しブロックによってのみ駆動される Merge ブロックまたは Mux ブロックに接続されている必要があります。 &lt;actions exclusiveFixIts="yes"&gt; &lt;action type="fixit"&gt; &lt;cmd&gt;set_param_action(''{0}'', ''SetExecutionDomain'', ''off'');&lt;/cmd&gt; &lt;txt&gt;このモデルの目的がエクスポート関数モデルではない場合は、モデル ''{0}'' のルート レベルでプロパティ インスペクターを開く。[実行] タブで、[実行領域の設定] をオフにするか、[エクスポート関数] 以外の [領域] オプションを選択する。&lt;/txt&gt; &lt;/action&gt; &lt;/actions&gt;
</entry>
    <entry key="InvExpFcnMdlDataPortGroupRootOutport">
      ''{1}'' と、''{4}'' 型の ''{2}'' の出力端子 {3,number,integer} との間で接続が無効です。&lt;a href="matlab:helpview([docroot ''/toolbox/simulink/helptargets.map''], ''export_function_models'')"&gt;エクスポート関数モデル&lt;/a&gt; ''{0}'' において、ルートレベルの Outport ブロックは、エクスポートした関数、Simulink 関数、初期化/リセット/終了関数、エクスポートした関数によって駆動される Merge または Mux ブロック、あるいは Ground ブロックの、いずれかのブロックに接続しなければなりません。
    </entry>
    <entry key="InvExpFcnMdlDataPortGroupRootOutportDrvByVM">
      ''{1}'' と ''{2}'' の間の接続が無効です。&lt;a href="matlab:helpview([docroot ''/toolbox/simulink/helptargets.map''], ''export_function_models'')"&gt;エクスポート関数モデル&lt;/a&gt; ''{0}'' において、ルートレベルの Outport ブロックは、エクスポートした関数、Simulink 関数、初期化/リセット/終了関数、エクスポートした関数によって駆動される Merge または Mux ブロック、あるいは Ground ブロックの、いずれかのブロックに接続しなければなりません。
    </entry>
    <entry key="InvExpFcnMdlDataPortGroupRootOutportDrvByMdlBlk">
      ブロック ''{0}'' は、離散レートまたは継承されたレートの信号、接地信号、または信号なしで駆動されていなければなりません。これは、Model ブロック ''{1}'' が端子を使用してレートをスケジュールしており、対応する出力端子 ''{2}'' が &lt;a href="matlab:helpview([docroot ''/toolbox/simulink/helptargets.map''], ''export_function_models'')"&gt;エクスポート関数モデル&lt;/a&gt; ''{3}'' 内の、ルートレベルの Outport または Out Bus Element ブロックに接続されているためです。
    </entry>
    <entry key="InvExpFcnMdlDataPortGroupRootOutportDrvConstRate">
      エクスポート関数モデル ''{0}'' は、Model ブロック ''{2}'' の出力端子 {3,number,integer} から定数レートを継承するルートレベルの Outport ブロック ''{1}'' をサポートしません。''{2}'' 内のソース ブロックのレートを非定数値に変更するか、ソース ブロックから ''{1}'' を切断してください。
    </entry>
    <entry key="RootOutportMustBeDrivenByRootFcnCallInputForAsync">
  &lt;a href="matlab:helpview([docroot ''/toolbox/simulink/helptargets.map''], ''export_function_models'')"&gt;エクスポート関数モデル&lt;/a&gt; ''{0}'' において、ルート レベル Outport ブロック ''{1}'' は関数呼び出しのルート レベル Inport ブロックによってトリガーされる関数呼び出しブロックと、関数呼び出しのルート レベル Inport ブロックによってはトリガーされないブロックに接続されています。これはサポートされていません。ルートレベル Outport ブロック ''{1}'' は、次のいずれかにのみ接続しなければなりません。\n\t1) 関数呼び出しのルートレベル Inport ブロックがトリガーする関数呼び出しブロック。\n\t2) 1) で示したような関数呼び出しブロックのみが駆動する Merge ブロック。\n\t3) 関数呼び出しのルートレベル Inport ブロックが駆動しないブロック。
</entry>
    <entry key="BEPInForExportFcn">
  モデル ''{0}'' に関数呼び出しのルートレベル Inport ブロックがあるか、またはモデルが&lt;a href="matlab:helpview([docroot ''/toolbox/simulink/helptargets.map''], ''export_function_models'')"&gt;関数をエクスポートする&lt;/a&gt;ように設定されています。このようなモデルのルートレベルでは、バス要素の Inport (例: ''{1}'') はサポートされていません。代わりに Inport ブロックを使用することを検討してください。
</entry>
    <entry key="BEPOutForExportFcn">
  モデル ''{0}'' に関数呼び出しのルートレベル Outport ブロックがあるか、またはモデルが&lt;a href="matlab:helpview([docroot ''/toolbox/simulink/helptargets.map''], ''export_function_models'')"&gt;関数をエクスポートする&lt;/a&gt;ように設定されています。このようなモデルのルートレベルでは、バス要素の Outport (例: ''{1}'') はサポートされていません。代わりに Outport ブロックを使用することを検討してください。
</entry>
    <entry key="RootBEPNotSupportedIRTForExportFcn">
  モデル ''{0}'' に関数呼び出しのルートレベルの Inport ブロックがある場合、またはそのモデルが&lt;a href="matlab:helpview([docroot ''/toolbox/simulink/helptargets.map''], ''export_function_models'')"&gt;関数のエクスポート&lt;/a&gt;を行うように設定されている場合、バス要素端子ブロック ''{1}'' を Initialize Function、Reset Function または Terminate Function の各ブロックに接続することはできません。
</entry>
    <entry key="RootInportCannotOutputVirtualBusForExportFcn">
  When model ''{0}'' has function-call root-level Inport blocks, or is set up to &lt;a href="matlab:helpview([docroot ''/toolbox/simulink/helptargets.map''], ''export_function_models'')"&gt;export functions&lt;/a&gt;, the output signal of the root-level Inport block ''{1}'' cannot be a virtual bus. Consider replacing this Inport block with an In Bus Element block, or changing the output to a nonvirtual bus.
           &lt;actions exclusiveFixIts="yes"&gt;
             &lt;action type="fixit"&gt;
               &lt;cmd&gt;set_param_action(''{1}'', ''BusOutputAsStruct'', ''on'');&lt;/cmd&gt;
               &lt;txt&gt;Select the option ''Output as nonvirtual bus'' for the root inport {1}&lt;/txt&gt;
             &lt;/action&gt;
           &lt;/actions&gt;
 </entry>
    <entry key="RootOutportCannotAcceptVirtualBusForExportFcn">
  When model ''{0}'' has function-call root-level Inport blocks, or is set up to &lt;a href="matlab:helpview([docroot ''/toolbox/simulink/helptargets.map''], ''export_function_models'')"&gt;export functions&lt;/a&gt;, the input signal to the root-level Outport block ''{1}'' cannot be a virtual bus. Consider replacing this Outport block with an Out Bus Element block, or making the input signal a nonvirtual bus.
</entry>
    <entry key="StorageClassSpecOnBothRootOutportAndItsSourceBlockForExportFcn">
  モデル ''{0}'' に関数呼び出しのルートレベル Inport ブロックがあるか、またはモデルが&lt;a href="matlab:helpview([docroot ''/toolbox/simulink/helptargets.map''], ''export_function_models'')"&gt;関数をエクスポートする&lt;/a&gt;ように設定されています。そのようなモデルでは、ルートレベル Outport ブロック ''{1}'' と駆動信号線は、いずれもストレージ クラスの指定をもつことはできません。
</entry>
    <entry key="PlatformServicesSpecOnBothRootOutportAndItsSourceBlockForExportFcn">
      モデル ''{0}'' は、関数呼び出しのルートレベルの Inport ブロックがあるか、エクスポート関数として設定されています (ヘルプ センターを参照)。このようなモデルでは、ルートレベルの Outport ブロックが ''{1}'' 送信側サービス インターフェイスにマッピングされ、駆動信号が測定サービス インターフェイスにマッピングされることはサポートされていません。測定サービス インターフェイスにマッピングされた駆動信号を、コード マッピングから削除してください。
    </entry>
    <entry key="RootOutportCannotOutputVirtualBusForExportFcn">
  When model ''{0}'' has function-call root-level Inport blocks, or is set up to &lt;a href="matlab:helpview([docroot ''/toolbox/simulink/helptargets.map''], ''export_function_models'')"&gt; export functions&lt;/a&gt;, the root-level Outport block ''{1}'' cannot have a virtual bus input signal, or output a virtual bus in the parent model if the model is being referenced when the incoming bus is nonvirtual. Consider either replacing this Outport block with an Out Bus Element block, or making the input signal a nonvirtual bus, and selecting the option ''Output as nonvirtual bus in parent model''.
           &lt;actions exclusiveFixIts="yes"&gt;
             &lt;action type="fixit"&gt;
               &lt;cmd&gt;Simulink.ModelReference.internal.ModelRefFixes(''NonvirtualOutportForExpFcn'',''{1}'')&lt;/cmd&gt;
               &lt;txt&gt;Select the option ''Output as nonvirtual bus'' for the root outport {1}&lt;/txt&gt;
             &lt;/action&gt;
           &lt;/actions&gt;
  
</entry>
    <entry key="RootOutportCannotOutputVirtualBusForExportFcn_fix"> コマンド set_param(''{0}'',''BusOutputAsStruct'', ''on'') が実行されました </entry>
    <entry key="RootLevelSignalLoggingNotAllowedForExportFcn">
  &lt;a href="matlab:helpview([docroot ''/toolbox/simulink/helptargets.map''], ''export_function_models'')"&gt;エクスポート関数モデル&lt;/a&gt; ''{0}'' において、ブロック ''{2}'' の&lt;sldiag objui="outport" objparam="{1,number,integer}" objname="{2}"&gt;出力端子 {1,number,integer}&lt;/sldiag&gt; から発生するルートレベルの信号のログ作成またはストリーミングは許可されていません。
</entry>
    <entry key="RootLevelSignalLoggingNotAllowedForExportFcn2">
  &lt;a href="matlab:helpview([docroot ''/toolbox/simulink/helptargets.map''], ''export_function_models'')"&gt;エクスポート関数モデル&lt;/a&gt; ''{0}'' において、ブロック ''{1}'' から発生するルートレベルの信号のログ作成またはストリーミングは許可されていません。
</entry>
    <entry key="DatasetOutputLoggingNotAllowedForAsyncFcnCallMdl">
  'Dataset' 形式を使用できません。モデル ''{0}'' に Asynchronous Task Specification ブロックに接続された関数呼び出しのルートレベルの Inport ブロックが含まれているためです。 &lt;actions exclusiveFixIts="yes"&gt; &lt;action type="suggestion"&gt; &lt;txt&gt;すべての Asynchronous Task Specification ブロックを削除し、このモデルを&lt;a href="matlab:helpview([docroot ''/toolbox/simulink/helptargets.map''], ''export_function_models'')"&gt;エクスポート関数モデル&lt;/a&gt;として設定する。&lt;/txt&gt; &lt;/action&gt; &lt;action type="suggestion"&gt; &lt;txt&gt;このモデルの目的がエクスポート関数モデルではない場合は、[コンフィギュレーション パラメーター] &gt; [データのインポート/エクスポート] &gt; [ワークスペースまたはファイルに保存] &gt; [形式] で別のオプションを指定する。&lt;/txt&gt; &lt;/action&gt; &lt;/actions&gt;
  
</entry>
    <entry key="InvalidExpFcnMdlRootLevelSignalToLogOrView">ブロック ''{0}'' からの出力信号をログに記録または表示できません。&lt;a href="matlab:helpview([docroot ''/toolbox/simulink/helptargets.map''], ''export_function_models'')"&gt;エクスポート関数モデル&lt;/a&gt;内において、ルートレベルのデータ信号は、Function-Call Subsystem から発生している場合にのみ Dataset 形式でのログ作成や表示ができます。
</entry>
    <entry key="InvalidExpFcnMdlRootLevelScopeSaveFormat">
  &lt;a href="matlab:helpview([docroot ''/toolbox/simulink/helptargets.map''], ''export_function_models'')"&gt;エクスポート関数モデル&lt;/a&gt;内にルートレベルのデータ信号のログを作成するには、''{0}'' はダイアログ パラメーター [ログ] &gt; [保存形式] を [データセット] に設定しなければなりません。&lt;actions exclusiveFixIts="no"&gt; &lt;action type="fixit"&gt; &lt;cmd&gt;set_param_action(''{0}'', ''DataLoggingSaveFormat'', ''Dataset'');&lt;/cmd&gt; &lt;txt&gt;''{0}'' で [保存形式] を [データセット] に設定する。&lt;/txt&gt; &lt;/action&gt; &lt;/actions&gt; 
  </entry>
    <entry key="ExportFcnModelCannotExecConcurrently">&lt;a href="matlab:helpview([docroot ''/toolbox/simulink/helptargets.map''], ''export_function_models'')"&gt;エクスポート関数モデル&lt;/a&gt; ''{0}'' 内でのタスクの同時実行はサポートされていません。 &lt;actions exclusiveFixIts="no"&gt; &lt;action type="fixit"&gt; &lt;cmd&gt;set_param_action(''{0}'', ''ConcurrentTasks'', ''off'');&lt;/cmd&gt; &lt;txt&gt;[コンフィギュレーション パラメーター] ダイアログ ボックスで、[ソルバー] &gt; [タスクとサンプル時間オプション] &gt; [ターゲット上でタスクの同時実行を許可] オプションの選択を解除する。&lt;/txt&gt; &lt;/action&gt; &lt;/actions&gt; 
    </entry>
    <entry key="SWArchMdlCannotExecConcurrently">ソフトウェア アーキテクチャ モデル ''{0}'' で、[コンフィギュレーション パラメーター] &gt; [ターゲット上でタスクの同時実行を許可] を選択してはいけません。 &lt;actions exclusiveFixIts="no"&gt; &lt;action type="fixit"&gt; &lt;cmd&gt;set_param_action(''{0}'', ''ConcurrentTasks'', ''off'');&lt;/cmd&gt; &lt;txt&gt;[コンフィギュレーション パラメーター] &gt; [ターゲット上でタスクの同時実行を許可] オプションをオフにする。&lt;/txt&gt; &lt;/action&gt; &lt;/actions&gt; 
      </entry>
    <entry key="ExportFcnModelInvalidSampleTimeConstraint">&lt;a href="matlab:helpview([docroot ''/toolbox/simulink/helptargets.map''], ''export_function_models'')"&gt;エクスポート関数モデル&lt;/a&gt; ''{0}'' において、[コンフィギュレーション パラメーター] &gt; [ソルバー] &gt; [タスクとサンプル時間オプション] でパラメーター [周期的なサンプル時間の制約] を [制約なし] に設定しなければなりません。&lt;actions exclusiveFixIts="no"&gt; &lt;action type="fixit"&gt; &lt;cmd&gt;set_param_action(''{0}'', ''SampleTimeConstraint'', ''Unconstrained'');&lt;/cmd&gt; &lt;txt&gt;''{0}'' で [周期的なサンプル時間の制約] を [制約なし] に設定する。&lt;/txt&gt; &lt;/action&gt; &lt;/actions&gt; 
</entry>
    <entry key="SWArchMdlInvalidSampleTimeConstraint">ソフトウェア アーキテクチャ モデル ''{0}'' では、[コンフィギュレーション パラメーター] &gt; [ソルバー] &gt; [タスクとサンプル時間オプション] で [周期的なサンプル時間の制約] パラメーターを [制約なし] に設定しなければなりません。&lt;actions exclusiveFixIts="no"&gt; &lt;action type="fixit"&gt; &lt;cmd&gt;set_param_action(''{0}'', ''SampleTimeConstraint'', ''Unconstrained'');&lt;/cmd&gt; &lt;txt&gt;''{0}'' で [周期的なサンプル時間の制約] を [制約なし] に設定する。&lt;/txt&gt; &lt;/action&gt; &lt;/actions&gt; 
    </entry>
    <entry key="MuxLoggingAtRootLevelForExportFcn">
  エクスポート関数モデル内で Mux 信号のログはサポートされていません。代わりに、ブロック ''{0}'' の入力時の信号をログ記録してください。
</entry>
    <entry key="RootFcnCallInportMustBeBuiltWithERT">モデル ''{0}'' には関数呼び出し信号を出力するルートレベルの Inport ブロック ''{1}'' が含まれているため、コードを生成するには、システム ターゲット ファイルを ert.tlc に設定しなければなりません。&lt;actions exclusiveFixIts="yes"&gt; &lt;action type="fixit"&gt; &lt;cmd&gt;configset.internal.fixIt(''{0}'',''SystemTargetFile'',''ert.tlc'')&lt;/cmd&gt; &lt;txt&gt;システム ターゲット ファイル &lt;sldiag objui="configset" objparam="SystemTargetFile"&gt;SystemTargetFile&lt;/sldiag&gt; を ert.tlc に設定する。&lt;/txt&gt; &lt;/action&gt; &lt;/actions&gt;

</entry>
    <entry key="RootFcnCallInportDoesNotSupportClassicCallInterface">モデル ''{0}'' には関数呼び出し信号を出力するルートレベル Inport ブロック ''{1}'' が含まれているため、コードを生成するには、&lt;sldiag objui="configset" objparam="GRTInterface"&gt;[クラシック コール インターフェイス]&lt;/sldiag&gt; をオフにしなければなりません。&lt;actions exclusiveFixIts="yes"&gt; &lt;action type="fixit"&gt; &lt;cmd&gt;configset.internal.fixIt(''{0}'',''GRTInterface'',''off'')&lt;/cmd&gt; &lt;txt&gt;&lt;sldiag objui="configset" objparam="GRTInterface"&gt;GRTInterface&lt;/sldiag&gt; パラメーターをオフにする。&lt;/txt&gt; &lt;/action&gt; &lt;/actions&gt;
</entry>
    <entry key="RootFcnCallInportRequiresSampleERTMain">モデル ''{0}'' には関数呼び出し信号を出力するルートレベルの Inport ブロック ''{1}'' が含まれており、[コンフィギュレーション パラメーター]、[コード生成]、[テンプレート] にある [カスタム テンプレート] で、[メイン プログラム例の生成] オプションがオフになっているため、[コンフィギュレーション パラメーター]、[コード生成] で [コード生成のみ] オプションをオンにしなければなりません。</entry>
    <entry key="ExportFcnModelMustBeBuiltWithERT">
  &lt;a href="matlab:helpview([docroot ''/toolbox/simulink/helptargets.map''], ''export_function_models'')"&gt;エクスポート関数モデル&lt;/a&gt; ''{0}'' では、コードを生成するには、システム ターゲット ファイルを ert.tlc に設定しなければなりません。&lt;actions exclusiveFixIts="yes"&gt; &lt;action type="fixit"&gt; &lt;cmd&gt;configset.internal.fixIt(''{0}'',''SystemTargetFile'',''ert.tlc'')&lt;/cmd&gt; &lt;txt&gt;システム ターゲット ファイル &lt;sldiag objui="configset" objparam="SystemTargetFile"&gt;SystemTargetFile&lt;/sldiag&gt; を ert.tlc に設定する。&lt;/txt&gt; &lt;/action&gt; &lt;/actions&gt;
  
</entry>
    <entry key="SWArchMdlMustBeBuiltWithERT">
      ソフトウェア アーキテクチャ モデル ''{0}'' では、コードを生成するにはシステム ターゲット ファイルを ert.tlc に設定しなければなりません。&lt;actions exclusiveFixIts="yes"&gt; &lt;action type="fixit"&gt; &lt;cmd&gt;configset.internal.fixIt(''{0}'',''SystemTargetFile'',''ert.tlc'')&lt;/cmd&gt; &lt;txt&gt;システム ターゲット ファイル &lt;sldiag objui="configset" objparam="SystemTargetFile"&gt;SystemTargetFile&lt;/sldiag&gt; を ert.tlc に設定する。&lt;/txt&gt; &lt;/action&gt; &lt;/actions&gt;
      
    </entry>
    <entry key="ExportFcnModelDoesNotSupportClassicCallInterface">&lt;a href="matlab:helpview([docroot ''/toolbox/simulink/helptargets.map''], ''export_function_models'')"&gt;エクスポート関数モデル&lt;/a&gt; ''{0}'' では、&lt;sldiag objui="configset" objparam="GRTInterface"&gt;[クラシック コール インターフェイス] パラメーター&lt;/sldiag&gt;を選択できません。&lt;actions exclusiveFixIts="yes"&gt; &lt;action type="fixit"&gt; &lt;cmd&gt;configset.internal.fixIt(''{0}'',''GRTInterface'',''off'')&lt;/cmd&gt; &lt;txt&gt;&lt;sldiag objui="configset" objparam="GRTInterface"&gt;GRTInterface&lt;/sldiag&gt; パラメーターをクリアする。&lt;/txt&gt; &lt;/action&gt; &lt;/actions&gt;
</entry>
    <entry key="SWArchMdlDoesNotSupportClassicCallInterface">ソフトウェア アーキテクチャ モデル ''{0}'' で、&lt;sldiag objui="configset" objparam="GRTInterface"&gt;[クラシック コール インターフェイス] パラメーター&lt;/sldiag&gt;の選択内容が無効です。 &lt;actions exclusiveFixIts="yes"&gt; &lt;action type="fixit"&gt; &lt;cmd&gt;configset.internal.fixIt(''{0}'',''GRTInterface'',''off'')&lt;/cmd&gt; &lt;txt&gt;&lt;sldiag objui="configset" objparam="GRTInterface"&gt;GRTInterface&lt;/sldiag&gt; パラメーターをオフにする。&lt;/txt&gt; &lt;/action&gt; &lt;/actions&gt;
    </entry>
    <entry key="ExportFcnModelRequiresSampleERTMain">
  &lt;a href="matlab:helpview([docroot ''/toolbox/simulink/helptargets.map''], ''export_function_models'')"&gt;エクスポート関数モデル&lt;/a&gt; ''{0}'' において、[コンフィギュレーション パラメーター] &gt; [コード生成] &gt; [テンプレート] &gt; [カスタム テンプレート] &gt; [メイン プログラム例の生成] がオフの場合、[コンフィギュレーション パラメーター] &gt; [コード生成] &gt; [コード生成のみ] をオンにする必要があります。&lt;actions exclusiveFixIts="yes"&gt; &lt;action type="fixit"&gt; &lt;cmd&gt;configset.internal.fixIt(''{0}'', ''GenCodeOnly'', ''on'')&lt;/cmd&gt; &lt;txt&gt;パラメーター &lt;sldiag objui="configset" objparam="GenCodeOnly"&gt;[コード生成のみ]&lt;/sldiag&gt; をオンにすることを検討する。&lt;/txt&gt; &lt;/action&gt; &lt;action type="fixit"&gt; &lt;cmd&gt;configset.internal.fixIt(''{0}'', ''GenerateSampleERTMain'', ''on'')&lt;/cmd&gt; &lt;txt&gt;あるいは、パラメーター &lt;sldiag objui="configset" objparam="GenerateSampleERTMain"&gt;[メイン プログラム例の生成]&lt;/sldiag&gt; をオンにする。&lt;/txt&gt; &lt;/action&gt; &lt;/actions&gt;
</entry>
    <entry key="ExportFcnCallModelInvalidExecOrderInBranchFcnCall">
  Model ブロック ''{0}'' では、関数呼び出し入力端子 ''{2}'' の前に関数呼び出し入力端子 ''{1}'' を実行する必要があります。しかし、これら 2 つの関数呼び出し入力端子は、イニシエーター ''{4}'' の出力端子 {3,number,integer} から生じる分岐関数呼び出し信号によって駆動され、この分岐関数呼び出し信号に接続している Function-Call Split ブロックによって逆の実行順序が指定されています。 &lt;actions exclusiveFixIts="yes"&gt; &lt;action type="fixit" id="EnableSchedulingChecks"&gt; &lt;cmd&gt;configset.internal.fixIt(''{5}'', ''EnableRefExpFcnMdlSchedulingChecks'', ''off'')&lt;/cmd&gt; &lt;txt&gt;このエラー メッセージを無効にするには、[コンフィギュレーション パラメーター] ダイアログの [モデル参照] ページでパラメーター &lt;sldiag objui="configset" objparam="EnableRefExpFcnMdlSchedulingChecks"&gt;[参照モデルの厳密なスケジューリング チェックを有効にする]&lt;/sldiag&gt; をオフにする。&lt;/txt&gt; &lt;/action&gt; &lt;/actions&gt;
</entry>
    <entry key="InvalidExecOrderInTopModelSameTs">
  Model ブロック ''{2}'' の関数呼び出し入力端子 ''{0}'' および ''{1}'' は、異なる関数呼び出しイニシエーター (それぞれ ''{3}'' および ''{4}'') によって駆動されています。これら 2 つのイニシエーターは同じサンプル時間をもつため、相対的な実行順序があいまいでシミュレーション結果が異なる場合があります。Function-Call Split ブロックまたは Stateflow チャートなどの共通の関数呼び出しイニシエーター ブロックを使用して、これらの 2 つの入力端子の関数呼び出しを確定的な順序にスケジュールすることを検討してください。
</entry>
    <entry key="InvalidExecOrderInTopModelSameTs2">
  Model ブロック ''{1}'' の関数呼び出し&lt;sldiag objui="inport" objparam="{0}" objname="{1}"&gt;入力端子 ''{0}''&lt;/sldiag&gt; は、''{2}'' と ''{3}'' という異なる関数呼び出しイニシエーターによって別々に駆動されます。これら 2 つのイニシエーターは同じサンプル時間をもつため、相対的な実行順序があいまいになりシミュレーションが異なるものになる場合があります。Function-Call Split ブロックまたは Stateflow チャートなどの共通の関数呼び出しイニシエーター ブロックを使用して、これらの 2 つの入力端子の関数呼び出しを確定的な順序にスケジュールすることを検討してください。
</entry>
    <entry key="InvalidExecOrderInTopModelPriorityEqualOrUnknown">
  Model ブロック ''{2}'' の関数呼び出し入力端子 ''{0}'' および ''{1}'' のサンプル時間のタスク優先順位が等しいか、優先順位の関係が不明です。これら 2 つの関数呼び出し入力端子は、''{3}'' および ''{4}'' という異なる関数呼び出し開始プログラムにより別々に駆動されるため、これらの開始プログラムの相対的な実行順序があいまいになり、異なるシミュレーション結果が生じる可能性があります。&lt;actions exclusiveFixIts="yes"&gt; &lt;action type="fixit"&gt; &lt;cmd&gt;configset.internal.fixIt(''{5}'', ''EnableRefExpFcnMdlSchedulingChecks'', ''off'')&lt;/cmd&gt; &lt;txt&gt;このエラー メッセージを無効にするには、[コンフィギュレーション パラメーター] ダイアログの [モデル参照] ページでパラメーター &lt;sldiag objui="configset" objparam="EnableRefExpFcnMdlSchedulingChecks"&gt;[参照モデルの厳密なスケジューリング チェックを有効にする]&lt;/sldiag&gt; をオフにする。&lt;/txt&gt; &lt;/action&gt; &lt;action type="suggestion"&gt; &lt;txt&gt;あるいは、非同期タスクの優先順位を調整するか、Function-Call Split ブロック、または Stateflow チャートなどの共通の関数呼び出し開始プログラムのブロックを使用して、これら 2 つの入力端子の関数呼び出しを確定的な順序にスケジュールすることを検討する。&lt;/txt&gt; &lt;/action&gt; &lt;/actions&gt;
    
</entry>
    <entry key="InvalidExecOrderInTopModelReversePriority">
  Model ブロック ''{0}'' では、関数呼び出し入力端子 ''{2}'' の前に関数呼び出し入力端子 ''{1}'' を実行する必要があります。しかし、関数呼び出し入力端子 ''{1}'' のサンプル時間のタスク優先順位が、関数呼び出し入力端子 ''{2}'' よりも低いので、この実行順序は許可されません。2 つの関数呼び出し入力端子は、それぞれ ''{3}'' および ''{4}'' の関数呼び出しイニシエーター ブロックによって駆動されています。関数呼び出し入力端子 ''{1}'' を、サンプル時間がより高速 (優先順位が高い) であるか、非同期タスクの優先順位がより高い関数呼び出しイニシエーターと併用することを検討してください。&lt;actions exclusiveFixIts="yes"&gt; &lt;action type="fixit"&gt; &lt;cmd&gt;configset.internal.fixIt(''{5}'', ''EnableRefExpFcnMdlSchedulingChecks'', ''off'')&lt;/cmd&gt; &lt;txt&gt;このエラー メッセージを無効にするには、[コンフィギュレーション パラメーター] ダイアログの [モデル参照] ページでパラメーター &lt;sldiag objui="configset" objparam="EnableRefExpFcnMdlSchedulingChecks"&gt;[参照モデルの厳密なスケジューリング チェックを有効にする]&lt;/sldiag&gt; をオフにする。&lt;/txt&gt; &lt;/action&gt; &lt;action type="suggestion"&gt; &lt;txt&gt;あるいは、Function-Call Split ブロック、または Stateflow チャートなど、通常の関数呼び出しイニシエーターのブロックを使用して、必要な順序でこれら 2 つの入力端子の関数呼び出しをスケジュールすることを検討する。&lt;/txt&gt; &lt;/action&gt; &lt;/actions&gt;
    
</entry>
    <entry key="FcnCallPortMustBeDrivenByFcnCallRootInportInExportFcnModel">
  Model ブロック ''{1}'' がルート レベルに存在し、親モデル ''{2}'' が&lt;a href="matlab:helpview([docroot ''/toolbox/simulink/helptargets.map''], ''export_function_models'')"&gt;エクスポート関数モデル&lt;/a&gt;であるため、この Model ブロックの関数呼び出し&lt;sldiag objui="inport" objparam="{0}" objname="{1}"&gt;入力端子 ''{0}''&lt;/sldiag&gt; は、関数呼び出しのルートレベル Inport ブロックによって駆動されなければなりません。
</entry>
    <entry key="InvalidExecOrderInParentExportFcnModel">
  Model ブロック ''{0}'' では、関数呼び出し入力端子 ''{2}'' の前に関数呼び出し入力端子 ''{1}'' を実行する必要があります。しかし、関数呼び出し入力端子 ''{1}'' を駆動する関数呼び出しのルートレベル Inport ブロック ''{3}'' が、関数呼び出し入力端子 ''{2}'' を駆動する関数呼び出しのルートレベル Inport ブロック ''{4}'' より後の実行を指定されているため、この実行順序は許可されません。&lt;actions exclusiveFixIts="yes"&gt; &lt;action type="fixit"&gt; &lt;cmd&gt;configset.internal.fixIt(''{5}'', ''EnableRefExpFcnMdlSchedulingChecks'', ''off'')&lt;/cmd&gt; &lt;txt&gt;このエラー メッセージを無効にするには、[コンフィギュレーション パラメーター] ダイアログの [モデル参照] ページでパラメーター &lt;sldiag objui="configset" objparam="EnableRefExpFcnMdlSchedulingChecks"&gt;[参照モデルの厳密なスケジューリング チェックを有効にする]&lt;/sldiag&gt; をオフにする。&lt;/txt&gt; &lt;/action&gt; &lt;action type="suggestion"&gt; &lt;txt&gt;あるいは、親モデル ''{5}'' 内にある関数呼び出しのルートレベル Inport ブロックの実行順序を調整して、参照モデル ''{6}'' の順序に一致させることを検討する。&lt;/txt&gt; &lt;/action&gt; &lt;/actions&gt;
    
</entry>
    <entry key="NonExportFcnModelBlockNotAllowedInExportFcnModel">
  参照モデル ''{2}'' に離散レートが含まれているため、Model ブロック ''{0}'' を&lt;a href="matlab:helpview([docroot ''/toolbox/simulink/helptargets.map''], ''export_function_models'')"&gt;エクスポート関数モデル&lt;/a&gt; ''{1}'' 内に配置することは許可されません。&lt;actions exclusiveFixIts="no"&gt; &lt;action type="fixit"&gt; &lt;cmd&gt;set_param_action(''{0}'', ''ShowModelPeriodicEventPorts'', ''on'');&lt;/cmd&gt; &lt;txt&gt;Model ブロック ''{0}'' で &lt;sldiag objui="blockdlg" objparam="ShowModelPeriodicEventPorts"&gt;[レートのスケジュール]&lt;/sldiag&gt; パラメーターを選択し、&lt;a href="matlab:helpview([docroot ''/toolbox/simulink/helptargets.map''], ''function_call_adaptation'')"&gt;参照モデル内の離散レートを関数呼び出し入力端子に適応させ&lt;/a&gt;、それらの端子を関数呼び出しのルートレベル Inport ブロックに接続することを検討する。&lt;/txt&gt; &lt;/action&gt; &lt;/actions&gt;
</entry>
    <entry key="ExportFcnModelElapsedTimeNotSupported">
  &lt;a href="matlab:helpview([docroot ''/toolbox/simulink/helptargets.map''], ''export_function_models'')"&gt;エクスポート関数モデル&lt;/a&gt; ''{0}'' において、経過時間を使用するブロック ''{1}'' は、継承サンプル時間 (-1) をもつ関数呼び出しのルートレベル Inport ブロック ''{2}'' によって駆動される関数呼び出しサブシステム内では許可されません。 &lt;actions exclusiveFixIts="no"&gt; &lt;action type="suggestion"&gt; &lt;cmd&gt;Simulink.internal.OpenBlockParamsDialog(''{3}'', ''SampleTime'')&lt;/cmd&gt; &lt;txt&gt;これを修正するには、Inport ブロック ''{3}'' の &lt;sldiag objui="blockdlg" objparam="SampleTime"&gt;[サンプル時間]&lt;/sldiag&gt; を離散レートに設定する。&lt;/txt&gt; &lt;/action&gt; &lt;/actions&gt;
</entry>
    <entry key="ExportFcnModelElapsedTimeNotSupported2a">
  &lt;a href="matlab:helpview([docroot ''/toolbox/simulink/helptargets.map''], ''export_function_models'')"&gt;エクスポート関数モデル&lt;/a&gt; ''{0}'' において、経過時間を使用するブロック ''{1}'' は、関数呼び出しのルートレベル Inport ブロック ''{3}'' によって直接駆動される、トリガーされた Function-Call Subsystem ''{2}'' 内に配置できません。&lt;actions exclusiveFixIts="no"&gt; &lt;action type="fixit"&gt; &lt;cmd&gt;set_param_action(''{4}'', ''SampleTimeType'', ''periodic'');&lt;/cmd&gt; &lt;txt&gt;''{4}'' のダイアログ パラメーター &lt;sldiag objui="blockdlg" objparam="SampleTimeType"&gt;[サンプル時間タイプ]&lt;/sldiag&gt; を [周期的] に変更することを検討する。&lt;/txt&gt; &lt;/action&gt; &lt;/actions&gt;
</entry>
    <entry key="ExportFcnModelElapsedTimeNotSupported2b">
  &lt;a href="matlab:helpview([docroot ''/toolbox/simulink/helptargets.map''], ''export_function_models'')"&gt;エクスポート関数モデル&lt;/a&gt; ''{0}'' において、経過時間を使用するブロック ''{1}'' は、関数呼び出しのルートレベル Inport ブロック ''{3}'' によって直接駆動される、トリガーされた Function-Call Subsystem ''{2}'' 内に配置できません。&lt;actions exclusiveFixIts="no"&gt; &lt;action type="suggestion"&gt; &lt;txt&gt;''{4}'' のダイアログ パラメーター &lt;sldiag objui="blockdlg" objparam="SampleTimeType"&gt;[サンプル時間タイプ]&lt;/sldiag&gt; を [周期的] に変更することを検討する。&lt;/txt&gt; &lt;/action&gt; &lt;/actions&gt;
</entry>
    <entry key="ExportFcnModelElapsedTimeNotSupported3a">
  &lt;a href="matlab:helpview([docroot ''/toolbox/simulink/helptargets.map''], ''export_function_models'')"&gt;エクスポート関数モデル&lt;/a&gt; ''{0}'' で、ブロック ''{1}'' は経過時間を使用します。このブロックは、トリガーされた Function-Call Subsystem ''{2}'' によって駆動される Function-Call Subsystem 内には配置できません。''{3}'' が関数呼び出しのルートレベル Inport ブロック ''{4}'' によって直接駆動されるためです。&lt;actions exclusiveFixIts="no"&gt; &lt;action type="fixit"&gt; &lt;cmd&gt;set_param_action(''{5}'', ''SampleTimeType'', ''periodic'');&lt;/cmd&gt; &lt;txt&gt;''{5}'' のダイアログ パラメーター &lt;sldiag objui="blockdlg" objparam="SampleTimeType"&gt;[サンプル時間タイプ]&lt;/sldiag&gt; を [周期的] に変更することを検討する。&lt;/txt&gt; &lt;/action&gt; &lt;/actions&gt;
</entry>
    <entry key="ExportFcnModelElapsedTimeNotSupported3b">
  &lt;a href="matlab:helpview([docroot ''/toolbox/simulink/helptargets.map''], ''export_function_models'')"&gt;エクスポート関数モデル&lt;/a&gt; ''{0}'' で、ブロック ''{1}'' は経過時間を使用します。このブロックは、トリガーされた Function-Call Subsystem ''{2}'' によって駆動される Function-Call Subsystem 内には配置できません。''{3}'' が関数呼び出しのルートレベル Inport ブロック ''{4}'' によって直接駆動されるためです。&lt;actions exclusiveFixIts="no"&gt; &lt;action type="suggestion"&gt; &lt;txt&gt;''{5}'' のダイアログ パラメーター &lt;sldiag objui="blockdlg" objparam="SampleTimeType"&gt;[サンプル時間タイプ]&lt;/sldiag&gt; を [周期的] に変更することを検討する。&lt;/txt&gt; &lt;/action&gt; &lt;/actions&gt;
</entry>
    <entry key="ExportFcnModelAbsoluteTimeNotSupported">
  &lt;a href="matlab:helpview([docroot ''/toolbox/simulink/helptargets.map''], ''export_function_models'')"&gt;エクスポート関数モデル&lt;/a&gt; ''{0}'' において、絶対時間を使用するブロック ''{1}'' は、継承サンプル時間 (-1) をもつ関数呼び出しのルートレベル Inport ブロック ''{2}'' によって駆動される関数呼び出しサブシステム内では許可されません。 &lt;actions exclusiveFixIts="no"&gt; &lt;action type="suggestion"&gt; &lt;cmd&gt;Simulink.internal.OpenBlockParamsDialog(''{3}'', ''SampleTime'')&lt;/cmd&gt; &lt;txt&gt;これを修正するには、Inport ブロック ''{3}'' の &lt;sldiag objui="blockdlg" objparam="SampleTime"&gt;[サンプル時間]&lt;/sldiag&gt; を離散レートに設定する。&lt;/txt&gt; &lt;/action&gt; &lt;/actions&gt;
</entry>
    <entry key="ExportFcnModelAbsoluteTimeNotSupported2a">
  &lt;a href="matlab:helpview([docroot ''/toolbox/simulink/helptargets.map''], ''export_function_models'')"&gt;エクスポート関数モデル&lt;/a&gt; ''{0}'' において、絶対時間を使用するブロック ''{1}'' は、関数呼び出しのルートレベル Inport ブロック ''{3}'' によって直接駆動される、トリガーされた Function-Call Subsystem ''{2}'' 内に配置できません。&lt;actions exclusiveFixIts="no"&gt; &lt;action type="fixit"&gt; &lt;cmd&gt;set_param_action(''{4}'', ''SampleTimeType'', ''periodic'');&lt;/cmd&gt; &lt;txt&gt;''{4}'' のダイアログ パラメーター &lt;sldiag objui="blockdlg" objparam="SampleTimeType"&gt;[サンプル時間タイプ]&lt;/sldiag&gt; を [周期的] に変更することを検討する。&lt;/txt&gt; &lt;/action&gt; &lt;/actions&gt;
</entry>
    <entry key="ExportFcnModelAbsoluteTimeNotSupported2b">
  &lt;a href="matlab:helpview([docroot ''/toolbox/simulink/helptargets.map''], ''export_function_models'')"&gt;エクスポート関数モデル&lt;/a&gt; ''{0}'' において、絶対時間を使用するブロック ''{1}'' は、関数呼び出しのルートレベル Inport ブロック ''{3}'' によって直接駆動される、トリガーされた Function-Call Subsystem ''{2}'' 内に配置できません。&lt;actions exclusiveFixIts="no"&gt; &lt;action type="suggestion"&gt; &lt;txt&gt;''{4}'' のダイアログ パラメーター &lt;sldiag objui="blockdlg" objparam="SampleTimeType"&gt;[サンプル時間タイプ]&lt;/sldiag&gt; を [周期的] に変更することを検討する。&lt;/txt&gt; &lt;/action&gt; &lt;/actions&gt;
</entry>
    <entry key="ExportFcnModelAbsoluteTimeNotSupported3a">
  &lt;a href="matlab:helpview([docroot ''/toolbox/simulink/helptargets.map''], ''export_function_models'')"&gt;エクスポート関数モデル&lt;/a&gt; ''{0}'' で、ブロック ''{1}'' は絶対時間を使用します。このブロックは、トリガーされた Function-Call Subsystem ''{2}'' によって駆動される Function-Call Subsystem 内には配置できません。''{3}'' が関数呼び出しのルートレベル Inport ブロック ''{4}'' によって直接駆動されるためです。&lt;actions exclusiveFixIts="no"&gt; &lt;action type="fixit"&gt; &lt;cmd&gt;set_param_action(''{5}'', ''SampleTimeType'', ''periodic'');&lt;/cmd&gt; &lt;txt&gt;''{5}'' のダイアログ パラメーター &lt;sldiag objui="blockdlg" objparam="SampleTimeType"&gt;[サンプル時間タイプ]&lt;/sldiag&gt; を [周期的] に変更することを検討する。&lt;/txt&gt; &lt;/action&gt; &lt;/actions&gt;
</entry>
    <entry key="ExportFcnModelAbsoluteTimeNotSupported3b">
  &lt;a href="matlab:helpview([docroot ''/toolbox/simulink/helptargets.map''], ''export_function_models'')"&gt;エクスポート関数モデル&lt;/a&gt; ''{0}'' で、ブロック ''{1}'' は絶対時間を使用します。このブロックは、トリガーされた Function-Call Subsystem ''{2}'' によって駆動される Function-Call Subsystem 内には配置できません。''{3}'' が関数呼び出しのルートレベル Inport ブロック ''{4}'' によって直接駆動されるためです。&lt;actions exclusiveFixIts="no"&gt; &lt;action type="suggestion"&gt; &lt;txt&gt;''{5}'' のダイアログ パラメーター &lt;sldiag objui="blockdlg" objparam="SampleTimeType"&gt;[サンプル時間タイプ]&lt;/sldiag&gt; を [周期的] に変更することを検討する。&lt;/txt&gt; &lt;/action&gt; &lt;/actions&gt;
</entry>
    <entry key="ExportedAsyncJMAABBClockResolutionMismatch">
        Block ''{0}'', triggered by the function-call input port ''{1,number,integer}'' of model block ''{2}'' uses absolute or elapsed time. The base timer resolution ''{3}'' of the model block ''{2}'' is different from the timer resolution ''{4}'' of the caller. The base timer resolution of the model block and the caller timer resolution must be the same.
        
    </entry>
    <entry key="ExportFcnModelNonInlinedSFcnsNotSupported">
  &lt;a href="matlab:helpview([docroot ''/toolbox/simulink/helptargets.map''], ''export_function_models'')"&gt;エクスポート関数モデル&lt;/a&gt; ''{0}'' において、インラインでない S-Function ''{1}'' に対しコード生成はサポートされていません。対応する TLC 実装を指定してインラインでない S-Function をインライン S-Function に変換するか、関数呼び出しのルートレベル Inport ブロックをそれぞれ Asynchronous Task Specification ブロックに接続することを検討してください。これにより、非同期関数呼び出しの動作が実現します。
</entry>
    <entry key="ExportFcnModelMatFileLoggingNotSupported">
   &lt;a href="matlab:helpview([docroot ''/toolbox/simulink/helptargets.map''], ''export_function_models'')"&gt;エクスポート関数モデル&lt;/a&gt; ''{0}'' では、コード生成に対し MAT ファイルのログはサポートされません。 &lt;actions exclusiveFixIts="yes"&gt; &lt;action type="fixit"&gt; &lt;cmd&gt;configset.internal.fixIt(''{0}'', ''MatFileLogging'', ''off'')&lt;/cmd&gt; &lt;txt&gt;コンフィギュレーション パラメーター &lt;sldiag objui="configset" objparam="MatFileLogging"&gt;MatFileLogging&lt;/sldiag&gt; をオフにする。&lt;/txt&gt; &lt;/action&gt; &lt;/actions&gt;
  
</entry>
    <entry key="SWArchMdlMatFileLoggingNotSupported">
       ソフトウェア アーキテクチャ モデル ''{0}'' では、コード生成に対し MAT ファイルのログはサポートされません。 &lt;actions exclusiveFixIts="yes"&gt; &lt;action type="fixit"&gt; &lt;cmd&gt;configset.internal.fixIt(''{0}'', ''MatFileLogging'', ''off'')&lt;/cmd&gt; &lt;txt&gt;コンフィギュレーション パラメーター &lt;sldiag objui="configset" objparam="MatFileLogging"&gt;MatFileLogging&lt;/sldiag&gt; をオフにする。&lt;/txt&gt; &lt;/action&gt; &lt;/actions&gt;
      
    </entry>
    <entry key="MixedRootFcnCallInportToAsyncTaskSpecConnections1">
    モデル ''{0}'' では、関数呼び出しのルートレベルの Inport ブロック ''{1}'' は Asynchronous Task Specification ブロック ''{2}'' に接続されていますが、もう一方の関数呼び出しのルートレベルの Inport ブロック ''{3}'' は接続されていません。 &lt;actions exclusiveFixIts="yes"&gt; &lt;action type="fixit" retvalue="false"&gt; &lt;cmd&gt;set_param_action(''{0}'', ''SetExecutionDomain'', ''on'');set_param_action(''{0}'', ''ExecutionDomainType'', ''ExportFunction''); set_param(''{2}'', ''Commented'', ''Through'');&lt;/cmd&gt; &lt;txt&gt;このモデルを&lt;a href="matlab:helpview([docroot ''/toolbox/simulink/helptargets.map''], ''export_function_models'')"&gt;エクスポート関数モデル&lt;/a&gt;として設定するには、Asynchronous Task Specification ブロック ''{2}'' をコメント スルーまたは削除する。&lt;/txt&gt; &lt;/action&gt; &lt;action type="suggestion"&gt; &lt;txt&gt;このモデルの目的がエクスポート関数モデルではない場合は、''{3}'' を Asynchronous Task Specification ブロックに接続し、このモデルのルート レベルでプロパティ インスペクターを開く。[実行] タブで、[実行領域の設定] をオフにするか、[エクスポート関数] 以外の [領域] オプションを選択する。&lt;/txt&gt; &lt;/action&gt; &lt;/actions&gt;
</entry>
    <entry key="MixedRootFcnCallInportToAsyncTaskSpecConnections2">
    モデル ''{0}'' では、関数呼び出しのルートレベルの Inport ブロック ''{1}'' は Asynchronous Task Specification ブロック ''{2}'' に接続されていますが、もう一方の関数呼び出しのルートレベルの Inport ブロック ''{3}'' は接続されていません。 &lt;actions exclusiveFixIts="yes"&gt; &lt;action type="suggestion"&gt; &lt;txt&gt;このモデルの目的がエクスポート関数モデルではない場合は、''{3}'' を Asynchronous Task Specification ブロックに接続し、このモデルのルート レベルでプロパティ インスペクターを開く。[実行] タブで、[実行領域の設定] をオフにするか、[エクスポート関数] 以外の [領域] オプションを選択する。&lt;/txt&gt; &lt;/action&gt; &lt;action type="fixit" retvalue="false"&gt; &lt;cmd&gt;set_param_action(''{0}'', ''SetExecutionDomain'', ''on'');set_param_action(''{0}'', ''ExecutionDomainType'', ''ExportFunction''); set_param(''{2}'', ''Commented'', ''Through'');&lt;/cmd&gt; &lt;txt&gt;あるいは、このモデルを&lt;a href="matlab:helpview([docroot ''/toolbox/simulink/helptargets.map''], ''export_function_models'')"&gt;エクスポート関数モデル&lt;/a&gt;として設定するには、Asynchronous Task Specification ブロック ''{2}'' をコメント スルーまたは削除する。このモデルのルート レベルでプロパティ インスペクターを開く。[実行] タブで、[実行領域の設定] を選択し、[領域] を [エクスポート関数] に設定する。&lt;/txt&gt; &lt;/action&gt; &lt;/actions&gt;
</entry>
    <entry key="FcnCallRootInportCannotDriveSimEventsGateway">
  関数呼び出しのルートレベルの Inport ブロック ''{0}'' で SimEvents Gateway ブロック ''{1}'' を駆動することはできません。
</entry>
    <entry key="MultiInstanceERTCodeNotSupportedForExpFcnMdl">再利用可能なコードの生成は、&lt;a href="matlab:helpview([docroot ''/toolbox/simulink/helptargets.map''], ''export_function_models'')"&gt;エクスポート関数モデル&lt;/a&gt; ''{0}'' ではサポートされません。 &lt;actions exclusiveFixIts="yes"&gt; &lt;action type="fixit"&gt; &lt;cmd&gt;configset.internal.fixIt(''{0}'', ''CodeInterfacePackaging'', ''Nonreusable function'')&lt;/cmd&gt; &lt;txt&gt;[コンフィギュレーション パラメーター] &gt; [コード生成] &gt; [インターフェイス] で &lt;sldiag objui="configset" objparam="CodeInterfacePackaging"&gt;[コード インターフェイスのパッケージ化]&lt;/sldiag&gt; オプションを [再利用できない関数] に設定することを検討する。&lt;/txt&gt; &lt;/action&gt; &lt;/actions&gt;
</entry>
    <entry key="MergeConstantSampleTimeDisallowedInExpFcnMdl">At root level of export function model ''{0}'', source block ''{1}'' of Merge block ''{2}'' is not a function-call subsystem or subsystem that includes an Initialize Function, Terminate Function, Reinitialize Function, or Reset Function block. Connect ''{2}'' to a valid source block.</entry>
    <entry key="MergeMdlBlkUnconnectedPortDisallowedInExpFcnMdl">ブロック ''{1}'' の出力端子 ''{2}'' は、Merge ブロック ''{0}'' に対する無効な入力です。&lt;a href="matlab:helpview([docroot ''/toolbox/simulink/helptargets.map''], ''export_function_models'')"&gt;エクスポート関数モデル&lt;/a&gt;のルート グラフでは、Merge ブロックへの入力を送り出すすべてのソースを、関数呼び出しのルート レベル Inport ブロック、Simulink 関数、または Initialize、Reset、Terminate Function のいずれかのブロックによって駆動しなければなりません。</entry>
    <entry key="FcnCallerNotInFcnCallPortGroupInExpFcnMdl">Function Caller ブロック ''{0}'' が&lt;a href="matlab:helpview([docroot ''/toolbox/simulink/helptargets.map''], ''export_function_models'')"&gt;エクスポート関数モデル&lt;/a&gt; ''{1}'' 内にあります。したがって、Simulink Function ブロック内に配置するか、関数呼び出しのルートレベルの Inport ブロックによって駆動しなければなりません。しかし、ブロックはサブシステム ''{2}'' 内にあり、このルールに違反しています。</entry>
    <entry key="SLFcnHasInputFromCaller">Simulink 関数 ''{1}'' の入力端子 {0,number,integer} とブロック ''{3}'' の&lt;sldiag objui="outport" objparam="{2,number,integer}" objname="{3}"&gt;出力端子 {2,number,integer}&lt;/sldiag&gt; の間の接続が無効です。このような接続は予期しない動作につながることがあります。''{4}'' の実行中に Simulink 関数が呼び出される可能性があるためです。</entry>
    <entry key="SLFcnInRefMdlHasInputFromCaller">Model ブロック ''{2}'' の入力端子 {1,number,integer} を経由する Simulink 関数 ''{0}'' への入力と、ブロック ''{4}'' の&lt;sldiag objui="outport" objparam="{3,number,integer}" objname="{4}"&gt;出力端子 {3,number,integer}&lt;/sldiag&gt; との間の接続が無効です。このような接続は予期しない動作につながることがあります。''{5}'' の実行中に Simulink 関数が呼び出される可能性があるためです。</entry>
    <entry key="FcnCallBlkShouldLatchInputFromSimulinkFcn">関数呼び出しブロック ''{1}'' の入力端子 {0,number,integer} と Simulink 関数 ''{3}'' の出力端子 {2,number,integer} との接続が無効です。このような接続は予期しない動作につながることがあります。''{4}'' の実行中に Simulink 関数が呼び出される可能性があるためです。Function-Call Feedback Latch ブロックを対応する入力の前に配置するか、''{6}'' の&lt;sldiag objui="inport" objparam="{5,number,integer}" objname="{6}"&gt;入力端子 {5,number,integer}&lt;/sldiag&gt; に対応する Inport ブロックの [Function-Call Subsystem 出力のフィードバック信号の入力をラッチする] パラメーターをオンにすることを検討してください。</entry>
    <entry key="SLFcnConstTsUncalled">Simulink Coder does not generate code for uncalled Simulink function ''{0}'' defined by block ''{1}''.</entry>
    <entry key="SLFcnUncalledInPossibleExpFcnMdl">Simulink Coder では、ブロック ''{1}'' で定義され、呼び出されない Simulink 関数 ''{0}'' のコードは生成されません。 &lt;actions exclusiveFixIts="yes"&gt; &lt;action type="fixit"&gt; &lt;cmd&gt;set_param_action(''{2}'', ''SetExecutionDomain'', ''on'');set_param_action(''{2}'', ''ExecutionDomainType'', ''ExportFunction'');&lt;/cmd&gt; &lt;txt&gt;この関数のコードを生成するには、モデル ''{2}'' を&lt;a href="matlab:helpview([docroot ''/toolbox/simulink/helptargets.map''], ''export_function_models'')"&gt;エクスポート関数モデル&lt;/a&gt;として指定する。モデルのルート レベルでプロパティ インスペクターを開く。[実行] タブで、[実行領域の設定] を選択し、[領域] を [エクスポート関数] に設定する。&lt;/txt&gt; &lt;/action&gt; &lt;/actions&gt;

</entry>
    <entry key="SLFcnHasInvalidInputConnection">スコープありの Simulink 関数 ''{1}'' の入力端子 {0,number,integer} とブロック ''{3}'' の&lt;sldiag objui="outport" objparam="{2,number,integer}" objname="{3}"&gt;出力端子 {2,number,integer}&lt;/sldiag&gt; の間の接続が無効です。スコープ サブシステム外部から呼び出されるスコープありの Simulink 関数への入力は、他の Simulink Function、Merge、Constant または Inport ブロックに接続しなければなりません。 </entry>
    <entry key="SLFcnHasInvalidOutputConnection">スコープありの Simulink 関数 ''{1}'' の出力端子 {0,number,integer} とブロック ''{3}'' の&lt;sldiag objui="inport" objparam="{2,number,integer}" objname="{3}"&gt;入力端子 {2,number,integer}&lt;/sldiag&gt; の間の接続が無効です。スコープ サブシステム外部から呼び出されるスコープありの Simulink 関数の出力は、Simulink Function、Outport、Terminator、Scope、Display、To Workspace または To File のいずれか 1 つのブロックにのみ接続しなければなりません。 </entry>
    <entry key="BadFcnCallStubInportNum">Simulink 関数 ''{0}'' の 1 つ以上の Argument Inport ブロックが見つからないか、正しくない番号が付けられています。Argument Inport ブロックには 1 で始まる連続した番号を付けなければなりません。</entry>
    <entry key="BadFcnCallStubOutportNum">Simulink 関数 ''{0}'' の 1 つ以上の Argument Outport ブロックが見つからないか、正しくない番号が付けられています。Argument Outport ブロックには 1 で始まる連続した番号を付けなければなりません。</entry>
    <entry key="BadFcnCallStubStatusNum">システム ''{0}'' には Function-Call Stub Status ブロック 1 つのみです。</entry>
    <entry key="RootInportFcnCallNoAsyncTaskSpecBlk">Inport ブロックには関数呼び出し信号の出力が設定されているため、Asynchronous Task Specification ブロックは Inport ブロック ''{0}'' の出力端子に配置しなければなりません。</entry>
    <entry key="RootInportFcnCallNoAsyncTaskSpecBlkWithFix">
ルートレベルの Inport ブロック ''{0}'' は関数呼び出し信号を出力するように構成されており、Asynchronous Task Specification ブロックに接続されていないため、モデルは&lt;a href="matlab:helpview([docroot ''/toolbox/simulink/helptargets.map''], ''export_function_models'')"&gt;エクスポート関数モデル&lt;/a&gt;として設定する必要があります。 &lt;actions exclusiveFixIts="yes"&gt; &lt;action type="fixit"&gt; &lt;cmd&gt;set_param_action(''{1}'', ''SetExecutionDomain'', ''on'');set_param_action(''{1}'', ''ExecutionDomainType'', ''ExportFunction'');&lt;/cmd&gt; &lt;txt&gt;モデル ''{1}'' のルート レベルでプロパティ インスペクターを開く。[実行] タブで、[実行領域の設定] を選択し、[領域] を [エクスポート関数] に設定する。&lt;/txt&gt; &lt;/action&gt; &lt;/actions&gt;

</entry>
    <entry key="MdlWithRootSLFcnOnlyNotSetAsExpFcnMdl">
    モデル ''{0}'' には、ルートレベルの Simulink Function ブロックのみが含まれています。Simulink Function をエクスポートするには、''{0}'' を&lt;a href="matlab:helpview([docroot ''/toolbox/simulink/helptargets.map''], ''export_function_models'')"&gt;エクスポート関数モデル&lt;/a&gt;として設定する必要があります。 &lt;actions exclusiveFixIts="yes"&gt; &lt;action type="fixit"&gt; &lt;cmd&gt;set_param_action(''{0}'', ''SetExecutionDomain'', ''on''); set_param_action(''{0}'', ''ExecutionDomainType'', ''ExportFunction'');&lt;/cmd&gt; &lt;txt&gt;モデル ''{0}'' をエクスポート関数モデルとして設定するには、このモデルのルートレベルで '[プロパティ インスペクター] &gt; [実行] &gt; [実行領域の設定]' を選択する。[領域] リストから [エクスポート関数] を選択する。&lt;/txt&gt; &lt;/action&gt; &lt;/actions&gt;
    
    </entry>
    <entry key="MdlWithGlobalSLFcnMdlBlkNotSetAsExpFcnMdl">
     Model ブロック ''{1}'' から Simulink 関数をエクスポートするには、モデル ''{0}'' を&lt;a href="matlab:helpview([docroot ''/toolbox/simulink/helptargets.map''], ''export_function_models'')"&gt;エクスポート関数モデル&lt;/a&gt;として設定しなければなりません。&lt;actions exclusiveFixIts="yes"&gt; &lt;action type="fixit"&gt; &lt;cmd&gt;set_param_action(''{0}'', ''SetExecutionDomain'', ''on''); set_param_action(''{0}'', ''ExecutionDomainType'', ''ExportFunction'');&lt;/cmd&gt; &lt;txt&gt;モデル ''{0}'' をエクスポート関数モデルとして設定するには、このモデルのルートレベルでキャンバスをクリックし、すべてのブロックからの選択を解除する。'[プロパティ インスペクター] &gt; [実行] &gt; [実行領域の設定]' に移動する。[領域] リストから [エクスポート関数] を選択する。&lt;/txt&gt; &lt;/action&gt; &lt;/actions&gt;
    
    </entry>
    <entry key="InvMdlWithNoRootFcnCallSetToExpFcns">
モデル ''{0}'' を&lt;a href="matlab:helpview([docroot ''/toolbox/simulink/helptargets.map''], ''export_function_models'')"&gt;エクスポート関数モデル&lt;/a&gt;として設定するには、このモデルのルート レベルに関数呼び出し Inport ブロックまたは Simulink 関数がある必要があります。 &lt;actions exclusiveFixIts="yes"&gt; &lt;action type="fixit"&gt; &lt;cmd&gt;set_param_action(''{0}'', ''SetExecutionDomain'', ''off'');&lt;/cmd&gt; &lt;txt&gt;このモデルのルート レベルでプロパティ インスペクターを開く。[実行] タブで、[実行領域の設定] をオフにするか、[エクスポート関数] 以外の [領域] オプションを選択する。&lt;/txt&gt; &lt;/action&gt; &lt;/actions&gt;

</entry>
    <entry key="InvMdlWithPotentialRootFcnCallInportSetToExpFcns">
モデル ''{0}'' を&lt;a href="matlab:helpview([docroot ''/toolbox/simulink/helptargets.map''], ''export_function_models'')"&gt;エクスポート関数モデル&lt;/a&gt;として設定するには、このモデルのルート レベルに関数呼び出し Inport ブロックまたは Simulink 関数がある必要があります。 &lt;actions exclusiveFixIts="yes"&gt; &lt;action type="fixit"&gt; &lt;cmd&gt;set_param_action(''{1}'', ''OutputFunctionCall'', ''on'');&lt;/cmd&gt; &lt;txt&gt;Inport ブロック ''{1}'' で [関数呼び出しの出力] を選択する。&lt;/txt&gt; &lt;/action&gt; &lt;/actions&gt;

</entry>
    <entry key="InvMdlWithRootCtrlPortSetToExpFcns">
    モデル ''{1}'' にはルートレベルの制御端子 ''{0}'' が含まれているため、このモデルを&lt;a href="matlab:helpview([docroot ''/toolbox/simulink/helptargets.map''], ''export_function_models'')"&gt;エクスポート関数モデル&lt;/a&gt;として設定できません。&lt;actions exclusiveFixIts="yes"&gt; &lt;action type="fixit"&gt; &lt;cmd&gt;set_param_action(''{1}'', ''SetExecutionDomain'', ''off'');&lt;/cmd&gt; &lt;txt&gt;モデル ''{1}'' のルート レベルでプロパティ インスペクターを開く。[実行] タブで、[実行領域の設定] をオフにするか、[エクスポート関数] 以外の [領域] オプションを選択する。&lt;/txt&gt; &lt;/action&gt; &lt;action type="fixit" retvalue="false"&gt; &lt;cmd&gt;delete_block(''{0}'');&lt;/cmd&gt; &lt;txt&gt;''{1}'' のルート グラフの制御端子 ''{0}'' を削除する。&lt;/txt&gt; &lt;/action&gt; &lt;/actions&gt;
    
    </entry>
    <entry key="MdlWithClientServerPortMustSetToExpFcns">
    モデル ''{0}'' には関数端子 ''{1}'' が含まれているため、&lt;a href="matlab:helpview([docroot ''/toolbox/simulink/helptargets.map''], ''export_function_models'')"&gt;エクスポート関数モデル&lt;/a&gt;として設定しなければなりません。 &lt;actions exclusiveFixIts="yes"&gt; &lt;action type="fixit"&gt; &lt;cmd&gt;set_param_action(''{0}'', ''SetExecutionDomain'', ''on'');set_param_action(''{0}'', ''ExecutionDomainType'', ''ExportFunction'');&lt;/cmd&gt; &lt;txt&gt;このモデルを&lt;a href="matlab:helpview([docroot ''/toolbox/simulink/helptargets.map''], ''export_function_models'')"&gt;エクスポート関数モデル&lt;/a&gt;として設定するには、モデルのルート レベルで、プロパティ インスペクターを開く。[実行] タブで、[実行領域の設定] を選択し、[領域] を [エクスポート関数] に設定する。&lt;/txt&gt; &lt;/action&gt; &lt;/actions&gt;
    
    </entry>
    <entry key="InvMdlWithAsyncTaskSpecSetToExpFcns">
関数呼び出しのルートレベルの Inport ブロック ''{0}'' が Asynchronous Task Specification ブロック ''{1}'' に接続されているため、モデル ''{1}'' を&lt;a href="matlab:helpview([docroot ''/toolbox/simulink/helptargets.map''], ''export_function_models'')"&gt;エクスポート関数モデル&lt;/a&gt;として設定できません。 &lt;actions exclusiveFixIts="yes"&gt; &lt;action type="fixit" retvalue="false"&gt; &lt;cmd&gt;set_param(''{1}'', ''Commented'', ''Through'');&lt;/cmd&gt; &lt;txt&gt;Asynchronous Task Specification ブロック ''{1}'' をコメント スルーまたは削除し、関数呼び出しのルートレベルの Inport ブロックを再接続する。&lt;/txt&gt; &lt;/action&gt; &lt;action type="fixit"&gt; &lt;cmd&gt;set_param_action(''{2}'', ''SetExecutionDomain'', ''off'');&lt;/cmd&gt; &lt;txt&gt;このモデルの目的がエクスポート関数モデルではない場合は、モデル ''{2}'' のルート レベルでプロパティ インスペクターを開く。[実行] タブで、[実行領域の設定] をオフにするか、[エクスポート関数] 以外の [領域] オプションを選択する。&lt;/txt&gt; &lt;/action&gt; &lt;/actions&gt;

</entry>
    <entry key="RootInportFcnCallWithAsyncTaskSpecBlkMultDsts">Inport ブロック ''{0}'' に無効な接続があります。Asynchronous Task Specification ブロックがこの Inport ブロックの出力端子に配置されているため、Inport ブロックの出力信号は他のブロック (他の Asynchronous Task Specification ブロックを含む) に接続できません。</entry>
    <entry key="AsyncTaskSpecBlkNotDrivenByRootInportFcnCall">Asynchronous Task Specification ブロック ''{0}'' は、関数呼び出し信号を出力するように構成されているルートレベル Inport ブロックの出力端子に直接接続しなければなりません。</entry>
    <entry key="AsyncTaskSpecBlkUnconnectedOutput">Asynchronous Task Specification ブロック ''{0}'' の出力を Terminator ブロックに接続したり接続を解除することはできません。</entry>
    <entry key="ExpFcnSpecBlkNotDrivenByRootInportFcnCall">Export Function Specification ブロック ''{0}'' は、関数呼び出し信号を出力するように構成されているルートレベル Inport ブロックの出力端子に直接接続しなければなりません。</entry>
    <entry key="ExpFcnSpecBlkUnconnectedOutput">Export Function Specification ブロック ''{0}'' の出力を Terminator ブロックに接続したり接続を解除することはできません。</entry>
    <entry key="RootInportFcnCallInvalidDst">Inport ブロック ''{0}'' でダイアログ パラメーター [関数呼び出しの出力] が選択されています。しかし、接続している ''{2}'' の&lt;sldiag objui="inport" objparam="{1,number,integer}" objname="{2}"&gt;入力端子 {1,number,integer}&lt;/sldiag&gt; では、関数呼び出し信号を受け入れることができません。</entry>
    <entry key="RootInportFcnCallNotAllowedWithRootControlPort">
制御端子 ''{1}'' がモデルのルート レベルにあるため、関数呼び出し信号を出力するように Inport ブロック ''{0}'' を構成できません。 &lt;actions exclusiveFixIts="yes"&gt; &lt;action type="fixit" retvalue="false"&gt; &lt;cmd&gt;delete_block(''{1}'');&lt;/cmd&gt; &lt;txt&gt;制御端子ブロック ''{1}'' を削除する。&lt;/txt&gt; &lt;/action&gt; &lt;/actions&gt;
 
</entry>
    <entry key="SimulinkFunctionNotAllowedWithForEach">Simulink 関数 ''{0}'' を For Each ブロック内に配置することはできません。</entry>
    <entry key="SimulinkFunctionGlobalNotAllowedInNonVirtualSS">''{1}'' で定義されている Simulink 関数 ''{0}'' はグローバルに設定されているため、モデルのルート レベルまたはバーチャル サブシステムの階層に配置されなければなりません。</entry>
    <entry key="RootInportFcnCallDuplicateNotAllowed">重複した Inport ブロック ''{0}'' は、元の Inport ブロック ''{1}'' で ''出力関数呼び出し'' オプションが選択されているため、使用できません。</entry>
    <entry key="InvalidAsyncBlockWithinSimulinkFunction">非同期ブロック ''{0}'' は、Simulink Function ブロック内では許可されません。</entry>
    <entry key="DataRootInportDrvMultiFcnCallPortGroups">ルートレベル Inport ブロック ''{0}'' は、関数呼び出しのルートレベル Inport ブロック ''{3}'' によって駆動される ''{2}'' の入力端子 {1,number,integer} と、別の関数呼び出しのルートレベル Inport ブロック ''{6}'' によって駆動される ''{5}'' の入力端子 {4,number,integer} に接続されています。すべてのルートレベル Inport ブロックの接続先は、同じ関数呼び出しのルートレベル Inport ブロックによって駆動されなければなりません。ルートレベル Inport ブロック ''{7}'' を 2 つの Inport ブロックに分割し、各接続先を個別に駆動することを検討してください。</entry>
    <entry key="RateTransBlkDrvMultiFcnCallPortGroups">Rate Transition ブロック ''{0}'' は、関数呼び出しのルートレベル Inport ブロック ''{3}'' によって駆動される ''{2}'' の入力端子 {1,number,integer} と、別の関数呼び出しのルートレベル Inport ブロック ''{6}'' によって駆動される ''{5}'' の入力端子 {4,number,integer} に接続されています。すべての Rate Transition ブロックの接続先は、同じ関数呼び出しのルートレベル Inport ブロックによって駆動されなければなりません。2 つの Rate Transition ブロックを使用して各接続先を個別に駆動することを検討してください。</entry>
    <entry key="RateTransBlkDrvDataAndFcnCallPortGroups">Rate Transition ブロック ''{0}'' は、関数呼び出しのルートの Inport ブロック ''{3}'' によって駆動される ''{2}'' の入力端子 {1,number,integer} と、いずれの関数呼び出しのルートレベル Inport ブロックによっても駆動されない ''{5}'' の入力端子 {4,number,integer} に接続されています。すべての Rate Transition ブロックの接続先は、同じ関数呼び出しのルートレベル Inport ブロックによって駆動されなければなりません。2 つの Rate Transition ブロックを使用して各接続先を個別に駆動することを検討してください。</entry>
    <entry key="DataRootInportDrvFcnCallAndDataPortGroups">関数呼び出し信号を出力するルートレベル Inport ブロックをもつモデルにおいて、ルートレベル Inport ブロック ''{0}'' の接続先はすべて Simulink 関数であるか、または関数呼び出しのルートレベルの Inport ブロックによって駆動されなければなりません。ただし、''{1}'' はこのルールに違反しています。</entry>
    <entry key="DataRootOutportInFcnCallAndDataPortGroups">関数呼び出し信号を出力するルートレベル Inport ブロックをもつモデルにおいて、''{0}'' などのルートレベル Outport ブロックの接続元はすべて Simulink 関数または関数呼び出しのルートレベルの Inport ブロックによって駆動されるブロックでなければなりません。ただし、''{1}'' はこのルールに違反しています。</entry>
    <entry key="FcNodeInMultiFcnCallPortGroups">Function-Call ブロック ''{0}'' は関数呼び出しのルートレベル Inport ブロック ''{1}'' と ''{2}'' によって駆動されています。Function-Call ブロックは最大で 1 つの関数呼び出しのルートレベル Inport ブロックでしか駆動できません。</entry>
    <entry key="FcNodeInDataAndFcnCallPortGroups">Function-Call Subsystem ブロック ''{0}'' のトリガーは、エクスポートされた同じ関数開始プログラムまでたどれなければなりません。次のトリガーでは、開始プログラムが異なります:</entry>
    <entry key="FcNodeInDataAndFcnCallPortGroupsCauseData">エクスポートされない開始プログラム ''{0}'' が Function-Call Subsystem ブロックを駆動しています。</entry>
    <entry key="FcNodeInDataAndFcnCallPortGroupsCauseExpRoot">エクスポートされたルート Inport ''{0}'' が Function-Call Subsystem ブロックを駆動しています。</entry>
    <entry key="FcNodeInDataAndFcnCallPortGroupsCauseSimFcn">エクスポートされた Simulink 関数 ''{0}'' が Function-Call Subsystem ブロックを駆動しています。</entry>
    <entry key="FcnCallSysCalledByMultiFcnCallPorts">Function-Call ブロック ''{0}'' は複数の関数呼び出しのルートレベル Inport ブロックによって駆動されています。Function-Call ブロックは最大で 1 つの関数呼び出しのルートレベル Inport ブロックでしか直接または間接的に駆動しません。</entry>
    <entry key="InvFcnCallSysCalledByMultiFcnCallRootInports">
エクスポート関数モデル内で、関数呼び出しブロック ''{0}'' が、複数ある関数呼び出しのルートレベル Inport ブロックにより間接的に駆動されている場合、そのすべての開始プログラムは関数呼び出しのルートレベル Inport ブロックの同じセットで駆動しなければなりません。ただし、''{1}'' は、''{2}'' および ''{3}'' から発生する関数呼び出し信号により呼び出されており、これはこのルールに違反します。</entry>
    <entry key="InvExpFcnMdlCalledByMultiFcnCallRootInports">
Model ブロック ''{0}'' の&lt;sldiag objui="inport" objparam="{1}" objname="{0}"&gt;入力端子 ''{1}''&lt;/sldiag&gt; を関数呼び出しのルートレベルの複数の Inport ブロック ''{2}'' および ''{3}'' に接続することは、この Model ブロックが&lt;a href="matlab:helpview([docroot ''/toolbox/simulink/helptargets.map''], ''export_function_models'')"&gt;エクスポート関数モデル&lt;/a&gt;を参照している場合はサポートされません。</entry>
    <entry key="LoopCausedByNgSrcForExpFcnMdlInSingleTaskingHarness">
  Model ブロック ''{0}'' により参照されるエクスポート関数モデルを呼び出す関数呼び出し開始プログラムは、サンプル時間またはタスクの優先順位に応じて実行しなければなりません。タスクが 1 つだけのモデルの場合、これは ''{1}'' を ''{2}'' の前に実行しなければならないことを意味します。しかし、このルールの適用によってデータ依存性違反が発生しました。[コンフィギュレーション パラメーター] &gt; [ソルバー] &gt; [各離散レートを個別のタスクとして扱う] オプションをオフにするか、データ依存ループの解決のために以下にリストされたブロック間のデータ接続をトレースすることを検討してください。
</entry>
    <entry key="LoopCausedByNgSrcForExpFcnMdlInSingleTaskingHarnessDetail">
  ブロック ''{0}'' はループ内にあります。
</entry>
    <entry key="LoopCausedByMuxedFcnCaller">
  ''{0}'' は ''{1}'' の前に実行しなければなりません。これらはいずれも Mux ブロック ''{2}'' 経由で同じ関数呼び出しブロックを駆動するためです。同一タスク内にある複数の開始プログラムの関数呼び出し出力信号を結合して 1 つの関数呼び出しブロックが呼び出される場合、Mux ブロックのインデックスが小さい入力端子に接続される信号は、Mux ブロックのインデックスが大きい入力端子に接続される信号よりも前に実行されます。
</entry>
    <entry key="FcnCallNumInOutArgsMismatchCallerSrcFcnDst">''{1}'' によって定義される関数 ''{2}'' とその呼び出し側 ''{0}'' では、再利用可能な引数の数が異なります。</entry>
    <entry key="FcnCallNumInOutArgsMismatchCallerSrcGenericDst">関数 ''{1}'' とその呼び出し側 ''{0}'' では、再利用可能な引数の数が異なります。</entry>
    <entry key="FcnCallNumInOutArgsMismatchGenericSrcFcnDst">''{0}'' によって定義される関数 ''{1}'' とその呼び出し側では、再利用可能な引数の数が異なります。</entry>
    <entry key="FcnCallNumInOutArgsMismatchGenericSrcDst">関数 ''{0}'' とその呼び出し側では、再利用可能な引数の数が異なります。</entry>
    <entry key="FcnCallNumInArgsMismatchCallerSrcFcnDst">''{1}'' によって定義された関数 ''{4}'' は {2,number,integer} 個の入力引数が必要でしたが、''{0}'' によって {3,number,integer} 個で呼び出されました。</entry>
    <entry key="FcnCallNumInArgsMismatchCallerSrcGenericDst">Function ''{3}''
    was expecting {1,number,integer} input arguments, but was called by 
    ''{0}'' with {2,number,integer}.</entry>
    <entry key="FcnCallNumInArgsMismatchGenericSrcFcnDst">''{0}'' によって定義された関数 ''{3}'' は {1,number,integer} 個の入力引数が必要でしたが、{2,number,integer} 個で呼び出されました。</entry>
    <entry key="FcnCallNumInArgsMismatchGenericSrcDst">関数 ''{2}'' は {0,number,integer} 個の入力引数が必要でしたが、{1,number,integer} 個で呼び出されました。</entry>
    <entry key="FcnCallInArgDTypeMismatchCallerSrcFcnDst">''{1}'' によって定義された関数 ''{5}'' は入力引数 {2,number,integer} にデータ型 ''{4}'' が必要でしたが、''{0}'' によって ''{3}'' で呼び出されました。</entry>
    <entry key="FcnCallInArgDTypeMismatchCallerSrcGenericDst">Function ''{4}''
    was expecting datatype ''{3}'' for input argument {1,number,integer}, 
    but was called by ''{0}'' with ''{2}''.</entry>
    <entry key="FcnCallInArgDTypeMismatchGenericSrcFcnDst">''{0}'' によって定義された関数 ''{4}'' は入力引数 {1,number,integer} にデータ型 ''{3}'' が必要でしたが、''{2}'' で呼び出されました。</entry>
    <entry key="FcnCallInArgDTypeMismatchGenericSrcDst">関数 ''{3}'' は入力引数 {0,number,integer} に ID {2,number,integer} のデータ型が必要でしたが、{1,number,integer} で呼び出されました。</entry>
    <entry key="FcnCallInArgCplxMismatchCallerSrcFcnDst">''{1}'' によって定義された関数 ''{5}'' は入力引数 {2,number,integer} に実数/複素数 {4,number,integer} (実数の場合は 0、複素数の場合は 1) が必要でしたが、''{0}'' によって {3,number,integer} で呼び出されました。</entry>
    <entry key="FcnCallInArgCplxMismatchCallerSrcGenericDst">関数 ''{4}'' の入力引数 {1,number,integer} には実数/複素数 {3,number,integer} (実数の場合は 0、複素数の場合は 1) が必要でしたが、''{0}'' による呼び出しでは {2,number,integer} が指定されていました。</entry>
    <entry key="FcnCallInArgCplxMismatchGenericSrcFcnDst">''{0}'' によって定義された関数 ''{4}'' は入力引数 {1,number,integer} に実数/複素数 {3,number,integer} (実数の場合は 0、複素数の場合は 1) が必要でしたが、{2,number,integer} で呼び出されています。</entry>
    <entry key="FcnCallInArgCplxMismatchGenericSrcDst">関数 ''{3}'' は入力引数 {0,number,integer} に実数/複素数 {2,number,integer} (実数の場合は 0、複素数の場合は 1) が必要でしたが、{1,number,integer} で呼び出されています。</entry>
    <entry key="FcnCallInArgDimsMismatchCallerSrcFcnDst">''{1}'' によって定義された関数 ''{5}'' は入力引数 {2,number,integer} に ''{4}'' の次元が必要でしたが、''{0}'' によって ''{3}'' で呼び出されています。</entry>
    <entry key="FcnCallInArgDimsMismatchCallerSrcGenericDst">関数 ''{4}'' の入力引数 {1,number,integer} には ''{3}'' の次元が必要でしたが、''{0}'' による呼び出しでは ''{2}'' が指定されていました。</entry>
    <entry key="FcnCallInArgDimsMismatchGenericSrcFcnDst">''{0}'' によって定義された関数 ''{4}'' は入力引数 {1,number,integer} に ''{3}'' の次元が必要でしたが、''{2}'' で呼び出されています。</entry>
    <entry key="FcnCallInArgDimsMismatchGenericSrcDst">関数 ''{3}'' は入力引数 {0,number,integer} に ''{2}'' の次元が必要でしたが、''{1}'' で呼び出されています。</entry>
    <entry key="FcnCallNumOutArgsMismatchCallerSrcFcnDst">''{1}'' によって定義された関数 ''{4}'' は {2,number,integer} 個の出力引数が必要でしたが、''{0}'' によって {3,number,integer} 個で呼び出されています。</entry>
    <entry key="FcnCallNumOutArgsMismatchCallerSrcGenericDst">関数 ''{3}'' には {1,number,integer} 個の出力引数が必要でしたが、''{0}'' による呼び出しでは {2,number,integer} 個が指定されていました。</entry>
    <entry key="FcnCallNumOutArgsMismatchGenericSrcFcnDst">''{0}'' によって定義された関数 ''{3}'' は {1,number,integer} 個の出力引数が必要でしたが、{2,number,integer} 個で呼び出されています。</entry>
    <entry key="FcnCallNumOutArgsMismatchGenericSrcDst">関数 ''{2}'' は {0,number,integer} 個の出力引数が必要でしたが、{1,number,integer} 個で呼び出されています。</entry>
    <entry key="FcnCallOutArgDTypeMismatchCallerSrcFcnDst">''{1}'' によって定義された関数 ''{5}'' は出力引数 {2,number,integer} にデータ型 ''{4}'' が必要でしたが、''{0}'' によって ''{3}'' で呼び出されています。</entry>
    <entry key="FcnCallOutArgDTypeMismatchCallerSrcGenericDst">Function ''{4}''
    was expecting datatype ''{3}'' for output argument {1,number,integer}, 
    but was called by ''{0}'' with ''{2}''.</entry>
    <entry key="FcnCallOutArgDTypeMismatchGenericSrcFcnDst">''{0}'' によって定義された関数 ''{4}'' は出力引数 {1,number,integer} にデータ型 ''{3}'' が必要でしたが、''{2}'' で呼び出されています。</entry>
    <entry key="FcnCallOutArgDTypeMismatchGenericSrcDst">関数 ''{3}'' は出力引数 {0,number,integer} に ID {2,number,integer} のデータ型が必要でしたが、{1,number,integer} で呼び出されています。</entry>
    <entry key="FcnCallOutArgCplxMismatchCallerSrcFcnDst">''{1}'' によって定義された関数 ''{5}'' は出力引数 {2,number,integer} に実数/複素数 {4,number,integer} (実数の場合は 0、複素数の場合は 1) が必要でしたが、''{0}'' によって {3,number,integer} で呼び出されています。</entry>
    <entry key="FcnCallOutArgCplxMismatchCallerSrcGenericDst">関数 ''{4}'' の出力引数 {1,number,integer} には実数/複素数 {3,number,integer} (実数の場合は 0、複素数の場合は 1) が必要でしたが、''{0}'' による呼び出しでは {2,number,integer} が指定されていました。</entry>
    <entry key="FcnCallOutArgCplxMismatchGenericSrcFcnDst">''{0}'' によって定義された関数 ''{4}'' は出力引数 {1,number,integer} に実数/複素数 {3,number,integer} (実数の場合は 0、複素数の場合は 1) が必要でしたが、{2,number,integer} で呼び出されています。</entry>
    <entry key="FcnCallOutArgCplxMismatchGenericSrcDst">関数 ''{3}'' は出力引数 {0,number,integer} に実数/複素数 {2,number,integer} (実数の場合は 0、複素数の場合は 1) が必要でしたが、{1,number,integer} で呼び出されています。</entry>
    <entry key="FcnCallOutArgDimsMismatchCallerSrcFcnDst">''{1}'' によって定義された関数 ''{5}'' は出力引数 {2,number,integer} に ''{4}'' の次元が必要でしたが、''{0}'' によって ''{3}'' で呼び出されています。</entry>
    <entry key="FcnCallOutArgDimsMismatchCallerSrcGenericDst">関数 ''{4}'' の出力引数 {1,number,integer} には ''{3}'' の次元が必要でしたが、''{0}'' による呼び出しでは ''{2}'' が指定されていました。</entry>
    <entry key="FcnCallOutArgDimsMismatchGenericSrcFcnDst">''{0}'' によって定義された関数 ''{4}'' は出力引数 {1,number,integer} に ''{3}'' の次元が必要でしたが、''{2}'' で呼び出されています。</entry>
    <entry key="FcnCallOutArgDimsMismatchGenericSrcDst">関数 ''{3}'' は出力引数 {0,number,integer} に ''{2}'' の次元が必要でしたが、''{1}'' で呼び出されています。</entry>
    <entry key="ssCallSimulinkFunctionExecArgInvalid">S-Function block ''{0}'' passes an invalid argument to ''ssCallSimulinkFunction'' macro to call Simulink function ''{1}''. The argument {2,number,integer} (known as ''{3}'') must be a pointer to a valid array of ''_ssFcnCallExecArgInfo'' struct, and the struct field ''dataPtr'' must point to a pre-assigned memory buffer for each associated Simulink function argument.</entry>
    <entry key="ssCallSimulinkFunctionFail">Memory access violation occurs when S-Function block ''{0}'' is using ''ssCallSimulinkFunction'' macro to call Simulink function ''{1}''. Ensure both the fourth and sixth argument (known as ''execInArg'' and ''execOutArg'') are a pointer to a valid array of ''_ssFcnCallExecArgInfo'' struct, and in each array element, the struct fields ''dataPtr'' and ''dataSize'' are associated with a pre-assigned memory buffer with data type and size matching the corresponding Simulink function argument.</entry>
    <entry key="FcnCallSubsysInvalidRoutingBlock">ブロック ''{0}'' の関数呼び出しの入力端子を駆動する関数呼び出し信号は、ブロック ''{2}'' の&lt;sldiag objui="outport" objparam="{1,number,integer}" objname="{2}"&gt;出力端子 {1,number,integer}&lt;/sldiag&gt; を介して転送することはできません。この関数呼び出し信号は、From、Goto、Inport、Outport、または Subsystem ブロックを介して転送できます。</entry>
    <entry key="FcnCallBlockInvalidRoutingBlock">ブロック ''{1}'' の&lt;sldiag objui="inport" objparam="{0,number,integer}" objname="{1}"&gt;入力端子 {0,number,integer}&lt;/sldiag&gt; を駆動する関数呼び出し信号は、ブロック ''{3}'' の&lt;sldiag objui="outport" objparam="{2,number,integer}" objname="{3}"&gt;出力端子 {2,number,integer}&lt;/sldiag&gt; を介して転送することはできません。この関数呼び出し信号は、From、Goto、Inport、Outport、または Subsystem ブロックを介して転送できます。</entry>
    <entry key="SlFcnCodeGenVarSizedSideIO">ブロック ''{0}'' には、モデル内のローカル信号に接続するために Simulink 関数内で使用されている可変サイズの信号が含まれています。これは、モデル参照のコード生成ではサポートされていません。</entry>
    <entry key="StubPortBlockMustBeInFcnCallSubsys">サブシステム ''{0}'' の関数の引数を定義できません。引数は Simulink 関数にのみ定義される可能性があります。</entry>
    <entry key="StubPortBlockNotAllowedInRoot">ブロック線図のルート レベルでは関数の引数を定義できません。引数は Simulink 関数にのみ定義される可能性があります。</entry>
    <entry key="SimulinkFunctionInvDiagSettings">Configuration Parameters settings for the &lt;a href="matlab:helpview([docroot ''/toolbox/simulink/helptargets.map''], ''export_function_models'')"&gt;export-function model&lt;/a&gt; ''{0}'' are invalid.</entry>
    <entry key="SWArchMdlInvDiagSettings">ソフトウェア アーキテクチャ モデル ''{0}'' のコンフィギュレーション パラメーター設定が無効です。</entry>
    <entry key="InvFcnCallName">変数 ''{0}'' は、有効な関数呼び出しオブジェクトの型名を指定していません。</entry>
    <entry key="FcnCallObjectSignature">署名: </entry>
    <entry key="ResolveToFcnCallObjInMaskWorkspace">シンボル ''{0}'' は、マスク ワークスペース内の関数シグネチャ オブジェクトに関連付けられました。関数シグネチャ オブジェクトはベース ワークスペースでのみ作成してください</entry>
    <entry key="ResolveToFcnCallObjInModelWorkspace">シンボル ''{0}'' は、モデル ワークスペース内の関数シグネチャ オブジェクトに関連付けられました。関数シグネチャ オブジェクトはベース ワークスペースでのみ作成してください</entry>
    <entry key="FcnCallEmptyArguments">関数シグネチャ オブジェクト ''{0}'' には、少なくとも 1 つの引数 (入力または出力) が含まれていなければなりません。</entry>
    <entry key="FcnCallPortArgMismatch">関数シグネチャ オブジェクト ''{0}'' には、Function-Call Subsystem に Stub Inport および Outport の数と同じ引数 (入力と出力) が含まれていなければなりません。</entry>
    <entry key="FcnCallIncorrectComplexEntry">関数の引数 ''{0}'' の実数/複素数は、'自動'、'実数' または '複素数' に設定しなければなりません。</entry>
    <entry key="FcnCallIncorrectArgumentEntry">指定する引数は、Simulink.FunctionArgument または Simulink.FunctionStatusArgument のいずれかのタイプか、これらのオブジェクトのべクトルでなければなりません。</entry>
    <entry key="FcnCallIncorrectDataTypeEntry">関数の引数 ''{0}'' のデータ型を関数シグネチャ オブジェクトにはしないでください。</entry>
    <entry key="FcnCallIncorrectArgTypeEntry">関数の引数 ''{0}'' の引数タイプは 'input'、'output' または 'inout' に設定しなければなりません。</entry>
    <entry key="FcnCallIncorrectStatusArgEntry">関数シグネチャ オブジェクト ''{0}'' は、1 つのステータス引数セットのみを指定できます。</entry>
    <entry key="FcnCallArgScope">スコープ: </entry>
    <entry key="FcnCallArgument">引数</entry>
    <entry key="FcnCallInputArg">入力引数</entry>
    <entry key="FcnCallOutputArg">出力引数</entry>
    <entry key="InvalidSimulinkFunctionName">Simulink Function ブロック ''{1}'' の関数名 ''{0}'' は、有効な ANSI C 識別子でなければなりません。</entry>
    <entry key="InvalidFunctionNameAtCaller"> Function name, ''{0}'', called by the Function Caller block ''{1}'' must be a valid ANSI C identifier.</entry>
    <entry key="InvalidFunctionScopeName"> ブロック ''{0}'' には Simulink 関数が含まれており、ブロック名はこれら Simulink 関数のスコープの名前も表します。指定されたブロック名 ''{1}'' は、スコープ名に必要な有効な ANSI C 識別子ではありません。英字、あるいは ''_'' 文字で始まり、英数字、または ''_'' 文字が続く識別子が有効です。</entry>
    <entry key="InvalidFunctionCallerScopeName"> ブロック ''{0}'' がスコープ内の Simulink 関数を呼び出しています。指定されたスコープ名 ''{1}'' は、スコープ名に必要な有効な ANSI C 識別子ではありません。英字、あるいは ''_'' 文字で始まり、英数字、または ''_'' 文字が続く識別子が有効です。</entry>
    <entry key="InvalidTriggerPortScopeName"> スコープ名 ''{0}'' は空であるか、スコープ名に必要な有効な ANSI C 識別子ではありません。英字、あるいは ''_'' 文字で始まり、英数字、または ''_'' 文字が続く識別子が有効です。</entry>
    <entry key="DuplicateInArgName"> ブロック ''{0}'' の関数プロトタイプ内で指定される入力引数の名前は一意でなければなりません。</entry>
    <entry key="DuplicateOutArgName"> ブロック ''{0}'' の関数プロトタイプ内で指定される出力引数の名前は一意でなければなりません。</entry>
    <entry key="FcnCallDuplicateServerBlock">2 つのブロック ''{0}'' および ''{1}'' は同じ関数 ''{2}'' を定義しています。関数名は一意でなければなりません。</entry>
    <entry key="AmbiguousSourceModel">グローバル関数 ''{0}'' が複数のモデルで定義されています。</entry>
    <entry key="FunctionIncludedBy">関数が、モデル ''{0}'' から呼び出し側ブロック ''{1}'' に含められています。</entry>
    <entry key="FunctionDefinedIn">関数が、関数ブロック ''{1}'' によってモデル ''{0}'' 内で定義されています。</entry>
    <entry key="GlobalSimulinkFcnNotInExpFcnMdl">
    Simulink function ''{0}'' must be in an &lt;a href="matlab:helpview([docroot ''/toolbox/simulink/helptargets.map''], ''export_function_models'')"&gt;export-function model&lt;/a&gt; to be called by block ''{2}'' from another model.
    &lt;actions exclusiveFixIts="yes"&gt;
        &lt;action type="suggestion"&gt;
            &lt;txt&gt;At the root level of the model referenced by Model block ''{1}'', open the 'Property Inspector'. On the 'Execution' tab, select 'Set execution domain', and set 'Domain' to 'Export function'.&lt;/txt&gt;
        &lt;/action&gt;
    &lt;/actions&gt;
    </entry>
    <entry key="GlobalSimulinkFcnNotInExpFcnMdlWithFix">
    Simulink function ''{0}'' must be in an &lt;a href="matlab:helpview([docroot ''/toolbox/simulink/helptargets.map''], ''export_function_models'')"&gt;export-function model&lt;/a&gt; to be called by block ''{2}'' from another model. 
    &lt;actions exclusiveFixIts="yes"&gt;
        &lt;action type="fixit"&gt;
            &lt;cmd&gt;set_param_action(''{3}'', ''SetExecutionDomain'', ''on'');set_param_action(''{3}'', ''ExecutionDomainType'', ''ExportFunction'');&lt;/cmd&gt;
            &lt;txt&gt;At the root level of model ''{3}'' referenced by Model block ''{1}'', open the 'Property Inspector'. On the 'Execution' tab, select 'Set execution domain', and set 'Domain' to 'Export function'.&lt;/txt&gt;
        &lt;/action&gt;
    &lt;/actions&gt;
    </entry>
    <entry key="UndefinedFunctionBuilt">ブロック ''{1}'' によって呼び出される関数 ''{0}'' が、モデル内で定義されていません。</entry>
    <entry key="UnknownFunctionInvoked">ブロック ''{1}'' によって呼び出される関数 ''{0}'' の定義が見つかりませんでした。 </entry>
    <entry key="UnknownFunctionSkipped">ブロック ''{1}'' はクライアント ポート ''{2}'' から関数 ''{0}'' を呼び出しません。これは、クライアント ポートが、有効な関数要素 ''{0}'' が定義されているサーバー ポートに接続されていないためです。</entry>
    <entry key="UnknownServerReferred">''{0}'' という名前の Simulink 関数がモデル内で見つかりません。</entry>
    <entry key="CallingUndeclaredFunction">Block ''{1}'' must declare the function prototype to call Simulink function ''{0}''. For S-Function block, use ''ssDeclareFunctionCaller'' macro to declare the function prototype.</entry>
    <entry key="UnresolvedScopedFunctionCall">Block ''{0}'' is unable to call the function ''{1}'' with scope name ''{2}'' because the function definition is not found.
    
    &lt;actions exclusiveFixIts="yes"&gt;
        &lt;action type="suggestion" id="scopedFcn"&gt;
            &lt;txt&gt;To call a scoped function, see &lt;a href="matlab:helpview(fullfile(docroot, 'simulink/ug/troubleshoot-block-unable-to-call-function.html'))"&gt;Resolve Error: Block is Unable to Call the Scoped Simulink Function&lt;/a&gt; for more information.&lt;/txt&gt;
        &lt;/action&gt;
        &lt;action type="fixit" id="fcnPort" retvalue="false"&gt;
            &lt;cmd&gt;slprivate(''insertFunctionElementPort'', bdroot(''{0}''), ''{2}'', ''{1}'', true);&lt;/cmd&gt;
            &lt;txt&gt;To call a port-scoped function outside the model, add a Function Element Call block ''{2}.{1}'' at the model root level.&lt;/txt&gt;
        &lt;/action&gt;
    &lt;/actions&gt;
    </entry>
    <entry key="CallerScopeCannotBeCurrentModelName">ブロック''{0}'' は、モデル名 ''{2}'' をスコープ名として使用して関数 ''{1}'' を呼び出すことができません。スコープ名と関数の配置を修正してください。正しい使用方法については、「&lt;a href="matlab:helpview(fullfile(docroot, 'simulink/ug/troubleshoot-block-unable-to-call-function.html'))"&gt;Resolve Error: Block is Unable to Call the Scoped Simulink Function&lt;/a&gt;」を参照してください。
    </entry>
    <entry key="UnableToCallFunctionFromRef">参照モデルのブロック ''{0}'' は、ブロック ''{2}'' で定義されたスコープ内の Simulink 関数 ''{1}'' を呼び出すことができません。 &lt;actions exclusiveFixIts="yes"&gt; &lt;action type="fixit" id="setGlobal" retvalue="false"&gt; &lt;cmd&gt;set_param(''{3}'', ''FunctionVisibility'', ''global'');&lt;/cmd&gt; &lt;txt&gt;ブロック ''{3}'' の ''FunctionVisibility'' パラメーターを ''global'' に設定する。&lt;/txt&gt; &lt;/action&gt; &lt;action type="suggestion" id="moveFcnToRef"&gt; &lt;txt&gt;スコープ内の Simulink 関数 ''{1}'' を定義するブロック ''{2}'' を参照モデル (エクスポート関数モデルとして構成) 内に移動し、そのモデル名を呼び出し側ブロック ''{0}'' でスコープ名として使用する。詳細については、「&lt;a href="matlab:helpview(fullfile(docroot, 'simulink/ug/simulink-functions-in-referenced-models.html'))"&gt;参照モデルにおける Simulink Function ブロック&lt;/a&gt;」を参照する。&lt;/txt&gt; &lt;/action&gt; &lt;/actions&gt;
    </entry>
    <entry key="UnableToCallScopedFunctionFromRef">参照モデルのブロック ''{0}'' は、ブロック ''{2}'' で定義された Simulink 関数 ''{1}'' をスコープ名 ''{4}'' を使用して呼び出すことができません。 &lt;actions exclusiveFixIts="yes"&gt; &lt;action type="fixit" id="setGlobal" retvalue="false"&gt; &lt;cmd&gt;set_param(''{3}'', ''FunctionVisibility'', ''global''); set_param(''{0}'', ''FunctionPrototype'', regexprep(get_param(''{0}'', ''FunctionPrototype''), ''(\\w+)\\.'', ''''));&lt;/cmd&gt; &lt;txt&gt;ブロック ''{3}'' の ''FunctionVisibility'' パラメーターを ''global'' に設定し、呼び出し側ブロック ''{0}'' のスコープ名を削除する。&lt;/txt&gt; &lt;/action&gt; &lt;action_catalog id="Simulink:FcnCall:UnableToCallFunctionFromRef" ids="moveFcnToRef"&gt; &lt;arg&gt;{0}&lt;/arg&gt; &lt;arg&gt;{1}&lt;/arg&gt; &lt;arg&gt;{2}&lt;/arg&gt; &lt;arg&gt;{3}&lt;/arg&gt; &lt;/action_catalog&gt; &lt;/actions&gt;
    </entry>
    <entry key="MultiInstanceIfCallScopeIsModelName">Simulink 関数 ''{1}'' を定義している参照モデル ''{0}'' の複数のインスタンスがあります。この関数はブロック ''{2}'' で、モデル名をスコープ名として使用して呼び出されていますが、インスタンスが指定されていません。したがって、この関数は Model ブロック ''{3}'' の単一インスタンスに解決されます。 &lt;actions exclusiveFixIts="yes"&gt; &lt;action type="fixit" id="ChangeCallerScope" retvalue="false" enabled="true"&gt; &lt;cmd&gt;set_param(''{2}'', ''FunctionPrototype'', regexprep(get_param(''{2}'', ''FunctionPrototype''), ''(\\w+)\\.'', ''__ARG1__.''));&lt;/cmd&gt; &lt;cargs&gt; &lt;carg name="__ARG1__" type="text"&gt; &lt;txt_prompt&gt;&lt;/txt_prompt&gt; &lt;def_cmd&gt;"{4}"&lt;/def_cmd&gt; &lt;/carg&gt; &lt;/cargs&gt; &lt;txt&gt;呼び出し側ブロック ''{2}'' で、スコープ名を Model ブロック (インスタンス) 名に変更する。&lt;/txt&gt; &lt;/action&gt; &lt;action type="fixit" id="RemoveInstanceToOne" retvalue="false"&gt; &lt;txt&gt;''{0}'' を参照している Model ブロックを 1 つのみ保持し、他を削除する。&lt;/txt&gt; &lt;/action&gt; &lt;/actions&gt;
    </entry>
    <entry key="RequireSingleInstanceIfCallScopeIsModelName">When generating code for the top model, reference model ''{0}'' that defines the Simulink function ''{1}'' only allows a single instance, because the function is called by block ''{2}'' using that model name ''{0}'' as the scope name which does not specify an instance. 
    
    &lt;actions exclusiveFixIts="yes"&gt;
        &lt;action type="fixit" id="AllowSingleInstance" retvalue="false"&gt;
            &lt;cmd&gt;configset.internal.fixIt(''{0}'', ''ModelReferenceNumInstancesAllowed'', ''Single'');&lt;/cmd&gt;
            &lt;txt&gt;For model ''{0}'', set &lt;sldiag objui="configset" objparam="ModelReferenceNumInstancesAllowed"&gt;&lt;/sldiag&gt; parameter to ''Single''.&lt;/txt&gt;
        &lt;/action&gt;
    &lt;/actions&gt;
    </entry>
    <entry key="FcnCallArgumentCatalogMismatch">''{0}'' とその呼び出し側の関数定義の引数の仕様に不一致があります。</entry>
    <entry key="FcnCallArgumentPrototypeInvalidDatatype">ブロック ''{0}'' のプロトタイプで指定されたデータ型 ''{1}'' が無効です。</entry>
    <entry key="FcnCallArgumentSpecificationMismatch">入力/出力引数の指定数とブロック ''{0}'' の関数プロトタイプで指定されている入力/出力引数の数は一致しなければなりません。</entry>
    <entry key="FcnCallArgumentSpecificationInvalid">ブロック ''{0}'' で入力/出力引数の仕様に対して指定されている式は、組み込みデータ型または Simulink.NumericType オブジェクトとして評価されなければなりません。</entry>
    <entry key="FcnCallArgumentSpecificationINOUTMismatch">ブロック ''{1}'' の入力と出力の両方である引数 ''{0}'' に指定されている入力引数と出力引数の仕様は、一致しなければなりません。</entry>
    <entry key="FcnCallArgsINOUTMismatch">ブロック ''{2}'' での、再利用可能な入力引数 {0,number,integer} および再利用可能な出力引数 {1,number,integer} の次元、複雑度およびデータ型の仕様は一致しなければなりません。</entry>
    <entry key="FcnCallNeedsNonvirtualBus">ブロック ''{1}'' では、その&lt;sldiag objui="inport" objparam="{0,number,integer}" objname="{1}"&gt;入力端子 {0,number,integer}&lt;/sldiag&gt; のバスが非バーチャルである必要があります。Signal Conversion ブロックを挿入してバスを非バーチャルに変換することを検討してください。</entry>
    <entry key="FcnCallArgNotShared">データ型 ''{2}'' のデータ スコープは ''インポート'' または ''エクスポート'' に設定しなければなりません。この条件は、関数 ''{1}'' の引数 ''{0}'' の宣言のエクスポートを可能にするために必要です。</entry>
    <entry key="FcnCallPrototypeInvalid">プロトタイプの仕様に対して指定された文字ベクトル ''{0}'' は無効です。</entry>
    <entry key="FcnCallNeedsTimeAccess">ブロック ''{0}'' は、Simulink Function ブロックに含まれているため、絶対時間にアクセスすることはできません。時間が Simulink 関数への引数として渡されるようにモデルを変更することを検討してください。</entry>
    <entry key="FunctionCallerNonSourceInheritedTs">Function Caller ブロック ''{0}'' は、そのブロックがソースでない場合は継承したサンプル時間 (-1 が継承される) を指定しなければなりません。</entry>
    <entry key="FunctionCallerNonNumericTypeInArgSpec">Input argument specifications at Function Caller block ''{0}'' must specify examples of built-in or user-defined data types. Examples of user-defined data types, including Bus, Fixed-point, Enumerations, and Alias types, may be provided with a Simulink.Parameter object.</entry>
    <entry key="FunctionCallerNonNumericTypeOutArgSpec">Output argument specifications at Function Caller block ''{0}'' must specify examples of built-in or user-defined data types. Examples of user-defined data types, including Bus, Fixed-point, Enumerations, and Alias types, may be provided with a Simulink.Parameter object.</entry>
    <entry key="FcnCallNeedsGlobalDWork">関数 ''{0}'' は、その DWork ベクトルを介してグローバル データにアクセスする可能性があるブロック ''{1}'' を含んでいるので、同時に呼び出してはいけません。この診断は、Simulink 関数ブロック ''{2}'' の AUTOSAR 構成で [同時呼び出しが可能] オプションが選択されているのでレポートされました。</entry>
    <entry key="FcnCallNeedsGlobalOutputs">関数 ''{0}'' は永続出力をもつブロック ''{1}'' を含んでいるので、同時に呼び出してはいけません。この診断は、Simulink 関数ブロック ''{2}'' の AUTOSAR 構成で [同時呼び出しが可能] オプションが選択されているのでレポートされました。</entry>
    <entry key="SimulinkFunctionInvalidBusVarDims">ブロック ''{3}'' で定義されている関数 ''{2}'' の引数 ''{1}'' のデータ型 ''{0}'' は、可変サイズの要素をもつバスです。Simulink は、可変サイズの引数を指定した Simulink 関数の呼び出しをサポートしていません。</entry>
    <entry key="SimulinkFunctionCycleMsg">Simulink は、関数呼び出しサイクルの実行をサポートしていません:</entry>
    <entry key="CascadeSimulinkFunction">関数 ''{0}'' に ''{2}'' を呼び出すブロック ''{1}'' が含まれています</entry>
    <entry key="SimulinkFunctionInconsistentPrototype">関数 ''{0}'' の引数は ''{1}'' と ''{2}'' の間で整合性のある名前を使用しなければなりません。</entry>
    <entry key="SimulinkFunctionInvalidRootIOForCoder">モデル ''{1}'' で定義された Simulink 関数 ''{0}'' は、このモデルがコードをモデル参照ターゲットとして生成するときに、ルートの Inport ブロックまたはルートの Outport ブロックと接続されていてはいけません。</entry>
    <entry key="SimulinkFunctionInvalidScalarRootIOForCoder">モデル ''{1}'' で定義されたスカラーのルートレベルの Inport ブロック ''{0}'' は、このモデルがコードをモデル参照のターゲットとして生成する場合、Simulink Function ブロックに接続してはいけません。ただし、[コンフィギュレーション パラメーター]、[モデル参照]、[コード生成で固定サイズのスカラーのルート入力を値渡しで行う] が選択されていない場合を除きます。</entry>
    <entry key="SimulinkFunctionNonreusableCodeInterface">モデル ''{0}'' は、再利用可能なコードまたは C++ クラス コードを生成できません。このモデルに含まれるグローバルな Simulink 関数が ''{1}'' で定義されているためです。[コード インターフェイスのパッケージ化] オプションを [再利用できない関数] に設定することを検討してください。</entry>
    <entry key="SingleInstScopedSimulinkFunctionNonreusableCodeInterface">モデル ''{0}'' は、1 つ以上のスコープ内単一インスタンスの Simulink 関数を含んでいるため、再利用可能なコードを生成しない可能性があります。[コード インターフェイスのパッケージ化] オプションを [再利用できない関数] に設定することを検討してください。</entry>
    <entry key="SimulinkFunctionInvalidLocation">Simulink 関数 ''{1}'' を定義するブロック ''{0}'' は、モデルのルート レベルに、または参照モデルのルート レベル内に含まれていなければなりません。</entry>
    <entry key="SimulinkFunctionInRefMdlInvalidLocation">Model ブロック ''{0}'' によって参照されるモデル内に、グローバルな Simulink 関数があります。したがって、この Model ブロックはモデルのルート レベルまたはバーチャル サブシステムの階層に含まれていなければなりません。</entry>
    <entry key="SimulinkFunctionInSSInvalidAccess">The Simulink function ''{0}'' cannot be accessed by ''{2}'' because the function is scoped to a nonvirtual subsystem ''{1}''.</entry>
    <entry key="SimulinkFunctionInAtomicSSInvalidAccess">Subsystem ブロック ''{0}'' は Atomic です。Subsystem ブロックのダイアログで、[Atomic サブシステムとして扱う] フラグをオフにすることを検討してください。</entry>
    <entry key="SimulinkFunctionAndCallerDifferentRates">ブロック ''{2}'' により定義された関数 ''{1}'' のサンプル時間 {0} が、その呼び出し側ブロック ''{4}'' のサンプル時間 {3} と異なります。</entry>
    <entry key="SimulinkFunctionAndCallerDifferentTasks">ブロック ''{1}'' で定義された関数 ''{0}'' が、その呼び出し側ブロック ''{2}'' のタスクと異なるタスク内にあります。</entry>
    <entry key="SimulinkFunctionDrivenByDifferentRates">ブロック ''{1}'' により定義された関数 ''{0}'' が、サンプル時間が異なる複数の呼び出し側によって呼び出されています。サンプル時間 {3} の ''{2}'' と、サンプル時間 {5} の ''{4}'' によって呼び出されています。</entry>
    <entry key="FcnCallerNotSupportRateType">ブロック ''{0}'' は Simulink 関数の呼び出しを含むため、そのサンプル時間を連続にすることはできません。</entry>
    <entry key="FunctionCallerSvcIntrfArgMismatch">Function Caller ブロック ''{1}'' で指定されている関数 ''{0}'' の引数指定と、クライアント/サーバー ポート ''{2}'' に割り当てられているサービス インターフェイスの引数指定が一致していません。 </entry>
    <entry key="FunctionCallerUnspecifiedArgDims">Function Caller ブロック ''{0}'' に入力引数と出力引数を指定してください。この階層、モデル内または任意の参照モデル内で、対応する Simulink 関数が解決できないためです。</entry>
    <entry key="ClientPortUnspecifiedArgDims">クライアント/サーバー ポート ''{0}'' にサービス インターフェイスを割り当てて、このポートの引数の仕様を指定してください。この階層、モデル内または任意の参照モデル内で、対応する Simulink 関数が解決できないためです。あるいは、Function Caller ブロック ''{1}'' の入力引数の仕様と出力引数の仕様を指定してください。</entry>
    <entry key="FunctionCallerServicePortInvalidDataType">クライアント/サーバー ポート ''{0}'' のデータ型が無効です。クライアント/サーバー ポートにはサービス インターフェイスのみを割り当てることができます。 </entry>
    <entry key="StubInputPortBlockUnspecifiedDataType">引数入力ブロック ''{0}'' はデータ型を指定しなければなりません。</entry>
    <entry key="StubInputPortBlockUnspecifiedDimension">引数入力ブロック ''{0}'' はその次元を完全に指定しなければなりません。</entry>
    <entry key="StubInputPortBlockUnspecifiedSignalType">引数入力ブロック ''{0}'' は信号タイプを指定しなければなりません。</entry>
    <entry key="StubOutputPortBlockUnspecifiedDataType">引数出力ブロック ''{0}'' はデータ型を指定しなければなりません。</entry>
    <entry key="StubOutputPortBlockUnspecifiedDimension">引数出力ブロック ''{0}'' はその次元を完全に指定しなければなりません。</entry>
    <entry key="StubOutputPortBlockUnspecifiedSignalType">引数出力ブロック ''{0}'' は信号タイプを指定しなければなりません。</entry>
    <entry key="StubInputPortBlockGlobalVar">引数入力ブロック ''{0}'' から出力される信号はテスト ポイントであったり、クラスが非自動ストレージであってはなりません。</entry>
    <entry key="StubOutputPortBlockGlobalVar">引数出力ブロック ''{0}'' に入力される信号は、テスト ポイントであったり、クラスが非自動ストレージであってはなりません。</entry>
    <entry key="SimFunCallAcrossMdls">$PRODUCT$ はモデルの境界を越える Simulink 関数の呼び出しをサポートしません。呼び出し側と同じモデル内で Simulink 関数 ''{0}'' を定義してください。</entry>
    <entry key="SimulinkFunctionSFcnAPIDataTypeInvalid">Simulink Function ''{1}'' を定義するブロック ''{0}'' は引数 ''{3}'' には無効なデータ型 ''{2,number,integer}'' を提供しています。</entry>
    <entry key="SimulinkFunctionSFcnAPINotFound">''{2}'' の関数 ''{1}'' の引数 ''{0}'' が見つかりません。</entry>
    <entry key="ServiceInterfaceTypeConflict">端子 ''{1}'' のインターフェイス名 ''{0}'' は、別の定義で使用されています。別の名前の使用を検討してください。</entry>
    <entry key="ServiceInterfaceTypeAndSharedDataTypeConflict">端子 ''{1}'' のインターフェイス名 ''{0}'' はエクスポートされた型として以前に宣言されています。別の名前の使用を検討してください。</entry>
    <entry key="CPPClassNotAllowedForFunctionCallsDefinedOutsideModel">コードジェネレーターは、モデル ''{0}'' の C++ クラス インターフェイスを生成できません。モデルに、モデルの階層構造外で定義されている Simulink 関数 (''{2}'') を呼び出すブロック ''{1}'' が含まれています。</entry>
    <entry key="CPPClassNotAllowedForFCSSCalledByNonInlinedSFcn">コードジェネレーターは、モデル ''{0}'' の C++ クラス インターフェイスを生成できません。モデルに含まれる Function-Call Subsystem ''{1}'' は、非インラインの S-Function ''{2}'' で呼び出されます。</entry>
    <entry key="NoMessageInport"> 関数呼び出しブロックにメッセージは渡されません。</entry>
    <entry key="InvalidInportNumberForMessageType"> 1 つの関数呼び出しブロックに複数のメッセージを渡すことは許可されていません。</entry>
    <entry key="InvalidOutportNumberForMessageType">Function Caller ブロック ''{0}'' は非同期実行用に構成されているため、このブロックに含めることのできる出力は 1 つまでです。</entry>
    <entry key="PortScopedSimulinkFunctionMustBeAtRootLevel">Simulink Function block ''{0}'' must be placed at the root level of an &lt;a href="matlab:helpview([docroot ''/toolbox/simulink/helptargets.map''], ''export_function_models'')"&gt;export-function model&lt;/a&gt; because its function visibility is set to ''port''.
    </entry>
    <entry key="SimulinkFunctionProvidedNoServicePort">Because Simulink function ''{0}'' has function visibility set to ''port'', it must have an associated Function Element block ''{2}.{1}'' placed at the model root level.
    &lt;actions exclusiveFixIts="yes"&gt;
        &lt;action type="fixit" id="fcnPort" retvalue="false"&gt;
            &lt;cmd&gt;slprivate(''insertFunctionElementPort'', bdroot(''{0}''), ''{2}'', ''{1}'', false);&lt;/cmd&gt;
            &lt;txt&gt;Add a Function Element block ''{2}.{1}'' at the model root level.&lt;/txt&gt;
        &lt;/action&gt;
    &lt;/actions&gt;
    </entry>
    <entry key="FunctionCallerRequestedNoServicePort">Function Caller ブロック ''{0}'' は、Function Element ブロック ''{3}'' に関連付けられた未定義の関数 ''{2}.{1}'' を呼び出します。外部の端子スコープ内関数を呼び出すには、代わりに Function Element Call ブロックを使用します。 &lt;actions exclusiveFixIts="yes"&gt; &lt;action type="fixit" id="fcnPort" retvalue="false"&gt; &lt;cmd&gt;slprivate(''insertFunctionElementPort'', bdroot(''{0}''), ''{2}'', ''{1}'', true);&lt;/cmd&gt; &lt;txt&gt;ブロック ''{3}'' をモデルのルート レベルに配置された Function Element Call ブロック ''{2}.{1}'' に置き換える。&lt;/txt&gt; &lt;/action&gt; &lt;/actions&gt;
    </entry>
    <entry key="ClientPortNotAtRootLevel">ブロック ''{0}'' は Function Element Call の端子であり、&lt;a href="matlab:helpview([docroot ''/toolbox/simulink/helptargets.map''], ''export_function_models'')"&gt;エクスポート関数モデル&lt;/a&gt;のルート レベルに配置する必要があります。</entry>
    <entry key="ServerPortNotAtRootLevel">ブロック ''{0}'' は Function Element の端子であり、&lt;a href="matlab:helpview([docroot ''/toolbox/simulink/helptargets.map''], ''export_function_models'')"&gt;エクスポート関数モデル&lt;/a&gt;のルート レベルに配置する必要があります。</entry>
    <entry key="SimulinkFunctionProvidedNoServicePortTs">Simulink 関数 ''{0}'' は端子名 ''{1}'' を使用してサービスの定義を指定しています。この端子は、そのサンプル時間を指定する必要があります。</entry>
    <entry key="SimulinkFunctionDuplicateServiceName">ブロック ''{0}'' は端子 ''{2}'' を介してサービス ''{1}'' を定義していますが、ブロック ''{3}'' も別の端子を介して同じ名前のサービスを定義しています。</entry>
    <entry key="CannotCreateSubsystemFromClientServerPorts">ブロック ''{0}'' からサブシステムを作成できません。このブロックにクライアント/サーバー ポートが含まれているためです。クライアント/サーバー ポートはモデルのルート レベルにある必要があります。</entry>
    <entry key="ClientServerNoBranching">ブロック ''{0}'' は、端子番号 {1,number,integer} 経由でクライアント呼び出しを行っています。この端子は 1 つのサーバー ポートに接続する必要があり、複数のクライアント ポートに接続を分岐することはできません。</entry>
    <entry key="ClientServerSyncExpFcnOnly">ブロック ''{0}'' は、入力端子 ''{1}'' 経由で同期クライアント呼び出しを行っており、&lt;a href="matlab:helpview([docroot ''/toolbox/simulink/helptargets.map''], ''export_function_models'')"&gt;エクスポート関数モデル&lt;/a&gt;内に配置しなければなりません。&lt;actions exclusiveFixIts="yes"&gt; &lt;action type="fixit"&gt; &lt;cmd&gt;set_param_action(''{2}'', ''SetExecutionDomain'', ''on'');set_param_action(''{2}'', ''ExecutionDomainType'', ''ExportFunction'');&lt;/cmd&gt; &lt;txt&gt;モデル ''{2}'' をこのモデルのルート レベルの&lt;a href="matlab:helpview([docroot ''/toolbox/simulink/helptargets.map''], ''export_function_models'')"&gt;エクスポート関数モデル&lt;/a&gt;として設定するには、プロパティ インスペクターを開きます。[実行] タブで、[実行領域の設定] を選択し、[領域] を [エクスポート関数] に設定する。&lt;/txt&gt; &lt;/action&gt; &lt;/actions&gt;
    </entry>
    <entry key="ClientServerSyncSWArchOnly">ブロック ''{0}'' は、入力端子 ''{1}'' 経由で同期クライアント呼び出しを行っており、ソフトウェア アーキテクチャ モデル内に配置しなければなりません。
    </entry>
    <entry key="ClientServerNoAccel">モデル ''{0}'' に非同期クライアント/サーバー関数端子が含まれているため、アクセラレータ モードのシミュレーションはサポートされません。</entry>
    <entry key="ClientServerNoRapid">Rapid Accelerator mode simulation is not supported because model ''{0}'' contains client-server function ports.</entry>
    <entry key="ClientServerNoSILPIL">モデル ''{0}'' は、現在のターゲット ''{1}'' に対しソフトウェアインザループ (SIL) またはプロセッサインザループ (PIL) シミュレーション モードをサポートしません。モデルにクライアント/サーバー関数端子が含まれるためです。</entry>
    <entry key="AsyncFunctionCallerNoLogging">Function Caller ブロック ''{0}'' は非同期実行用に構成されているため、このブロックの出力をログに記録することはサポートされません。</entry>
    <entry key="AsyncFunctionCallerConnection">Function Caller ブロック ''{0}'' は非同期実行用に構成されているため、このブロックの出力は、モデル ''{1}'' のルート レベルにある Message-triggered Subsystem に接続しなければなりません。</entry>
    <entry key="AsyncCallerMsgTrigSubsysSetting">Function Caller ブロック ''{1}'' の非同期応答関数である Message Triggered Subsystem ''{0}'' では、関連付けられた Trigger Port ブロックでパラメーター ''TriggerTime'' が [メッセージが使用可能な時] に、パラメーター ''ScheduleAsAperiodic'' が [オフ] に設定されていなければなりません。 &lt;actions exclusiveFixIts="yes"&gt; &lt;action type="fixit"&gt; &lt;cmd&gt;set_param_action(''{2}'', ''TriggerTime'', ''on message available''); set_param_action(''{2}'', ''ScheduleAsAperiodic'', ''off'');&lt;/cmd&gt; &lt;txt&gt;ブロック ''{2}'' のパラメーター &lt;sldiag objui="blockdlg" objparam="TriggerTime" objname="{2}"&gt;[トリガー時間]&lt;/sldiag&gt; を [メッセージが使用可能な時] に設定し、パラメーター&lt;sldiag objui="blockdlg" objparam="ScheduleAsAperiodic" objname="{2}"&gt;[非周期的分割としてスケジュールする]&lt;/sldiag&gt; をオフにする。&lt;/txt&gt; &lt;/action&gt; &lt;/actions&gt;
    </entry>
    <entry key="AsyncCallerMsgTrigSSMustBeAtRoot">Function Caller ブロック ''{1}'' の非同期応答関数である Message Triggered Subsystem ''{0}'' は、モデル ''{2}'' のルート レベルに配置しなければなりません。
    </entry>
    <entry key="AsyncFunctionNeedsMultiTasking">ブロック ''{0}'' には非同期関数 ''{1}'' が含まれています。これを許可するには、[コンフィギュレーション パラメーター] &gt; [ソルバー] &gt; [各離散レートを個別のタスクとして扱う] オプションを設定しなければなりません。 &lt;actions exclusiveFixIts="yes"&gt; &lt;action type="fixit"&gt; &lt;cmd&gt;set_param_action(''{2}'', ''SolverMode'', ''MultiTasking'');&lt;/cmd&gt; &lt;txt&gt;コンフィギュレーション パラメーターの &lt;sldiag objui="configset" objparam="EnableMultiTasking" objname="{0}"&gt;[ソルバー] &gt; [各離散レートを個別のタスクとして扱う]&lt;/sldiag&gt; オプションを設定し、モデル ''{2}'' をマルチタスク モードで実行するように変更する。&lt;/txt&gt; &lt;/action&gt; &lt;/actions&gt;
</entry>
    <entry key="AsyncFunctionNeedsScheduleEditor">ブロック ''{0}'' には非同期関数 ''{1}'' が含まれています。このブロックをエクスポート関数モデル内に配置するか、[ブロック パラメーター] ダイアログから [次を使用してレートをスケジュール] パラメーターを [スケジュール エディター] に設定しなければなりません。 &lt;actions exclusiveFixIts="yes"&gt; &lt;action type="fixit"&gt; &lt;cmd&gt;set_param_action(''{0}'', ''ScheduleRatesWith'', ''Schedule Editor'');&lt;/cmd&gt; &lt;txt&gt;[次を使用してレートをスケジュール] を [スケジュール エディター] に変更する。&lt;/txt&gt; &lt;/action&gt; &lt;/actions&gt;
</entry>
    <entry key="AsyncFunctionNeedsClientPort">[関数呼び出しを非同期で実行] オプションがオンのとき、Function Caller ブロック ''{0}'' はクライアント ポートに解決される必要があります。</entry>
    <entry key="AsyncFunctionNeedsServerPort">[関数呼び出しを非同期で実行] オプションがオンのとき、Simulink Function ブロック ''{0}'' の端子スコープはサーバー ポートに設定する必要があります。</entry>
    <entry key="AsyncFunctionDisallowPublicSimulinkFunctions">モデルに端子スコープ内の非同期 Simulink 関数が含まれている場合、Simulink Function ブロック ''{0}'' は次の 2 つの方法のいずれかで構成しなければなりません: (1) [可視性] を [スコープ内] に設定し、ブロックをバーチャル サブシステム内に配置して、関数がモデルに対してプライベートになるようにする。(2) [可視性] を [端子] に設定し、Function Element Out ブロックで構成する。
    </entry>
    <entry key="AsyncFunctionDisallowInheritedFunctions">1 つ以上の端子をスコープとする関数がモデル ''{1}'' に含まれているため、このモデル内の関数 ''{0}'' は周期的なサンプル時間を指定する必要があります。
</entry>
    <entry key="AsyncFunctionDisallowInheritedFcnsSWArch">1 つ以上の端子をスコープとする関数がモデル ''{1}'' に含まれているため、このモデル内の関数 ''{0}'' には周期的なサンプル時間がなければなりません。関数エディターを開いて、関数の周期を編集してください。&lt;actions exclusiveFixIts="yes"&gt; &lt;action type="suggestion" id="openFunctionsEditor" retvalue="false"&gt; &lt;cmd&gt;swarch.internal.fixes.showArchitectureEditor(''{1}'')&lt;/cmd&gt; &lt;txt&gt;関数エディターを開く。&lt;/txt&gt; &lt;/action&gt; &lt;/actions&gt;
    
    </entry>
    <entry key="AsyncSpecificationMismatch"> サーバー ポート ''{1}'' を介してスコープ設定された関数 ''{0}'' には、Simulink Function ブロックおよび対応する Function Caller ブロックにおいて [関数呼び出しを非同期で実行] オプションで一致する指定が必要です。</entry>
    <entry key="UnsupportedAsyncCodegenTargets">Function Caller ブロック ''{0}'' は非同期実行用に構成されているため、このブロックのコード生成はサポートされません。</entry>
    <entry key="UnsupportedCGForAsyncFcnMultiOutputs">複数の出力引数をもつ Function Caller ブロック ''{0}'' が非同期実行用に構成されている場合、このブロックのコード生成はサポートされません。</entry>
    <entry key="AsyncInterfaceMismatchAtCaller">
    Simulink の動作における Function Caller ブロック ''{2}'' による関数呼び出しの非同期実行は、クライアント ポート ''{1}'' のインターフェイスで定義された関数 ''{0}'' と一致しなければなりません。&lt;actions exclusiveFixIts="yes"&gt; &lt;action type="fixit" id="AsyncInterfaceMismatchAtCallerFix"&gt; &lt;cmd&gt;set_param_action(''{2}'', ''AsynchronousCaller'', ''{3}'');&lt;/cmd&gt; &lt;txt&gt;関数 ''{0}'' のインターフェイスの 'Asynchronous' パラメーターと一致するように、Function Caller ブロック ''{2}'' の 'AsynchronousFunction' パラメーターを設定する。&lt;/txt&gt; &lt;/action&gt; &lt;/actions&gt;
    
    </entry>
    <entry key="AsyncInterfaceMismatchAtFunction">
    Simulink の動作における Trigger ブロック ''{2}'' による関数呼び出しの非同期実行は、サーバー ポート ''{1}'' のインターフェイスで定義された関数 ''{0}'' と一致しなければなりません。&lt;actions exclusiveFixIts="yes"&gt; &lt;action type="fixit" id="AsyncInterfaceMismatchAtFunctionFix"&gt; &lt;cmd&gt;set_param_action(''{2}'', ''AsynchronousFunction'', ''{3}'');&lt;/cmd&gt; &lt;txt&gt;関数 ''{0}'' のインターフェイスの 'Asynchronous' パラメーターと一致するように、Trigger ブロック ''{2}'' の 'AsynchronousFunction' パラメーターを設定する。&lt;/txt&gt; &lt;/action&gt; &lt;/actions&gt;
    
    </entry>
    <entry key="ArgBlockFcnArgMinMismatch">
    ''{2}'' で定義された関数 ''{1}'' の関数引数 ''{0}''の [最小値] パラメーターは、引数ブロック ''{3}'' の [OutMin] パラメーターと一致しなければなりません。 &lt;actions exclusiveFixIts="yes"&gt; &lt;action type="fixit" id="ArgBlockFcnArgMinMismatchFix"&gt; &lt;cmd&gt;set_param_action(''{3}'', ''OutMin'', ''{4}'');&lt;/cmd&gt; &lt;txt&gt;Argument ブロック ''{5}'' の [OutMin] パラメーターを ''{2}'' の関数の引数の [最小値] プロパティと一致するように設定する。&lt;/txt&gt; &lt;/action&gt; &lt;/actions&gt;
    
    </entry>
    <entry key="ArgBlockFcnArgMaxMismatch">
    ''{2}'' で定義された関数 ''{1}'' の関数引数 ''{0}''の [最大値] パラメーターは、引数ブロック ''{3}'' の [OutMax] パラメーターと一致しなければなりません。 &lt;actions exclusiveFixIts="yes"&gt; &lt;action type="fixit" id="ArgBlockFcnArgMaxMismatchFix"&gt; &lt;cmd&gt;set_param_action(''{3}'', ''OutMax'', ''{4}'');&lt;/cmd&gt; &lt;txt&gt;Argument ブロック ''{5}'' の [OutMax] パラメーターを ''{2}'' の関数の引数の [最大値] プロパティと一致するように設定する。&lt;/txt&gt; &lt;/action&gt; &lt;/actions&gt;
    
    </entry>
    <entry key="AsyncInterfaceMismatchSelect">選択</entry>
    <entry key="AsyncInterfaceMismatchDeselect">選択解除</entry>
    <entry key="UnsupportedCGForAsyncFcnVoidOutput">出力引数のない Function Caller ブロック ''{0}'' が非同期実行用に構成されている場合、このブロックのコード生成はサポートされません。</entry>
    <entry key="InvalidFunctionOrder">エクスポート関数モデル ''{0}'' の関数 ''{1}'' および ''{2}'' の次数が一致しません。&lt;actions exclusiveFixIts="yes"&gt; &lt;action type="fixit" retvalue="false"&gt; &lt;cmd&gt;set_param("{0}","OrderFunctionsByDependency","off"); tcg = sltp.TaskConnectivityGraph("{0}"); tcg.assignInputPortPrioritiesForModel();&lt;/cmd&gt; &lt;txt&gt;モデルに矛盾が発生。[修正] ボタンをクリックして解決する。&lt;/txt&gt; &lt;/action&gt; &lt;/actions&gt;
    
    </entry>
    <entry key="ClientPortDelegateUnsupported">
      Model ブロック ''{1}'' の関数端子 ''{0}'' とデータ端子 ''{2}'' との接続が無効です。関数端子は、別の Model ブロックのエクスポート関数の端子に接続しなければなりません。クライアント/サーバー通信のモデル化方法の詳細については、System Composer のドキュメンテーションの「&lt;a href="matlab:helpview('systemcomposer', 'author-service-interfaces-for-client-server-communication')"&gt;Author Service Interfaces for Client-Server Communication&lt;/a&gt;」を参照してください。
    </entry>
    <entry key="ClientPortConnectionUnsupported">
      Model ブロック ''{1}'' の関数端子 ''{0}'' とブロック ''{2}'' との接続が無効です。関数端子は、別の Model ブロックのエクスポート関数の端子に接続しなければなりません。クライアント/サーバー通信のモデル化方法の詳細については、System Composer のドキュメンテーションの「&lt;a href="matlab:helpview('systemcomposer', 'author-service-interfaces-for-client-server-communication')"&gt;Author Service Interfaces for Client-Server Communication&lt;/a&gt;」を参照してください。
    </entry>
    <entry key="ServerPortDelegateUnsupported">
      Model ブロック ''{1}'' のエクスポート関数の端子 ''{0}'' とデータ端子 ''{2}'' との接続が無効です。エクスポート関数の端子は、別の Model ブロックの関数端子に接続しなければなりません。クライアント/サーバー通信のモデル化方法の詳細については、System Composer のドキュメンテーションの「&lt;a href="matlab:helpview('systemcomposer', 'author-service-interfaces-for-client-server-communication')"&gt;Author Service Interfaces for Client-Server Communication&lt;/a&gt;」を参照してください。
    </entry>
    <entry key="ServerPortConnectionUnsupported">
      Model ブロック ''{1}'' のエクスポート関数の端子 ''{0}'' とブロック ''{2}'' との接続が無効です。エクスポート関数の端子は、別の Model ブロックの関数端子に接続しなければなりません。クライアント/サーバー通信のモデル化方法の詳細については、System Composer のドキュメンテーションの「&lt;a href="matlab:helpview('systemcomposer', 'author-service-interfaces-for-client-server-communication')"&gt;Author Service Interfaces for Client-Server Communication&lt;/a&gt;」を参照してください。
    </entry>
    <entry key="ClientServerModelRefPortsMustHaveSameInterfaceForCG">
      For code generation, server port ''{0}'' (&lt;sldiag objui="outport" objparam="{1,number,integer}" objname="{2}"&gt;link&lt;/sldiag&gt;) of ''{2}'' and client port ''{3}'' (&lt;sldiag objui="inport" objparam="{4,number,integer}" objname="{5}"&gt;link&lt;/sldiag&gt;) of ''{5}'' must either specify the same service interface or, if not using service interfaces, have the same port name. To fix, change the data type or port name of the associated function element ports in the referenced models.
    </entry>
    <entry key="ClientServerDelegationPortsMustHaveSameInterfaceForCG">
      For code generation, the connected client or server ports, ''{0}'' port (''{1}'') of ''{2}'' and port ''{3}'' (&lt;sldiag objui="{4}" objparam="{5,number,integer}" objname="{6}"&gt;link&lt;/sldiag&gt;) of ''{6}'' must either specify the same service interface or, if not using service interfaces, have the same port name.
    </entry>
    <entry key="SimulinkStateContainsFcnCallInAcceleratorMode">ブロック ''{0}'' は、Stateflow チャートの Simulink ベースのステート内で関数呼び出し信号を出力するため、アクセラレータ モードではシミュレートできません。</entry>
    <entry key="CoreBlockCannotCallSFcnInAcceleratorMode">S-Function ブロック ''{0}'' は、その関数呼び出し入力端子 {1,number,integer} がインライン化されていない S-Function ではないブロック ''{2}'' によって駆動されているため、アクセラレータ モードでシミュレートできません。アクセラレータ用にインライン化されない関数呼び出しイニシエーターの例としては、Stateflow チャートや、アクセラレータで TLC を使用しない S-Function があります。</entry>
    <entry key="ScopeToPortPrompt">&lt;端子名を選択または入力してください&gt;</entry>
    <entry key="AddFunctionPortTitle">関数端子の追加</entry>
    <entry key="AddFunctionPortDialog">新しい関数端子 ''{0}'' が指定されています。今すぐこの端子を作成しますか?</entry>
    <entry key="AsyncCallerOnlySupportsExpFcnMdl">
    
    ブロック ''{0}'' からの関数の非同期実行は、ブロックが&lt;a href="matlab:helpview([docroot ''/toolbox/simulink/helptargets.map''], ''export_function_models'')"&gt;エクスポート関数モデル&lt;/a&gt;の関数内に配置されている場合にのみサポートされます。 &lt;actions exclusiveFixIts="yes"&gt; &lt;action type="fixit" id="SetToSync" retvalue="false"&gt; &lt;cmd&gt;set_param_action(''{0}'', ''AsynchronousCaller'', ''off'');&lt;/cmd&gt; &lt;txt&gt;ブロック ''{0}'' のパラメーター [関数呼び出しを非同期で実行] を [オフ] に設定する。&lt;/txt&gt; &lt;/action&gt; &lt;/actions&gt;
    
    </entry>
    <entry key="InvalidArgumentDatatypeInServiceInterface">サービス インターフェイス ''{3}'' の関数要素 ''{2}'' の引数 ''{1}'' に無効なデータ型 ''{0}'' が指定されました。</entry>
    <entry key="MultiFunctionsSameNameInMdlRef">Model ブロック ''{0}'' に、''{1}'' という名前の Simulink 関数が複数含まれています。これは、以前のリリースの保護モデルを参照してアクセラレータ モードでシミュレーションする場合にはサポートされていません。このリリースの保護モデルは、元のモデル ファイルを使用して作成または更新してください。</entry>
  </message>
</rsccat>
