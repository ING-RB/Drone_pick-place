<?xml version="1.0" encoding="UTF-8"?>
<!--Copyright 2025 The MathWorks, Inc.-->

<rsccat xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.0" locale="ja_JP" product="Simulink" xsi:noNamespaceSchemaLocation="../../resources/schema/msgcat.xsd">
  <message>
    <entry key="CustomCodeParsingFailed">カスタム コードの解析が失敗し、次のメッセージが表示されました: {0}</entry>
    <entry key="Title">Python インポーター</entry>
    <entry key="SaveDialogTitle">コード インポーターの設定をファイルに保存</entry>
    <entry key="ConfirmationDialogTitle">Simulink コード インポーター</entry>
    <entry key="ConfirmationDialogMsg">閉じる前にインポート設定を保存しますか?</entry>
    <entry key="ConfirmationDialogButtonYesLabel">はい</entry>
    <entry key="ConfirmationDialogButtonNoLabel">いいえ</entry>
    <entry key="ProjectDialogTitle">既存のプロジェクト ファイルを指定</entry>
    <entry key="AddToProjectSuccessDlg">プロジェクトに追加</entry>
    <entry key="AddToProjectSuccessMsg">プロジェクトに正常に追加されました</entry>
    <entry key="IncludesConfirmationDlgTitle">インクルード ファイルとパッケージのオートフィル</entry>
    <entry key="IncludesConfirmationDlgMsg">次に進むと、''{0}'' 内の前の値がオートフィルされたインクルード ファイルおよびパッケージに置き換えられます。続行しますか?</entry>
    <entry key="ConfirmationDlgYesLabel">はい</entry>
    <entry key="ConfirmationDlgNoLabel">いいえ</entry>
    <entry key="ExternalsConfirmationDlgTitle">要件のオートフィル</entry>
    <entry key="ExternalsConfirmationDlgMsg">次に進むと、''{0}'' 内の前の値がオートフィルされた要件に置き換えられます。続行しますか?</entry>
    <entry key="Topic_Welcome">ようこそ</entry>
    <entry key="Topic_SimulinkLib">設定</entry>
    <entry key="Topic_ConfigCode">カスタム コードの指定</entry>
    <entry key="Topic_Analyze">解析</entry>
    <entry key="Topic_WhatToImport">インポート</entry>
    <entry key="Topic_Options">オプション</entry>
    <entry key="Topic_Finish">Simulink ライブラリの作成</entry>
    <entry key="status">ステータス</entry>
    <entry key="QuestionHelpTitle">検討事項</entry>
    <entry key="OptionHelpTitle">選択したオプションについて</entry>
    <entry key="back">戻る</entry>
    <entry key="next">次へ</entry>
    <entry key="save">保存</entry>
    <entry key="startNew">開始</entry>
    <entry key="loadButton">読み込み</entry>
    <entry key="finish">終了</entry>
    <entry key="empty_selection">回答が選択されていません。</entry>
    <entry key="error">エラー</entry>
    <entry key="needNumericValue">数値を入力してください。</entry>
    <entry key="categoryTitle">カテゴリ</entry>
    <entry key="parameterTitle">パラメーター</entry>
    <entry key="newValueTitle">新しい値</entry>
    <entry key="oldValueTitle">古い値</entry>
    <entry key="sbxupdate">サンドボックスの更新</entry>
    <entry key="addtoprjBtn">追加</entry>
    <entry key="addtoprjLabel">生成された Simulink ライブラリ ファイルをプロジェクトに追加しますか? </entry>
    <entry key="inferBtnToolTip">指定したファイルとパッケージからインクルードをオートフィル</entry>
    <entry key="externalsBtnToolTip">要件ファイルまたは外部ライブラリをオートフィル</entry>
    <entry key="Question_Start">
                        &lt;center&gt;&lt;b&gt;&lt;u&gt;Python インポーター&lt;/u&gt;&lt;/b&gt;&lt;/center&gt;&lt;br/&gt;&lt;br/&gt; &lt;p&gt;Python インポーターを使用すると、モデル化、検証、妥当性確認のためにカスタム コードをインポートできます。&lt;/p&gt; &lt;br/&gt;&lt;br/&gt; &lt;p&gt;Python インポーターは以下を行います。&lt;ul&gt; &lt;li&gt;カスタム コードの関数、型、およびそれらの依存関係を解析する。&lt;/li&gt; &lt;li&gt;カスタム コードを、呼び出し可能な関数と型が含まれる Simulink ライブラリにインポートする。&lt;/li&gt; &lt;/ul&gt; &lt;/p&gt;</entry>
    <entry key="Option_Start_New">新規インポートの開始</entry>
    <entry key="Option_Start_Existing">以前のインポートで保存したファイルの読み込み</entry>
    <entry key="Option_Start_SelectFile">ファイルの選択:</entry>
    <entry key="OptionHint_Start_SelectFile">以前のインポートで保存したファイルを選択します。</entry>
    <entry key="Option_ConfigCodeLibrary_ProjectName">Simulink ライブラリ ファイル名: </entry>
    <entry key="OptionHint_ConfigCodeLibrary_ProjectName">Simulink ライブラリ ファイル名を指定します。 </entry>
    <entry key="Option_ConfigCodeLibrary_ProjectFolder">出力フォルダー: </entry>
    <entry key="OptionHint_ConfigCodeLibrary_ProjectFolder">作成したライブラリとその他のアーティファクトを保存する出力フォルダーを指定してください。 </entry>
    <entry key="Option_ConfigCodeLibrary_LibraryBrowserName">Simulink ライブラリ ブラウザー名: </entry>
    <entry key="OptionHint_ConfigCodeLibrary_LibraryBrowserName">Simulink ライブラリ ブラウザーに表示される名前を指定します。 </entry>
    <entry key="Option_OptionsCreateSLBlocks_Checkbox">生成されたライブラリを Simulink ライブラリ ブラウザーに追加する。</entry>
    <entry key="OptionHint_OptionsCreateSLBlocks_Checkbox">これを選択すると、生成されたライブラリが Simulink ライブラリ ブラウザーに追加されます。</entry>
    <entry key="Question_ConfigCodeImporter"> &lt;b&gt; 出力 Simulink ライブラリ ファイル名と出力フォルダーの指定:&lt;/b&gt;
    </entry>
    <entry key="QuestionHint_ConfigCodeImporter"> Simulink ライブラリ ファイル名: この名前が、Simulink ライブラリ ファイルおよび生成されたアーティファクトの命名に使用されます。 &lt;br/&gt;&lt;br/&gt; 出力フォルダー: このフォルダーに、Simulink ライブラリとアーティファクトが生成されます。 &lt;br/&gt;&lt;br/&gt;
    </entry>
    <entry key="OutputFolderUnspecified">出力フォルダーを指定しなければなりません。 </entry>
    <entry key="Question_ConfigCodeLibrary">&lt;b&gt;カスタム コード情報の指定:&lt;/b&gt;</entry>
    <entry key="QuestionHint_ConfigCodeLibrary">&lt;p&gt;カスタム コード オプションでは、パスは絶対パスか、出力フォルダーに対する相対パスでなければなりません。&lt;/p&gt; </entry>
    <entry key="Option_ConfigCodeLibrary_SourceFiles">インポートするファイル:</entry>
    <entry key="OptionHint_ConfigCodeLibrary_SourceFiles">インポートするソース ファイルを指定します。</entry>
    <entry key="Option_ConfigCodeLibrary_SourcePackages">インポートするパッケージ:</entry>
    <entry key="OptionHint_ConfigCodeLibrary_SourcePackages">インポートするパッケージを指定します。__init__.py ファイルを使用してパッケージを特定します。</entry>
    <entry key="Option_ConfigCodeLibrary_PythonFolder">Python プロジェクト:</entry>
    <entry key="OptionHint_ConfigCodeLibrary_PythonFolder">ブロックセット デザイナーにインポートする Python プロジェクトを指定してください。 </entry>
    <entry key="Option_ConfigCodeLibrary_Includes">インクルード ファイルまたはパッケージ:</entry>
    <entry key="OptionHint_ConfigCodeLibrary_Includes">ソース ファイルまたはパッケージとあわせてインクルードする必要がある依存ディレクトリまたはファイルを指定します。</entry>
    <entry key="Option_ConfigCodeLibrary_Externals">要件:</entry>
    <entry key="OptionHint_ConfigCodeLibrary_Externals">Python パッケージの requirement.txt ファイルを指定します。</entry>
    <entry key="Question_ConfigUpdateMode">&lt;b&gt;指定された出力 Simulink ライブラリは既に存在します。既存のライブラリを更新するか上書きすることができます:&lt;/b&gt;</entry>
    <entry key="Option_UpdateExisting">更新</entry>
    <entry key="Option_Overwrite">上書き</entry>
    <entry key="Question_WhatToImportAnalyze">&lt;p&gt;次の操作を行うには、&lt;b&gt;[次へ]&lt;/b&gt; をクリックしてください。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;カスタム コードの関数、入力タイプ、出力タイプ、注釈を解析する。&lt;/li&gt;&lt;/ul&gt;</entry>
    <entry key="Question_WhatToImportFunction">&lt;b&gt;Simulink ライブラリにインポートする関数を選択:&lt;/b&gt;</entry>
    <entry key="QuestionHint_WhatToImportFunction">&lt;p&gt;選択した各関数に System object と System ブロックが生成されます。&lt;/p&gt; &lt;p&gt;インポートする関数を少なくとも 1 つ選択してください。&lt;/p&gt;</entry>
    <entry key="Option_WhatToImportFunction_EntryFunctions">エントリポイント関数のみを表示</entry>
    <entry key="OptionHint_WhatToImportFunction_FunctionNameFilter">名前により関数を検索します</entry>
    <entry key="Question_PortSpecificationsMapping">&lt;b&gt;以前に選択した関数について、ブロックの端子仕様を編集します。&lt;/b&gt;</entry>
    <entry key="QuestionHint_PortSpecificationsMapping">&lt;p&gt;System ブロックは、別途指定しない限り、既定の端子仕様で生成されます。&lt;/p&gt;&lt;p&gt; ブロックの端子仕様は、生成された System object でも編集できます。&lt;/p&gt;</entry>
    <entry key="Question_WhatToImportType">&lt;b&gt;出力 Simulink ライブラリにインポートする型を選択:&lt;/b&gt;</entry>
    <entry key="QuestionHint_WhatToImportType"> &lt;p&gt; 以前に選択した関数で必要とされる型は自動的に選択されます。&lt;/p&gt; &lt;p&gt;選択されたすべての型は、出力 Simulink ライブラリにリンクされる Simulink データ ディクショナリにインポートされます。&lt;/p&gt;</entry>
    <entry key="Option_WhatToImportType_ImportToFile">型をファイルにインポート</entry>
    <entry key="OptionHint_WhatToImportType_ImportToFile">このオプションは、struct 型を ''project_name_types.mat'' ファイルにインポートし、enum 型を MATLAB クラス ファイルにインポートする場合に選択します。</entry>
    <entry key="OptionHint_WhatToImportType_TypeNameFilter">名前により型を検索します</entry>
    <entry key="Question_OptionsGlobalIO">&lt;b&gt;グローバル変数がカスタム コード内で検出されました:&lt;/b&gt;</entry>
    <entry key="QuestionHint_OptionsGlobalIO">関数はグローバル変数の読み取りと書き込みを行うことがあります。有効になっている場合、関数によりアクセスされるグローバル変数は、出力 Simulink ライブラリにおいて関数のインターフェイスとして扱われます。詳細については、&lt;a href="matlab:helpview('simulink', 'Tag_ConfigSet_Sim_CustomCodeGlobalsAsFunctionIO')"&gt;{0}&lt;/a&gt; を参照してください。</entry>
    <entry key="Option_OptionsGlobalIO_Checkbox">グローバル変数を関数インターフェイスとして有効にする</entry>
    <entry key="OptionHint_OptionsGlobalIO_Checkbox">関数がグローバル変数に関数インターフェイスとしてアクセスしないことを確認している場合は、この選択を解除します。</entry>
    <entry key="Question_CreateTestHarness"> &lt;b&gt;テスト ハーネスの作成:&lt;/b&gt;</entry>
    <entry key="Option_CreateTestHarness_Auto">インポートされたすべての関数にテスト ハーネスを自動的に作成</entry>
    <entry key="Option_CreateTestHarness_Skip">スキップ</entry>
    <entry key="Question_Finish">生成されたライブラリの仕様:</entry>
    <entry key="Question_NextStep">&lt;center&gt;&lt;b&gt;&lt;u&gt;コードが正常にインポートされました&lt;/u&gt;&lt;/b&gt;&lt;/center&gt;&lt;br/&gt;&lt;br/&gt; &lt;p&gt;Simulink ライブラリが出力フォルダーに生成されました。&lt;/p&gt;&lt;p&gt;&lt;b&gt;次のステップ:&lt;/b&gt;&lt;/p&gt;{0}</entry>
    <entry key="OutputFolderCDHyperlink">MATLAB の現在のフォルダーを出力フォルダーに変更します。</entry>
    <entry key="OpenLibraryHyperlink">生成された Simulink ライブラリを開く</entry>
    <entry key="Option_ConfigProject_AddToProject"/>
    <entry key="OptionHint_ConfigProject_AddToProject">既存のプロジェクト ファイルを指定</entry>
  </message>
</rsccat>
