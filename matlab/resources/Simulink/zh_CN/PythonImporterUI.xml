<?xml version="1.0" encoding="UTF-8"?>
<!--Copyright 2025 The MathWorks, Inc.-->

<rsccat xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.0" locale="zh_CN" product="Simulink" xsi:noNamespaceSchemaLocation="../../resources/schema/msgcat.xsd">
  <message>
    <entry key="CustomCodeParsingFailed">自定义代码解析失败并显示消息: {0}</entry>
    <entry key="Title">Python 导入器</entry>
    <entry key="SaveDialogTitle">将代码导入器设置保存到文件</entry>
    <entry key="ConfirmationDialogTitle">Simulink 代码导入器</entry>
    <entry key="ConfirmationDialogMsg">关闭前是否保存导入设置?</entry>
    <entry key="ConfirmationDialogButtonYesLabel">是</entry>
    <entry key="ConfirmationDialogButtonNoLabel">否</entry>
    <entry key="ProjectDialogTitle">指定现有工程文件</entry>
    <entry key="AddToProjectSuccessDlg">添加到工程</entry>
    <entry key="AddToProjectSuccessMsg">已成功添加到工程</entry>
    <entry key="IncludesConfirmationDlgTitle">自动填充包含文件和包</entry>
    <entry key="IncludesConfirmationDlgMsg">继续操作将使用自动填充的包含文件和包替换 ''{0}'' 中以前的值。是否继续?</entry>
    <entry key="ConfirmationDlgYesLabel">是</entry>
    <entry key="ConfirmationDlgNoLabel">否</entry>
    <entry key="ExternalsConfirmationDlgTitle">自动填充要求</entry>
    <entry key="ExternalsConfirmationDlgMsg">如果继续，将使用自动填充的要求替换 ''{0}'' 中先前的值。是否继续?</entry>
    <entry key="Topic_Welcome">欢迎使用</entry>
    <entry key="Topic_SimulinkLib">设置</entry>
    <entry key="Topic_ConfigCode">指定自定义代码</entry>
    <entry key="Topic_Analyze">分析</entry>
    <entry key="Topic_WhatToImport">导入</entry>
    <entry key="Topic_Options">选项</entry>
    <entry key="Topic_Finish">创建 Simulink 库</entry>
    <entry key="status">状态</entry>
    <entry key="QuestionHelpTitle">要考虑的因素</entry>
    <entry key="OptionHelpTitle">关于所选选项</entry>
    <entry key="back">后退</entry>
    <entry key="next">下一步</entry>
    <entry key="save">保存</entry>
    <entry key="startNew">开始</entry>
    <entry key="loadButton">加载</entry>
    <entry key="finish">完成</entry>
    <entry key="empty_selection">您尚未选择任何内容!</entry>
    <entry key="error">错误</entry>
    <entry key="needNumericValue">请输入一个数值。</entry>
    <entry key="categoryTitle">类别</entry>
    <entry key="parameterTitle">参数</entry>
    <entry key="newValueTitle">新值</entry>
    <entry key="oldValueTitle">旧值</entry>
    <entry key="sbxupdate">更新沙盒</entry>
    <entry key="addtoprjBtn">添加</entry>
    <entry key="addtoprjLabel">是否将生成的 Simulink 库文件添加到工程? </entry>
    <entry key="inferBtnToolTip">基于指定文件和包自动填充包含项</entry>
    <entry key="externalsBtnToolTip">自动填充要求文件或外部库</entry>
    <entry key="Question_Start">
                        &lt;center&gt;&lt;b&gt;&lt;u&gt;Python 导入器&lt;/u&gt;&lt;/b&gt;&lt;/center&gt;&lt;br/&gt;&lt;br/&gt; &lt;p&gt;Python 导入器允许您导入自定义代码进行建模、验证和确认。&lt;/p&gt; &lt;br/&gt;&lt;br/&gt; &lt;p&gt;Python 导入器: &lt;ul&gt; &lt;li&gt;分析函数、类型及其依赖关系的自定义代码。&lt;/li&gt; &lt;li&gt;将自定义代码导入包含可调用函数和类型的 Simulink 库中。&lt;/li&gt; &lt;/ul&gt; &lt;/p&gt;</entry>
    <entry key="Option_Start_New">新建导入</entry>
    <entry key="Option_Start_Existing">加载从以前的导入保存的文件</entry>
    <entry key="Option_Start_SelectFile">选择文件:</entry>
    <entry key="OptionHint_Start_SelectFile">选择从上次的导入保存的文件。</entry>
    <entry key="Option_ConfigCodeLibrary_ProjectName">Simulink 库文件名: </entry>
    <entry key="OptionHint_ConfigCodeLibrary_ProjectName">请指定 Simulink 库文件名。 </entry>
    <entry key="Option_ConfigCodeLibrary_ProjectFolder">输出文件夹: </entry>
    <entry key="OptionHint_ConfigCodeLibrary_ProjectFolder">指定存储所创建的库和其他工件的输出文件夹。 </entry>
    <entry key="Option_ConfigCodeLibrary_LibraryBrowserName">Simulink 库浏览器名称: </entry>
    <entry key="OptionHint_ConfigCodeLibrary_LibraryBrowserName">指定显示在 Simulink 库浏览器中的名称。 </entry>
    <entry key="Option_OptionsCreateSLBlocks_Checkbox">将生成的库添加到 Simulink 库浏览器。</entry>
    <entry key="OptionHint_OptionsCreateSLBlocks_Checkbox">选择此项可将生成的库添加到 Simulink 库浏览器中。</entry>
    <entry key="Question_ConfigCodeImporter"> &lt;b&gt; 指定输出的 Simulink 库文件名和输出文件夹:&lt;/b&gt;
    </entry>
    <entry key="QuestionHint_ConfigCodeImporter"> Simulink 库文件名: 此名称将用于命名 Simulink 库文件和生成的工件。&lt;br/&gt;&lt;br/&gt;输出文件夹: Simulink 库和工件将在此文件夹中生成。&lt;br/&gt;&lt;br/&gt;
    </entry>
    <entry key="OutputFolderUnspecified">必须指定输出文件夹。 </entry>
    <entry key="Question_ConfigCodeLibrary">&lt;b&gt;指定自定义代码信息:&lt;/b&gt;</entry>
    <entry key="QuestionHint_ConfigCodeLibrary">&lt;p&gt;对于自定义代码选项，路径必须为完整路径或相对于输出文件夹的路径。&lt;/p&gt; </entry>
    <entry key="Option_ConfigCodeLibrary_SourceFiles">要导入的文件:</entry>
    <entry key="OptionHint_ConfigCodeLibrary_SourceFiles">指定要导入的源文件。</entry>
    <entry key="Option_ConfigCodeLibrary_SourcePackages">要导入的包:</entry>
    <entry key="OptionHint_ConfigCodeLibrary_SourcePackages">指定要导入的包。使用 __init__.py 文件来标识包。</entry>
    <entry key="Option_ConfigCodeLibrary_PythonFolder">Python 项目:</entry>
    <entry key="OptionHint_ConfigCodeLibrary_PythonFolder">指定要在模块集设计器中导入的 Python 项目。 </entry>
    <entry key="Option_ConfigCodeLibrary_Includes">包含文件或包:</entry>
    <entry key="OptionHint_ConfigCodeLibrary_Includes">指定需要随源文件或包一起提供的相关目录或文件。</entry>
    <entry key="Option_ConfigCodeLibrary_Externals">要求:</entry>
    <entry key="OptionHint_ConfigCodeLibrary_Externals">为 python 包指定 requirement.txt 文件。</entry>
    <entry key="Question_ConfigUpdateMode">&lt;b&gt;指定的输出 Simulink 库已存在。您可以更新或覆盖现有库:&lt;/b&gt;</entry>
    <entry key="Option_UpdateExisting">更新</entry>
    <entry key="Option_Overwrite">覆盖</entry>
    <entry key="Question_WhatToImportAnalyze">&lt;p&gt;点击&lt;b&gt;下一步&lt;/b&gt;以:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;分析函数、输入和输出类型以及注解的自定义代码。&lt;/li&gt;&lt;/ul&gt;</entry>
    <entry key="Question_WhatToImportFunction">&lt;b&gt;选择要导入 Simulink 库中的函数:&lt;/b&gt;</entry>
    <entry key="QuestionHint_WhatToImportFunction">&lt;p&gt;将为每个所选函数生成 System object 和 System 模块。&lt;/p&gt; &lt;p&gt;选择至少一个要导入的函数。&lt;/p&gt;</entry>
    <entry key="Option_WhatToImportFunction_EntryFunctions">仅显示入口函数</entry>
    <entry key="OptionHint_WhatToImportFunction_FunctionNameFilter">按名称查找函数</entry>
    <entry key="Question_PortSpecificationsMapping">&lt;b&gt;编辑之前所选函数的模块端口设定。&lt;/b&gt;</entry>
    <entry key="QuestionHint_PortSpecificationsMapping">&lt;p&gt;除非您另外指定，否则将使用默认端口设定生成 System 模块。&lt;/p&gt;&lt;p&gt;该模块端口设定还可以在生成的 System object 中编辑。&lt;/p&gt;</entry>
    <entry key="Question_WhatToImportType">&lt;b&gt;选择要导入输出 Simulink 库中的类型:&lt;/b&gt;</entry>
    <entry key="QuestionHint_WhatToImportType"> &lt;p&gt;系统会自动选择之前选择的函数所需的类型。&lt;/p&gt; &lt;p&gt;所有选定类型都将导入 Simulink 数据字典，该字典将链接到输出 Simulink 库。&lt;/p&gt;</entry>
    <entry key="Option_WhatToImportType_ImportToFile">将类型导入文件</entry>
    <entry key="OptionHint_WhatToImportType_ImportToFile">选择此选项可将结构体类型导入 ''project_name_types.mat'' 文件中，并将枚举类型导入 MATLAB 类文件中。</entry>
    <entry key="OptionHint_WhatToImportType_TypeNameFilter">按名称查找类型</entry>
    <entry key="Question_OptionsGlobalIO">&lt;b&gt;在自定义代码中检测到全局变量:&lt;/b&gt;</entry>
    <entry key="QuestionHint_OptionsGlobalIO">函数可以读写全局变量。如果启用，则在输出 Simulink 库中，函数访问的全局变量将被视作函数接口。有关详细信息，请参阅 &lt;a href="matlab:helpview('simulink', 'Tag_ConfigSet_Sim_CustomCodeGlobalsAsFunctionIO')"&gt;{0}&lt;/a&gt;。</entry>
    <entry key="Option_OptionsGlobalIO_Checkbox">全局变量作为函数接口</entry>
    <entry key="OptionHint_OptionsGlobalIO_Checkbox">当您确定您的函数不会将全局变量作为函数接口访问时，可以取消选中此项。</entry>
    <entry key="Question_CreateTestHarness"> &lt;b&gt;创建测试框架:&lt;/b&gt;</entry>
    <entry key="Option_CreateTestHarness_Auto">为所有导入的函数自动创建测试框架</entry>
    <entry key="Option_CreateTestHarness_Skip">跳过</entry>
    <entry key="Question_Finish">生成的库的设定:</entry>
    <entry key="Question_NextStep">&lt;center&gt;&lt;b&gt;&lt;u&gt;代码导入成功&lt;/u&gt;&lt;/b&gt;&lt;/center&gt;&lt;br/&gt;&lt;br/&gt; &lt;p&gt;在输出文件夹中已生成 Simulink 库。&lt;/p&gt;&lt;p&gt;&lt;b&gt;后续步骤:&lt;/b&gt;&lt;/p&gt;{0}</entry>
    <entry key="OutputFolderCDHyperlink">将 MATLAB 当前文件夹改为输出文件夹。</entry>
    <entry key="OpenLibraryHyperlink">打开生成的 Simulink 库</entry>
    <entry key="Option_ConfigProject_AddToProject"/>
    <entry key="OptionHint_ConfigProject_AddToProject">指定现有工程文件</entry>
  </message>
</rsccat>
