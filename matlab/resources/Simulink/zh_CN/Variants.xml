<?xml version="1.0" encoding="UTF-8"?>
<!--Copyright 2025 The MathWorks, Inc.-->

<rsccat xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.0" locale="zh_CN" product="Simulink" xsi:noNamespaceSchemaLocation="../../resources/schema/msgcat.xsd">
  <message>
    <entry key="CodeVariantConfigExternalMode_fix">变体激活时间已更新。</entry>
    <entry key="LogicalModeledAsBitwiseError">您已选择使用按位运算符来表示逻辑运算符。当模型包含采用 '启动' 激活模式的变体模块时，不支持此情形。请将 '表示 Bitwise Operator 和 Logical Operator 模块的运算符' 更改为 '逻辑运算符'。&lt;actions exclusiveFixIts="yes"&gt; &lt;action type="fixit"&gt; &lt;cmd&gt;slprivate(''variantfixes'',''LogicalModeledAsBitwiseError'',''{0}'')&lt;/cmd&gt; &lt;txt&gt;将 '表示 Bitwise 和 Logical Operator 模块的运算符' 更改为 '逻辑运算符'。&lt;/txt&gt; &lt;/action&gt; &lt;/actions&gt; 
    </entry>
    <entry key="LogicalModeledAsBitwiseError_fix">已将 '表示 Bitwise 和 Logical Operator 模块的运算符' 更改为 '逻辑运算符'。</entry>
    <entry key="CodeVariantCustomStorageClassesIgnored_fix">"忽略自定义存储类" 选项已禁用。</entry>
    <entry key="CannotChangeGPCDuringUpdate">Cannot change parameter ''{0}'' of the variant subsystem block ''{1}'' while simulation is running.</entry>
    <entry key="VariantBusStateLogUnsupported">State logging is not supported when some of the states are removed.</entry>
    <entry key="DimensionEmptyDueToVariants">The compiled port dimensions is empty. One possible reason could be due to this port being in the path of an inactive variant. Consider making this port active. </entry>
    <entry key="SampleTimeEmptyDueToVariants">The compiled port sample time is empty. One possible reason could be due to this port being in the path of an inactive variant. Consider making this port active. </entry>
    <entry key="VariantConditionParseError">The variant control expression ''{0}'' used by block ''{1}'' is invalid.</entry>
    <entry key="ConstraintConditionParseError">为约束 ''{0}'' 指定的条件无效。</entry>
    <entry key="CSS_UpgradeAdvisorWarning_NoFixIt">
       
        模型包含一个或多个需要转换为 Variant Subsystem 的 Configurable Subsystem。\n &lt;actions exclusiveFixIts="yes"&gt; &lt;action type="suggestion"&gt; &lt;txt&gt;请运行升级顾问以手动将 Configurable Subsystem 模块转换为 Variant Subsystem 模块。&lt;/txt&gt; &lt;/action&gt; &lt;/actions&gt;
      
    </entry>
    <entry key="VariantControlNonNumericValue">变体控制项变量值 "{0}" 必须为数值、Simulink.IntEnumType 的有效枚举值或所含字段具有有效值的结构体。</entry>
    <entry key="VariantConditionNotVariantObject">变体模块 ''{1}'' 的变体控制项 ''{0}'' 必须为模型的全局作用域工作区中 Simulink.VariantExpression 对象的条件表达式或名称。请确保条件与模型名称不匹配。</entry>
    <entry key="VariantConditionUndefinedWarning">Variant control ''{0}'' used by model ''{1}'' must be a condition expression or name of a Simulink.VariantExpression object in the global scope workspace of the model. Ensure that the condition does not match the model name.</entry>
    <entry key="ExpressionParseErrorIntegerLiteralOverflow">Unsupported numeric value ''{0}'' in variant condition expression ''{1}''. Only integers that can fit into the integer type for this system are allowed.</entry>
    <entry key="VariantControlVariableModelName">You cannot set a variant control variable with name ''{0}'' for block ''{1}'' because it matches the name of the model ''{2}''. If this variable is referenced in the condition expression of a Simulink.VariantExpression object that is defined in a global scope workspace, Simulink converts the condition expression to an empty character vector when you load or open the model.</entry>
    <entry key="VariantObjectDependencyLoop1Object">Simulink.VariantExpression 对象 {0} 的条件表达式中存在依赖关系循环，这是不允许的。</entry>
    <entry key="VariantObjectDependencyLoopNObjects">Simulink.VariantExpression 对象 {0} 和 {1} 的条件表达式中存在依赖关系循环，这是不允许的。</entry>
    <entry key="VariantCannotBeChangedDuringCompilation">Modifying the active variant of the block ''{0}'' by a callback on a block other than itself is not supported.</entry>
    <entry key="InvalidVariantControlForIVSimCodegenBlock">Variant control switch for the choices of Variant block ''{0}'' in Variant control mode 'sim codegen switching' must be either ''(sim)'' or ''(codegen)''.</entry>
    <entry key="InlineVariantWithMultipleDefaultPorts">Variant {0} block ''{1}'' has multiple default ports. Only one port can be specified as the default port.</entry>
    <entry key="VariantSrcBusTypesMustBeSame">Invalid connection detected for ''{0}'' at input port {1,number,integer}. All inputs to a Variant source block need to have identical signal names and hierarchies.</entry>
    <entry key="VariantSSBusTypesMustBeSame">Invalid connection detected for ''{0}''. All outputs from the choice blocks of a Variant Subsystem must have identical signal names and hierarchies.</entry>
    <entry key="InlineVariantZeroVariantsNotAllowedFixAZVC">参数 'AllowZeroVariantControls' 的值设置为 'on'</entry>
    <entry key="convertToVariantProtectedMdlPortOrdering">将受保护模型引用模块转换为变体系统可能不会保留输入和输出端口顺序。</entry>
    <entry key="convertToVariantNotAllowed">Model ''{0}'' is in Restricted mode. Incorrect to convert Subsystem to Variant Subsystem when model is in Restricted mode.</entry>
    <entry key="ConvertMRVToVariantSuccess">已成功将 Model Variants 模块转换为 Variant Subsystem 模块 ''{0}''。</entry>
    <entry key="ConvertMRVToVariantSuccessSave">模型 ''{0}'' 中的所有 Model Variants 模块都已转换为 Variant Subsystem 模块。请保存模型以保留转换后的 Variant Subsystem 模块。</entry>
    <entry key="ConvertToVariantwithBadModelDef">Unable to convert Model Variants block ''{0}'' to Variant Subsystem block as model referenced by Model Variants block ''{0}'' is either invalid or not found.</entry>
    <entry key="ConvertToVariantwithOldModelDef">Unable to convert Model Variants block ''{0}'' to Variant Subsystem block as one or more models referenced by Model Variants block ''{0}'' are saved in older Simulink release.</entry>
    <entry key="ConvertToVariantwithOldModelDefForMdl">Unable to convert Model block ''{0}'' to Variant Subsystem block as model referenced is saved in older Simulink release.</entry>
    <entry key="ConvertMRVToVariantFailed">
      
      Failed to convert Model Variants block ''{0}'' to Variant Subsystem block automatically.
      &lt;actions exclusiveFixIts="yes"&gt;
        &lt;action type="suggestion"&gt;
          &lt;cmd&gt;upgradeadvisor(''{1}'')&lt;/cmd&gt;
          &lt;txt&gt;Run upgrade advisor to manually convert Model Variants block to Variant Subsystem block .&lt;/txt&gt;
        &lt;/action&gt;
      &lt;/actions&gt;
      
    </entry>
    <entry key="convertToVariantForCSSNotAllowed">不支持以编程方式将 Configurable Subsystem 模块 ''{0}'' 转换为 Variant Subsystem。请使用上下文菜单转换为 Variant Subsystem。</entry>
    <entry key="convertToVariantForCSSReference">Programmatic conversion of Configurable Subsystem block ''{0}'' to Variant Subsystem is not supported as it is a reference of ''{1}''. Please convert the referenced block ''{1}'' first.</entry>
    <entry key="convertToVariantForBlockDiagram">The conversion of Block Diagram to Variant is not supported.</entry>
    <entry key="convertToVariantForVAS">无法将模块 ''{0}'' 转换为 Variant Subsystem 模块，因为它是 Variant Assembly Subsystem 模块。</entry>
    <entry key="InlineVariantExtOutputNotSupportedFixCSVList">为参数 &lt;a href="matlab:load_system(bdroot);configset.highlightParameter(bdroot,'OutputSaveName')"&gt;OutputSaveName&lt;/a&gt; 指定以逗号分隔的变量列表。</entry>
    <entry key="IVFunctionCallCodeReuseDstFcnJoin">不支持模块 ''{0}'' 的 ''代码生成函数打包'' 参数的指定值，因为该模块输出端口上的函数调用信号连接到变体模块。请考虑将此参数的值更改为 ''内联'' 或 ''自动''。</entry>
    <entry key="InlineVariantFunctionCallCodeReuseOnlyInline">The specified value of ''Code generation function packaging'' parameter for the block ''{0}'' is not supported because it has received a propagated variant condition. Consider changing the value of this parameter to ''inline''.</entry>
    <entry key="MaskWorkspaceSupportInvalidForReusableCodegen">模块 ''{0}'' 的 ''代码生成函数打包'' 设置为 ''可重用''，这是不受支持的设置，因为变体控制项变量 ''{1}'' 源自封装工作区。请将该参数的值设置为 ''inline'' 或 ''auto'' 或者 ''non-reusable''。</entry>
    <entry key="InvalidVATSimCodegen">The variant activation time for variant block ''{0}'' must be set to either "update diagram analyze all choices" or "update diagram" when its variant control mode is set to "sim codegen switching".</entry>
    <entry key="InvalidVATRuntime">模块 ''{1}'' 的变体激活 ''{0}'' 无效。</entry>
    <entry key="SimulinkVariantConflictWithBusElement">Simulink.VariantExpressions 对象 ''{0}'' 与总线对象 ''{1}'' 的总线元素 ''{0}'' 之一有潜在冲突。要解决此错误，请使用不同的标识符更改 Simulink.VariantExpressions 对象。</entry>
    <entry key="SimulinkVariantConflictWithRunTimeParameter">Simulink.VariantExpressions 对象 ''{0}'' 与模块 ''{1}'' 的运行时参数 ''{0}'' 有潜在冲突。要解决此错误，请使用不同的标识符更改 Simulink.VariantExpressions 对象。</entry>
    <entry key="ConvertDefaultParameterBehaviorToTunable_fix">在优化窗格中，"默认参数行为" 设置为 ''可调''。</entry>
    <entry key="VariantControlWithStructElemConflictWithStateflowStruct">变体模块的变体控制项中的结构体不能与 Stateflow 和 MATLAB Function 模块中的结构体相同。</entry>
    <entry key="NonSimulinkParamConflictWithVarControl_fix">变体控制项变量 ''{0}'' 已转换为使用 'CompilerFlag' 自定义存储类的 Simulink.Parameter。</entry>
    <entry key="NonSimulinkParamNotSupportedForStartup_fix">变体控制项变量 ''{0}'' 已转换为使用 'ExportedGlobal' 存储类的 Simulink.Parameter。</entry>
    <entry key="NonSimulinkParamWithVariantTransConflictWithCC">当变体模块的 ''变体激活时间'' 设置为 ''代码编译'' 时，不支持对 Stateflow 图 ''{0}'' 中使用具有 ''启动'' 激活时间的参数 ''{1}'' 的变体转移和变体模块 ''{2}'' 的变体控制项变量使用相同的变量。</entry>
    <entry key="CSStoVSSGUITitle">转换为 Variant Subsystem: </entry>
    <entry key="LinearlyImplicitSystemWithStartupVariants">无法为模型 ''{0}'' 生成代码，因为它使用 ''{1}'' 求解器，并且包含的启动变体模块连接到指定了线性隐式 ODE 方程组的连续状态模块。不支持将启动变体与具有线性隐式方程的 ''{1}'' 一起使用。</entry>
    <entry key="CSStoVSSGUIdescText">Simulink 将可配置子系统的模块选择项复制到可变子系统。默认情况下，复制操作不会创建指向可配置子系统库的链接。此外，当前模块选择项已成为活动变体。\n\n该表允许将变体控制项分配给可变子系统中的选择项。</entry>
    <entry key="CSStoVSSGUICheckBoxName">复制，但不创建到可配置子系统库的链接</entry>
    <entry key="CSStoVSSGUICheckBoxGroupName">指定复制选项</entry>
    <entry key="CSStoVSSGUIVariantGroupName">指定变体控制项</entry>
    <entry key="CSStoVSSGUIDescription">描述</entry>
    <entry key="CSStoVSSConversionStage">Configurable Subsystem 到 Variant Subsystem</entry>
    <entry key="ConvertToVariant">转换为 Variant Subsystem</entry>
    <entry key="ControlVariableInConflict">控制项变量 ''{0}'' 的值与模型 ''{2}'' 使用的配置 ''{1}'' 中的值冲突。</entry>
    <entry key="SubmodelConfigInConflict">子模型 ''{1}'' 的子模型配置 ''{0}'' 与模型 ''{4}'' 使用的配置 ''{3}'' 中的值 ''{2}'' 冲突。</entry>
    <entry key="ConfigInConflictWithPreviousValidation">无法使用变体配置 ''{1}'' 验证模型 ''{0}''，因为已针对层次结构中之前的配置 ''{2}'' 验证了该模型。</entry>
    <entry key="ConfigInConflictWithPreviousSelection">无法使用变体配置 ''{1}'' 验证模型 ''{0}''，因为它与层次结构中之前的模型 ''{3}'' 中选择的子模型配置 ''{2}'' 冲突。</entry>
    <entry key="FailedConstraint">Constraint ''{0}'' failed.{1}</entry>
    <entry key="ConfigDataNotFound">找不到变体配置对象 ''{0}''。</entry>
    <entry key="VCDONotFound">Model ''{0}'' does not have any Variant Configuration Data attached</entry>
    <entry key="ConfigDataNotFoundForConfig">找不到与 ''{2}'' 关联的包含配置 ''{1}'' 的变体配置对象 ''{0}''。</entry>
    <entry key="EmptyConfigurationName">变体配置的名称不能为空。</entry>
    <entry key="SkippingValidation">将跳过变体配置 ''{0}'' 的进一步验证。</entry>
    <entry key="ErrorInEvalOfBeginningOfVarControl">You cannot specify the variant control for the block ''{0}'' to be ignored. Remove the "%" in front of the "Variant control" block parameter value of ''{1}'' to specify the variant condition.</entry>
    <entry key="ErrorInEvalOfVarControl">模块 ''{1}'' 使用的变体控制项 ''{0}'' 必须返回逻辑值。</entry>
    <entry key="InvalidModelName">Argument must be name of a model.</entry>
    <entry key="InvalidModelNameOrHandle">Argument must be name or handle of a model.</entry>
    <entry key="InvalidElement">索引 ''{0}'' 处的元素无效。</entry>
    <entry key="InvalidArgument">参数 {0,number,integer} 的输入无效。</entry>
    <entry key="InvalidVectorOfConfigs">Invalid vector of variant configurations.</entry>
    <entry key="VariantConfigMustBeUnique">Variant configurations must have unique names.</entry>
    <entry key="InvalidVectorOfConstraints">Invalid vector of constraints.</entry>
    <entry key="ConstraintsMustBeUnique">Constraints must have unique names.</entry>
    <entry key="InvalidVectorOfSubModelConfigs">Invalid vector of submodel configurations.</entry>
    <entry key="InvalidVectorOfControlVars">Invalid vector of control variables.</entry>
    <entry key="NonUniqueFieldValues">Values of the field ''{0}'' are not unique.</entry>
    <entry key="ArgNotVectorOfStructs">Argument must be vector of structures.</entry>
    <entry key="RequiredFieldsNotFound">Required field(s) not found in vector of structures.</entry>
    <entry key="InvalidFieldValues">Invalid value(s) of field ''{0}''.</entry>
    <entry key="InvalidControlVarValue">Invalid value of a control variable.</entry>
    <entry key="InvalidVariantControlExprValue">变体控制项表达式中使用的变量 ''{0}'' 无效。&lt;actions exclusiveFixIts="yes"&gt; &lt;action type="fixit"&gt; &lt;cmd&gt;slprivate(''variantRobustVarRefHotlink_cb'', ''loadFile'', ''{1}'', ''{0}'')&lt;/cmd&gt; &lt;txt&gt;将一个文件加载到基础工作区中。&lt;/txt&gt; &lt;/action&gt; &lt;action type="fixit"&gt; &lt;cmd&gt;slprivate(''variantRobustVarRefHotlink_cb'', ''createEntry'', ''Value'', ''{0}'', ''{1}'', ''{2}'')&lt;/cmd&gt; &lt;txt&gt;创建一个新变量。&lt;/txt&gt; &lt;/action&gt; &lt;/actions&gt; 
</entry>
    <entry key="InvalidVariantControlExprType">变体控制项表达式中使用的类型 ''{0}'' 无效。&lt;actions exclusiveFixIts="yes"&gt; &lt;action type="fixit"&gt; &lt;cmd&gt;slprivate(''variantRobustVarRefHotlink_cb'', ''loadFile'', ''{1}'', ''{0}'')&lt;/cmd&gt; &lt;txt&gt;将一个文件加载到基础工作区中。&lt;/txt&gt; &lt;/action&gt; &lt;action type="fixit"&gt; &lt;cmd&gt;slprivate(''variantRobustVarRefHotlink_cb'', ''createEntry'', ''Enum'', ''{0}'', ''{1}'', ''{2}'', ''{3}'')&lt;/cmd&gt; &lt;txt&gt;创建一个新的枚举类型。&lt;/txt&gt; &lt;/action&gt; &lt;action type="fixit"&gt; &lt;cmd&gt;slprivate(''variantRobustVarRefHotlink_cb'', ''createEntry'', ''Struct'', ''{0}'', ''{1}'', ''{2}'', ''{3}'')&lt;/cmd&gt; &lt;txt&gt;创建一个新的结构体类型。&lt;/txt&gt; &lt;/action&gt; &lt;/actions&gt; 
</entry>
    <entry key="InvalidVariableName">MATLAB 变量名称无效。</entry>
    <entry key="CreateNewDataDlg_EnumType">枚举类型:</entry>
    <entry key="ValueNotString">Value is not a character vector.</entry>
    <entry key="ConfigNotFound">Variant configuration ''{0}'' not found.</entry>
    <entry key="ConfigNotFoundinVCDOForModel">在与 ''{2}'' 关联的变体配置对象 ''{1}'' 中找不到变体配置 ''{0}''。</entry>
    <entry key="AnotherConfigExists">Variant configuration with name ''{0}'' already exists.</entry>
    <entry key="ControlVarNotFound">Control variable ''{0}'' not found in variant configuration ''{1}''.</entry>
    <entry key="ControlVarsMustBeUnique">Control variables in a variant configuration must have unique names.</entry>
    <entry key="ConstraintNotFound">Constraint ''{0}'' not found.</entry>
    <entry key="AnotherConstraintExists">Another constraint with name ''{0}'' exists.</entry>
    <entry key="SubModelEntriesMustBeUnique">Names of submodels in a variant configuration must be unique.</entry>
    <entry key="InvalidConfigForModel">Variant configuration ''{0}'' of model ''{1}'' is not valid.</entry>
    <entry key="NoEditDefaultForPassEmptyCH">Passthrough choice and Empty choice support only 'default' variant control, 'default' cannot be modified.</entry>
    <entry key="ExportFunctionInlineVariantBuildFailure">Build failed. All function-call input ports of subsystem ''{0}'' must have same variant condition. Based on the setting of the ''GeneratePreprocessorConditionals'', current variant conditions on function-call inports {1} are '{'{2}'}'.</entry>
    <entry key="VarCondPropUnsupportedVSSBlockErr_fix">已为 Variant Subsystem 模块启用模块参数 'PropagateConditions' </entry>
    <entry key="VarCondParamAccessorWSVarIncompatibleConditions">写入工作区变量 ''{1}'' 的 Parameter Writer 模块 ''{0}'' 的用法无效，因为 Parameter Writer 模块 ''{0}'' 和工作区变量 ''{1}'' 的用户模块具有不同变体条件。</entry>
    <entry key="ExpressionParseError">Operation not supported. Parsing of expression failed.\n''{0}''\n{1}</entry>
    <entry key="VarSrcEndPort">输入</entry>
    <entry key="VarSinkStartPort">输出</entry>
    <entry key="ModelFileNotFound">Unable to find model file ''{0}''. Check if the file is on the MATLAB path.</entry>
    <entry key="InlineVariantSimEventBlockNotSupportedForCC">SimEvents blocks and Stateflow charts with messages are not supported when block ''{0}'' has a propagated variant condition and is present on a path that can generate preprocessor conditions because ''Variant activation time'' is set to ''code compile''. Set the ''Variant activation time'' of all the variant blocks to ''update diagram'' or if the variant activation time is set to 'inherit from Simulink.VariantControl', set the activation time of the Simulink.VariantControl objects to ''update diagram''.</entry>
    <entry key="CausedBy">原因:</entry>
    <entry key="VariantManagerProcessingVariantBlocksInModelHierarchy">正在处理模型层次结构中的变体模块。</entry>
    <entry key="VariantManagerProcessingVariantControlExpr">正在处理变体控制项表达式。</entry>
    <entry key="VariantManagerProcessingVariablesFromVariantCondition">正在处理来自变体条件的变量。</entry>
    <entry key="VariantManagerSLDDNotFound">Unable to find data dictionary ''{1}'' used by model ''{0}''. Fix the data source for model ''{0}'' to launch the Variant Manager.</entry>
    <entry key="VariantManagerErrorWhileLaunching">Error occurred while launching Variant Manager for model ''{0}''.\n{1}</entry>
    <entry key="VariantManagerSaveVCDOTmpDirFailure">无法写入文件夹 ''{0}''。</entry>
    <entry key="VariantManagerSaveVCDOFileNameisVCDOName">输出 MATLAB 脚本名称 '' {0}'' 与变体配置对象名称 ''{0}'' 相同。请选择不同的 MATLAB 脚本名称来保存变体配置对象。</entry>
    <entry key="VariantManagerSaveVCDOFileNameisReserved">输出 MATLAB 脚本名称 ''{0}'' 无效，因为它是保留名称。请选择不同的 MATLAB 脚本名称来保存变体配置对象。</entry>
    <entry key="VariantManagerParamNameisVCDOName">配置 ''{2}'' 中类型为 ''{1}'' 的控制项变量 ''{0}'' 与变体配置对象同名。在这种情况下，不支持为变体配置对象 ''{3}'' 生成 MATLAB 脚本。请考虑重命名控制项变量 ''{0}''。</entry>
    <entry key="VariantManagerSaveVCDOUnableToValidateCorrectness">无法验证生成的 MATLAB 脚本的正确性。</entry>
    <entry key="VariantManagerSaveVCDOOutputFilePrefix">已生成 {0}</entry>
    <entry key="VariantManagerImportVCDOSuccess">已从 {1} 导入变体配置对象 ''{0}''。</entry>
    <entry key="VariantManagerImportVCDOMissingDefinition">在 {1} 中找不到变体配置对象 ''{0}''。</entry>
    <entry key="VariantManagerImportVCDOMissingDefinitions">在 {0} 中找不到变体配置对象。</entry>
    <entry key="VariantManagerImportVCDOSyntaxErrors">无法从 {0} 导入变体配置对象。\n{1}</entry>
    <entry key="GetCtrlVarsUnexpectedInput">输入参数 ''{0}'' 不是有效的模型或模块路径。</entry>
    <entry key="InputToConvertToVariantMustBeScalar">Invalid input argument specified for Simulink.VariantUtils.convertToVariantSubsystem API. The argument must be a scalar.</entry>
    <entry key="ConvertToVariantWithIRTNotSupported">Unable to convert Model block ''{0}'' to a Variant Subsystem because this Model block contains an Initialize, Reinitialize, Reset, Terminate, or Periodic event port.</entry>
    <entry key="ConvertToVariantScheduledWithScheduleEditorNotSupported">Unable to convert Model block ''{0}'' to a Variant Subsystem because this Model block is scheduled with the Schedule Editor.</entry>
    <entry key="ConvertToVariantWithInvalidNameNotSupported">Converting a Model block ''{0}'' with invalid Model name parameter ''{1}'' to a Variant Subsystem is not supported. Model name must be a valid MATLAB identifier.</entry>
    <entry key="C2VInconsistentInterface">The model block ''{0}'' could not be converted to Variant Subsystem because it has inconsistent interface with the referred model. Save the referred model and try converting to Variant Subsystem again.</entry>
    <entry key="InvalidModelNameForVariantLegend"> First argument for the method variantLegend must be a non-empty character array or string</entry>
    <entry key="InvalidActionForVariantLegend"> Second argument for the method variantLegend must either be 'open','print','showCodeConditions' or 'close'</entry>
    <entry key="ModelNotLoadedForVariantLegend"> Model ''{0}'' is not loaded</entry>
    <entry key="InvalidNumberOfInputs"> Invalid number of input arguments specified</entry>
    <entry key="LegendNotOpen">Open Variant Condition legend before invoking action ''{0}''</entry>
    <entry key="InvalidValuePairForVariantLegend"> Input for the 'value' argument in method variantLegend must either be 'on' or 'off'</entry>
    <entry key="ConvertToVariantForModelBlockWithNoReferredModelNotSupported">The model ''{0}'' referenced by Model block ''{1}'' is not found. Converting this Model block to a Variant Subsystem is not supported.</entry>
    <entry key="ConvertToVariantForImplicitLibraryNotAllowed">Converting block ''{0}'' with implicit library link to a Variant Subsystem is not supported.</entry>
    <entry key="ConvertToVariantForLibraryModelVarNotAllowed">Converting Model Variants block ''{0}'' with a library link to a Variant Subsystem is not supported.</entry>
    <entry key="OutputWhenUnconnected_fix">对输出端口模块执行命令 'set_param(''{0}'','OutputWhenUnconnected','off')'。</entry>
    <entry key="ConstBlockDoesNotSupportVirtualBus">Virtual bus is not supported when Variant Subsystem block ''{0}'' has an Outport block with "Specify output when source is unconnected" enabled. To fix this error, make all inputs to ''{1}'' as non-virtual.</entry>
    <entry key="SubsystemToVariantConvertFail">Block ''{0}'' has control ports. Converting Subsystem or Model block with control ports to a Variant Subsystem is not supported.</entry>
    <entry key="SubsystemToVSSConvertFail">Converting Subsystem or Model block with only data, enable, trigger and reset ports to a Variant Subsystem is allowed.</entry>
    <entry key="ReferredModelHasControlPorts">The Variant choice ''{0}'' referred by block ''{1}'' has control ports. Converting Subsystem or Model block with control ports to a Variant Subsystem is not supported.</entry>
    <entry key="ConvertingLockedLibraryBlockToVSSFail">Unable to convert block ''{0}'' to Variant Subsystem because this block is in a locked library. Unlock this library and try again.</entry>
    <entry key="VariantControlChangedWithoutStartupAndFastRestartEnabled">Changing the active variant of Variant Block ''{0}'' after the model is compiled and the ''Variant activation time'' is set to a value other than ''startup'' is not supported.</entry>
    <entry key="VSSContChoicesDiffName">Control port block names of choices in Variant Subsystems must be the same. Variant Subsystem ''{0}'' has conflicting control port blocks with name ''{1}'' in choice ''{2}'' and ''{3}'' in choice ''{4}''.</entry>
    <entry key="VariantParamOnMdlBlockErr">Setting 'Variant' parameter for Model block ''{0}'' is not supported. Please use Variant Subsystem blocks with a set of Model block as choices to achieve the same functionality.</entry>
    <entry key="SemanticErrorInConditionExpression">在模块 ''{0}'' 中发现无效的变体控制项表达式 ''{1}''。</entry>
    <entry key="SemanticErrorInConditionExpressionNoBlock">变体控制项表达式 ''{0}'' 无效。 </entry>
    <entry key="SimCodegenKeywordInVariantObjectNotAllowed">Simulink.VariantExpression 对象条件 ''{0}'' 包含不允许的(sim)或(codegen)变体关键字。</entry>
    <entry key="DefaultKeywordInVariantObjectNotAllowed">Simulink.VariantExpression 对象条件 ''{0}'' 包含不允许的(default)变体关键字。</entry>
    <entry key="GeneratingReport">正在生成详细摘要</entry>
    <entry key="VariantManagerClashingVariables"> 检测到变量 ''{0}'' 与变体控制项表中的其他变量发生冲突。请修改变体控制项表中的变量以解决冲突。</entry>
    <entry key="VATypeTooltip">为变体模块指定变体激活时间。变体激活时间可以是更新图、更新图时分析所有选择项、代码编译、启动或从 Simulink.VariantControl 继承。</entry>
    <entry key="Exp_UpdateDiagram_desc">活动选择项由计算结果为 true 的变体控制项表达式确定。例如，V==EngineType.Small 或 V==1。活动选择项是在传播信号属性之前选择的。没有属性会传播到非活动选择项，在传播信号属性之前会删除非活动选择项。</entry>
    <entry key="Exp_UpdateDiagramAAC_desc">活动选择项由计算结果为 true 的变体控制项表达式确定。例如，V==EngineType.Small 或 V==1。活动选择项是在传播信号属性后选择的。信号属性会传播到活动和非活动选择项，以确保这些选择项具有相同的属性。非活动选择项将在更新图结束时删除。</entry>
    <entry key="Exp_CodeCompileTime_desc">活动选择项由计算结果为 true 的变体控制项表达式确定。例如，V==EngineType.Small 或 V==1。所有选择项都经过分析，且必须具有相同的信号属性。对于仿真，非活动选择项在更新图结束时但在模型启动前删除。对于 Embedded Coder，C 代码包含 #if 语句，因此在编译生成代码时会删除非活动选择项。</entry>
    <entry key="Exp_startup_desc">活动选择项由计算结果为 true 的变体控制项表达式确定。例如，V==1。所有选择项都经过分析，并在模型启动时可用。对于仿真，当模型在启用 '快速重启' 的情况下初始化时，可以更改活动选择项。对于代码生成，C 代码包含常规 if 语句。</entry>
    <entry key="Exp_runtime_desc">活动选择项由计算结果为 true 的变体控制项表达式确定。例如，V==1。所有选择项都经过分析，并在模型启动时可用。通过使用 Parameter Writer 模块，可以在仿真或执行生成的代码期间更改活动选择项。对于代码生成，C 代码包含常规 if 语句。</entry>
    <entry key="Exp_inherit_desc">模块的活动选择项和变体激活时间分别由变体控制项表达式中的 Simulink.VariantControl 对象的 '值' 和 '激活时间' 字段确定。</entry>
    <entry key="simcodegen_UpdateDiagram_desc">必须有两个选择项，&lt;b&gt;"(sim)"&lt;/b&gt; 和 &lt;b&gt;"(codegen)"&lt;/b&gt;。活动选择项 &lt;b&gt;"(sim)"&lt;/b&gt; (仿真时)或 &lt;b&gt;"(codegen)"&lt;/b&gt; (生成代码时)是在传播信号属性之前选择的。没有属性会传播到非活动选择项，在传播信号属性之前会删除非活动选择项。</entry>
    <entry key="simcodegen_UpdateDiagramAAC_desc">必须有两个选择项，&lt;b&gt;"(sim)"&lt;/b&gt; 和 &lt;b&gt;"(codegen)"&lt;/b&gt;。活动选择项 &lt;b&gt;"(sim)"&lt;/b&gt; (仿真时)或 &lt;b&gt;"(codegen)"&lt;/b&gt; (生成代码时)是在传播信号属性之后选择的。信号属性会传播到活动和非活动选择项，以确保这些选择项具有相同的属性(所有选择项都经过分析)。</entry>
    <entry key="Label_desc">变体控制项是一个字符串，在传播信号属性之前会处理指定的活动选择项。没有属性会传播到非活动选择项，在传播信号属性之前会删除非活动选择项。</entry>
    <entry key="ConnectorBlk_VariantExpr_desc">活动选择项由计算结果为 true 的变体控制项表达式确定。例如，V==EngineType.Small 或 V==1。</entry>
    <entry key="MRVTestHarnessMoveWarn">Test harnesses associated with block ''{0}'' has been deleted and is associated with its choice blocks.</entry>
    <entry key="VCTypeTooltip">为变体模块指定变体控制项模式。变体控制项模式可以是表达式、标签或 sim/codegen 切换。</entry>
    <entry key="LabelComboBox">标签模式活动选择项:</entry>
    <entry key="LabelComboBoxToolTip">使用指定的变体，而不是通过变体控制项选择活动变体</entry>
    <entry key="LabelMode_VariantControlColumnName">变体控制项标签</entry>
    <entry key="ExpressionMode_VariantControlColumnName">变体控制项表达式</entry>
    <entry key="SimCodegenMode_VariantControlColumnName">变体控制项开关</entry>
    <entry key="VariantWithICProp">Outport 模块 ''{0}'' 通过 ''{1}'' 变体模块连接，并从其源继承初始条件。请在通过 ''{1}'' 变体模块连接时显式设置初始条件。</entry>
    <entry key="StartupVariantWithICProp">Outport block ''{0}'' is connected to startup variant blocks and is inheriting Initial Condition from its sources. Set the Initial Condition of the block ''{0}'' explicitly when connected through startup variant blocks.</entry>
    <entry key="InvalidVSSMdlChoicesMergedRates">Variant Subsystem 的选择项 ''{1}'' 的输出端口 {0,number,integer} 由多个函数驱动。其输出端口由多个函数驱动的 Model 模块无法用作 Variant Subsystem 选择项。</entry>
    <entry key="InvalidVSSMdlChoicesOuts">The Variant Subsystem ''{0}'' choices driving Outport block ''{1}'' of Variant Subsystem have different function-call initiators. Variant Subsystems with the option "Analyze all choices during update diagram and generate preprocessor conditionals" selected and driven by multiple function-calls driving same Outport block are not supported.</entry>
    <entry key="UAEmptyVarObjCheckTitle">标识具有空条件的使用 variantexpression 对象的变体模块</entry>
    <entry key="UAEmptyVarObjCheckTitleTips">分析模型以标识使用含空条件的 variantexpression 对象的变体模块</entry>
    <entry key="UAEmptyVarObjCheckName">标识具有空条件的使用 variantexpression 对象的变体模块</entry>
    <entry key="UAEmptyVarObjCheckDescription">检查模型中的变体模块是否具有含非空条件的 variantexpression 对象</entry>
    <entry key="UAEmptyVarObjPassMessage">模型或库中没有任何变体模块具有含空条件的 variantexpression 对象</entry>
    <entry key="UAEmptyVarObjFailMessage">模型或库中的下列模块具有含空条件的 variantexpression 对象</entry>
    <entry key="UAEmptyVarObjRecommendedAction">请在 variantexpression 对象中使用有效条件。例如，simVar = Simulink.VariantExpression(''a==1'')，其中 simVar 是 Simulink VariantExpression 对象</entry>
    <entry key="UAEmptyVarObjTableTitle">VariantExpression 对象-模块使用信息</entry>
    <entry key="UAEmptyVarObjTableColumnOneHeading">VariantExpression 对象</entry>
    <entry key="UAEmptyVarObjTableColumnTwoHeading">模块名称</entry>
    <entry key="ConnectorBlkTypeTooltip">指定连接器模块类型。变体连接器类型可以是叶模块、主模块或非主模块。</entry>
    <entry key="ConnectorBlkTagTooltip"> 将主模块和非主模块与指定的标记相关联。 </entry>
    <entry key="ConnectorBlkInvalidVC">为 {0} 模块 ''{1}'' 指定的变体控制项无效。</entry>
    <entry key="ConnectorType"> 连接器类型</entry>
    <entry key="PRIMARY_CONNECTOR_TYPE_CB"> 主模块</entry>
    <entry key="NONPRIMARY_CONNECTOR_TYPE_CB"> 非主模块</entry>
    <entry key="LEAF_CONNECTOR_TYPE_CB"> 叶模块</entry>
    <entry key="ConnectorTag"> 连接器标记</entry>
    <entry key="VariantPort">条件 </entry>
    <entry key="AssociatedRegionIsCrossConnected"> Incorrect modeling pattern found. Bounded region formed by primary {0} ''{1}'' is unbounded.</entry>
    <entry key="NotAssociatedNonPrimaryBlk"> Nonprimary {0} ''{1}'' is not associated with any primary Variant Connector block. Add primary Variant Connector block with same connector tag in model hierarchy ''{2}'' to make it a valid bounded region. </entry>
    <entry key="NotAssociatedNonPrimaryBlkButHasPrimaryBlk"> Incorrect modeling pattern found. Nonprimary {0} ''{1}'' is not part of any bounded region. The condition port of nonprimary ''{1}'' block is not connected with condition port of primary ''{2}'' block. </entry>
    <entry key="AssociationBetNonConditionedPort"> 发现不正确的建模模式。非主 {0} ''{1}'' 的条件端口未与主 ''{2}'' 模块的条件端口连接。请连接主模块和非主模块的条件端口，使其成为有效的有界区域。</entry>
    <entry key="VariantControlCouldNotBeSetOnNonPrimaryBlk"> 在非主 {0} ''{1}'' 上设置变体控制项是不正确的。在模型编译期间，非主模块从关联的主模块继承变体控制项。 </entry>
    <entry key="NotUniqueAssociatedRegionConnectorTag"> Bounded regions formed by primary {0} ''{1}'' and primary {2} ''{3}'' have same connector tag '{'{4}'}' in model hierarchy ''{5}''. Connector tag used by primary and non-primary blocks forming a bounded region must be unique in a model hierarchy.</entry>
    <entry key="OverlappingAssociatedRegion">  Incorrect modeling pattern found. Bounded region formed by primary {0} ''{1}'' block is overlapping with bounded region formed by {2} {3} ''{4}'' block. </entry>
    <entry key="StandaloneBlkInAssociatedRegion"> Incorrect modeling pattern found. Leaf {0} ''{1}'' block is inside bounded region formed by primary {2} ''{3}'' block.</entry>
    <entry key="FlexibleVSSInAssociatedRegion"> Incorrect modeling pattern found. Variant Subsystem ''{0}'' block with flexible I/O is inside bounded region formed by primary {1} ''{2}'' block.</entry>
    <entry key="PrimaryDoesNotHaveAssociatedNonPrimary"> 主 {0} ''{1}'' 模块未与任何非主 Variant Connector 模块相关联。在模型层次结构 ''{2}'' 中添加具有相同连接器标记的非主 Variant Connector 模块以使其成为有效的有界区域。</entry>
    <entry key="ConnectorBlkInLoop">Block diagram ''{0}'' contains leaf {1} ''{2}'' block in loop. Only primary and nonprimary Variant Connector blocks are allowed within a model loop. </entry>
    <entry key="ConnectorBlkMismatchVariantControls">{1} 模块 ''{2}'' 中的 {0} 端口数量与变体控制项中定义的元素数不匹配。</entry>
    <entry key="ConnectorBlkWithBusLine"> 不支持将 Variant Connector 模块 ''{0}'' 连接到 Simscape 总线。请将该模块连接到连接线。</entry>
    <entry key="constrainBoundedRegionInOneHierarchy"> 发现不正确的建模模式。由主 {0} ''{1}'' 构成的有界区域中的所有模块都必须在同一模型层次结构中。</entry>
    <entry key="ParallelAssociatedRegion">  Incorrect modeling pattern found. The variant condition on all blocks within the bounded regions is not the same because the bounded regions formed by primary {0} ''{1}'' and primary {2} ''{3}'' contain each other. </entry>
    <entry key="BadNegation"> Internal error in variant condition handling</entry>
    <entry key="VSSLabelRemovedOrUpdated"> Variant Subsystem 模块 ''{0}'' 的活动选择项已删除或标签已更新。请选择另一个活动选择项。 </entry>
    <entry key="IVLabelRemovedOrUpdated"> The active port of the inline variant block ''{0}'' has been deleted or the label has been updated. Select another active port. </entry>
    <entry key="NewPortsErrorInCompilation">Input and/or output ports of the below blocks have changed compared to what was saved in the model. Compile or simulate the model again. Also, save this model to ensure that on the next load it does not throw this error during compilation.</entry>
    <entry key="InputPortChangeErrorInCompilation">Input ports of ''{0}'' are changed.</entry>
    <entry key="OutputPortChangeErrorInCompilation">Output ports of ''{0}'' are changed.</entry>
    <entry key="ConditionsFromDiffWks">Variant condition {0} on the block ''{1}'' either contains
variables originating from different workspaces, including the Simulink.SimulationInput workspaces or it contains variables from mask or model workspace
used inside a user defined or a built-in MATLAB function.This is not a supported workflow.</entry>
    <entry key="MultipleConditionsFromDiffWks">模块 ''{0}'' 的变体控制项变量必须在同一工作区中定义。</entry>
    <entry key="ConditionsNotInGlobalWithPropagate">Variant condition on block ''{0}'' originates from either mask or model workspace and has 'Propagate conditions outside of Variant Subsystem' set to 'on'. Variant conditions originating from mask or model workspace is not supported.</entry>
    <entry key="MaskWksUsedForVariantsNotInSupportedVAT">模块 ''{0}'' 上的变体条件源于封装工作区或模型工作区。不支持 '变体激活时间' 设置为 '代码编译' 的模块。</entry>
    <entry key="SSRefDDUsedForVariantsNotInSupportedVAT">'Variant activation time' set as 'code compile' is not supported for block ''{0}'' because its variant conditions originate from a subsystem reference data dictionary.</entry>
    <entry key="ModelArgUsedAsVariantControl">Variant control variable ''{0}'' on the block ''{1}'' originates from a model argument ''{2}'' in the model workspace. Model arguments can be used to change the active variants only when 'Variant activation time' is set to 'startup' or 'runtime'.</entry>
    <entry key="LooserVariantConditionOfSignalSourceThanDestinationWarn">
         
         Block ''{0}'' with propagated variant condition {1} has a looser condition than block ''{2}'' with propagated variant condition {3}. To fix this issue, modify the model so that the source and destination blocks have the same propagated variant condition.
         &lt;actions exclusiveFixIts="no"&gt;
             &lt;action type="suppression"&gt; &lt;/action&gt;
         &lt;/actions&gt;
         
     </entry>
    <entry key="LooserVariantConditionOfSignalSourceThanDestinationErr">Block ''{0}'' with propagated variant condition {1} has a looser condition than block ''{2}'' with propagated variant condition {3}. To fix this issue, modify the model so that the source and destination blocks have the same propagated variant condition.
     </entry>
    <entry key="UnconditionalSignalSourceUsedWithVariantConditionWarn">
         
         Unconditional block ''{0}'' consumed by block ''{1}'' with  propagated variant condition {2}. To fix this issue, modify the model so that the source and destination blocks have the same propagated variant condition.
         &lt;actions exclusiveFixIts="no"&gt;
             &lt;action type="suppression"&gt; &lt;/action&gt;
         &lt;/actions&gt;
         
     </entry>
    <entry key="UnconditionalSignalSourceUsedWithVariantConditionErr"> Unconditional block ''{0}'' consumed by block ''{1}'' with  propagated variant condition {2}. To fix this issue, modify the model so that the source and destination blocks have the same propagated variant condition.
     </entry>
    <entry key="VarLenLimitFromNonGlobalWks">模块 ''{1}'' 上的变体控制项变量 {0} 的长度必须小于 40，因为该变量是在封装或模型工作区中定义的。</entry>
    <entry key="ConditionPropagatingOutsideScopeofMaskWks">不支持将变体条件 {0} 传播到其封装工作区作用域之外，因为该条件源于模块 ''{1}'' 的封装工作区 </entry>
    <entry key="ConditionPropagatingOutsideScopeofModelWks">不支持将变体条件 {0} 传播到其模型工作区作用域之外，因为该条件源于模块 ''{1}'' 的模型工作区。</entry>
    <entry key="ConditionOnDSMIsFromMaskNotInHier">模块 ''{1}'' 上不支持将变体条件 {0} 传播到其封装工作区作用域之外，因为该条件源于模块 ''{2}'' 的封装工作区。</entry>
    <entry key="ConditionPropagatingOutsideScopeofSSRef">变体条件 {0} 源于子系统引用数据字典。不支持将此条件传播到子系统引用 "{1}" 的作用域之外。</entry>
    <entry key="DSMConditionsMismatchWithDSRorDSWBlock">对于 Data Store Memory 模块和 Data Store Read 或 Data Store Write 模块 ''{0}''，代码生成不支持组合计算的代码生成变体控制项表达式，因为 Data Store Memory 模块的计算的代码生成变体控制项表达式始终为 false。 </entry>
    <entry key="InactiveRefDSMBlk"> 无法通过模型引用层次结构传播变体条件，因为 Reference Data Store Memory 模块 "{0}" 的变体条件的计算结果始终为 false。</entry>
    <entry key="RefDSMBlkInsideStateChart"> 不支持将变体条件从 Reference Data Store Memory 模块 "{0}" 传播到包含它的 Stateflow 模块 "{1}"。</entry>
    <entry key="ConditionFromMaskorModelOnSimFcn">不支持在模块 "{1}" 上传播变体条件 "{0}"，因为条件变量是在封装或模型工作区中定义的。</entry>
    <entry key="InheritedConditionFromMaskorModelOnSimFcn">模块 "{0}" 上设置为 '(inherit)' 的变体条件表达式不支持从封装工作区或模型工作区继承变体条件。</entry>
    <entry key="MixOfCCandRTVAT">传播至模块 ''{0}'' 的变体条件同时包含 ''代码编译'' 和 ''运行时'' 变体激活时间。</entry>
    <entry key="MixOfSTandRTVAT">传播至模块 ''{0}'' 的变体条件同时包含 ''启动'' 和 ''运行时'' 变体激活时间。</entry>
    <entry key="SameVCVInRTAndOtherVarBlks">''变体激活时间'' 设置为 ''运行时'' 的 Variant 模块 ''{1}'' 中使用的变体控制项变量 ''{0}'' 也用于未配置 ''运行时'' 变体激活时间的另一个 Variant 模块 ''{2}''。请修改 ''{1}'' 或 ''{2}'' 中的变体控制项变量，或在两个模块中设置相同的变体激活时间。确保变体控制项变量 ''{0}'' 源于同一工作区。</entry>
    <entry key="ConfigurableSubsystemWarning"> 
      此模型包含一个或多个必须转换为可变子系统的 Configurable Subsystem 模块。可变子系统提供更多功能。在以后的版本中将取消对可配置子系统的支持。\n &lt;actions exclusiveFixIts="yes"&gt; &lt;action type="suggestion"&gt; &lt;cmd&gt;upgradeadvisor(''{0}'')&lt;/cmd&gt; &lt;txt&gt;运行升级顾问以将可配置子系统转换为可变子系统。&lt;/txt&gt; &lt;/action&gt; &lt;/actions&gt; 
       
    </entry>
    <entry key="ConfigurableSubsystemError"> 
      Configurable Subsystem 模块 ''{0}'' 必须转换为可变子系统。可变子系统提供更多功能。在以后的版本中将取消对可配置子系统的支持。要将此错误转换为警告，请使用: set_param(''{1}'','ConfigurableSubsystemUsage','warning')。&lt;actions exclusiveFixIts="yes"&gt; &lt;action type="suggestion"&gt; &lt;cmd&gt;upgradeadvisor(''{1}'')&lt;/cmd&gt; &lt;txt&gt;运行升级顾问以将可配置子系统转换为可变子系统。&lt;/txt&gt; &lt;/action&gt; &lt;/actions&gt; 
       
    </entry>
    <entry key="CSSdeprecationError">
  Configurable Subsystem 模块 ''{0}'' 必须转换为可变子系统。可变子系统提供更多功能。已不再支持可配置子系统。&lt;actions exclusiveFixIts="yes"&gt; &lt;action type="suggestion"&gt; &lt;cmd&gt;upgradeadvisor(''{1}'')&lt;/cmd&gt; &lt;txt&gt;运行升级顾问以将可配置子系统转换为可变子系统。&lt;/txt&gt; &lt;/action&gt; &lt;/actions&gt;
  
</entry>
    <entry key="InvalidCSSDiagnosticType">ConfigurableSubsystemUsage 的输入参数无效。输入参数 ''{0}'' 不是有效的诊断类型。</entry>
    <entry key="InvalidBlockModToVAS">Variant Assembly 模式中的 Variant Subsystem 模块 ''{0}'' 仅支持添加或删除输入端口、输出端口、连接端口或控制端口。</entry>
    <entry key="VASChoiceInvalidSetParam">不支持更改模块 ''{1}'' 的参数 ''{0}''，该模块是 Variant Assembly 模式下可变子系统的模块选择项。</entry>
    <entry key="VASChoiceAndPortSameName">由选择项选择返回的这些文件名与 Variant Assembly Subsystem 模块的端口名称之一匹配: {0} &lt;actions exclusiveFixIts="yes"&gt; &lt;action type="suggestion"&gt; &lt;txt&gt;重命名端口模块，或者使用不同文件名作为选择项&lt;/txt&gt; &lt;/action&gt; &lt;/actions&gt;

</entry>
    <entry key="ChangeVASChoicesAfterCompile">当使用快速重启初始化模型或模型正在仿真时，不支持更改 Variant Assembly Subsystem 模块 ''{0}'' 的选择项。</entry>
    <entry key="VASErrorInVarSelEval">无法验证 Variant Assembly Subsystem 模块 ''{1}'' 的变体选择项设定表达式 ''{0}''。</entry>
    <entry key="VASFilesMustBeInPath">The following files matched by file name pattern(s) specified in 'Variant choices specifier' must be on MATLAB path: {0}.</entry>
    <entry key="VASChoicesMustHaveUniqueFileNames">Following files matched by file name pattern(s) specified in 'Variant choices specifier' appear in multiple folders: {0}.</entry>
    <entry key="EmptyVarChocSpec">Variant choices specifier value must be non-empty. Use the expression '''{}'' to remove all the choices from the Variant Subsystem block.</entry>
    <entry key="VASShadowedfile">文件 ''{0}'' 被路径 ''{1}'' 上的同名文件遮蔽。</entry>
    <entry key="VASUnableToValidateEnum">Variant Assembly Subsystem 模块 ''{1}'' 中 ''变体选择项枚举'' 值 ''{0}'' 的验证失败。</entry>
    <entry key="VASEnumMemberNotModelSubsys">这些枚举成员不是 MATLAB 路径上的模型文件名或子系统文件名: {0}。</entry>
    <entry key="VASInvalidEnumName">枚举类 ''{0}'' 无效。枚举类名称必须以字母开头，可以包含字母、数字和下划线。</entry>
    <entry key="VASUndefEnumName">枚举类 ''{0}'' 未定义。</entry>
    <entry key="VASInvalidVCVName">Variant Assembly Subsystem 模块 ''{0}'' 中的变体控制项变量 ''{1}'' 无效。变体控制项变量必须为有效的 MATLAB 变量或有效的 MATLAB 结构体。</entry>
    <entry key="VACOnlyInterfacesAllowedToAdd">Variant Component ''{0}'' is in variant assembly mode which only allows addition or removal of inports, outports and physical connection ports in the component canvas.</entry>
    <entry key="LinkToNodeNotSuppForVACChoice">Linking component to a model is not supported when it is a choice of a Variant Assembly Component.</entry>
    <entry key="InlineCompForVACChoice">Inlining a component is not supported when it is a choice of a Variant Assembly Component.</entry>
    <entry key="UnableToConvert">无法将 Variant Subsystem 模块 ''{0}'' 转换为 Variant Assembly Subsystem 模块。</entry>
    <entry key="VSSBlkLinkedToLib">Variant Subsystem 模块链接到库。</entry>
    <entry key="VSSInsideLockedLib">Variant Subsystem 模块属于一个锁定的(只读)库。</entry>
    <entry key="VCMMustBeLabel">要将 Variant Subsystem 模块 ''{0}'' 转换为 Variant Assembly Subsystem 模块，请将 ''变体控制项模式'' 设置为 ''标签''。</entry>
    <entry key="VCMMustBeLabelOrExpression">要将 Variant Subsystem 模块 ''{0}'' 转换为 Variant Assembly Subsystem 模块，请将 ''变体控制项模式'' 设置为 ''标签'' 或 ''表达式''。</entry>
    <entry key="CannotConvertSSToSSRef">无法将以下子系统模块选择项列表转换为 Subsystem Reference 模块: {0}。</entry>
    <entry key="MultiChoiceLinkedToSameFile">下面列出的多个 {0} 选择项模块链接到同一个文件名 ''{1}'': {2}。</entry>
    <entry key="ModelWithSubsysBlkNameLoaded">无法将子系统模块选择项 ''{0}'' 转换为文件名为 ''{1}'' 的 Subsystem Reference 模块，因为 MATLAB 路径中存在与在 ''{2}'' 中同名的已加载模型/子系统文件。请将模块选择项 ''{0}'' 的模块名称修改为不同名称。</entry>
    <entry key="InvalidFirstArg">Argument must be a Variant Subsystem block path specified as a character vector, a string scalar, or a Variant Subsystem block handle specified as a numeric scalar.</entry>
    <entry key="SSWithSameModifiedName">从子系统选择项 ''{1}'' 生成的子系统文件名必须唯一。请更改子系统选择项的名称，以便仅从一个子系统选择项生成的文件的名称为 ''{0}''。</entry>
    <entry key="UnappliedChanges">Variant Subsystem block has unapplied changes. Click Apply to proceed with conversion.</entry>
    <entry key="FolderPathUnused">Simulink.VariantUtils.convertToVariantAssemblySubsystem 中参数 ''SubsystemFilesFolderPath'' 的值 ''{0}'' 未使用，因为 Variant Subsystem 模块 ''{1}'' 不包含任何 Subsystem 模块。</entry>
    <entry key="FolderPathReq">必须在参数 ''SubsystemFilesFolderPath'' 中指定新子系统文件的相对或绝对文件夹路径，因为 Variant Subsystem 模块 ''{0}'' 有至少一个子系统选择项。</entry>
    <entry key="PropValUnusedForLabel">Simulink.VariantUtils.convertToVariantAssemblySubsystem 中的参数 ''{1}'' 中的值 ''{0}'' 未使用，因为 Variant Subsystem 模块 ''{2}'' 的 ''变体控制项模式'' 设置为 ''标签''。</entry>
    <entry key="WarnDeprecatedAPI">使用了在以后的版本中将要弃用的语法调用 Simulink.VariantUtils.convertToVariantAssemblySubsystem。请考虑使用以下语法以 Name=Value 形式指定参数对组: Simulink.VariantUtils.convertToVariantAssemblySubsystem(vssBlockPathOrHandle, SubsystemFilesFolderPath=subsystemFilesFolderPath)。</entry>
    <entry key="WarnVariantManagerDeprecatedAPI">Simulink.VariantManager.{0} 在以后的版本中将会删除。请改用 Simulink.VariantUtils.{1}。</entry>
    <entry key="MixPVPairWithPos">当使用两个位置输入时，不支持额外的名称-值参数。在以后的版本中，不再支持此语法。请仅使用一个位置输入作为模块路径或句柄以及附加的名称-值对组输入。</entry>
    <entry key="PropValReqForExp">当 Variant Subsystem 模块 ''{1}'' 的 ''变体控制项模式'' 设置为 ''表达式'' 时，必须指定参数 ''{0}'' 的值。</entry>
    <entry key="InvalidVCVNameValue">Value must be a valid variable name, or a valid structure field name.</entry>
    <entry key="InvalidEnumFilePathValue">Value must be a relative or an absolute path to a MATLAB file to be created.</entry>
    <entry key="InvalidVCVNameDialog">变体控制项变量值必须为有效的变量名称或有效的结构体字段名称。</entry>
    <entry key="InvalidEnumClassNameDialog">枚举类名称必须为有效的 MATLAB 类名称。</entry>
    <entry key="EnumClassExistsInMemory">由 Simulink.defineIntEnumType 定义的枚举类 ''{0}'' 已存在。请为该枚举类指定不同名称，或从内存中删除 ''{0}''。</entry>
    <entry key="UnableToWriteEnumFile">无法写入枚举类文件 ''{0}''。请检查写入权限。</entry>
    <entry key="UnableToCloseEnumFile">无法关闭枚举类文件 ''{0}''。</entry>
    <entry key="ConvertToVCNotSuppForVACChoice">Conversion to Variant Component is not supported for a choice of a Variant Assembly Component.</entry>
    <entry key="NotSuppAPIForArch">To convert a Variant Component block to a Variant Assembly Component block, use systemcomposer.arch.VariantComponent.makeVariantAssembly.</entry>
    <entry key="OnlyVCInArchMdlSupp">Conversion to Variant Assembly Component block is only supported for Variant Component blocks in architecture models.</entry>
    <entry key="VCInVAMode">Variant Component 模块 ''{0}'' 已在 Variant Assembly 模式下运行。</entry>
    <entry key="MultipleVariantStartBlocksDetected">Variant Start 模块 ''{0}'' 和 ''{1}'' 具有相同的变体开始和结束标记。对于给定层次结构中的一对 Variant Start 和 Variant End 模块，变体开始和结束标记必须唯一。</entry>
    <entry key="MultipleVariantEndBlocksDetected">Variant End 模块 ''{0}'' 和 ''{1}'' 具有相同的变体开始和结束标记。对于给定层次结构中的一对 Variant Start 和 Variant End 模块，变体开始和结束标记必须唯一。</entry>
    <entry key="VariantStartBlockMissing">Variant End 模块 ''{0}'' 在当前层次结构中没有与之匹配的 Variant Start 模块。</entry>
    <entry key="VariantEndBlockMissing">Variant Start 模块 ''{0}'' 在当前层次结构中没有与之匹配的 Variant End 模块。</entry>
    <entry key="UnsupportedBlockPresentBetweenVariantStartAndVariantEnd">不支持位于 Variant Start 模块 ''{1}'' 和 Variant End 模块 ''{2}'' 的有界区域中的模块 ''{0}''。</entry>
    <entry key="UnsupportedBEPInportBlockPresentBetweenVariantStartAndVariantEnd">不支持从 Variant Start 模块 ''{2}'' 到模块 ''{1}'' 的&lt;sldiag objui="inport" objparam="{0,number,integer}" objname="{1}"&gt;输入端口 ''{0,number,integer}''&lt;/sldiag&gt; 的信号，因为该信号对应于 Variant Start 和 Variant End 模块路径中的总线端口。请删除有界区域中存在的元素。</entry>
    <entry key="UnsupportedBEPOutportBlockPresentBetweenVariantStartAndVariantEnd">不支持从 Variant Start 模块 ''{2}'' 到模块 ''{1}'' 的&lt;sldiag objui="outport" objparam="{0,number,integer}" objname="{1}"&gt;输出端口 ''{0,number,integer}''&lt;/sldiag&gt; 的信号，因为该信号对应于 Variant Start 和 Variant End 模块路径中的总线端口。请删除有界区域中存在的元素。</entry>
    <entry key="NotReachingVariantEnd">找不到从模块 ''{1}'' 的输出端口 ''{0, number, integer}'' 到 Variant End 模块 ''{2}'' 的对应端口的路径。</entry>
    <entry key="SignalReachingInputPortOfMainVariantStart">从输出端口 ''{0,number,integer}'' 到 Variant Start 模块 ''{1}'' 的输入端口的信号可能导致条件不在有界区域内。</entry>
    <entry key="SignalReachingWrongInputPortOfVariantEnd">来自输出端口 ''{0,number,integer}'' 的信号不能到达 Variant End 模块 ''{2}'' 的输入端口 ''{1,number,integer}''，因为信号可能会分支。</entry>
    <entry key="SignalConnectedToWrongOutputPortVariantStart">来自输出端口 ''{0,number,integer}'' 的信号不能连接到 Variant Start 模块 ''{2}'' 的输出端口 ''{1,number,integer}''，因为信号可能会分支。</entry>
    <entry key="SignalReachingOutputPortOfVariantEnd">来自输出端口 ''{0,number,integer}'' 的信号不能到达 Variant End 模块 ''{1}'' 的输出端口，因为信号可能会分支。</entry>
    <entry key="VariantStartLoopDetected">源自 Variant Start 模块 ''{0}'' 的信号再次回到同一模块。</entry>
    <entry key="DirectConnectionBetweenVariantStartEndMissing">找不到从模块 ''{1}'' 的输出端口 ''{0, number, integer}'' 到配对的 Variant End 模块 ''{2}'' 的直接连接。</entry>
    <entry key="BlocksWithConnectionPortNotSupported">Variant Start 和 Variant End 模块不支持具有连接端口的模块 ''{0}''。</entry>
    <entry key="BoundedRegionDoesNotEncompass">Variant Start 模块 ''{0}'' 创建的有界区域未包含在 Variant Start 模块 ''{1}'' 创建的有界区域之内。</entry>
    <entry key="VarFcnCallPortCannotBeDrivenByMultiRateFcnCaller">{1} ''{2}'' 的函数调用输入端口 {0,number,integer} 不能由多速率函数调用发起方驱动。</entry>
    <entry key="InvalidVariantStartEndTag">''{0}'' 中指定的变体开始和结束标记名称不是有效的 MATLAB 标识符。有效的标识符以字母开头，不包含空格或特殊字符，最长为 {1,number,integer} 个字符。</entry>
    <entry key="UnexpectedBlockDetected">在 Simulink 编译中发现意外的模块 ''{0}''。请删除该模块并再次编译。</entry>
    <entry key="VariantStartWithMaskControl">不支持封装中包含变体控制项变量 "{1}" 的 Variant Start 模块 ''{0}''，因为这会导致变体条件传播到封装作用域之外。</entry>
    <entry key="ErrorWhenConditionPropagatesToBoundedRegions"> 由 Variant Start/End 模块 ''{0}'' 定义的有界区域具有从其他变体模块进入有界区域的条件。 </entry>
    <entry key="MultipleVariantStartWithSameTagWarning">在当前层次结构中检测到多个具有变体开始和结束标记 {0} 的 Variant Start 模块。这将导致 Variant End 模块的端口数量不正确。请删除模型中不必要的模块。</entry>
    <entry key="inherit_no_svc_title">发现没有任何 Simulink.VariantControl 对象的 Variant 模块。</entry>
    <entry key="inherit_no_svc_description">这些模块的变体激活时间设置为 '从 Simulink.VariantControl 继承'，但不包含任何 Simulink.VariantControl 对象。</entry>
    <entry key="inherit_no_svc_action">当模块处于继承模式时，使用 Simulink.VariantControl 对象作为 VariantControl</entry>
    <entry key="UnsupportedUseOfBusWithvariants">不支持为 Variant Subsystem 模块 ''{0}'' 生成 HDL 代码，因为它接受或输出总线信号并且 '变体激活时间' 设置为 '启动'。请将 '变体激活时间' 更改为 '更新图'。</entry>
    <entry key="EnableSSRefDDBaseWSAccessForIRTAndSimFcnBlocks">如果模块 "{0}" 位于具有关联了数据字典 "{2}" 的 Subsystem Reference 模块 "{1}" 内并且具有变体条件，则 "{2}" 必须能够访问基础工作区。&lt;actions exclusiveFixIts="yes"&gt; &lt;action type="fixit"&gt; &lt;cmd&gt;slprivate(''variantfixes'',''SSRefDDBaseWSAccessForIRTAndSimFcnBlocks'',''{2}'')&lt;/cmd&gt; &lt;txt&gt;启用对基础工作区的访问。&lt;/txt&gt; &lt;/action&gt; &lt;/actions&gt; </entry>
    <entry key="EnableSSRefDDBaseWSAccessForIRTAndSimFcnBlocks_fix">已启用对基础工作区的访问。</entry>
    <entry key="OutportCGVCEorSTVCEIsTighterThanSource"> 输出端口模块 ''{0}'' 变体条件 ''{1}'' 比源模块 ''{2}'' 变体条件更严格。要解决此问题，请确保源模块变体条件与输出端口模块上的变体条件匹配。</entry>
    <entry key="HDLcodegenForSTFromMask"> Variant controls on the block ''{0}'' are defined in the mask or model workspace. To generate HDL code of variant blocks in startup activation time, define variant control variables in the global workspace.</entry>
    <entry key="AutosarcodegenForSTFromMask"> 模块 ''{0}'' 上的变体控制项是在封装工作区或模型工作区中定义的。要在启动激活时间生成变体模块的 AUTOSAR 代码，请在全局工作区中定义变体控制项变量。</entry>
    <entry key="InvalidParameterWriteToInvVAT">Parameter Writer 模块 ''{0}'' 正在写入全局工作区变量 ''{1}''，该变量在具有 ''{3}'' 激活的变体模块 ''{2}'' 中用作变体控制项表达式。我们仅在启动激活时支持此工作流。</entry>
    <entry key="ConstantSampleTimeInAperiodicModelVM">不支持将模块 ''{1}'' 的&lt;sldiag objui="inport" objparam="{0,number,integer}" objname="{1}"&gt;输入端口 {0,number,integer}&lt;/sldiag&gt; 连接到具有恒定速率的模块，也不支持将其保持为非连接状态。&lt;actions exclusiveFixIts="yes"&gt; &lt;action type="fixit"&gt; &lt;cmd&gt;slprivate(''variantfixes'',''InsertSignalConversionBlkAtInput'', {0,number,integer},''{1}'');&lt;/cmd&gt; &lt;txt&gt;您可以通过在 ''{1}'' 模块的对应输入端口 {0,number,integer} 的输入端插入 Signal Conversion 模块来修复此错误。&lt;/txt&gt; &lt;/action&gt; &lt;/actions&gt; </entry>
    <entry key="ConstantSampleTimeInAperiodicModelVM_fix">Signal Conversion 模块插入到对应 Outport 的输入端。 </entry>
    <entry key="RuntimeVariantChangedInSimWithoutParamW">对于激活时间为 ''运行时'' 的 Variant 模块 ''{0}''，在没有 Parameter Writer 模块的情况下，不支持在仿真期间更改其活动变体选择项。</entry>
    <entry key="RateBasedModelInvalidPorts">Model 模块 ''{0}'' 是可变子系统 ''{1}'' 中的选择项，已选择 ''调度速率'' 参数并已将 ''速率调度方式'' 参数设置为 ''端口''。在编译期间，由于 Model 模块 ''{0}'' 的速率数发生变化，导致速率端口发生更新。为了避免在下一次编译中出现此类错误，请确保为正确的输入端口更新可变子系统，并保存模型或再次编译模型。</entry>
    <entry key="AutomatePortSyncAPIInSimulinkSubdomain">Simulink.VariantUtils.updateVariantSubsystemPorts is not supported for architecture models. Use systemcomposer.arch.VariantComponent.updatePortsFromChoices instead to update the ports of a variant component in a System Composer model.</entry>
    <entry key="AutomatePortSyncModeRequired">参数 ''Mode'' 的值必须指定为 ''addPorts'' 或 ''addAndDeletePorts''。</entry>
    <entry key="VSSPortSyncMsgAfterAddingPorts">已添加缺失的端口。 </entry>
    <entry key="VSSPortSyncMsgAfterAddingAndDeletingPorts">已添加缺失的端口，且删除了多余的端口。 </entry>
    <entry key="LabelModeNotAllowedWithOtherParameters">不支持使用选项 'VariantActivationTime'、'VariantControl'、'EmptyChoice' 转换为标签模式可变子系统。</entry>
    <entry key="EmptyVariantControlExpression">指定一个变体控制项表达式以转换为表达式模式可变子系统。</entry>
    <entry key="AlwaysFalseBlockRemovedSameFCNName">子系统 ''{0}'' 和 ''{1}'' 具有相同的函数名称 ''{2}''，但它们实际上并不相同，因为子系统 ''{1}'' 有非活动模块，这些模块在编译期间被删除了。 </entry>
    <entry key="DefaultChoiceAlwaysFalseVariantBlocks">模块 ''{0}'' 有一个(默认)选择项，其计算结果始终为 false。请删除该(默认)选择项或修改变体控制项表达式，以确保其计算结果并不始终为 false。</entry>
    <entry key="PassThroughUnsupportedVSSPorts">Variant Subsystem 模块 ''{0}'' 具有连接或控制端口，并且 '内置直通选择项' 处于选中状态。请将 '内置直通选择项' 设置为 'off'，或在可变子系统上使用数据输入端口和输出端口。</entry>
    <entry key="PassThroughUnsupportedChoicePorts">模块选择项 ''{0}'' 具有连接或控制端口，可变子系统 ''{1}'' 已选择 '内置直通选择项'。请将 '内置直通选择项' 设置为 'off'，或在选择项上使用数据输入端口和输出端口。</entry>
    <entry key="PassThroughAZVCExclusive">Variant Subsystem ''{0}'' 不支持 '内置直通选择项' 和 '内置空选择项' 同时设置为 'on'。</entry>
    <entry key="DataPortsMissMatchInVSS">当 '内置直通选择项' 设置为 'on' 时，Variant Subsystem 模块 ''{0}'' 的数据输入端口数必须与数据输出端口数相同。</entry>
    <entry key="DataPortMissMatchChoiceAndVSS">当 '内置直通选择项' 设置为 'on' 时，变体选择项 ''{0}'' 的数据输入端口和输出端口必须与 Variant Subsystem 模块 ''{1}'' 的数据输入端口和输出端口相同。</entry>
    <entry key="VarSrc">Source</entry>
    <entry key="VarSink">Sink</entry>
    <entry key="VarStart">Start</entry>
    <entry key="MATLABTimeStampEng">% -------------------------------------------------------------------\n%  Generated by MATLAB on {0}\n%  MATLAB version: {1}\n% -------------------------------------------------------------------\n\n</entry>
    <entry key="VarConnector">Variant Connector</entry>
  </message>
</rsccat>
