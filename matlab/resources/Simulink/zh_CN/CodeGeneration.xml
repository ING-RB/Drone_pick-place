<?xml version="1.0" encoding="UTF-8"?>
<!--Copyright 2025 The MathWorks, Inc.-->

<rsccat xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.0" locale="zh_CN" product="Simulink" xsi:noNamespaceSchemaLocation="../../resources/schema/msgcat.xsd">
  <message>
    <entry key="InvalidSystemIndex"> 系统索引 {0,number,integer} 超出当前模型 ''{2}'' 的范围 [0...{1,number,integer}]。</entry>
    <entry key="InvalidBlockIndex"> 模块索引 {0,number,integer} 超出当前系统 ''{2}'' 的范围 [0...{1,number,integer}]。</entry>
    <entry key="InvalidInputPortIndex"> 输入端口索引 {0,number,integer} 超出当前模块 ''{2}'' 的范围 [0...{1,number,integer}]。</entry>
    <entry key="InvalidOutputPortIndex"> 输出端口索引 {0,number,integer} 超出当前模块 ''{2}'' 的范围 [0...{1,number,integer}]。</entry>
    <entry key="SignalIndexOutOfRange"> 端口元素索引 ''{0,number,integer}'' 超出当前模块 ''{2}'' 的范围 [0...{1,number,integer}]。</entry>
    <entry key="InvalidCustomStorageComplianceLevel"> 自定义存储类合规性级别 {0,number,integer} 超出当前模块 ''{1}'' 的范围(0、1 或 2)。</entry>
    <entry key="BlockContainsSymbolicInputs">在具有符号大小输入的模块 {1,number,integer} 中的端口 {0,number,integer} 上，LibBlockInputSignalDimensions 的使用不正确</entry>
    <entry key="InvalidInputPortConnected"> 当前模块 ''{1}'' 的输入端口 {0,number,integer} 未连接。</entry>
    <entry key="InvalidOutputPortConnected"> 当前模块 ''{1}'' 的输出端口 {0,number,integer} 未连接。</entry>
    <entry key="BlockIsNotUsingTLC"> 因为此模块未使用 TLC 来生成代码，所以无法在 TLC 中设置模块 ''{1}'' 的 ''{0}''。</entry>
    <entry key="InvalidBlockFunction"> ''{0}'' 不是有效的 TLC 模块函数。</entry>
    <entry key="BlockCompatibleWithIR"> ''{0}'' 生成的代码与 Simulink Coder 优化基础架构兼容。要隐藏此警告，如果您要使此模块参与其他代码生成优化，请在 BlockInstanceSetup 函数中调用 TLC 库函数 LibBlockInlineUsingCompiler。请调用 LibBlockInlineAsLiteralText 以隐藏此警告，并将此模块生成的代码作为字面文本进行内联。</entry>
    <entry key="BlockCodeDoesNotCompile"> The code generated by ''{0}'' does not compile. To avoid this failure invoke LibBlockInlineAsLiteralText in its BlockInstanceSetup function or address the following syntax errors:\n{1}</entry>
    <entry key="PreCodeGenTLCFailed"> 早期执行 TLC 失败，出现以下错误:\n {0}\n{1}</entry>
    <entry key="InvalidUnitIndex"> 单位索引 {0,number,integer} 超出当前模型 ''{2}'' 的范围 [0...{1,number,integer}]。</entry>
    <entry key="UnitsNotEnabled"> 当前模型 ''{0}'' 未启用单位。</entry>
    <entry key="InvalidInputPortSampleTimeIndex"> 采样时间索引对于当前模块 ''{1}'' 的输入端口 {0, number, integer} 不可用。</entry>
    <entry key="InvalidOutputPortSampleTimeIndex"> 采样时间索引对于当前模块 ''{1}'' 的输出端口 {0, number, integer} 不可用。</entry>
    <entry key="InvalidInputPortSampleTime"> 当前模块 ''{1}'' 的输入端口 {0,number,integer} 没有采样时间。</entry>
    <entry key="InvalidOutputPortSampleTime"> 当前模块 ''{1}'' 的输出端口 {0,number,integer} 没有采样时间。</entry>
    <entry key="InvalidInputPortOffsetTime"> 当前模块 ''{1}'' 的输入端口 {0,number,integer} 没有偏移时间。</entry>
    <entry key="InvalidOutputPortOffsetTime"> 当前模块 ''{1}'' 的输出端口 {0,number,integer} 没有偏移时间。</entry>
    <entry key="InvalidBlockTID"> ''{0}'' 模块不包含 TID。</entry>
    <entry key="InvalidDWorkIndex"> DWork 向量索引 {0,number,integer} 超出当前模块 ''{2}'' 的范围 [0...{1,number,integer}]。</entry>
    <entry key="InvalidBlockParamIndex"> 模块参数索引 {0,number,integer} 超出当前模块 ''{2}'' 的范围 [0...{1,number,integer}]。</entry>
    <entry key="InvalidDatatypeIndex"> 数据类型索引 {0,number,integer} 超出范围 [0...{1,number,integer}]。</entry>
    <entry key="InvalidSampleTimeTID"> 采样时间 TID {0,number,integer} 超出当前模型 ''{2}'' 的范围 [0...{1,number,integer}]。</entry>
    <entry key="InvalidExternalInputPortIndex"> 外部输入端口索引 {0,number,integer} 超出当前模型 ''{2}'' 的范围 [0...{1,number,integer}]。</entry>
    <entry key="InvalidExternalOutputPortIndex"> 外部输出端口索引 {0,number,integer} 超出当前模型 ''{2}'' 的范围 [0...{1,number,integer}]。</entry>
    <entry key="InvalidSubsystemSLName"> SLName 在子系统作用域内不存在。</entry>
    <entry key="InvalidSubsystemIndex"> 子系统索引 {0,number,integer} 超出当前模型 ''{2}'' 的范围 [0...{1,number,integer}]。</entry>
    <entry key="InvalidBlockGrSrc"> ''{0}'' 不包含图形系统和模块索引。</entry>
    <entry key="InvalidModelParameterIndex"> 模型参数索引 {0, number, integer} 超出当前模型 ''{2}'' 的范围 [0...{1, number, integer}]。</entry>
    <entry key="EmptySharedUtilsIncludesStack"> S-Function 模块缺失一些初始化命令。</entry>
    <entry key="InvalidBlockSampleTime"> Simulink Coder 严重错误: 无法计算 ''{1}'' 模块中 TID=[0...{0, number, integer}] 的步长: ''{2}''</entry>
    <entry key="InvalidBlockStrSampleTime"> Simulink Coder 严重错误: 无法计算 ''{1}'' 模块中 TID= ''{0}'' 的步长: ''{2}''</entry>
    <entry key="InvalidSLTypeIdxForConstructor"> ''{1}'' 的 SLTypeIdx {0, number, integer} 无效。</entry>
    <entry key="CGTypeConstructorIsNotPointer"> 应为指针类型。</entry>
    <entry key="CGTypeNameForComplexType"> 返回 CGType Name 时出错。</entry>
    <entry key="InvalidEnumeratedDataType"> 在枚举数据类型中找不到枚举值</entry>
    <entry key="InvalidGraphicalBlockIndices"> 图形化模块索引 {0,number,integer} 超出当前系统 ''{2}'' 的范围 [0...{1,number,integer}]。</entry>
    <entry key="InvalidGraphicalSubsysIndices"> 图形化系统索引 {0,number,integer} 超出当前模型 ''{2}'' 的范围 [0...{1,number,integer}]。</entry>
    <entry key="InvalidDataTypeElementIndex"> 元素索引 {0,number,integer} 超出数据类型 ''{2}'' 的范围 [0...{1,number,integer}]。</entry>
    <entry key="InvalidRecordType"> ''{0}'' 不是有效的记录类型。</entry>
    <entry key="InvalidIndicesCountForRecord"> 类型为 ''{0}'' 的记录的有效索引数是 {1,number,integer}，而不是 {2,number,integer}。</entry>
    <entry key="InvalidNameForBasicType">''{0}'' 不是基本数据类型的有效名称。请注意，当 PurelyIntegerCode 设置为 'off' 时，不支持浮点数据类型。</entry>
    <entry key="InvalidFieldTypeForRecord"> ''{0}'' 未包含在类型为 ''{1}'' 的指定记录中。</entry>
    <entry key="InvalidDataTypeGroundValue"> 已请求接地值，但 SLibSetDataTypeGroundValue() 没有设置该值。</entry>
    <entry key="InvalidFormatSignalIndexString"> 信号索引字符串 ''{0}'' 不符合以下格式: &lt;optional_real_imag&gt;&lt;signal_index&gt; </entry>
    <entry key="InvalidSignalIndexStringForAddress"> 在访问信号地址时，信号索引必须为整数。 </entry>
    <entry key="InvalidSignalIndexStringForDefinedDWork"> 在访问定义的 Dwork 时，信号索引必须为整数。 </entry>
    <entry key="InvalidSignalIndexStringForContinuousStates"> 在访问连续状态时，信号索引必须为整数。 </entry>
    <entry key="ContinuousStatesNotFoundForBlock"> 找不到当前模块 ''{0}'' 的连续状态。 </entry>
    <entry key="InvalidCallInTLCBlockFcn"> 要调用 ''{1}''，TLC 模块函数 ''{0}'' 必须返回代码字符串。 </entry>
    <entry key="InvalidZCIndex"> 过零信号索引 {0,number,integer} 超出当前模块 ''{2}'' 的范围 [0...{1,number,integer}]。</entry>
    <entry key="InvalidSignalIndexStringForZC"> 访问过零信号时，信号索引必须为整数。 </entry>
    <entry key="InvalidChangeOfProperty"> 不支持将 ''{1}'' 的 {0} 从 ''{2}'' 更改为 ''{3}''。 </entry>
    <entry key="GroundValueProperty"> 接地值 </entry>
    <entry key="ConvertBetweenTLCFunctionNameProperty"> ConvertBetweenTLCFunctionName </entry>
    <entry key="IsPositiveTLCFunctionNameProperty"> IsPositiveTLCFunctionName </entry>
    <entry key="SignTLCFunctionNameProperty"> SignTLCFunctionName </entry>
    <entry key="ConvertBetweenTLCFunctionFileProperty"> ConvertBetweenTLCFunctionFileName </entry>
    <entry key="IsPositiveTLCFunctionFileProperty"> IsPositiveTLCFunctionFileName </entry>
    <entry key="SignTLCFunctionFileProperty"> SignTLCFunctionFileName </entry>
    <entry key="EnumProperty"> 枚举 </entry>
    <entry key="GroundNameProperty"> 基础名称 </entry>
    <entry key="GroundVariableNameProperty"> 基础变量名称 </entry>
    <entry key="GroundInitializationProperty"> 接地初始化 </entry>
    <entry key="ComplexNameProperty"> 复杂名称 </entry>
    <entry key="ComplexGroundNameProperty"> 复杂基础名称 </entry>
    <entry key="InvalidUsageOfLibBlockInputSignalValue"> 仅当 '默认参数行为' 参数设置为内联时，才支持 LibBlockInputSignalValue 函数。</entry>
    <entry key="InvalidUsageOfLibBlockInputSignalValue2"> LibBlockInputSignalValue function is unable to access the input signal value because input port {0} of block {1} is not connected to a Constant block.</entry>
    <entry key="UnSupportedTLCBlockFcnForEnhancedTLCBlockInterface"> 模块 ''{1}'' 的增强模块 TLC 接口不支持 TLC 模块函数 ''{0}''。请从 BlockInstanceSetup 函数中删除对 TLC 库函数 LibEnableBlockFcnOptimizations 的调用。</entry>
    <entry key="V3NonCompliantTLCTarget"> Update the system target file ''{0}'' to support the enhanced TLC block interface for code generation.\n
        This update improves the efficiency of generated code for many Simulink blocks and user-defined S-Function blocks.\n
        Failure to update the system target file might result in build errors and disruptions in code generation in future releases.\n
        For instructions on enabling the interface, see  &lt;a href="matlab:helpview('rtw','enable_the_enhancedTLC_blockinterface')"&gt;Enable the Enhanced TLC Block Interface&lt;/a&gt;.</entry>
    <entry key="MultirateBlockSampleHitCheckWarning"> 多速率模块 ''{0}'' 的更新函数的代码由采样命中检查(而不是速率分组)保护。这将为模块使用的所有速率生成相同的代码，可能会生成死代码。为了避免死代码，必须更新模块的 TLC 文件。</entry>
  </message>
</rsccat>
