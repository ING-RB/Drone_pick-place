<?xml version="1.0" encoding="UTF-8"?>
<!--Copyright 2025 The MathWorks, Inc.-->

<rsccat xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.0" locale="ko_KR" product="Simulink" xsi:noNamespaceSchemaLocation="../../resources/schema/msgcat.xsd">
  <message>
    <entry key="IncorectArgsVarCtrl">Incorrect arguments specified for Simulink.VariantControl.</entry>
    <entry key="MultipleActiveValues">Variant 변수 ''{0}''에 대한 하나의 선택지만 활성 상태여야 합니다.</entry>
    <entry key="NoActiveValues">Variant 변수 ''{0}''의 적어도 하나의 선택지가 활성 상태여야 합니다.</entry>
    <entry key="InvalidVarCtrlVar">The variant control variables for ''{0}'' should be of Simulink.VariantControl type.</entry>
    <entry key="InconsistentActivationTimes">Activation times of variant controls used for ''{0}'' are inconsistent.</entry>
    <entry key="InvalidVATForSimulinkVariantVariable">Simulink.VariantVariable ''{1}''이(가) Variant 활성화 시점이 '런타임'으로 설정된 Simulink.VariantControl 객체 ''{0}''을(를) 사용합니다. '다이어그램 업데이트', '다이어그램 업데이트 중 모든 선택지 분석', '코드 컴파일' 또는 '시작' Variant 활성화 시점만 허용됩니다.</entry>
    <entry key="InconsistentDT">Simulink.VariantVariable ''{1}''의 조건 ''{0}''을(를) 갖는 선택지의 데이터형이 ''{2}''인데, 하나 이상의 다른 선택지에 대한 데이터형이 ''{3}''입니다. Simulink.VariantVariable ''{1}''에 대한 값의 데이터형은 일치해야 합니다.</entry>
    <entry key="InconsistentNDims">Simulink.VariantVariable ''{1}''의 조건 ''{0}''을(를) 갖는 선택지의 차원 수가 ''{2}''인데, 하나 이상의 다른 선택지에 대한 차원 수가 ''{3}''입니다. Simulink.VariantVariable ''{1}''에 대한 값의 차원 수는 일치해야 합니다.</entry>
    <entry key="InconsistentComplex">Simulink.VariantVariable ''{1}''의 조건 ''{0}''을(를) 갖는 선택지의 실수/복소수 여부가 ''{2}''인데, 하나 이상의 다른 선택지에 대한 실수/복소수 여부가 ''{3}''입니다. Simulink.VariantVariable ''{1}''에 대한 값의 실수/복소수 여부는 일치해야 합니다.</entry>
    <entry key="InconsistentSymbDimsOwn">Simulink.VariantVariable ''{1}''의 조건 ''{0}''을(를) 갖는 선택지가 기호 차원을 사용하지 않는데, 일부 다른 선택지가 기호 차원을 사용합니다. Simulink.VariantVariable ''{1}''의 값은 모두 기호 차원을 사용하여 차원을 지정하거나 아니면 모두 그렇지 않아야 합니다.</entry>
    <entry key="InconsistentSymbDimsOther">Simulink.VariantVariable ''{1}''의 조건 ''{0}''을(를) 갖는 선택지가 기호 차원을 사용하는데, 일부 다른 선택지가 기호 차원을 사용하지 않습니다. Simulink.VariantVariable ''{1}''의 값은 모두 기호 차원을 사용하여 차원을 지정하거나 아니면 모두 그렇지 않아야 합니다.</entry>
    <entry key="InconsistentDims">Simulink.VariantVariable ''{1}''의 조건 ''{0}''을(를) 갖는 선택지의 차원이 ''{2}''인데, 하나 이상의 다른 선택지에 대한 차원이 ''{3}''입니다. Simulink.VariantVariable ''{1}''에 대한 값의 차원은 일치해야 합니다.</entry>
    <entry key="ChoiceVarSlParamInconsistentDims">Simulink.VariantVariable 객체 ''{0}''의 값으로 사용되는 Simulink.Parameter 객체의 차원이 서로 다릅니다. 조건 ''{1}''을(를) 갖는 선택지의 차원이 ''{2}''인데, 하나 이상의 다른 선택지에 대한 차원이 ''{3}''입니다. Simulink.VariantVariable ''{0}''에 있는 값의 차원은 일치해야 합니다. </entry>
    <entry key="ValueMustBeNumeric">addChoice 메서드에 제공된 값은 유한한 숫자형이어야 합니다.</entry>
    <entry key="IndexOutOfBoundForDel">Index provided is out of bounds for deletion.</entry>
    <entry key="MultiActiveChoice">Variant 변수에는 활성 상태의 선택지가 둘 이상 있을 수 없습니다.</entry>
    <entry key="NoActiveChoice">Variant 변수에는 활성 상태의 선택지가 적어도 하나 있어야 합니다.</entry>
    <entry key="ErrorDuringEval">파라미터 ''{0}''을(를) 평가하는 중 오류가 발생함</entry>
    <entry key="VariantKeywordNotSupported">(default)가 아닌 Variant 키워드는 지원되지 않습니다.</entry>
    <entry key="VariantPropertyNotSupported">Property ''{0}'' does not exist for Simulink.VariantControl object.</entry>
    <entry key="ValueMustBeNumericCtor">값은 유한한 숫자형이어야 합니다</entry>
    <entry key="ChoicesMustBeCell">Choices of variant parameter should be supplied as cell array.</entry>
    <entry key="ChoicesEvenNArgs">Choices of variant parameter should contain even number of elements.</entry>
    <entry key="ConditionMustBeChar">Variant Condition in 'Choices' array should be a character vector.</entry>
    <entry key="ConditionMustNotBeEmpty">Variant Condition in 'Choices' array can not be empty.</entry>
    <entry key="ValueInChoicesMustBeNumeric">Value in 'Choices' array must be finite and numeric, or a variable name corresponding to a Simulink.Parameter object with a finite and numeric value.</entry>
    <entry key="ValueInChoicesMustBeNumericSlPrmSlxpr">Value in 'Choices' array should be finite and numeric, or a variable name corresponding to a Simulink.Parameter object. The object's value must be finite and numeric or a Simulink.data.Expression (slexpr).</entry>
    <entry key="ValueInChoiceMustBeNumeric">Variant 파라미터 ''{1}''의 조건 ''{0}''에 유효하지 않은 값입니다. 'Choices' 배열의 값은 유한한 숫자형이거나 유한한 숫자형 값을 갖는 Simulink.Parameter 객체에 해당하는 변수 이름이어야 합니다.</entry>
    <entry key="SpecificationMustBeScalarString">Specification은 Simulink.Parameter 객체에 해당하는 변수 이름이어야 합니다.</entry>
    <entry key="SpecificationMustBeScalarStringWithArg">Specification ''{0}'' must be a variable name corresponding to Simulink.Parameter object.</entry>
    <entry key="SpecificationNotFound">동일한 작업 공간에서 ''{1}''에 대한 사양 객체 ''{0}''을(를) 찾을 수 없습니다.</entry>
    <entry key="VariantVarInvalidNArgsCtor">Incorrect number of arguments to Simulink.VariantVariable.</entry>
    <entry key="CustomStorageClassNotSupported">Custom storage class specified for ''{0}'' is not supported for Simulink.VariantVariable.</entry>
    <entry key="SlVarCtrlScalarValue">Simulink.VariantControl value must be a scalar or a Simulink.Parameter with scalar value.</entry>
    <entry key="SlVarCtrlNonNumericValue">Simulink.VariantControl value must be an integer, an enumeration, or a Simulink.Parameter with value of type integer or enumeration.</entry>
    <entry key="SlVarCtrlNonNumericValueNonSlPrmSlxpr">Simulink.VariantControl value must be one of the following: an integer, an enumeration, a Simulink.Parameter with an integer or enumeration value, or a Simulink.Parameter with a Simulink.data.Expression (slexpr) where Simulink.Parameter objects within the slexpr are of type integer or enumeration.</entry>
    <entry key="SlVarCtrlValueType">값 유형</entry>
    <entry key="SlVarCtrlValue">값</entry>
    <entry key="SlVarCtrlVAT">활성화 시점</entry>
    <entry key="AutosarNotSupported">AUTOSAR 코드 생성에는 Variant 변수 ''{0}''을(를) 사용할 수 없습니다.</entry>
    <entry key="ModelWorkspaceWithAutosarNotSupported">모델 작업 공간에 정의된 Simulink.VariantVariable ''{0}''에 대해서는 AUTOSAR 코드 생성이 지원되지 않습니다.</entry>
    <entry key="ExistingCondition">Variant condition ''{0}'' is already present in the choices.</entry>
    <entry key="EquivalentExistingCondition">Variant 조건 ''{0}''이(가) 기존 선택지 조건 ''{1}''과(와) 동일합니다.</entry>
    <entry key="NonExistingCondition">Variant Condition ''{0}'' is not present in the list of choices.</entry>
    <entry key="UnresolvedActiveValue">Could not determine active value for the variant parameter.</entry>
    <entry key="Param_ConvertToRealWorldValue">Simulink.VariantVariable의 사양 객체에 DataType이 설정되어 있지만 해당 Values가 배정밀도가 아닙니다. Values가 실제 값(배정밀도)으로 변환됩니다.</entry>
    <entry key="SpecficationExpressionValue">Specification object with expression as value is not supported.</entry>
    <entry key="VariantControlChangeDuringSim">시뮬레이션 중 Simulink.VariantControl 객체 ''{0}''의 ''ActivationTime'' 파라미터 변경은 지원되지 않지만, ''Value'' 파라미터 변경은 'startup'과 'runtime' 활성화 시점에만 지원됩니다.</entry>
    <entry key="CannotSetInstanceSpecificForSimulinkVariantControlInModelWorkspace">모델 작업 공간에서 생성된 Simulink.VariantControl 객체의 ''Argument'' 속성을 true로 설정할 수 없습니다.</entry>
    <entry key="VariantVariableChangeDuringSim">시뮬레이션 중에 Simulink.VariantVariable 객체 ''{0}''의 값을 업데이트하는 것은 지원되지 않습니다. '시작' Variant 활성화 시점의 경우 연결된 Simulink.VariantControl 값을 변경하여 객체의 기존 값 사이에서 전환할 수 있습니다.</entry>
    <entry key="VariantVariableSlParamValDiffDataType">Simulink.Parameter 객체 ''{1}''이(가) Simulink.VariantVariable ''{0}'' 및 또 다른 Simulink.VariantVariable 객체의 선택지로 사용되었는데, 해당 데이터형이 서로 다릅니다. 이는 지원되지 않습니다.</entry>
    <entry key="VariantVariableSlParamInconsistent">Simulink.VariantVariable 객체 ''{0}''이(가) Simulink.Parameter 객체 ''{1}''을(를) 선택지로 사용하는데, 이는 블록 ''{2}''에서 다른 데이터형을 갖는 ''{1}''의 사용과 충돌합니다.</entry>
    <entry key="VariantParamInconsistent">Simulink.VariantVariable object ''{0}'' is used in incompatible ways. This variable will not be preserved in the generated code.</entry>
    <entry key="VariantControlNotFound">동일한 작업 공간에서 ''{1}''에 대한 Variant 제어 변수 ''{0}''을(를) 찾을 수 없습니다.</entry>
    <entry key="VariantControlEmptyValue">Variant control variable ''{0}'' has no value.</entry>
    <entry key="ArithOpInconsistentAT">산술 연산에서는 Simulink.VariantControl 객체들의 Variant 활성화 시점이 동일해야 합니다.</entry>
    <entry key="VarCondDoesNotEvalToBool">Variant 조건 표현식 ''{0}''은(는) true 또는 false로 평가되어야 합니다.</entry>
    <entry key="SlVariantControlDDGDesc">Variant 제어 변수 객체에 값을 지정하고 활성화 시점을 연결합니다. 값에 따라 객체의 활성 선택지가 결정됩니다. 활성화 시점에 따라 Simulink가 활성 선택지를 선택할 시점이 결정됩니다.</entry>
    <entry key="SlVariantVariableDDGDesc">Simulink.VariantVariable 객체에 여러 값을 지정합니다. 값은 숫자형 또는 Simulink.Parameter 변수 이름일 수 있습니다. 예를 들어, 2.5 또는 'kp'이며, 여기서 kp는 Simulink.Parameter입니다.</entry>
    <entry key="SlVariantVariableCondDesc">각 값을 Variant 조건식과 연결합니다. 활성 선택지는 True로 평가되는 Variant 조건식에 의해 결정됩니다. 예: V==EngineType.Small 또는 V==1.</entry>
    <entry key="SlVariantVariableSpecDesc">Specification 파라미터에 Simulink.Parameter 변수 이름을 지정하여 차원, 스토리지 클래스 등과 같은 속성을 Simulink.VariantVariable 객체와 연결합니다.</entry>
    <entry key="SlVariantVariableSSCondition">조건</entry>
    <entry key="SlVariantVariableSSValue">값</entry>
    <entry key="SlVariantVariableSpec">사양</entry>
    <entry key="SlVariantVariableBank">뱅크</entry>
    <entry key="SpecNotSimulinkParameter">Specification ''{0}''은(는) Simulink.Parameter 객체여야 합니다.</entry>
    <entry key="VariantVariableOutputNotAssigned">''{0}'' 메서드의 반환 값이 사용되고 있지 않습니다. Simulink.VariantVariable에서 선택지를 수정하거나 제거하려면 'addChoice', 'setChoice' 및 'removeChoice' 메서드의 반환 값을 할당해야 합니다.</entry>
    <entry key="VariantVariableInNonGlobalWks">Simulink.VariantVariable ''{0}'' must be defined in the base workspace, model workspace, or data dictionary associated with the model.</entry>
    <entry key="VPrmCodeGenInNonGlobalWks">Simulink.VariantVariable ''{0}''이(가) 기본 작업 공간이나 데이터 사전이 아닌 다른 작업 공간에 정의되어 있으므로 이 변수에 대한 코드 생성이 지원되지 않습니다.</entry>
    <entry key="VariantVariableWithCCVATInNonGlobalWks">작업 공간 ''{1}''에 정의된 Simulink.VariantVariable ''{0}''이(가) Variant 활성화 시점이 '코드 컴파일'로 설정된 Simulink.VariantControl을 사용합니다. 마스크 작업 공간 또는 모델 작업 공간을 사용하거나 자체 데이터 사전과 함께 서브시스템 참조를 사용하는 경우에는 '다이어그램 업데이트', '다이어그램 업데이트 중 모든 선택지 분석' 또는 '시작' Variant 활성화 시점만 허용됩니다. '코드 컴파일' 활성화 시점을 사용하려면 모델의 기본 작업 공간 또는 데이터 사전에서 ''{0}''을(를) 정의하십시오.</entry>
    <entry key="VariantParamInSigObj">Simulink.VariantVariable ''{0}''은(는) Simulink.Signal ''{1}''에서 초기값으로 사용되면 안 됨 </entry>
    <entry key="UnsupportedOpInVCE">Simulink.VariantVariable ''{0}''에 지원되지 않는 연산자 ''{1}''을(를) 갖는 Variant 조건식이 포함되어 있습니다. Variant 파라미터는 Variant 조건식에서 "==", "~=", "&amp;&amp;", "||", "~"만 지원합니다.</entry>
    <entry key="VariantControlNotPresent">Simulink.VariantVariable ''{0}''에 Variant 선택지가 포함되어 있지 않습니다.</entry>
    <entry key="VCtrlEmptyProp">''{0}'' cannot be empty. Provide a valid value.</entry>
    <entry key="InvalidVAT">''{0}'' is not a valid variant activation time.</entry>
    <entry key="InvalidNArgsForSetPropValue">'setPropValue' method requires 3 input arguments at least.</entry>
    <entry key="StartupNotSupportedForVPrm">Variant 파라미터에는 시작 활성화 시점이 지원되지 않습니다.</entry>
    <entry key="VPrmInvalidConstSC">Simulink.VariantVariable 객체 ''{0}''은(는) 'StorageClass'가 ''{2}''(으)로 설정된 Simulink.Parameter 객체 ''{1}''을(를) 사용하여 구성되었으며, 연결된 Simulink.VariantControl 객체는 'ActivationTime'이 '시작'으로 설정되어 있습니다. 이는 Variant 파라미터 ''{0}''의 상수 값을 수정하려고 시도하는 유효하지 않은 코드를 초래할 수 있습니다. Variant 변수를 구성하는 데 사용된 Simulink.Parameter 객체의 스토리지 클래스를 변경하거나 Simulink.VariantControl 객체의 활성화 시점을 변경하십시오.</entry>
    <entry key="VPrmInvalidMacroSC">Simulink.VariantVariable 객체 ''{0}''은(는) 'StorageClass'가 ''{2}''(으)로 설정된 Simulink.Parameter 객체 ''{1}''을(를) 사용하여 구성되었으며, 연결된 Simulink.VariantControl 객체는 'ActivationTime'이 '시작'으로 설정되어 있습니다. 이는 Variant 파라미터 ''{0}''의 매크로를 수정하려고 시도하는 유효하지 않은 코드를 초래할 수 있습니다. Variant 변수를 구성하는 데 사용된 Simulink.Parameter 객체의 스토리지 클래스를 변경하거나 Simulink.VariantControl 객체의 활성화 시점을 변경하십시오.</entry>
    <entry key="VPrmInvalidConstSCDefaultMap">Simulink.VariantVariable 객체 ''{0}''은(는) 'StorageClass'가 ''{2}''(으)로 설정된 모델의 ''{1}'' 디폴트 코더 매핑을 사용하고 있으며, 연결된 Simulink.VariantControl 객체는 'ActivationTime'이 '시작'으로 설정되어 있습니다. 이는 Variant 파라미터 ''{0}''의 상수 값을 수정하려고 하는 유효하지 않은 코드를 초래할 수 있습니다. Variant 변수를 구성하는 데 사용된 디폴트 코더 매핑을 변경하거나 Simulink.VariantControl 객체의 활성화 시점을 변경하십시오.</entry>
    <entry key="VPrmInvalidMacroSCDefaultMap">Simulink.VariantVariable 객체 ''{0}''은(는) 'StorageClass'가 ''{2}''(으)로 설정된 모델의 ''{1}'' 디폴트 코더 매핑을 사용하고 있으며, 연결된 Simulink.VariantControl 객체는 'ActivationTime'이 '시작'으로 설정되어 있습니다. 이는 Variant 파라미터 ''{0}''의 매크로를 수정하려고 시도하는 유효하지 않은 코드를 초래할 수 있습니다. Variant 변수를 구성하는 데 사용된 디폴트 코더 매핑을 변경하거나 Simulink.VariantControl 객체의 활성화 시점을 변경하십시오.</entry>
    <entry key="VCtrlInvalidForAutosar">'ActivationTime'이 '코드 컴파일'로 설정된 Simulink.VariantControl 객체 ''{0}''이(가) Simulink.Parameter 객체를 사용하고 모델이 AUTOSAR 코드 생성용으로 구성되어 있습니다. parameter 객체를 "SystemConstant" 스토리지 클래스를 갖는 AUTOSAR.Parameter로 변경하십시오.</entry>
    <entry key="VCtrlInvalidForAutosar1">'ActivationTime'이 '코드 컴파일'로 설정된 Simulink.VariantControl 객체 ''{0}''이(가) 숫자형 값 유형으로 설정되어 있고 모델이 AUTOSAR 코드 생성용으로 구성되어 있습니다. 값 유형을 "SystemConstant" 스토리지 클래스를 갖는 AUTOSAR.Parameter로 변경하십시오.</entry>
    <entry key="VCtrlInvalidForAutosar2">'ActivationTime'이 '코드 컴파일'로 설정된 Simulink.VariantControl 객체 ''{0}''이(가) AUTOSAR.Parameter 객체를 사용하고 모델이 AUTOSAR 코드 생성용으로 구성되어 있습니다. AUTOSAR.Parameter의 스토리지 클래스를 SystemConstant로 변경하십시오.</entry>
    <entry key="VCtrlInvalidForAutosar3">Simulink.VariantControl 객체 ''{0}''이(가) AUTOSAR.Parameter 객체를 사용하고 모델이 AUTOSAR 코드 생성용으로 구성되어 있지 않습니다. AUTOSAR 코드 생성용으로 모델을 설정하거나 Simulink.VariantControl 값 유형을 숫자형 값 또는 Simulink.Parameter 객체로 변경하십시오.</entry>
    <entry key="VCtrlInvalidForAutosar4">'ActivationTime'이 ''{1}''(으)로 설정된 Simulink.VariantControl 객체 ''{0}''은(는) parameter 객체 유형에서 지원되지 않습니다. Simulink.VariantControl 값 유형을 숫자형 값으로 변경하십시오.</entry>
    <entry key="VCtrlInvalidMacroSC">Simulink.VariantControl 객체 ''{0}''이(가) 'StorageClass'가 ''{1}''(으)로 설정된 Simulink.Parameter 객체를 사용합니다. 이로 인해 Variant 제어 변수에 대한 매크로가 발생합니다. ''{2}'' 활성화 시점에는 매크로를 생성하는 스토리지 클래스가 지원되지 않습니다. Variant 제어 변수를 구성하는 데 사용된 Simulink.Parameter 객체의 스토리지 클래스를 변경하거나 Simulink.VariantControl 객체의 활성화 시점을 변경하십시오.</entry>
    <entry key="RuntimeActivationNotSupportedForVPrm">Simulink.VariantControl 객체에는 런타임 활성화 시점이 지원되지 않습니다.</entry>
    <entry key="AutosarNotSupportedVCtrl">AUTOSAR 코드 생성에는 Simulink.VariantControl ''{0}''을(를) 사용할 수 없습니다.</entry>
    <entry key="InconsistentVATBlock">'ActivationTime'이 ''{0}''(으)로 설정된 Simulink.VariantControl 객체 ''{1}''이(가) Variant 블록 ''{3}''에 지정된 Variant 활성화 시점 ''{2}''과(와) 호환되지 않습니다.</entry>
    <entry key="ActiveChoiceEmptyVal">Variant 변수의 활성 선택지에 값이 비어 있습니다.</entry>
    <entry key="NonInlinedSFcnRef">인라인이 아닌 S-Function 함수 ''{1}''에서는 Variant 제어 변수 ''{0}''이(가) 지원되지 않습니다.</entry>
    <entry key="VCtrlInvalidConstSC">Simulink.VariantControl 객체 ''{0}''이(가) 'StorageClass'가 ''{1}''(으)로 설정된 Simulink.Parameter 객체를 사용합니다. 이로 인해 const 한정 형식의 Variant 제어 변수가 발생합니다. ''{2}'' 활성화 시점에는 const 한정 변수를 생성하는 스토리지 클래스가 지원되지 않습니다. Variant 제어 변수를 구성하는 데 사용된 Simulink.Parameter 객체의 스토리지 클래스를 변경하거나 Simulink.VariantControl 객체의 활성화 시점을 변경하십시오.</entry>
    <entry key="VCtrlInvalidNonMacroSC">'ActivationTime'이 '코드 컴파일'로 설정된 Simulink.VariantControl 객체 ''{0}''이(가) 'StorageClass'가 ''{1}''(으)로 설정된 Simulink.Parameter 객체를 사용합니다. 코드 컴파일 Variant 제어 변수에는 매크로를 생성하는 스토리지 클래스가 지원됩니다. Variant 제어 변수를 구성하는 데 사용된 Simulink.Parameter 객체의 스토리지 클래스를 변경하거나 Simulink.VariantControl 객체의 활성화 시점을 변경하십시오.</entry>
    <entry key="VCtrlExpMacroNoHeader">'ActivationTime'이 '코드 컴파일'로 설정된 Simulink.VariantControl 객체 ''{0}''이(가) 'StorageClass'가 지정된 헤더 파일이 없는 ''{1}''(으)로 설정된 Simulink.Parameter 객체를 사용합니다. Variant 제어 변수를 구성하는 데 사용되는 Simulink.Parameter 객체에 헤더 파일을 지정하십시오.</entry>
    <entry key="SlVCtrlInValidValType">''{0}''을(를) ''{1}''(으)로 설정할 수 없습니다.</entry>
    <entry key="SymbolHasNoValue">변수 ''{0}''에 Variant 조건 ''{1}''에 대한 값이 없습니다.</entry>
    <entry key="NumDimsIncorrectForChoice">Simulink.VariantVariable ''{1}''의 차원 수 ''{0}''은(는) Variant 조건 ''{3}''에 해당하는 선택지 값의 차원 수 ''{2}''과(와) 동일해야 합니다.</entry>
    <entry key="SymbolicDimsNoMatch">Simulink.VariantVariable ''{1}''의 차원 ''{0}''은(는) Variant 조건 ''{3}''에 해당하는 선택지 값의 차원 ''{2}''과(와) 동일해야 합니다.</entry>
    <entry key="ChoiceValsNotUniform">Simulink.VariantVariable 객체 ''{0}''의 선택지 값은 숫자형 또는 Simulink.Parameter 변수 이름이어야 합니다. 선택지 값 유형을 결합하는 것은 지원되지 않습니다.</entry>
    <entry key="ChoiceVarsDontMatchSpec">Simulink.VariantVariable ''{2}''의 Variant 조건 ''{1}''에 사용된 변수 ''{0}''의 데이터 특성은 사양 변수 ''{3}''의 데이터 특성과 같아야 합니다.</entry>
    <entry key="ChoiceVarNotFound">''{1}''과(와) 동일한 작업 공간에서 변수 ''{0}''을(를) 찾을 수 없습니다.</entry>
    <entry key="ChoiceVarNotSlParam">변수 ''{0}''은(는) Simulink.Parameter 객체여야 합니다.</entry>
    <entry key="VPrmInvalidConstSCSlParamVal">Simulink.VariantVariable 객체 ''{0}''은(는) 'StorageClass'가 ''{2}''(으)로 설정된 Simulink.Parameter 객체 ''{1}''을(를) 사용하여 구성되었으며, 이는 Variant 변수 객체의 상수 값을 수정하려고 시도하는 유효하지 않은 코드를 초래할 수 있습니다. Variant 변수 객체를 구성하는 데 사용된 Simulink.Parameter 객체의 스토리지 클래스를 변경하십시오.</entry>
    <entry key="VPrmInvalidMacroSCSlParamVal">Simulink.VariantVariable 객체 ''{0}''은(는) 'StorageClass'가 ''{2}''(으)로 설정된 Simulink.Parameter 객체 ''{1}''을(를) 사용하여 구성되었으며, 이는 Variant 변수 객체의 매크로를 수정하려고 시도하는 유효하지 않은 코드를 초래할 수 있습니다. Variant 변수 객체를 구성하는 데 사용된 Simulink.Parameter 객체의 스토리지 클래스를 변경하십시오.</entry>
    <entry key="VPrmInvalidConstSCDefaultMapSlParamVal">Simulink.VariantVariable 객체 ''{0}''은(는) 외부 파라미터의 스토리지 클래스가 ''{2}''(으)로 설정된 모델 ''{1}''의 디폴트 코더 매핑을 사용하여 구성되었으며, 이는 Variant 변수 객체의 상수 값을 수정하려고 시도하는 유효하지 않은 코드를 초래할 수 있습니다. Variant 변수 객체를 구성하는 데 사용된 외부 파라미터의 스토리지 클래스를 변경하십시오.</entry>
    <entry key="VPrmInvalidMacroSCDefaultMapSlParamVal">Simulink.VariantVariable 객체 ''{0}''은(는) 외부 파라미터의 스토리지 클래스가 ''{2}''(으)로 설정된 모델 ''{1}''의 디폴트 코더 매핑을 사용하여 구성되었으며, 이는 Variant 변수 객체의 매크로를 수정하려고 시도하는 유효하지 않은 코드를 초래할 수 있습니다. Variant 변수 객체를 구성하는 데 사용된 외부 파라미터의 스토리지 클래스를 변경하십시오.</entry>
    <entry key="SomeChoiceValueEmpty">Simulink.VariantVariable ''{0}''에 선택지 조건 ''{1}''의 값이 없습니다.</entry>
    <entry key="AutogenSymbolProtectedModel">보호 모델을 생성하려면 모델 ''{1}''의 전역 작업 공간에서 Simulink.VariantVariable 객체 ''{0}''의 선택지 값에 대한 차원 기호를 정의하십시오.</entry>
    <entry key="ModelArgVCtrlInvalidSC">'ActivationTime'이 'startup'으로 설정된 Simulink.VariantControl 객체 ''{0}''이(가) 'StorageClass'가 ''{1}''(으)로 설정된 Simulink.Parameter 객체를 사용하는데, 이는 ''{0}''이(가) 모델 파라미터 인수로 구성된 경우 지원되지 않습니다. Variant 제어 변수를 'Auto' 또는 'Model default'로 구성하는 데 사용된 Simulink.Parameter 객체의 스토리지 클래스를 변경하십시오.</entry>
    <entry key="ParameterWriterWritingToSimulinkVariantVariable">Parameter Writer 블록 ''{0}''은(는) 일반 MATLAB 변수, Simulink.Parameter 또는 Simulink.VariantControl 객체에 대한 쓰기만 지원하므로 이 블록을 사용하여 Simulink.VariantVariable 객체 ''{1}''에 쓸 수 없습니다.</entry>
    <entry key="InvalidParameterWriteToSVariantControlVAT">Parameter Writer 블록 ''{0}''이(가) 활성화 시점 ''{2}''(으)로 Simulink.VariantControl 객체 ''{1}''에 쓰고 있는데, 이는 지원되지 않습니다. ''{1}''에 쓰려면 활성화 시점을 '시작' 또는 '런타임'으로 설정하십시오.</entry>
    <entry key="InvalidParameterWriteToVariantVarChoiceVal">Parameter Writer 블록 ''{0}''을(를) 사용하여 변수 ''{1}''에 쓸 수 없습니다. 이 변수가 Simulink.VariantVariable ''{2}'' 선택지 중 하나로 사용되고 있기 때문입니다.</entry>
    <entry key="InvalidParamWriteToModelArgUsedInVariantVarInRefModel">Parameter Writer 블록 ''{0}''을(를) 사용하여 모델 인수 ''{1}''에 쓰는 것은 지원되지 않습니다. ''{1}''이(가) Model 블록 ''{2}''에서 참조하는 모델에서 Simulink.VariantVariable의 Variant 제어로 사용되기 때문입니다.</entry>
    <entry key="VPrmInvalidParamWriteVCtrlMultiLevel">Simulink.VariantVariable ''{2}''의 조건식에 사용되는 Simulink.VariantControl 변수 ''{0}'' 및 ''{1}''은(는) 다른 Initialize Function 블록 ''{5}'' 및 ''{6}''의 Parameter Writer 블록 ''{3}'' 및 ''{4}''에 의해 수정됩니다. Simulink.VariantVariable에 사용되는 Simulink.VariantControl 객체는 동일한 Initialize Function 블록 내에서 수정해야 합니다.</entry>
    <entry key="ParamWriterWritingToWSVarUsedInVariantVarWithBank">Parameter Writer 블록 ''{0}''을(를) 사용하여 Simulink.VariantVariable ''{2}''의 조건식에 사용되는 작업 공간 변수 ''{1}''에 쓰는 것은 지원되지 않습니다. ''{2}''이(가) Variant 뱅크 ''{3}''의 일부이기 때문입니다.</entry>
    <entry key="ParamWriteStartupVParamWithMultiVarCtrl">Parameter Writer 블록 ''{0}''을 사용하여 Simulink.VariantVariable 객체 ''{2}''의 조건식에서 사용되는 Variant 제어 ''{1}''에 쓰는 것은 지원되지 않습니다. 조건식에 여러 Variant 제어가 있기 때문입니다.</entry>
    <entry key="InvalidParamWriteFeedVParamValueToVCtrl">블록 ''{1}''에 사용되는 Simulink.VariantVariable ''{0}''은(는) Parameter Writer 블록 ''{4}''을(를) 사용하여 {2}변수 ''{3}''의 값을 수정합니다. Simulink.VariantVariable 객체에 연결된 Parameter Writer 블록은 블록 파라미터 값 변경만 지원하므로 이는 지원되지 않습니다.</entry>
    <entry key="InvalidVParamUserBlockConnectedToParamWriteBlockViaModelRefInport">
            Model 블록 ''{2}''의 인포트 &lt;sldiag objui="inport" objparam="{3,number,integer}" objname="{2}"&gt;{3,number,integer}번 입력 포트&lt;/sldiag&gt;를 통해 블록 ''{1}''에 사용되는 Simulink.VariantVariable ''{0}''을(를) Parameter Writer 블록에 연결하는 것은 지원되지 않습니다. Simulink.VariantVariable 객체에 연결된 Parameter Writer 블록은 블록 파라미터 값 변경만 지원하기 때문입니다.</entry>
    <entry key="InvalidVParamUserBlockConnectedToParamWriteBlockViaModelRefOutport">
            Model 블록 ''{1}''의 아웃포트 &lt;sldiag objui="outport" objparam="{2,number,integer}" objname="{1}"&gt;{2,number,integer}번 출력 포트&lt;/sldiag&gt;를 통해 Parameter Writer 블록 ''{0}''을(를) Simulink.VariantVariable 객체를 사용하는 블록에 연결하는 것은 지원되지 않습니다. Simulink.VariantVariable 객체에 연결된 Parameter Writer 블록은 블록 파라미터 값 변경만 지원하기 때문입니다.
        </entry>
    <entry key="ParamWriterWritingToWSVarUsedInExpressionWithMultiVar">Parameter Writer 블록 ''{0}''을(를) 사용하여 작업 공간 변수 ''{1}''에 쓰는 것은 지원되지 않습니다. ''{1}''이(가) 여러 변수를 포함하는 표현식 ''{2}''에 사용되기 때문입니다.</entry>
    <entry key="InvalidParameterWriteFromIRTSystemWithGPCOnToSVC">''{2}'' 활성화를 사용하는 Simulink.VariantControl 유형의 기본 작업 공간 변수 또는 데이터 사전 작업 공간 변수 ''{1}''에 쓰려면 Parameter Writer 블록 ''{0}''이(가) Variant가 아닌 Initialize Function 블록 내에 있어야 합니다.</entry>
    <entry key="ParameterWriterFromNonInitializeFcnToSVCWithStartup">Simulink.VariantControl의 활성화 시점이 ''{2}''인 경우, Simulink.VariantControl 유형의 기본 작업 공간 변수 또는 데이터 사전 작업 공간 변수 ''{1}''에 쓰려면 Parameter Writer 블록 ''{0}''이(가) Initialize Subsystem 내에 있어야 합니다.</entry>
    <entry key="VCtrl_Invalid_Model_Argument">모델 인수 ''{0}''에 지정된 값이 유효하지 않습니다. 모델 인수가 Simulink.VariantControl 객체인 경우 지정된 값은 숫자형이어야 합니다.</entry>
    <entry key="SlParamUsesSlExpr">표현식 유형의 값은 Simulink.VariantVariable의 Simulink.Parameter 객체 ''{0}''에 사용할 수 없습니다.</entry>
    <entry key="SynthesizedVarNameClash">모델 ''{1}''의 전역 작업 공간에서 변수 이름 ''{0}''이(가) ''{2}''에 대해 합성된 차원 변수 이름과 충돌합니다. 변수의 이름을 바꾸십시오.</entry>
    <entry key="VPrmWSlPrmInNonInlineSFcn">인라인이 아닌 S-function 블록 ''{1}''에 대해서는 Simulink.Parameter 변수를 선택지 값으로 사용하는 Simulink.VariantVariable ''{0}''이(가) 지원되지 않습니다.</entry>
    <entry key="VPrmWSlPrmInASARTargets">Simulink.Parameter 변수를 선택지 값으로 사용하는 Simulink.VariantVariable ''{0}''은(는) AUTOSAR 코드 생성에서 지원되지 않습니다.</entry>
    <entry key="VPrmSymbDimNoProp">
            Variant 활성화 시점이 '다이어그램 업데이트'가 아닌 Simulink.VariantVariable ''{0}''이(가) 기호 차원을 사용하지만, 모델 파라미터 'AllowSymbolicDim'이 꺼져 있습니다. &lt;actions exclusiveFixIts="yes"&gt; &lt;action type="fixit" btn="apply"&gt; &lt;cmd&gt;set_param(bdroot, ''AllowSymbolicDim'', ''On'');&lt;/cmd&gt; &lt;txt&gt;Variant 파라미터가 기호 차원을 사용할 수 있도록 모델 구성 파라미터 'AllowSymbolicDim'을 켜십시오. &lt;/txt&gt; &lt;/action&gt; &lt;/actions&gt;
               
        </entry>
    <entry key="SynthDimUnsupportedTarget">차원이 서로 다른 선택지 값이 있는 Simulink.VariantVariable ''{0}''에 대한 코드를 생성하려면 Embedded Coder를 사용하십시오.</entry>
    <entry key="SynthDimPluginNotLoaded">다른 차원을 가진 선택지 값이 있는 Simulink.VariantVariable ''{0}''을(를) 처리할 수 없습니다. 필수 플러그인 ''{1}''을(를) 불러오지 않았습니다.</entry>
    <entry key="VCtrlWithCCVATProtectedModel">보호 모델에는 'ActivationTime'이 '코드 컴파일'로 설정된 Simulink.VariantControl 객체 ''{0}''이(가) 지원되지 않습니다. 모델을 보호하려면 '코드 컴파일' 이외의 Variant 활성화 시점을 사용하십시오.</entry>
    <entry key="InvalidBankPropName">Unrecognized property name ''{0}'' for Simulink.VariantBank.</entry>
    <entry key="InvalidBankPropTypeVConds">Property value ''{0}'' is not supported for property ''{1}'' of Simulink.VariantBank. Property ''{1}'' value must be a cell array of character vectors.</entry>
    <entry key="InvalidBankPropType">Property value ''{0}'' is not supported for property ''{1}'' of Simulink.VariantBank. Property ''{1}'' value must be a character vector or a string.</entry>
    <entry key="InvalidBankCInfoPropName">Unrecognized property name ''{0}'' for Simulink.VariantBankCoderInfo.</entry>
    <entry key="InvalidCInfoProp">''{1}'' value ''{0}'' must be a valid variable name corresponding to Simulink.VariantBankCoderInfo object.</entry>
    <entry key="InvalidBankProp">'Bank' value ''{0}'' must be a variable name corresponding to Simulink.VariantBank object.</entry>
    <entry key="BankMustBeScalarString">'Bank' value must be the name of a Simulink.VariantBank object.</entry>
    <entry key="BankNotFound">동일한 작업 공간에서 ''{1}''에 지정된 Simulink.VariantBank 객체 ''{0}''을(를) 찾을 수 없습니다.</entry>
    <entry key="BankCoderInfoNotFound">동일한 작업 공간에서 ''{1}''에 지정된 Simulink.VariantBankCoderInfo 객체 ''{0}''을(를) 찾을 수 없습니다.</entry>
    <entry key="ExportPreviousVariantBank">Simulink.VariantBank ''{0}''의 'AllChoicesCoderInfo' 속성값과 'ActiveChoiceCoderInfo' 속성값이 다릅니다. 이전 버전으로 모델을 내보내는 동안 'AllChoicesCoderInfo' 값 ''{1}''을(를) 사용하여 'BankCoderInfo' 속성을 설정했습니다.</entry>
    <entry key="HeaderFileNotGiven">Simulink.VariantBankCoderInfo에 헤더 파일을 제공해야 합니다. 뱅크 ''{0}''이(가) 여러 모델 간에 사용되기 때문입니다.</entry>
    <entry key="DefnFileNotGiven">Simulink.VariantBankCoderInfo에 정의 파일을 제공해야 합니다. 뱅크 ''{0}''이(가) 여러 모델 간에 사용되기 때문입니다.</entry>
    <entry key="InvalidKeywordBank">Simulink.VariantBank에 대한 Variant 조건 ''{0}''이(가) 유효하지 않습니다.</entry>
    <entry key="BankChoiceSizeMismatch">Simulink.VariantBank ''{0}''의 Variant 조건이 Simulink.VariantVariable ''{1}''의 Variant 조건과 일치하지 않습니다.</entry>
    <entry key="BankChoiceCondMismatch">Simulink.VariantVariable ''{1}''의 Variant 조건 ''{0}''이(가) Simulink.VariantBank ''{2}''에 존재하지 않습니다.</entry>
    <entry key="ParamChoiceCondMismatch">Simulink.VariantBank ''{1}''의 Variant 조건 ''{0}''이(가) Simulink.VariantVariable ''{2}''에 존재하지 않습니다.</entry>
    <entry key="BankWithSlParamVals">Simulink.VariantVariable ''{1}''에 대해서는 Simulink.VariantBank ''{0}''이(가) 지원되지 않습니다. 선택지 값으로 Simulink.Parameter 변수를 사용하기 때문입니다.</entry>
    <entry key="SpecSCWithBank">Simulink.VariantBank ''{0}''은(는) 지원되지 않습니다. 사양 ''{1}''이(가) Simulink.VariantVariable ''{2}''에 대한 스토리지 클래스를 제공하기 때문입니다.</entry>
    <entry key="VariantBankWithXIL">SIL 및 PIL 시뮬레이션 모드에는 Simulink.VariantBank ''{0}''이(가) 지원되지 않습니다.</entry>
    <entry key="VariantBankWithAutosarNotSupported">AUTOSAR 코드 생성에는 Simulink.VariantBank ''{1}''과(와) 함께 Simulink.VariantVariable ''{0}''을(를) 사용할 수 없습니다.</entry>
    <entry key="VariantBankWithProtectedModel">보호 모델을 만들 때는 Simulink.VariantBank ''{0}''이(가) 지원되지 않습니다.</entry>
    <entry key="VariantBankWithModelReference">Simulink.VariantBank ''{0}''은(는) 참조된 모델을 포함하는 모델 계층 구조에서 지원되지 않습니다.</entry>
    <entry key="VariantBankNotStartup">Simulink.VariantVariable ''{0}''에 Bank 속성이 설정되어 있으며 연결된 Simulink.VariantControl의 활성화 시점은 ''{1}''입니다. 이는 허용되지 않습니다. 연결된 활성화 시점이 ''시작''인 경우에만 Bank 속성을 지정할 수 있습니다.</entry>
    <entry key="VariantBankExtModeNotXCP">모델에 Bank 속성이 설정된 Simulink.VariantVariable ''{0}''이(가) 포함된 경우 통신 채널의 전송 계층에서 XCP를 사용할 때에만 외부 모드 시뮬레이션이 지원됩니다.</entry>
    <entry key="VariantCondsNotCell">Simulink.VariantBank의 'VariantConditions' 속성은 셀형 배열이어야 합니다.</entry>
    <entry key="NameNotValidIdentifier">Simulink.VariantBank의 'Name' 속성은 "rt"로 시작하지 않는 유효한 C 식별자여야 합니다.</entry>
    <entry key="FileNotValidIdentifier">Simulink.VariantBankCoderInfo의 ''{0}'' 속성은 "rt"로 시작하지 않는 유효한 C 식별자여야 합니다.</entry>
    <entry key="VariantBankCInfoInvalidQualifier">Simulink.VariantBank ''{0}''의 'ActiveChoiceCoderInfo' 속성은 'Const' 또는 'ConstVolatile' 유형 한정자를 포함해야 합니다. ''{0}''의 'AllChoicesCoderInfo' 속성에 'Const' 한정자가 포함되어 있기 때문입니다.</entry>
    <entry key="SlVariantVariableBankDesc">'Bank' 파라미터에 Simulink.VariantBank 변수 이름을 지정하여 Variant 파라미터 뱅크를 Simulink.VariantVariable 객체와 연결합니다.</entry>
    <entry key="SlVariantBankDDGDesc">Variant 파라미터 뱅크의 속성을 지정합니다. 지정된 Variant 파라미터 뱅크의 모든 Simulink.VariantVariable 객체(Variant 파라미터)에는 동일한 Variant 조건 세트가 있습니다. Simulink.VariantBank 객체는 Simulink.VariantVariable의 'Bank' 속성과 연결되어야 합니다.</entry>
    <entry key="SlVariantBankCInfoDDGDesc">Variant 파라미터 뱅크 코더 정보의 속성을 지정합니다. Simulink.VariantBankCoderInfo 객체는 Simulink.VariantBank의 'AllChoicesCoderInfo' 또는 'ActiveChoiceCoderInfo' 속성과 연결되어야 합니다.</entry>
    <entry key="SlVariantBankCInfoDescInBankDDG">Simulink.VariantBankCoderInfo 변수 이름을 지정하여 Simulink.VariantBank 객체에 대한 코드 생성 속성을 설정합니다. 'AllChoicesCoderInfo' 속성은 코드 생성 특성을 구조체형 배열에 적용하는 반면, 'ActiveChoiceCoderInfo' 속성은 이를 포인터 변수에 적용합니다. 이 객체를 수정하면 이를 사용하는 모든 Variant Bank 객체에 영향을 줍니다.</entry>
    <entry key="SlVariantBankDDGSameCoderInfoMsg">Simulink.VariantBank의 'AllChoicesCoderInfo' 속성값과 'ActiveChoiceCoderInfo' 속성값이 동일합니다. 해당 Simulink.VariantBankCoderInfo 객체를 보려면 'AllChoicesCoderInfo'의 확장 버튼을 사용하십시오.</entry>
    <entry key="SlVariantBankDDGExpandBtnTooltip">세부 정보 표시</entry>
    <entry key="SlVariantBankDDGCollapseBtnTooltip">세부 정보 숨기기</entry>
    <entry key="SlVariantBankName">이름</entry>
    <entry key="SlVariantBankDesc">설명</entry>
    <entry key="SlVariantBankVarCond">Variant 조건</entry>
    <entry key="SlVariantBankCoderInfo">뱅크 코더 정보 </entry>
    <entry key="SlVariantBankArrCoderInfo">모든 선택지 코더 정보 </entry>
    <entry key="SlVariantBankPtrCoderInfo">활성 선택지 코더 정보 </entry>
    <entry key="SlVariantBankCInfoHdrFile">헤더 파일</entry>
    <entry key="SlVariantBankCInfoDefFile">정의 파일</entry>
    <entry key="SlVariantBankCInfoPreSt">사전 명령문</entry>
    <entry key="SlVariantBankCInfoPostSt">사후 명령문</entry>
    <entry key="SlVariantBankCInfoQualifier">한정자</entry>
    <entry key="SlVariantBankInvalidCondition">Simulink.VariantBank ''{1}''의 Variant 조건 ''{0}''은(는) 유효한 부울 표현식이 아닙니다.</entry>
    <entry key="VariantBankInvalidFileCombination">Simulink.VariantBank ''{0}''의 'AllChoicesCoderInfo' 및 'ActiveChoiceCoderInfo' 속성은 헤더 및 정의 파일이 동일해야 합니다.</entry>
    <entry key="VariantBankConflictingHeaderFileCombination">Simulink.VariantBank ''{1}''의 'ActiveChoiceCoderInfo' 속성에 지정된 헤더 파일 ''{0}''이(가) Simulink.VariantBank ''{2}''의 'AllChoicesCoderInfo' 속성에 있는 헤더 파일과 충돌합니다. 코드를 생성하려면 ''{1}''의 'ActiveChoiceCoderInfo'에 있는 헤더 파일 이름을 변경하십시오.</entry>
    <entry key="VarCondNotScalarString">'VariantConditions' 속성에 정의된 조건은 string형 스칼라여야 합니다.</entry>
    <entry key="SlVariantBankNoConditionsActive">Simulink.VariantVariable ''{1}''에 사용된 Simulink.VariantBank ''{0}''은(는) 다음 Variant 조건을 갖지만, 이러한 조건 중 활성화된 조건이 없습니다: ''{2}''.</entry>
    <entry key="VariantVariableInSSRefWithSLDD">서브시스템 참조 ''{1}''에 연결된 데이터 사전에서 Simulink.VariantVariable ''{0}''을(를) 정의하는 것은 지원되지 않습니다. 모델의 기본 작업 공간 또는 데이터 사전에서 ''{0}''을(를) 정의하십시오.</entry>
    <entry key="VariantControlWithSharedSlParam">모델 ''{1}''에 있는 Variant 제어 ''{0}''의 값을 설정하는 데 사용된 Simulink.Parameter 객체가 모델의 다른 곳 또는 다른 Variant 제어 객체에서 사용되었습니다. 별도의 Simulink.Parameter 객체를 만들어 Variant 제어 값을 설정하십시오. Simulink.Parameter 객체의 복사본을 만들려면 copy 메서드를 사용하십시오.</entry>
    <entry key="VariantVariableWithPartialVCtrlMarkedAsModelArg">Simulink.VariantVariable ''{0}''에 ''{1}'' Variant 제어가 있는데, 그중 ''{2}''만 모델 인수로 구성되어 있습니다. ''{0}''에서 사용하는 모든 Variant 제어는 모델 인수로 구성해야 합니다.</entry>
    <entry key="VariantVariableWithSpecMarkedAsModelArg">Simulink.VariantVariable ''{1}''에는 모델 인수로 구성된 사양 객체 ''{2}''이(가) 있는데, 이는 지원되지 않습니다. 모델 ''{0}''에 대한 코드를 시뮬레이션하거나 생성하려면 ''{2}''을(를) 모델 인수로 설정하면 안 됩니다.</entry>
    <entry key="InstanceSpecificVariantVariableWithSpec">Simulink.VariantVariable ''{1}''에는 모델 인수로 구성된 ''{2}'' Variant 제어가 있으며, 지원되지 않는 'Specification' 속성도 설정되어 있습니다. 모델 ''{0}''의 코드를 시뮬레이션하거나 생성하려면 ''{1}''에서 'Specification' 속성을 제거하십시오.</entry>
    <entry key="VariantVariableWithInstanceSpecificChoiceVal">Simulink.VariantVariable ''{1}''에는 모델 인수로 구성된 선택지 ''{2}''이(가) 있는데, 이는 지원되지 않습니다. 모델 ''{0}''에 대한 코드를 시뮬레이션하거나 생성하려면 ''{2}''을(를) 모델 인수로 설정하면 안 됩니다.</entry>
    <entry key="VariantBankInModelWorkspace">Simulink.VariantVariable ''{1}''에 'Bank' 속성이 설정되어 있는데, 이는 모델 작업 공간에서 지원되지 않습니다. 모델 ''{0}''에 대한 코드를 시뮬레이션하거나 생성하려면 ''{1}''에서 'Bank' 속성을 제거하거나 기본 작업 공간 또는 모델과 연결된 데이터 사전에 ''{1}''을(를) 정의하십시오.</entry>
    <entry key="VParamAccelAndRapidAccelModelWorkspace">Parameter Writer 블록을 사용하여 Simulink.VariantVariable ''{1}''의 조건식에 사용되는 모델 작업 공간 변수 ''{0}''에 쓰는 것은 액셀러레이터 및 고속 액셀러레이터 시뮬레이션 모드에서 지원되지 않습니다</entry>
    <entry key="InstanceSpecificVariantVariablePartial">Simulink.VariantVariable ''{1}''에 모델 인수로 구성된 ''{2}'' Variant 제어가 있고, 그중 ''{3}''에 다중 수준 모델 계층 구조에서 지원되지 않는 'auto' 스토리지 클래스가 있으므로 ''{0}''의 코드를 생성할 수 없습니다. 모델 ''{0}''의 코드를 생성하려면 ''{3}''의 스토리지 클래스를 'Model Default'로 변경하십시오.</entry>
    <entry key="UnusedBankedVariantVariable">Simulink.VariantBank ''{1}''의 일부인 Variant 파라미터 '{'''{0}'''}'은(는) 모델 ''{2}''의 모델 계층 구조에서 사용되지 않습니다. 생성된 코드에서 파라미터 '{'''{0}'''}'을(를) 제외하려면 파라미터의 'Bank' 속성을 설정 해제하거나 ''{2}''와 연결된 작업 공간에서 파라미터를 제거하십시오.</entry>
    <entry key="InvalidBankStructure">Simulink.VariantBank ''{0}''이(가) 모델 참조 전체에서 일관되지 않게 정의되었습니다. 모델 ''{1}''은(는) ''{0}''을(를) Variant 파라미터 '{'''{2}'''}'(으)로 정의하는 반면, 모델 ''{3}''은(는) 이를 '{'''{4}'''}'(으)로 정의합니다. Variant 파라미터 '{'''{5}'''}'은(는) 모델 ''{3}''에 표시되지 않습니다. \nVariant 파라미터 '{'''{5}'''}'이(가) 모델 ''{3}''에 액세스할 수 있는지 확인하고 캐시된 정보(예: ''slprj'' 디렉터리 및 Simulink 캐시 파일)를 삭제한 후 모델 ''{3}''을(를) 재빌드하십시오.</entry>
    <entry key="VariantVariableInXILWithoutModelArg">Simulink.VariantVariable ''{1}''에 모델 인수로 구성되지 않은 Variant 제어 ''{2}''이(가) 있는데, 이는 SIL 및 PIL 시뮬레이션 모드에서 지원되지 않습니다. SIL 또는 PIL 모드에서 모델 ''{0}''을(를) 시뮬레이션하려면 ''{2}''을(를) 모델 인수로 설정해야 합니다.</entry>
    <entry key="VariantVariableInMdlWksCPPCodeGen">Simulink.VariantVariable ''{1}''이(가) 모델 작업 공간에 정의되어 있는데, 이는 C++ 코드 생성에 지원되지 않습니다. 모델 ''{0}''에 대한 코드를 생성하려면 기본 작업 공간 또는 모델과 연결된 데이터 사전에 ''{1}''을(를) 정의하십시오.</entry>
  </message>
</rsccat>
