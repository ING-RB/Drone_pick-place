<?xml version="1.0" encoding="UTF-8"?>
<!--Copyright 2025 The MathWorks, Inc.-->

<rsccat xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.0" locale="ko_KR" product="Simulink" xsi:noNamespaceSchemaLocation="../../resources/schema/msgcat.xsd">
  <message>
    <entry key="SL_DSCPT_DATETIMECLOCKREADER">선택한 DateTime Clock 블록의 시뮬레이션 달력 날짜 및 시간을 출력합니다.</entry>
    <entry key="SL_DSCPT_DATETIMECLOCK">현재 달력 날짜 및 시간을 DateTime 데이터형으로 계산합니다. 시점 및 스토리지 데이터형 같은 특성을 지정하십시오.</entry>
    <entry key="SL_DSCPT_DATETIMETYPECONVERTER">DateTime형 신호의 시점 및/또는 스토리지 데이터형을 변환합니다.\n\n시간 표준 간에 변환하려면 DateTime Time Standard Converter 블록을 사용하십시오.</entry>
    <entry key="SL_DSCPT_DATETIMEFORMATTER"> 달력 시간 또는 DateTime형 신호를 ''형식'' 파라미터로 지정된 형식대로 string형으로 변환합니다.</entry>
    <entry key="SL_DSCPT_DATETIMETOEPOCHTIME">신호 선의 값을 추출하여 DateTime형 신호의 스토리지 데이터형으로 출력합니다.</entry>
    <entry key="SL_DSCPT_DATETIMETOCALENDAR">DateTime형 신호의 연도(y), 월(M), 일(d), 시간(H), 분(m), 초(s)를 출력합니다.</entry>
    <entry key="SL_DSCPT_EPOCHTIMETODATETIME">신호 선의 값을 추출하여 ''출력 데이터형'' 파라미터에 지정된 DateTime 데이터형으로 출력합니다.</entry>
    <entry key="SL_DSCPT_TIMESTANDARDCONVERTER"> DateTime형 신호의 시간 표준을 변환합니다.\n\n시점 및/또는 스토리지 데이터형 간에 변환하려면 DateTime Data Type Converter 블록을 사용하십시오.</entry>
    <entry key="InvalidTimeEpoch">''{0}''에 대한 지원 범위가 ''{1}''에서 ''{2}'' 사이인데 지정된 Epoch는 ''{3}''이어서 유효하지 않습니다.</entry>
    <entry key="InvalidTimeRange">시간 시스템 ''{0}''에 대한 지원 범위가 ''{1}''에서 ''{2}'' 사이인데 지정된 범위는 ''{3}''에서 ''{4}'' 사이여서 유효하지 않습니다.</entry>
    <entry key="InvalidRange">최솟값은 시간 범위의 최댓값보다 작아야 합니다.</entry>
    <entry key="OutOfRangeTimeConversion">날짜 ''{0}''을(를) 시간 시스템 ''{1}''에서 ''{2}''(으)로 변환하는 것은 지원되지 않습니다. 대상 시간 시스템의 유효한 범위는 ''{3}''에서 ''{4}'' 사이이기 때문입니다.</entry>
    <entry key="InvalidTimeValue">시간 값은 요소를 6개 가진 double형 벡터(즉, [연도, 월, 일, 시간, 분, 초])여야 합니다. 연도, 월, 일, 시간, 분은 정수여야 합니다. 초는 소수여야 합니다.</entry>
    <entry key="InvalidStartDateTimeValue">블록 {0}의 시작 날짜/시간 값은 요소를 6개 가진 double형 벡터(즉, [연도, 월, 일, 시간, 분, 초])여야 합니다. 연도, 월, 일, 시간, 분은 정수여야 합니다. 초는 소수여야 합니다.</entry>
    <entry key="BlockDoesNotSupportBusInputContainingDateTime">블록 ''{1}''의 &lt;sldiag objui="inport" objparam="{0,number,integer}" objname="{1}"&gt;{0,number,integer}번 입력 포트&lt;/sldiag&gt;에는 Datetime형이 포함된 버스 신호가 지원되지 않습니다. 지원되는 데이터형 목록은 관련 블록 도움말 문서 페이지를 참조하십시오.</entry>
    <entry key="BlockDoesNotSupportDateTimeInput">블록 ''{1}''의 &lt;sldiag objui="inport" objparam="{0,number,integer}" objname="{1}"&gt;{0,number,integer}번 입력 포트&lt;/sldiag&gt;에는 Datetime형 신호가 지원되지 않습니다. 지원되는 데이터형 목록은 관련 블록 도움말 문서 페이지를 참조하십시오.</entry>
    <entry key="BlockDoesNotSupportDateTimeOutput">블록 ''{1}''의 &lt;sldiag objui="outport" objparam="{0,number,integer}" objname="{1}"&gt;{0,number,integer}번 출력 포트&lt;/sldiag&gt;에는 Datetime형의 신호가 지원되지 않습니다. 지원되는 데이터형 목록은 관련 블록 도움말 문서 페이지를 참조하십시오.</entry>
    <entry key="DateTimeClockInternalErrorReferencedBlockNotFound">지정된 블록 ''{1}''이(가) ''{0}'' 블록에서 발견되지 않았습니다. ''{1}''은(는) 블록 ''{0}''에 상대적인 유효 블록 경로여야 합니다. 계층의 하위를 나타내려면 ''/''를 사용하십시오.</entry>
    <entry key="ModelConfigIncorrectFormat">Invalid date and time specified for model configuration parameter ''DateTime at simulation time zero''. Enter a real double array of size six: [YYYY MM DD HH MM SS].</entry>
    <entry key="DateTimeClockModelConfigIncorrectFormat">DateTimeClock 블록 ''{0}''을(를) 사용할 경우 모델 구성 파라미터 ''시뮬레이션 시간 0에서의 날짜/시간''에 지정된 날짜와 시간이 유효하지 않습니다. 크기가 6인 double형 실수 배열을 입력하십시오: [YYYY MM DD HH MM SS].</entry>
    <entry key="ModelConfigIncorrectValue">Invalid date and time specified for model configuration parameter ''DateTime at simulation time zero''.</entry>
    <entry key="BadTAIModelConfig">유효하지 않은 TAI 타임스탬프입니다. 가장 일찍 허용된 타임스탬프는 1972-01-01T00:00:10입니다.</entry>
    <entry key="BadYearModelConfig">유효한 연도가 아닙니다. 값은 1972와 9999 사이의 정수여야 합니다</entry>
    <entry key="BadYear">유효한 연도가 아닙니다. 값은 1400과 9999 사이의 정수여야 합니다</entry>
    <entry key="BadMonth">유효한 월이 아닙니다. 값은 1과 12 사이의 정수여야 합니다</entry>
    <entry key="BadDayOfMonth">유효한 월중 일자가 아닙니다. 값은 1과 (28,29,30,31)(연도와 월에 따라 다름) 사이의 정수여야 합니다.</entry>
    <entry key="BadHour">유효한 시간이 아닙니다. 값은 0과 23 사이의 정수여야 합니다</entry>
    <entry key="BadMinute">유효한 분이 아닙니다. 값은 0과 59 사이의 정수여야 합니다.</entry>
    <entry key="BadSecond">Invalid second. Value must be a real number that is at least 0 and less than 60.</entry>
    <entry key="BadSecondUTC">유효한 초가 아닙니다. 값은 0 이상이고 61보다 작은 실수여야 합니다.</entry>
    <entry key="BadLeapSecond">유효한 윤초 타임스탬프가 아닙니다. 초가 [60, 61) 범위에 있으면 시간은 6월 30일 또는 12월 31일의 23:59여야 합니다.</entry>
    <entry key="BadLeapSecondBoolTimeStandard">유효한 윤초 플래그가 아닙니다. DateTime형 신호는 시간 표준이 ''UTC''인 경우에만 윤초 부울로 패키징할 수 있습니다.</entry>
    <entry key="BadLeapSecondBoolTimestamp">유효한 윤초 플래그가 아닙니다. DateTime형 신호가 윤초로 표시된 경우 시간은 6월 30일 또는 12월 31일의 [23:59:60, 23:59:61) 범위 내에 있어야 합니다.</entry>
    <entry key="BlockSignalInvalidDateTime">블록 ''{1}''의 {0,number,integer}번 입력 포트에서 DateTime형 신호가 유효하지 않습니다.</entry>
    <entry key="DateTimeClockStorageDataTypeTooSmall">블록 ''{0}''에 선택된 스토리지 데이터형이 너무 작아 모델 구성 파라미터 ''시뮬레이션 시간 0에서의 날짜/시간''에 지정된 날짜/시간을 표현할 수 없습니다.</entry>
    <entry key="DateTimeClockRollOver">블록 ''{0}''에서 스토리지 데이터형을 초과하는 DateTime형 값으로 인해 클록 롤오버가 발생했습니다.</entry>
    <entry key="DateTimeStorageRollOver"> DateTime형으로 저장된 값이 포화되었으며, 블록 ''{0}''에서 롤오버가 발생했습니다.</entry>
    <entry key="MultipleFractionalSecondTokens">형식 ''{0}''에 여러 개의 소수 초 지정자(''S'')가 포함되어 있습니다. 날짜/시간 형식은 1개의 소수 초 지정자만 가질 수 있습니다.</entry>
    <entry key="InvalidDayOfWeekToken">형식 ''{0}''에 유효하지 않은 요일 지정자(''e'')가 포함되어 있습니다. 요일 지정자는 ''e'', ''ee'', ''eee'', ''eeee'' 또는 ''eeeee''여야 합니다.</entry>
    <entry key="InvalidFormatChar">형식 ''{0}''에 지원되지 않는 기호 ''{1}''이(가) 포함되어 있습니다. 영문자 A-Z 또는 a-z를 특정 형식으로 출력하려면 작은따옴표로 묶으십시오.</entry>
    <entry key="BlockInvalidFormat">Invalid custom format ''{1}'' in block ''{0}''.</entry>
    <entry key="DateTimeObjectInvalidFormat">''{0}''은(는) 유효하지 않은 형식입니다.</entry>
    <entry key="NoTimeStandardAvailable">블록 ''{0}''의 형식 ''{1}''을(를) 사용하려면 시간 표준이 필요합니다. ''날짜/시간''에 대한 입력 모드를 변경하거나 ''t'' 형식 지정자가 없는 형식을 선택하십시오.</entry>
    <entry key="InputMustBeDateTime">Signal at &lt;sldiag objui="inport" objparam="{0,number,integer}" objname="{1}"&gt;input port {0,number,integer}&lt;/sldiag&gt; of block ''{1}'' must be of data type DateTime.</entry>
    <entry key="OutputMustBeDateTime">블록 ''{1}''의 &lt;sldiag objui="outport" objparam="{0,number,integer}" objname="{1}"&gt;{0,number,integer}번 출력 포트&lt;/sldiag&gt;에 있는 신호는 DateTime형이어야 합니다.</entry>
    <entry key="PortValidityDateTimeFieldDataTypeErrorMessage">포트의 데이터형은 double, single, int8, uint8, int16, uint16, int32, uint32, int64 또는 uint64여야 합니다. 그런데 현재 포트 데이터형은 {0}입니다.</entry>
    <entry key="DoesNotSupportTimeStandardConversion"> 블록 ''{0}''에서는 서로 다른 시간 표준 간의 변환이 지원되지 않습니다. 이 블록은 한 시점에서 다른 시점으로의 변환 또는 한 스토리지 데이터형에서 다른 스토리지 데이터형으로의 변환만 지원합니다.</entry>
    <entry key="IncorrectInputTimeStandard">블록 ''{0}''에는 시간 표준 ''{1}''을(를) 갖는 입력 DateTime형 신호와 시간 표준 ''{2}''을(를) 갖는 출력 DateTime형 신호가 필요합니다. 그런데 &lt;sldiag objui="inport" objparam="{3,number,integer}" objname="{0}"&gt;{3,number,integer}번 입력 포트&lt;/sldiag&gt;의 신호는 시간 표준 ''{4}''을(를) 갖습니다.</entry>
    <entry key="IncorrectOutputTimeStandard">블록 ''{0}''에는 시간 표준 ''{1}''을(를) 갖는 입력 DateTime형 신호와 시간 표준 ''{2}''을(를) 갖는 출력 DateTime형 신호가 필요합니다. 그런데 &lt;sldiag objui="outport" objparam="{3,number,integer}" objname="{0}"&gt;{3,number,integer}번 출력 포트&lt;/sldiag&gt;의 신호는 시간 표준 ''{4}''을(를) 갖습니다.</entry>
    <entry key="TimestampIsNegativeLeapSecond">타임스탬프가 음의 윤초를 나타내므로 유효하지 않습니다.</entry>
    <entry key="BlockInvalidTimeStandardConversion">블록 ''{0}''에 유효하지 않은 시간 표준 변환입니다.</entry>
    <entry key="BlockInputNonUTCWithBusSignal">블록 ''{0}''에서 입력값의 시간 표준이 ''UTC''가 아닌 경우 입력값은 비 버스 신호여야 합니다.</entry>
    <entry key="BlockInputUTCWithNonBusSignal">블록 ''{0}''에서 입력값의 시간 표준이 ''UTC''인 경우 입력값은 요소를 2개 가진 가상 버스여야 합니다.</entry>
    <entry key="BlockOutputNonUTCWithBusSignal">블록 ''{0}''에서 출력값의 시간 표준이 ''UTC''가 아닌 경우 출력값은 비 버스 신호여야 합니다.</entry>
    <entry key="BlockOutputUTCWithNonBusSignal">블록 ''{0}''에서 출력값의 시간 표준이 ''UTC''인 경우 출력값은 요소를 2개 가진 가상 버스여야 합니다.</entry>
    <entry key="DateTimeInputPort2Boolean"> 블록 ''{0}''의 입력 포트 2의 데이터형은 부울이어야 합니다.</entry>
    <entry key="DateTimeOutputPort2Boolean"> 블록 ''{0}''의 출력 포트 2의 데이터형은 부울이어야 합니다.</entry>
    <entry key="EpochTimeToDateTimeStorageDtMismatch">입력 신호 데이터형은 블록 ''{0}''의 ''출력 데이터형''에 지정된 ''StorageDataType''과 일치해야 합니다.</entry>
    <entry key="EpochTimeToDateTimeNonUTCWithBusSignal">In block ''{0}'', the input must be a nonbus signal if the time standard of the output is not ''UTC''.</entry>
    <entry key="EpochTimeToDateTimeUTCWithNonBusSignal">블록 ''{0}''에서 출력값의 시간 표준이 ''UTC''인 경우 입력값은 요소를 2개 가진 가상 버스여야 합니다.</entry>
    <entry key="TimePointMode">시점:</entry>
    <entry key="TimePointModeUNIX">Unix Epoch 이후의 경과 시간(초)</entry>
    <entry key="TimePointModeNTP">NTP Epoch 이후의 경과 시간(초)</entry>
    <entry key="TimePointModeTAI">TAI Epoch 이후의 경과 시간(초)</entry>
    <entry key="TimePointModeJulian">율리우스 적일</entry>
    <entry key="TimePointModeMJD">수정 율리우스 적일</entry>
    <entry key="TimePointModeJ2000">J2000.0 날짜</entry>
    <entry key="Epoch">Epoch:</entry>
    <entry key="TimeStandard">시간 표준:</entry>
    <entry key="TimeStandardConversion">시간 표준 변환:</entry>
    <entry key="StorageDataType">스토리지 데이터형:</entry>
    <entry key="DiagnosticForClockRollOver">클록 롤오버 진단:</entry>
    <entry key="ClockName">DateTime Clock 이름:</entry>
    <entry key="StartDateTimeSource">시작 날짜 및 시간 소스:</entry>
    <entry key="StartTimeFromConfigParam">모델에서 상속</entry>
    <entry key="StartTimeFromEditBox">시작 값 지정</entry>
    <entry key="DTCBlockStartDateTime">시작 값:</entry>
    <entry key="DateTimeClockReference">DateTime Clock 참조</entry>
    <entry key="DateTimeClockBlockName">DateTime Clock 이름:</entry>
    <entry key="ShowLeapSecondPort">윤초 포트 표시</entry>
    <entry key="ShowLeapSecondPorts">윤초 포트 표시</entry>
    <entry key="UseLeapSecondTable">윤초 테이블 사용</entry>
    <entry key="LeapSecondTable">윤초 테이블</entry>
    <entry key="AccumulatedLeapSeconds">누적 윤초:</entry>
    <entry key="DateTimeClockSpecificationTab">사양</entry>
    <entry key="DateTimeClockTimeStandardTab">시간 표준</entry>
    <entry key="DateTimeFormatterFormat">형식:</entry>
    <entry key="DateTimeFormatterInputMode">입력 모드:</entry>
    <entry key="FormatCustom">사용자 지정</entry>
    <entry key="InputModeDateTime">날짜/시간</entry>
    <entry key="InputModeCalendar">달력 시간</entry>
    <entry key="OutputDayOfWeek">요일 출력</entry>
    <entry key="OutputYearTypePrompt">연도 데이터형:</entry>
    <entry key="OutputMonthTypePrompt">월 데이터형:</entry>
    <entry key="OutputDayTypePrompt">일 데이터형:</entry>
    <entry key="OutputHourTypePrompt">시간 데이터형:</entry>
    <entry key="OutputMinuteTypePrompt">분 데이터형:</entry>
    <entry key="OutputSecondTypePrompt">초 데이터형:</entry>
    <entry key="OutputDayOfWeekTypePrompt">요일 데이터형:</entry>
    <entry key="DTClockBlockNotFound">이름이 ''{0}''인 DateTime Clock 블록을 찾을 수 없습니다.</entry>
    <entry key="DTClockBlockNameInvalidName">''{0}''에 지정된 DateTime Clock 이름이 유효하지 않습니다. 유효한 식별자는 영문자로 시작하고, 공백이나 특수 문자를 포함하지 않으며, 최대 {1,number,integer}자여야 합니다.</entry>
    <entry key="ScopedDTAttribMismatch1">DateTime Clock 블록 ''{0}'' 및 ''{1}''이(가) 동일한 클록 이름 ''{2}''을(를) 지정하고 ''{1}''에 DateTime Clock 참조 파라미터가 선택되어 있으므로, 이 두 블록은 동일한 신호 특성을 지정해야 합니다.</entry>
    <entry key="ScopedDTRTW">DateTime Clock 참조에 대해서는 코드 생성이 지원되지 않습니다.</entry>
    <entry key="ScopedDTAttribMismatch2">DateTime Clock 블록 ''{0}'' 및 ''{1}''이(가) 동일한 클록 이름 ''{2}''을(를) 지정하고 두 블록에 모두 DateTime Clock 참조 파라미터가 선택되어 있으므로, 이 두 블록은 동일한 신호 특성을 지정해야 합니다.</entry>
    <entry key="ScopedDTDataTypeMismatch">''{0}'' 및 ''{1}''이(가) 데이터형을 각각 ''{2}'' 및 ''{3}''(으)로 설정합니다.</entry>
    <entry key="BlockInputVirtBusNotTwoElements">블록 ''{1}''의 &lt;sldiag objui="inport" objparam="{0,number,integer}" objname="{1}"&gt;{0,number,integer}번 입력 포트&lt;/sldiag&gt;에 연결된 버스는 2개의 신호를 포함해야 합니다.</entry>
    <entry key="BlockInputVirtBusHasBusElements">블록 ''{1}''의 &lt;sldiag objui="inport" objparam="{0,number,integer}" objname="{1}"&gt;{0,number,integer}번 입력 포트&lt;/sldiag&gt;에는 2개의 비 버스 신호로 구성된 버스가 있어야 합니다.</entry>
    <entry key="TimeUnitEpochMismatch">''{0}'' and ''{1}'' is an invalid time unit-epoch pair. The time unit ''s'' (Seconds since epoch) requires an epoch of ''u'' (Unix), ''n'' (NTP), or ''t'' (TAI), and the time unit ''j'' (Julian days since epoch) requires an epoch of ''j'' (Julian), ''m'' (Modified Julian), or ''2'' (J2000.0).</entry>
    <entry key="JulianDayTUOnlySupportDoubleSDT">유효하지 않은 스토리지 데이터형임: ''{1}''. 시점이 ''{0}''인 경우 스토리지 데이터형을 ''double''로 설정하십시오.</entry>
    <entry key="TDBTSOnlySupportJulianDayTU">Invalid time point: ''{0}''. When time standard is ''TDB'', set time point to ''Julian date'', ''Modified Julian date'', or ''J2000.0 date''.</entry>
    <entry key="TDBTSOnlySupportDoubleSDT">유효하지 않은 스토리지 데이터형임: ''{0}''. 시간 표준이 ''TDB''인 경우 스토리지 데이터형을 ''double''로 설정하십시오.</entry>
    <entry key="TTTSOnlySupportNonIntegerSDT">유효하지 않은 스토리지 데이터형임: ''{0}''. 시간 표준이 ''TT''인 경우 스토리지 데이터형을 ''double'' 또는 고정소수점 데이터형으로 설정하십시오.</entry>
    <entry key="InvalidDateTimeTypeNumConstructorArgs">{0,number,integer}은(는) DateTimeType 생성자에 유효하지 않은 인수 개수입니다. 지원되는 생성자는 Simulink.DateTimeType() 및 Simulink.DateTimeType(''TimePoint'', ModeOption, ''StorageDataType'', ModeOption, ''TimeStandard'', ModeOption)입니다. 이름-값 쌍은 임의 순서일 수 있습니다.</entry>
    <entry key="InconsistentObjectTimePointMode">배열 인덱스 ''{0}''에서 ''TimePoint'' 속성에 대해 불일치가 발생했습니다. 결합할 모든 객체는 ''TimePoint'', ''StorageDataType'', ''TimeStandard'', ''Format'' 속성이 동일해야 합니다.</entry>
    <entry key="InconsistentObjectStorageDataType">A mismatch occurs for ''StorageDataType'' property at array index ''{0}''. All objects to be concatenated must have the same ''TimePoint'', ''StorageDataType'', ''TimeStandard'', and ''Format'' properties.</entry>
    <entry key="InconsistentObjectTimeStandard">배열 인덱스 ''{0}''에서 ''TimeStandard'' 속성에 대해 불일치가 발생했습니다. 결합할 모든 객체는 ''TimePoint'', ''StorageDataType'', ''TimeStandard'', ''Format'' 속성이 동일해야 합니다.</entry>
    <entry key="InconsistentObjectFormat">배열 인덱스 ''{0}''에서 ''Format'' 속성에 대해 불일치가 발생했습니다. 결합할 모든 객체는 ''TimePoint'', ''StorageDataType'', ''TimeStandard'', ''Format'' 속성이 동일해야 합니다.</entry>
    <entry key="InvalidDateTimeTypeName">Invalid DateTime data type name. Names must be of the form ''datetime_[TIMEUNIT][EPOCH][TIMESTANDARD]_[STORAGEDATATYPE]'', where TIMEUNIT must be one of ''s'', or ''j''; EPOCH must be one of ''u'', ''n'', ''t'', ''j'', ''m'', or ''2''; TIMESTANDARD must be one of ''t'', ''u'', ''d'', or ''b''; and STORAGEDATATYPE must be one of ''double'', ''int32'', ''uint32'', ''sfix64_En32'', ''ufix64_En32'', ''sfix128_En64'', or ''ufix128_En64''.</entry>
    <entry key="InvalidDateTimeNumConstructorArgs">{0,number,integer}은(는) Simulink.DateTime 생성자에 유효하지 않은 인수 개수입니다. 지원되는 생성자는 Simulink.DateTime(), Simulink.DateTime(Value) 및 Simulink.DateTime(Value, ''TimePoint'', ModeOption, ''StorageDataType'', ModeOption, ''TimeStandard'', ModeOption)입니다. 이름-값 쌍은 임의 순서일 수 있습니다.</entry>
    <entry key="InvalidDateTimeNumArgsFromStoredInteger">{0,number,integer}은(는) Simulink.DateTime.fromStoredInteger 메서드에 유효하지 않은 인수 개수입니다. 지원되는 형식은 Simulink.DateTime.fromStoredInteger(value) 및 Simulink.DateTime.fromStoredInteger(Value, ''TimePoint'', ModeOption, ''StorageDataType'', ModeOption, ''TimeStandard'', ModeOption)입니다. 이름-값 쌍은 임의 순서일 수 있습니다.</entry>
    <entry key="InvalidDateTimeValue">Invalid DateTime value. Value must be a real [1x6] double.</entry>
    <entry key="InvalidDateTimeFormatAttributes">유효하지 않은 형식입니다. 값은 실수 string형 스칼라여야 합니다.</entry>
    <entry key="InvalidTimeSinceEpochAttributes">TimeSinceEpochValue 특성이 유효하지 않습니다. 값은 실수형 스칼라이거나 double형, int32형, uint32형, int64형, 또는 uint64형으로 구성된 실수형 [2x1] 벡터여야 합니다.</entry>
    <entry key="InvalidTimeSinceEpochDataType"> ''TimeSinceEpochValue''의 데이터형은 ''StorageDataType''의 컨테이너 데이터형과 일치해야 합니다.</entry>
    <entry key="InvalidTimeSinceEpochDimension">''StorageDataType''에 대한 TimeSinceEpochValue 값 차원이 유효하지 않습니다. fixdt(x,128,64)의 ''StorageDataType''은 2×1 64비트 벡터 TimeSinceEpochValue여야 하고, 다른 모든 ''StorageDataType'' 데이터형은 스칼라 TimeSinceEpochValue여야 합니다.</entry>
    <entry key="LeapSecondTableIncorrectCols"> 블록 ''{0}''에서 ''윤초 테이블'' 파라미터의 열 개수가 {1,number,integer}입니다. ''윤초 테이블'' 파라미터의 열 개수는 3이어야 합니다.</entry>
    <entry key="LeapSecondTableIncorrectRows">블록 ''{0}''에서 윤초 테이블의 행 개수가 {1,number,integer}입니다. 알려진 윤초를 반영하기 위해 ''윤초 테이블'' 파라미터의 행 개수는 26 이상이어야 합니다.</entry>
    <entry key="LeapSecondTableIncorrectData">블록 ''{0}''의 ''윤초 테이블'' 파라미터 값이 잘못되었습니다. 값은 2016년까지의 알려진 윤초와 일치해야 합니다.</entry>
    <entry key="LeapSecondTableYearOutOfRange"> 윤초 테이블의 행 {2,number,integer}의 값({1,number,integer})이 유효하지 않습니다. 블록 ''{0}''에서 ''윤초 테이블'' 파라미터의 ''년'' 값은 2017과 9999 사이여야 합니다.</entry>
    <entry key="LeapSecondTableSecondInvalid"> 윤초 테이블의 행 {2,number,integer}의 값({1,number,integer})이 유효하지 않습니다. 블록 ''{0}''에서 ''윤초 테이블'' 파라미터의 ''초'' 값은 -1, 0 또는 1이어야 합니다.</entry>
    <entry key="LeapSecondTableYearRepeated">블록 ''{0}''에서 중복된 ''윤초 테이블'' 파라미터의 ''년'' 값은 지원되지 않습니다. 지정된 연도 중 반복되는 첫 번째 연도는 {1,number,integer}입니다.</entry>
    <entry key="AccumulatedLeapSecondLimit">블록 ''{0}''에서 파라미터 값 {1,number,integer}이(가) 유효하지 않습니다. ''누적 윤초'' 파라미터 값은 0과 16,056 사이여야 합니다.</entry>
    <entry key="LeapSecondTableYearNotSorted">블록 ''{0}''에서 ''윤초 테이블'' 열 ''년''의 값은 오름차순으로 정렬되어야 합니다.</entry>
    <entry key="LeapSecondTableVarIncorrectCols">블록 ''{0}''에서 ''윤초 테이블'' 파라미터에 사용되는 ''{1}''의 열 개수는 3이어야 합니다.</entry>
    <entry key="LeapSecondTableVarIncorrectRows">블록 ''{0}''에서 2016년까지의 알려진 윤초 값을 반영하려면 ''윤초 테이블'' 파라미터에 사용되는 ''{1}''의 행 개수가 26 이상이어야 합니다.</entry>
    <entry key="LeapSecondTableVarIncorrectData">블록 ''{0}''에서 ''윤초 테이블'' 파라미터에 사용되는 ''{1}''의 값이 잘못되었습니다. 값은 2016년까지의 윤초와 일치해야 합니다. 자세한 내용은 관련 문서를 참조하십시오.</entry>
    <entry key="LeapSecondTableVarYearOutOfRange">블록 ''{0}''에서 ''{1}''의 행 {3,number,integer}의 값({2,number,integer})이 유효하지 않습니다. ''윤초 테이블'' 파라미터의 ''년'' 값은 2017과 9999 사이여야 합니다.</entry>
    <entry key="LeapSecondTableVarSecondInvalid">블록 ''{0}''에서 ''윤초 테이블'' 파라미터의 ''{1}'' 열 ''초'' 값의 행 {3,number,integer}의 값({2,number,integer})은 -1, 0 또는 1이어야 합니다.</entry>
    <entry key="LeapSecondTableVarYearRepeated">블록 ''{0}''에서 ''윤초 테이블'' 파라미터의 ''{1}'' 열 ''년'' 값의 반복은 지원되지 않습니다. 반복되는 첫 번째 연도는 {2,number,integer}입니다.</entry>
    <entry key="LeapSecondTableVarYearNotSorted">블록 ''{0}''에서 ''윤초 테이블'' 파라미터의 ''{1}'' 열 ''년''의 값은 오름차순으로 정렬되어야 합니다.</entry>
    <entry key="DateTimeClockOrClockReaderInExpFcnMdl">Using DateTime Clock or DateTime Clock Reader ''{0}'' block inside an export function model is not supported.</entry>
    <entry key="DateTimeClockInsideNonVirtualSS">Using DateTime Clock ''{0}'' block inside subsystem ''{1}'' is not supported. Do not use DateTime Clock blocks inside Enabled, Triggered, Function call, Action, Iterator, Reusable, Resettable, Variant, or Function subsystems.</entry>
    <entry key="DateTimeClockInsideSFChart">Stateflow 차트 ''{1}'' 내부에서 DateTime Clock ''{0}'' 블록을 사용하는 것은 지원되지 않습니다.</entry>
    <entry key="DateTimeClockReaderInsideReusableSubsys">Using DateTime Clock Reader ''{0}'' block inside reusable subsystem ''{1}'' is not supported. Instead, change the 'Code generation function packaging' option of the subsystem ''{1}'' to ''Inlined'', ''Auto'' or ''Nonreusable function''.</entry>
    <entry key="DateTimeClockOrClockReaderInCondExecMdl">조건부 실행 모델 블록 내부에서 DateTime Clock 또는 DateTime Clock Reader ''{0}'' 블록을 사용하는 것은 지원되지 않습니다.</entry>
    <entry key="DateTimeClockOrClockReaderInRunFirstLastSS">Using DateTime Clock or DateTime Clock Reader ''{0}'' blocks inside subsystem ''{1}'' with block property ''Execution Order'' value of 'First' or 'Last' is not supported. Instead, change the ''Execution Order'' property of subsystem ''{1}'' to ''Based on priority''.</entry>
    <entry key="DateTimeFeatureTurnOn_Internal">Turn on ''DateTime in Simulink'' feature to use ''{0}''.</entry>
    <entry key="TimeStandardTAI">TAI</entry>
    <entry key="TimeStandardUTC">UTC</entry>
    <entry key="TimeStandardTT">TT</entry>
    <entry key="TimeStandardConversionTAI2UTC">TAI to UTC</entry>
    <entry key="TimeStandardConversionTAI2TT">TAI to TT</entry>
    <entry key="TimeStandardConversionTAI2TDB">TAI to TDB</entry>
    <entry key="TimeStandardConversionUTC2TDB">UTC to TDB</entry>
    <entry key="TimeStandardConversionUTC2TAI">UTC to TAI</entry>
    <entry key="TimeStandardConversionUTC2TT">UTC to TT</entry>
    <entry key="TimeStandardConversionTT2TAI">TT to TAI</entry>
    <entry key="TimeStandardConversionTT2UTC">TT to UTC</entry>
    <entry key="TimeStandardConversionTT2TDB">TT to TDB</entry>
    <entry key="DateTimeClockDouble">double</entry>
    <entry key="DateTimeClockSint32">int32</entry>
    <entry key="DateTimeClockUint32">uint32</entry>
    <entry key="DateTimeClockSfix128En64">fixdt(1,128,64)</entry>
    <entry key="DateTimeClockUfix128En64">fixdt(0,128,64)</entry>
    <entry key="DateTimeClockSfix64En32">fixdt(1,64,32)</entry>
    <entry key="DateTimeClockUfix64En32">fixdt(0,64,32)</entry>
    <entry key="FormatMATLABDefault">dd-MMM-uuuu HH:mm:ss</entry>
    <entry key="FormatISO8601WholeSec">yyyy-MM-dd''T''HH:mm:ss</entry>
    <entry key="FormatISO8601TimeStandard">yyyy-MM-dd''T''HH:mm:ss t</entry>
    <entry key="FormatISO8601FracSec">yyyy-MM-dd''T''HH:mm:ss.SSS</entry>
    <entry key="FormatAsctime">eee MMM dd HH:mm:ss yyyy\n</entry>
    <entry key="FormatClockTime">h:mm:ss a</entry>
    <entry key="FormatCalDate">MMMM d, yyyy</entry>
    <entry key="InvalidTimePointMode_Internal">''{0}'' must be a valid time point such as ''Seconds since Unix epoch'', ''Seconds since NTP epoch'', ''Seconds since TAI epoch'', ''Julian date'', ''Modified Julian date'' or ''J2000.0 date''.</entry>
    <entry key="InvalidEpoch_Internal">''{0}'' must be a valid epoch such as ''Unix'', ''NTP'', ''TAI'', ''Julian'', ''Modified Julian'' or ''J2000.0 date''.</entry>
    <entry key="InvalidTimeStandard_Internal">''{0}'' must be a valid time standard such as ''TAI'', ''UTC'', ''TT'', or ''TDB''.</entry>
  </message>
</rsccat>
