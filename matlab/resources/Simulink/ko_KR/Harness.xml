<?xml version="1.0" encoding="UTF-8"?>
<!--Copyright 2025 The MathWorks, Inc.-->

<rsccat xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.0" locale="ko_KR" product="Simulink" xsi:noNamespaceSchemaLocation="../../resources/schema/msgcat.xsd">
  <message>
    <entry key="HarnessStudioTitle">테스트 하네스: {0}</entry>
    <entry key="HarnessMATLABBlockTitleSuffix"> (테스트 하네스)</entry>
    <entry key="CannotDeactivateInactiveHarness">테스트 하네스 ''{0}''이(가) 열려 있지 않기 때문에 닫을 수 없습니다.</entry>
    <entry key="TestingHarnessActivationError"> 다른 하네스가 이미 열려 있기 때문에 테스트 하네스 ''{0}''을(를) 열 수 없습니다. 이 하네스를 열려면 먼저 다른 하네스를 닫으십시오.</entry>
    <entry key="ObserverHarnessActivationError">테스트 하네스 ''{0}''이(가) 현재 열려 있기 때문에 관측기 하네스 ''{1}''을(를) 열 수 없습니다. 이 하네스를 열려면 먼저 테스트 하네스를 닫으십시오.</entry>
    <entry key="ActiveHarnessWithUnSyncChangesFound">''{2}''의 하네스 ''{1}''에 메인 모델과 동기화되지 않은 변경 내용이 있기 때문에 하네스 ''{0}''을(를) 열 수 없습니다. 하네스 ''{0}''을(를) 열려면 먼저 하네스 ''{1}''을(를) 재빌드하거나 변경 내용을 메일 모델에 밀어넣으십시오</entry>
    <entry key="LimitedSynchronizationDueToMultipleHarnessOpen">블록 다이어그램에 여러 개의 하네스가 열려 있습니다. 따라서, 제한된 동기화 옵션이 지원됩니다.</entry>
    <entry key="CannotChangeSyncModeWhenHarnessLoaded">Cannot update the SynchronizationMode property of ''{0}'' because multiple harnesses, including ''{0}'', are open.</entry>
    <entry key="AnotherHarnessAlreadyActivated">''{2}''에 대한 테스트 하네스 ''{1}''이(가) 이미 열려 있으므로 테스트 하네스 ''{0}''을(를) 열 수 없습니다. 먼저 열려 있는 테스트 하네스를 닫으십시오.</entry>
    <entry key="HarnessDisableInReqsPerspective">소유자 모델에 대해 요구 사항 퍼스펙티브가 활성 상태인 동안에는 테스트 하네스를 열 수 없습니다. 테스트 하네스를 열기 전에 요구 사항 퍼스펙티브를 종료하십시오.</entry>
    <entry key="HarnessNameNotValid">''{0}''은(는) 유효한 테스트 하네스 이름이 아닙니다. 이름은 유효한 MATLAB 식별자여야 합니다.</entry>
    <entry key="HarnessNameMustBeUniqueForAModel">이 모델에 대한 동일한 이름의 테스트 하네스가 이미 있습니다. 다른 테스트 하네스 이름을 사용하십시오.</entry>
    <entry key="HarnessNameMustBeUniqueForAModelDuringLoad">이 모델에 동일한 이름의 테스트 하네스 ''{0}''이(가) 이미 있습니다. 하네스가 고유한 이름을 가지도록 하기 위해 이름이 ''{1}''(으)로 변경됩니다. 모델을 다시 저장하십시오.</entry>
    <entry key="HarnessNameInUse">Unable to use ''{0}'' as the test harness model name because a model with the same name is currently open. Use a different name for the test harness.</entry>
    <entry key="HarnessOwnerBlockMustBeAtomicSSOrModelRef">이 블록에 대해 테스트 하네스를 만들 수 없습니다. 테스트 하네스는 서브시스템 또는 블록 다이어그램에 대해 만들 수 있습니다.</entry>
    <entry key="HarnessOwnerBlockMustNotBeBuiltInBlock">Cannot create a test harness for built-in block. Test harnesses can be created for user defined subsystems or block diagrams.</entry>
    <entry key="ObserverHarnessNotASubsystem">''{0}''은(는) 서브시스템이 아닙니다. Observer 하네스로 변환할 수 없습니다.</entry>
    <entry key="ObserverHarnessErrMsgVerificationMaskNotSet">''{0}''은(는) Verification Subsystem이 아닙니다. Observer 하네스로 변환할 수 없습니다.</entry>
    <entry key="ObserverHarnessErrMsgNoOwnerFound">MATLAB이 관측기를 배치할 소유자 서브시스템을 찾을 수 없습니다. Verification Subsystem ''{0}''에는 소유자 서브시스템의 출력인 입력 신호가 하나 이상 있어야 합니다.</entry>
    <entry key="ObserverHarnessErrMsgIpsMultipleSubsys">여러 서브시스템의 입력을 갖는 Verification Subsystem ''{0}''은(는) 지원되지 않습니다.</entry>
    <entry key="ObserverHarnessVerSubsysOnNonAtomicSubSys">Verification Subsystem ''{1}''에 연결된 서브시스템 ''{0}''은(는) Atomic Subsystem이어야 합니다.</entry>
    <entry key="InvalidHarnessOwnerHandle">테스트 하네스 소유자는 최상위 모델, Subsystem 블록, Model 블록, S-Function 블록 또는 System object에 대한 MATLAB 핸들이어야 합니다.</entry>
    <entry key="UnsupportedSubsystemHandle">Harness creation is not supported for Adapter blocks in Architecture models or Component blocks that contain reference components in Software Architecture models. </entry>
    <entry key="NoHarnessFound">''{0}''에 이름이 ''{1}''인 테스트 하네스가 없습니다.</entry>
    <entry key="HarnessNameClashesWithNewModelName">Cannot rename the model to ''{0}'' because a test harness owned by ''{1}'' in this model has the same name. Please choose a new name or re-name the harness before saving again.</entry>
    <entry key="HarnessDeletedForBlock">Test harnesses associated with block ''{0}'' have been deleted as this block or its parent is being deleted.</entry>
    <entry key="CannotDeleteSUT">The harnessed component cannot be deleted in harness view.</entry>
    <entry key="CannotChangeSUTInterface">하네스 보기에서는 하네스에 포함된 테스트의 인터페이스를 변경할 수 없습니다.</entry>
    <entry key="CannotCreateHarnessWhenAnotherHarnessWithSameOwnerIsActive">Cannot create harness because another test harness with same owner is currently open. Please close the test harness before creating a new harness.</entry>
    <entry key="CannotCreateHarnessWhenAnotherHarnessIsActive">다른 테스트 하네스가 현재 열려 있으므로 테스트 하네스를 생성할 수 없습니다. 새 테스트 하네스를 만들려면 먼저 열려 있는 테스트 하네스를 닫으십시오.</entry>
    <entry key="CannotCloneWhenATestingHarnessIsActive">Cannot clone ''{0}'' because another test harness is currently open. Please close the test harness before cloning a harness.</entry>
    <entry key="CannotCreateSubsystemFromSUT">The harnessed component cannot be placed inside a subsystem in harness view.</entry>
    <entry key="CannotCreateSnapshotOfInternalHarness">Cannot create a snapshot of an internally saved harness.</entry>
    <entry key="CannotActivateAsBDWithHarnessNameOpen">동일한 이름의 다른 모델이 현재 열려 있기 때문에 테스트 하네스 ''{0}''을(를) 열 수 없습니다. 이 하네스를 열려면 먼저 다른 모델을 닫으십시오.</entry>
    <entry key="WarnABoutNameShadowingOnActivation">테스트 하네스 ''{0}''이(가) MATLAB 작업 공간 또는 경로에 있는 다른 이름을 가립니다. 테스트 하네스를 닫기 전에는 가려져 있는 파일이나 변수를 사용할 수 없습니다.</entry>
    <entry key="WarnAboutNameShadowingOnCreation">새 하네스 이름이 MATLAB 작업 공간 또는 경로에 있는 다른 이름을 가립니다. 하네스를 만들려면 "계속"을 클릭하십시오. 그렇지 않고 하네스 생성을 중단하려면 "취소"를 클릭하십시오.</entry>
    <entry key="WarnAboutNameShadowingOnCreationTitle">이름 충돌 가능성</entry>
    <entry key="WarnAboutNameShadowingOnCreationfromCMD">The new harness name ''{0}'' shadows another name in the MATLAB workspace or path.</entry>
    <entry key="WarnAboutNameShadowingOnRename">새 하네스 이름이 MATLAB 작업 공간 또는 경로에 있는 다른 이름을 가립니다. 이 하네스 이름으로 이름 바꾸기 작업을 계속하려면 "계속"을 클릭하십시오. 그렇지 않고 다른 하네스 이름을 선택하려면 "취소"를 클릭하십시오.</entry>
    <entry key="WarnAboutNameShadowingOnRenameTitle">이름 충돌 가능성</entry>
    <entry key="DeactiveHarnessCanceledByConfigSet">하네스 모델 ''{0}''에 대한 닫기 작업이 취소되었습니다.</entry>
    <entry key="CannotSaveHarnessWithNewName">Cannot save test harness ''{0}'' with a new name. If you would like to save the main model with a new name, please perform the save operation on the main model.</entry>
    <entry key="ContinueHarnessBuildTitle">계속해서 하네스 만들기...</entry>
    <entry key="ContinueHarnessBuild">모델 ''{0}''을(를) 컴파일하지 못했습니다. 컴파일에서 오류 메시지를 보려면 '아니요'를 선택하십시오. 프로토타이핑용으로 구성할 하네스를 만들려면 '예'를 선택하십시오(이 설정은 나중에 변경할 수 있음).</entry>
    <entry key="CreateAborted">하네스 생성이 중단되었습니다.</entry>
    <entry key="UpdateAborted">하네스 업데이트가 중단되었습니다.</entry>
    <entry key="HarnessCreationAborted">모델 ''{0}''의 컴파일 실패로 인해 테스트 하네스 생성이 중지되었습니다.</entry>
    <entry key="HarnessCreationAbortedFileShadow">Harness creation aborted because the specified Harness name shadows another name in the MATLAB workspace or path. Please specify a different harness name.</entry>
    <entry key="CannotBeCreatedFor_SignalEditorSrc">Signal Editor 블록을 소스로 갖는 하네스를 생성할 수 없습니다.</entry>
    <entry key="CannotActivateWhenLoading">Cannot open harness because the main model ''{0}'' is being loaded.</entry>
    <entry key="CannotActivateWhenBDIsCompiled">Cannot open harness because the main model ''{0}'' is being compiled or simulated.</entry>
    <entry key="CannotActivateWhenClosing">Cannot open harness because the main model ''{0}'' is being closed.</entry>
    <entry key="CannotExportWhenLoading">Cannot export the test harness because the model ''{0}'' is being loaded.</entry>
    <entry key="CannotExportWhenBDIsCompiled">Cannot export the test harness because the model ''{0}'' is being compiled or simulated.</entry>
    <entry key="CannotExportWhenClosing">Cannot export the test harness because the model ''{0}'' is being closed.</entry>
    <entry key="CannotExportWhenSystemModelDirty">테스트 하네스 ''{0}''을(를) 내보낼 수 없습니다. 이 하네스가 참조하는 모델 ''{1}''이(가) 저장되지 않았기 때문입니다. 테스트 하네스를 내보내려면 먼저 모델을 저장하십시오.</entry>
    <entry key="CannotExportZCModelHarness">Unable to export the test harness ''{0}'' because the model ''{1}'' is an Architecture or Software Architecture model.</entry>
    <entry key="CannotEditModelAsTestingHarnessIsActive">Cannot modify ''{0}'' because a test harness is open. Please close the harness before modifying this model.</entry>
    <entry key="CannotEditLibAsTestingHarnessIsActive">테스트 하네스가 열려 있기 때문에 ''{0}''을(를) 수정할 수 없습니다. 이 라이브러리를 수정하려면 먼저 테스트 하네스를 닫으십시오.</entry>
    <entry key="CannotUnlockModelAsTestingHarnessIsActive">테스트 하네스가 열려 있기 때문에 ''{0}''을(를) 잠금 해제할 수 없습니다. 하네스를 닫으면 이 모델이 자동으로 잠금 해제됩니다.</entry>
    <entry key="CannotUnlockLibAsTestingHarnessIsActive">테스트 하네스가 열려 있기 때문에 ''{0}''을(를) 잠금 해제할 수 없습니다. 테스트 하네스를 닫으면 이 라이브러리가 자동으로 잠금 해제됩니다.</entry>
    <entry key="CannotChangeReferenceBlockForHarnessCUT">Cannot change the reference block for the component under test when harness is active. Please deactivate the harness and try.</entry>
    <entry key="CannotChangeModelForHarnessCUT">Unable to change the model for the component under test when its test harness is open or loaded.</entry>
    <entry key="CannotChangeReferencedSubsystemForHarnessCUT">테스트 하네스가 활성 상태이므로, 테스트 대상 컴포넌트에 대해 참조된 서브시스템을 변경할 수 없습니다. 테스트 하네스를 비활성화하십시오.</entry>
    <entry key="CannotChangeSystemObjectForHarnessCUT">하네스가 활성 상태인 경우에는 테스트 대상 컴포넌트의 System object를 변경할 수 없습니다. 하네스를 비활성화한 다음 다시 시도하십시오.</entry>
    <entry key="CannotChangeSFunctionNameForHarnessCUT">Cannot change the S-Function name for the component under test when harness is active. Please deactivate the harness and try again.</entry>
    <entry key="CannotChangeFunctionNameForHarnessCUT">Cannot change the function name for the component under test when harness is active. Please close the harness and try again.</entry>
    <entry key="CannotChangeFunctionImplementationForHarnessCUT">하네스가 활성 상태인 경우에는 테스트 대상 컴포넌트의 사용자 정의 함수 구현을 변경할 수 없습니다. 하네스를 닫고 다시 시도하십시오.</entry>
    <entry key="CannotChangeMSFunctionNameForHarnessCUT">하네스가 활성 상태인 경우에는 테스트 대상 컴포넌트의 MATLAB S-Function 이름을 변경할 수 없습니다. 하네스를 비활성화한 다음 다시 시도하십시오.</entry>
    <entry key="CannotOpenMainMdlScopeAsTestHarnessIsActive">모델과 연결된 테스트 하네스 ''{1}''이(가) 열려 있기 때문에, 잠긴 모델 ''{0}''에 속한 스코프를 열 수 없습니다. 모델을 잠금 해제하려면 테스트 하네스를 닫으십시오.</entry>
    <entry key="CannotUpdateWhenATestingHarnessIsActive"> Cannot update the test harness ''{0}'' because another test harness is open. Please close the open test harness before performing the harness update operation.</entry>
    <entry key="CannotDeleteWhenATestingHarnessIsActive"> Cannot delete the test harness ''{0}'' because a test harness is open. Please close the open test harness before performing the delete operation.</entry>
    <entry key="CannotDeleteWhenHarnessIsOpen">테스트 하네스 ''{0}''이(가) 열려 있기 때문에 삭제할 수 없습니다.</entry>
    <entry key="CannotDeleteWhenSystemIsBusy">Unable to delete the test harness ''{0}'' because the main model is compiling or simulating, or another test harness with the same name in another model is open.</entry>
    <entry key="CannotMoveWhenHarnessIsOpen">Cannot move the test harness ''{0}'' because it is open. Please close it before performing the move operation.</entry>
    <entry key="CannotMoveWhenSystemIsBusy">Cannot move the test harness ''{0}'' because the system is busy. This is possible if the main model is being compiled or simulated or if the harness cannot be opened because another model with the same name is open.</entry>
    <entry key="CannotMoveWhenATestingHarnessIsActive"> Cannot move the test harness ''{0}'' because a test harness is open. Please close the open test harness before performing the harness move operation.</entry>
    <entry key="CannotMoveBDHarness"> ''{0}'' is a block diagram harness. Only block harnesses present on resolved link subsystems can be moved. </entry>
    <entry key="CannotMoveCloneBDHarnessToLibrary"> Harnesses cannot be moved or cloned to a library model and ''{0}'' is a library model. </entry>
    <entry key="CannotMoveHarnessOfResolvedLinkedBlocks"> The harness owner is not a resolved link or inside a resolved link. Only harnesses belonging to resolved linked blocks or blocks inside a resolved link can be moved to their corresponding reference blocks. </entry>
    <entry key="CannotMoveHarnessOfInactiveLinkedBlocks"> Harness can be moved only for resolved linked subsystems. Please resolve the link before moving the harness. </entry>
    <entry key="CannotMoveHarnessOfCommentedBlocks"> Harness cannot be moved for commented blocks. Please uncommented the block before moving the harness. </entry>
    <entry key="CannotChangeLinkStatusForBlocksWithImplicitHarness">Unable to disable or break the link for the block because it contains other blocks with test harnesses. Delete all test harnesses inside the block first.</entry>
    <entry key="ActiveHarnessCUTToVariantConvertFail"> Error converting block ''{0}'' to Variant block as it is component under test of the active harness. Please deactivate the harness and try again. </entry>
    <entry key="MoveCloneBDHarnessToBDOrMdlref"> Harness move or clone aborted because the destinationOwner specified is incorrect. Harness can be moved or cloned from a Subsystem to another valid Subsystem, Block Diagram to another Block Diagram, Model block to another valid Model block or from a Model or Subsystem Reference block to its corresponding referenced model and vice versa.</entry>
    <entry key="MoveCloneSSToSS"> Cannot move or clone the Subsystem harness as the destination is not a Subsystem.</entry>
    <entry key="MoveCloneIncompatibleSSRefToSSRef">Cannot move or clone the harness as both source and destination blocks must be Subsystem Reference blocks.</entry>
    <entry key="MoveCloneIncompatibleSSRefToSSMDL">Cannot move or clone the harness as the source is not a Subsystem Reference block or the destination model is not a Subsystem model.</entry>
    <entry key="MoveCloneIncompatibleSSMDLToSSRef">Cannot move or clone the harness as the source is not a Subsystem model or the destination is not a Subsystem Reference block.</entry>
    <entry key="MoveCloneIncompatibleSSMDLS">Cannot move or clone harness as both source and destination block diagrams must be Subsystem models.</entry>
    <entry key="MoveCloneDiffUDFtoUDF"> Cannot move or clone the harness as the block type of the source and destination block is different.</entry>
    <entry key="LibraryUnLockedForMove"> 하네스 이동 작업을 위해 라이브러리 ''{0}''이(가) 잠금 해제되었습니다. </entry>
    <entry key="HarnessMovedAndRenamed"> 하네스 ''{0}''이(가) 이동되었습니다. 하지만 기존 하네스와 이름이 충돌되기 때문에 ''{1}''(으)로 이름이 변경되어야 했습니다. </entry>
    <entry key="HarnessMovedAndManuallyRenamed"> 하네스 ''{0}''이(가) 이동되었으며 ''{1}''(으)로 이름이 변경되었습니다. </entry>
    <entry key="HarnessMoved"> Harness ''{0}'' was moved. </entry>
    <entry key="CannotMoveHarnessLibraryNotFound"> Move harness has failed because the library was not found. </entry>
    <entry key="CannotMoveHarnessOfBlocksWithSelfModifiableMask">Cannot move harnesses of blocks that have self-modifiable mask. </entry>
    <entry key="CannotMoveHarnessOfBlocksWithLocalMask">Cannot move harnesses of blocks that have local masks. </entry>
    <entry key="CannotMoveSILPILHarnesses">Cannot move harnesses that are configured for SIL/PIL mode. </entry>
    <entry key="ErrgDlgTitleForHarnessCreation">테스트 하네스를 만드는 중 오류가 발생했습니다.</entry>
    <entry key="CannotConvertHarnessCUTToMdlRef">Cannot convert a harnessed component in an open test harness model to a Model block.</entry>
    <entry key="InvalidModelForHarnessList">유효하지 않은 인수입니다. 첫 번째 인수는 하네스 모델이 아니어야 합니다.</entry>
    <entry key="InvalidStatusForHarnessList">Invalid argument. The second argument must be ''active'', ''all'', or ''deleted''.</entry>
    <entry key="InvalidOwnerForHarnessList">Invalid argument. The third argument must not be given when the second argument is ''active'' or 'deleted'.</entry>
    <entry key="CannotReorderSUTPorts">하네스 보기에서는 하네스에 포함된 컴포넌트의 포트를 재정렬할 수 없습니다.</entry>
    <entry key="InvalidOptionForGetHarnessList">''{0}''은(는) 유효한 ''listOption'' 입력이 아닙니다. 유효한 입력은 ''all'' 또는 ''active''입니다.</entry>
    <entry key="ErrorInHarnessStruct">하네스 구조체를 확인하는 중 오류가 발생했습니다. 하네스 구조체에서 필수 필드 ''{0}''을(를) 찾지 못했습니다.</entry>
    <entry key="ErrorInHarnessParamStruct">하네스 파라미터 구조체를 확인하는 중 오류가 발생했습니다. 하네스 파라미터 구조체에서 필수 필드 ''{0}''을(를) 찾지 못했습니다.</entry>
    <entry key="ConfirmDeleteDialogTitle">하네스 삭제</entry>
    <entry key="ConfirmDeleteDialogText">테스트 하네스 ''{0}''을(를) 삭제하시겠습니까?</entry>
    <entry key="ConfirmDeleteMultiDialogText">선택한 {0}개의 테스트 하네스를 삭제하시겠습니까?</entry>
    <entry key="ConfirmMoveDialogTitle">하네스 이동</entry>
    <entry key="ConfirmMoveDialogText">테스트 하네스 ''{0}''을(를) 이동하시겠습니까? 이 작업을 수행하면 연결된 인스턴스에서 하네스가 삭제되고 참조 블록으로 이동됩니다.</entry>
    <entry key="Yes">예</entry>
    <entry key="No">아니요</entry>
    <entry key="SSWithStatePortNotSupported">상태 포트가 있는 서브시스템에는 하네스 작업이 지원되지 않습니다.</entry>
    <entry key="SSWithResetPortNotSupported">재설정 포트가 있는 서브시스템에는 하네스 작업이 지원되지 않습니다.</entry>
    <entry key="HarnessCannotBeCreatedForALibraryMdl">A test harness cannot be created for a library model.</entry>
    <entry key="HarnessCannotBeCreatedForAHarnessMdl">Creating a test harness for a test harness model or components inside it is not supported.</entry>
    <entry key="HarnessCannotBeCreatedForAnObserverMdl">A test harness cannot be created for an Observer model or components inside them.</entry>
    <entry key="HarnessCannotBeCreatedForAMWLib">A test harness cannot be created for components inside a MathWorks library.</entry>
    <entry key="ConfigSSNotSupported">Harness operations are not supported for configurable subsystems.</entry>
    <entry key="HiddenBlocksNotSupported">숨겨진 블록에는 하네스 작업이 지원되지 않습니다.</entry>
    <entry key="CreateDialogTitle">테스트 하네스 만들기</entry>
    <entry key="WarnAboutUnconnectedStateReaderWriterBlocks">상태 소유자가 컴포넌트 경계를 벗어난 State Reader 블록 또는 State Writer 블록이 하네스 소유자에 포함되어 있습니다. 이로 인해 하네스 컴파일에 실패할 수 있습니다. 하네스 모델에 상태 소유자를 삽입해 보십시오.</entry>
    <entry key="ImportDialogTitle">테스트 하네스 가져오기</entry>
    <entry key="ImportDialogInstructions">Simulink 모델에서 테스트 하네스를 만드십시오. 테스트 하네스의 속성을 지정하십시오. 테스트 대상 컴포넌트가 하네스가 생성되는 시스템입니다. 하네스가 만들어지면 블록 배지를 사용하여 하네스를 찾아 여십시오. </entry>
    <entry key="ImportFileName">가져올 Simulink 모델:</entry>
    <entry key="ImportSpecifyCUT">가져온 모델 내 테스트 대상 컴포넌트:</entry>
    <entry key="ImportCUTIntoModel">모델의 블록을 가져온 컴포넌트로 바꾸십시오.</entry>
    <entry key="ImportFailed">다음 이유로 ''{1}''에서 테스트 하네스 ''{0}''을(를) 가져오는 데 실패했습니다.</entry>
    <entry key="ImportCUTNotFound">모델 ''{1}''의 최상위 수준에서 가져올 수 있도록 지정된 컴포넌트 ''{0}''을(를) 찾을 수 없습니다.</entry>
    <entry key="ImportCUTInterfaceMismatch">''{0}''의 인터페이스가 현재 가져오고 있는 소유자 ''{1}'' 인터페이스와 일치하지 않습니다.</entry>
    <entry key="ImportCUTInvalidBlockType">The block type ''{0}'' of specified component ''{1}'' in ''{2}'' is not valid for import. Supported block types for ''{3}'' are: ''{4}''</entry>
    <entry key="ImportFailedLibraryModel">Import failed since ''{0}'' is a library model.</entry>
    <entry key="ImportFailedHasHarness">Import failed since ''{0}'' contains test harnesses.</entry>
    <entry key="ImportFailedImportSelf">Import failed since it is not possible to import a model for itself.</entry>
    <entry key="ImportParameterIgnored">Ignoring the parameter ''{0}'' passed to import.</entry>
    <entry key="ImportFailedNoCompatibleBlocks">''{0}''에는 컴포넌트 ''{1}''(으)로 가져오기에 적합한 블록이 없습니다.</entry>
    <entry key="ImportFailedUnsavedModel">Import failed since the model ''{0}'' selected for import is open and has unsaved changes.</entry>
    <entry key="CannotUpdateSyncModeHarnessActive">Cannot update the SynchronizationMode property of ''{0}'' since it is open. It is not possible to change the SynchronizationMode to or from "SyncOnPushRebuildOnly" when the harness is open. Close ''{0}'' to update the SynchronizationMode property.</entry>
    <entry key="InvalidSyncModeForBD">SynchronizationMode 파라미터의 값 "SyncOnOpenAndClose"는 블록 다이어그램 하네스에서 지원되는 옵션이 아니므로 무시됩니다. SynchronizationMode는 "SyncOnOpen"으로 설정됩니다.</entry>
    <entry key="InvalidSyncModeForZCHarness">아키텍처 모델 소유의 하네스에는 SynchronizationMode 파라미터 옵션이 지원되지 않습니다. SynchronizationMode는 "SyncOnOpen"으로 설정됩니다.</entry>
    <entry key="InvalidSyncModeForSILPIL">SIL/PIL 모드에 지원되는 옵션이 아니므로, SynchronizationMode 파라미터의 값이 무시됩니다. SynchronizationMode는 "SyncOnPushRebuildOnly"로 설정됩니다.</entry>
    <entry key="InvalidSyncModeArg">Invalid value ''{0}'' passed for the parameter "SynchronizationMode". Valid options are SyncOnOpenAndClose, SyncOnOpen, and SyncOnPushRebuildOnly.</entry>
    <entry key="InvalidSyncModeForLibrary">"SyncOnPushRebuildOnly"가 라이브러리 또는 서브시스템 모델에 지원되는 옵션이 아니므로, SynchronizationMode 파라미터의 값이 무시됩니다.</entry>
    <entry key="UnableToPushMdlRefSelfReference">The push operation failed because the component under test in the harness model is a Model block that references ''{0}''. The Model block cannot reference the model that it is placed in. Change the name of the referenced model in the harness to enable the push operation.</entry>
    <entry key="CreateDialogInstructions">테스트 하네스의 속성을 지정하십시오. 테스트 대상 컴포넌트가 하네스가 생성되는 시스템입니다. 하네스가 만들어지면 블록 배지를 사용하여 하네스를 찾아 여십시오.</entry>
    <entry key="UpdateDialogTitle">테스트 하네스 속성: ''{0}''</entry>
    <entry key="UpdateDialogInstructions">테스트 하네스의 속성을 지정하십시오.</entry>
    <entry key="HarnessListDialogTitle">''{0}''의 테스트 하네스 관리</entry>
    <entry key="HarnessListDialogInstructions">다음의 테스트 하네스 보기 및 관리:</entry>
    <entry key="HarnessListDialogSelector">하네스 소유자별 필터링:</entry>
    <entry key="HarnessListDialogEmptyToolStrip">이 모델에는 테스트 하네스가 없습니다. 테스트 하네스를 만들려면 ''Add Test Harness''를 클릭하십시오.</entry>
    <entry key="HarnessListDialogTableColHeader2">이름</entry>
    <entry key="HarnessListDialogTableColHeader3">소유자 경로</entry>
    <entry key="HarnessListDialogSelectAll">모두 선택</entry>
    <entry key="HarnessListDialogActions">동작...</entry>
    <entry key="HarnessListDialogProperties">속성</entry>
    <entry key="HarnessListDialogMove">이동</entry>
    <entry key="HarnessListDialogClone">복제</entry>
    <entry key="HarnessListDialogDeleteSelected">삭제</entry>
    <entry key="HarnessListDialogExportSelected">내보내기</entry>
    <entry key="HarnessListDialogClose">닫기</entry>
    <entry key="MoveDialogTitleMove">하네스 이동</entry>
    <entry key="MoveDialogTitleClone">하네스 복제</entry>
    <entry key="MoveDialogEditName">새 하네스 이름:</entry>
    <entry key="MoveDialogEditOwnerPath">대상 경로:</entry>
    <entry key="HarnessOwner">하네스 소유자</entry>
    <entry key="HarnessOwnerTooltip">하네스 소유자를 강조 표시하려면 클릭합니다.</entry>
    <entry key="AutoShapeInputsTooltip">버스 또는 벡터 같은 다차원 입력 신호를 여러 개의 스칼라 입력으로 변환하려면 클릭합니다.</entry>
    <entry key="PropertiesTab">기본 속성</entry>
    <entry key="BasicProperties">기본 속성</entry>
    <entry key="HarnessConfig">소스 및 싱크</entry>
    <entry key="SchedulingOptions">스케줄링 옵션</entry>
    <entry key="HarnessName">이름:</entry>
    <entry key="HarnessSource">소스:</entry>
    <entry key="OriginalSource">원래 소스:</entry>
    <entry key="OriginalSink">원래 싱크:</entry>
    <entry key="HarnessCreateOpts">하네스 생성 옵션</entry>
    <entry key="HarnessRebuildOpts">하네스 재빌드 옵션</entry>
    <entry key="HarnessSyncOpts">하네스 컴포넌트 동기화 옵션</entry>
    <entry key="HarnessSyncMode">동기화 모드</entry>
    <entry key="SyncOptBothWays">하네스를 열거나 닫을 때 동기화</entry>
    <entry key="SyncOptOneWay">하네스를 열 때 동기화</entry>
    <entry key="SyncOptExplicitFull">밀어 넣거나 재빌드할 때만 동기화</entry>
    <entry key="SyncOptExplicitOneWay">재빌드할 때만 동기화</entry>
    <entry key="IndHarnessFileExists">파일 ''{1}''이(가) 이미 존재하기 때문에, 외부에 저장되는 테스트 하네스 ''{0}''을(를) 생성할 수 없습니다. 파일을 삭제하거나 다른 이름을 선택하십시오.</entry>
    <entry key="CloseIndependentHarnessFailed">Unable to close the test harness ''{0}'' because it has unsaved changes.</entry>
    <entry key="SaveHarnessesExternally">테스트 하네스 외부 저장</entry>
    <entry key="IndHarnessModelMustBeSaved">외부 테스트 하네스를 만들기 전에 먼저 모델을 저장합니다.</entry>
    <entry key="HarnessDeletedIndependentHarness">테스트 하네스 ''{0}''의 외부에 저장된 파일 ''{1}''이(가) 삭제되었습니다. </entry>
    <entry key="HarnessDeleteExternalFileQueued">Windows에서는 외부에 저장된 파일 ''{0}''의 삭제 작업이 대기 상태가 될 수 있으며, 모델 ''{1}''이(가) 닫히기 전까지 파일이 디스크에서 삭제되지 않을 수 있습니다.</entry>
    <entry key="IndependentHarnessFileNotFound">Test harness ''{0}'' was saved externally, but the file ''{1}'' was not found on the MATLAB path. </entry>
    <entry key="ConvertToExternalTitle">내부 저장된 테스트 하네스 변환</entry>
    <entry key="ConvertToInternalTitle">외부 저장된 테스트 하네스 변환</entry>
    <entry key="ExportToIndependentTitle">테스트 하네스를 독립 모델로 내보내기</entry>
    <entry key="ExportToIndependentMessage">테스트 하네스를 독립 모델로 내보내려면 '확인'을 선택하십시오. 이 작업을 수행하면 테스트 하네스 ''{0}''이(가) 삭제되고 하네스가 아닌 독립 모델로 저장됩니다.</entry>
    <entry key="ExportOneToIndependentTitle">테스트 하네스 내보내기</entry>
    <entry key="ExportOneToIndependentMessage">선택한 테스트 하네스를 내보내시겠습니까? 그렇게 하면 테스트 하네스 ''{0}''이(가) 삭제되고 하네스가 아닌 독립 모델로 저장됩니다.</entry>
    <entry key="ExportSelectedToIndependentTitle">테스트 하네스 내보내기</entry>
    <entry key="ExportSelectedToIndependentMessage">선택한 {0}개의 테스트 하네스를 내보내시겠습니까? 그렇게 하면 선택한 모든 테스트 하네스가 삭제되고 하네스가 아닌 독립 모델로 저장됩니다.</entry>
    <entry key="ExportAllToIndependentTitle">테스트 하네스를 독립 모델로 내보내기</entry>
    <entry key="ExportAllToIndependentMessage">모든 테스트 하네스를 독립 모델로 내보내려면 '확인'을 선택하십시오. 이 작업을 수행하면 ''{0}''의 모든 테스트 하네스가 삭제되고 하네스가 아닌 독립 모델로 저장됩니다.</entry>
    <entry key="ConvertToExternalMessage">테스트 하네스를 외부 저장으로 변환하려면 '확인'을 선택하십시오. 이 작업을 수행하면 ''{0}''이(가) 다시 저장되고 테스트 하네스가 개별 SLX 파일로 저장됩니다.</entry>
    <entry key="ConvertToInternalMessage">테스트 하네스를 내부 저장으로 변환하려면 '확인'을 선택하십시오. 이 작업을 수행하면 ''{0}''이(가) 다시 저장되고 ''{1}'' 내의 모든 하네스가 저장되며, 외부 harnessInfo와 하네스 SLX 파일이 삭제됩니다.</entry>
    <entry key="RebuildWithInterfaceChangeTitle">테스트 하네스 재빌드</entry>
    <entry key="RebuildWithInterfaceChangeMessage">테스트 하네스 ''{0}''에서 테스트 대상 컴포넌트의 인터페이스가 변경되었습니다. 재빌드 작업을 계속하려면 '확인'을 선택하십시오. 그러면 테스트 하네스의 컴포넌트가 ''{1}''의 컴포넌트로 대체됩니다. </entry>
    <entry key="PushWithInterfaceChangeTitle">테스트 하네스로부터 변경 내용 밀어넣기</entry>
    <entry key="PushWithInterfaceChangeMessage">테스트 하네스 ''{0}''에서 테스트 대상 컴포넌트의 인터페이스가 변경되었습니다. 밀어넣기 작업을 계속하려면 '확인'을 선택하십시오. 그러면 ''{1}''의 컴포넌트가 테스트 하네스의 컴포넌트로 대체됩니다. </entry>
    <entry key="PushAfterImportTitle">테스트 하네스로부터 변경 내용 밀어넣기</entry>
    <entry key="PushAfterImportMessage">테스트 하네스 ''{0}''을(를) 가져왔습니다. 밀어넣기 작업을 계속하려면 '확인'을 선택하십시오. 그러면 ''{1}''의 컴포넌트가 테스트 하네스의 컴포넌트로 대체됩니다. </entry>
    <entry key="SaveAsExternalHarnessesTitle">외부에 저장되는 테스트 하네스를 새 이름으로 저장</entry>
    <entry key="SaveAsExternalHarnesses">새 모델 ''{1}''에 대해 테스트 하네스의 복사본과 ''{0}''에 연결된 하네스 SLX 파일의 복사본을 생성하려면 '예'를 선택하십시오. 테스트 하네스 없이 새 모델을 저장하려면 '아니요'를 선택하십시오.</entry>
    <entry key="SaveAsFailedExistingHarnessInfo">Unable to save model to specified folder because the test harness metadata file ''{0}'' already exists. Save the model using a different name or to another folder.</entry>
    <entry key="InvalidDirectoryValueInHarnessInfoFile">하네스 메타데이터 파일의 Directory 필드에 유효하지 않은 값 ''{0}''이(가) 있습니다. 외부 하네스의 경우 Directory 필드가 비어 있어야 합니다. 하네스 메타데이터 파일 ''{1}''을(를) 열고 Directory 필드에서 모든 텍스트를 제거하십시오.</entry>
    <entry key="ConvertToExternalHarnessWarning">''{0}''개의 테스트 하네스를 외부 테스트 하네스로 변환하는 중입니다.</entry>
    <entry key="ConvertToInternalHarnessWarning">''{0}''개의 테스트 하네스를 내부 테스트 하네스로 변환하는 중입니다. 이 작업은 harnessInfo 파일과 모든 하네스 SLX 파일을 삭제합니다.</entry>
    <entry key="ConvertToExternalHarnessSuccessMsg">''{0}''개의 테스트 하네스를 외부 테스트 하네스로 성공적으로 변환했습니다.</entry>
    <entry key="ConvertToInternalHarnessSuccessMsg">''{0}''개의 테스트 하네스를 내부 테스트 하네스로 성공적으로 변환했습니다.</entry>
    <entry key="ExportToIndependentSuccessMsg">''{0}''개의 테스트 하네스를 하네스가 아닌 독립 모델로 성공적으로 내보냈습니다.</entry>
    <entry key="ConvertToExternalHarnessActiveHarnessError">Unable to convert test harnesses for ''{0}'' to be externally saved models since there is an open test harness for this model. Close the test harness and perform the operation again. </entry>
    <entry key="ConvertToExternalHarnessNotSavedError">Unable to convert test harnesses for ''{0}'' to be externally saved models since this model has not been saved. Save the model and perform the operation again. </entry>
    <entry key="ConvertToInternalHarnessActiveHarnessError">Unable to convert test harnesses for ''{0}''  to be saved within the design model's SLX file since there is an open test harness for this model. Close the test harness and perform the operation again. </entry>
    <entry key="ConvertToExternalHarnessNotInternalError">Unable to convert test harnesses for ''{0}'' to be saved externally since the model is already configured for external test harnesses.</entry>
    <entry key="ConvertToInternalHarnessNotSupportedMDL">Unable to convert test harnesses for ''{0}'' to be saved internally since the model is saved in .mdl format, and internally saved harnesses are not supported for models in .mdl format.</entry>
    <entry key="ExportToIndependentHarnessFileExistsError">Unable to export test harness for ''{0}'' to independently saved model since a file ''{1}'' already exists. Either delete the file or choose a different harness name prior to exporting.</entry>
    <entry key="ConvertToExternalHarnessFileExistsError">Unable to convert test harnesses for ''{0}'' to be saved externally since a file ''{1}'' already exists. Either delete the file or choose a different name.</entry>
    <entry key="ConvertToInternalHarnessNotExternalError">Unable to convert test harnesses for ''{0}''  to be saved within the design model's SLX file since the model is already configured for internally saved test harnesses.</entry>
    <entry key="IndependentHarnessUUIDMismatch">The unique identifier for the test harness ''{0}'' saved in its SLX file does not match the identifier reserved for this harness. It is possible that this file is not correct for this harness.</entry>
    <entry key="IndependentHarnessOpenViaDispatcher">The externally saved test harness ''{0}'' cannot be opened as a test harness by invoking its function name from the MATLAB command line. Open the test harness model by double clicking on the model file, or by using open_system.</entry>
    <entry key="OpenIndependentHarnessThroughMainModelFailed">Unable to load the externally saved test harness ''{0}'' through its corresponding design model ''{1}''. Therefore, the model is being loaded as non-harness model and functionality will be limited. To fix this, address the issue listed below.</entry>
    <entry key="IndependentHarnessOperationFailed">Unable to perform the test harness {0} operation for the external test harness because the test harness metadata file is not writable.</entry>
    <entry key="IndependentHarnessCopyEmbeddedWarning">''{1}''이(가) 테스트 하네스를 외부 저장하도록 구성되지 않았기 때문에, 외부 저장된 테스트 하네스 ''{0}''이(가) 내장 하네스로 복사됩니다. 외부에 저장되도록 하네스를 변환하려면 Simulink 툴스트립의 앱 탭에서 Simulink Test 앱을 열고 테스트 하네스 관리 &gt; 외부 하네스로 변환을 선택하십시오. </entry>
    <entry key="IndHarnessModelNotConfigWarning">The SaveExternally option was set to true for test harness ''{0}'', but the model ''{1}'' is not configured to save test harnesses externally. Configuring test harness to be saved internally in ''{1}''.</entry>
    <entry key="EmbHarnessModelNotConfigWarning">The SaveExternally option was set to false for test harness ''{0}'', but the model ''{1}'' is configured to save test harnesses externally. Configuring test harness to be saved externally.</entry>
    <entry key="IndepedendentHarnessSaveConflict">모델 ''{0}''에 외부 저장된 테스트 하네스의 참조가 포함되어 있지만 하네스 ''{2}''은(는) ''{1}''에서 내부 저장됩니다. 외부 저장된 테스트 하네스와 내부 저장된 테스트 하네스는 함께 사용할 수 없습니다. 외부에 저장되도록 구성하기 위해 ''{2}''의 설정이 업데이트됩니다. 이러한 변경 내용을 유지하려면 모델을 다시 저장하십시오. 하네스를 저장한 후 모든 하네스가 내부에 저장되도록 하네스를 변환하려면 Simulink 툴스트립의 앱 탭에서 Simulink Test 앱을 열고 테스트 하네스 관리 &gt; 내부 하네스로 변환을 선택하십시오.</entry>
    <entry key="IndHarnessDetachWarning">Exporting the externally saved test harness ''{0}'' to a non-harness model. This operation deletes the harness from the main model's harness metadata file ''{1}''.</entry>
    <entry key="IndHarnessSaveAsCopyError">While saving the externally saved test harness ''{0}'' to new name ''{1}'', there was an error in making a copy of the original harness due to the reason listed below. The new harness ''{1}'' has been saved but ''{0}'' has been deleted from the harness metadata file.</entry>
    <entry key="MoveOnExternalHarnessUnsavedModel">Unable to move test harness ''{0}'' to model ''{1}'' as the model is configured to save test harnesses externally but is not saved. Save the model and perform the move operation again.</entry>
    <entry key="ConvertOperationFailedFileNotWriteable">Unable to convert test harnesses as this operation re-saves ''{0}'' and the file ''{1}'' is write-protected.</entry>
    <entry key="ExternalHarnessOwnerNotFoundFileDeleteWarning">테스트 하네스 ''{0}''이(가) 외부에 저장되었지만, ''{2}''에서 소유자 블록 {1}을(를) 찾지 못했습니다. 이 테스트 하네스는 생성되지 않습니다. {3}을(를) 삭제하고 harnessInfo 메타데이터 파일 {4}을(를) 업데이트하려면 ''{2}''을(를) 다시 저장하십시오.</entry>
    <entry key="ExternalHarnessOwnerNotFoundWarning">테스트 하네스 ''{0}''이(가) 외부에 저장되었지만, ''{2}''에서 소유자 블록 {1}을(를) 찾지 못했습니다. 이 테스트 하네스는 생성되지 않습니다. harnessInfo 메타데이터 파일 {3}을(를) 업데이트하려면 ''{2}''을(를) 다시 저장하십시오.</entry>
    <entry key="SaveExternalHarnessWarning">이전에 저장되지 않은 외부 테스트 하네스 ''{0}''이(가) 저장됩니다. 모델과 저장된 테스트 하네스가 동기화되도록 ''{1}''을(를) 저장하십시오.</entry>
    <entry key="HarnessesSavedExternally">하네스가 외부에 저장되었습니다.</entry>
    <entry key="HarnessesSavedInternally">하네스가 내부에 저장되었습니다.</entry>
    <entry key="HarnessesSavedExternallyHelp">추가 정보</entry>
    <entry key="ExternalHarnessFileNotWritable">Unable to perform the harness operation for the externally saved test harness ''{0}'' since the file {1} is not writable.</entry>
    <entry key="ExternalHarnessDirNotWritable">Unable to perform the harness operation for the externally saved test harness ''{0}'' since the directory {1} is not writable.</entry>
    <entry key="InvalidConvertOption">The option ''{0}'' passed to sltest.harness.convert is not a valid argument. Valid arguments are "InternalToExternal" and "ExternalToInternal".</entry>
    <entry key="ExternalHarnessDirectory">하네스 경로:</entry>
    <entry key="ExternalHarnessFileNameMustMatchHarnessName">File name ''{0}'' must match the test harness name ''{1}''.</entry>
    <entry key="ExternalHarnessInfoFileMissing">The harnessInfo.xml file for ''{0}'' could not be found. The file may have been deleted or moved and this can leave the model in an inconsistent state. Try re-saving ''{0}''. </entry>
    <entry key="ExternalHarnessDirectoryMissing">The directory ''{0}'' specified in the HarnessPath name value pair does not exist. Please create the directory and re-perform the harness create operation. </entry>
    <entry key="SSRefHarnessDirtiedInstancePromptSave">하네스 ''{0}''의 서브시스템 참조 내에 저장되지 않은 변경 내용이 있습니다. 닫기 전에 하네스를 저장하시겠습니까?</entry>
    <entry key="HarnessType">유형:</entry>
    <entry key="CUT">테스트 대상 컴포넌트:</entry>
    <entry key="HarnessTypeTesting">테스트 중</entry>
    <entry key="HarnessTypeObserver">Observer</entry>
    <entry key="HarnessDescription">설명:</entry>
    <entry key="HarnessDescriptionTab">설명</entry>
    <entry key="HarnessPreview">미리보기</entry>
    <entry key="AdvancedOptions">고급 속성</entry>
    <entry key="ObjectivesGroup">목표</entry>
    <entry key="Objectives">초기 하네스 구성:</entry>
    <entry key="HarnessComponentEditing">하네스 모델에서 컴포넌트 편집 활성화</entry>
    <entry key="GraphicalCreate">모델을 컴파일하지 않고 만들기</entry>
    <entry key="GraphicalRebuild">모델을 컴파일하지 않고 재빌드</entry>
    <entry key="HarnessActivate">하네스 생성 후 열기</entry>
    <entry key="RebuildOnOpenCheckbox">하네스를 열 때 재빌드</entry>
    <entry key="RebuildModelDataCheckbox">재빌드할 때 구성 파라미터와 모델 작업 공간 데이터 업데이트</entry>
    <entry key="LogHarnessOutputs">출력 신호 기록</entry>
    <entry key="EnableRebuildCheckbox">모델에서 하네스 재빌드 허용</entry>
    <entry key="ActivateToolTip">열기</entry>
    <entry key="DeactivateToolTip">닫기</entry>
    <entry key="RefreshToolTip">새로 고침</entry>
    <entry key="UpdateToolTip">업데이트</entry>
    <entry key="DeleteToolTip">삭제</entry>
    <entry key="PrototypingObjectiveString">프로토타이핑</entry>
    <entry key="RefinementDebuggingObjectiveString">미세 조정/디버그</entry>
    <entry key="VerificationObjectiveString">검증</entry>
    <entry key="CustomObjectiveString">사용자 지정</entry>
    <entry key="Continue">계속</entry>
    <entry key="Cancel">취소</entry>
    <entry key="TooManyOutputsForSignalBuilder">The computed number of outputs for the Signal Builder source block is greater than {0, number, integer}, which is the maximum permitted for this block. Consider choosing another source type such as Inport or From Workspace blocks.</entry>
    <entry key="FailForComplexDatatype_Scope">The input {0, number, integer} of the component has complex data type. Complex data type is not supported by the Scope block.</entry>
    <entry key="FailForBusWithFrames_Scope">The input {0, number, integer} of the component has signal(s) with frame-based sampling mode. Signals with frame-based sampling mode are not supported by the Scope block.</entry>
    <entry key="FailForVariableDims_Scope">The input {0, number, integer} of the component has variable dimensional signal. Variable dimensional signal is not supported by the Scope block.</entry>
    <entry key="FailForAOB_Scope">The input {0, number, integer} of the component has array of bus. Array of bus is not supported by the Scope block.</entry>
    <entry key="CanNotBeCreatedForComplexDatatype_SCOPE">Cannot create a harness for the selected component because one or more outputs of the component have complex data type. Complex data type is not supported by the Scope block.</entry>
    <entry key="CanNotBeCreatedForAOB_SCOPE">Cannot create a harness for the selected component because one or more inputs of the component have array of bus. Array of bus is not supported by the scope block.</entry>
    <entry key="CanNotBeCreatedForBusWithFrames_SCOPE">Cannot create a harness for the selected component because one or more inputs of the component have signal(s) with frame-based sampling mode. Signals with frame-based sampling mode are not supported by the scope block.</entry>
    <entry key="VariableDimsNotSupported_SCOPE">Cannot create a harness for the selected component because one or more inputs of the component have variable dimensional signal. Variable dimensional signal is not supported by the scope block.</entry>
    <entry key="CanNotBeCreatedForAOB_FileSrc">Cannot create a harness for the selected component because one or more inputs of the component have array of bus. Array of bus is not supported by the From File block.</entry>
    <entry key="CanNotBeCreatedForBusWithFrames_FileSrc">Cannot create a harness for the selected component because one or more inputs of the component have signal(s) with frame-based sampling mode. Signals with frame-based sampling mode are not supported by the From File block.</entry>
    <entry key="VariableDimsNotSupported_FileSrc">Cannot create a harness for the selected component because one or more inputs of the component have variable dimensional signal. Variable dimensional signal is not supported by the From File block.</entry>
    <entry key="FailForBusWithFrames_FileSrc">The input {0, number, integer} of the component has signal(s) with frame-based sampling mode. Signals with frame-based sampling mode are not supported by the From File block.</entry>
    <entry key="FailForVariableDims_FileSrc">The input {0, number, integer} of the component has variable dimensional signal. Variable dimensional signal is not supported by the From File block.</entry>
    <entry key="FailForAOB_FileSrc">The input {0, number, integer} of the component has array of bus. Array of bus is not supported by the From File block.</entry>
    <entry key="CanNotBeCreatedForAOB_FileSink">Cannot create a harness for the selected component because one or more outputs of the component have array of bus. Array of bus is not supported by the To File block.</entry>
    <entry key="CanNotBeCreatedForBusWithFrames_FileSink">Cannot create a harness for the selected component because one or more outputs of the component have signal(s) with frame-based sampling mode. Signals with frame-based sampling mode are not supported by the To File block.</entry>
    <entry key="VariableDimsNotSupported_FileSink">Cannot create a harness for the selected component because one or more outputs of the component have variable dimensional signal. Variable dimensional signal is not supported by the To File block.</entry>
    <entry key="FailForBusWithFrames_FileSink">The input {0, number, integer} of the component has signal(s) with frame-based sampling mode. Signals with frame-based sampling mode are not supported by the To File block.</entry>
    <entry key="FailForVariableDims_FileSink">The input {0, number, integer} of the component has variable dimensional signal. Variable dimensional signal is not supported by the To File block.</entry>
    <entry key="FailForAOB_FileSink">The input {0, number, integer} of the component has array of bus. Array of bus is not supported by the To File block.</entry>
    <entry key="CanNotBeCreatedForAOB_FromWrkSpcSrc">Cannot create a harness for the selected component because one or more inputs of the component have array of bus. Array of bus is not supported by the From Workspace block.</entry>
    <entry key="CanNotBeCreatedForBusWithFrames_FromWrkSpcSrc">Cannot create a harness for the selected component because one or more inputs of the component have signal(s) with frame-based sampling mode. Signals with frame-based sampling mode are not supported by the From Workspace block.</entry>
    <entry key="VariableDimsNotSupported_FromWrkSpcSrc">Cannot create a harness for the selected component because one or more inputs of the component have variable dimensional signal. Variable dimensional signal is not supported by the From Workspace block.</entry>
    <entry key="FailForBusWithFrames_FromWrkSpcSrc">The input {0, number, integer} of the component has signal(s) with frame-based sampling mode. Signals with frame-based sampling mode are not supported by the From Workspace block.</entry>
    <entry key="FailForVariableDims_FromWrkSpcSrc">The input {0, number, integer} of the component has variable dimensional signal. Variable dimensional signal is not supported by the From Workspace block.</entry>
    <entry key="FailForAOB_FromWrkSpcSrc">The input {0, number, integer} of the component has array of bus. Array of bus is not supported by the From Workspace block.</entry>
    <entry key="FailForBusWithFrames_ToWrkSpcSink">The input {0, number, integer} of the component has signal(s) with frame-based sampling mode. Signals with frame-based sampling mode are not supported by the To Workspace block.</entry>
    <entry key="FailForVariableDims_ToWrkSpcSink">The input {0, number, integer} of the component has variable dimensional signal. Variable dimensional signal is not supported by the To Workspace block.</entry>
    <entry key="FailForAOB_ToWrkSpcSink">The input {0, number, integer} of the component has array of bus. Array of bus is not supported by the To Workspace block.</entry>
    <entry key="CanNotBeCreatedForAOB_ToWrkSpcSink">Cannot create a harness for the selected component because one or more outputs of the component have array of bus. Array of bus is not supported by the To Workspace block.</entry>
    <entry key="CanNotBeCreatedForBusWithFrames_ToWrkSpcSink">Cannot create a harness for the selected component because one or more inputs of the component have signal(s) with frame-based sampling mode. Signals with frame-based sampling mode are not supported by the To Workspace block.</entry>
    <entry key="VariableDimsNotSupported_ToWrkSpcSink">Cannot create a harness for the selected component because one or more inputs of the component have variable dimensional signal. Variable dimensional signal is not supported by the To Workspace block.</entry>
    <entry key="InvalidPropertyField">입력한 속성 필드 ''{0}''이(가) 유효하지 않습니다. 하네스를 만들려면 유효한 속성 이름을 입력하십시오.</entry>
    <entry key="InvalidCreateGraphicalHarnessValue">''{0}''에 입력한 값이 유효하지 않습니다. 0 또는 1을 입력하십시오.</entry>
    <entry key="InvalidLockModeValue">''{0}''에 입력한 값이 유효하지 않습니다. 0 또는 1을 입력하십시오.</entry>
    <entry key="InvalidSink">''{0}''에 입력한 값이 유효하지 않습니다. 문자형 벡터를 입력하십시오.</entry>
    <entry key="InvalidSource">''{0}''에 입력한 값이 유효하지 않습니다. 문자형 벡터를 입력하십시오.</entry>
    <entry key="NonExistentDescription">''{0}''에 유효하지 않은 값이 입력되거나 값이 입력되지 않았습니다.</entry>
    <entry key="InvalidDescription">''{0}''에 입력한 값이 유효하지 않습니다. 문자형 벡터를 입력하십시오.</entry>
    <entry key="InvalidName">''{0}''에 입력한 값이 유효하지 않습니다. 문자형 벡터를 입력하십시오.</entry>
    <entry key="NoHarnessExist">모델, 블록 또는 서브시스템에 대한 하네스가 존재하지 않습니다.</entry>
    <entry key="NotEnoughInputArgs">Not enough input arguments. Please see documentation for further details.</entry>
    <entry key="NotEnoughInputArgsSet">Not enough input arguments. For help, type ''sltest.harness.set''.</entry>
    <entry key="HarnessActivationAborted">Harness opening aborted. See error message below for the cause.</entry>
    <entry key="RedirectSaveHarnessToSystemModel">Save commands on the harness model ''{0}'' are being re-directed to the main model ''{1}'', which will automatically save this harness.</entry>
    <entry key="ProtectedModelNotSupported">Test harness models cannot be converted to a protected model.</entry>
    <entry key="CreateInMDLFormatNotSupported">Test harness that are saved internally cannot be created for a model in MDL format. To create a harness for a model in MDL format choose the "SaveExternally" option.</entry>
    <entry key="SaveInMDLFormatNotSupported">Models that contain internally saved Test harnesses cannot be saved in MDL format. To save this model, either save ''{0}'' in SLX format, or use sltest.harness.delete to delete test harnesses or sltest.harness.export to export test harnesses to separate files and perform the save operation again.</entry>
    <entry key="ErrorOnTriggTs">입력 신호 ''{0}''(으)로 인해 샘플 시간이 트리거되었기 때문에 선택한 컴포넌트에 대해 하네스를 만들 수 없습니다.</entry>
    <entry key="ConfigSetActivationFailed">Unable to activate updated configuration parameters ''{0}'' for harness model ''{1}''. Please activate it manually using the Model Explorer tool after addressing the underlying cause.</entry>
    <entry key="WarnAboutConstantToContinuousConversion">하네스 모델에서 입력 신호 ''{0}''의 샘플 시간이 상수에서 연속으로 변환되었습니다.</entry>
    <entry key="WarnAboutVariableToContinuousConversion">하네스 모델에서 입력 신호 ''{0}''의 샘플 시간이 가변에서 연속으로 변환되었습니다.</entry>
    <entry key="WarnAboutTriggeredToContinuousConversion">하네스 모델에서 입력 신호 ''{0}''의 샘플 시간이 트리거됨에서 연속으로 변환되었습니다.</entry>
    <entry key="WarnAboutIncompatibleOutputLogging"> 일부 출력에는 신호 기록이 지원되지 않습니다. 다음 신호에 대한 출력 기록이 비활성화되었습니다:\n''{0}''</entry>
    <entry key="InputconversionSSAnnotationText">이 서브시스템은 하네스에 포함된 컴포넌트에 필요한 인터페이스에 맞게 소스 블록의 출력을 조정하기 위해 Simulink에 의해 삽입되었습니다.\n 이 서브시스템의 내용을 수정하면 컴파일 오류와 시뮬레이션 오류가 발생할 수 있습니다.</entry>
    <entry key="OutputconversionSSAnnotationText">이 서브시스템은 하네스에 포함된 컴포넌트의 출력을 Sink 블록에 필요한 인터페이스에 맞게 조정하기 위해 Simulink에 의해 삽입되었습니다.\n 이 서브시스템의 내용을 수정하면 컴파일 오류와 시뮬레이션 오류가 발생할 수 있습니다.</entry>
    <entry key="InactiveOrCommentedBlockNotSupported">Harness operations are not supported for blocks that are inactive or commented, or within a block that is inactive or commented.</entry>
    <entry key="RepeatingInputParameters"> The parameter ''{0}'' is already specified. Duplicate parameters are not allowed. Aborting harness command.</entry>
    <entry key="ExportDeleteHarnessFromSystemModel"> Exporting the harness ''{0}'' to an independently saved model. This operation deletes the harness from the main model. Please re-save ''{1}'' to synchronize changes to the main model.</entry>
    <entry key="ExportedGraphicalFunctionsFromOutsideHarnessUsed">''{1}''의 하네스 외부에 있는 내보낸 함수 ''{0}''을(를) 하네스 내부의 ''{2}''에서 호출하는 중입니다. 이로 인해 시뮬레이션 시 오류가 발생합니다.</entry>
    <entry key="ExportToVersionDiscardsHarnessInfo">R2015a 이전 버전으로 내보내면 저장된 테스트 하네스가 폐기됩니다. 모든 하네스 정보가 손실됩니다. 현재 릴리스에서 모델 버전을 저장하거나, sltest.harness.export를 사용하여 테스트 하네스를 별도의 .slx 파일로 내보내 보십시오.</entry>
    <entry key="ExportToMDLDiscardsHarnessInfo">Exporting to a model in .mdl format discards saved test harnesses. All harness information will be lost. Consider saving a version of the model in .slx format in the current release, or using sltest.harness.export to export test harnesses to separate .slx files.</entry>
    <entry key="ExportToVersionNotSupportedForHarnessModel">Exporting to a previous version is not supported for harness models.</entry>
    <entry key="ExportToVersionNotSupportedActiveHarness">Exporting to a previous version is not supported when there is an open test harness. Please close ''{0}'' and perform the operation again.</entry>
    <entry key="ExportingDesignVerifierEmptyHarness">Design Verifier에서 Simulink Test로 테스트 케이스를 내보내는 중 오류가 발생함: ''{0}''에서 하네스를 찾을 수 없습니다.</entry>
    <entry key="ExportingDesignVerifierOrigSrcNotSupported">하네스 ''{0}''에 대해 Design Verifier에서 Simulink Test로 테스트 케이스를 내보내는 중 오류가 발생했습니다. origSrc 유형이 ''{1}''이기 때문입니다. origSrc 유형이 'Inport', 'Signal Editor' 또는 'Signal Builder'인 하네스만 지원됩니다.</entry>
    <entry key="RepairSavedHarness">테스트 하네스 ''{0}''이(가) 일관되지 않은 상태로 저장되었습니다. 하네스와 이 하네스의 연결을 복구하려고 시도합니다. 모델을 다시 저장하여 하네스가 올바른 상태로 저장되도록 하십시오.</entry>
    <entry key="RepairSavedHarnessFailed">테스트 하네스 ''{0}''이(가) 일관되지 않은 상태로 저장되었습니다. 하네스와 이 하네스의 연결을 복구하려는 시도가 실패했습니다. 테스트 하네스를 수동으로 복구하고 다시 저장하십시오.</entry>
    <entry key="UpdatedHarnessSavedIn15A15B">테스트 하네스 ''{0}''은(는) 이전 버전에서 저장되었으며 업데이트된 상태입니다. 테스트 하네스와 모델을 다시 저장하십시오. </entry>
    <entry key="ErrorOutForMixedDataType">하나 이상의 입력 및/또는 출력이 혼합된 데이터형을 갖기 때문에 컴포넌트에 대해 하네스를 만들 수 없습니다. 하네스 모델에서는 혼합된 데이터형이 지원되지 않습니다.</entry>
    <entry key="ErrorOutForMixedDimensions">하나 이상의 입력 및/또는 출력이 혼합된 차원을 갖기 때문에 컴포넌트에 대해 하네스를 만들 수 없습니다. 하네스 모델에서는 혼합된 차원이 지원되지 않습니다.</entry>
    <entry key="ErrorOutForMixedTs">하나 이상의 입력 및/또는 출력이 혼합된 샘플 시간을 갖기 때문에 컴포넌트에 대해 하네스를 만들 수 없습니다. 하네스 모델에서는 혼합된 샘플 시간이 지원되지 않습니다.</entry>
    <entry key="ErrorOutForMixedComplexity">입력 및/또는 출력이 혼합된 실수/복소수를 갖기 때문에 컴포넌트에 대해 하네스를 만들 수 없습니다. 하네스 모델에서는 혼합된 실수/복소수가 지원되지 않습니다.</entry>
    <entry key="ErrorOutForVirtualBusInMessageMode">하나 이상의 입력 및/또는 출력이 메시지가 포함된 가상 버스 신호를 갖기 때문에, 컴포넌트에 대해 하네스를 만들 수 없습니다. 메시지가 포함된 가상 버스는 하네스 모델에서 지원되는 입력 또는 출력이 아닙니다.</entry>
    <entry key="FailForMixedDataType_In">The input port {0, number, integer} of the component under test has mixed data type. Mixed data type is not supported in the harness model.</entry>
    <entry key="FailForMixedDimensions_In">The input port {0, number, integer} of the component under test has mixed dimension. Mixed dimension is not supported in the harness model.</entry>
    <entry key="FailForMixedTs_In">The input port {0, number, integer} of the component under test has mixed sample time. Mixed sample time is not supported in the harness model.</entry>
    <entry key="FailForMixedComplexity_In">the input port {0, number, integer} of the component under test has mixed complexity. Mixed complexity is not supported in the harness model.</entry>
    <entry key="FailForMixedDataType_Out">The output port {0, number, integer} of the component under test has mixed data type. Mixed data type is not supported in the harness model.</entry>
    <entry key="FailForMixedDimensions_Out">The output port {0, number, integer} of the component under test has mixed dimension. Mixed dimension is not supported in the harness model.</entry>
    <entry key="FailForMixedTs_Out">The output port {0, number, integer} of the component under test has mixed sample time. Mixed sample time is not supported in the harness model.</entry>
    <entry key="FailForMixedComplexity_Out">the output port {0, number, integer} of the component under test has mixed complexity. Mixed complexity is not supported in the harness model.</entry>
    <entry key="UnableToFindIOBlocks">저장된 테스트 하네스 ''{0}''과(와) 연결된 IO 블록을 찾을 수 없습니다. </entry>
    <entry key="PushHarnessSuccessNotification">''{1}''이(가) 소유한 테스트 하네스 ''{0}''의 설정을 메인 모델 ''{2}''에 성공적으로 밀어넣었습니다.</entry>
    <entry key="RebuildHarnessSuccessNotification">하네스 ''{0}''이(가) 원래 소스(''{2}'') 사양과 싱크(''{3}'') 사양을 준수하며 ''{1}''에서 성공적으로 재빌드되었습니다.</entry>
    <entry key="RebuildHarnessSuccessNotificationTestSequence">하네스 ''{0}''이(가) 원래 소스(''{2}'') 사양을 준수하며 ''{1}''에서 성공적으로 재빌드되었습니다.</entry>
    <entry key="RebuildHarnessSuccessNotificationStateflowChart">하네스 ''{0}''이(가) 원래 소스(''{2}'') 사양을 준수하며 ''{1}''에서 성공적으로 재빌드되었습니다.</entry>
    <entry key="PushHarnessFailedNotification">''{1}''이(가) 소유한 테스트 하네스 ''{0}''의 설정을 메인 모델 ''{2}''에 밀어넣지 못했습니다.</entry>
    <entry key="RebuildHarnessFailedNotification">''{1}''이(가) 소유한 테스트 하네스 ''{0}''을(를) 재빌드하지 못했습니다.</entry>
    <entry key="CannotPushHarnessWhenAnotherHarnessIsActive">Pushing active configuration parameters and model workspace variables used by the test harness ''{0}'' on ''{1}'' is not supported because other harnesses are open. Close other test harnesses first.</entry>
    <entry key="CannotRebuildHarnessWhenAnotherHarnessIsActive">현재 다른 테스트 하네스가 열려 있기 때문에 ''{1}''의 테스트 하네스 ''{0}''을(를) 재빌드할 수 없습니다. 먼저 ''{3}''의 테스트 하네스 ''{2}''을(를) 닫으십시오.</entry>
    <entry key="MainModel">메인 모델</entry>
    <entry key="SimHarness">내부 테스트 하네스</entry>
    <entry key="ExternalSimHarness">외부 테스트 하네스</entry>
    <entry key="SimHarnesses">내부 테스트 하네스</entry>
    <entry key="ExternalSimHarnesses">외부 테스트 하네스</entry>
    <entry key="System">시스템</entry>
    <entry key="ErrorLoadingHarness">파일에서 테스트 하네스 ''{0}''을(를) 불러오는 중 오류가 발생했습니다. 이름이 동일한 모델 또는 라이브러리가 현재 열려 있습니다. 이 모델 또는 라이브러리를 닫고 다시 시도하십시오.</entry>
    <entry key="ErrorSavingHarness">There was an error saving the test harness ''{0}'' to file. There is a model or library of the same name that is currently open. Please close this model or library and try again.</entry>
    <entry key="ErrorAutoSavingHarness">테스트 하네스 ''{0}''을(를) 파일에 자동으로 저장하는 중 오류가 발생했습니다. 이름이 동일한 모델 또는 라이브러리가 현재 열려 있습니다. 이 모델 또는 라이브러리를 닫고 다시 시도하십시오.</entry>
    <entry key="OutputSegDisconnectedFromCUT">컴포넌트의 {0, number, integer}번 출력 포트에 연결되었던 세그먼트과의 연결이 끊겼습니다.</entry>
    <entry key="InputSegDisconnectedFromCUT">컴포넌트의 {0, number, integer}번 입력 포트에 연결되었던 세그먼트과의 연결이 끊겼습니다.</entry>
    <entry key="OutputSegDisconnectedFromConvSS">The segment which was connected to the output port {0, number, integer} of the conversion subsystem ''{1}'', has been disconnected.</entry>
    <entry key="InputSegDisconnectedFromConvSS">The segment which was connected to the input port {0, number, integer} of the conversion subsystem ''{1}'', has been disconnected.</entry>
    <entry key="SLCINotSupported">Simulink Code Inspector is currently not supported for test harness models.</entry>
    <entry key="UnrecognizedDSMDataType">'테스트 하네스: Data Store Memory에서 인식할 수 없는 데이터형임'</entry>
    <entry key="InvalidHandleToCloseScopes">'유효하지 않은 핸들이 제공되었습니다. Simulink.harness.internal.closeAllScopes에는 블록 다이어그램 핸들이 필요합니다.'</entry>
    <entry key="LicenseError">Simulink Test license error.</entry>
    <entry key="LicenseNotAvailable">이 기능을 사용하는 데 필요한 Simulink Test 라이선스를 체크아웃할 수 없습니다.</entry>
    <entry key="SaveTestSequenceDemoWithoutLicense">Test Sequence 블록을 포함한 데모 모델을 저장하려면 Simulink Test 라이선스가 필요합니다.</entry>
    <entry key="TestSequenceWithoutLicense">모델 {0}에 Test Sequence 블록이 포함되어 있습니다. Test Sequence 블록을 포함한 모델을 저장하거나 시뮬레이션하려면 Simulink Test 라이선스가 필요합니다.</entry>
    <entry key="HarnessPushAborted">Harness push aborted due to the following errors.</entry>
    <entry key="HarnessRebuildAborted">다음 오류로 인해 테스트 하네스 재빌드가 중지되었습니다:</entry>
    <entry key="IgnoringActiveFixtPtOverrideMode">블록 ''{0}''의 데이터형 설정이 이를 포함하는 포함하는 블록 또는 모델에 의해 재정의되었습니다. 블록에 대한 재정의 설정은 하네스 모델에 반영되지 않습니다.</entry>
    <entry key="ReadErrorInputConvSS">Could not rebuild the input conversion subsystem ''{0}'' because the user data of the subsystem is corrupted.</entry>
    <entry key="ReadErrorOutputConvSS">Could not rebuild the output conversion subsystem ''{0}'' because the user data of the subsystem is corrupted.</entry>
    <entry key="HarnessDirtyDueToOwnerInterfaceChange">Harness model has been modified as the owner subsystem interface was changed.</entry>
    <entry key="AtomicActionException">Another harness action attempted during an existing harness action.</entry>
    <entry key="OwnerFileNameNotSupported">''{0}'' is not a Test Harness. The OwnerFileName parameter is for use with Test Harnesses only. Use the FileName parameter instead. To check if a model is a Test Harness, use the IsHarness parameter.</entry>
    <entry key="HarnessVerificationMode">검증 모드:</entry>
    <entry key="InvalidTargetForSILPIL">'Software-in-the-loop (SIL)' and 'Processor-in-the-loop (PIL)' verification modes require code generation target to be set to 'ert.tlc' or a derivative of 'ert.tlc'.</entry>
    <entry key="CannotExecuteHarnessOperationAsBDIsBusy">Cannot execute harness operation for harness ''{0}'' as the model is busy.</entry>
    <entry key="InvalidLockModeForSILPIL">SIL(Software-in-the-loop)' 또는 'PIL(Processor-in-the-loop)' 검증 모드 하네스에서는 컴포넌트 편집을 활성화할 수 없습니다. 컴포넌트 편집 활성화 옵션이 무시됩니다.</entry>
    <entry key="InvalidLockModeForModelReference">Model 블록 하네스에서는 컴포넌트 편집을 비활성화할 수 없습니다. 컴포넌트 편집 비활성화 옵션이 무시됩니다.</entry>
    <entry key="InvalidLockModeForBD">블록 다이어그램 하네스에서는 컴포넌트 편집을 비활성화할 수 없습니다. 컴포넌트 편집 비활성화 옵션이 무시됩니다.</entry>
    <entry key="InvalidLockModeForLinkedSS">연결된 블록 하네스에서는 컴포넌트 편집을 비활성화할 수 없습니다. 컴포넌트 편집 비활성화 옵션이 무시됩니다.</entry>
    <entry key="GenCodeOnlyNotSupportedForSILPIL">'SIL(Software-in-the-loop)' 및 'PIL(Processor-in-the-loop)' 검증 모드를 사용하려면 코드 생성 타깃에서 ''코드만 생성'' 옵션이 꺼져 있어야 합니다. 이 옵션의 선택을 취소한 다음 다시 시도하십시오.</entry>
    <entry key="InvalidCreateGraphicalForSILPIL">서브시스템의 'SIL(Software-in-the-loop)' 또는 'PIL(Processor-in-the-loop)' 검증 모드에서 컴파일하지 않고 하네스를 만들 수 없습니다. 컴파일 없이 하네스를 생성하는 옵션이 무시됩니다.</entry>
    <entry key="SILPILNotSupportedForSimulinkFunctionSubsystem">Creating a Software-in-the-Loop (SIL) or Processor-in-the-Loop (PIL) subsystem harness for a Simulink Function block is not supported.</entry>
    <entry key="SILPILNotSupportedForVirtualSubsystem">가상 서브시스템에 대해 'SIL(Software-in-the-Loop)' 또는 'PIL(processor-in-the-loop)' 검증 모드 하네스를 생성할 수 없습니다. 서브시스템에 대해 '아토믹 단위로 처리' 옵션을 켜고 다시 시도하십시오.</entry>
    <entry key="SILPILNotSupportedForActionSubsystem">Cannot create a 'Software-in-the-loop (SIL)' or 'Processor-in-the-loop (PIL)' verification mode harness for an action subsystem.</entry>
    <entry key="SILPILNeedsERT">Creating 'Software-in-the-loop (SIL)' or 'Processor-in-the-loop (PIL)' verification mode harness requires Embedded Coder license. Aborting harness creation.</entry>
    <entry key="ChartSourceNeedsStateflow">Creating a test harness with Chart as source or scheduler block requires Stateflow license. Aborting harness creation.</entry>
    <entry key="UseSeparateAssessmentForReactiveTest">별도의 Test Assessment 블록 추가</entry>
    <entry key="AutoShapeInputsForReactiveTest">스칼라 입력 만들기</entry>
    <entry key="CreateUnifiedSchedulerForReactiveTest">스케줄러 만들기</entry>
    <entry key="IgnoringDriveFcnCallWithTestSequence">DriveFcnCallWithTestSequence' 옵션이 무시됩니다. 'Test Sequence' 소스 블록은 함수 호출 트리거를 기본적으로 지원합니다. 따라서 테스트 대상 컴포넌트에 대한 함수 호출 입력 트리거가 이 블록에 의해 생성됩니다.</entry>
    <entry key="InvalidSinkForReactiveTest">'Source'가 'Test Sequence'인 경우 'Sink' 플래그가 무시됩니다.</entry>
    <entry key="InvalidSinkForStateflowChart">'Source'가 'Chart'인 경우 'Sink' 플래그가 무시됩니다.</entry>
    <entry key="InvalidInputArgumentForHarnessCreation">입력값 ''{1}''은(는) 다음 값 중 하나여야 함: \n\n''{0}''\n\n.</entry>
    <entry key="CustomPath">경로:</entry>
    <entry key="InvalidLibPath">Path to library block ''{0}'' was not found on the MATLAB path.</entry>
    <entry key="InputPortsFoundForSourceBlock">Custom source block ''{0}'' has input ports, which is not allowed.</entry>
    <entry key="IncorrectNumberOfOutputPortsForSourceBlock">Custom source block ''{0}'' must have exactly one output port.</entry>
    <entry key="InvalidPortsFoundForSourceBlock">Custom source block ''{0}'' must not have Enable, Trigger, State, LConn, RConn, Ifaction or Reset ports.</entry>
    <entry key="OutputPortsFoundForSinkBlock">Custom sink block ''{0}'' has output ports, which is not allowed.</entry>
    <entry key="IncorrectNumberOfInputPortsForSinkBlock">Custom sink block ''{0}'' must have exactly one input port.</entry>
    <entry key="InvalidPortsFoundForSinkBlock">Custom sink block ''{0}'' must not have Enable, Trigger, State, LConn, RConn, Ifaction or Reset ports.</entry>
    <entry key="CustomPathMustBeSpecified">The full path to a library block must be specified if the 'Source' or 'Sink' parameters are set to 'Custom'.</entry>
    <entry key="CouldNotLoadCompBusForVB">Unable to compute bus parameters for ''{0}'' port {1, number, integer} of block ''{2}''. This may be due to inconsistent bus settings in the model. To debug this issue, set the 'Bus To Vector' diagnostic (Configuration Parameters &gt; Diagnostics &gt; Connectivity &gt; Bus To Vector) to 'error' and recompile the model.</entry>
    <entry key="PushAbortedAsMainBDIsCompiled">Harness push command aborted since the main model ''{0}''  is in a compiled state.</entry>
    <entry key="BlocksUnderStateflowNotSupported">Harness operations are not supported for blocks that are children of Stateflow-based blocks.</entry>
    <entry key="PasteFailed">다음 이유로 인해 블록 ''{0}''의 하네스를 복사할 수 없음: {1}.</entry>
    <entry key="PasteFailedDueToImplicitLinkBlockPair">소스 및/또는 대상이 묵시적으로 연결된 블록일 수 있기 때문에 하네스를 ''{0}''에 복사할 수 없습니다.\n</entry>
    <entry key="CopyFailed">다음 이유로 인해 블록 ''{1}''의 하네스 ''{0}''을(를) 복사할 수 없음: {2}.</entry>
    <entry key="CannotPasteIntoALibrary">라이브러리 모델에 하네스를 붙여 넣는 것은 허용되지 않습니다.</entry>
    <entry key="CannotPasteIntoAHarness">하네스 모델에 하네스를 붙여 넣는 것은 허용되지 않습니다.</entry>
    <entry key="HarnessLoadFailed">테스트 하네스 ''{0}''을(를) 불러올 수 없습니다. </entry>
    <entry key="HarnessBlockDiagramLoadFailed">Unable to load the block diagram associated with Test Harness ''{0}''. A possible reason for this failure is that the block diagram was not saved or was saved in a corrupted state. Please delete the test harness, create a new test harness, and save again. </entry>
    <entry key="PrototypingMsg">컴포넌트 편집과 모델-하네스 동기화에 전체 디폴트 제어를 사용합니다. 모델이 컴파일되지 않는다면 이 방법을 선택합니다.</entry>
    <entry key="DevelopingMsg">메인 모델의 컴파일된 컨텍스트에서 컴포넌트를 개발하고 디버그합니다. 메인 모델이 컴파일되어야 합니다.</entry>
    <entry key="TestingMsg">테스트 대상 컴포넌트를 잠그고 메인 모델과 자동으로 재동기화합니다. 'SIL(Software-in-the-loop)' 또는 'PIL(Processor-in-the-loop)' 검증 모드를 고르려면 이 방법을 선택합니다.</entry>
    <entry key="CustomObjMsg">아래 옵션에 대해 미세 조정 제어를 사용하려면 이 방법을 선택합니다.</entry>
    <entry key="CopyFailedBecauseHarnessIsActive">블록 ''{1}''의 하네스 ''{0}''이(가) 열려 있어서 복사할 수 없습니다. 하네스가 열린 상태에서는 하네스를 복사할 수 없습니다. 하네스를 닫고 복사 작업을 다시 시도하십시오.</entry>
    <entry key="SyncFailedAsSourceIsCompiled">Unable to synchronize any changes made to ''{0}'' because the main model is in a compiled state. Any changes made to this block will be discarded.</entry>
    <entry key="SyncWillFailAsSourceIsCompiled">Harness is being opened for a component whose main model is in a compiled state. Any changes made to the component under test will be discarded on harness close.</entry>
    <entry key="TestHarnessNotSupportedForMdlRefBuilds">Model Reference target is not supported for ''{0}'' because it is a test harness.</entry>
    <entry key="TestHarnessNotSupportedForMdlRefBuildsWithoutClientServer">테스트 하네스는 클라이언트-서버 포트가 없는 모델 참조 타깃을 지원하지 않습니다.</entry>
    <entry key="StateflowLicenseRequired">Stateflow license required to create or open test harnesses for models or subsystems with Charts.</entry>
    <entry key="PerspectivesOpenHarness">테스트 하네스 열기</entry>
    <entry key="PerspectivesCloseHarness">테스트 하네스 닫기</entry>
    <entry key="PerspectivesDeleteHarness">테스트 하네스 삭제</entry>
    <entry key="PerspectivesCloneHarness">테스트 하네스 복제</entry>
    <entry key="PerspectivesContextMenu">하네스 작업</entry>
    <entry key="PerspectiveDisabledAsAnotherHarnessActive">다른 테스트 하네스가 열려 있기 때문에 비활성화되었습니다.</entry>
    <entry key="PerspectiveDisabledAsSlicerActive">모델 슬라이서가 활성 상태이거나 편집 가능한 강조 표시 모드에 있기 때문에 비활성화되었습니다.</entry>
    <entry key="PerspectiveDisabledBecauseOfDiagramState">비활성화됨</entry>
    <entry key="ContextualPerspectivesTooltip">사용 가능한 테스트 하네스</entry>
    <entry key="CannotCreateWhenLoading">Harnesses cannot be created because the model ''{0}'' is being loaded.</entry>
    <entry key="CannotCreateWhenBDIsBeingCompiled">Harnesses cannot be created because the model ''{0}'' is being compiled.</entry>
    <entry key="CannotCreateWhenBDIsCompiled">Harnesses cannot be created because the model ''{0}'' is simulating or is compiled and fast restart is not enabled.</entry>
    <entry key="CannotCreateWhenClosing">Harnesses cannot be created because the model ''{0}'' is being closed.</entry>
    <entry key="BusWithFramesNotSupported_RT_In">The input {0, number, integer} of the component has signal(s) with frame-based sampling mode. Signals with frame-based sampling mode are not supported by the Test Sequence block.</entry>
    <entry key="BusWithFramesNotSupported_SF_In">The input {0, number, integer} of the component has signal(s) with frame-based sampling mode. Signals with frame-based sampling mode are not supported by the Chart block.</entry>
    <entry key="BusWithFramesNotSupported_RT_Out">The output {0, number, integer} of the component has signal(s) with frame-based sampling mode. Signals with frame-based sampling mode are not supported by the Test Sequence block.</entry>
    <entry key="BusWithFramesNotSupported_SF_Out">컴포넌트의 {0, number, integer}번 출력에 프레임 기반 샘플링 모드를 사용하는 신호가 있습니다. 프레임 기반 샘플링 모드를 사용하는 신호는 Chart 블록에서 지원되지 않습니다.</entry>
    <entry key="VBusWithNoBusObjNotSupported_RT_In">The input {0, number, integer} of the component has virtual bus without a bus object. Virtual bus without a bus object is not supported by the Test Sequence block.</entry>
    <entry key="VBusWithNoBusObjNotSupported_SF_In">The input {0, number, integer} of the component has virtual bus without a bus object. Virtual bus without a bus object is not supported by the Chart block.</entry>
    <entry key="VBusWithNoBusObjNotSupported_RT_Out">The output {0, number, integer} of the component has virtual bus without a bus object. Virtual bus without a bus object is not supported by the Test Sequence block.</entry>
    <entry key="VBusWithNoBusObjNotSupported_SF_Out">The output {0, number, integer} of the component has virtual bus without a bus object. Virtual bus without a bus object is not supported by the Chart block.</entry>
    <entry key="VBusWithNoBusObjNotSupported_RT_FromIn">The output of the From Block ''{0}'' has virtual bus without a bus object. Virtual bus without a bus object is not supported by the Test Sequence block.</entry>
    <entry key="VBusWithNoBusObjNotSupported_SF_FromIn">The output of the From Block ''{0}'' has virtual bus without a bus object. Virtual bus without a bus object is not supported by the Chart block.</entry>
    <entry key="VBusWithNoBusObjNotSupported_RT_GotoOut">The input of the Goto Block ''{0}'' has virtual bus without a bus object. Virtual bus without a bus object is not supported by the Test Sequence block.</entry>
    <entry key="VBusWithNoBusObjNotSupported_SF_GotoOut">The input of the Goto Block ''{0}'' has virtual bus without a bus object. Virtual bus without a bus object is not supported by the Chart block.</entry>
    <entry key="VBusWithNoBusObjNotSupported_SE">The input {0, number, integer} of the component has virtual bus without a bus object. Virtual bus without a bus object is not supported by the Signal Editor block.</entry>
    <entry key="HalfPrecisionNotSupported_SF_In">The input {0, number, integer} of the component has half-precision data type. Half-precision data type is not supported by the Chart.</entry>
    <entry key="HalfPrecisionNotSupported_SF_Out">The output {0, number, integer} of the component has half-precision data type. Half-precision data type is not supported by the Chart.</entry>
    <entry key="HalfPrecisionNotSupported_TS_In">The input {0, number, integer} of the component has half-precision data type. Half-precision data type is not supported by the Test Sequence block.</entry>
    <entry key="HalfPrecisionNotSupported_TS_Out">The output {0, number, integer} of the component has half-precision data type. Half-precision data type is not supported by the Test Sequence block.</entry>
    <entry key="WarnOnOverridenRebuildOpt">The RebuildModelData parameter for harness ''{0}'' has been overridden from {1,number,integer} to {2,number,integer}.</entry>
    <entry key="SILPILNotSupportedForFastRestart">Creating and rebuilding harnesses configured for "Software-in-the-loop (SIL)" or "Processor-in-the-loop (PIL)" is not supported when the main model is configured for fast restart. Turn off fast restart before attempting this operation.</entry>
    <entry key="ServiceComponentsNotAllowedInCompositionBlock">Composition 블록 ''{0}''에 Service Component 블록이 포함되어 있으므로 이 블록에 대한 테스트 하네스를 만들 수 없습니다.</entry>
    <entry key="LockModeNotEnforcedForSelfModifiableMaskSubsystem">Component under test is a self-modifiable mask subsystem. Lock mode is not enforced for this type of subsystem.</entry>
    <entry key="CannotAddOrEditMaskForLockedHarnessCUT">Masks cannot be created or edited for a Component Under Test when the Synchronization mode is set to "Synchronize on harness open".</entry>
    <entry key="CreateHarnessStage">테스트 하네스 생성</entry>
    <entry key="OpenHarnessStage">Test Harness Open</entry>
    <entry key="RebuildHarnessStage">테스트 하네스 재빌드</entry>
    <entry key="PushHarnessStage">테스트 하네스 밀어넣기</entry>
    <entry key="ExportHarnessStage">테스트 하네스 내보내기</entry>
    <entry key="DeleteHarnessStage">테스트 하네스 삭제</entry>
    <entry key="ConvertInternalHarnessesStage">내부 저장된 테스트 하네스 변환</entry>
    <entry key="ConvertExternalHarnessesStage">외부 저장된 테스트 하네스 변환</entry>
    <entry key="MoveHarnessStage">테스트 하네스 이동</entry>
    <entry key="ImportHarnessStage">테스트 하네스 가져오기</entry>
    <entry key="OpenHarnessFailed">Harness open failed.</entry>
    <entry key="DeleteHarnessFailed">Harness deletion failed.</entry>
    <entry key="CannotDeleteLockedOrOpenHarness">선택한 하네스가 잠겨 있거나 현재 열려 있기 때문에 삭제할 수 없습니다.</entry>
    <entry key="CannotDeleteMultiLockedOrOpenHarness">선택한 하네스 중 일부가 잠겨 있거나 현재 열려 있기 때문에 삭제할 수 없습니다.</entry>
    <entry key="MoveHarnessFailed">Harness move failed.</entry>
    <entry key="InputFrameBitIgnored">''{1}'' 이름의 입력 신호 {0, number, integer}에 대한 프레임 기반 샘플링 모드 사양이 무시됩니다. 이 입력에 대한 프레임 기반 샘플링 모드를 유지하고 싶다면 DSP System Toolbox 블록 라이브러리에서 'Check Signal Attributes' 블록을 삽입한 다음 적절히 구성하십시오.</entry>
    <entry key="OutputFrameBitIgnored">''{1}'' 이름의 출력 신호 {0, number, integer}에 대한 프레임 기반 샘플링 모드 사양이 무시됩니다. 이 출력에 대한 프레임 기반 샘플링 모드를 유지하고 싶다면 DSP System Toolbox 블록 라이브러리에서 'Check Signal Attributes' 블록을 삽입한 다음 적절히 구성하십시오.</entry>
    <entry key="CustomSrcPathSpecifiedForBuiltInSrc">Custom source paths cannot be specified when the source type is not 'Custom'.</entry>
    <entry key="CustomSinkPathSpecifiedForBuiltInSink">Custom sink paths cannot be specified when the sink type is not 'Custom'.</entry>
    <entry key="LockedBDForHarness">Unable to modify the locked model ''{0}'' because its test harness is open. Close the test harness to unlock the model.</entry>
    <entry key="InvalidSSHandle">A handle to a subsystem block must be passed in.</entry>
    <entry key="ScopeInconsistency">Found scope inconsistency for goto-tag '{0}'.</entry>
    <entry key="GoToTagVisibility">Found scope inconsistency for goto-tag '{0}.</entry>
    <entry key="HeadlessMATLABNotSupported">Harness operations are not supported because MATLAB was started with -nodisplay option. Please restart MATLAB without this option to enable harness operations.</entry>
    <entry key="SILBlockGenFailed">Unable to generate Software-in-the-loop (SIL) block for the component under test. Please generate code for the component to debug this failure.</entry>
    <entry key="PILBlockGenFailed">Unable to generate Processor-in-the-loop (PIL) block for the component under test. Please generate code for the component to debug this failure.</entry>
    <entry key="CloseHarness">''{1}''에 속한 테스트 하네스 ''{0}''이(가) 열려 있습니다. 테스트 하네스를 닫고 모델을 닫으시겠습니까?</entry>
    <entry key="FailRebuildOnInterfaceChange">The interface of the component under test has been changed by adding or deleting one or more inputs, outputs, function arguments or control ports. This disables rebuilding the input and output conversion subsystems and control inputs. Please close and re-open the harness to synchronize the component under test and retry the rebuild operation.</entry>
    <entry key="MdlRefFailRebuildOnInterfaceChange">초기화, 재초기화, 재설정 또는 종료 포트의 추가와 삭제로 인해 Model 블록의 인터페이스가 변경되었습니다. 이로 인해 입력 및 출력 변환 서브시스템과 제어 입력에 대한 재빌드가 비활성화됩니다. Model 블록 설정을 동기화하고 재빌드 작업을 재시도하려면 하네스를 닫았다가 다시 여십시오.</entry>
    <entry key="NoSimForlockedBD">Compiling or simulating the locked model ''{0}'' is not supported because its test harness is open. </entry>
    <entry key="UpgradeAdvisorNotSupported">테스트 하네스 모델에는 업그레이드 어드바이저가 지원되지 않습니다.</entry>
    <entry key="InvalidSimModeForHarnessBD">This simulation mode is not supported for harness models. Please select from Normal, Accelerator or Rapid Accelerator modes.</entry>
    <entry key="TestSeqSrcOutputNotInitialized">Skipping ground value initialization for output ''{0}'' for Test Sequence block ''{1}'' because it is a bus signal containing variable sized elements. Please initialize this output manually before running a simulation.</entry>
    <entry key="StateflowChartSrcOutputNotInitialized">Skipping ground value initialization for output ''{0}'' for Chart block ''{1}'' because it is a bus signal containing variable sized elements. Please initialize this output manually before running a simulation.</entry>
    <entry key="NoOpenTestCasesFound">이 하네스에 대해 열려 있는 테스트 케이스를 찾지 못했습니다.</entry>
    <entry key="OpenMATLABBasedTests">Test Manager에 열린 상태의 MATLAB 기반 Simulink 테스트가\n있습니다. 이러한 테스트에 대해 연결 정보가 불완전하거나\n누락되었을 수 있습니다.</entry>
    <entry key="CreateNewTestcase">새 테스트 케이스를 만들려면 Test Manager를 여십시오.</entry>
    <entry key="OpenTestcases">테스트 케이스 열기:</entry>
    <entry key="TestHarnessProperties"> 테스트 하네스 속성... </entry>
    <entry key="CannotCloneAsTestHarnessIsOpen">Unable to clone the test harness ''{0}'' because it is loaded or open. Close the test harness before cloning it.</entry>
    <entry key="CannotCloneWhenSystemIsBusy">Cannot clone the test harness ''{0}'' because the system is busy. This is possible if the main model is being compiled or simulated or if the harness cannot be opened because another model with the same name is open.</entry>
    <entry key="CouldNotLoadCompiledSigDescriptorInput">Could not compute compiled signal attributes for input port {0, number, integer} of the component under test. This is most likely because the block is part of an inactive variant and was removed during model update. Activate the variant or choose the 'Prototyping' harness objective to create a harness for this component.</entry>
    <entry key="CouldNotLoadCompiledSigDescriptorOutput">Could not compute compiled signal attributes for output port {0, number, integer} of the component under test. This is most likely because the block is part of an inactive variant and was removed during model update. Activate the variant or choose the 'Prototyping' harness objective to create a harness for this component.</entry>
    <entry key="BlockDiagramHarnessNameChange">The name of the model being referenced by Test Harness ''{0}'' has changed. Updating the model name of the Model block within the test harness. Please resave the model to save changes.</entry>
    <entry key="BlockDiagramHarnessNameChangeSSRef">테스트 하네스 ''{0}''에서 참조 중인 모델 이름이 변경되었습니다. 테스트 하네스 내에서 Subsystem Reference 블록의 모델 이름이 업데이트됩니다. 변경 내용을 저장하려면 모델을 다시 저장하십시오.</entry>
    <entry key="TestHarnessNotFound">Could not find the test harness ''{0}'' for ''{1}''.</entry>
    <entry key="SLDVExportAborted">내보내기 작업이 중단되었습니다.</entry>
    <entry key="SLDVExportSelectHarness">내보낼 기존 테스트 하네스를 선택하십시오.</entry>
    <entry key="SLDVExportCreateHarness">내보낼 새 테스트 하네스를 만드십시오.</entry>
    <entry key="SLDVExportDialogTitle">하네스 선택</entry>
    <entry key="SLDVExportDialogInfo">대상 하네스를 선택합니다.</entry>
    <entry key="SLDVImport_CannotCreateTestHarness">Cannot create a new test harness when importing Simulink Design Verifier results created from the test harness ''{0}''.</entry>
    <entry key="SLDVImport_CannotUseOtherTestHarness">Cannot reuse another test harness ''{0}'' when importing Simulink Design Verifier results created from the test harness ''{1}''.</entry>
    <entry key="AbortSLDVUrlCall">모델 ''{1}''에 속한 테스트 하네스 ''{0}''이(가) 열려 있기 때문에 이 작업을 수행할 수 없습니다. 이 작업을 수행하기 전에 하네스를 닫으십시오.</entry>
    <entry key="AbortSLDVUrlCallTitle">오류</entry>
    <entry key="MismatchNumRootInports">Cannot use the test harness ''{0}'' because it has {1, number, integer} root inport blocks. Please specify a test harness which has exactly {2, number, integer} root inport blocks.</entry>
    <entry key="NoSLDVTestCasesORCounterExamples">Could not find any testcases or counter examples in the Simulink Design Verifier data file.</entry>
    <entry key="unexpectedDataFormat">The data file contains unexpected data formats. Please specify a file containing valid Simulink Design Verifier data.</entry>
    <entry key="SLDVExportDialogNote1">새 하네스 ''{0}''이(가) 생성됩니다.</entry>
    <entry key="SLDVExportDialogNote2">하네스 ''{0}'' 닫은 후.</entry>
    <entry key="TestManagerNotFound">Test Manager could not be opened.</entry>
    <entry key="CannotUseDeletedHarnessName">The harness name ''{0}'' selected was being used by a harness in a block that has been deleted. This name is being reserved in the event that the delete block operation is undone. Please choose a different name.</entry>
    <entry key="InvalidParamValueForLibHarness">파라미터 ''{0}''의 값이 무시됩니다. 이 파라미터는 라이브러리 컴포넌트 또는 서브시스템 모델의 테스트 하네스에서 ''{1}''(으)로 설정되어야 합니다.</entry>
    <entry key="InvalidPostRebuildCBForLibHarness">'PostRebuildCallback'' 파라미터가 무시됩니다. 이 파라미터는 라이브러리 컴포넌트 또는 서브시스템 모델의 테스트 하네스에서 지원되지 않습니다.</entry>
    <entry key="InvalidParamValueForSLDVCompatHarness">파라미터 ''{0}''의 값이 무시됩니다. 이 파라미터는 Simulink Design Verifier 호환 테스트 하네스에서 ''{1}''(으)로 설정되어야 합니다.</entry>
    <entry key="InvalidParamValueForUserDefFcn">파라미터 ''{0}''의 값이 무시됩니다. 이 파라미터는 S-Function 또는 System Object 블록의 테스트 하네스에서 ''{1}''(으)로 설정되어야 합니다.</entry>
    <entry key="InvalidParamValueForImplicitLink">파라미터 ''{0}''의 값이 무시됩니다. 이 파라미터는 묵시적으로 연결된 블록의 테스트 하네스에서 ''{1}''(으)로 설정되어야 합니다.</entry>
    <entry key="InvalidParamValueForClSrInterface">파라미터 ''{0}''의 값이 무시됩니다. 이 파라미터는 클라이언트-서버 포트가 있는 컴포넌트의 테스트 하네스에서 ''{1}''(으)로 설정되어야 합니다.</entry>
    <entry key="InvalidOwnerForLibHarnessCreation">라이브러리의 최상위에 있지 않은 블록에 대해서는 테스트 하네스를 만들 수 없습니다.</entry>
    <entry key="CannotPushLibHarness">Cannot execute push harness operation for a test harness of a library component or a Subsystem model.</entry>
    <entry key="CannotPushZCHarness">Unable to execute push harness operation for a test harness of an Architecture or Software Architecture model.</entry>
    <entry key="CannotRebuildLibHarness">Rebuilding a test harness of a library component or a Subsystem model is not supported.</entry>
    <entry key="CannotPushWhenALibHarnessIsOpen">Cannot update the library ''{0}'' because a test harness of the library is open. Please close the test harness and try the operation again.</entry>
    <entry key="CannotCreateHarnessWhenLibIsLocked">라이브러리 ''{0}''이(가) 잠겨 있기 때문에 테스트 하네스를 생성할 수 없습니다.</entry>
    <entry key="CannotDeleteHarnessWhenLibIsLocked">Cannot delete a test harness because the library ''{0}'' is locked.</entry>
    <entry key="CannotSetHarnessWhenLibIsLocked">Cannot set a test harness property because the library ''{0}'' is locked.</entry>
    <entry key="CannotOpenMultipleHarnessWhenLibIsLocked">라이브러리 ''{0}''이(가) 잠겨 있으므로 여러 개의 하네스를 열 수 없습니다.</entry>
    <entry key="CannotMoveHarnessWhenLibIsLocked">Cannot move a test harness because the library ''{0}'' is locked.</entry>
    <entry key="CannotCloneHarnessWhenLibIsLocked">Cannot clone a test harness because the library ''{0}'' is locked.</entry>
    <entry key="PostCreateCallBackError">The post-create callback ''{0}'' aborted with the following error(s).</entry>
    <entry key="InvalidPostCreateCallbackError">Post-create callbacks specified as cell arrays must contain all strings or all character arrays.</entry>
    <entry key="PostRebuildCallBackError">The post-rebuild callback aborted with the following error(s).</entry>
    <entry key="CannotMoveWhenALibHarnessIsAlreadyOpen">Cannot move or clone the test harness because another test harness of the library ''{0}'' is open. Please close the test harness and try the move operation again.</entry>
    <entry key="CannotMoveWhenAHarnessIsOpenForDestination">Cannot move the test harness because another test harness of the destination model ''{0}'' is open. Close the test harness and try the move operation again.</entry>
    <entry key="CannotMoveAsDestinationModelIsLocked">Cannot move or clone the test harness because the destination model ''{0}'' is locked.</entry>
    <entry key="NoHarnessForOwner">''{0}''에 대해 열려 있는 테스트 하네스가 없으므로 테스트 하네스를 닫을 수 없습니다.</entry>
    <entry key="GeneratedCodeForSILPILBlockCreate">SIL/PIL 블록을 만들 때 기존 생성 코드 사용</entry>
    <entry key="GeneratedCodeForSILPILBlockRebuild">SIL/PIL 블록을 재빌드할 때 기존 생성 코드 사용</entry>
    <entry key="ExistingBuildFolder">빌드 폴더: </entry>
    <entry key="ExistingBuildFolderError">The specified existing build folder path is invalid</entry>
    <entry key="NormalHarnessBuildFolderWarning">Ignoring the ''ExistingBuildFolder'' parameter as it is only supported with harnesses that have 'Software-in-the-loop (SIL)' or 'Processor-in-the-loop (PIL)' verification mode</entry>
    <entry key="BuildFolderPathForModelError">The ''ExistingBuildFolder'' parameter cannot be specified for a Model Reference or a Block Diagram harness</entry>
    <entry key="CrossReleaseImportError">Error using the crossReleaseImport function during harness creation</entry>
    <entry key="CrossReleaseImportInterfaceChange">The interface of the block generated from the crossReleaseImport function is different from that of the component under test</entry>
    <entry key="UnableToGroundTermVirtualBus">Unable to ground or terminate auto-generated Virtual Bus ports</entry>
    <entry key="InvalidParamInHarnessInfoXML">harnessInfo.xml 파일에서 예기치 않은 파라미터 ''{0}''이(가) 발견되었습니다. harnessInfo 파일을 수정하거나, 경로에서 기존 harnessInfo.xml을 제거한 후 하네스 모델을 메인 모델로 가져오십시오.</entry>
    <entry key="UnableCreateSWArchOrAutosarModelsWithoutCompiling">Creating or rebuilding a test harness without compiling an owner model is not supported for software and AUTOSAR architecture models.</entry>
    <entry key="CannotSaveHarnessAnotherTransactionActive">현재 다른 모델을 저장하는 중이므로 ''{0}''에 대한 테스트 하네스를 저장할 수 없습니다. 저장 작업을 다시 시도해 보십시오.</entry>
    <entry key="HarnessEquivalenceCheckOwnerIsVirtualSubsystem">하네스 소유자가 가상 서브시스템이기 때문에 체크섬 비교가 비활성화되었습니다. 체크섬 비교를 활성화하려면 서브시스템을 Atomic Subsystem으로 만들어 보십시오.</entry>
    <entry key="HarnessEquivalenceCheckOwnerIsModel">하네스 소유자가 블록 다이어그램이고 정의에 따르면 체크섬이 동일하므로 체크섬 비교를 건너뛰었습니다.</entry>
    <entry key="HarnessEquivalenceCheckOverall">전체:</entry>
    <entry key="HarnessEquivalenceCheckContents">내용:</entry>
    <entry key="HarnessEquivalenceCheckSummary">요약:</entry>
    <entry key="HarnessEquivalenceCheckSame">같음</entry>
    <entry key="HarnessEquivalenceCheckDifferent">다름</entry>
    <entry key="HarnessEquivalenceCheckNotification">''{1}''이(가) 소유한 하네스 ''{0}''의 하네스 검사 결과: {2}</entry>
    <entry key="CheckHarnessStage">테스트 하네스 검사</entry>
    <entry key="CannotCheckHarnessWhenAnotherHarnessIsActive">Comparing checksums of test harness ''{0}'' on ''{1}'' is not supported because other test harnesses are open. Close other test harnesses first.</entry>
    <entry key="CheckHarnessFailedNotification">''{1}''이(가) 소유한 테스트 하네스 ''{0}''의 체크섬을 비교하지 못했습니다.</entry>
    <entry key="CheckHarnessFailedSystemChecksum">메인 모델 블록 ''{2}''의 체크섬 계산 중 오류가 발생하여, ''{1}''이(가) 소유한 테스트 하네스 ''{0}''의 체크섬을 비교하지 못했습니다.</entry>
    <entry key="CheckHarnessFailedHarnessChecksum">Failed to compare the checksums of test harness ''{0}'' owned by ''{1}'' due to error computing checksum for harness model block ''{2}''.</entry>
    <entry key="CheckHarnessMissingDetailsArgument">''details'' 출력 인수가 요청되었지만, ''systemDetails'' 입력 인수가 제공되지 않았습니다.</entry>
    <entry key="CheckHarnessWrongChecksumFormat">체크섬 형식이 올바르지 않습니다.</entry>
    <entry key="CheckHarnessChecksumMatch">하네스에 포함된 컴포넌트의 체크섬과 메인 모델 컴포넌트의 체크섬이 동일합니다.</entry>
    <entry key="CheckHarnessPartialChecksumMatch">하네스에 포함된 컴포넌트의 내용과 메인 모델 컴포넌트의 내용이 동일합니다. 하지만 블록과 마스크 파라미터는 서로 다릅니다.</entry>
    <entry key="CheckHarnessParametersChecksumMatch">하네스에 포함된 컴포넌트의 내용과 메인 모델 컴포넌트의 내용이 서로 다릅니다. 하지만 블록과 마스크 파라미터는 동일합니다. 자세한 내용은 &lt;a href="matlab:helpview([docroot, ''/sltest/helptargets.map''], ''HarnessModelComponentComparisonExample'');"&gt;sltest.harness.check 문서&lt;/a&gt;를 참조하십시오.</entry>
    <entry key="CheckHarnessChecksumMatchFailed">하네스에 포함된 컴포넌트의 체크섬과 메인 모델 컴포넌트의 체크섬이 서로 다릅니다. 자세한 내용은 &lt;a href="matlab:helpview([docroot, ''/sltest/helptargets.map''], ''HarnessModelComponentComparisonExample'');"&gt;sltest.harness.check 문서&lt;/a&gt;를 참조하십시오.</entry>
    <entry key="InitTermResetSSNotSupported">Harnesses cannot be created for Initialize, Terminate, Reinitialize or Reset subsystems.</entry>
    <entry key="InitTermResetGroup">초기화/종료/재초기화/재설정 포트에 대한 스케줄러 생성</entry>
    <entry key="InitTermResetOption">초기화, 재초기화, 재설정, 종료 포트 활성화</entry>
    <entry key="InitTermResetPeriodicEventGroup">초기화/종료/재초기화/재설정 및 주기적 이벤트 포트에 대한 스케줄러 생성</entry>
    <entry key="PeriodicEventPortOption"> 주기적 이벤트 포트 활성화</entry>
    <entry key="InvalidScheduleInitTermResetOption">''ScheduleInitTermReset'' 설정이 무시됩니다. 함수 내보내기 모델에 대해서 하네스를 만들 때, 그리고 그 함수 내보내기 모델에 초기화, 종료, 재초기화 또는 재설정 이벤트 포트를 가진 Model 블록이 없을 경우에만 이 옵션을 true로 설정할 수 있습니다.</entry>
    <entry key="InvalidCreateUnifiedSchedulerOptionForMR">이 모델 참조 하네스에 대해 스케줄러를 만들 수 없습니다. 이 옵션을 활성화하려면 Model 블록에서 주기적 이벤트 포트 설정을 켜십시오. ''SchedulerBlock'' 설정이 무시됩니다.</entry>
    <entry key="InvalidCreateUnifiedSchedulerOptionForModelWithContinuousTimeBlock">이 모델에 연속시간 블록이 포함되어 있습니다. 이 모델에는 Scheduler 블록 또는 스케줄 편집기를 사용할 수 없습니다. ''SchedulerBlock'' 설정이 무시됩니다.</entry>
    <entry key="InvalidSeparateAssessmentJMAAB_B">''SeparateAssessment'' 설정이 무시됩니다. 비동기 함수 호출 입력을 갖는 모델에 대해 하네스를 만드는 경우 이 옵션은 항상 false여야 합니다.</entry>
    <entry key="RunFirstLastSubsystemNotSupported">''실행 순서''가 'First' 또는 'Last'로 설정된 서브시스템에 대해서는 하네스를 생성할 수 없습니다.</entry>
    <entry key="InvalidAutoShapeInputsOption">"AutoShapeInputs" 설정이 무시됩니다. 이 옵션은 Inport, Constant, From Workspace 및 From File 소스에 대해서만 지원됩니다.</entry>
    <entry key="InvalidAutoShapeInputsOption2">Ignoring "AutoShapeInputs" setting. For Signal Builder, Test Sequence, Chart and custom sources, this parameter is set automatically. </entry>
    <entry key="CanNotBeCreatedForComplexDatatype_SB">Cannot create a harness for the selected component because one or more inputs of the component have complex data type. Complex data type is not supported by the Signal Builder block.</entry>
    <entry key="CanNotBeCreatedForAOB_SB">컴포넌트의 입력 중 하나 이상이 버스 배열을 갖기 때문에 선택한 컴포넌트에 대해 하네스를 만들 수 없습니다. 버스 배열은 Signal Builder 블록에서 지원되지 않습니다.</entry>
    <entry key="CanNotBeCreatedForBusWithFrames_SB">Cannot create a harness for the selected component because one or more inputs of the component have signals with frame-based sampling mode. Signals with frame-based sampling mode are not supported by the Signal Builder block.</entry>
    <entry key="VariableDimsNotSupported_SB">Cannot create a harness for the selected component because one or more inputs of the component have variable dimensional signal. Variable dimensional signal is not supported by the Signal Builder block.</entry>
    <entry key="FailForComplexDatatype_SB">The input {0, number, integer} of the component has complex data type. Complex data type is not supported by the Signal Builder block.</entry>
    <entry key="FailForBusWithFrames_SB">컴포넌트의 {0, number, integer}번 입력에 프레임 기반 샘플링 모드를 사용하는 신호가 있습니다. 프레임 기반 샘플링 모드를 사용하는 신호는 Signal Builder 블록에서 지원되지 않습니다.</entry>
    <entry key="FailForVariableDims_SB">The input {0, number, integer} of the component has variable dimensional signal. Variable dimensional signal is not supported by the Signal Builder block.</entry>
    <entry key="FailForAOB_SB">컴포넌트의 {0, number, integer}번 입력에 버스 배열이 있습니다. 버스 배열은 Signal Builder 블록에서 지원되지 않습니다.</entry>
    <entry key="CanNotBeCreatedForBusWithFrames_SE">컴포넌트의 입력 중 하나 이상이 프레임 기반 샘플링 모드를 사용하는 신호를 갖기 때문에, 선택한 컴포넌트에 대해 하네스를 만들 수 없습니다. 프레임 기반 샘플링 모드를 사용하는 신호는 Signal Editor 블록에서 지원되지 않습니다.</entry>
    <entry key="VariableDimsNotSupported_SE">컴포넌트의 입력 중 하나 이상이 가변 차원 신호를 갖기 때문에, 선택한 컴포넌트에 대해 하네스를 만들 수 없습니다. 가변 차원 신호는 Signal Editor 블록에서 지원되지 않습니다.</entry>
    <entry key="FailForBusWithFrames_SE">컴포넌트의 {0, number, integer}번 입력에 프레임 기반 샘플링 모드를 사용하는 신호가 있습니다. 프레임 기반 샘플링 모드를 사용하는 신호는 Signal Editor 블록에서 지원되지 않습니다.</entry>
    <entry key="FailForVariableDims_SE">컴포넌트의 {0, number, integer}번 입력에 가변 차원 신호가 있습니다. 가변 차원 신호는 Signal Editor 블록에서 지원되지 않습니다.</entry>
    <entry key="CanNotBeCreatedForComplexDatatype_In">Cannot create a harness for the selected component because one or more inputs of the component have complex elements. Complex elements are not supported when the ''AutoShapeInputs' option is true.</entry>
    <entry key="CanNotBeCreatedForBusWithFrames_In">Cannot create a harness for the selected component because one or more inputs of the component have signals with frame-based sampling mode. Signals with frame-based sampling mode are not supported when the ''AutoShapeInputs' option is true.</entry>
    <entry key="VariableDimsNotSupported_In">Cannot create a harness for the selected component because one or more inputs of the component have a variable dimensioned signal. Variable dimensional signals are not supported when the ''AutoShapeInputs' option is true.</entry>
    <entry key="FailForComplexDatatype_In">컴포넌트의 {0, number, integer}번 입력이 복소수 데이터형을 갖습니다. Inport 소스의 입력을 자동 성형하는 경우에는 복소수 데이터형이 지원되지 않습니다.</entry>
    <entry key="FailForBusWithFrames_In">컴포넌트의 {0, number, integer}번 입력에 프레임 기반 샘플링 모드를 사용하는 신호가 있습니다. Inport 소스의 입력을 자동 성형하는 경우에는 프레임 기반 샘플링 모드를 사용하는 신호가 지원되지 않습니다.</entry>
    <entry key="FailForVariableDims_In">컴포넌트의 {0, number, integer}번 입력에 가변 차원 신호가 있습니다. Inport 소스의 입력을 자동 성형하는 경우에는 가변 차원 신호가 지원되지 않습니다.</entry>
    <entry key="ScopeNameMatchesCUTName">Could not insert the stub Simulink Function for the function ''{0}'' because the scope name ''{1}'' matches the name of the component under test.</entry>
    <entry key="CannotSupportIRTFunctionWithSideIO">모델이 함수 내보내기 모델이 아니고 Initialize Function, Reinitialize Function, Reset Function 또는 Terminate Function에 연결된 루트 수준의 Inport 또는 Outport 블록이 모델 안에 포함되어 있기 때문에 이 모델에 대해 테스트 하네스를 만들 수 없습니다.</entry>
    <entry key="InvalidParamValueIRTFunctionWithSideIO">파라미터 ''{0}''의 값이 무시됩니다. 이 파라미터는 Initialize Function, Reinitialize Function, Reset Function 또는 Terminate Function에 연결된 루트 수준의 Inport 또는 Outport 블록이 포함된 모델에 대해 테스트 하네스를 만들 때 ''{1}''(으)로 설정되어야 합니다.</entry>
    <entry key="WarnIfTSBDrivingDSW">The Test Sequence block ''{0}'' drives at least one generated Data Store Memory (DSM) block using a Data Store Write (DSW) block. It also calls a Simulink Function block or drives a conditionally executed subsystem through a trigger or function-call. This setup can lead to data inconsistency warnings during simulation if the conditionally executed subsystem reads the DSM before the DSW executes. Consider modifying the harness to eliminate the data inconsistency warnings or use a source type other than the Test Sequence block.</entry>
    <entry key="WarnIfSFCDrivingDSW">The Chart block ''{0}'' drives at least one generated Data Store Memory (DSM) block using a Data Store Write (DSW) block. It also calls a Simulink Function block or drives a conditionally executed subsystem through a trigger or function-call. This setup can lead to data inconsistency warnings during simulation if the conditionally executed subsystem reads the DSM before the DSW executes. Consider modifying the harness to eliminate the data inconsistency warnings or use a source type other than the Chart block.</entry>
    <entry key="UsedSignalsOnlyUnsupportedConfig">Ignoring the UsedSignalsOnly flag. This parameter is supported only for non-graphical block diagram harnesses with Signal Builder input and AutoShapeInputs on, and requires a Simulink Design Verifier license.</entry>
    <entry key="CreateOpenContextWithoutReuseWindowFlag">The CreateOpenContext flag cannot be true without the ReuseWindow flag also being true.</entry>
    <entry key="ReuseWindowWithoutOpenContext">Open Context를 사용하지 않을 때는 ReuseWindow 파라미터가 true일 수 없습니다.</entry>
    <entry key="ImportSLDVData_InvalidParams">No other Name, Value pairs are allowed if 'TestCase' is specified.</entry>
    <entry key="ImportSLDVData_TCInvalidModel">The TestCase does not use the model "{0}".</entry>
    <entry key="ImportSLDVData_TCInvalidHarness">'HarnessName' property of the 'Test Case' is not correctly specified. The test case must refer to a Test Harness with Inport, Signal Editor or Signal Builder Source.</entry>
    <entry key="ImportSLDVData_TCInvalidTestCaseType">A real-time TestCase cannot be used to import Simulink Design Verifier generated data.</entry>
    <entry key="ImportSLDVData_ReadOnlyDir">Directory not writable.</entry>
    <entry key="ImportSLDVData_ReadOnlyFile">File not writable.</entry>
    <entry key="ImportSLDVData_InvalidHarness">The Test Harness cannot be used because it does not have Inport, Signal Editor or Signal Builder Source.</entry>
    <entry key="ImportSLDVData_UndefinedSB">Failed to identify the Signal Editor or Signal Builder Source of the Test Harness.</entry>
    <entry key="ImportSLDVData_SBNumberOutportMismatch">The Signal Editor or Signal Builder Source block has {0, number, integer} outport ports which is not equal to the expected number {1, number, integer}.</entry>
    <entry key="ImportSLDVData_InvalidTestFileName">테스트 파일 이름이 유효하지 않습니다. 테스트 파일 확장자는 .mldatx여야 합니다.</entry>
    <entry key="ComponentEditingDeprecated">The "EnableComponentEditing" parameter has been deprecated and is being ignored. Use the "SynchronizationMode" parameter to control when the component under test is synchronized between the harness and main model.</entry>
    <entry key="ExportTestCaseDialog_NewTestCase">&lt;새 테스트 케이스 만들기&gt;</entry>
    <entry key="ExportTestCaseDialog_SelectTestFile">Simulink 테스트 파일 선택</entry>
    <entry key="ExportTestCaseDialog_CreateTestFile">Simulink 테스트 파일 만들기</entry>
    <entry key="ExportTestCaseDialog_NewTestHarness">Inport, Signal Editor 또는 Signal Builder의 새 테스트 하네스 만들기</entry>
    <entry key="ExportTestCaseDialog_ResuseTestHarness">Inport, Signal Editor 또는 Signal Builder의 기존 테스트 하네스 재사용하기</entry>
    <entry key="ExportTestCaseDialog_TestHarness">테스트 하네스: </entry>
    <entry key="ExportTestCaseDialog_TestHarnessSrc">하네스 소스: </entry>
    <entry key="ExportTestCaseDialog_TestDataFormat">테스트 데이터 형식: </entry>
    <entry key="ExportTestCaseDialog_TestHarnessOpts">테스트 하네스 옵션</entry>
    <entry key="ExportTestCaseDialog_NewTestFile">새 테스트 파일 사용</entry>
    <entry key="ExportTestCaseDialog_ResuseTestFile">기존 테스트 파일 재사용</entry>
    <entry key="ExportTestCaseDialog_TestFile">테스트 파일: </entry>
    <entry key="ExportTestCaseDialog_TestCase">테스트 케이스: </entry>
    <entry key="ExportTestCaseDialog_TestManagerOpts">Test Manager 옵션</entry>
    <entry key="ExportTestCaseDialog_Title">Design Verifier 테스트 케이스 내보내기</entry>
    <entry key="ExportTestCaseDialog_Desc">Simulink Design Verifier에서 생성된 테스트 케이스 또는 반례를 Simulink Test로 내보냅니다.</entry>
    <entry key="ExportTestCaseDialog_InvalidTestFileName">테스트 파일 이름이 유효하지 않음</entry>
    <entry key="SelectModel">Simulink 모델 선택</entry>
    <entry key="SelectDir">디렉터리 선택</entry>
    <entry key="BrowseBtn">찾아보기...</entry>
    <entry key="WarnAboutRequiredConfigSetUpdatesForExportFcnModel">If this export-function model was imported from an AUTOSAR composition, you might need to enable the configuration parameter ''SimGenImportedTypeDefs'' to simulate the model. Also, if this is a multi-rate export-function model, you might need to enable the configuration parameter ''EnableRefExpFcnMdlSchedulingChecks'' to simulate the model.</entry>
    <entry key="UpdatedConfigSet_GenTypeDefs">The configuration parameter ''SimGenImportedTypeDefs'' has been enabled.</entry>
    <entry key="UpdatedConfigSet_SampleTsCheck">The component under test in the test harness is a multi-rate model. The configuration parameter ''EnableRefExpFcnMdlSchedulingChecks'' has been disabled to allow the test harness to simulate.</entry>
    <entry key="WarnAboutRequiredConfigSetUpdatesForTSBlock">테스트 하네스가 참조 configset을 사용합니다. 테스트 하네스를 시뮬레이션하려면 구성 파라미터 ''UnderspecifiedInitializationDetection''을 ''Simplified''로, ''StrictBusMsg''를 ''ErrorLevel1''으로 설정해야 할 수 있습니다. </entry>
    <entry key="WarnAboutConfigSetUpdatesForTSBlock_1">테스트 하네스 시뮬레이션을 허용하도록 구성 파라미터 ''UnderspecifiedInitializationDetection''이 ''단순 방식''으로 업데이트되었습니다.</entry>
    <entry key="WarnAboutConfigSetUpdatesForTSBlock_2">테스트 하네스 시뮬레이션을 허용하도록 구성 파라미터 ''StrictBusMsg''가 ''ErrorLevel1''로 업데이트되었습니다.</entry>
    <entry key="PostRebuildCBNotFound">재빌드 후 호출할 콜백 함수 ''{0}''을(를) 찾을 수 없습니다.</entry>
    <entry key="PostCreateCBTitle">생성 후 콜백 메서드</entry>
    <entry key="PostRebuildCBTitle">재빌드 후 콜백 메서드</entry>
    <entry key="WarnGroundAdded">One or more inputs of the component under test have signal attributes that are incompatible with the selected source. These inputs will be driven by ground blocks in the test harness. Please see the documentation on &lt;a href="matlab:helpview([docroot, ''/sltest/helptargets.map''], ''HarnessConstructionRefPageTag'');"&gt;Test Harness Construction for Specific Model Elements&lt;/a&gt;.</entry>
    <entry key="WarnTermAdded">One or more outputs of the component under test have signal attributes that are incompatible with the selected sink. These outputs will be connected to terminator blocks in the test harness. Please see the documentation on &lt;a href="matlab:helpview([docroot, ''/sltest/helptargets.map''], ''HarnessConstructionRefPageTag'');"&gt;Test Harness Construction for Specific Model Elements&lt;/a&gt;.</entry>
    <entry key="SchedulerBlock">함수 호출 및 레이트에 대한 스케줄러 추가:</entry>
    <entry key="FcnCallDriverBlock">다음을 사용하여 함수 호출 신호 생성:</entry>
    <entry key="InvalidDialogType">Invalid choice for ''dialogType''. It must be either ''HarnessCreate'' or ''HarnessImport'' or ''HarnessManager''.</entry>
    <entry key="UnableToFindCUT">Unable to load the test harness ''{0}''.  The component under test in the harness model was not found.  This may indicate that the component under test in the externally saved harness model was modified or deleted.</entry>
    <entry key="CannotCreateWhenSaving">Cannot create a test harness because the main model ''{0}'' is being saved.</entry>
    <entry key="CannotActivateWhenSaving">Cannot open harness because the main model ''{0}'' is being saved.</entry>
    <entry key="CannotExportWhenSaving">Cannot export harness because the model ''{0}'' is being saved.</entry>
    <entry key="InvalidSchedulerBlkOptionTS">''SchedulerBlock'' cannot be ''MATLAB Function'' or ''Chart'' when creating a Test Harness with a Test Sequence source. Use either ''None'' or ''Test Sequence'' or ''Schedule Editor'' as ''SchedulerBlock''.</entry>
    <entry key="InvalidSchedulerBlkOptionSF">''SchedulerBlock'' cannot be ''MATLAB Function'' or ''Test Sequence'' when creating a Test Harness with a Chart source. Use either ''None'' or ''Chart'' or ''Schedule Editor'' as ''SchedulerBlock''.</entry>
    <entry key="InvalidSchedulerBlkOptionTSMdlRef">''SchedulerBlock'' cannot be ''MATLAB Function'' or ''Chart'' when creating a Test Harness with a Test Sequence source. Use either ''None'' or ''Test Sequence'' as ''SchedulerBlock''.</entry>
    <entry key="InvalidSchedulerBlkOptionSFMdlRef">''SchedulerBlock'' cannot be ''MATLAB Function'' or ''Test Sequence'' when creating a Test Harness with a Chart source. Use either ''None'' or ''Chart'' as ''SchedulerBlock''.</entry>
    <entry key="WarnAboutReplaceOnImport">가져온 테스트 하네스에 지정된 파일 이름 ''{0}''이(가) 이미 존재합니다. 하네스를 만들려면 "계속"을 클릭하십시오. 그렇지 않고 하네스 생성을 중단하려면 "취소"를 클릭하십시오.</entry>
    <entry key="WarnAboutReplaceOnImportTitle">가져올 파일 이름 충돌</entry>
    <entry key="ScheduleEditorNotSupported">Cannot specify ''Schedule Editor'' as ''SchedulerBlock'' unless you are creating a Test Harness for a block diagram. Please use either ''None'' or ''Test Sequence'' or ''MATLAB Function'' or ''Chart'' as ''SchedulerBlock''.</entry>
    <entry key="DiscreteRateWithOffset_Create">The ''Scheduler Block'' options ''Test Sequence'', ''MATLAB Function'', and ''Chart'' are not supported when creating a test harness for a model containing discrete rate with non-zero offset. Use either ''None'' or ''Schedule Editor'' as ''SchedulerBlock''</entry>
    <entry key="DiscreteRateWithOffset_Rebuild">Cannot rebuild the test harness because the model contains discrete rates with non-zero offset.</entry>
    <entry key="ContTsWithExpPartitions_Create">Cannot create a test harness for this model because the model has both explicit partitions and continuous sample time.</entry>
    <entry key="ContTsWithExpPartitions_Rebuild">Cannot rebuild the test harness because the model has both explicit partitions and continuous sample time.</entry>
    <entry key="CannotCreateWhen_EnableMultiTasking_Off">Cannot create a test harness with ''Schedule Editor'' for a rate-based model when the configuration parameter ''EnableMultiTasking'' is disabled. Please enable the parameter to create a test harness.</entry>
    <entry key="CannotCreateWhen_SolverType_Variable">Cannot create a test harness with ''Schedule Editor'' for a model when the solver type is ''Variable-step''. Please change the solver type to ''Fixed-step'' to create a test harness.</entry>
    <entry key="ImportFileNameEmpty">''가져올 Simulink 모델'' 필드는 비워 둘 수 없습니다.</entry>
    <entry key="CreateUsingSchEditorForModelWithExpPartition">Creating the test harness with 'Schedule Editor' because the model contains one or more explicit partitions.</entry>
    <entry key="SubsystemReferenceNotSupported">Test harnesses cannot be created, imported or cloned for Subsystem Reference blocks, referenced subsystem block diagrams or any blocks contained within.</entry>
    <entry key="InputConversionSSInterfaceChanged">입력 변환 서브시스템의 인터페이스가 변경되었습니다. 하네스를 재빌드한 다음 신호를 수동으로 다시 연결해야 할 수 있습니다.</entry>
    <entry key="OutputConversionSSInterfaceChanged">출력 변환 서브시스템의 인터페이스가 변경되었습니다. 하네스를 재빌드한 다음 신호를 수동으로 다시 연결해야 할 수 있습니다.</entry>
    <entry key="HarnessNotSupportedForContentsOfSubsystemModel">서브시스템 모델의 내용에 대해서는 테스트 하네스를 만들거나 가져오거나 복제할 수 없습니다.</entry>
    <entry key="HarnessNotSupportedForContentsOfSubsystemReference">Subsystem Reference 블록의 내용에 대해서는 테스트 하네스를 만들거나 가져오거나 복제할 수 없습니다.</entry>
    <entry key="WarnAboutRequiredConfigSetUpdatesForSTIndependentModel">메인 모델에서 SampleTimeConstraint가 ''샘플 시간에 독립적이어야 함''으로 설정된 참조 ConfigSet을 사용하는 중입니다. 테스트 하네스에서 하네스 시뮬레이션을 활성화하는 데 동일한 설정을 사용하므로, SampleTimeConstraint를 ''제약 없음'' 또는 ''지정됨''으로 업데이트해야 할 수 있습니다. 또한 SolverPrmCheckMsg 구성 파라미터가 ''오류''로 설정된 경우, 유한한 기본 샘플 시간을 설정해야 할 수 있습니다.</entry>
    <entry key="SampleTimeConstraintUpdatedForSTIndependentModel">메인 모델의 SampleTimeConstraint 구성 파라미터가 ''샘플 시간에 독립적이어야 함''으로 설정되었기 때문에 하네스의 SampleTimeConstraint가 ''제약 없음''으로 설정되었습니다.</entry>
    <entry key="SampleTimeUpdatedForSTIndependentModel">하네스 모델의 기본 샘플 시간이 ''{0}''(으)로 설정되었습니다.</entry>
    <entry key="WarnAboutRequiredConfigSetUpdatesForInheritedTsInSrcModel">메인 모델에서 진단 ''소스 블록이 -1 샘플 시간을 지정함(InheritedTsInSrcMsg)''이 ''오류''로 설정된 참조 ConfigSet을 사용하는 중입니다. 테스트 하네스에서 하네스 시뮬레이션을 활성화하는 데 동일한 설정을 사용하므로, InheritedTsInSrcMsg를 ''경고'' 또는 ''안 함''으로 업데이트해야 할 수 있습니다.</entry>
    <entry key="InheritedTsInSrcMsgDiagUpdatedToNone">메인 모델의 진단 ''소스 블록이 -1 샘플 시간을 지정함(InheritedTsInSrcMsg)''이 ''오류''로 설정되었기 때문에, 하네스의 이 설정이 하네스 시뮬레이션을 위해 ''안 함''으로 설정되어 있습니다.</entry>
    <entry key="InvalidCustomizableProperty">디폴트 하네스 생성 options 구조체에 지정된 유효하지 않은 속성 ''{0}''이(가) 무시됩니다. 사용자 지정 가능 속성 목록을 보려면 'help sltest.harness.setHarnessCreateDefaults'를 입력하십시오. </entry>
    <entry key="InvalidCallerForDefaultPropertySetter">하네스 디폴트 값은 sl_customization 파일 또는 API 'sltest.harness.setHarnessCreateDefaults'에 등록해야 합니다.</entry>
    <entry key="DefaultPostCreateCBTitle">기존의 생성 후 콜백 메서드:</entry>
    <entry key="AdditionalPostCreateCBTitle">추가적인 생성 후 콜백 메서드</entry>
    <entry key="DefaultPostCreateCBTooltip">기존 콜백은 하네스 디폴트 값 사용자 지정을 통해 지정되며 하네스 생성 후에 실행됩니다. 추가적인 콜백을 실행하려면 아래의 편집 상자에 입력하십시오.</entry>
    <entry key="InvalidInputArgumentForHarnessDefaults">Input value ''{2}'' does not match any valid values of parameter ''{0}''. Valid values are:\n\n''{1}''.\n</entry>
    <entry key="DefaultRegistrationsDisallowed">Registration of harness creation defaults is not allowed.</entry>
    <entry key="HarnessCreateDefaultsUpdatedByAPI">처음에 ''{0}''을(를) 통해 등록된 하네스 생성 디폴트 값이 업데이트되었습니다.</entry>
    <entry key="HarnessCreateDefaultsPrevUpdateMessage">디폴트 값이 이전에 API 'sltest.harness.setHarnessCreateDefaults'를 통해서도 수정됨</entry>
    <entry key="BeginDefaultsRegistrationUsingSLCFile">### 파일의 하네스 생성 디폴트 값을 등록하는 중: ''{0}''.\n 이전에 등록된 하네스 생성 디폴트 값이 재설정됩니다. ###</entry>
    <entry key="CannotCopySILPILHarness">''{0}''은(는) SIL/PIL 하네스이기 때문에 서브시스템에서 모델 참조로 변환하는 중에 이월할 수 없습니다.</entry>
    <entry key="HarnessCopiedLoggerInfo">하네스 ''{0}''이(가) 컴포넌트 ''{2}''에 ''{1}''(으)로 복사되었습니다.</entry>
    <entry key="InvalidGenMakefileForSILPIL">'Software-in-the-loop (SIL)' and 'Processor-in-the-loop (PIL)' verification modes require the ''Generate makefile'' option on the code generation target to be on. Please check this option and try again.</entry>
    <entry key="UsingLogHarnessOutputs">파라미터 ''LogHarnessOutputs''는 향후 릴리스에서 제거될 예정입니다. ''LogOutputs''를 대신 사용하십시오.</entry>
    <entry key="TwoLoggingParamsSpecified">파라미터 ''LogHarnessOutputs'' 및 ''LogOutputs''가 모두 지정되었습니다. ''LogOutputs''의 값이 사용됩니다. ''LogHarnessOutputs''는 향후 릴리스에서 제거될 예정입니다.</entry>
    <entry key="InvalidTopModel">Specify only one top model as the second input.</entry>
    <entry key="InvalidTopModelType">Specify a block diagram as the 'TopModel' input.</entry>
    <entry key="InvalidModelHeirarchy">First input has component(s) that are not part of the model reference hierarchy of the specified top model.\nThe model reference hierarchy consists of the following models only: \n''{0}''\nAll components must be inside one of the above listed models.</entry>
    <entry key="InvalidModelHeirarchyCause">컴포넌트 ''{0}''이(가) 지정된 최상위 모델에서 참조하지 않는 모델 ''{1}'' 내에 있습니다.</entry>
    <entry key="InvalidNVPairOption">''{0}'' is not a valid Name-Value pair option for multiple harness creation. Enter 'help sltest.harness.create' to see a list of valid options.</entry>
    <entry key="ExistingBuildFolderNotSupportedInBatchMode">'ExistingBuildFolder'는 배치 하네스 생성 시 지원되는 이름-값 쌍 옵션이 아닙니다.\n\n전달된 값이 무시됩니다.</entry>
    <entry key="HarnessPropertyRestoreFailed">변환하는 중에는 하네스 속성을 복원할 수 없습니다. 하네스 소유자 모델과 열려 있는 모든 하네스를 저장하십시오.</entry>
    <entry key="IgnoreTopModelInLegacyMode">단일 하네스 생성을 위해 TopModel 값이 무시되었습니다.</entry>
    <entry key="TopModelRequiredInBatchMode">'TopModel' is a required name-value pair argument when creating multiple harnesses.</entry>
    <entry key="InvalidDataTypeInHarnessOwnerCell">'HarnessOwners' 셀형 배열은 문자형, double형 또는 string형 데이터형만 포함할 수 있습니다.</entry>
    <entry key="WarnAboutInvalidCacheSerialization">캐시를 직렬화하지 못했습니다. 이로 인해 하네스 생성 속도가 느려집니다.</entry>
    <entry key="ShowSimulationManagerNotSupported">sltest.harness.SimulationInput 객체를 사용하는 경우 'ShowSimulationManager' 옵션은 지원되지 않습니다.</entry>
    <entry key="LoadHarnessFromFileUnsupported">The API 'Simulink.harness.internal.load_harness_from_file' cannot be used as test harness ''{0}'' has been preloaded.</entry>
    <entry key="DoNotDeleteClSrHarnessOwnerFromSoAModel">이 컴포넌트를 삭제하지 마십시오. 테스트 대상 컴포넌트는 모의 아키텍처 모델에 있어야 합니다.</entry>
    <entry key="FailedSynchronizationForClSrHarness">다음 이유로 인해 테스트 하네스 ''{0}'' 동기화에 실패했습니다. 근본 원인을 수동으로 해결할 수 없는 경우 테스트 하네스를 재빌드하거나 새 하네스를 생성하십시오.</entry>
    <entry key="HarnessOwnerNotFoundInSoATestModel">소프트웨어 아키텍처 테스트 모델 ''{0}''에서 하네스와 연결된 컴포넌트를 찾을 수 없습니다.</entry>
    <entry key="ImportNotSupportedForClientServerPorts">클라이언트-서버 포트가 있는 컴포넌트에는 테스트 하네스 가져오기가 지원되지 않습니다.</entry>
    <entry key="SoAModelCreationIssue">This issue occurred while creating a Software Architecture test model for the test harness:</entry>
    <entry key="GraphicalHarnessCreationFallback">컴포넌트 ''{1}''에 대해 생성된 소프트웨어 아키텍처 테스트 모델 ''{0}''을(를) 컴파일하지 못했습니다. 이 모델은 프로토타입용으로 구성된 테스트 하네스에서 테스트 대상 컴포넌트로 참조됩니다. 자세한 내용은 발생한 경고를 참조하십시오.</entry>
    <entry key="CloneNotSupportedForClientServerPorts">클라이언트-서버 포트가 있는 컴포넌트에는 테스트 하네스 복제가 지원되지 않습니다.</entry>
    <entry key="MoveNotSupportedForClientServerPorts">클라이언트-서버 포트가 있는 컴포넌트에는 테스트 하네스 이동이 지원되지 않습니다.</entry>
    <entry key="InvalidSyncModeForInlineCompWithClSr">클라이언트-서버 포트가 있는 소프트웨어 아키텍처 인라인 컴포넌트에는 "SyncOnPushRebuildOnly" SynchronizationMode만 지원됩니다. SynchronizationMode는 자동으로 "SyncOnPushRebuildOnly"로 설정됩니다.</entry>
    <entry key="DestinationSOATestModelNotCreated">연결된 모의 아키텍처 모델 ''{0}''이(가) MATLAB 경로에 있지 않아서 하네스를 복제할 수 없습니다.</entry>
    <entry key="MismatchCompClSrForMoveClone">두 컴포넌트 모두 클라이언트-서버 인터페이스를 갖거나 아니면 모두 갖지 않아야 하는데 현재 그렇지 않아서 컴포넌트 간에 테스트 하네스를 이동하거나 복제할 수 없습니다.</entry>
    <entry key="DestDomainUnsupportedClSrMoveClone">대상이 Software 또는 AUTOSAR 아키텍처 모델이 아니거나 그러한 모델 중 하나에 있는 블록이 아닌 경우, 클라이언트-서버 인터페이스를 갖는 컴포넌트에서 테스트 하네스를 이동하거나 복제하는 것은 지원되지 않습니다.</entry>
    <entry key="TestHarnessObserverModel">테스트 하네스/관측기</entry>
    <entry key="ManageTestHarnesses">테스트 하네스 관리...</entry>
    <entry key="CreateHarnessForModel">모델에 대해 만들기</entry>
    <entry key="CreateHarnessForBlock">다음에 대해 만들기</entry>
    <entry key="InvalidParamsCSRef_UnboundedSignal">테스트 하네스가 참조 configset를 사용하는데, 이 참조 configset는 인터페이스에 가변 크기의 비유계 신호를 갖는 컴포넌트와 연결되었습니다. 테스트 하네스를 시뮬레이션하려면, 구성 파라미터 ''SimTargetLang''를 ''C++''로 설정하고 ''MATLABDynamicMemAlloc''를 ''true''로 설정해야 할 수 있습니다.</entry>
    <entry key="HarnessSink">Sink:</entry>
    <entry key="HarnessBadgeDialogTitle"/>
  </message>
</rsccat>
