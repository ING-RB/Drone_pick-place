<?xml version="1.0" encoding="UTF-8" ?>
<!-- Copyright 2019-2025 The MathWorks, Inc. -->
<rsccat version="1.0" locale="en_US" product="Simulink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../../../../matlab/resources/schema/msgcat.xsd">
    <message>
        <entry key="IncorectArgsVarCtrl">Incorrect arguments specified for Simulink.VariantControl.</entry>
        <entry key="MultipleActiveValues">Only one choice of the variant variable ''{0}'' should be active.</entry>
        <entry key="NoActiveValues">At least one choice of the variant variable ''{0}'' should be active.</entry>
        <entry key="InvalidVarCtrlVar">The variant control variables for ''{0}'' should be of Simulink.VariantControl type.</entry>
        <entry key="InconsistentActivationTimes">Activation times of variant controls used for ''{0}'' are inconsistent.</entry>
        <entry key="InvalidVATForSimulinkVariantVariable">Simulink.VariantVariable ''{1}'' uses a Simulink.VariantControl object ''{0}'' with variant activation time set to 'runtime'. Only 'update diagram', 'update diagram analyze all choices', 'code compile', or 'startup' variant activation times are allowed.</entry>
        <entry key="InconsistentDT">Choice with condition ''{0}'' of Simulink.VariantVariable ''{1}'' has data type ''{2}'', but the data type of at least one other choice is ''{3}''. Data types of values of Simulink.VariantVariable ''{1}'' must match.</entry>
        <entry key="InconsistentNDims">Choice with condition ''{0}'' of Simulink.VariantVariable ''{1}'' has number of dimension ''{2}'', but the number of dimension of at least one other choice is ''{3}''. Number of dimensions of values of Simulink.VariantVariable ''{1}'' must match.</entry>
        <entry key="InconsistentComplex">Choice with condition ''{0}'' of Simulink.VariantVariable ''{1}'' has complexity ''{2}'', but the complexity of at least one other choice is ''{3}''. Complexities of values of Simulink.VariantVariable ''{1}'' must match.</entry>
        <entry key="InconsistentSymbDimsOwn">Choice with condition ''{0}'' of Simulink.VariantVariable ''{1}'' does not use symbolic dimension, but some other choices use symbolic dimensions. Either all or none of the values of Simulink.VariantVariable ''{1}'' must specify dimensions using symbolic dimensions.</entry>
        <entry key="InconsistentSymbDimsOther">Choice with condition ''{0}'' of Simulink.VariantVariable ''{1}'' uses symbolic dimension, but some other choices do not use symbolic dimensions. Either all or none of the values of Simulink.VariantVariable ''{1}'' must specify dimensions using symbolic dimensions.</entry>
        <entry key="InconsistentDims">Choice with condition ''{0}'' of Simulink.VariantVariable ''{1}'' has dimension ''{2}'', but the dimension of at least one other choice is ''{3}''. Dimensions of values of Simulink.VariantVariable ''{1}'' must match.</entry>
        <entry key="ChoiceVarSlParamInconsistentDims">Simulink.Parameter objects used as values in Simulink.VariantVariable object ''{0}'' have differing dimensions. Choice with condition ''{1}'' has dimension ''{2}'', but at least one other choice has dimension ''{3}''. Dimensions of values in Simulink.VariantVariable ''{0}'' must match. </entry>
        <entry key="ValueMustBeNumeric">Value provided in addChoice method should be finite and numeric.</entry>
        <entry key="IndexOutOfBoundForDel">Index provided is out of bounds for deletion.</entry>
        <entry key="MultiActiveChoice">Variant Variable can't have more than one active choice.</entry>
        <entry key="NoActiveChoice">Variant Variable should have at least one active choice.</entry>
        <entry key="ErrorDuringEval">Error evaluating parameter ''{0}''</entry>
        <entry key="VariantKeywordNotSupported">Variant keywords other than (default) are not supported.</entry>
        <entry key="VariantPropertyNotSupported">Property ''{0}'' does not exist for Simulink.VariantControl object.</entry>
        <entry key="ValueMustBeNumericCtor">Value must be finite and numeric</entry>
        <entry key="ChoicesMustBeCell">Choices of variant parameter should be supplied as cell array.</entry>
        <entry key="ChoicesEvenNArgs">Choices of variant parameter should contain even number of elements.</entry>
        <entry key="ConditionMustBeChar">Variant Condition in 'Choices' array should be a character vector.</entry>
        <entry key="ConditionMustNotBeEmpty">Variant Condition in 'Choices' array can not be empty.</entry>
        <entry key="ValueInChoicesMustBeNumeric">Value in 'Choices' array must be finite and numeric, or a variable name corresponding to a Simulink.Parameter object with a finite and numeric value.</entry>
        <entry key="ValueInChoicesMustBeNumericSlPrmSlxpr">Value in 'Choices' array should be finite and numeric, or a variable name corresponding to a Simulink.Parameter object. The object's value must be finite and numeric or a Simulink.data.Expression (slexpr).</entry>
        <entry key="ValueInChoiceMustBeNumeric">Invalid value for condition ''{0}'' in variant parameter ''{1}''. Value in 'Choices' array must be finite and numeric, or variable name corresponding to a Simulink.Parameter object with a finite and numeric value.</entry>
        <entry key="SpecificationMustBeScalarString">Specification must be a variable name corresponding to Simulink.Parameter object.</entry>
        <entry key="SpecificationMustBeScalarStringWithArg">Specification ''{0}'' must be a variable name corresponding to Simulink.Parameter object.</entry>
        <entry key="SpecificationNotFound">Unable to find specification object ''{0}'' for ''{1}'' in the same workspace.</entry>
        <entry key="VariantVarInvalidNArgsCtor">Incorrect number of arguments to Simulink.VariantVariable.</entry>
        <entry key="CustomStorageClassNotSupported">Custom storage class specified for ''{0}'' is not supported for Simulink.VariantVariable.</entry>
        <entry key="SlVarCtrlScalarValue">Simulink.VariantControl value must be a scalar or a Simulink.Parameter with scalar value.</entry>
        <entry key="SlVarCtrlNonNumericValue">Simulink.VariantControl value must be an integer, an enumeration, or a Simulink.Parameter with value of type integer or enumeration.</entry>
        <entry key="SlVarCtrlNonNumericValueNonSlPrmSlxpr">Simulink.VariantControl value must be one of the following: an integer, an enumeration, a Simulink.Parameter with an integer or enumeration value, or a Simulink.Parameter with a Simulink.data.Expression (slexpr) where Simulink.Parameter objects within the slexpr are of type integer or enumeration.</entry>
        <entry key="SlVarCtrlValueType">Value type</entry>
        <entry key="SlVarCtrlValue">Value</entry>
        <entry key="SlVarCtrlVAT">Activation time</entry>
        <entry key="AutosarNotSupported">Using variant variable ''{0}'' is not supported for AUTOSAR code generation.</entry>
		<entry key="ModelWorkspaceWithAutosarNotSupported">AUTOSAR code generation is not supported for Simulink.VariantVariable ''{0}'' defined in the model workspace.</entry>
        <entry key="ExistingCondition">Variant condition ''{0}'' is already present in the choices.</entry>
        <entry key="EquivalentExistingCondition">Variant condition ''{0}'' is equivalent to existing choice condition ''{1}''.</entry>
        <entry key="NonExistingCondition">Variant Condition ''{0}'' is not present in the list of choices.</entry>
        <entry key="UnresolvedActiveValue">Could not determine active value for the variant parameter.</entry>
        <entry key="Param_ConvertToRealWorldValue">Simulink.VariantVariable's specification object has DataType set, while its Values are not double precision. Converting Values to real-world value (double precision).</entry>
        <entry key="SpecficationExpressionValue">Specification object with expression as value is not supported.</entry>
        <entry key="VariantControlChangeDuringSim">Changing ''ActivationTime'' parameter of Simulink.VariantControl object ''{0}'' during simulation is not supported, while changing ''Value'' parameter is supported only for 'startup' and 'runtime' activation times.</entry>
        <entry key="CannotSetInstanceSpecificForSimulinkVariantControlInModelWorkspace">The ''Argument'' property of Simulink.VariantControl object created in model workspace cannot be set to true.</entry>
        <entry key="VariantVariableChangeDuringSim">Updating the values of Simulink.VariantVariable object ''{0}'' during simulation is not supported. For 'startup' variant activation time, you can switch among the existing values of the object by changing the associated Simulink.VariantControl value.</entry>
        <entry key="VariantVariableSlParamValDiffDataType">Simulink.Parameter object ''{1}'' is used as a choice of Simulink.VariantVariable ''{0}'' and another Simulink.VariantVariable object, but its data type differs in these instances, which is not supported.</entry>
        <entry key="VariantVariableSlParamInconsistent">Simulink.VariantVariable object ''{0}'' uses Simulink.Parameter object ''{1}'' as a choice, which conflicts with the use of ''{1}'' with a different data type in block ''{2}''.</entry>
        <entry key="VariantParamInconsistent">Simulink.VariantVariable object ''{0}'' is used in incompatible ways. This variable will not be preserved in the generated code.</entry>
        <entry key="VariantControlNotFound">Unable to find variant control variable ''{0}'' for ''{1}'' in the same workspace.</entry>
        <entry key="VariantControlEmptyValue">Variant control variable ''{0}'' has no value.</entry>
        <entry key="ArithOpInconsistentAT">Variant activation time of Simulink.VariantControl objects in an arithmetic operation must be the same.</entry>
        <entry key="VarCondDoesNotEvalToBool">Variant condition expression ''{0}'' must evaluate to true or false.</entry>
        <entry key="SlVariantControlDDGDesc">Specify a value for a variant control variable object and associate an activation time with it. The value determines the active choice of the object. The activation time determines when Simulink selects active choice.</entry>
        <entry key="SlVariantVariableDDGDesc">Specify multiple values for a Simulink.VariantVariable object. Values can be numeric or Simulink.Parameter variable names. For example, 2.5 or 'kp', where kp is a Simulink.Parameter.</entry>
        <entry key="SlVariantVariableCondDesc">Associate each value with a variant condition expression. The active choice is determined by the variant condition expression that evaluates to true. For example, V==EngineType.Small or V==1.</entry>
        <entry key="SlVariantVariableSpecDesc">Specify a Simulink.Parameter variable name in the Specification parameter to associate properties such as dimensions, storage class and so on with the Simulink.VariantVariable object.</entry>
        <entry key="SlVariantVariableSSCondition">Condition</entry>
        <entry key="SlVariantVariableSSValue">Value</entry>
        <entry key="SlVariantVariableSpec">Specification</entry>
        <entry key="SlVariantVariableBank">Bank</entry>
        <entry key="SpecNotSimulinkParameter">Specification ''{0}'' must be a Simulink.Parameter object.</entry>
        <entry key="VariantVariableOutputNotAssigned">The return value of the ''{0}'' method is not being used. To modify or remove choices in Simulink.VariantVariable, you must assign the return value of 'addChoice', 'setChoice', and 'removeChoice' methods.</entry>
        <entry key="VariantVariableInNonGlobalWks">Simulink.VariantVariable ''{0}'' must be defined in the base workspace, model workspace, or data dictionary associated with the model.</entry>
        <entry key="VPrmCodeGenInNonGlobalWks">Code generation is not supported for Simulink.VariantVariable ''{0}'' because it is defined in a workspace other than the base workspace or a data dictionary.</entry>
        <entry key="VariantVariableWithCCVATInNonGlobalWks">Simulink.VariantVariable ''{0}'' defined in workspace ''{1}'' uses a Simulink.VariantControl with variant activation time set to 'code compile'. Only 'update diagram', 'update diagram analyze all choices', or 'startup' variant activation times are allowed when using a mask or model workspace or subsystem reference with own data dictionary. Define ''{0}'' in the base workspace or data dictionary of the model to use 'code compile' activation time.</entry>
        <entry key="VariantParamInSigObj">Simulink.VariantVariable ''{0}'' must not be used as initial value in Simulink.Signal ''{1}'' </entry>
        <entry key="UnsupportedOpInVCE">Simulink.VariantVariable ''{0}'' contains variant condition expression which has unsupported operators ''{1}''. Variant parameters support only "==", "~=", "&amp;&amp;", "||" and "~" in variant condition expressions.</entry>
        <entry key="VariantControlNotPresent">Simulink.VariantVariable ''{0}'' does not contain variant choices.</entry>
        <entry key="VCtrlEmptyProp">''{0}'' cannot be empty. Provide a valid value.</entry>
        <entry key="InvalidVAT">''{0}'' is not a valid variant activation time.</entry>
        <entry key="InvalidNArgsForSetPropValue">'setPropValue' method requires 3 input arguments at least.</entry>
        <entry key="StartupNotSupportedForVPrm">startup activation time not supported for variant parameters.</entry>
        <entry key="VPrmInvalidConstSC">Simulink.VariantVariable object ''{0}'' is configured using Simulink.Parameter object ''{1}'' that has 'StorageClass' set to ''{2}'' and the associated Simulink.VariantControl object has 'ActivationTime' set to 'startup', which results in invalid code that tries to modify a constant value for variant parameter ''{0}''. Change the storage class of the Simulink.Parameter object used to configure the variant variable or the activation time for the Simulink.VariantControl object.</entry>
        <entry key="VPrmInvalidMacroSC">Simulink.VariantVariable object ''{0}'' is configured using Simulink.Parameter object ''{1}'' that has 'StorageClass' set to ''{2}'' and the associated Simulink.VariantControl object has 'ActivationTime' set to 'startup', which results in invalid code that tries to modify a macro for variant parameter ''{0}''. Change the storage class of the Simulink.Parameter object used to configure the variant variable or the activation time for the Simulink.VariantControl object.</entry>
        <entry key="VPrmInvalidConstSCDefaultMap">Simulink.VariantVariable object ''{0}'' is using model's ''{1}'' default coder mapping that has 'StorageClass' set to ''{2}'' and the associated Simulink.VariantControl object has 'ActivationTime' set to 'startup', which results in invalid code that tries to modify a constant value for variant parameter ''{0}''. Change the default coder mappings used to configure the variant variable or the activation time for the Simulink.VariantControl object.</entry>
        <entry key="VPrmInvalidMacroSCDefaultMap">Simulink.VariantVariable object ''{0}'' is using model's ''{1}'' default coder mapping that has 'StorageClass' set to ''{2}'' and the associated Simulink.VariantControl object has 'ActivationTime' set to 'startup', which results in invalid code that tries to modify a macro for variant parameter ''{0}''. Change the default coder mappings used to configure the variant variable or the activation time for the Simulink.VariantControl object.</entry>
        <entry key="VCtrlInvalidForAutosar">Simulink.VariantControl object ''{0}'' with 'ActivationTime' set to 'code compile' uses a Simulink.Parameter object and the model is configured for AUTOSAR code generation. Change the parameter object to an AUTOSAR.Parameter with a "SystemConstant" storage class.</entry>
        <entry key="VCtrlInvalidForAutosar1">Simulink.VariantControl object ''{0}'' with 'ActivationTime' set to 'code compile' is set to a numeric value type and the model is configured for AUTOSAR code generation. Change the value type to an AUTOSAR.Parameter with a "SystemConstant" storage class.</entry>
        <entry key="VCtrlInvalidForAutosar2">Simulink.VariantControl object ''{0}'' with 'ActivationTime' set to 'code compile' uses an AUTOSAR.Parameter object and the model is configured for AUTOSAR code generation. Change the storage class of the AUTOSAR.Parameter to SystemConstant.</entry>
        <entry key="VCtrlInvalidForAutosar3">Simulink.VariantControl object ''{0}'' uses an AUTOSAR.Parameter object and the model is not configured for AUTOSAR code generation. Setup the model for AUTOSAR code generation or change the Simulink.VariantControl value type to either a numeric value or a Simulink.Parameter object.</entry>
        <entry key="VCtrlInvalidForAutosar4">Simulink.VariantControl object ''{0}'' with 'ActivationTime' set to ''{1}'' is not supported with a parameter object type. Change the Simulink.VariantControl value type to a numeric value.</entry>
        <entry key="VCtrlInvalidMacroSC">Simulink.VariantControl object ''{0}'' uses a Simulink.Parameter object that has 'StorageClass' set to ''{1}'', which results in macro for variant control variable. Storage classes that generate macro are not supported for ''{2}'' activation time. Change the storage class of the Simulink.Parameter object used to configure the variant control variable or the activation time for the Simulink.VariantControl object.</entry>
        <entry key="RuntimeActivationNotSupportedForVPrm">Runtime activation time is not supported for Simulink.VariantControl object.</entry>
        <entry key="AutosarNotSupportedVCtrl">Using Simulink.VariantControl ''{0}'' is not supported for AUTOSAR code generation.</entry>
        <entry key="InconsistentVATBlock">Simulink.VariantControl object ''{1}'' with 'ActivationTime' set to ''{0}'' is incompatible with variant activation time ''{2}'' specified on variant block ''{3}''.</entry>
        <entry key="ActiveChoiceEmptyVal">Active choice of variant variable has empty value.</entry>
        <entry key="NonInlinedSFcnRef">Variant control variable ''{0}'' is not supported in noninlined s-function function ''{1}''.</entry>
        <entry key="VCtrlInvalidConstSC">Simulink.VariantControl object ''{0}'' uses a Simulink.Parameter object that has 'StorageClass' set to ''{1}'', which results in const qualified variant control variable. Storage classes that generate const qualified variables are not supported for ''{2}'' activation time. Change the storage class of the Simulink.Parameter object used to configure the variant control variable or the activation time for the Simulink.VariantControl object.</entry>
        <entry key="VCtrlInvalidNonMacroSC">Simulink.VariantControl object ''{0}'' with 'ActivationTime' set to 'code compile' uses a Simulink.Parameter object that has 'StorageClass' set to ''{1}''. Storage classes that generate macro are supported for code compile variant control variable. Change the storage class of the Simulink.Parameter object used to configure the variant control variable or the activation time for the Simulink.VariantControl object.</entry>
        <entry key="VCtrlExpMacroNoHeader">Simulink.VariantControl object ''{0}'' with 'ActivationTime' set to 'code compile' uses a Simulink.Parameter object that has 'StorageClass' set to ''{1}'' with no header file specified. Specify a header file for Simulink.Parameter object used to configure the variant control variable.</entry>
        <entry key="SlVCtrlInValidValType">''{0}'' cannot be set to ''{1}''.</entry>
        <entry key="SymbolHasNoValue">Variable ''{0}'' has no value for variant condition ''{1}''.</entry>
        <entry key="NumDimsIncorrectForChoice">Number of dimensions ''{0}'' of Simulink.VariantVariable ''{1}'' must be the same as the number of dimensions ''{2}'' of the choice value that corresponds to variant condition ''{3}''.</entry>
        <entry key="SymbolicDimsNoMatch">Dimension ''{0}'' of Simulink.VariantVariable ''{1}'' must be the same as the dimension ''{2}'' of the choice value that corresponds to variant condition ''{3}''.</entry>
        <entry key="ChoiceValsNotUniform">Choice values in Simulink.VariantVariable object ''{0}'' must be numeric or Simulink.Parameter variable names. Combining choice value types is not supported.</entry>
        <entry key="ChoiceVarsDontMatchSpec">Data attributes of variable ''{0}'' used in variant condition ''{1}'' of Simulink.VariantVariable ''{2}'' must be the same as the data attributes of specification variable ''{3}''.</entry>
        <entry key="ChoiceVarNotFound">Unable to find variable ''{0}'' in the same workspace as ''{1}''.</entry>
        <entry key="ChoiceVarNotSlParam">Variable ''{0}'' must be a Simulink.Parameter object.</entry>
        <entry key="VPrmInvalidConstSCSlParamVal">Simulink.VariantVariable object ''{0}'' is configured using Simulink.Parameter object ''{1}'' that has 'StorageClass' set to ''{2}'', which results in invalid code that tries to modify constant values for the variant variable object. Change the storage class of the Simulink.Parameter object used to configure the variant variable object.</entry>
        <entry key="VPrmInvalidMacroSCSlParamVal">Simulink.VariantVariable object ''{0}'' is configured using Simulink.Parameter object ''{1}'' that has 'StorageClass' set to ''{2}'', which results in invalid code that tries to modify macros for the variant variable object. Change the storage class of the Simulink.Parameter object used to configure the variant variable object.</entry>
        <entry key="VPrmInvalidConstSCDefaultMapSlParamVal">Simulink.VariantVariable object ''{0}'' is configured using default coder mapping of model ''{1}'' that has storage class of external parameters set to ''{2}'', which results in invalid code that tries to modify constant values for the variant variable object. Change the storage class of the external parameters used to configure the variant variable object.</entry>
        <entry key="VPrmInvalidMacroSCDefaultMapSlParamVal">Simulink.VariantVariable object ''{0}'' is configured using default coder mapping of model ''{1}'' that has storage class of external parameters set to ''{2}'', which results in invalid code that tries to modify macros for the variant variable object. Change the storage class of the external parameters used to configure the variant variable object.</entry>
        <entry key="SomeChoiceValueEmpty">Simulink.VariantVariable ''{0}'' does not contain value for choice condition ''{1}''.</entry>
        <entry key="AutogenSymbolProtectedModel">To generate protected model, define dimension symbols for choice values of Simulink.VariantVariable object ''{0}'' in global workspace of model ''{1}''.</entry>
        <entry key="ModelArgVCtrlInvalidSC">Simulink.VariantControl object ''{0}'' with 'ActivationTime' set to 'startup' uses a Simulink.Parameter object that has 'StorageClass' set to ''{1}'', which is not supported when ''{0}'' is configured as a model parameter argument. Change the storage class of the Simulink.Parameter object used to configure the variant control variable to 'Auto' or 'Model default'.</entry>
        <entry key="ParameterWriterWritingToSimulinkVariantVariable">Unable to write to Simulink.VariantVariable object ''{1}'' using Parameter Writer block ''{0}'' because the block only supports writing to a normal MATLAB variable, a Simulink.Parameter, or a Simulink.VariantControl object.</entry>
        <entry key="InvalidParameterWriteToSVariantControlVAT">Parameter Writer block ''{0}'' is writing to Simulink.VariantControl object ''{1}'' with activation time ''{2}'', which is not supported. To write to ''{1}'', set the activation time to 'startup' or 'runtime'.</entry>
        <entry key="InvalidParameterWriteToVariantVarChoiceVal">Unable to write to variable ''{1}'' using the Parameter Writer block ''{0}'' because the variable is used as one of the choices of a Simulink.VariantVariable ''{2}''.</entry>
        <entry key="InvalidParamWriteToModelArgUsedInVariantVarInRefModel">Using Parameter Writer block ''{0}'' to write to model argument ''{1}'' is not supported because ''{1}'' is used as a variant control of a Simulink.VariantVariable in the model referenced by Model block ''{2}''.</entry>
        <entry key="VPrmInvalidParamWriteVCtrlMultiLevel">Simulink.VariantControl variables ''{0}'' and ''{1}'' used in the condition expression of Simulink.VariantVariable ''{2}'' are modified by Parameter Writer blocks ''{3}'' and ''{4}'' in different initialize function blocks ''{5}'' and ''{6}''. Simulink.VariantControl objects used in a Simulink.VariantVariable must be modified within the same Initialize Function block.</entry>
        <entry key="ParamWriterWritingToWSVarUsedInVariantVarWithBank">Writing to workspace variable ''{1}'' used in the condition expression of Simulink.VariantVariable ''{2}'' using Parameter Writer block ''{0}'' is not supported because ''{2}'' is part of variant bank ''{3}''.</entry>
        <entry key="ParamWriteStartupVParamWithMultiVarCtrl">Using Parameter Writer block ''{0}'' to write to variant control ''{1}'' used in the condition expression of Simulink.VariantVariable object ''{2}'' is not supported because the expression contains multiple variant controls.</entry>
        <entry key="InvalidParamWriteFeedVParamValueToVCtrl">Simulink.VariantVariable ''{0}'' used in block ''{1}'' modifies the value of {2}variable ''{3}'' using Parameter Writer block ''{4}'' which is not supported because a Parameter Writer block connected to a Simulink.VariantVariable object only supports changing block parameter values.</entry>
        <entry key="InvalidVParamUserBlockConnectedToParamWriteBlockViaModelRefInport">
            <![CDATA[Connecting Simulink.VariantVariable ''{0}'' used in block ''{1}'' to a Parameter Writer block through inport <sldiag objui="inport" objparam="{3,number,integer}" objname="{2}">inport port {3,number,integer}</sldiag> of Model block ''{2}'' is not supported because a Parameter Writer block connected to a Simulink.VariantVariable object only supports changing block parameter values.]]></entry>
        <entry key="InvalidVParamUserBlockConnectedToParamWriteBlockViaModelRefOutport">
            <![CDATA[Connecting Parameter Writer block ''{0}'' to a block that uses a Simulink.VariantVariable object through outport <sldiag objui="outport" objparam="{2,number,integer}" objname="{1}">output port {2,number,integer}</sldiag> of Model block ''{1}'' is not supported because a Parameter Writer block connected to a Simulink.VariantVariable object only supports changing block parameter values.]]>
        </entry>
        <entry key="ParamWriterWritingToWSVarUsedInExpressionWithMultiVar">Writing to workspace variable ''{1}'' using Parameter Writer block ''{0}'' is not supported because ''{1}'' is used in an expression ''{2}'' that contains multiple variables.</entry>
        <entry key="InvalidParameterWriteFromIRTSystemWithGPCOnToSVC">To write to the base or data dictionary workspace variable ''{1}'' of the type Simulink.VariantControl with ''{2}'' activation, the Parameter Writer block ''{0}'' must be inside non variant Initialize Function block.</entry>
        <entry key="ParameterWriterFromNonInitializeFcnToSVCWithStartup">The Parameter writer block ''{0}'' must be in a Initialize Subsystem to write to the base or data dictionary workspace variable ''{1}'' of the type Simulink.VariantControl when the activation time for the Simulink.VariantControl is ''{2}''.</entry>
        <entry key="VCtrl_Invalid_Model_Argument">Invalid value specified for model argument ''{0}''. The specified value must be numeric when the model argument is a Simulink.VariantControl object.</entry>
        <entry key="SlParamUsesSlExpr">Expression type of value not supported for Simulink.Parameter object ''{0}'' in Simulink.VariantVariable.</entry>
        <entry key="SynthesizedVarNameClash">Variable name ''{0}'' in global workspace of model ''{1}'' clashes with the synthesized dimension variable name for ''{2}''. Rename the variable.</entry>
        <entry key="VPrmWSlPrmInNonInlineSFcn">Simulink.VariantVariable ''{0}'' with Simulink.Parameter variables as choice values is not supported for non-inlined S-function block ''{1}''.</entry>
        <entry key="VPrmWSlPrmInASARTargets">Simulink.VariantVariable ''{0}'' with Simulink.Parameter variables as choice values is not supported for AUTOSAR code generation.</entry>
        <entry key="VPrmSymbDimNoProp">
            <![CDATA[Simulink.VariantVariable ''{0}'' with variant activation time other than 'update diagram' uses symbolic dimensions but model parameter 'AllowSymbolicDim' is off.
                     <actions exclusiveFixIts="yes">
                     <action type="fixit" btn="apply">
                     <cmd>set_param(bdroot, ''AllowSymbolicDim'', ''On'');</cmd>
                     <txt>Turn on the model configuration parameter 'AllowSymbolicDim' to allow variant parameters to use symbolic dimensions. </txt>
                     </action>
                     </actions>
            ]]>
        </entry>
        <entry key="SynthDimUnsupportedTarget">To generate code for the Simulink.VariantVariable ''{0}'' that has choice values with different dimensions, use Embedded Coder.</entry>
        <entry key="SynthDimPluginNotLoaded">Unable to handle Simulink.VariantVariable ''{0}'' with choice values having different dimensions. The required plugin ''{1}'' is not loaded.</entry>
        <entry key="VCtrlWithCCVATProtectedModel">Simulink.VariantControl object ''{0}'' with 'ActivationTime' set to 'code compile' is not supported with protected models. To protect the model, use a variant activation time other than 'code compile'.</entry>
        <entry key="InvalidBankPropName">Unrecognized property name ''{0}'' for Simulink.VariantBank.</entry>
        <entry key="InvalidBankPropTypeVConds">Property value ''{0}'' is not supported for property ''{1}'' of Simulink.VariantBank. Property ''{1}'' value must be a cell array of character vectors.</entry>
        <entry key="InvalidBankPropType">Property value ''{0}'' is not supported for property ''{1}'' of Simulink.VariantBank. Property ''{1}'' value must be a character vector or a string.</entry>
        <entry key="InvalidBankCInfoPropName">Unrecognized property name ''{0}'' for Simulink.VariantBankCoderInfo.</entry>
        <entry key="InvalidCInfoProp">''{1}'' value ''{0}'' must be a valid variable name corresponding to Simulink.VariantBankCoderInfo object.</entry>
        <entry key="InvalidBankProp">'Bank' value ''{0}'' must be a variable name corresponding to Simulink.VariantBank object.</entry>
        <entry key="BankMustBeScalarString">'Bank' value must be the name of a Simulink.VariantBank object.</entry>
        <entry key="BankNotFound">Unable to find Simulink.VariantBank object ''{0}'' specified in ''{1}'' in the same workspace.</entry>
        <entry key="BankCoderInfoNotFound">Unable to find Simulink.VariantBankCoderInfo object ''{0}'' specified in ''{1}'' in the same workspace.</entry>
        <entry key="ExportPreviousVariantBank">Values of 'AllChoicesCoderInfo' and 'ActiveChoiceCoderInfo' properties of Simulink.VariantBank ''{0}'' are different. During model export to a previous version, 'AllChoicesCoderInfo' value ''{1}'' was used to set the 'BankCoderInfo' property.</entry>
        <entry key="HeaderFileNotGiven">Header file must be provided in Simulink.VariantBankCoderInfo because bank ''{0}'' is used across multiple models.</entry>
        <entry key="DefnFileNotGiven">Definition file must be provided in Simulink.VariantBankCoderInfo because bank ''{0}'' is used across multiple models.</entry>
        <entry key="InvalidKeywordBank">Invalid variant condition ''{0}'' for Simulink.VariantBank.</entry>
        <entry key="BankChoiceSizeMismatch">Variant conditions of Simulink.VariantBank ''{0}'' do not match variant conditions of Simulink.VariantVariable ''{1}''.</entry>
        <entry key="BankChoiceCondMismatch">Variant condition ''{0}'' of Simulink.VariantVariable ''{1}'' does not exist in Simulink.VariantBank ''{2}''.</entry>
		<entry key="ParamChoiceCondMismatch">Variant condition ''{0}'' of Simulink.VariantBank ''{1}'' does not exist in Simulink.VariantVariable ''{2}''.</entry>
        <entry key="BankWithSlParamVals">Simulink.VariantBank ''{0}'' is not supported for Simulink.VariantVariable ''{1}'' because it uses Simulink.Parameter variables as choice values.</entry>
        <entry key="SpecSCWithBank">Simulink.VariantBank ''{0}'' is not supported because specification ''{1}'' provides a storage class for Simulink.VariantVariable ''{2}''.</entry>
        <entry key="VariantBankWithXIL">Simulink.VariantBank ''{0}'' not supported for SIL and PIL simulation modes.</entry>
        <entry key="VariantBankWithAutosarNotSupported">Using Simulink.VariantVariable ''{0}'' with Simulink.VariantBank ''{1}'' is not supported for AUTOSAR code generation.</entry>
        <entry key="VariantBankWithProtectedModel">Simulink.VariantBank ''{0}'' not supported when creating protected models.</entry>
        <entry key="VariantBankWithModelReference">Simulink.VariantBank ''{0}'' is not supported with model hierarchy that contains referenced models.</entry>
        <entry key="VariantBankNotStartup">Simulink.VariantVariable ''{0}'' has its Bank property set and the associated Simulink.VariantControl's activation time is ''{1}'' which is not allowed. You can only specify the Bank property when the associated activation time is ''startup''.</entry>
        <entry key="VariantBankExtModeNotXCP">When the model contains Simulink.VariantVariable ''{0}'' with its Bank property set, external mode simulation is supported only if the transport layer of the communication channel uses XCP.</entry>
        <entry key="VariantCondsNotCell">'VariantConditions' property for Simulink.VariantBank must be a cell array.</entry>
        <entry key="NameNotValidIdentifier">'Name' property for Simulink.VariantBank must be a valid C identifier that does not start with "rt".</entry>
        <entry key="FileNotValidIdentifier">''{0}'' property for Simulink.VariantBankCoderInfo must be a valid C identifier that does not start with "rt".</entry>
        <entry key="VariantBankCInfoInvalidQualifier">'ActiveChoiceCoderInfo' property of the Simulink.VariantBank ''{0}'' must contain either 'Const' or 'ConstVolatile' type qualifier because the 'AllChoicesCoderInfo' property of ''{0}'' contains 'Const' qualifier.</entry>
        <entry key="SlVariantVariableBankDesc">Specify a Simulink.VariantBank variable name for the 'Bank' parameter to associate a variant parameter bank with the Simulink.VariantVariable object.</entry>
        <entry key="SlVariantBankDDGDesc">Specify properties for variant parameter bank. All Simulink.VariantVariable objects (variant parameters) in a given variant parameter bank have the same set of variant conditions. Simulink.VariantBank object must be associated with the 'Bank' property of Simulink.VariantVariable.</entry>
        <entry key="SlVariantBankCInfoDDGDesc">Specify properties for variant parameter bank coder info. Simulink.VariantBankCoderInfo object must be associated with the 'AllChoicesCoderInfo' or 'ActiveChoiceCoderInfo' properties of Simulink.VariantBank.</entry>
        <entry key="SlVariantBankCInfoDescInBankDDG">Specify a Simulink.VariantBankCoderInfo variable name to set code generation properties for a Simulink.VariantBank object. The 'AllChoicesCoderInfo' property applies code generation attributes to the structure array, while the 'ActiveChoiceCoderInfo' property applies them to the pointer variable. Modifying this object impacts all variant bank objects that use it.</entry>
        <entry key="SlVariantBankDDGSameCoderInfoMsg">Values of 'AllChoicesCoderInfo' and 'ActiveChoiceCoderInfo' properties of Simulink.VariantBank are the same. Use expand button of 'AllChoicesCoderInfo' to view corresponding Simulink.VariantBankCoderInfo object.</entry>
        <entry key="SlVariantBankDDGExpandBtnTooltip">Show details</entry>
        <entry key="SlVariantBankDDGCollapseBtnTooltip">Hide details</entry>
        <entry key="SlVariantBankName">Name</entry>
        <entry key="SlVariantBankDesc">Description</entry>
        <entry key="SlVariantBankVarCond">Variant conditions</entry>
        <entry key="SlVariantBankCoderInfo">Bank coder information </entry>
        <entry key="SlVariantBankArrCoderInfo">All choices coder information </entry>
        <entry key="SlVariantBankPtrCoderInfo">Active choice coder information </entry>
        <entry key="SlVariantBankCInfoHdrFile">Header file</entry>
        <entry key="SlVariantBankCInfoDefFile">Definition file</entry>
        <entry key="SlVariantBankCInfoPreSt">Pre statement</entry>
        <entry key="SlVariantBankCInfoPostSt">Post statement</entry>
        <entry key="SlVariantBankCInfoQualifier">Qualifier</entry>
        <entry key="SlVariantBankInvalidCondition">The variant condition ''{0}'' of Simulink.VariantBank ''{1}'' is not a valid boolean expression.</entry>
        <entry key="VariantBankInvalidFileCombination">'AllChoicesCoderInfo' and 'ActiveChoiceCoderInfo' properties of Simulink.VariantBank ''{0}'' must have the same header and definition files.</entry>
        <entry key="VariantBankConflictingHeaderFileCombination">Header file ''{0}'' specified for the 'ActiveChoiceCoderInfo' property of Simulink.VariantBank ''{1}'' conflicts with the header file in the 'AllChoicesCoderInfo' property of Simulink.VariantBank ''{2}''. To generate code, change the header file name in the 'ActiveChoiceCoderInfo' of ''{1}''.</entry>
        <entry key="VarCondNotScalarString">Conditions defined in 'VariantConditions' property must be a scalar string.</entry>
        <entry key="SlVariantBankNoConditionsActive">Simulink.VariantBank ''{0}'' used by Simulink.VariantVariable ''{1}'', has these variant conditions, but none of the conditions are active: ''{2}''.</entry>
        <entry key="VariantVariableInSSRefWithSLDD">Defining Simulink.VariantVariable ''{0}'' in the data dictionary attached to subsystem reference ''{1}'' is not supported. Define ''{0}'' in the base workspace or data dictionary of the model.</entry>
		<entry key="VariantControlWithSharedSlParam">Simulink.Parameter object used to set the value of variant control ''{0}'' in model ''{1}'' is used elsewhere in the model or in another variant control object. Create a separate Simulink.Parameter object to set the value of the variant control. To create a copy of the Simulink.Parameter object, use the copy method.</entry>
		<entry key="VariantVariableWithPartialVCtrlMarkedAsModelArg">Simulink.VariantVariable ''{0}'' has ''{1}'' variant controls, of which only ''{2}'' are configured as model arguments. All variant controls used by ''{0}'' must be configured as model arguments.</entry>
		<entry key="VariantVariableWithSpecMarkedAsModelArg">Simulink.VariantVariable ''{1}'' has specification object ''{2}'' configured as model argument, which is not supported. To simulate or generate code for model ''{0}'', ''{2}'' must not be set as a model argument.</entry>
		<entry key="InstanceSpecificVariantVariableWithSpec">Simulink.VariantVariable ''{1}'' has ''{2}'' variant controls configured as model arguments and also has the 'Specification' property set, which is not supported. To simulate or generate code for model ''{0}'', remove the 'Specification' property from ''{1}''.</entry>
		<entry key="VariantVariableWithInstanceSpecificChoiceVal">Simulink.VariantVariable ''{1}'' has choice ''{2}'' configured as a model argument, which is not supported. To simulate or generate code for model ''{0}'', ''{2}'' must not be set as a model argument.</entry>
		<entry key="VariantBankInModelWorkspace">Simulink.VariantVariable ''{1}'' has 'Bank' property set, which is not supported in model workspace. To simulate or generate code for model ''{0}'', either remove the 'Bank' property from ''{1}'' or define ''{1}'' in the base workspace or data dictionary associated with the model.</entry>
        <entry key="VParamAccelAndRapidAccelModelWorkspace">Writing to model workspace variable ''{0}'' used in the condition expression of Simulink.VariantVariable ''{1}'' using Parameter Writer block, is not supported in Accelerator and Rapid Accelerator simulation modes</entry>
		<entry key="InstanceSpecificVariantVariablePartial">Unable to generate code for ''{0}'' because Simulink.VariantVariable ''{1}'' has ''{2}'' variant controls configured as model arguments, of which ''{3}'' have 'auto' storage class not supported in multi level model hierarchy. To generate code for model ''{0}'', change storage class of ''{3}'' to 'Model Default'.</entry>
        <entry key="UnusedBankedVariantVariable">Variant Parameters '{'''{0}'''}' that are part of Simulink.VariantBank ''{1}'' is unused by the model hierarchy of model ''{2}''. To exclude parameters '{'''{0}'''}' from the generated code, either unset the 'Bank' property of parameters or remove parameters from the workspaces associated with ''{2}''.</entry>
        <entry key="InvalidBankStructure">Simulink.VariantBank ''{0}'' is inconsistently defined across model references. Model ''{1}'' defines ''{0}'' with variant parameters '{'''{2}'''}', while model ''{3}'' defines it with '{'''{4}'''}'. Variant parameters '{'''{5}'''}' are not visible to model ''{3}''. \nVerify that variant parameters '{'''{5}'''}' are accessible to model ''{3}'' and rebuild model ''{3}'' after deleting cached information, such as the ''slprj'' directory and Simulink cache files.</entry>
        <entry key="VariantVariableInXILWithoutModelArg">Simulink.VariantVariable ''{1}'' has variant controls ''{2}'' not configured as model argument, which is not supported for SIL and PIL simulation modes. To simulate the model ''{0}'' in SIL or PIL modes, ''{2}'' must be set as model argument.</entry>
	    <entry key="VariantVariableInMdlWksCPPCodeGen">Simulink.VariantVariable ''{1}'' is defined in model workspace, which is not supported for C++ code generation. To generate code for model ''{0}'', define ''{1}'' in the base workspace or data dictionary associated with the model.</entry>
    </message>
</rsccat>

<!-- LocalWords:  Control's slexpr
-->
