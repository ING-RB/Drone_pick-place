<?xml version="1.0" encoding="UTF-8" ?>
<!-- Copyright 2009-2024 The MathWorks, Inc. -->
<rsccat version="1.0" locale="en_US" product="Simulink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../../../../matlab/resources/schema/msgcat.xsd">
  <message>
      <entry key="ExternalFile">External File</entry>
    <entry key="CannotRetrieveCachedInformationBeforeUpdate">No cached results found for block diagram ''{0}''. Perform an Update Diagram to see cached results.</entry>
    <entry key="CompareComponents_InstanceError">While comparing the fields of two configuration components of the type ''{0}'', the {1} component has instance specific properties while the {2} component does not have any instance specific properties</entry>
    <entry key="ObjectCannotBeConverted">Unable to make data conversion:\n''{0}''</entry>
    <entry key="useGetVariable">Unable to evaluate ''{0}'' using 'Simulink.data.resolveInGlobal', use 'Simulink.data.getVariableFromGlobal' instead.</entry>
    <entry key="CscRtwIdClash">The identifier ''{0}'' is being used by different custom storage class properties, thus causing conflict:\n (1) In data object ''{1}''\n \tby ''{2}'' property of custom storage class ''{3}::{4}''\n (2) In data object ''{5}''\n \tby ''{6}'' property of custom storage class ''{7}::{8}''</entry>
    <entry key="CustomStorageClassNameClash">The package ''{0}'' contains enumerations defining custom storage classes ''{1}'' and ''{2}'', whose names differ only in case. The storage classes associated with a given package must have names that are case-independent unique within that package</entry>
    <entry key="CustomStorageRequiresECoderLicense">An Embedded Coder license is required to use custom storage classes. Custom storage classes are being ignored</entry>
    <entry key="EditTimeResolveInUninitializedMaskWS">Cannot resolve symbol ''{0}'' for ''{1}'' because the workspace of masked block ''{2}'' is uninitialized</entry>
    <entry key="Empty_ConfigSetComponent">The argument to attachComponent is empty. Specify an argument that is a valid configuration set component.</entry>
    <entry key="EvalErrorInEvalWithHS">Error evaluating expression ''{0}'' for block ''{1}''</entry>
    <entry key="EvalReturnedArrayOfObjects">Expression ''{0}'' for block ''{1}'' returns an array of objects</entry>
    <entry key="EvalReturnedUnboundObject">Expression ''{0}'' for block ''{1}'' returns a {2} object whose property values need to be evaluated. This object should be instantiated in a workspace and referenced by name in Simulink</entry>
    <entry key="EvalReturnedUnboundObjectInConfig">Expression ''{0}'' in configuration set parameter ''{1}'' must be evaluated. Instantiate the object in a workspace and reference by name.</entry>
    <entry key="FindVarsBadBooleanValue">The value of ''{0}'' must be ''on'' or ''off'' or a logical scalar</entry>
    <entry key="FindVarsBdSimRunningAlready">A simulation of block diagram ''{0}'' is currently running. Consider using the cached search method option</entry>
    <entry key="FindVarsInvalidContext" note="stringDatatypeUpdate">Invalid syntax. Context supplied to Simulink.findVars must be a character vector or a cell array of character vectors.</entry>
    <entry key="FindVarsInvalidProperty">Invalid property ''{0}'' specified. See Simulink.findVars documentation for valid property names</entry>
    <entry key="FindVarsInvalidSyntax">Invalid syntax. Inputs to Simulink.findVars should be a context followed optionally by Property-Value pairs</entry>
    <entry key="FindVarsModelCannotCompile">Failed to compile model ''{0}''. Cached results might be incomplete.</entry>
    <entry key="FindVarsNonStringProperty" note="stringDatatypeUpdate">Property inputs to Simulink.findVars must be character vectors</entry>
    <entry key="FindVarsNoWksForDDVars">Must use ''Source'' property to find the data dictionary that defines variable ''{0}''.</entry>
    <entry key="FindVarsNoWksTypeForDDVars">Must use ''SourceType'' property to find source type of variable ''{0}'' defined in data dictionary.</entry>
    <entry key="FindVarsNoWksTypeForExternalVars">Must use ''SourceType'' property to find source type of variable ''{0}'' defined in external source.</entry>
    <entry key="HSResolvingNotPermitted">Block ''{0}'' contains an expression that includes the symbol ''{1}''. A variable with this name exists in workspace ''{2}'' but it is not accessible because hierarchical resolution is not permitted by ''{3}''</entry>
    <entry key="InvalidEvalinCommandEF">Unable to evaluate ''{0}'' in ''{1}''</entry>
    <entry key="InValid_Name_Msg">Invalid reserved name{0}: {1}. \n Reserved names must start with a letter or ''_'', \n must only contain letters, numbers and ''_'', \n and must be shorter than {2,number,integer} characters</entry>
    <entry key="InValid_Objective" note="stringDatatypeUpdate">''{0}'' must be a cell array of character vectors</entry>
    <entry key="InvalidBrokerCSA"> Unable to fetch data from external sources.</entry>
    <entry key="InvalidSourceType"> Invalid source ''{0}''. Unable to determine the source type from the given file name.</entry>
    <entry key="InvalidSectionName"> Invalid section name ''{0}''.</entry>
    <entry key="InValid_Objective_Name_NoneERT">''{0}'' cannot be set as an objective for non-ERT-based target.</entry>
    <entry key="InValid_Objective_Name_Rep">''{0}'' is specified multiple times. Objectives must not be specified more than once.</entry>
     <entry key="InValid_DuplicateNamePropertyForParam">Input must be a 1xN cell array of ''{0}'' objects with a unique Name</entry>
    <entry key="InValid_CoderGroups">Input must be a 1xN cell array of Simulink.CoderGroup objects</entry>
     <entry key="InValid_EmptyCoderGroupName">'Name' value must not be empty</entry>
    <entry key="InValid_CoderGroupName">Input must be a valid MATLAB identifier</entry>
    <entry key="InValid_CoderGroupName_Default">Invalid storage class name ''Default''</entry>
    <entry key="InValid_CoderGroupImplementationValue">''{0}'' is not a valid Implementation value. The value for Implementation must be either ''SingleInstance'' or ''MultiInstance''.</entry>    
    <entry key="InValid_CoderGroupMemorySectionName">The memory section name must be a valid MATLAB identifier or an empty character vector.</entry>
    <entry key="InValid_CoderGroupDataInitValue">''{0}'' is not a valid DataInit value. The value for DataInit must be ''Static'', ''Dynamic'' or ''None''.</entry>
    <entry key="InValid_CoderGroupAsStructureValue">''{0}'' is not a valid AsStructure value. The value for AsStructure must be ''InParent'', ''InSelf'', ''Standalone'' or ''None''.</entry>
    <entry key="InValid_CoderGroupDataInstantiationValue">''{0}'' is not a valid DataInstantiation value. The value for DataInstantiation must be ''PerInstance'', ''Shared'' or ''Local''.</entry>
    <entry key="InValid_CoderGroupDataScopeValue">''{0}'' is not a valid DataScope value. The value for DataScope must be ''Imported'' or ''Exported''.</entry>
    <entry key="InValid_AccessMethodScopeValue">''{0}'' is not a valid Scope value. The value for Scope must be ''Imported'' or ''Exported''.</entry>
    <entry key="InValid_AccessMethodMemorySectionName">The memory section name must be a valid MATLAB identifier or an empty character vector.</entry>
    <entry key="InValid_CoderGroupAccessMethodName">''{0}'' is not a valid AccessMethod value. The value for AccessMethod must be a valid MATLAB identifier or an empty character vector.</entry>
    <entry key="Invalid_CoderGroupToken">''{0}'' is not a valid Token for {1} property. The valid tokens are {2}.</entry>
    <entry key="Invalid_CoderGroupString">''{0}'' is not a valid C identifier. All character vectors used for {1} property should be valid identifiers.</entry>
    <entry key="CoderGroupWithNoImplementation">Storage class ''{0}'' does not have an implementation registered for its ''{1}'' configuration.</entry>
    <entry key="EmptyString">''{0}'' is an empty character vector. Any character vector that you specify for {1} property should be non-empty.</entry>
    <entry key="ResolvesToDataWithEmptyValue">The parameter ''{0}'' resolves to ''{1}'' that has an empty value.</entry>
    <entry key="InValid_AccessMethods">Input must be a 1xN cell array of Simulink.AccessMethod objects.</entry>
    
    <entry key="InValid_EmptyAccessMethodName">'Name' value must not be empty</entry>
     
    <entry key="InValid_AccessMethodName">Input must be a valid MATLAB identifier.</entry>
    <entry key="InValid_AccessMethodInstantiationValue">''Instantiation'' value must be ''Single'' or ''Multi''.</entry>
    <entry key="InValid_AccessMethodAccessModeValue">''AccessMode'' value must be ''ByValue'' or ''ByReference''.</entry>
    <entry key="InValid_AccessMethodLatchingValue">''Latching'' value must be ''None'' or ''TaskEdge''.</entry>
    <entry key="RepeatedMacro">''{0}'' is repeated. All tokens used for {1} property should be unique.</entry>
    <entry key="InvalidToken">''{0}'' is not a valid Token for {1} property. The value for {1} must include either {2} or custom user text. </entry>
    <entry key="Invalid_HeaderFileToken"> ''$R'' and ''$R.h'' are not a valid values for {0}. The value for {0} must include either $N, $G, $U or custom user text.</entry>
    <entry key="Invalid_DefinitionFileToken"> ''$R'' and ''$R.h'' are not a valid values for {0}. The value for {0} must include either $N, $G, $U or custom user text.</entry>
    <entry key="CoderGroupConstForDWorkBlockIO">For model ''{0}'', cannot set storage class for Outport blocks, states, or data stores to ''{1}'' with storage class property ''Const'' selected. Clear the storage class property or specify another storage class.</entry>
    <entry key="UseAccessFunctionOnZeroCrossingData">The model ''{0}'' does not support InternalData being mapped to a storage class that provides function access when the model's Triggered Subsystem results in a zero-crossing variable. Storage classes that provide function access include GetSet and any storage class with Data Access set to Function or Macro.</entry>
    <entry key="CoderGroupNotInstanceSpecificForParam">For block ''{0}'', you cannot set storage class for parameter ''{1}'' to ''{2}'' with storage class property ''DataInstantiation'' not set to ''PerInstance''.</entry>
    <entry key="CoderGroupDynamicInitForParam">The parameter ''{0}'' of ''{1}'' cannot use storage class ''{2}'', because the storage class property ''Data Initialization'' is set to ''Dynamic''.</entry>
    <entry key="CoderGroupForParamWithSymbDim">The parameter ''{0}'' of ''{1}'' cannot have the storage class ''{2}'', because the parameter has symbolic dimensions and therefore the storage class needs to have the property ''Data Scope'' set to ''Imported''.</entry>
    <entry key="CoderGroupForVariantBanksWithSymbDim">Invalid setting in Simulink.VariantVariable ''{0}''. Using both 'Specification' and 'Bank' properties is supported only if the specification ''{1}'' has storage class set to 'Auto' and ''{1}'' does not use symbolic dimensions.</entry>
    <entry key="CoderGroupNotInstanceSpecificForMdlrefBlockParam">For block ''{0}'', you cannot set storage class for model parameters to ''{1}'' with storage class property ''DataInstantiation'' not set to ''PerInstance''.</entry>
    <entry key="CoderGroupDynamicInitForMdlrefBlockParam">The parameters of ''{0}'' cannot specify the storage class ''{1}'', because the storage class has the property ''Data Initialization'' set to ''Dynamic''.</entry>
    <entry key="CoderGroupForMdlrefBlockParamWithSymbDim">The parameters of ''{0}'' cannot specify the storage class ''{1}'', because one or more of the parameters have symbolic dimensions and therefore the storage class needs to have the property ''Data Scope'' set to ''Imported''.</entry>
    <entry key="CoderGroupNotInstanceSpecificForModelArg">For model ''{0}'', you cannot set storage class for model parameter argument ''{1}'' to ''{2}'' with storage class property ''DataInstantiation'' not set to ''PerInstance''.</entry>
    <entry key="CoderGroupInstanceSpecificForPublicParam">For model ''{0}'', you cannot set storage class for model parameter ''{1}'' to ''{2}'' with storage class property ''DataInstantiation'' set to ''PerInstance''.</entry>
    <entry key="CrlAlignWithNonFactoryDefaultMapping"> The model ''{0}'' uses a Code Replacement Library ''{1}'', which contains at least one table entry that has a data alignment requirement. The model is also configured with a default mapping that maps at least one data category to a storage class other than Default. Models cannot use a code replacement library that requires data alignment if configuring a default mapping for data. </entry>
    <entry key="CoderGroupDynamicInitForModelArg">For model ''{0}'', you cannot set storage class for model parameter argument ''{2}'' to ''{1}'' with storage class property ''Data Initialization'' set to ''Dynamic''.</entry>
    <entry key="CoderGroupDynamicInitForPublicParam">For model ''{0}'', you cannot set storage class for model parameter ''{2}'' to ''{1}'' with storage class property ''Data Initialization'' set to ''Dynamic''.</entry>
    <entry key="CoderGroupForModelArgWithSymbDim">For model ''{0}'', you cannot set storage class for model parameter ''{2}'' to ''{1}'' because parameter is configured with symbolic dimensions and storage class property ''Data Scope'' is not set to ''Imported''. Symbolic dimensions require ''Data Scope'' to be set to ''Imported''.</entry>

    <entry key="CoderGroupInternalDataNotDefined">For model ''{0}'', you cannot set default storage class for internal data to ''{1}'' because that storage class does not exist.</entry>
    <entry key="CoderGroupInternalDataNotInstanceSpecific">For model ''{0}'', you cannot set storage class for  parameter ''GroupInternal'' to ''{1}'' with storage class property ''DataInstantiation'' not set to ''PerInstance''.</entry>
    <entry key="CoderGroupInternalDataStaticInit">For model ''{0}'', you cannot set default storage class for internal data to ''{1}'' with storage class property ''Data Initialization'' set to ''Static''.</entry>
    <entry key="CoderGroupInternalDataConst">For model ''{0}'', you cannot set default storage class for internal data to ''{1}'' with storage class property ''Const'' selected.</entry>
    <entry key="CoderGroupParametersNotDefined">For model ''{0}'', you cannot set default storage class for model parameters to ''{1}'' because that storage class does not exist.</entry>
    <entry key="CoderGroupParameterInstanceSpecific">For model ''{0}'', you cannot set storage class for parameter ''GroupParameters'' to ''{1}'' with storage class property ''DataInstantiation'' set to ''PerInstance''.</entry>
    <entry key="CoderGroupParameterDynamicInit">For model ''{0}'', you cannot set default storage class for model parameters to ''{1}'' with storage class property ''Data Initialization'' set to ''Dynamic''.</entry>

    <entry key="CoderGroupGlobalParametersNotDefined">For model ''{0}'', you cannot set default storage class for external parameter objects to ''{1}'' because that storage class does not exist.</entry>
    <entry key="CoderGroupNotSupportedForGlobalParameter">For model ''{0}'', you cannot set default storage class for external parameter objects to ''{1}''. That storage class is defined in Embedded Coder Dictionary and you cannot map external parameter objects to storage classes defined in Embedded Coder Dictionary</entry>

    <entry key="CoderGroupSharedLocalDataStoresNotDefined">For model ''{0}'', you cannot set default storage class for shared local data stores to ''{1}'' because that storage class does not exist.</entry>
    <entry key="CoderGroupSharedLocalDataStoresInstanceSpecific">For model ''{0}'', you cannot set default storage class for parameter ''GroupSharedLocalDataStores'' to ''{1}'' with storage class property ''DataInstantiation'' set to ''PerInstance''.</entry>
    <entry key="CoderGroupSharedLocalDataStoresStaticInit">For model ''{0}'', you cannot set default storage class for shared local data stores to ''{1}'' with storage class property ''Data Initialization'' set to ''Static''.</entry>
    <entry key="CoderGroupSharedLocalDataStoresInSelfOrParent">For model ''{0}'', you cannot set default storage class for shared local data stores to ''{1}'' because storage class property ''Storage Type'' is not set to ''Standalone'' or ''None''</entry>
    <entry key="CoderGroupSharedLocalDSMSoleUsage">For model ''{0}'', you cannot set default storage class for shared local data store arguments to ''{1}''. That storage class is already specified as the default storage class for Inport blocks, Outport blocks, internal data, or model data.</entry>
    <entry key="CoderGroupSharedLocalDSMSoleUsage2">For model ''{0}'', you cannot set default storage class for shared local data store arguments to ''{1}''. That storage class is already specified as the default storage class for Inport blocks, Outport blocks, internal data, or model data of another model in the current model hierarchy</entry>

    <entry key="CoderGroupGlobalDataStoresNotDefined">For model ''{0}'', you cannot set default storage class for global data stores to ''{1}'' because that storage class does not exist.</entry>
    <entry key="CoderGroupGlobalDataStoresInstanceSpecific">For model ''{0}'', you cannot set storage class for parameter ''GroupGlobalDataStores'' to ''{1}'' with storage class property ''DataInstantiation'' set to ''PerInstance''.</entry>
    <entry key="CoderGroupGlobalDataStoresStaticInit">For model ''{0}'', you cannot set default storage class for global data stores to ''{1}'' with storage class property ''Data Initialization'' set to ''Static''.</entry>
    <entry key="CoderGroupGlobalDataStoresInSelfOrParent">For model ''{0}'', you cannot set default storage class for global data stores to ''{1}'' with storage class property ''AsStructure'' not set to ''Standalone'' or ''None''.</entry>

    <entry key="CoderGroupInstanceSpecificParametersSoleUsage">For model ''{0}'', you cannot set default storage class for model parameter arguments to ''{1}'' because that storage class is already set as the default storage class for model parameters.</entry>
    <entry key="CoderGroupInstanceSpecificParametersSoleUsage2">For model ''{0}'', you cannot set default storage class for model parameter arguments to ''{1}'' because that storage class is already set as the default storage class  for model parameter arguments for another model in the current model hierarchy.</entry>
    <entry key="CoderGroupInstanceSpecificParametersNotDefined">For model ''{0}'', you cannot set default storage class for model parameter arguments to ''{1}'' because that storage class does not exist</entry>
    <entry key="CoderGroupInstanceSpecificParameterNotInstanceSpecific">For model ''{0}'', you cannot set default storage class for model parameter arguments to ''{1}'' with storage class property ''DataInstantiation'' not set to ''PerInstance''.</entry>
    <entry key="CoderGroupInstanceSpecificParameterDynamicInit">For model ''{0}'', you cannot set default storage class for model parameter arguments to ''{1}'' with storage class property ''Data Initialization'' set to ''Dynamic''.</entry>
    <entry key="CoderGroupInstanceSpecificParameterInSelf">For model ''{0}'', you cannot set default storage class for model parameter arguments to ''{1}'' with storage class property ''AsStructure'' set to ''InSelf''.</entry>
    <entry key="CoderGroupInstanceSpecificParameterUnstructuredDefault">The referenced model ''{0}'' cannot specify the storage class ''{1}'' for the default storage class for model parameter arguments because the single-instance ''Storage Type'' is set to ''Unstructured''.</entry>
    <entry key="CoderGroupInstanceSpecificParameterUnstructuredModelArg">For referenced model ''{0}'', you cannot set storage class for model parameter argument ''{1}'' to ''{2}'' because the single-instance ''Storage Type'' is set to ''Unstructured''.</entry>
    <entry key="CoderGroupInstanceSpecificParameterUnstructuredMdlrefBlockParam">For block ''{0}'', you cannot set storage class for model parameters to ''{1}'' because the single-instance ''Storage Type'' is set to ''Unstructured''.</entry>
    <entry key="CoderGroupInstanceSpecificParameterUnstructuredBlockParam">For block ''{0}'', you cannot set storage class for parameter ''{1}'' to ''{2}'' because the single-instance ''Storage Type'' is set to ''Unstructured''.</entry>
    <entry key="CoderGroupRootInputsNotDefined">For model ''{0}'', you cannot set default storage class for Inport blocks to ''{1}'' because that storage class does not exist.</entry>
    <entry key="CoderGroupRootInputsWithSymbDim">For model ''{0}'', you cannot set default storage class for Inport blocks to ''{1}'' with storage class property ''Data Scope'' not set to ''Imported''. At least one root Inport block is configured with symbolic dimensions, and symbolic dimensions require ''Data Scope'' be set to ''Imported''.</entry>
    <entry key="CoderGroupRootInputsConst">For model ''{0}'', you cannot set default storage class for Inport blocks to ''{1}'' with storage class property ''Const'' selected.</entry>
    <entry key="CoderGroupStructuredStorageTypeMappedToParamAndSig">For model ''{0}'', storage class ''{1}'' with ''StorageType'' set to ''Structured'' cannot be applied to both signals and parameters because the struct variable cannot be initialized both dynamically and statically. Change the ''StorageType'' to ''Unstructured'' or separate the signals and parameters into two different ''Structured'' storage classes.</entry>
    <entry key="CoderGroupRootOutputsNotDefined">For model ''{0}'', you cannot set default storage class for Outport blocks to ''{1}'' because that storage class does not exist.</entry>
    <entry key="CoderGroupRootOutputsConst">For model ''{0}'', you cannot set default storage class for Outport blocks to ''{1}'' with storage class property ''Const'' selected.</entry>
    <entry key="CoderGroupRootOutputsWithSymbDim">For model ''{0}'', you cannot set default storage class for Outport blocks to ''{1}'' with storage class property ''Data Scope'' not set to ''Imported''. At least one root Outport block is configured with symbolic dimensions, and symbolic dimensions require ''Data Scope'' be set to ''Imported''.</entry>
    <entry key="CoderGroupRootOutputsStaticInit">For model ''{0}'', you cannot set default storage class for Outport blocks to ''{1}'' with storage class property ''Initialization'' set to ''Static''.</entry>

    <entry key="CoderGroupModelDataNotDefined">For model ''{0}'', you cannot set storage class for parameter ''GroupModelData'' to ''{1}'' because that  storage class does not exist.</entry>
    <entry key="CoderGroupModelDataInSelf">For model ''{0}'', you cannot set storage class for parameter ''GroupModelData'' to ''{1}'' with storage class property ''AsStructure'' set to ''InSelf''.</entry>
    <entry key="CoderGroupModelDataNotInstanceSpecific">For model ''{0}'', you cannot set storage class for parameter ''GroupModelData'' to ''{1}'' with storage class property ''DataInstantiation'' not set to ''PerInstance''.</entry>
    <entry key="CoderGroupRootInputsStaticInit">For model ''{0}'', you cannot set default storage class for Inport blocks to ''{1}'' with storage class property ''Data Initialization'' set to ''Static''.</entry>
    <entry key="CoderGroupFromConfigSetNotFound">The model ''{0}'' does not contain a storage class named ''{1}'' in its configuration set. Please consider creating one in the model's Coder Dictionary.</entry>
    <entry key="SignalAlignWithNonFactoryDefaultMapping">Output port of block ''{0}'' references signal object ''{1}'', which specifies an alignment and has its storage class set to ''Model default''. The model also specifies default storage classes. Signal objects that have storage class ''Model default'' cannot specify an alignment when referenced by a model with default storage classes.</entry>
    <entry key="ParameterAlignWithNonFactoryDefaultMapping">Model ''{0}'' references parameter object ''{1}'', which specifies an alignment and has its storage class set to ''Model default''. The model also specifies default storage classes. Parameter objects that have storage class ''Model default'' cannot specify an alignment when referenced by a model with default storage classes.</entry>
    <entry key="PortAlignWithNonFactoryDefaultMapping"><![CDATA[<sldiag objui="outport" objparam="{1,number,integer}" objname="{0}">Output port {1,number,integer}</sldiag> of block ''{0}'' specifies an alignment and has its storage class set to ''Model default''. The model also specifies default storage classes. Block output ports that have storage class ''Model default'' cannot specify an alignment when referenced by a model with default storage classes.]]></entry>
    <entry key="StateAlignWithNonFactoryDefaultMapping">State ''{1}'' of the block ''{0}'' specifies an alignment and has its storage class set to ''Model default''. The model also specifies default storage classes. Block states that have storage class ''Model default'' cannot specify an alignment when referenced by a model with default storage classes.</entry>

    <entry key="CoderGroupNameNotUnique">The model ''{0}'' has multiple storage classes with the Name property set to ''{1}''. Each storage class registered with the model must have a unique name.</entry>
    <entry key="CoderGroupNameEmpty">The model ''{0}'' has a storage class with an empty Name property.</entry>
    <entry key="CoderGroupMemorySectionRequiresPackage">The model ''{0}'' defines the ''MemorySection'' of the storage class ''{1}'', yet the model does not specify the package for its model data. Specify the package on the ''Configuration Parameters > Code Generation > Memory Sections'' pane.</entry>
    <entry key="CoderGroupMemorySectionNotInPackage">The model ''{0}'' defines the ''MemorySection'' of the storage class ''{1}'' to be ''{2}'', yet the specified data package ''{3}'' does not contain that memory section.</entry>
    <entry key="CoderGroupMemorySectionUnsupportedVolatile">The model ''{0}'' defines the ''MemorySection'' of the storage class ''{1}'' to be ''{2}''. This MemorySection specifies the type qualifier ''volatile'', but that type qualifier is not supported.</entry>
    <entry key="CoderGroupMemorySectionUnsupportedQualifier">The model ''{0}'' defines the ''MemorySection'' of the storage class ''{1}'' to be ''{2}''. This MemorySection specifies the type qualifier ''{3}'', but that type qualifier is not supported.</entry>
    <entry key="CoderGroupInParentNotRegistered">The storage class ''{0}'' from referenced model ''{1}'' must also be defined in the model ''{2}''.</entry>

    <entry key="InValid_ReservedNameArray">''{0}'' must be a cell array of character vectors.</entry>
    <entry key="InValid_CustomToolchainOptions">''{0}'' must be a cell array of character vectors for tool and options.</entry>
    <entry key="InValid_CustomToolchainOptions_Name_Rep">''{0}'' is specified multiple times. Tool must not be specified more than once.</entry>
    <entry key="InvalidCallToBDCopyContentsToSS">Incorrect call to copyContentsToSS. This method expects one input. The input must be a subsystem handle</entry>
    <entry key="InvalidCallToBDCopyContentsToSS2">Cannot copy the contents of model ''{0}'' to subsystem ''{1}'' because the subsystem contains one or more lines or blocks. This command works only on subsystems that do not contain any blocks or lines</entry>
    <entry key="InvalidCallToSSCopyContentsToBD">Incorrect call to copyContentsToBD. This method expects one input. The input must be a block diagram handle</entry>
    <entry key="InvalidCallToSSCopyContentsToBD2">Cannot copy the contents of subsystem ''{0}'' to model ''{1}'' because the model contains one or more lines or blocks. This command works only on models that do not contain any blocks or lines</entry>
    <entry key="InvalidCallToSSCopyContentsToBD3">Copying the contents of subsystem ''{0}'' to model ''{1}'' is not supported because the subsystem Read/Write permissions are set to NoReadOrWrite.</entry>
    <entry key="IsContentEqual_Circular_Reference">Circular reference encountered in object property hierarchy when comparing property contents</entry>
    <entry key="LoggingInfo_Value_MustBePositiveInteger">Invalid value specified for property ''{0}'' of a {1} object. The value must be a positive integer.</entry>
    <entry key="Param_ConvertToRealWorldValue">Parameter object's DataType property has been set while its Value is not double precision. Converting Value to real-world value (double precision).</entry>
    <entry key="Param_Invalid_Value">Invalid value specified for parameter. Value must be a numeric array, fi object, enumerated value, structure whose fields contain valid values, string scalar, or an expression.</entry>
    <entry key="EmptyCellInStructure">Invalid structure value specified for data object. Elements cannot contain empty cells.</entry>
    <entry key="Param_InvalidExpression">Invalid MATLAB expression ''{0}'' specified in ''Value'' property of Simulink.Parameter object.</entry>
    <entry key="Param_InvalidSCInExpression"><![CDATA[Storage classes specified for parameter objects ''{1}'' and ''{0}'' are invalid because ''{1}'' uses ''{0}'' in an expression, ''{2}''. To resolve this error, see the <a href="matlab:helpview(fullfile(docroot, ''toolbox'', ''rtw'', ''helptargets.map''), ''Param_invalid_sc_in_expr'')">documentation</a>.]]></entry>
    <entry key="Param_InvalidSCInExpressionForAutoParam">Because model configuration parameter 'Default parameter behavior' is set to 'Inlined' and parameter object ''{0}'' uses a storage class other than 'Auto', dependent parameter object ''{1}'' cannot use 'Auto'.</entry>
    <entry key="Param_InvalidSCInExpressionWithTunability">Parameter object ''{0}'' will be inlined because storage class of dependent parameter object ''{1}'' is 'Auto'. However ''{1}'' appears tunable in the generated code because model configuration parameter 'Default parameter behavior' is set to 'Tunable'.</entry>
    <entry key="Param_AutoSCInExpression">Unable to preserve expression for parameter object ''{0}'' because the storage class of one or more of its symbols is 'Auto'. </entry>
    <entry key="Param_MoreThanOneExpression">Parameter object can hold only one expression.</entry>
    <entry key="Param_ValueExpressionDataTypeMismatch">Parameter object ''{2}'' uses an expression in its ''Value'' property. Resolved data type of expression, ''{1}'', does not match data type specified in ''DataType'' property, ''{0}''. Under these conditions, generated code will not preserve the expression.</entry>
    <entry key="Param_ValueExpressionDataTypeMismatchNoParamName">Parameter object uses an expression in its ''Value'' property. Resolved data type of expression, ''{1}'', does not match data type specified in ''DataType'' property, ''{0}''. Under these conditions, generated code will not preserve the expression.</entry>
    <entry key="Param_ValueExpressionDataTypeMismatchStruct">Parameter object uses an expression in its ''Value'' property. Resolved data type of expression does not match data type specified in ''DataType'' property.</entry>
    <entry key="Param_ValueExpressionDataTypeMismatchWithin">For parameter object ''{2}'', ''Value'' property uses an expression containing variables with different data types ''{0}'' and ''{1}''. Variables used in the expression must have identical data types. Under these conditions, generated code will not preserve the expression.</entry>
    <entry key="Param_SingleFiOrEnumInExpression">For parameter object ''{0}'', ''Value'' property uses an expression containing more than one variable with ''fi'' or enumerated value. Under this condition, generated code will not preserve the expression.</entry>
    <entry key="Param_PrmExprContainingFiOrEnumWithIdentifiers">For parameter object ''{0}'', ''Value'' property uses an expression containing at least one variable with ''fi'' or enumerated type as well as other variables. Under this condition, generated code will not preserve the expression.</entry>
    <entry key="Param_PrmExprContainingUnsupportedOperator">Unable to preserve expression ''{1}'', contained in the  'Value' property of Simulink.Parameter object ''{0}'', in the generated code because the expression or its value is not supported.</entry>
    <entry key="Param_UnsupportedDivision">Parameter object ''Value'' property uses an expression ''{0}'' involving division operator. Under this condition, generated code will not preserve the expression.</entry>
    <entry key="Param_DTOUnsupportedInExpression">For parameter object ''{0}'', ''Value'' property uses an expression. The model uses a data type override setting. Under these conditions, generated code will not preserve the expression.</entry>
    <entry key="Param_UnsupportedLogicalValue">The expression ''{0}'' contains Parameter object ''{1}'' which has a logical value. Under this condition, generated code will not preserve the expression.</entry>
    <entry key="Param_ComplexValueInExpression">Expression ''{1}'' involves variable ''{0}'', whose value is complex (''i''). Due to the complex value, the expression will not be preserved in the generated code.</entry>
    <entry key="Param_NonScalarValueInExpression">Expression ''{1}'' involves variable ''{0}'', whose value is nonscalar. Due to the nonscalar value, the expression will not be preserved in the generated code.</entry>
    <entry key="Param_InfDimensionsWithInitialValue">The signal object ''{0}'' has dimensions set to 'Inf' and also has an initial condition. Either set initial condition to empty or set finite dimensions.</entry>
    <entry key="Param_InvalidProperty">''{0}'' property does not exist.</entry>
    <entry key="Param_Expression_In_ModelArgument">Model argument ''{0}'' of model ''{1}'' is a parameter object with ''Value'' property set to an expression. A model argument cannot use an expression.</entry>
    <entry key="Param_ModelArgumentInParamExpression">Model workspace data object ''{0}'' of model ''{1}'' uses the model argument ''{2}'' in ''Value'' property. Model arguments not supported for expressions.</entry>
    <entry key="BlockParam_ModelArgumentInParamExpression">Configured block parameter ''{0}'' uses model argument ''{1}'' in ''Value'' property. Model arguments not supported for expressions.</entry>
    <entry key="Param_ValueExpressionInvalidRHSDataTypeWithLHSDataTypeAsAuto">For parameter object ''{0}'' with data type ‘auto (context-sensitive)’, an expression assigned to "Value" must resolve to data type double and must be specified as a parameter object or combination of MATLAB variables and literal numbers.</entry>
    <entry key="Param_StringValueAndDataTypeMismatch">Parameter object has a string value but its data type ''{0}'' is not a valid string data type.</entry>
    <entry key="Param_StringValueLengthExceedDataTypeSpec">Parameter object has a string value of {0, number, integer} characters, which exceeds the maximum length specified by data type ''{1}''.</entry>
    <entry key="Param_StringNotAllowedInModelArg">Parameter object ''{0}'' as a model argument of model ''{1}'' is not supported because its data type is string or struct with string fields.</entry>
    <entry key="Param_StringNotAllowedInModelArgValue">Parameter argument ''{0}'' of Model block ''{1}'' is a string. Parameter argument values must be numeric.</entry>
    <entry key="Param_StringNotAllowedWithCSC">Parameter object ''{0}'' has a string value and uses a custom storage class, but string values are not supported by custom storage classes.</entry>
    <entry key="ParameterMustBeStringOrCellString" note="stringDatatypeUpdate">Parameter must be a character vector or a cell array of character vectors</entry>
    <entry key="PrmInstDesc_InvalidOwnerBlock">Unable to find block ''{0}''</entry>
    <entry key="RTWInfo_InvalidStorageClass">''{0}'' is not a valid storage class</entry>
    <entry key="RTWInfo_NoCoderInfo">CoderInfo properties do not exist</entry>
    <entry key="RTWInfo_DoNotAllowHasCoderInfoIfHasContext">''HasCoderInfo'' value must be ''false'' for objects in the model workspace.</entry>
    <entry key="RTWInfo_CannotSetUnifiedStorageClassToCustom1">Cannot set data object StorageClass property to ''Custom''. Set CoderInfo.StorageClass to ''Custom'' instead.</entry>
    <entry key="RTWInfo_Invalid_Alias">The alias ''{0}'' specified is not a valid identifier. Valid identifiers start with an alphabetic or ''_'' character, followed by alphanumeric or ''_'' characters. Identifiers starting with ''rt'' are reserved but can be allowed by opening the Configuration Parameters dialog and setting the ''rt prefix for identifiers'' setting to ''warning'' or ''none''</entry>
    <entry key="RTWInfo_MissingCSCProperty">The ''CustomStorageClass'' property of CoderInfo must exist and not be empty</entry>
    <entry key="RTWInfo_SetRTWInfoToInvalid">The ''CoderInfo'' property must contain an object of a class that is derived from Simulink.BaseRTWInfo</entry>
    <entry key="RTWInfo_AliasIgnored">Alias is ignored when StorageClass is ''{0}''.</entry>
    <entry key="RTWInfo_AlignmentIgnored">Alignment is ignored when StorageClass is ''{0}''.</entry>
    <entry key="RTWInfo_TypeQualifierIgnored">TypeQualifier is ignored when StorageClass is ''{0}''.</entry>
    <entry key="RTWInfo_CannotSetAlias">Cannot set Alias when StorageClass is ''{0}''.</entry>
    <entry key="RTWInfo_CannotSetAlignment">Cannot set Alignment when StorageClass is ''{0}''.</entry>
    <entry key="RTWInfo_CannotSetTypeQualifier">Cannot set TypeQualifier when StorageClass is ''{0}''.</entry>
    <entry key="RTWInfo_UnsetCustomStorageClass">StorageClass may not be set to ''Custom'' unless CoderInfo has a ''CustomStorageClass'' property</entry>
    <entry key="InvalidStorageClassForDataObject">{0} is a ''{1}'' object. Cannot use custom storage class that treats object as a macro in the generated code.</entry>
    <entry key="RTWInfo_IgnoringCSCIfStorageClassNotCustom">Setting CustomStorageClass when StorageClass is not ''Custom'' does not have any effect and may error out in a future release.</entry>
    <entry key="RTWInfo_IgnoringGroupIfSCNotSimulinkGlobal">Setting Group when StorageClass is not ''Model default'' does not have any effect.</entry>
    <entry key="RTWInfo_Invalid_Group">The group ''{0}'' specified is not a valid identifier. Valid identifiers start with an alphabetic or ''_'' character, followed by alphanumeric or ''_'' characters. Identifiers starting with ''rt'' are reserved but can be allowed by opening the Configuration Parameters dialog and setting the ''rt prefix for identifiers'' setting to ''warning'' or ''none''</entry>
    <entry key="RTWInfo_InvalidAlignment">{0,number,integer} is not a valid alignment boundary. The alignment boundary must be either -1 or a power of two no more than 128.</entry>
    <entry key="IgnoringAlignmentOnMWSObject">Ignoring alignment {0,number,integer} because it is being set on a model workspace object ''{1}''.</entry>
    <entry key="IgnoringAlignmentOnPort">Ignoring alignment {0,number,integer} because it is being set on the embedded signal object of a port from block ''{1}''.</entry>
    <entry key="IgnoringAlignmentOnBlock">Ignoring alignment {0,number,integer} because it is being set on the embedded signal object of block ''{1}''.</entry>
    <entry key="ReadWriteConflictonLegacySymbol">Block ''{0}'' uses legacy symbol {1} as a read-only parameter. However {2} is written by Stateflow C action language.</entry>
    <entry key="RefVarInvalidName">Invalid variable name ''{0}''. Names must follow the same rules as MATLAB variable names</entry>
    <entry key="RefVarInvalidSrcName">Invalid source name ''{0}''. Valid source names are ''base workspace'', the name of a data dictionary file, a Simulink model or the full path to a block.</entry>
    <entry key="SrcMlxNotSupported">Invalid source name ''{0}''. MLX file is not supported as data source of enumeration.</entry>
    <entry key="SrcMdlNotSupported">Invalid source name ''{0}''. MDL file is not supported as a data source.</entry>
    <entry key="SrcLibraryNotSupported">Library file ''{0}}'' not a supported data source.</entry>
    <entry key="RenameAllInvalidName">''{0}'' is not a valid MATLAB variable name.</entry>
    <entry key="RenameAllNotFound">The variable ''{0}'' was not found.</entry>
    <entry key="RenameAllMultipleMatches">The name ''{0}'' matches more than one variable.</entry>
    <entry key="RenameAllAlreadyExists">A variable named ''{0}'' already exists.</entry>
    <entry key="RenameAllExistsInDict">There is an existing variable named ''{0}'' in the data dictionary {1}.</entry>
    <entry key="RenameAllExistsInBaseWS">There is an existing variable named ''{0}'' in the base workspace.</entry>
    <entry key="RenameAllHidesExistingVar">The renamed variable would hide an existing one named ''{0}''.</entry>
    <entry key="RenameAllClash">The renamed variable would clash with an existing one named ''{0}''.</entry>
    <entry key="RenameAllAlreadyUsedByBlock">The variable ''{0}'' cannot be renamed to ''{1}''. An existing variable named ''{2}'' would hide the renamed one from some block(s).</entry>
    <entry key="RenameAllAlreadyUsedByConfigSet">The variable ''{0}'' cannot be renamed to ''{1}''. An existing variable named ''{2}'' would hide the renamed one from the Configuration for some model(s).</entry>
    <entry key="RenameAllAlreadyUsedByVar">The variable ''{0}'' cannot be renamed to ''{1}''. An existing variable named ''{2}'' would hide the renamed one from some other variable(s).</entry>
    <entry key="RenameAllMaskVariable">The variable ''{0}'' is in the mask workspace ''{1}''. Variables in mask workspaces are not supported for renaming.</entry>
    <entry key="RenameAllUnsupportedBlocks">One or more blocks using the selected variable do not support Rename All. The variable name has not been changed.</entry>
    <entry key="RenameAllProtectedModel">The variable is used in one or more protected models. It cannot be renamed.</entry>
    <entry key="RenameAllSimActive">Rename all is not supported during update diagram, simulation or code generation.</entry>
    <entry key="RenameAllEnumNotSupported">Renaming enumerated types is not supported.</entry>
    <entry key="RenameAllDataStoreExists">A data store memory already exists with the name ''{0}''.</entry>
    <entry key="RenameAllGotoTagExists">A Goto tag already exists with the name ''{0}''.</entry>
    <entry key="ReservedPropertyName">The ''{0}'' property name is reserved by the ''{1}'' class.</entry>
    <entry key="ResolveInUninitializedMaskWS">Cannot resolve symbol ''{0}'' in the workspace of masked block ''{1}'' because the workspace is uninitialized. This problem is probably caused by a set_param call on ''{2}'' initiated from outside the masked block. If you need to set the value of a parameter on a block that is under a mask you should pass the value as a mask parameter. If you cannot use a mask parameter, you should call set_param from the masked block''s initialization code</entry>
    <entry key="ResolveToBusInMaskWorkspace">The symbol ''{0}'' resolved to a bus object in the mask of ''{1}''. Bus objects should only be created in the base workspace or a data dictionary. If this object is being passed as a mask parameter, turn off evaluation of that parameter using the mask editor. Additionally, bus objects may only resolve through one level of subsystem masks</entry>
    <entry key="ResolveToBusInModelWorkspace">The symbol ''{0}'' resolved to a bus object in the model workspace. Bus objects should only be created in the base workspace or data dictionary</entry>
    <entry key="ResolveToSLDCObjInModelWorkspace">The symbol ''{0}'' resolved to a 'Simulink.data.DataConnection' object in the model workspace. 'Simulink.data.DataConnection' objects must be created in the base workspace.</entry>
    <entry key="SLDCObjInModelWorkspaceNotAccepted">'Simulink.data.DataConnection' objects must be stored in the base workspace.</entry>
    <entry key="BusObjectInModelWorkspace">Bus objects cannot be specified in a model workspace.</entry>
    <entry key="ResolveToDataTypeInMaskWorkspace">The symbol ''{0}'' resolved to a data type object in the mask of ''{1}''. Data type objects should only be created in the base workspace or data dictionary.</entry>
    <entry key="ResolveToDataTypeInModelWorkspace">The symbol ''{0}'' resolved to a data type object in the model workspace. Data type objects should only be created in the base workspace or data dictionary</entry>
    <entry key="ResolveToNonAutoSignalInModelWorkspace">The symbol ''{0}'' resolved to a signal object in the model workspace whose storage class is not ''Auto''. Signal objects in the model workspace must have storage class ''Auto''.</entry>
    <entry key="ResolveToNonAutoSignalInModelWorkspaceRTW">The symbol ''{0}'' resolved to a signal object in the model workspace whose storage class is not ''Auto''. Signal objects in the model workspace must have storage class ''Auto'' when generating code.</entry>
    <entry key="ResolveToGlobalSignalInModelWorkspace">The symbol ''{0}'' resolved to a signal object in the model workspace whose storage class is not ''Auto'' or ''Model default''. Signal objects in the model workspace must have storage class ''Auto'' or ''Model default''.</entry>
    <entry key="ResolveToGlobalSignalInModelWorkspaceRTW">The symbol ''{0}'' resolved to a signal object in the model workspace whose storage class is not ''Auto'' or ''Model default''. Signal objects in the model workspace must have storage class ''Auto'' or ''Model default'' when generating code.</entry>
    <entry key="ResolveToSignalInMaskWorkspace">The symbol ''{0}'' resolved to a signal object in the mask of ''{1}''. Signal objects should only be created in the base workspace, data dictionary, or model workspace</entry>
    <entry key="ResolveToParamInMaskWorkspace">The symbol ''{0}'' resolved to a parameter object that was created by the MaskInitialization code of ''{1}''. Parameter objects should only be created in the base workspace, data dictionary, or model workspace</entry>
    <entry key="SaveVarArgDataTypeMismatch" note="stringDatatypeUpdate">Argument {0,number,integer} must be a character vector.</entry>
    <entry key="SaveVarCyclicRef">cyclic reference detected at {0}</entry>
    <entry key="SaveVarMATFileCleanup">The associated MAT-file ''{0}'' no longer contains any variables and has been deleted.</entry>
    <entry key="SaveVarMATFileCreation">The variables that could not be saved into MATLAB file are saved into MAT-file ''{0}''.</entry>
    <entry key="SaveVarMATFileDeletion">The MAT-file ''{0}'' is no longer used by the corresponding MATLAB file and has been deleted.</entry>
    <entry key="SaveVarMATFileDeletionFail">The deletion of MAT-file ''{0}'' failed.</entry>
    <entry key="SaveVarNoVariablesUpdated">None of the specified variables exist in ''{0}''. The file is not changed.</entry>
    <entry key="SaveVarMFileLongText">One or more code lines in the MATLAB file exceeds the maximum of ''{0,number,integer}'' characters.</entry>
    <entry key="SaveVarMFileNameMissing">The MATLAB file name is missing.</entry>
    <entry key="SaveVarMFileOpenRW">The MATLAB file ''{0}'' does not exist or does not have write permission.</entry>
    <entry key="SaveVarMFileOpenW">The MATLAB file ''{0}'' cannot be opened. Please verify the pathname and filename.</entry>
    <entry key="SaveVarMFileReadError">MATLAB file read error.</entry>
    <entry key="SaveVarMFileRename">The MATLAB file ''{0}'' does not have correct access permissions.</entry>
    <entry key="SaveVarMFileWriteError">MATLAB file write error.</entry>
    <entry key="SaveVarMaxLevel">The integer number specified for option -maxlevels must fall between 0 and {0,number,integer}.</entry>
    <entry key="SaveVarMaxNumElement">The integer number specified for option -maxnumel must fall between 0 and {0,number,integer}.</entry>
    <entry key="SaveVarsPrefsDimensionsMustbeTwoIntegers">The entered value for ''{0}'' must be an array of two integers</entry>
    <entry key="SaveVarsPrefsEntryMustbeIntegralNumber">The entered value for ''{0}'' must be a positive integer</entry>
    <entry key="SaveVarsPrefsEntryOutOfRangeError">The entered value for ''{0}'' must fall between {1,number,integer} and {2,number,integer}</entry>
    <entry key="SaveVarMemoryAllocateError">memory allocation error when processing {0}</entry>
    <entry key="SaveVarMethodMembershipError">''{0}'' is not a public method of Class {1} for object {2}</entry>
    <entry key="SaveVarMissingCutoffSizeNumber">The options -maxnumel, -maxlevels, -textwidth must each be followed by an integer number.</entry>
    <entry key="SaveVarMissing2DSliceDimensionNumber">The option -2dslice must be followed by two non-zero integer numbers to specify the dimensions of the 2D slice.</entry>
    <entry key="SaveVarInvalid2DSliceDimensionNumber">The specified two dimensions, d1 and d2, after option -2dslice cannot be larger than {0,number,integer} and d1 must be less than d2.</entry>
    <entry key="SaveVarInvalid2DSliceDimensionNumberInPrefs">The specified two dimensions in ''{0}'' must fall between {1,number,integer} and {2,number,integer} and the second must be greater than the first.</entry>
    <entry key="SaveVarNOMatchingVariables">No matching variables in current workspace.</entry>
    <entry key="SaveVarNoSaveTempVariables">''{0}'' and ''{1}'' are reserved variable names. The variables under these two names cannot be saved to MATLAB file.</entry>
    <entry key="SaveVarNoVariables">The MATLAB file ''{0}'' does not have valid variables to update.</entry>
    <entry key="SaveVarOptionMutualExclusive">Options -create, -update, and -append are mutually exclusive.</entry>
    <entry key="SaveVarsCustomizationAPIMissingStaticAttribError">Method ''{0}'' of Class {1} should be defined as static method.</entry>
    <entry key="SaveVarsCustomizationAPISealedAttribError">Method ''{0}'' of Class {1} should not be defined as sealed method.</entry>
    <entry key="SaveVarsDefineBothWriteContentsMethodsError">Either method ''{0}'' or method  ''{1}'', but not both, can be defined by Class {2}.</entry>
    <entry key="SaveVarsGetConstructorArgsError">Static method ''{0}'' defined by Class {1} must return a one-dimensional cell array or an empty cell.</entry>
    <entry key="SaveVarsUnsupportedClassInheritanceError">Method ''{0}'' defined by Class {1} conflicts with other classes among the multiple inheritance.</entry>
    <entry key="SaveVarOverridedMethodError">Base method ''{0}'' of Class {1} for object {2} was not written out because the method can only be called by the same method in a subclass</entry>
    <entry key="SaveVarPropertyMembershipError">''{0}'' is not a public property of Class {1} for object {2}</entry>
    <entry key="SaveVarPropertyNameError">''{0}'' is not a property of Class {1} for object {2}</entry>
    <entry key="SaveVarRedefinedPropertyError">Some properties of superclass for object {0} are redefined</entry>
    <entry key="SaveVarRunTimeProperties">The following objects have runtime properties: \n         {0} \n         These runtime properties are not preserved by Simulink.saveVars.</entry>
    <entry key="SaveVarSharedReferences">The following objects are referenced multiple times: \n         {0} \n         Their shared references are not preserved by Simulink.saveVars.</entry>
    <entry key="SaveVarTempDir">Using the options -update or -append requires a temporary directory returned by the MATLAB command tempdir.</entry>
    <entry key="SaveVarTempFileOpen">The temporary MATLAB file ''{0}'' cannot be created.</entry>
    <entry key="SaveVarTextWidth">The integer number specified for option -textwidth must fall between {0,number,integer} and {1,number,integer}.</entry>
    <entry key="SaveVarTooFewInputArg">Not enough input arguments.</entry>
    <entry key="SaveVarTooManyElems">too many elements</entry>
    <entry key="SaveVarTooManyElemsAt">too many elements at {0}</entry>
    <entry key="SaveVarTooManyInputputArg">Too many input arguments.</entry>
    <entry key="SaveVarTooManyLevels">too many levels of hierarchy {0}</entry>
    <entry key="SaveVarTooManyOutputArg">Too many output arguments.</entry>
    <entry key="SaveVarUnknownOptionArg">The command option ''-{0}'' is unknown.</entry>
    <entry key="SaveVarUnsupportedClass">unsupported class</entry>
    <entry key="SaveVarUnsupportedClassAt">unsupported class at {0}</entry>
    <entry key="SaveVarVariableNameCollision">The name ''{0}'' is not a valid MATLAB file name, or collides with a variable name in the current workspace.</entry>
    <entry key="SaveVarVersionsAreExclusive">The -V{0} option cannot be used in combination with the -V{1} option.</entry>
    <entry key="SaveVarVersionsSpecifiedMoreThanOnce">Invalid specification of multiple versions. Specify version only once.</entry>
    <entry key="SaveVarsStreamClassErrorAsWarning" translate="false">{0}</entry>
    <entry key="SaveVarsStreamTooManyReturnArguments">Too many return arguments</entry>
    <entry key="SaveVarsStreamUDDPropValueGetError" translate="false">{0}</entry>
    <entry key="ExportModelWorkspaceIdentifierLength">Unable to export entries in model workspace with identifier length longer than {0} characters to version {1} or earlier: ''{2}''.</entry>
    <entry key="Signal_ErrResolvingInitialValue1">Error evaluating InitialValue ''{0}''</entry>
    <entry key="Signal_ErrResolvingInitialValue2">Error evaluating InitialValue ''{0}''. Make sure the expression is correct, and/or the variables or functions are defined</entry>
    <entry key="Signal_IgnoringInitialValue">InitialValue ignored for signal object ''{0}'' with ''Auto'' storage class unless referenced from the output data of a Stateflow chart.</entry>
    <entry key="Signal_InvalidLoggingInfo">Invalid ''LoggingInfo'' setting. ''LoggingInfo'' cannot be set to empty.</entry>
    <entry key="Signal_Invalid_NumDimensions">Invalid ''Dimensions'' property specified. This property must be a double vector consisting of either positive elements such that their cumulative product is less than or equal to {0,number,integer}, or elements with value of -1 (to specify that the dimension''s value is to be inherited from the signal). Further, for signals of greater than 2 dimensions, the trailing dimension must not be 1. Specify dimensions as a positive integer scalar or numeric row vector (such as [2 2]) or a character identifier or a character vector containing a row vector (such as ''[2 varDim]'' or ''[2 2]'')</entry>
    <entry key="Signal_Invalid_NumSampleTime">Invalid SampleTime specified</entry>
    <entry key="Signal_Invalid_ResolvedInitialValue">Expression specified for InitialValue, ''{0}'', is invalid. The expression must evaluate to a numeric array, fi object, enumerated value, or structure whose fields contain valid values.</entry>
    <entry key="Signal_Invalid_ResolvedInitialValue1">Data type of InitialValue ''{0}'' must be double or the same as the signal object data type</entry>
    <entry key="Signal_Property_Locked">Setting the ''{0}'' property is not allowed. This object is currently being used by block diagram ''{1}''. Try again after the block diagram has finished executing</entry>
    <entry key="Signal_UsedOnStringOutputPort">Output port {1, number, integer} of block ''{2}'' has string data type, which is not supported for signal object ''{0}''.</entry>
    <entry key="StructCasting_ComplexityMismatch">Complexity of structure field ''{0}'' is inconsistent with corresponding bus element in bus type ''{1}''</entry>
    <entry key="StructCasting_DataTypeMismatch">Data type of structure field ''{0}'' is not ''double'' and inconsistent with data type of corresponding element in bus type ''{1}''. Data type conversions are supported only for structure fields of type ''double''.</entry>
    <entry key="StructCasting_DimensionsMismatch">Dimensions of structure field ''{0}'' are inconsistent with corresponding bus element in bus type ''{1}''</entry>
    <entry key="StructCasting_FieldMismatch1">Structure field ''{0}'' is inconsistent with corresponding bus element in bus type ''{1}''. The structure field is a sub-structure while the bus element is not</entry>
    <entry key="StructCasting_FieldMismatch2">Structure field ''{0}'' is inconsistent with corresponding bus element in bus type ''{1}''. The bus element is a sub-structure while the structure field is not.</entry>
    <entry key="StructCasting_NoDoubleToEnumConversion">A structure is being described by bus ''{0}''. The field ''{1}'' is described by an enumerated value on the bus element and must also be of the same type on the structure</entry>
    <entry key="StructCasting_NoEnumToDoubleConversion">A structure is being described by bus ''{0}''. The field ''{1}'' is described by an enumerated value on the structure and must also be of the same type on the bus element</entry>
    <entry key="StructCasting_NoDoubleToStringConversion">A structure is being described by bus ''{0}''. The field ''{1}'' is described by a string value on the bus element and must also be of the same type on the structure.</entry>
    <entry key="StructCasting_NoStringToDoubleConversion">A structure is being described by bus ''{0}''. The field ''{1}'' is described by a string value on the structure and must also be of the same type on the bus element.</entry>
    <entry key="TraceabilityInvalidContext">''{0}'' is not a valid context. Valid contexts are blocks or block diagrams that are loaded.</entry>
    <entry key="TraceabilityInvalidContextUnusedVars">''{0}'' is not a valid context for finding unused variables. Valid contexts are block diagrams that are loaded.</entry>
    <entry key="TraceabilityInvalidFilter_Str" note="stringDatatypeUpdate">Invalid filter type for property ''{0}''. A filter for this property should be a character vector</entry>
    <entry key="TraceabilityInvalidSearchMethod">The value of ''{0}'' must be either ''compiled'' or ''cached''</entry>
    <entry key="TraceabilityInvalidWorkspaceType">Invalid WorkspaceType ''{0}''. See documentation for valid workspace types</entry>
    <entry key="TraceabilityInvalidSourceType">Invalid source type ''{0}''. See Simulink.findVars documentation for valid source types</entry>
    <entry key="TraceabilityLibOrRoot">''{0}'' is not a valid context. Block diagram type ''{1}'' is not supported.</entry>
    <entry key="UDDBaseObject_RecursiveLateBinding">Recursion found while evaluating property values</entry>
    <entry key="UDDBaseObject_MultipleRefsToSameObject">Model ''{0}'' is using workspace variables ''{1}'' and ''{2}'' but these variables refer to the same object. Update the MATLAB code that created these objects to create separate objects. Use the copy method to copy Simulink data objects</entry>
    <entry key="UDDBaseObject_MaskParamLateBindingOverwrite"><![CDATA[For masked block ''{0}'', parameter ''{1}'' is modified after it passes through the mask. This may be caused by data object modification from a block InitFcn callback or from MaskInitialization code.]]></entry>
    <entry key="ClassMustBeInPackage">Class ''{0}'' is a subclass of ''{1}'' and must be defined inside of a package, but not in a nested package</entry>
    <entry key="ClassMustBeInClassDir">Class ''{0}'' is a subclass of ''{1}'' and must be defined in a class directory inside of the package</entry>
    <entry key="UDDDataCustomAttribInvalid">The ''CoderInfo.CustomAttributes'' property of Simulink data object ''{0}'' is empty or invalid. Cannot find instance-specific properties of custom storage class ''{1}::{2}'' in it</entry>
    <entry key="UDDData_CannotSetCoderInfo">Cannot set CoderInfo property to object of class {0}. The ability to set the CoderInfo property is no longer supported</entry>
    <entry key="UDDData_DataTypeEvalErr">Error evaluating DataType property. </entry>
    <entry key="UDDData_ErrNonAsciiPropertyValue"> Invalid value ''{0}'' for property ''{1}'' because this property only supports ascii characters.</entry>
    <entry key="UDDData_PropertyValueMustBeVariableName"> Invalid value ''{0}'' for property ''{1}''. The value must be a valid MATLAB variable name</entry>
    <entry key="UDDData_ErrResolvingDataType">Error evaluating DataType ''{0}''</entry>
    <entry key="UDDData_Inconsistent">Inconsistent data</entry>
    <entry key="UDDData_InvalidExplicit_ResolvedDataType_Bus">DataType ''{0}'' did not resolve to a valid bus object</entry>
    <entry key="UDDData_Invalid_NoConversionToEnum">DataType ''{0}'' resolves to an enumerated data type. Conversion of parameters to enumerated data types is not supported</entry>
    <entry key="UDDData_Invalid_ResolvedDataType">DataType ''{0}'' did not resolve to a valid data type</entry>
    <entry key="UDDData_Invalid_ResolvedDataType_Enum">DataType ''{0}'' did not resolve to a valid enumerated data type</entry>
    <entry key="UDDData_Invalid_ResolvedDataType_Unscaled">DataType ''{0}'' is invalid because it does not contain scaling information</entry>
    <entry key="UDDData_MaxIsOutOfDTRange">Maximum ({0}) is out of data type range [{1}, {2}]</entry>
    <entry key="UDDData_MinValueNotNaN">Minimum cannot be NaN</entry>
    <entry key="UDDData_MaxValueNotNaN">Maximum cannot be NaN</entry>
    <entry key="ReminderMaxIsFromValueType">Simulink.Parameter object ''{0}'' uses maximum from value type ''{1}''.</entry>
    <entry key="ReminderMinIsFromValueType">Simulink.Parameter object ''{0}'' uses minimum from value type ''{1}''.</entry>
    <entry key="ReminderMinMaxIsFromValueType">Simulink.Parameter object uses minimum and maximum from value type ''{0}''.</entry>
    <!-- Following error messages are related to setting Dimensions of DataObject -->
    <entry key="UDDData_DimensionsIsReadOnly">Dimensions property is read-only.</entry>
    <entry key="UDDData_InvalidParamDimensionsSize">Simulink supports dimension size of up to {0,number,integer}. The dimension size specified exceeds this limit. Consider reducing the value size before compiling or simulating the model.</entry>
    <entry key="UDDData_InvalidConstBlockDimensionsExpression">Dimensions must be a 1 by 2 vector and one of the dimensions must be 1.</entry>
    <entry key="UDDData_DimensionIsNotAnInteger">{0} is not an integer. Dimension value must be specified as positive integer.</entry>
    <entry key="UDDData_InvalidDimensionSpecifications" note="stringDatatypeUpdate">Specify dimensions as a numeric row vector (such as [2 2]) or a character vector containing a row vector (such as ''[2 varDim]'' or ''[2 2]'').</entry>
    <entry key="UDDData_InvalidDimensionsVector">Dimension vector must contain at least two entries.</entry>
    <entry key="UDDData_DimensionMustBeGreaterThanZero">Dimension value must be specified as positive integer.</entry>
    <entry key="UDDData_CannotSetComplexity">''Complexity'' must match complexity of numeric ''Value''.</entry>
    <entry key="UDDData_CannotSetCustomDimensions">To set ''Dimensions'' for data object, ''Value'' must be empty.</entry>
    <entry key="UDDData_DimensionsMismatch_Parameter">Number of specified dimensions must be equal to number of dimensions of parameter value.</entry>
    <entry key="UDDData_DimensionsMismatch_Signal">Number of specified dimensions must be equal to number of dimensions of signal's initial value.</entry>
    <entry key="UDDData_MistmatchInDimensionsAndValue">Specified dimension {0} does not match with dimension {1} of value of parameter.</entry>
    <entry key="UDDData_MistmatchInDimensionsAndInitialValue">Specified dimension {0} does not match with dimension {1} of initial value of signal.</entry>
    <entry key="UDDData_Invalid_TrailingDimension">Trailing dimension in ''{0}'' must be greater than 1.</entry>
    <entry key="DataObject_InvalidPropAccessWhenCoderInfoObjIsNotSet">Invalid property access when CoderInfo object is not set.</entry>
    <!-- End of error messages related to setting Dimensions of DataObject-->
    <!-- Begin LookupTable object related error messages-->
    <entry key="LUT_STDAXIS" translate="false">Explicit values</entry>
    <entry key="LUT_COMAXIS" translate="false">Reference</entry>
    <entry key="LUT_FIXAXISDIST" translate="false">Even spacing</entry>
    <entry key="LUT_DimensionsMismatch">Dimensions specified for {0} data do not match the dimensions of the data's value. For breakpoint specification set to 'Explicit', the data's value is in the tabular area. For breakpoint specification set to 'Even spacing' or 'Reference', the data's value is in the 'Value' property.</entry>
    <entry key="LUT_StructTypeInfo_Invalid_Invocation">It is invalid to create a variable of type Simulink.lookuptable.StructTypeInfo.</entry>
    <entry key="LUT_DataNotStruct">Specify Lookup Table object in structure (field/value) format.</entry>
    <entry key="LUT_LookupNDBlockOnlySupportsLUTObjectWithExplicitValuesOrEvenSpacing"><![CDATA[Simulink.LookupTable object ''{0}'' has property 'Specification' set to 'Reference'. To use the object in n-D Lookup Table block ''{1}'', set 'Specification' to 'Explicit values' or 'Even spacing'. For more information, see <a href="matlab:helpview(fullfile(docroot,''toolbox'',''simulink'', ''helptargets.map''), ''LUT_err_bkpt_expl'')">the documentation</a>.]]></entry>
    <entry key="LUT_InterpNDBlockOnlySupportsLUTObjectWithReference"><![CDATA[Simulink.LookupTable object ''{0}'' has property 'Specification' set to 'Explicit values' or 'Even spacing'. To use the object in Interpolation Using Prelookup block ''{1}'', set 'Specification' to 'Reference', and create Simulink.Breakpoint objects. For more information, see <a href="matlab:helpview(fullfile(docroot,''toolbox'',''simulink'', ''helptargets.map''), ''LUT_err_bkpt_ref'')">the documentation</a>.]]></entry>
    <entry key="LUT_DoesNotSupportNonBPO">''{0}'' is not an instance of type Simulink.Breakpoint.</entry>
    <entry key="LUT_BreakpointObjectNotAllowedInModelWks">Simulink.Breakpoint ''{0}'' cannot be created inside model workspace. Create the object in base workspace or data dictionary.</entry>
    <entry key="LUT_InvalidData">The specified data for Lookup Table object is not valid.</entry>
    <entry key="LUT_BPO_InvalidData">The specified data for Breakpoint object is not valid.</entry>
    <entry key="LUT_InvalidDataType">The data type specified for either the Table data or one of the Breakpoint sets is not valid. Specify a data type other than boolean and enum.</entry>
    <entry key="LUT_InvalidMin">The minimum value specified for either the Table data or one of the Breakpoint sets is not valid. Specify scalar double.</entry>
    <entry key="LUT_InvalidMax">The maximum value specified for either the Table data or one of the Breakpoint sets is not valid. Specify scalar double.</entry>
    <entry key="LUT_InvalidUnit" note="stringDatatypeUpdate">The specified Unit for either the Table data or one of the Breakpoint sets is not valid. Specify a character vector value.</entry>
    <entry key="LUT_InvalidFieldName" note="stringDatatypeUpdate">The field name specified for either the Table data or one of the Breakpoint sets is not valid. Specify a character vector value.</entry>
    <entry key="LUT_InvalidFormat" note="stringDatatypeUpdate">The format specified for Lookup Table object is not valid. Specify a character vector value.</entry>
    <entry key="LUT_NotATableDataObject">The value of property 'Table' is not of type Simulink.lookup.Table</entry>
    <entry key="LUT_NotABreakpoint">The value of property 'Breakpoints' is not of type Simulink.lookuptable.Breakpoint</entry>
    <entry key="LUT_Invalid_Breakpoint">{0} is not a valid Breakpoint or is empty.</entry>
    <entry key="LUT_Invalid_BreakpointsSpecification"> ''{0}'' is not a valid value for property 'BreakpointsSpecification'.</entry>
    <entry key="LUT_BreakpointVectorDoesNotContainString">Breakpoints should either contain object of Simulink.lookup.Breakpoint or cell array of Breakpoint set names</entry>
    <entry key="LUT_TableShouldNotBeScalarOrStruct">Table data cannot be scalar or struct. Specify in vector or matrix form.</entry>
    <entry key="LUT_BreakpointDataShouldBeVector">Invalid breakpoint data for object. Breakpoint data must be a finite real numeric vector of width greater than 1. </entry>
    <entry key="LUT_FirstPointDataShouldBeScalarNumericFiniteReal">Invalid breakpoint first point data for object. First point value for breakpoint data must be a finite real numeric scalar. </entry>
    <entry key="LUT_SpacingDataShouldBeScalarNumericFiniteReal">Invalid breakpoint spacing data for object. Spacing value for breakpoint data must be a finite positive real numeric scalar. </entry>
    <entry key="LUT_TunableSizeValueShouldBeIntegerGeq2">Invalid tunable size value for object. Tunable size value for breakpoint data must be an integer greater than or equal to 2.</entry>
    <entry key="LUT_TunableSizeValueMustBeLeqBPArrayLen">Invalid tunable size value for object because the tunable size value exceeds the length of the breakpoint array. The tunable size value is {0, number, integer}, but the breakpoint array has only {1, number, integer} element(s).</entry>
    <entry key="LUT_InvalidLookupTableObject">The lookup table variable is not valid</entry>
    <entry key="LUT_NotAValidStructName" note="stringDatatypeUpdate">The value {0} of property 'StructName' is not valid.</entry>
    <entry key="LUT_NotValidBreakpointName" note="stringDatatypeUpdate">The value {0} of property 'BreakpointsInfo' is not valid.</entry>
    <entry key="LUT_InvalidObjectSpecifications">Variable {0} referenced by block ''{1}'' does not resolve to a valid {2} object.</entry>
    <entry key="LUT_Invalid_LUTObject_EmptyTableData">The value of Table data in lookup table {0} cannot be empty.</entry>
    <entry key="LUT_Invalid_LUTObject_EmptyBreakpoint">The value of Breakpoint {0} in lookup table {1} cannot be empty. Breakpoint data should be a finite real numeric vector of width greater than 1.</entry>
    <entry key="LUT_Invalid_LUTObject_EmptyBreakpointVector">The Breakpoint vector in lookup table {0} cannot be empty. Breakpoint data should be a finite real numeric vector of width greater than 1.</entry>
    <entry key="LUT_Invalid_LUTObject_EmptyEvenSpacingBreakpoint">The first point value of Breakpoint {0} in lookup table {1} cannot be empty. First point value data of a breakpoint should be a finite real numeric scalar.</entry>
    <entry key="LUT_Invalid_LUTObject_EmptySpacingInBreakpoint">The Spacing value of Breakpoint {0} in lookup table {1} cannot be empty. Spacing value data of a breakpoint should be a finite positive real numeric scalar.</entry>
    <entry key="LUT_ComplexBreakpoint_COM">The value of Breakpoint {0} in lookup table {1} must be non-complex. Breakpoint data should be a finite real numeric vector of width greater than 1.</entry>
    <entry key="LUT_ComplexBreakpoint2">The value of Breakpoint must be non-complex. Breakpoint data should be a finite real numeric vector of width greater than 1.</entry>
    <entry key="LUT_BP_NotAValidTunableSizeName">{0} is not a valid TunableSizeName. Specify MATLAB identifier.</entry>
    <entry key="LUT_NotAValidFieldName">{0} is not a valid FieldName. Specify MATLAB identifier.</entry>
    <entry key="LUT_Invalid_LUTObject_Mismatch_NumBP_TableDimensions"> Number of breakpoint sets must match number of Table data dimensions in {0}.</entry>
    <entry key="LUT_NotSupported">To specify the value of a LookupTable object with a struct, BreakpointsSpecification value must be ''Explicit values''.</entry>
    <entry key="LUT_StructValNotSupportedForSLXPBefore19b">LookupTable value specification with struct is not supported for protected model before R2019b.</entry>
    <!-- <entry key="LUT_StructValUsedInOtherTypes">Structure variable ''{0}'' used in lookup table argument ''{1}'' and in ''{2}''. Use of a structure variable in both a lookup table argument and elsewhere in the model is not supported.</entry> -->
    <entry key="LUT_InvalidArgValForStdAndFix">Value for model argument ''{0}'' in Model block ''{1}'' must be Simulink.LookupTable object or a structure.</entry>
    <entry key="LUT_InvalidArgValForCom">Value for model argument ''{0}'' in Model block ''{1}'' must be Simulink.LookupTable object or a numeric array.</entry>
    <!--<entry key="Invalid_LUTObject_Mismatch_NumBP_TableData"> Number of breakpoints must match length of corresponding Table data dimension in {0}.</entry>-->
    <entry key="LUT_Invalid_LUTObject_Mismatch_BP_TableData_COM">Number of breakpoints in ''{0}'' must equal number of elements in corresponding Table data dimension in ''{1}''.</entry>
    <entry key="LUT_Invalid_LUTObject_Mismatch_BP_Table_Dimensions_STD">Number of elements in breakpoint set {0, number, integer} must equal number of elements in corresponding dimension of Table data in ''{1}''.</entry>
    <entry key="LUT_Invalid_LUTObject_Mismatch_Tunable_Size_Table_Dimensions">Tunable size for breakpoint set {0, number, integer} must be less than or equal to the length of the corresponding dimension of table data in ''{1}''. The tunable size is {2, number, integer}, but dimension {0, number, integer} of the table data has length {3, number, integer}.</entry>
    <entry key="LUT_Invalid_LUTObject_Invalid_ND_TableData">Dimension number {0, number, integer} of table data specified in "{1}" has only one element. Either specify more elements for this dimension or reshape the data to remove this dimension.</entry>
    <entry key="LUT_BPNameCannotBeLUTObjectName">Breakpoint object name ''{0}'' is same as lookup table object name. Specify different name for ''{1}'' Breakpoint in lookup table object {0}.</entry>
    <entry key="LUT_Invalid_StructTypeInfo_Assignment">Invalid data specified for ''{0}''.</entry>
    <entry key="LUT_Max_Allowed_Breakpoints">Number of Breakpoints must be less than {0, number, integer}.</entry>
    <entry key="LUT_NumBreakpointsOutOfRange">Number of breakpoints must be less than {0, number, integer} for breakpoint datatype ''{1}''.</entry>
    <entry key="LUT_ObjectDataChangeDuringSim"> {0} ''{1}'' changed number of breakpoints during simulation. Restore to previous value and update the model. </entry>
    <entry key="LUT_ObjectDataSupportTunableChangeDuringSim"> {0} ''{1}'' changed value of 'support tunable size' from {2,number,integer} to {3,number,integer} during simulation. Restore to value {4,number,integer} and update the model. </entry>
    <entry key="LUT_ObjectDataTunableSizeChangeDuringSim"> {0} ''{1}'' changed tunable size value for dimension {2,number,integer} from {3,number,integer} to {4,number,integer} during simulation. Restore to value {3,number,integer} and update the model. </entry>
    <entry key="LUT_ObjectDataTypeChangeDuringSim">  {0} element of {1} ''{2}'' changed data type from ''{3}'' to ''{4}'' during simulation. Data types and dimensions of object data cannot change during simulation. Reset the data type to ''{5}'' and update the model. </entry>
    <entry key="LUT_ObjectDimensionChangeDuringSim">  {0} value of {1} ''{2}'' changed dimension width from ''{3}'' to ''{4}'' during simulation. Data types and dimensions of object data cannot change during simulation. Reset the width to ''{5}'' and update the model. </entry>
    <entry key="LUT_ObjectDataAllowDifferentlySizedArraysChangeDuringSim"> {0} ''{1}'' changed value of 'Allow multiple instances of this type to have different table and breakpoint sizes' from {2,number,integer} to {3,number,integer} during simulation. Restore to value {4,number,integer} and update the model. </entry>
    <entry key="LUT_MixedDimensionTunabilityNotSupported">The Simulink.LookupTable object used in the Interpolation Using Prelookup block ''{0}'' refers to Simulink.Breakpoint objects that have different values for the 'Support tunable size' property. Use the same value in all of the Simulink.Breakpoint objects.</entry>
    <entry key="LUT_EnumTunableSizeNotSupported">The data type of Breakpoints({0,number,integer}) in the Simulink.LookupTable object used in block ''{1}'' is an enumerated data type. The ''Tunable size'' parameter is not supported for enumerated data types.</entry>
    <entry key="LUT_BPEnumTunableSizeNotSupported">The data type of Breakpoints in the Simulink.Breakpoint object used in block ''{0}'' is an enumerated data type. The ''Tunable size'' parameter is not supported for enumerated data types.</entry>    
    <entry key="LUT_Cell_Array_Should_Contain_Strings">Value of 'Breakpoints' property must be either cell array of character vectors (names of Simulink.Breakpoint objects) or array of Simulink.lookuptable.Breakpoint objects (to create more objects in the array, specify the object properties, for example, with the command myLUTObject.Breakpoints(4).FieldName = 'BP4').</entry>
    <entry key="LUT_Invalid_StructInfo_Size">Simulink.LookupTable or Simulink.Breakpoint object ''{1}'' defines a structure type ''{0}''. Another object defines a structure type with the same name but different number of fields. Change the type name or match the number of fields.</entry>
    <entry key="LUT_Invalid_StructInfo_PreserveDimensions">Simulink.LookupTable object ''{1}'' defines a structure type ''{0}''. Another object defines a structure type with the same name but with a different value for the ''Preserve array dimensions'' property. Change the type name or match the ''Preserve array dimensions'' value.</entry>
    <entry key="LUT_Invalid_StructInfo_Name">Simulink.LookupTable or Simulink.Breakpoint object ''{1}'' defines a structure type ''{0}''. Change the type name so that it can be used to define a structure type.</entry>
    <entry key="LUT_Invalid_StructInfo_ElementDType">Simulink.LookupTable or Simulink.Breakpoint object ''{2}'' defines a structure type ''{1}'' containing field ''{0}'' with data type ''{4}''. Another object uses the same structure type name but a different data type, ''{3}'', for the same field. Match the data types or change one of the structure type names.</entry>
    <entry key="LUT_Invalid_StructInfo_AllowDifferentlySizedArrays">Simulink.LookupTable or Simulink.Breakpoint object ''{1}'' defines a structure type ''{0}'' with 'Allow multiple instances of this type to have different table and breakpoint sizes' set to ''{3}''. Another object uses the same structure type name but has 'Allow multiple instances of this type to have different table and breakpoint sizes' set to ''{2}''. Match the settings for 'Allow multiple instances of this type to have different table and breakpoint sizes' or change one of the structure type names.</entry>   
    <entry key="LUT_Invalid_StructInfo_ElementDim">Simulink.LookupTable or Simulink.Breakpoint object ''{2}'' defines a structure type ''{1}'' containing field ''{0}'' with number of array elements ''{4}''. Another object uses the same structure type name but a different number of elements, ''{3}'', for the same field. Match the number of elements or change one of the structure type names.</entry>
    <entry key="LUT_Invalid_StructInfo_NumOfDims">Simulink.LookupTable or Simulink.Breakpoint object ''{2}'' defines a structure type ''{1}'' containing field ''{0}'' with number of dimensions of ''{4}''. Another object uses the same structure type name but a different number of dimensions, ''{3}'', for the same field. Match the number of dimensions or change one of the structure type names.</entry>
    <entry key="LUT_Invalid_StructInfo_SameLengthDiffDims">Simulink.LookupTable or Simulink.Breakpoint object ''{2}'' defines a structure type ''{1}'' containing field ''{0}'' with length ''{4}'' along dimension number ''{5}''. Another object uses the same structure type name but a different length, ''{3}'', for the same field and dimension. Match the lengths or change one of the structure type names.</entry>
    <entry key="LUT_Invalid_StructInfo_RowAndColumnVectors">Simulink.LookupTable or Simulink.Breakpoint object ''{2}'' defines a structure type ''{1}'' containing field ''{0}'' with dimensions of the form ''{3}''. Another object uses the same structure type name but has dimensions of the form ''{4}'' for the same field. Match the forms or change one of the structure type names.</entry>
    <entry key="LUT_Invalid_mdlrefDTOContext">Simulink.LookupTable object or Simulink.Breakpoint object ''{0}'' is used by a Model block that references a model with active data type override settings. However, there is no model-wide data type override for ''{1}''. Simulink.LookupTable object and Simulink.Breakpoint object only support model-wide data type override. Remove the active data type override from the referenced model or use model-wide data type override for ''{1}''.</entry>
    <entry key="LUT_Invalid_subsysDTOContext">Simulink.LookupTable object or Simulink.Breakpoint object ''{0}'' is used by a block that is under a subsystem with active data type override settings. However, there is no model-wide data type override. Simulink.LookupTable object and Simulink.Breakpoint object only support model-wide data type override. Remove the active data type override from parent subsystem of its client blocks or use model-wide data type override.</entry>
    <entry key="LUT_Invalid_Model_Argument">The value of model argument ''{0}'' does not resolve to a valid Simulink.LookupTable object.</entry>
    <entry key="LUT_Invalid_package">The package specified ''{0}'' cannot be applied, specify ''{1}'' instead.</entry>
    <entry key="LUT_No_Package">The subclass of LookupTableObject and Breakpoint must be part of a package.</entry>
    <entry key="LUT_Invalid_Breakpoints_For_Given_Specification">For breakpoints specification set to ''{0}'', specify Breakpoints as ''{1}'' object.</entry>
    <entry key="LUT_Invalid_Breakpoints_For_COMAXIS_Specification">For ''Reference'' breakpoints specification, specify breakpoints in form of cell array of strings.</entry>
    <entry key="LUT_AllowDifferentlySizedCRLError">Simulink.LookupTable objects with 'Allow multiple instances of this type to have different table and breakpoint sizes' parameter set to 'on' and Storage class set to 'Auto' are not supported for code replacement library function replacement when the model has 'Default parameter behavior' parameter set to 'Inlined'.</entry> 
    <!-- End of LookupTable object related error messages-->
    <entry key="UDDData_NotMATIdentifier">Expression specified for {0} is not a valid MATLAB identifier. Specify only MATLAB identifier as assignment to {1}</entry>
    <entry key="UDDData_EmptyValueStrSpecified">Value must be a numeric array, fi object, enumerated value, or structure whose fields contain valid values or a valid MATLAB identifier.</entry>
    <entry key="UDDData_InvalidTypeForValue">Variable {0} must be a numeric array, fi object, enumerated value, or structure whose fields contain valid values.</entry>
    <entry key="UDDData_ValueNotValid">The parameter {0} does not contain positive integer.</entry>
    <entry key="UDDData_VariableNotFound">Variable {0} does not exist</entry>
    <entry key="UDDData_CyclicReference">Self assignment of {0} is invalid</entry>
    <entry key="MinValueMustBeFiniteDblScalar">Minimum must be a finite real double scalar value</entry>
    <entry key="MaxValueMustBeFiniteDblScalar">Maximum must be a finite real double scalar value</entry>
    <entry key="MinValueNoMinusInf">Minimum must be a finite real double scalar value.</entry>
    <entry key="WarnMinValueNoMinusInf">Minimum must be a finite real double scalar value. In a future release, setting -Inf as minimum of a data object will cause an error. </entry>
    <entry key="MaxValueNoInf">Maximum must be a finite real double scalar value.</entry>
    <entry key="WarnMaxValueNoInf">Maximum must be a finite real double scalar value. In a future release, setting Inf as maximum of a data object will cause an error. </entry>
    <entry key="MinValueDoubleOnly">Minimum must be a finite real double scalar value. It has been converted to a value of type 'double' without impact on Simulink applications. Set double value on minimum to avoid an error in a future release</entry>
    <entry key="MaxValueDoubleOnly">Maximum must be a finite real double scalar value. It has been converted to a value of type 'double' without impact on Simulink applications. Set double value on maximum to avoid an error in a future release</entry>
    <entry key="UDDData_BusDataTypeNotSupportMinMax">Minimum and maximum are not supported for {0} object with bus data type and will be ignored. To avoid an error in a future release, specify minimum and maximum on leaf elements of bus object ''{1}''</entry>
    <entry key="BusDataTypeNotSupportUnits" note="stringDatatypeUpdate">Data type of object {0} refers to a bus object, so units are not supported. To avoid an error in a future release, set Unit property to an empty character vector, and specify units for leaf elements of bus object ''{1}'' instead.</entry>
    <entry key="UDDData_AnonymousBusDataTypeNotSupportMinMax">Minimum and maximum are not supported for {0} object with structure value and will be ignored. To avoid an error in a future release, specify DataType to be a bus object and set minimum and maximum on leaf elements</entry>
    <entry key="UDDData_MinGreaterThanMax">Minimum ({0}) is greater than maximum ({1})</entry>
    <entry key="UDDData_MinIsOutOfDTRange">Minimum ({0}) is out of data type range [{1}, {2}]</entry>
    <entry key="UDDData_CSCPackageNameChanged">The package that defines custom storage classes has been changed since this MAT-file was saved, from ''{0}'' to ''{1}''. Simulink will attempt to copy over property values to the new CoderInfo object. Please check the contents of the object and then resave the MAT-file.</entry>
    <entry key="UDDData_NotReplacingRTWInfo2">The CoderInfo property is being set with a {1} object when a {0} object is expected. Simulink will attempt to copy over property values to the existing CoderInfo object. If you receive this warning during MAT-file or model loading, please resave the file</entry>
    <entry key="UDDData_ReplaceOldRTWInfo">Model or MAT file contains Simulink.ParamRTWInfo or Simulink.SignalRTWINfo objects which are no longer supported. To eliminate this message, resave the Model or MAT file in release R2024b or earlier.</entry>
    <entry key="UDDData_ValueLessThanMin">{0} ({1}) is less than minimum ({2})</entry>
    <entry key="UDDData_ImValueLessThanMin">Imaginary part of {0} ({1}) is less than minimum ({2})</entry>
    <entry key="UDDData_ReValueLessThanMin">Real part of {0} ({1}) is less than minimum ({2})</entry>
    <entry key="UDDData_ValueGreaterThanMax">{0} ({1}) is greater than maximum ({2})</entry>
    <entry key="UDDData_ImValueGreaterThanMax">Imaginary part of {0} ({1}) is greater than maximum ({2})</entry>
    <entry key="UDDData_ReValueGreaterThanMax">Real part of {0} ({1}) is greater than maximum ({2})</entry>
    <entry key="UDDData_ArrayValueLessThanMin">{0} ({1}) is less than minimum ({2}). This occurs for element {3}.</entry>
    <entry key="UDDData_ArrayImValueLessThanMin">Imaginary part of {0} ({1}) is less than minimum ({2}). This occurs for element {3}.</entry>
    <entry key="UDDData_ArrayReValueLessThanMin">Real part of {0} ({1}) is less than minimum ({2}). This occurs for element {3}.</entry>
    <entry key="UDDData_ArrayValueGreaterThanMax">{0} ({1}) is greater than maximum ({2}). This occurs for element {3}.</entry>
    <entry key="UDDData_ArrayImValueGreaterThanMax">Imaginary part of {0} ({1}) is greater than maximum ({2}). This occurs for element {3}.</entry>
    <entry key="UDDData_ArrayReValueGreaterThanMax">Real part of {0} ({1}) is greater than maximum ({2}). This occurs for element {3}.</entry>
    <entry key="UDDData_QuantizedValueLessThanMin">Quantized {0} ({1}) is less than minimum ({2})</entry>
    <entry key="UDDData_QuantizedImValueLessThanMin">Imaginary part of quantized {0} ({1}) is less than minimum ({2})</entry>
    <entry key="UDDData_QuantizedReValueLessThanMin">Real part of quantized {0} ({1}) is less than minimum ({2})</entry>
    <entry key="UDDData_QuantizedValueGreaterThanMax">Quantized {0} ({1}) is greater than maximum ({2})</entry>
    <entry key="UDDData_QuantizedImValueGreaterThanMax">Imaginary part of quantized {0} ({1}) is greater than maximum ({2})</entry>
    <entry key="UDDData_QuantizedReValueGreaterThanMax">Real part of quantized {0} ({1}) is greater than maximum ({2})</entry>
    <entry key="UDDData_QuantizedArrayValueLessThanMin">Quantized {0} ({1}) is less than minimum ({2}). This occurs for element {3}.</entry>
    <entry key="UDDData_QuantizedArrayImValueLessThanMin">Imaginary part of quantized {0} ({1}) is less than minimum ({2}). This occurs for element {3}.</entry>
    <entry key="UDDData_QuantizedArrayReValueLessThanMin">Real part of quantized {0} ({1}) is less than minimum ({2}). This occurs for element {3}.</entry>
    <entry key="UDDData_QuantizedArrayValueGreaterThanMax">Quantized {0} ({1}) is greater than maximum ({2}). This occurs for element {3}.</entry>
    <entry key="UDDData_QuantizedArrayImValueGreaterThanMax">Imaginary part of quantized {0} ({1}) is greater than maximum ({2}). This occurs for element {3}.</entry>
    <entry key="UDDData_QuantizedArrayReValueGreaterThanMax">Real part of quantized {0} ({1}) is greater than maximum ({2}). This occurs for element {3}.</entry>
    <entry key="ValueIsOutOfDTRange">Value ({0}) is out of data type range [{1}, {2}] for data type ''{3}''</entry>
    <entry key="ArrayValueIsOutOfDTRange">Value ({0}) is out of data type range [{1}, {2}] for data type ''{3}''. This occurs for element {4}.</entry>
    <entry key="UDDData_ValueIsOutOfDTRange">{0} ({1}) is out of data type range [{2}, {3}] for data type ''{4}''</entry>
    <entry key="UDDData_ArrayValueIsOutOfDTRange">{0} ({1}) is out of data type range [{2}, {3}] for data type ''{4}''. This occurs for element {5}.</entry>
    <entry key="UDDData_ValueOverflow">Overflow occurred for Value ({0}) of ''{1}''. The value is outside the range that the run-time data type ''{2}'' can represent. The specified value was saturated to the closest representable value. To disable this warning or error, in the Configuration Parameters > Diagnostics > Data Validity pane, set the ''Detect overflow'' option in the Parameters group to ''none''.</entry>
    <entry key="UDDData_ValuePrecisionLoss">Precision loss occurred for Value ({0}) of ''{1}''. The value cannot be represented exactly using the run-time data type ''{2}''. A small quantization error has occurred. To disable this warning or error, in the Configuration Parameters > Diagnostics > Data Validity pane, set the ''Detect precision loss'' option in the Parameters group to ''none''.</entry>
    <entry key="UDDData_ValueUnderflow">Underflow occurred for Value ({0}) of ''{1}''. The value is non-zero, but after quantization to the run-time data type ''{2}'' the value is zero. To disable this warning or error, in the Configuration Parameters > Diagnostics > Data Validity pane, set the ''Detect underflow'' option in the Parameters group to ''none''.</entry>
    <entry key="UDDData_ImValueOverflow">Overflow occurred for Value ({0}) of ''{1}''. The imaginary part is outside the range that the run-time data type ''{2}'' can represent. The specified value was saturated to the closest representable value. To disable this warning or error, in the Configuration Parameters > Diagnostics > Data Validity pane, set the ''Detect overflow'' option in the Parameters group to ''none''.</entry>
    <entry key="UDDData_ImValuePrecisionLoss">Precision loss occurred for Value ({0}) of ''{1}''. The imaginary part cannot be represented exactly using the run-time data type ''{2}''. A small quantization error has occurred. To disable this warning or error, in the Configuration Parameters > Diagnostics > Data Validity pane, set the '''Detect precision loss'' option in the Parameters group to ''none''.</entry>
    <entry key="UDDData_ImValueUnderflow">Underflow occurred for Value ({0}) of ''{1}''. The imaginary part is non-zero, but after quantization to the run-time data type ''{2}'' the value is zero. To disable this warning or error, in the Configuration Parameters > Diagnostics > Data Validity pane, set the ''Detect underflow'' option in the Parameters group to ''none''.</entry>
    <entry key="UDDData_ReValueOverflow">Overflow occurred for Value ({0}) of ''{1}''. The real part is outside the range that the run-time data type ''{2}'' can represent. The specified value was saturated to the closest representable value. To disable this warning or error, in the Configuration Parameters > Diagnostics > Data Validity pane, set the ''Detect overflow'' option in the Parameters group to ''none''.</entry>
    <entry key="UDDData_ReValuePrecisionLoss">Precision loss occurred for Value ({0}) of ''{1}''. The real part cannot be represented exactly using the run-time data type ''{2}''. A small quantization error has occurred. To disable this warning or error, in the Configuration Parameters > Diagnostics > Data Validity pane, set the ''Detect precision loss'' option in the Parameters group to ''none''.</entry>
    <entry key="UDDData_ReValueUnderflow">Underflow occurred for Value ({0}) of ''{1}''. The real part is non-zero, but after quantization to the run-time data type ''{2}'' the value is zero. To disable this warning or error, in the Configuration Parameters > Diagnostics > Data Validity pane, set the ''Detect underflow'' option in the Parameters group to ''none''.</entry>
    <entry key="UDDData_ArrayValueOverflow">Overflow occurred for Value ({0}) at element index {1} on ''{2}''. The value is outside the range that the run-time data type ''{3}'' can represent. The specified value was saturated to the closest representable value. To disable this warning or error, in the Configuration Parameters > Diagnostics > Data Validity pane, set the ''Detect overflow'' option in the Parameters group to ''none''.</entry>
    <entry key="UDDData_ArrayValuePrecisionLoss">Precision loss occurred for Value ({0}) at element index {1} on ''{2}''. The value cannot be represented exactly using the run-time data type ''{3}''. A small quantization error has occurred. To disable this warning or error, in the Configuration Parameters > Diagnostics > Data Validity pane, set the ''Detect precision loss'' option in the Parameters group to ''none''.</entry>
    <entry key="UDDData_ArrayValueUnderflow">Underflow occurred for Value ({0}) at element index {1} on ''{2}''. The value is non-zero, but after quantization to the run-time data type ''{3}'' the value is zero. To disable this warning or error, in the Configuration Parameters > Diagnostics > Data Validity pane, set the ''Detect underflow'' option in the Parameters group to ''none''.</entry>
    <entry key="UDDData_ArrayImValueOverflow">Overflow occurred for Value ({0}) at element index {1} on ''{2}''. The imaginary part is outside the range that the run-time data type ''{3}'' can represent. The specified value was saturated to the closest representable value. To disable this warning or error, in the Configuration Parameters > Diagnostics > Data Validity pane, set the ''Detect overflow'' option in the Parameters group to ''none''. </entry>
    <entry key="UDDData_ArrayImValuePrecisionLoss">Precision loss occurred for Value ({0}) at element index {1} on ''{2}''. The imaginary part cannot be represented exactly using the run-time data type ''{3}''. A small quantization error has occurred. To disable this warning or error, in the Configuration Parameters > Diagnostics > Data Validity pane, set the ''Detect precision loss'' option in the Parameters group to ''none''.</entry>
    <entry key="UDDData_ArrayImValueUnderflow">Underflow occurred for Value ({0}) at element index {1} on ''{2}''. The imaginary part is non-zero, but after quantization to the run-time data type ''{3}'' the value is zero. To disable this warning or error, in the Configuration Parameters > Diagnostics > Data Validity pane, set the ''Detect underflow'' option in the Parameters group to ''none''.</entry>
    <entry key="UDDData_ArrayReValueOverflow">Overflow occurred for Value ({0}) at element index {1} on ''{2}''. The real part is outside the range that the run-time data type ''{3}'' can represent. The specified value was saturated to the closest representable value. To disable this warning or error, in the Configuration Parameters > Diagnostics > Data Validity pane, set the ''Detect overflow'' option in the Parameters group to ''none''.</entry>
    <entry key="UDDData_ArrayReValuePrecisionLoss">Precision loss occurred for Value ({0}) at element index {1} on ''{2}''. The real part cannot be represented exactly using the run-time data type ''{3}''. A small quantization error has occurred. To disable this warning or error, in the Configuration Parameters > Diagnostics > Data Validity pane, set the ''Detect precision loss'' option in the Parameters group to ''none''.</entry>
    <entry key="UDDData_ArrayReValueUnderflow">Underflow occurred for Value ({0}) at element index {1} on ''{2}''. The real part is non-zero, but after quantization to the run-time data type ''{3}'' the value is zero. To disable this warning or error, in the Configuration Parameters > Diagnostics > Data Validity pane, set the ''Detect underflow'' option in the Parameters group to ''none''.</entry>
    <entry key="UDDData_StructValueOverflowPrecisionLossUnderflowMsgForParamObj">Value of ''{0}'' cannot be represented exactly using the run-time bus data type ''{1}'':\n{2}</entry>
    <entry key="UDDData_StructValueOverflowMsgForParamObj">Overflow occurred for Value of ''{0}''. The specified value was saturated to the closest representable value. To disable this warning or error, in the Configuration Parameters > Diagnostics > Data Validity pane, set the ''Detect overflow'' option in the Parameters group to ''none''.{1}</entry>
    <entry key="UDDData_StructValuePrecisionLossMsgForParamObj">Precision loss occurred for Value of ''{0}''. To disable this warning or error, in the Configuration Parameters > Diagnostics > Data Validity pane, set the ''Detect precision loss'' option in the Parameters group to ''none''.{1}</entry>
    <entry key="UDDData_StructValueUnderflowMsgForParamObj">Underflow occurred for Value of ''{0}''. To disable this warning or error, in the Configuration Parameters > Diagnostics > Data Validity pane, set the ''Detect underflow'' option in the Parameters group to ''none''.{1}</entry>
    <entry key="UDDData_StructValueOverflowPrecisionLossUnderflowMsgForBlock"><![CDATA[Value of parameter ''{0}'' in block ''{1}''cannot be represented exactly using the run-time bus data type ''{2}'':\n{3}<actions exclusiveFixIts="no"><action type="suppression"></action></actions>]]></entry>
    <entry key="UDDData_StructValueOverflowMsgForBlock"><![CDATA[Overflow occurred for Value of parameter ''{0}'' in block ''{1}'''. The specified value was saturated to the closest representable value. To disable this warning or error, in the Configuration Parameters > Diagnostics > Data Validity pane, set the ''Detect overflow'' option in the Parameters group to ''none''.{2}<actions exclusiveFixIts="no"><action type="suppression"></action></actions>]]></entry>
    <entry key="UDDData_StructValuePrecisionLossMsgForBlock"><![CDATA[Precision loss occurred for parameter ''{0}'' in block ''{1}''. To disable this warning or error, in the Configuration Parameters > Diagnostics > Data Validity pane, set the ''Detect precision loss'' option in the Parameters group to ''none''.{2}<actions exclusiveFixIts="no"><action type="suppression"></action></actions>]]></entry>
    <entry key="UDDData_StructValueUnderflowMsgForBlock"><![CDATA[Underflow occurred for Value of parameter ''{0}'' in block ''{1}''. To disable this warning or error, in the Configuration Parameters > Diagnostics > Data Validity pane, set the ''Detect underflow'' option in the Parameters group to ''none''.{2}<actions exclusiveFixIts="no"><action type="suppression"></action></actions>]]></entry>
    <entry key="UDDData_TunableStuctParamMustMatchBus"><![CDATA[Data type mismatch detected in parameter ''{0}'' of block ''{1}''.\n\nFor tunable structure parameters, the data types of all elements of the parameters must match the corresponding elements of the target bus signal. You can make parameter non-tunable by (1) selecting ''Inlined'' from the ''Default parameter behavior:'' dropdown list in the Configuration Parameters > Code Generation > Optimization pane and (2) clicking adjacent ''Configure'' button to ensure the parameter does not appear in global tunable parameter list. Click <a href="matlab:helpview(fullfile(docroot,''fixedpoint'',''fixedpoint.map''), ''parameterTunabilityLoss'')"> here </a> for more information.]]> </entry>
    <entry key="UDDData_StructValueOverflow">The struct field value ({0}) is outside the range that the run-time data type ''{1}'' of corresponding bus element ''{2}'' can represent.</entry>
    <entry key="UDDData_StructValuePrecisionLoss">The struct field value ({0}) cannot be represented exactly using the run-time data type ''{1}'' of corresponding bus element ''{2}''. A small quantization error has occurred.</entry>
    <entry key="UDDData_StructValueUnderflow">The struct field value ({0}) is non-zero, but after quantization to the run-time data type ''{1}'' of corresponding bus element ''{2}'', the value is zero.</entry>
    <entry key="UDDData_StructImValueOverflow">The imaginary part of struct field value ({0}) is outside the range that the run-time data type ''{1}'' of corresponding bus element ''{2}''' can represent.</entry>
    <entry key="UDDData_StructImValuePrecisionLoss">The imaginary part of struct field value ({0}) cannot be represented exactly using the run-time data type ''{1}'' of corresponding bus element ''{2}''. A small quantization error has occurred.</entry>
    <entry key="UDDData_StructImValueUnderflow">The imaginary part of struct field value ({0}) is non-zero, but after quantization to the run-time data type ''{1}'' of corresponding bus element ''{2}'', the value is zero.</entry>
    <entry key="UDDData_StructReValueOverflow">The real part of struct field value ({0}) is outside the range that the run-time data type ''{1}'' of corresponding bus element ''{2}''' can represent.</entry>
    <entry key="UDDData_StructReValuePrecisionLoss">The real part of struct field value ({0}) cannot be represented exactly using the run-time data type ''{1}'' of corresponding bus element ''{2}''. A small quantization error has occurred.</entry>
    <entry key="UDDData_StructReValueUnderflow">The real part of struct field value ({0}) is non-zero, but after quantization to the run-time data type ''{1}'' of corresponding bus element ''{2}'', the value is zero.</entry>
    <entry key="UDDData_StructArrayValueOverflow">The struct field value ({0}) at element index {1} is outside the range that the run-time data type ''{2}'' of corresponding bus element ''{3}'' can represent.</entry>
    <entry key="UDDData_StructArrayValuePrecisionLoss">The struct field value ({0}) at element index {1} cannot be represented exactly using the run-time data type ''{2}'' of corresponding bus element ''{3}''. A small quantization error has occurred.</entry>
    <entry key="UDDData_StructArrayValueUnderflow">The struct field value ({0}) at element index {1} is non-zero, but after quantization to the run-time data type ''{2}'' of corresponding bus element ''{3}'', the value is zero.</entry>
    <entry key="UDDData_StructArrayImValueOverflow">The imaginary part of struct field value ({0}) at element index {1} is outside the range that the run-time data type ''{2}'' of corresponding bus element ''{3}'' can represent.</entry>
    <entry key="UDDData_StructArrayImValuePrecisionLoss">The imaginary part of struct field value ({0}) at element index {1} cannot be represented exactly using the run-time data type ''{2}'' of corresponding bus element ''{3}''. A small quantization error has occurred.</entry>
    <entry key="UDDData_StructArrayImValueUnderflow">The imaginary part of struct field value ({0}) at element index {1} is non-zero, but after quantization to the run-time data type ''{2}'' of corresponding bus element ''{3}'', the value is zero.</entry>
    <entry key="UDDData_StructArrayReValueOverflow">The real part of struct field value ({0}) at element index {1} is outside the range that the run-time data type ''{2}'' of corresponding bus element ''{3}'' can represent.</entry>
    <entry key="UDDData_StructArrayReValuePrecisionLoss">The real part of struct field value ({0}) at element index {1} cannot be represented exactly using the run-time data type ''{2}'' of corresponding bus element ''{3}''. A small quantization error has occurred.</entry>
    <entry key="UDDData_StructArrayReValueUnderflow">The real part of struct field value ({0}) at element index {1} is non-zero, but after quantization to the run-time data type ''{2}'' of corresponding bus element ''{3}'', the value is zero.</entry>
    <entry key="InputIsNotADataObject">Input argument is not a Simulink.Data object</entry>
    <entry key="InvalidCSCPackageName">Invalid custom storage classes package ''{0}'' for {1} object</entry>
    <entry key="InvalidPropertyName">Property ''{0}'' not found.</entry>
    <entry key="UDDParam_BusStructureMismatch">The bus ''{0}'' is not equivalent to the structure value for the parameter. The number of elements do not match</entry>
    <entry key="UDDParam_BusStructureNodeNameMismatch">Structure field name ''{0}'' is inconsistent with corresponding bus element name ''{1}'' in bus type ''{2}''</entry>
    <entry key="UDDParam_BusStructureNodeNameDoesNotExist">Structure field ''{0}'' not found in value of parameter object ''{1}''.</entry>
    <entry key="UDDParam_InvalidDataTypeForStructValue">''DataType'' value must be ''struct'', a bus type (''Bus: name''), or a value type that specifies a bus type (''ValueType: name'') because the parameter object ''Value'' property specifies a structure.</entry>
    <entry key="UDDParam_InvalidStructDTForNonStructValue">The parameter DataType cannot be set to 'struct' unless the Value is a structure</entry>
    <entry key="UDDParam_ValueNotStructWithExplicitBusType">The parameter DataType resolves to a bus data type, but the Value field does not resolve to a struct value</entry>
    <entry key="UDDSigDisallowPropertiesOnBus"><![CDATA[The Simulink signal object ''{0}'' specified on the line originating from <sldiag objui="outport" objparam="{1,number,integer}" objname="{2}">output port {1,number,integer}</sldiag> of ''{2}'' is invalid because this is a bus signal. Consider resetting the property ({3}) to its default value ({4})]]></entry>
    <entry key="UDDSignal_InvalidStructDT">The DataType property of signal object cannot be set to 'struct'</entry>
    <entry key="UDDSigDisallowVirtualBus"><![CDATA[The Simulink signal object ''{0}'' specified on the line originating from <sldiag objui="outport" objparam="{1,number,integer}" objname="{2}">output port {1,number,integer}</sldiag> of ''{2}'' is invalid because this is a virtual bus signal. Consider inserting a Signal Conversion block to convert the virtual bus to a nonvirtual bus prior to attaching the Simulink.Signal object to this line.]]></entry>
    <entry key="UDDSigPropErr3Merge"><![CDATA[Conflicting signal configuration. The Simulink signal object on <sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">output port {0,number,integer}</sldiag> of {1} conflicts with the Simulink signal object on <sldiag objui="outport" objparam="{2,number,integer}" objname="{3}">output port {2,number,integer}</sldiag> of {3} since these signals feed the Merge block {4} and therefore share the same memory. Signals entering the Merge block must have the same attributes. A common technique is to use Signal Conversion blocks upstream of the Merge block to isolate the signal specifications.]]></entry>
    <entry key="UDDSigPropErr3"><![CDATA[Conflicting signal configuration. The Simulink signal object on <sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">output port {0,number,integer}</sldiag> of {1} conflicts with the Simulink signal object on <sldiag objui="outport" objparam="{2,number,integer}" objname="{3}">output port {2,number,integer}</sldiag> of {3} since both outputs map to the same signal.]]></entry>
    <entry key="UDDSigPropErr4"><![CDATA[The Simulink signal object specified on the line originating from <sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">output port {0,number,integer}</sldiag> of {1} is invalid because it cannot be uniquely mapped to a valid signal in the model. Consider inserting a Signal Conversion block after the output port and specifying the signal object on the output of the Signal Conversion block instead.]]></entry>
    <entry key="UDDSigResolverErr10"><![CDATA[Code-generation options are specified by signal object ''{0}'' for <sldiag objui="outport" objparam="{1,number,integer}" objname="{2}">output port {1,number,integer}</sldiag> of {2}, but these options are already specified on the port by an embedded signal object]]></entry>
    <entry key="UDDSigResolverErr4"><![CDATA[Conflicting signal configuration. <sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">Output port {0,number,integer}</sldiag> of {1} is configured as '{'StorageClass=''{2}'''}'. However, this port is also configured by the Simulink signal object ''{3}'' which has '{'StorageClass=''{4}'''}']]></entry>
    <entry key="UDDSigResolverErr5"><![CDATA[Conflicting signal configuration. <sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">Output port {0,number,integer}</sldiag> of {1} is configured as '{'StorageClass=''{2}'',TypeQualifier=''{3}'''}'. However, this port is also configured by the Simulink signal object ''{4}'' which has '{'StorageClass=''{5}'',TypeQualifier=''{6}'''}']]></entry>
    <entry key="UDDSigResolverErr6">Conflicting signal configuration. The state of ''{0}'' is configured as '{'StorageClass=''{1}'''}'. However, this state is also configured by the Simulink signal object ''{2}'' which has '{'StorageClass=''{3}'''}'</entry>
    <entry key="UDDSigResolverErr7">Conflicting signal configuration. The state of ''{0}'' is configured as '{'StorageClass=''{1}'',TypeQualifier=''{2}'''}'. However, this state is also configured by the Simulink signal object ''{3}'' which has '{'StorageClass=''{4}'',TypeQualifier=''{5}'''}'</entry>
    <entry key="UDDSigResolverErr8"><![CDATA[Cannot resolve Simulink signal object ''{0}'' for <sldiag objui="outport" objparam="{1,number,integer}" objname="{2}">output port {1,number,integer}</sldiag> of {2}.]]></entry>
    <entry key="UDDSigResolverErr9">Cannot resolve Simulink signal object ''{0}'' for state of ''{1}''.</entry>
    <entry key="UDDSigResolverErr11">Cannot resolve Simulink signal object ''{0}'' for outport block {1}.</entry>
    <entry key="UDDSigResolverErr12">Cannot resolve Simulink signal object ''{0}'' for output port {1,number,integer} of {2}.</entry>
    <entry key="UDDSigResolverSigLogSetErr"><![CDATA[The Simulink signal object ''{0}'' for <sldiag objui="outport" objparam="{1,number,integer}" objname="{2}">output port {1,number,integer}</sldiag> of {2} has logging information set. The LoggingInfo field of the Signal object is only supported for Data Store Memory and must not be set for signals.]]></entry>
    <entry key="UDDSigResolverStateLogSetErr">The Simulink signal object ''{0}'' for {1} has logging information set. The LoggingInfo field of the Signal object is only supported for Data Store Memory and must not be set for states.</entry>
    <entry key="UDDSigResolverWarn1"><![CDATA[Implicit resolution of signal object ''{0}'' for <sldiag objui="outport" objparam="{1,number,integer}" objname="{2}">output port {1,number,integer}</sldiag> of ''{2}'']]></entry>
    <entry key="UDDSigResolverWarn2">Implicit resolution of signal object ''{0}'' for state of ''{1}''</entry>
    <entry key="UDDSigResolverWarn3">Implicit resolution of signal object ''{0}'' for output data of Stateflow chart ''{1}''</entry>
    <entry key="UDDSigResolverWarn4">Implicit resolution of signal object ''{0}'' for output data of MATLAB Function block ''{1}''</entry>
    <entry key="UDDSigResolverStateObjectChangedRunTime">The Simulink signal object ''{0}'' for state of block ''{1}'' was changed during simulation</entry>
    <entry key="UDDSigResolverPortObjectChangedRunTime"><![CDATA[The Simulink signal object ''{0}'' for <sldiag objui="outport" objparam="{1,number,integer}" objname="{2}">output port {1,number,integer}</sldiag> of block ''{2}'' was changed during simulation]]></entry>
    <entry key="SignalResModeExpImpNotAllowedWithDictionary"><![CDATA[Signal resolution mode ''{1}'' is not allowed for models using a data dictionary.
        <actions exclusiveFixIts="yes">
            <action type="fixit">
                <cmd>set_param(''{0}'',''SignalResolutionControl'',''UseLocalSettings'');</cmd>
                <txt>Change the signal resolution mode to ''{2}''</txt>
            </action>
        </actions>]]>
    </entry>
    <entry key="UDDataType_Invalid_Dimensions_AllowInherit">Invalid ''Dimensions'' property specified. This property must be a double vector consisting of either positive elements such that their cumulative product is less than or equal to {0,number,integer}, or elements with value of -1 (to specify that the dimension''s value is to be inherited). Further, when specifying greater than 2 dimensions, the trailing dimension cannot have a value of 1</entry>
    <entry key="UDDataType_Invalid_Dimensions_DisallowInherit">Invalid ''Dimensions'' property specified. This property must be a double vector consisting of positive elements such that their cumulative product is less than or equal to {0,number,integer}. Further, when specifying greater than 2 dimensions, the trailing dimension cannot have a value of 1</entry>
    <entry key="UDDataType_Inf_Dimensions">''Dimensions'' property set to ''Inf''. There cannot be an initial value.</entry>
    <entry key="UDDataType_Set_Initial_Value">''Initial Value'' property already set. ''Dimensions'' cannot be set to ''Inf''.</entry>
    <entry key="UDDataType_Invalid_SlArray_Numeric">The specified value must be a numeric or logical array</entry>
    <entry key="UDDataType_Invalid_String" note="stringDatatypeUpdate">The specified value must be a character vector</entry>
    <entry key="CannotSetPropertyInCustomDataLoadobj">Cannot set property ''{0}''</entry>
    <entry key="CustomDataClassPropsDoNotMatch">Object properties do not match</entry>
    <entry key="VarInBaseWSNotSrcWS">Variable ''{0}'' exists in base workspace or data dictionary but not in the model''s source workspace.</entry>
    <entry key="Variant_Invalid_Workspace">Variant object ''{0}'' used by block ''{1}'' can exist only in the base workspace or data dictionary</entry>
    <entry key="WksCannotAssign">Cannot assign variable ''{0}'' into workspace because it is not a valid variable name</entry>
    <entry key="WksCannotWriteInto">Cannot write into workspace because it is write protected</entry>
    <entry key="WksCantReloadDataForMDLFileSource">Cannot reload workspace if the data source is ''Model File''</entry>
    <entry key="WksCantReloadFromNonExistingFileSource">Cannot reload workspace from non-existing data source file ''{0}''</entry>
    <entry key="WksCantReloadFromMATLABFileWithInvalidName">Cannot reload workspace from MATLAB file with invalid name ''{0}''</entry>
    <entry key="WksCantSaveDataToSrcForNonMATMATLABFileSource">Cannot save data to source unless the data source is ''MAT-File'' or ''MATLAB File''</entry>
    <entry key="WksCantSaveEmptyMDLWSForMATLABFileSource">Data source ''MATLAB File'' is changed to ''MAT-File'' and an empty model workspace is saved to file ''{0}''</entry>
    <entry key="WksFileNameExtMismatchDataSourceType">File extension of ''{0}'' mismatches data source type ''{1}''</entry>
    <entry key="WksFileNameExtMissing">Filename must include extension.</entry>
    <entry key="WksSettingDataSource">''{0}'' is no longer a valid value for the model workspace's DataSource property. Update your MATLAB code to use the valid value (''{1}'') instead.</entry>
    <entry key="WksSetDataSourceTypeToTempEnumWarning">''{0}'' is not a valid value as model workspace data source and has been changed to ''{1}''. The model MUST be saved to preserve this change.</entry>
    <entry key="WksSetDataSourceTypeToTempEnumError">''{0}'' is invalid value for Property ''{1}''.</entry>
    <entry key="WksConflictingVariableSources">Variable ''{0}'' resolves to two different sources: ''{1}'' and ''{2}''</entry>
    <entry key="WksCouldNotCreate">Could not create new workspace for block diagram ''{0}''.</entry>
    <entry key="WksDataStructWithInvalidVarName1" note="stringDatatypeUpdate">Cannot create variable {0,number,integer} in model workspace of block diagram ''{1}'' because the specified name is not a character vector</entry>
    <entry key="WksDataStructWithInvalidVarName2">Cannot create variable ''{0}'' in model workspace of block diagram ''{1}'' because this is not a valid variable name</entry>
    <entry key="WksWorkspaceLabel">workspace</entry>
    <entry key="WksDictionaryLabel">data dictionary</entry>
    <entry key="WksBaseWorkspaceName" translate="false">base</entry>
    <entry key="WksErrorInLateBinding">Error evaluating properties of {0} object ''{1}'' in {2} ''{3}''</entry>
    <entry key="WksWarnInLateBinding">Possible error evaluating properties of object ''{0}'' in {1} ''{2}''</entry>
    <entry key="WksErrorInLateBindingWithBlock">Error evaluating properties of {0} object ''{1}'' in {2} ''{3}'' (used by block ''{4}'')</entry>
    <entry key="WksInvalidDataStruct">Cannot initialize workspace of block diagram ''{0}'' because the format of the data is invalid. If this error occurs during model loading, it is because the MDL file has been corrupted</entry>
    <entry key="WksLoadingDataWithValueSetToNULL">Setting value of variable ''{0}'' in model workspace of block diagram ''{1}'' to [] because the value of this variable was not defined. If this error occurs during model loading, it is probably because the variable was an object whose class cannot be found.</entry>
    <entry key="WksFolderNotExist">Cannot save to file ''{0}''. Please verify the folder name.</entry>
    <entry key="WksFileNameNotSpec">Cannot save to file because an empty file name has been specified</entry>
    <entry key="GroupedParamOnlySourcedFromMdlFile"> Unable to save to source ''{0}'' because the model workspace has model arguments with non-Auto storage class. Set the data source of the model workspace to "Model File".</entry>
    <entry key="DisableDataSrc_ModelArgumentsWithStorageClass">For model ''{0}'' that defines model arguments with non-Auto storage class, the data source of the model workspace must be set to "Model File".</entry>    
    <entry key="WksMATFileNotLoadedMxError">Workspace for block diagram ''{0}'' was not loaded because an error occurred while loading the MAT-file ''{1}''.</entry>
    <entry key="WksMATLABFileNotLoadedMxError">Workspace for block diagram ''{0}'' was not loaded because an error occurred while loading the MATLAB-file ''{1}''.</entry>
    <entry key="WksMATFileNotSavedMxError">Workspace for block diagram ''{0}'' was not saved because an error occurred while saving the MAT-file ''{1}''.</entry>
    <entry key="WksMATLABFileNotSavedMxError">Workspace for block diagram ''{0}'' was not saved because an error occurred while saving the MATLAB-file ''{1}''.</entry>
    <entry key="MdlDictMATFileNotSavedMxError">Model dictionary for block diagram ''{0}'' was not saved because an error occurred while saving the MAT-file ''{1}''.</entry>
    <entry key="MdlDictMATLABFileNotSavedMxError">Model dictionary for block diagram ''{0}'' was not saved because an error occurred while saving the MATLAB-file ''{1}''.</entry>
    <entry key="NdIndexingWithColumnMajorNotAllowed"><![CDATA[''{0}'' is set to preserve dimensions for block diagram ''{1}'' whose array layout is Column-major. Set the array layout to Row-major.
    <actions exclusiveFixIts="yes">
    <action type="fixit">
    <cmd>set_param(''{1}'',''ArrayLayout'',''Row-major'');</cmd>
    <txt>Change the array layout to ''Row-major''</txt>
    </action>
    </actions>]]>
    </entry>
    <entry key="NdIndexingMismatchCustomCodeExpectsUnflattenedType">Importing custom code structs containing matrix fields as buses requires preserving element dimensions. Change PreserveElementDimensions property of ''{0}'' to preserve dimensions for block diagram ''{1}''.</entry>
    <entry key="NdIndexingMismatchCustomCodeExpectsFlattenedType">Importing structs containing scalar or vector fields as buses do not require preserving element dimensions. Change PreserveElementDimensions property of ''{0}'' to disable preserving dimensions for block diagram ''{1}''.</entry>
    <entry key="NdIndexingBusUnsupportedStorageClass">''{0}'' is a bus object that is configured to preserve dimensions. The storage class specified for the parameter is not supported for this type of parameter.</entry>
    <entry key="NdIndexingBusUnsupportedStorageClassForBlock">''{0}'' block at ''{1}'' is of type bus object that is configured to preserve dimensions. The storage class specified for the block ''{0}'' is not supported for this bus object.</entry>
    <entry key="NdIndexingBusUnsupportedPlatformServiceForReceiverBlock">''{0}'' block at ''{1}'' is of type bus object that preserves dimensions and ''{0}'' is mapped to a receiver service interface. Code generator does not support receiver service interfaces for bus objects configured to preserve dimensions.</entry>
    <entry key="NdIndexingBusUnsupportedPlatformServiceForSenderBlock">''{0}'' block at ''{1}'' is of type bus object that preserves dimensions and ''{0}'' is mapped to a sender service interface. Code generator does not support sender service interfaces for bus objects configured to preserve dimensions.</entry>
    <entry key="NdIndexingNotAllowedForReferencedModel">Root inport or outport ''{0}'' is set to preserve dimensions for block diagram ''{1}'', which is a referenced model. Set root inport and outport to preserve dimensions only at the root model reference hierarchy.</entry>
    <entry key="NdIndexingNotAllowedForReusableSfChart">''{0}'' (or its parent) is configured as a reusable subsystem and the configuration parameter 'Preserve Stateflow local data array dimensions' is enabled for block diagram ''{1}''. To fix this issue do one of the following: 1) Set the 'Function packaging' of ''{0}'' (or its parent) to 'Nonreusable function' or 'Inline'; 2) Set the configuration parameter ''Code interface packaging'' of ''{1}'' to ''Nonreusable function''; 3) Clear the configuration parameter 'Preserve Stateflow local data array dimensions' for ''{1}''.</entry>
    <entry key="NdIndexingForRootIoNotAllowedForReusableModel">
      <![CDATA[
               Model ''{0}'' preserves dimensions for root Inport/Outport blocks and the configuration parameter ''Code interface packaging'' is set to ''Reusable function''. This is not supported. Either do not preserve dimensions for root Inport/Outport blocks or do the following:
               <actions exclusiveFixIts="yes">
               <action type="suggestion">
               <cmd>configset.internal.open(''{0}'',''CodeInterfacePackaging'')</cmd>
               <txt>Set ''Code interface packaging'' to ''Nonreusable function'' (might impact referenced or referencing models).</txt>
               </action>
               </actions>
      ]]></entry>
    <entry key="NdIndexingNotSupportedForModelParameters">Code generation does not support object ''{0}'' as a model parameter value for Model block ''{1}'' because this object is a BreakPoint or LookupTable that preserves dimensions in the generated code. Specify a value other than ''{0}'' or 1) Use a Simulink.Parameter object instead; 2) Clear the ''Preserve array dimensions'' check box for object ''{0}''; 3) Clear the ''Preserve array dimensions'' check box for Model parameters/External parameters in Code Mappings > Data Defaults > Property Inspector; 4) Clear the ''Preserve array dimensions'' check box for its custom storage class in Embedded Coder Dictionary.</entry>
    <entry key="NdIndexingNotSupportedForAUTOSARModelParameters">Code generation does not support object ''{0}'' as a model parameter value for Model block ''{1}''. This object is a BreakPoint or LookupTable that preserves dimensions in the generated code because the target is AUTOSAR and ''Array layout'' is set to ''Row-major''. Specify a model parameter value other than ''{0}'' or use a Simulink.Parameter object instead</entry>
    <entry key="NdIndexingPreserveStateflowLocalDataDimensionsConfigSetParameterNotSupported"><![CDATA[The model configuration parameter ''PreserveStateflowLocalDataDimensions'' is not supported. To proceed, clear the ''PreserveStateflowLocalDataDimensions'' by using set_param() function. To preserve dimensions for Stateflow local data, use the Code Mappings > Data Defaults > Internal data section or the data object interface. Refer to <a href="matlab:helpview([docroot '/ecoder/ug/preserve-dimensions-of-multidimensional-arrays-in-generated-code.html'])">"Preserve Dimensions of Multidimensional Arrays in Generated Code"</a> for more details.]]></entry>
    <entry key="UnsupportedCodeGenTarget_ConfigureButton">Code generation target configuration might have changed. To refresh, reopen property dialog box or reselect data element in Model Explorer.</entry>
    <entry key="UnsupportedCodeMappingTarget">Unable to preserve code generation information in {0}. Code mappings are supported only for models configured to generate C code for an ERT- or GRT-based system target file.</entry>
    <entry key="DiscardCodegenInfoInAutosar">Unable to preserve code generation information in {0} when using an AUTOSAR system target file. Use code mappings or external data objects to configure code generation information.</entry>
    <entry key="DiscardCodegenInfoInFcnPlatform">Data object ''{1}'' was moved to model workspace of ''{0}'' and that model is configured for function platform deployment. Unable to preserve code generation configuration for data object. To configure model workspace data objects for code generation, in coder app, use Code Mappings editor or use the code mappings programming interface.</entry>
	<entry key="DiscardCodegenInfoInLibrary">Unable to preserve code generation information in embedded signal objects in the library ''{0}''. To configure a library block for code generation, use the code mappings for the model that uses the library block.</entry>
	<entry key="DiscardCodegenInfoInBlock"><![CDATA[Unable to preserve code generation information in signal object that is embedded in the block ''{0}'' in code mappings.]]></entry>
	<entry key="DiscardCodegenInfoInPort"><![CDATA[Unable to preserve code generation information in signal object that is embedded in the output port {1,number,integer} of block ''{0}'' in code mappings.]]></entry>
	<entry key="DiscardCodegenInfoInMWSDataObject"><![CDATA[Unable to preserve code generation information in model workspace object ''{0}'' in code mappings.]]></entry>
    <entry key="DiscardCodegenInfoWhileExportingMWSDataObject">Export of code generation information in model workspace object ''{0}'' not supported. Storage class is converted to 'Auto'.</entry>
	<entry key="UnsupportedCodeMappingAttributeForBlock"><![CDATA[Unable to preserve property ''{0}'' on block ''{2}'' with value ''{1}'' in code mappings. Use an external data object to preserve code generation properties.]]></entry>
	<entry key="UnsupportedCodeMappingAttributeForPort"><![CDATA[Unable to preserve property ''{0}'' on output port {3,number,integer} of block ''{2}'' with value ''{1}'' in code mappings. Use an external data object to preserve code generation properties.]]></entry>
	<entry key="UnsupportedCodeMappingAttributeForDataObject"><![CDATA[Unable to preserve property ''{0}'' with value ''{1}'' for model workspace object ''{2}'' in code mappings. Use an external data object to preserve code generation properties.]]></entry>
    <entry key="ExportingUnnamedState"><![CDATA[Unable to export code generation information from Code Mappings for block ''{0}'' because 'StateName' is empty.]]></entry>
    <entry key="ExportingUnnamedSignal"><![CDATA[Unable to export code generation information from Code Mappings for output port {1,number,integer} of block ''{0}'' because 'SignalName' is empty.]]></entry>
    <entry key="ExportingResolvedSigObjBlock"><![CDATA[Unable to export code generation information from Code Mappings for block ''{0}'' because it is resolved to a signal object.]]></entry>
    <entry key="ExportingResolvedSigObjPort"><![CDATA[Unable to export code generation information from Code Mappings for output port {1,number,integer} of block ''{0}'' because it is resolved to a signal object.]]></entry>
    <entry key="CodeMappingCreationError">Failed to create code mappings. Code generation information will not be preserved.</entry>
    <entry key="WksMCodeNotLoadedMxError">Workspace for block diagram ''{0}'' was not loaded because an error occurred while loading MATLAB code: ''{1}''</entry>
    <entry key="WksMismatchingVariableResolved">Variable ''{0}'' is resolved in workspace (''{1}'') for block ''{2}'' but it is not a ''{3}'' object</entry>
    <entry key="WksOnlyAccessValueSourceSettingsForModelFileDataSource">Cannot get/set value source settings for workspace unless data source is ''Model File''</entry>
    <entry key="WksOnlyAccessFileNameForMATMATLABFileSource">Cannot get/set FileName property for workspace unless data source is ''MAT-File'' or ''MATLAB File''</entry>
    <entry key="WksOnlyAccessMCodeForMCodeSource">Cannot get/set MATLABCode property for workspace unless data source is ''MATLAB Code''</entry>
    <entry key="VariableUsageInvalidStructure" note="stringDatatypeUpdate">Invalid syntax. Structure input to Simulink.VariableUsage must have a ''Name'' text field</entry>
    <entry key="VariableUsageSyntax">Invalid syntax. See help for valid Simulink.VariableUsage inputs</entry>
    <entry key="WskFoundArrayOfObjects">Variable ''{0}'' is resolved in workspace (''{1}'') but it is an array of objects</entry>
    <entry key="WksUndefinedVariable">Undefined variable ''{0}'' in workspace (''{1}'').</entry>
    <entry key="WksInvalidVariableName">Invalid variable name ''{0}''.</entry>
    <entry key="WksRenameVariableExists">Variable ''{0}'' already exists in workspace (''{1}'').</entry>
    <entry key="InvalidGetSetVariablePartTarget">''{0}'' is not a valid variable part specification.</entry>
    <entry key="VariableNameAsArgumentForGetSetVariablePart">The specification ''{0}'' must be a valid variable part. It cannot be a variable name.</entry>
    <entry key="erenceParameterCheck_MustBeNonEmptyChar" note="stringDatatypeUpdate">The value of the field ''{0}'' must be a character vector of non-zero length</entry>
    <entry key="erenceParameterCheck_MustBeOnOrOff">The value of the check for parameter ''{0}'' is ''{1}''. It must be either ''on'' or ''off''</entry>
    <entry key="referenceParameterCheck_MustBeStructVector">The value of the parameter ModelReferenceParameterCheck must be a structure vector with 2 fields, ''parameter'' and ''check''</entry>
    <entry key="ValueInConsistentBusDesignMinDesignMaxMsg">Value of ''{0}'' is inconsistent with its bus data type ''{1}''</entry>
    <entry key="QuantizedValueInConsistentBusDesignMinDesignMaxMsg">Quantized Value of ''{0}'' is inconsistent with its bus data type ''{1}''</entry>
    <entry key="ConflictingAlignments">Data object ''{0}'' has conflicting alignment values: its data type ''{1}'' specifies an alignment value of {2,number,integer} but its CoderInfo specifies an alignment value of {3,number,integer}.</entry>
    <entry key="WorkspaceVarObjectDeprecated">Simulink.WorkspaceVar is no longer supported. Use Simulink.VariableUsage instead.</entry>
    <entry key="DataTypeListPrefFieldMustBeBoolean">Field ''{0}'' must be a boolean value.</entry>
    <entry key="DataTypeListPrefGroupLabel">The following setting is used to control display of Simulink Built-in types and template expressions on data type list</entry>
    <entry key="DataTypeListPrefBuiltinTypeAndTemplate">Show Simulink built-in types and templates</entry>
    <entry key="DataTypeListPrefBuiltinTypeAndTemplateToolTip">Show Simulink built-in types and templates on data type pull-down widget</entry>
    <entry key="DataTypeListPrefDouble" translate="false">double</entry>
    <entry key="DataTypeListPrefDoubleToolTip">Show Simulink built-in type ''double'' on data type pull-down widget</entry>
    <entry key="DataTypeListPrefSingle" translate="false">single</entry>
    <entry key="DataTypeListPrefSingleToolTip">Show Simulink built-in type ''single'' on data type pull-down widget</entry>
    <entry key="DataTypeListPrefInteger">integer types (e.g., ''int8'' and ''uint16'')</entry>
    <entry key="DataTypeListPrefIntegerToolTip">Show Simulink built-in integer types on data type pull-down widget</entry>
    <entry key="DataTypeListPrefBoolean" translate="false">boolean</entry>
    <entry key="DataTypeListPrefBooleanToolTip">Show Simulink built-in type ''boolean'' on data type pull-down widget</entry>
    <entry key="DataTypeListPrefTemplate">templates (e.g., ''fixdt(1,16,2^0,0)'' and ''Bus: &lt;object name&gt;'')</entry>
    <entry key="DataTypeListPrefTemplateToolTip">'Show fixed-point and other template expressions on data type pull-down widget</entry>
    <entry key="CalToMainCompuNumDenNonEmpty">{0} has already been set. It cannot be changed.</entry>
    <entry key="CompuDenEvalToZero">{0} denominator is zero.</entry>
    <entry key="PropertyEvalToZero">Expected {0} to be nonzero.</entry>
    <entry key="PoleWithinMinMax">Range Min ({0}) and Max ({1}) contains pole ({2}).</entry>
    <entry key="CalToMainCompuMethodConst">CalToMain compute method cannot be a constant.</entry>
    <entry key="ValuesInconsistent">Unexpected precision loss occurred. Verify that CalToMain compute method and CalibrationValue are specified correctly.</entry>
    <entry key="InvalidObjectForObjectHasMethod">First argument must be an object.</entry>
    <entry key="InvalidMethodNameForObjectHasMethod">Second argument must be a valid method name.</entry>
    <entry key="InvalidNumArgsForObjectHasMethod">Argument {0} must be a positive integer number or zero.</entry>
    <entry key="ChangeCSCPackageNameMenuItem">--- Change Package ---</entry>
    <entry key="CSCInstanceIdentifierMustBeValid">{0} returned from getIdentifiersForInstance must be a valid identifier and can contain '.', '->', '[]' as delimiters.</entry>
    <entry key="DestroyedObject">Object ''{0}'' has been deleted and cannot be used.</entry>
    <entry key="UserData_Invalid_Value">Value of TargetUserData property must be an object of a subclass of Simulink.UserData.</entry>
    <entry key="ParameterCoderGroupUndefinedForBlockParam">The parameter ''{0}'' of ''{1}'' refers to the storage class ''{2}'', which is not registered as a storage class in the model ''{3}''.</entry>
    <entry key="ParameterCoderGroupUndefinedForModelArg">The model ''{0}'' specifies the storage class ''{1}'' for the model argument ''{2}'', but that storage class is not registered in the model.</entry>
    <entry key="ParameterCoderGroupPreserveNDForModelArgNotArray">The model ''{0}'' specifies the storage class ''{1}'' for the model argument ''{2}'', but that storage class preserves dimensions and the model argument is not a Parameter object.</entry>
    <entry key="ParameterCoderGroupUndefinedForPublicParam">The model ''{0}'' specifies the storage class ''{1}'' for the model workspace parameter ''{2}'', but that storage class is not registered in the model.</entry>
    <entry key="ParameterCoderGroupUndefinedForMdlrefBlock">The block ''{0}'' refers to the storage class ''{1}'', which is not registered in the model ''{2}''.</entry>
    <entry key="CoderGroupUndefined">The model ''{0}'' refers to the storage class ''{1}'', which is not registered in the model.</entry>
    <entry key="InvalidANSICIdentifierForStructName">The value ''{0}'' of property ''{1}'' is not a valid ANSI C identifier. Valid identifiers start with an alphabetic or ''_'' character, followed by alphanumeric or ''_'' characters.</entry>
    <entry key="NotEnoughSpaceForTokenExpansion"><![CDATA[The value ''{0}'' of  the maximum identifier length parameter is not sufficient to create unique identifiers. Please increase the maximum identifier length to at least ''{1}''.
    <actions exclusiveFixIts="yes">
        <action type="suggestion">
            <cmd>configset.internal.open(bdroot, ''MaxIdLength'')</cmd>
            <txt>Increase the ''Maximum identifier length'' of the model</txt>
        </action>
    </actions>
    ]]></entry>
    <entry key="TokenExpandsToInvalidCIdentifier">The value ''{0}'' expanded from this token, ''{1}'', in a naming rule string is not a valid ANSI C identifier. Modify the naming rule string to get a valid identifier.</entry>
    <entry key="TokenExpandsTooLong"><![CDATA[The value ''{0}'' expanded from this token, ''{1}'', in a naming rule string is longer than the given maximum identifier length {2, number, integer}.
        <actions exclusiveFixIts="yes">
            <action type="suggestion">
                <cmd>configset.internal.open(bdroot, ''MaxIdLength'')</cmd>
                <txt>Increase the ''Maximum identifier length'' of the model</txt>
            </action>
            <action type="suggestion">
                <txt>Modify the naming rule string or the data entry name to reduce the expanded value</txt>
            </action>
        </actions>
        ]]></entry>
    <entry key="ExtendedDecoratorDidNotChangeTokenValue">The token value ''{0}'' does not change after applying the decorator ''{1}''. Use the MATLAB command ''{2}'' to verify the effect of the decorator. Note, dynamic regular expressions involving calling MATLAB functions are not supported in the decorator.</entry>
    <entry key="InvalidMATLABNameForStructName">Value ''{0}'' of property ''{1}'' must be a valid MATLAB variable name.</entry>
    <entry key="CoderGroupRootIOWithFPC">For model ''{0}'', you cannot set default storage class for data element category ''{1}'' to ''{2}'' because the prototype for the model entry-point step function is customized.</entry>
    <entry key="RootIOGroupOnSignalWithFPC">For model ''{0}'', you cannot set storage class for signal line connected to root Inport or Outport block to ''{1}''  because the prototype for the model entry-point step function is customized.</entry>
    <entry key="CoderGroupRootIOWithReuseableInterface">For model ''{0}'', you cannot set default storage class for data element category ''{1}'' to ''{2}''. Code generator produces reusable code for model and does not pass root I/O as part of model data structure.</entry>
    <entry key="RootIOGroupOnSignalWithReuseableInterface">For model ''{0}'', you cannot set storage class for signal line connected to root Inport or Outport block to ''{1}''. Code generator produces reusable code for model and does not pass root I/O as part of model data structure.</entry>
    <entry key="AsStructureNoneWithPWork">For model ''{0}'', you cannot specify the storage class ''{1}'' as the default storage class for internal data because ''{2}'' creates a PWork structure in the generated code and the storage class has the ''Storage Type'' property set to ''Unstructured''.</entry>
    <entry key="CoderGroupHeaderFileWithCompactFilePackaging">The storage class ''{0}'' cannot be used by model ''{1}'' because the storage class property ''Data Scope'' is set to ''Exported'', the property ''HeaderFile'' is set to something other than ''$N.h'', and the model is using compact file packaging format.</entry>
    <entry key="CoderGroupDefinitionFileWithCompactFilePackaging">The storage class ''{0}'' cannot be used by model ''{1}'' because the storage class property ''Data Scope'' is set to ''Exported'', the property ''DefinitionFile'' is set to something other than ''$N.c'', and the model is using compact file packaging format.</entry>
    <entry key="LegacyCoderGroupWithTopModelReusable">
      <![CDATA[
      The default mapping for ''{0}'' is set to a single-instance storage class, thus the generated code is not reusable. You can change the default mapping or do one of the following.
      <actions exclusiveFixIts="yes">
        <action type="suggestion">
          <cmd>configset.internal.open(''{1}'',''CodeInterfacePackaging'')</cmd>
          <txt>Set ''Code interface packaging'' to ''Nonreusable function'' (might impact referenced or referencing models)</txt>
        </action>
        <action type="suggestion">
          <cmd>configset.internal.open(''{1}'',''MultiInstanceErrorCode'')</cmd>
          <txt>Set ''Multi-instance code error diagnostic'' to ''None'' or ''Warning'.</txt>
        </action>
      </actions>
      ]]>
    </entry>
    <entry key="AccessMethodWithTopModelReusable">
      <![CDATA[
      The default mapping for ''{0}'' is set to a storage class whose ''Data Access'' property is set to Function or Macro, thus the generated code is not reusable. You can change the default mapping or do one of the following.
      <actions exclusiveFixIts="yes">
        <action type="suggestion">
          <cmd>configset.internal.open(''{1}'',''CodeInterfacePackaging'')</cmd>
          <txt>Set ''Code interface packaging'' to ''Nonreusable function'' (might impact referenced or referencing models)</txt>
        </action>
        <action type="suggestion">
          <cmd>configset.internal.open(''{1}'',''MultiInstanceErrorCode'')</cmd>
          <txt>Set ''Multi-instance code error diagnostic'' to ''None'' or ''Warning'.</txt>
        </action>
      </actions>
      ]]>
    </entry>
    <entry key="StorageClassLimitHeaderWithExportedDataScope">The storage class ''{0}'' cannot be used by model ''{1}'' because the ''Data Scope'' is ''Exported'', and therefore its ''HeaderFile'' needs to contain ''$N'' or ''$R''.</entry>
    <entry key="StorageClassDefaultHeaderWithImportedDataScope">The storage class ''{0}'' cannot be used by model ''{1}'' because the property ''Data Scope'' is set to ''Imported'', and the property ''HeaderFile'' is set to ''$N.h''.</entry>
    <entry key="LegacyCoderGroupWithModelRefChild">''Configuration Parameters > Model Referencing > Total number of instances allowed per top model'' is set to ''Multiple'' for model ''{0}''. The default mapping for ''{1}'' is set to a single-instance storage class. This is not supported in a model configured to be referenced multiple times. Set the configuration parameter ''Total number of instances allowed per top model'' to ''One'' or change the default mapping.</entry>
    <entry key="xml2DictionarySystemInvalidInput">Simulink.xml2DictionarySystem must have one XML string input.</entry>
    <entry key="InvalidPropertyForMATLABVariable">Property cannot be set for MATLAB variable ''{0}''.</entry>
    <entry key="NonFiniteInstanceSpecificParam">The parameter ''{0}'' of ''{1}'' cannot specify a non finite value since its value source is the top model.</entry>
    <entry key="NonFiniteInstanceSpecificMdlrefBlockParamCPP">A parameter of ''{0}'' which is propagated from a referenced model that sets the DataVisibility of its default mapping for model parameter arguments to ''private'' cannot have a non finite value.</entry>
    <entry key="NonFiniteInstanceSpecificMdlrefBlockParam">A parameter of ''{0}'' which sets its storage class ''Model default'' in the referenced model cannot have a non finite value.</entry>
    <entry key="NonFiniteInstanceSpecificForModelArg">For model ''{0}'', you cannot set model parameter argument ''{1}'' to a nonfinite value because the storage class for the argument is set to ''Model default''.</entry>
    <entry key="NonFiniteInstanceSpecificForModelArgCPP">For model ''{0}'', you cannot set model parameter argument ''{1}'' to a nonfinite value unless you set the DataVisibility of the default mapping for model parameter arguments to ''IndividualArguments''.</entry>
    <entry key="SLCIInstanceSpecificForModelArg">For model ''{0}'', you must set storage class for model parameter argument ''{1}'' to ''Auto'' when parameter ''AdvancedOptControl'' is set to ''-SLCI''.</entry>
    <entry key="SLCIInstanceSpecificForModelArgCPP">For model ''{0}'', you must set the DataVisibility of the default mapping for model parameter arguments to ''IndividualArguments'' when parameter ''AdvancedOptControl'' is set to ''-SLCI''.</entry>
    <entry key="NonFiniteWSParam">The workspace parameter ''{0}'' has a non finite value and uses a storage class defined in the Embedded Coder Dictionary. Storage classes defined in the Embedded Coder Dictionary do not support non finite values.</entry>
    <entry key="AccessMethodForParamAllTunable">For model ''{0}'', you cannot set default storage class for model parameters to ''{1}'' because model configuration parameter 'Default parameter behavior' is set to 'Tunable' and storage class property 'Data Access' is set to 'Function' or 'Macro'.</entry>    
    <entry key="GroupInternalDataAndDefaultMap"><![CDATA[The model ''{0}'' is set to <sldiag objui="configset" objparam="GroupInternalDataByFunction">generate separate internal data per entry-point function</sldiag>, but will not occur because internal data is set to map to a storage class.]]></entry>
    <entry key="NeedAccessToBaseWSOrDD">The model must have access to the base workspace, a data dictionary, or both.</entry>
    <entry key="NeedAccessToBaseWS">The model must have access to the base workspace.</entry>
    <entry key="BWSAccessForSSRefBDNotPermitted">Direct access to the base workspace is not allowed for subsystem type block diagrams when a data dictionary or an external source is attached.</entry>
    <entry key="SlResolveNotResolved">Cannot resolve: {0}.</entry>
    <entry key="NonScalarSimulinkDataObject">Creating an array of Simulink data or data type objects in the model workspace is not allowed.</entry>
    <entry key="ExternalDataNode" translate="false">External Data</entry>
    <entry key="LibraryDataNode" translate="false">Library Data</entry>
    <entry key="LinkedLibrariesNode" translate="false">From Libraries</entry>
    <entry key="LinkedLibrariesText">This section shows variables that are available to this model from the data sources of linked libraries.</entry>
    <entry key="ContextRefresh" translate="false">Refresh</entry>
    <entry key="ContextRefresh_Label">Refresh</entry>
    <entry key="ContextProperties" translate="false">Properties</entry>
    <entry key="ContextProperties_Label">Properties...</entry>
    <entry key="DisallowTypeQualifierOnState">Ignoring TypeQualifier ''{0}'' on block ''{1}''. Please use an appropriate custom storage class.</entry>
    <entry key="DisallowTypeQualifierOnPort">Ignoring TypeQualifier ''{0}'' on output port of block ''{1}''. Please use an appropriate custom storage class.</entry>
    <entry key="DisallowTypeQualifierOnDataObject">Ignoring TypeQualifier. Please use an appropriate custom storage class.</entry>
    <entry key="ActiveTargetDisallowsStorageClassForBlock">Trying to access storage class for block ''{0}''. Storage class is not a valid property for the current code generation target. </entry>
    <entry key="ActiveTargetDisallowsStorageClassForPort">Trying to access storage class of outport port from block ''{0}''. Storage class is not a valid property for the current code generation target. </entry>
    <entry key="ConvertCustomDefaultToExportedGlobal_state">The signal object provided for block ''{0}'' has ''Default'' storage class. This will be converted to ''ExportedGlobal'' because ''Default'' is not supported for this block parameter.</entry>
    <entry key="RemoveStorageClassOfMWSSimulinkSignalObject">Storage class of Simulink.Signal objects in the model workspace must be set to ''Auto''. Simulink.Signal object ''{0}'''s storage class was updated to ''Auto'' from ''{1}''. Change the storage class of a modeling element that resolves to a model workspace Simulink.Signal object in the Code Mappings Editor.</entry>
    <entry key="ConvertCustomDefaultToExportedGlobal_port">The signal object provided for port ''{0}'' has ''Default'' storage class. This will be converted to ''ExportedGlobal'' because ''Default'' is not supported for this port parameter.</entry>
    <entry key="ConvertCustomDefaultToExportedGlobal_MWSParam">The model workspace object ''{0}'' has ''Default'' storage class. This will be converted to ''ExportedGlobal'' because ''Default'' is not supported for model workspace objects.</entry>
    <entry key="CannotResolveVariablesInSimInputGlobalWS">Variables specified on the SimulationInput object with global scope will not be resolved by ''{0}''.</entry>
    <entry key="CannotResolveSimInputVarInEvalinGlobalScope">evalinGlobalScope is unable to resolve the value of variable ''{0}'' on the Simulink.SimulationInput object.</entry>
    <entry key="CannotAssignSimInputVarInAssigninGlobalScope">assigninGlobalScope is unable to assign a value to and update the variable ''{0}'' on the Simulink.SimulationInput object.</entry>
    <entry key="AdapterErrorMsg">Adapter: ''{0}'' reports ''{1}''</entry>
    <entry key="CopyWillNotPreserveCodeProps">Copying model-owned data objects does not copy CoderInfo properties.</entry>
    <entry key="ActiveTargetDisallowsStorageClass">Storage class is not a valid property for the current code generation target.</entry>
    <entry key="InvalidUseOfObjectWithContext">The object ''{0}'' in the base workspace is a reference to an object owned by a model. This is an illegal usage of this object. Only the original object can be used.</entry>
    <entry key="InvalidCloneOfMWSObject">Cloning a model workspace object into a different workspace is not allowed.</entry>
    <entry key="NameToUniqueIDFail">Could not find a unique item with the given name ''{0}''.</entry>
    <entry key="CoderDataConflict"><![CDATA[Conflicting code generation configuration. The code generation specification on <sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">output port {0,number,integer}</sldiag> of {1} conflicts with the code generation specification on <sldiag objui="outport" objparam="{2,number,integer}" objname="{3}">output port {2,number,integer}</sldiag> of {3}. Use same code generation specification, e.g., resolved signal object, individual mapping value, etc., on <sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">output port {0,number,integer}</sldiag> of {1} and <sldiag objui="outport" objparam="{2,number,integer}" objname="{3}">output port {2,number,integer}</sldiag> of {3}.]]></entry>
    <entry key="SignalWithSCDrivesMultileVirtualOutportsInCodegen"><![CDATA[Unsupported storage class usage pattern for code generation. The <sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">output port {0,number,integer}</sldiag> of {1} has a non-Auto storage class and is driving more than one root level Outport block (e.g., {2} and {3}). Consider adding a Signal Conversion block between the <sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">output port {0,number,integer}</sldiag> of {1} and those Outport blocks.]]></entry>
    <entry key="SignalWithSCAndICDrivesMultileOutportsInSimulation"><![CDATA[Unsupported storage class usage pattern for simulation. The <sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">output port {0,number,integer}</sldiag> of {1} has a non-Auto storage class and an initial value while driving more than one root level Outport block (e.g., {2} and {3}). Consider adding a Signal Conversion block between the <sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">output port {0,number,integer}</sldiag> of {1} and those Outport blocks or avoid using the initial value specified on the <sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">output port {0,number,integer}</sldiag> of {1}.]]></entry>
    <entry key="SignalWithNewSCDrivingAVirtualOutportModelRefCodegen"><![CDATA[Unsupported storage class usage for model reference code generation target build. The <sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">output port {0,number,integer}</sldiag> of {1} has a Coder Dictionary custom storage class and drives the root level Outport blocks {2}. Consider adding a Signal Conversion block between the <sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">output port {0,number,integer}</sldiag> of {1} and the Outport blocks {2}.]]></entry>
    <entry key="InvalidExternalDataSource">Unable to find valid external data source to create ''{0}''.</entry>
    <entry key="SynthesizedParamWithFunctionDataAccess">Simulink.LookupTable ''{0}'' is specified to use 'Allow multiple instances of this type to have different table and breakpoint sizes', and the modeling element category under Data Defaults in Code Mappings editor is set to a storage class with function data access. This is not supported.</entry>
    <entry key="SimulinkLUTWithAllowDifferentlySizedArraysND">Simulink.LookupTable ''{0}'' is specified to use 'Allow multiple instances of this type to have different table and breakpoint sizes', and is specified with a storage class which preserves dimensions. This is not supported.</entry>
    <entry key="SimulinkLUTWithStorageClassAndCustomHeader">Storage class with custom header file not supported for Simulink.LookupTable ''{0}'' with 'Allow multiple instances of this type to have different table and breakpoint sizes' selected.</entry>
    <entry key="SDPServiceUUIDNotFound">Component interface code mappings for model ''{0}'' contains unresolved mappings. Fix unresolved mappings before generating code.</entry>
    <entry key="SDPNotAutoSignalObjectNotAllowed">Model ''{0}'' is configured to generate component code with a service interface and the storage class that is set for ''{2}'' was not specified in the model code mappings. Change the storage class of signal object ''{1}'' to Auto or clear property 'Signal name must resolve to Simulink signal object' and configure the interface for ''{2}'' by using the Code Mappings editor or code mappings programming interface.</entry>
    <entry key="MWSInaccessibleOverriddenValue" translate="false">?</entry>
    <entry key="ExternalDataSourceWithinModelHyperLinkHref" note="{0} means an external source; {1} means full path of data source; {2} means a variable name; {3} means a model name">
        <![CDATA[
        <a href="matlab:slprivate('exploreListNode',''{1}'','externalsources',''{2}'','' '',''{3}'');">{0}</a>
        ]]>
    </entry>
    <entry key="InvalidEvalinCommand">Unable to evaluate ''{0}''.</entry>
    <entry key="EvalExpressionInExternalSourceNotSupported">Unable to evaluate an expression in the global scope of model ''{0}'' when an external data source is attached. Use 'Simulink.data.getVariableFromGlobal' instead.</entry>
    <!-- Begin Simulink.data.DataAccessor object related error messages-->
    <entry key="UpdateVariableUnwritable">Unable to update variable ''{0}'' in section ''{1}'' of file ''{2}''. Write back not supported. </entry>
    <entry key="DeleteVariableUnwritable">Unable to delete variable ''{0}'' in section ''{1}'' of file ''{2}''. Write back not supported.</entry>
    <entry key="CreateVariableUnwritable">Unable to create variable ''{0}'' in section ''{1}'' of file ''{2}''. Write back not supported.</entry>
    <entry key="UIFail">Unable to display variable ''{0}'' from ''{1}''. </entry>
    <entry key="PersistentSourceCaptureAndRestoreFail">Unable to capture and restore variable ''{0}'' in section ''{1}'' of ''{2}''.</entry>
    <entry key="BWSCaptureAndRestoreFail">Unable to capture and restore variable ''{0}'' in base workspace.</entry>
    <entry key="MWSCaptureAndRestoreFail">Unable to capture and restore variable ''{0}'' in model workspace of model ''{1}''.</entry>
    <entry key="SaveAndRevertUnwritable">Unable to save or revert changes in file ''{0}''. Write back not supported.</entry>
    <entry key="VarNotFound">Unable to find entry ''{0}'' in file ''{1}''.</entry>
    <entry key="VarNotFoundSimplified">Unable to find variable ''{0}''.</entry>
    <entry key = "VarAlreadyExists">Variable ''{0}'' already exists in ''{1}''.</entry>
    <entry key="ConsistentDuplicatesInExternalSourcesAndBWS">Symbol ''{0}'' is defined in {1} and {2}. Using definition in {1}.</entry>
    <entry key="MultipleInconsistentValues">''{0}'' has multiple inconsistent definitions. Run reportInconsistency method for details.</entry>
    <entry key="MultipleInconsistentValuesSimplified">''{0}'' has multiple inconsistent definitions.</entry>
    <entry key="CannotMakeConnection">Unable to connect to source: ''{0}'' section: ''{1}''.</entry>
    <entry key="NoValidAdapterToReadSource"> No adapter found for external source file ''{0}''.</entry>      
    <entry key="UpdateVariableFail">Unable to update variable ''{0}'' in section ''{1}'' of file ''{2}''.</entry>
    <entry key="UpdateVariableFailBWS">Unable to update variable ''{0}'' in base workspace.</entry>
    <entry key="UpdateVariableFailMWS">Unable to update variable ''{0}'' in model workspace of model ''{1}''.</entry>
    <entry key="DeleteVariableFail">Unable to delete variable ''{0}'' in section ''{1}'' of file ''{2}''.</entry>
    <entry key="DeleteVariableFailBWS">Unable to delete variable ''{0}'' in base workspace.</entry>
    <entry key="DeleteVariableFailMWS">Unable to delete variable ''{0}'' in the model workspace of model ''{1}''.</entry>
    <entry key="CreateVariableFail">Unable to create variable ''{0}'' in section ''{1}'' of file ''{2}''.</entry>
    <entry key="SaveAndRevertFail">Unable to save or revert changes in section ''{0}'' of file ''{1}''.</entry>
    <entry key="DataSourcesSaveFail">Unable to save data sources.</entry>
    <entry key="DataSourcesRevertFail">Unable to revert data sources.</entry>
    <entry key="CreateExternalVariableMultipleSrcsOrSectionsAttachedError">Unable to create variable ''{0}'' in global scope of model ''{1}'' because multiple external sources or sections are attached to the model.</entry>
    <entry key="DuplicateSymbolSourceReference" note="{0} means a file path for an external source">{0}.</entry>
    <entry key="DuplicateSymbolSourceAndSectionReference" note="{0} means section name; {1} means a file path for an external source">''{0}'' section in {1}.</entry>
    <entry key="DataConnectionCyclicRef">Cyclical reference detected for {0}</entry>
    <entry key="UnableToCloseHasUnsavedChanges">Unable to close data source ''{0}'' because it has unsaved changes.</entry>
    <entry key="UnableToCloseMultiConnections">Unable to close data source ''{0}'' because the section ''{1}'' has been used by other {2} connections.</entry>
    <entry key="UnsupportedFileTypeToShow">Unable to show data source ''{0}''.</entry>
    <entry key="UnsupportedOPInDA">Operation not supported for 'Simulink.data.DataAccessor' object initialized with {0}.</entry>
    <entry key="ReplaceDataSourceUnsupported">Unable to complete data source replacement in model ''{0}''. Model must have access to the base workspace or a data dictionary.</entry>
    <entry key="UCLIFailRename">Unable to rename ''{0}''.</entry>
    <entry key="UCLIFailSave">Unable to save ''{0}''.</entry>
    <entry key="UCLIFailRevert">Unable to discard changes in ''{0}''.</entry>
    <!-- End Simulink.data.DataAccessor object related error messages-->
    <!-- Begin Simulink.data.DataSourceWorkspace object related error messages-->
    <entry key="DSWSPInvalidFileType">''{0}'' must be a MATLAB script.</entry>
    <entry key="DSWSPIncompatibleNameValueArguments">Input name-value arguments must be the same size.</entry>
    <entry key="DSWSPInvalidVarNames">Invalid variable names: {0}.</entry>
    <entry key="DSWSPVarMustBeCell">Input must be a cell array.</entry>
    <entry key="ExportedHeaderNameShouldBeValidCIdentifier">The storage class ''{0}'' has an exported scope and its header file naming rule ''{1}'' will not expand into a valid C identifier. Only valid C identifiers are supported as exported header file names. Remove spaces or other invalid characters for C identifiers from the naming rule.</entry>
    <entry key="TunableParameterUsedInTheValueOfNonTunableParameter">The value of non-tunable parameter ''{0}'' of block ''{1}'' must not refer to a tunable parameter. The value provided refers to the tunable parameter ''{2}'' from block ''{3}''.</entry>
    <!-- End Simulink.data.DataSourceWorkspace object related error messages-->
    <!-- Begin Simulink.data.DataConnection* object related error messages-->
    <entry key="InvalidDataConnectionSave">'DataConnection' objects saved to a MAT-file are invalid when loaded from the MAT-file.</entry>
    <entry key="InvalidDataConnection">Invalid 'DataConnection' object.</entry> 
    <entry key="EnumIncompatibleOption">Variable type must be 'Enum' when specifying ''{0}'' argument.</entry>
    <entry key="BusIncompatibleOption">Variable type must be 'Bus' or 'Simulink.Bus' when specifying 'BusElementNames' argument.</entry>
    <entry key="EnumIncompatibleOptionPairs">Argument 'EnumValues' must be specified with argument 'Enumerals'.</entry>
    <entry key="ArgumentsMustBeEqualSize">Argument ''{0}'' and ''{1}'' must be of equal size.</entry>
    <entry key="EmptyStrInArgumentValue">Empty string not supported for argument ''{0}''.</entry>
    <entry key="FileNotFound">Unable to find file ''{0}''.</entry>
    <entry key="CannotCreateEnumInDataSource"> Enumeration cannot be created in ''{0}''.</entry>
    <entry key="IncompatibleDotAccessAndTabComplete">Dot access must be enabled for tab complete to include variable names.</entry>
    <entry key="InvalidOptionForTabComplete">Invalid option for tab completion. Valid options are ''Methods'', ''Vars'' and ''All''. </entry> 
    <entry key="InvalidVariableType">Invalid variable type ''{0}''. Variable type must be a fully qualified class name (for example, ''embedded.fi''), or one of the following: Parameter, Signal, NumericType, AliasType, Bus, ConnectionBus, ValueType, Variant, VariantControl, VariantVariable, LookupTable, Breakpoint.</entry>
    <entry key="UnsupportedBWSOP">Operation not supported for the base workspace.</entry>
    <entry key="UnsupportedDirtyRefs">Method not supported when one or more referenced sources have unsaved changes.</entry>
    <entry key="UnsupportedFileTypeDC">Unable to connect to data source ''{0}''. Data source must be the name of a model .slx file, the name of a data dictionary, the name of MATLAB file, or ''base workspace''.</entry>
    <entry key="WrongMethod">Use method ''{0}'' instead of ''{1}''.</entry>
    <!-- End Simulink.data.DataConnection* object related error messages-->
    <!-- Begin Simulink.data.internal.DataSourceCleanup object related error messages-->
    <entry key="DSCCleanupUnsavedChangesWithoutDiscard">To close data sources with unsaved changes, set 'DiscardUnsaved' to ''true''.</entry>
    <!-- End Simulink.data.internal.DataSourceCleanup object related error messages-->
  </message>
</rsccat>

<!-- LocalWords:  maxlevels maxnumel textwidth dslice lookuptable Prelookup BP nonvirtual nonfinite
     LocalWords:  dropdown PWork Nonreusable MLX Dimenions Enumerals SignalRTWINfo
-->
