<?xml version="1.0" encoding="UTF-8" ?>
<!-- Copyright 2017-2024 The MathWorks, Inc. -->
<rsccat version="1.0" locale="en_US" product="Simulink"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../../schema/msgcat.xsd">
  <message>
    <entry key="IncompatibleDatabaseVersions">Incompatible library versions found. Clear existing library code folder and regenerate code.</entry>
    <entry key="NonUniqueFunctionName">Function Name ''{0}'' is non-unique in library code database. Consider using tokens like $N and $R in Subsystem function name.</entry>
    <entry key="NonUniqueChecksum">Function Interfaces ''{0}'' and ''{1}'' are functionally identical. Function interfaces must be functionally different.</entry>
    <entry key="NoMatchingContext">There is no function interface in the library subsystem ''{0}'' that matches the model subsystem ''{1}''.</entry>
    <entry key="NoCachedFolder">The subsystem ''{0}'' cannot reuse library subsystem code because the library code folder ''{1}'' or its shared code database does not exist. Verify that the library SLX file and library code are in the same folder the client model is generating code in.</entry>
    <entry key="SharedUtilsCSMismatch">The subsystem ''{0}'' cannot reuse library code because the shared utility checksum of the model and the library do not match.</entry>
    <entry key="LibraryNameInvalidOnPlatform">The library name ''{0}'' is not supported for code generation.</entry>
    <entry key="LibraryCodeOutofDate">The subsystem ''{0}'' cannot reuse library code because the library and its code are out of date.</entry>
    <entry key="ModelUsingModelSpecificFolderStructure">The subsystem ''{0}'' cannot reuse library code because it is using 'ModelSpecific' code generation folder structure. Choose 'TargetEnvironmentSubfolder' code generation folder structure to enable the subsystem to reuse library code.</entry>
    <entry key="ModelLibraryCodeFolderMismatch">The subsystem ''{0}'' cannot reuse library code because its parent model is generating code in ''{1}'' while the library code is in ''{2}''. Generate code for the model and library in the same directory to enable reuse. </entry>
    <entry key="NestedContext">''{0}'' is an instance of block ''{1}'' that has attached function interfaces. This is currently not supported.</entry>
    <entry key="RefToOutsideLibrary">''{0}'' is linked to an external library. This is currently not supported for library builds.</entry>
    <entry key="SingleSSSupported">Multiple instances of subsystem ''{0}'' found in function interface. This is currently not supported.</entry>
    <entry key="NotUsingLibraryCode">The function interface selection ''{1}'' is invalid because block ''{0}'' does not use pregenerated library code.</entry>
    <entry key="IncorrectCtxSelected">The selected function interface ''{0}'' for block ''{1}'' does not match the model's context.</entry>
    <entry key="ContextSharedCodePlacementAuto">Function interface ''{0}'' has configuration parameter 'Shared Code Placement' set to 'Auto'. Hence, this function interface will not generate any subsystem code. Set the value of the parameter to 'Shared location' to allow this function interface to generate subsystem code.</entry>
    <entry key="ContextSTFNonERT">Function interface ''{0}'' does not specify an ERT or ERT-derived system target file. Specify an ERT or ERT-derived system target file to build this function interface in the library.</entry>
    <entry key="NoSubsystemCodeGenerated">No new subsystem code was generated for library ''{0}''.</entry>
    <entry key="InterfaceMismatchUpdateDiagram">The interface of subsystem ''{0}'' does not match any function interface in the referenced library subsystem.</entry>
    <entry key="CodeGenContextBuildFailed">The code generator failed to build function interface ''{0}'' for subsystem ''{1}''.\n To enable code generation for the library, fix the error. You can try exporting the function interface as an independent model, fix the error and import the function interface back into the library. \n</entry>
    <entry key="ModelSSNotRLS">Subsystem ''{0}'' cannot generate code that can be reused across models. As a result, it cannot reuse library code. </entry>
    <entry key="AUTOSARFunctionInterface">The "SystemTargetFile" property of function interface ''{0}'' is set to "autosar.tlc". Library code generation does not support AUTOSAR code generation.</entry>
    <entry key="ReuseBlocker"> The generated code for subsystem ''{0}'' is not reusable across models, so subsystem ''{0}'' is unable to generate library code. \n \nThe generated code for subsystem ''{0}'' is not reusable across models because of the following block and reason : \n Block  : ''{1}'' \n Reason : ''{2}'' \n</entry>
    <entry key="InterfaceGenSharedConstantsOff">Function Interface ''{0}'' has configuration set parameter  'GenerateSharedConstants' set to 'off' preventing generation of any reusable subsystem code. To generate code for this function interface, set 'GenerateSharedConstants' to 'on'.</entry>
    <entry key="InterfaceDataTypeReplacement">Function Interface ''{0}'' uses data type replacement to replace built-in type names with user types that prevent generation of any reusable subsystem code. To generate code for this function interface, set the 'EnableUserReplacementTypes' configuration set parameter to 'off'.</entry>
    <entry key="InterfaceCRLDataAlignment">Function Interface ''{0}'' uses a Code Replacement Library that supports data alignment preventing generation of any reusable subsystem code. To generate code for this function interface, set configuration set parameter 'CodeReplacementLibrary' to 'None' or to a library that does not support data alignment.</entry>
    <entry key="InterfaceMemorySection">Function Interface ''{0}'' uses a memory section that is not 'Default' or 'Const' preventing generation of any reusable subsystem code. To generate code for this function interface, set the memory section to either 'Default' or 'Const'.</entry>
    <entry key="InvalidFunctionInterfaceName">There is no function interface with name ''{0}'' attached to reusable library subsystem block ''{1}''.</entry>
    <entry key="FunctionInterfaceCannotGenSharedFcn">Function interface ''{0}'' cannot generate a reusable subsystem function for subsystem ''{1}''. Check the function packaging requirements in the documentation by entering this command at the MATLAB command prompt: web(fullfile(docroot, 'ecoder/ug/library-based-code-generation-for-subsystems-shared-across-models.html')).</entry>
    <entry key="ModelCannotReuseLibraryCodeSFcnOutofDate">The subsystem ''{0}'' cannot reuse library code because the library code is out of date. An S-function inside the library subsystem has changed on disk leading to the library code becoming stale. Regenerate library code in order to allow the subsystem to reuse library code.</entry>
    <entry key="InconsistentConfigSets">The code generated for the library will not be compiled because the model configuration parameter settings for all function interfaces in ''{0}'' are not identical. The parameter setting of ''{1}'' differs across configuration sets.  To enable compilation of the library code, match the value of this parameter.</entry>
    <entry key="InstrumentedBuildUsingLibraryCode">Cannot perform SIL or PIL simulation when code coverage is enabled and configured to use BullseyeCoverage or LDRA Testbed because the model is reusing library code. Either turn off coverage, switch to Simulink Coverage or remove function interfaces on associated library blocks.</entry>
    <entry key="EmptySubsystemForLibraryBuild">Cannot generate library code because subsystem ''{0}'' is not generating any code.</entry>
    <entry key="TokensInRTWFcnName">Subsystem ''{0}'' is linked to a library block that specifies a token ''{1}'' in its function name. Using this token in the function name is supported only if the model subsystem reuses library code. This subsystem does not reuse library code.</entry>
    <entry key="TokensInRTWFcnNameChecksum">Subsystem ''{0}'' specifies token '$C' in its function name. Using this token in the function name is supported only if the subsystem's code is model independent and can be placed in _sharedutils. This subsystem cannot generate code in _sharedutils due to the following block and reason : \n Block  : ''{1}'' \n Reason : ''{2}'' \n</entry>
    
    <entry key="InvalidFunctionFilePackaging">The 'Function name options' or 'File name options' value for Subsystem ''{0}'' is invalid for library code generation. 'Function name options' must be 'Auto' or 'User specified (with '$R' token in provided name)' and 'File name options' must be 'Auto', 'Use function name', or 'User specified' (same provided name as 'Function name options').</entry>
    <entry key="MSVCBuild">The function interface ''{0}'' uses the template makefile RTW.MSVCBuild. This makefile is not supported for library code generation.</entry>
  </message>
</rsccat>

<!-- LocalWords:  pregenerated Func
-->
