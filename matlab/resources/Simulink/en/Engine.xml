<?xml version="1.0" encoding="UTF-8" ?>
<!-- Copyright 2009-2025 The MathWorks, Inc. -->
<rsccat version="1.0" locale="en_US" product="Simulink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../../../../matlab/resources/schema/msgcat.xsd">
  <message>
    <entry key="ModelCompileDuringSymbolLookup">A Block parameter cannot refer to its owning block diagram ''{0}''.</entry>
    <entry key="AVT_LicenseError">Unable to check out the Simulink Design Verifier license which is needed to translate design.</entry>
    <!-- AbsoluteTimeNotSupported -->
    <entry key="AbsoluteTimeNotSupported"><![CDATA[Block ''{0}'' uses absolute time, which is not supported with the current configuration. Consider selecting <sldiag objui="configset" objparam="SupportAbsoluteTime">Support absolute time</sldiag>]]></entry>
    <entry key="InvCallToSubstituteCS">Invalid call to substituteTmpConfigSetForBuild and restoreOrigConfigSetForBuild.  These must be called with two arguments and no return values.</entry>
    <entry key="FallBackToNonVm" translate="false" note="TranslateFalseBatch;"></entry>
    <entry key="InvalidModelRefTargetTypeForVmExecution">The model reference target type ''{0}'' is invalid for JIT accelerated simulations</entry>
    <entry key="AbortingCompilation">Aborting model compilation</entry>
    <entry key="AbortCompilation">Model compilation aborted.</entry>
    <entry key="AccErrorStatus">Error reported when running the Accelerated simulation ''{0}'' :\n{1}</entry>
    <entry key="AccModelNameTooLong">Unable to accelerate model ''{0}'' because the resulting accelerator MEX-file name would be too long. Please rename your model and reduce name length to less than {1,number,integer} characters</entry>
    <entry key="AccelCodeGenError">Problem creating Accelerator MEX file for model ''{0}''.</entry>
    <entry key="AccelCodeGenErrorTellAboutVerbose">Problem creating Accelerator MEX file for model ''{0}''.\n To see the build output, use set_param(''{1}'',''AccelVerboseBuild'',''on'')</entry>
    <entry key="AccelJITErrorTellAboutVerbose">Error while JIT Accelerating model ''{0}''.\n To see more details, use set_param(''{1}'',''AccelVerboseBuild'',''on'')</entry>
    <entry key="AccelJITError">Error while JIT accelerating the model ''{0}''.</entry>
    <entry key="AccelInvCalltoRunBlock">Invalid call to sleAccRunBlock</entry>
    <entry key="AccelMexLoadError">Error while loading Accelerator MEX file ''{0}''.</entry>
    <entry key="AccelNameConflict">The model ''{0}'' must be renamed since the Accelerator uses this name for the accelerated mex file</entry>
    <entry key="AccelNotSupportedAlgLoopsWithCertainBlocks"><![CDATA[Accelerator mode is not supported for model ''{0}'' because an algebraic loop in the model contains block ''{1}''.
	<actions exclusiveFixIts="yes">
    <action type="fixit">
	<cmd>set_param(''{0}'','SimulationMode','Normal')</cmd>
    <txt>Simulate model ''{0}'' using normal mode instead.</txt>
    </action>
    </actions>]]>
	</entry>
    <entry key="AccelNotSupportedWithSFcnAPI">Accelerator mode is not supported for simulations run using the name of the model as a function.</entry>
    <entry key="AccelUnableToAcqFoundFcnHdl">While simulating the model ''{0}'' in accelerator mode, Simulink found a match for the MATLAB function ''{1}'' but was unable to run it. Typically this happens because the MATLAB function found differs only in case from the function desired. Rename the current model, or remove the alternate MATLAB function from the MATLAB path by deleting it, renaming it, or removing the folder containing it from the MATLAB path. </entry>
    <entry key="AccelUnableToAcqFcnHdl">Unable to acquire handle to MATLAB function ''{0}''</entry>
    <entry key="AccelBuildNoModelName">Unable to obtain current model name.</entry>
    <entry key="ActionECPotentialPreStartOutputDiff"><![CDATA[The output of ''{0}'' may produce different results than the previous Simulink releases if ''{1}'' is not activated at t = 0. Block ''{2}'' may produce non-zero outputs for zero inputs and has been inherited by the ''{3}'' execution context. In previous releases, the ''{4}'' was not inherited by the execution context and may have produced a non-zero output prior to start of the conditional subsystem. To prevent the inheritance of the context, explicitly set the sample time of ''{5}'' to the rate at which you want the signal recomputed. To turn off this warning message, deselect <sldiag objui="configset" objparam="CheckExecutionContextPreStartOutputMsg">Check preactivation output of execution context</sldiag>.]]></entry>
    <entry key="ActionECPotentialPreStartOutputDiffConsistentOutportInit"><![CDATA[The output of ''{0}'' may produce different results than the previous Simulink releases if ''{1}'' is not activated at t = 0. Block ''{2}'' may produce non-zero outputs for zero inputs and has been inherited by the ''{3}'' execution context. In previous releases, the ''{4}'' was not inherited by the execution context and may have produced a non-zero output prior to start of the conditional subsystem. To prevent the inheritance of the context, explicitly set the sample time of ''{5}'' to the rate at which you want the signal recomputed. To turn off this warning message, deselect <sldiag objui="configset" objparam="CheckExecutionContextPreStartOutputMsg">Check preactivation output of execution context</sldiag>.]]></entry>
    <entry key="AddDimsDependRuleCompStageMismatch">Simulink detected an incorrect usage of ''ssAddOutputDimsDependencyRule'' for the S-function in ''{0}''. This SimStruct function can only be used in the ''mdlSetWorkWidths'' method.</entry>
    <entry context="warning" note="0 is a block path, 1 is a number, 2 is the name of a feature used internally for feature control" key="AlgLoopFrozenModesNoConvergence">Switching to mode iteration algorithm to try to solve the algebraic loop that contains block ''{0}'' because the default algorithm did not converge at time {1}. To report an error instead of trying the mode iteration algorithm, which can take a long time to converge on a solution, use this command: feature(''{2}'',0).</entry>
    <entry context="warning" note="0 is a block path, 1 is a number, 2 is the name of a feature used internally for feature control" key="AlgLoopFrozenModesOscilationDetected">Switching to mode iteration algorithm to try to solve the algebraic loop that contains block ''{0}'' because the default algorithm did not converge at time {1} due to mode oscillation. To report an error instead of trying the mode iteration algorithm, which can take a long time to converge on a solution, use this command: feature(''{2}'',0).</entry>
    <entry context="warning" note="0 is a block path, 1 is a number, 2 is the name of a feature used internally for feature control" key="AlgLoopFrozenModesTooManyModeChanges">Switching to mode iteration algorithm to try to solve the algebraic loop that contains block ''{1}'' because the default algorithm did not converge at time {2} because the mode changed more than {0,number,integer} times. To report an error instead of trying the mode iteration algorithm, which can take a long time to converge on a solution, use this command: feature(''{3}'',0).</entry>
    <entry context="error" note="0 is a block path" key="AlgLoopNoSupportOfVarSizeSig">Block ''{0}'' is part of an algebraic loop and has variable-size inputs or outputs, which are not supported in algebraic loops.</entry>
    <entry context="error" note="0 is a block path, 1 is the number of blocks in the algebraic loop, 2 is the number of algebraic variables in the loop" key="AlgLoopMemoryAllocationError">Unable to allocate memory to solve the algebraic loop that contains ''{0}'' as one of {2,number,integer} total blocks in the loop. Eliminate the algebraic loop or reduce the number of algebraic variables ({1,number,integer}) in the loop.</entry>
	<!-- Several versions of the same message exist to provide different actions based on context of the callsite -->
    <entry key="AlgLoopTroubleInFixedStep">
      <![CDATA[Unable to solve the algebraic loop that contains block ''{0}'' at time {1} using the {2}-based algorithm because the model is ill-defined, the system equations do not have a solution, or numerical issues prevented the algebraic loop solver from converging. If the error persists after trying the suggested actions, the model is likely ill-defined.
      <actions exclusiveFixIts="yes">
      <action type="fixit">
      <cmd>set_param(''{3}'','AlgebraicLoopSolver',''{4}'');</cmd>
      <txt>Change the algebraic loop solver algorithm to ''auto''.</txt>
      </action>
      <action type="suggestion">
      <cmd>load_system(''{3}'');configset.highlightParameter(''{3}'','FixedStep');</cmd>
      <txt>Reduce the ''Fixed-step size (fundamental sample time)'' parameter value.</txt>
      </action>
      </actions>]]></entry>
    <entry key="AlgLoopTroubleInVariableStep">
      <![CDATA[Unable to solve the algebraic loop that contains block ''{0}'' at time {1} using the {2}-based algorithm because the model is ill-defined, the system equations do not have a solution, or numerical issues prevented the algebraic loop solver from converging. If the error persists after trying the suggested actions, the model is likely ill-defined.
      <actions exclusiveFixIts="yes">
      <action  type="fixit">
      <cmd>set_param(''{3}'','AlgebraicLoopSolver',''{4}'');</cmd>
      <txt>Change the algebraic loop solver algorithm to ''auto''.</txt>
      </action>
      <action type="suggestion">
      <cmd>load_system(''{3}'');configset.highlightParameter(''{3}'','RelTol');</cmd>
      <txt>Reduce the ''Relative tolerance'' parameter value  so that the solver takes smaller time steps.</txt>
      </action>
      </actions>
      ]]>
    </entry>
    <entry key="SetAlgebraicLoopSolverToAutoForBlock">set_param(''{0}'', 'Solver', 'auto');</entry> 
    <entry key="AlgLoopTroubleInFixedStepWithAlgebraicConstraintBlock">
      <![CDATA[Unable to solve the algebraic loop that contains block ''{0}'' at time {1} using the {2}-based algorithm because the model is ill-defined, the system equations do not have a solution, or numerical issues prevented the algebraic loop solver from converging. If the error persists after trying the suggested actions, the model is likely ill-defined.
      <actions exclusiveFixIts="yes">
      <action type="fixit">
      <cmd>{3}</cmd>
      <txt>Change the algebraic loop solver algorithm to "auto".</txt>
      </action>
      <action type="suggestion">
      <cmd>load_system(''{4}'');configset.highlightParameter(''{4}'','FixedStep');</cmd>
      <txt>Reduce the ''Fixed-step size (fundamental sample time)'' parameter value.</txt>
	  </action>
      </actions>]]></entry>
    <entry key="AlgLoopTroubleInVariableStepWithAlgebraicConstraintBlock">
      <![CDATA[Unable to solve the algebraic loop that contains block ''{0}'' at time {1} using the {2}-based algorithm because the model is ill-defined, the system equations do not have a solution, or numerical issues prevented the algebraic loop solver from converging. If the error persists after trying the suggested actions, the model is likely ill-defined.
      <actions exclusiveFixIts="yes">
      <action  type="fixit">
      <cmd>{3}</cmd>
      <txt>Change the algebraic loop solver algorithm to ''auto''.</txt>
      </action>
      <action type="suggestion">
      <cmd>load_system(''{4}'');configset.highlightParameter(''{4}'','RelTol');</cmd>
      <txt>Reduce the ''Relative tolerance'' parameter value so that the solver takes smaller time steps.</txt>
      </action>
      </actions>]]>
    </entry>
    <entry key="AlgLoopTroubleInFixedStepNoSolverSwitch">
      <![CDATA[Unable to solve the algebraic loop that contains block ''{0}'' at time {1} using the {2}-based algorithm because the model is ill-defined, the system equations do not have a solution, or numerical issues prevented the algebraic loop solver from converging. If the error persists after trying the suggested actions, the model is likely ill-defined.
      <actions exclusiveFixIts="yes">
      <action type="suggestion">
      <cmd>load_system(''{2}'');configset.highlightParameter(''{2}'','FixedStep');</cmd>
      <txt>Reduce the ''Fixed-step size (fundamental sample time)'' parameter value.</txt>
      </action>
      </actions>
      ]]>
    </entry>
    <entry key="AlgLoopTroubleInVariableStepNoSolverSwitch">
      <![CDATA[Unable to solve the algebraic loop that contains block ''{0}'' at time {1} using the {2}-based algorithm because the model is ill-defined, the system equations do not have a solution, or numerical issues prevented the algebraic loop solver from converging. If the error persists after trying the suggested actions, the model is likely ill-defined.
      <actions exclusiveFixIts="yes">
      <action type="suggestion">
      <cmd>load_system(''{2}'');configset.highlightParameter(''{2}'','RelTol');</cmd>
      <txt>Reduce the ''Relative tolerance'' parameter value so that the solver takes smaller time steps.</txt>
      </action>
      </actions>]]>
    </entry>
    <entry key="AlgLoopTroubleInFixedStepWithAlgebraicConstraintBlockNoSolverSwitch">
      <![CDATA[Unable to solve the algebraic loop that contains block ''{0}'' at time {1} using the {2}-based algorithm because the model is ill-defined, the system equations do not have a solution, or numerical issues prevented the algebraic loop solver from converging. If the error persists after trying the suggested actions, the model is likely ill-defined.
      <actions exclusiveFixIts="yes">
      <action type="suggestion">
      <cmd>load_system(''{2}'');configset.highlightParameter(''{2}'','FixedStep');</cmd>
      <txt>Reduce the ''Fixed-step size (fundamental sample time)'' parameter value.</txt>
      </action>
      </actions>]]>
    </entry>
    <entry key="AlgLoopTroubleInVariableStepWithAlgebraicConstraintBlockNoSolverSwitch">
      <![CDATA[Unable to solve the algebraic loop that contains block ''{0}'' at time {1} using the {2}-based algorithm because the model is ill-defined, the system equations do not have a solution, or numerical issues prevented the algebraic loop solver from converging. If the error persists after trying the suggested actions, the model is likely ill-defined.
      <actions exclusiveFixIts="yes">
      <action type="suggestion">
      <cmd>load_system(''{2}'');configset.highlightParameter(''{2}'','RelTol');</cmd>
      <txt>Reduce the ''Relative tolerance'' parameter value so that the solver takes smaller time steps.</txt>
      </action>
      </actions>]]>
    </entry>


    <!-- AlgLoopsDisabled -->
    <entry key="AlgLoopsDisabled"><![CDATA[Unable to solve algebraic loop in model ''{0}'' because the "Algebraic loop" parameter value is ''error'' which disables the algebraic loop solver.
	<actions exclusiveFixIts="yes">
    <action type="suggestion">
	<cmd>load_system(''{0}'');configset.highlightParameter(''{0}'','AlgebraicLoopMsg');</cmd>
    <txt>Change the ''Algebraic loop'' parameter value to ''warning'' or ''none''.</txt>
    </action>
	</actions>]]>
	</entry>
    <entry key="AlgStateNotFinite">Inf or NaN value computed at time {1} for an algebraic variable in the algebraic loop that contains block "{0}", which might indicate that a system equation has a singularity. Try reducing the size of the steps the solver takes by reducing the "Relative tolerance" or "Fixed-step size (fundamental sample time)" parameter value, or adjust the initial guesses for the algebraic loop variable values.</entry>
    <entry key="AlgebraicLoopsNotSupportedInRTWGEN"><![CDATA[Code generation is not supported for models that contain algebraic loops.
	<actions exclusiveFixIts="yes">
    <action type="suggestion">
    <txt>Use the Simulink.BlockDiagram.getAlgebraicLoops function to highlight algebraic loops in the model.</txt>
    </action>
	<action type="suggestion">
    <txt>Clear the "Combine output and update methods for code generation and simulation" parameter.</txt>
    </action>
    </actions>]]>
    </entry>
    <entry key="AmbiguousCRLRegisteredType">Multiple definitions of type ''{0}'' found in code replacement library. Provide a single definition for the type.</entry>
    <entry key="AmbiguousCRLAndSimDataDictType">Type ''{0}'' is ambiguous. Different type with the same name already exists in Simulink or data dictionary. Provide a single definition for the type.</entry>
    <entry key="ApplicationInvalid">Invalid application specified</entry>
    <entry key="ArtificialAlgLoopModelRefNote">This algebraic loop might be resolved by selecting the ''Minimize artificial algebraic loop occurrences'' model parameter for each referenced model in the algebraic loop.</entry>
    <entry key="ArtificialAlgLoopNote">This algebraic loop might be resolved by selecting the ''Minimize artificial algebraic loop occurrences'' block parameter for one or more atomic or enabled subsystems in the loop or by selecting the "Minimize algebraic loop occurrences" model configuration parameter for referenced models in the loop.
	</entry>
    <entry key="ArtificialAlgLoopSubsystemNote">This algebraic loop might be resolved by selecting the "Minimize artificial algebraic loop occurrences" parameter for one or more of the atomic or enabled subsystems in the loop.</entry>
    <entry key="AsyncGlobalDSM">In model ''{0}'', one or more of the blocks that reference a global data store defined by the global Simulink.Signal object ''{1}'' are configured to execute in an asynchronous task. Global data stores accessed within a model must all execute in a single, periodic task.</entry>
    <entry key="AsyncRateTransBlkHasInvalidDst">The Rate Transition block ''{0}'' cannot connect to destination ''{1}''. The destination block is in an asynchronously executed function-call block whose priority is different from the Rate Transition block output sample time priority.</entry>
    <entry key="AsyncRateTransBlkHasInvalidMultipleDsts">The Rate Transition block ''{0}'' has multiple destinations. All destinations must have the same sample time or must be in asynchronously executed function-call blocks with the same priority.</entry>
    <entry key="AsyncRateTransBlkHasInvalidMultipleSrcs">The Rate Transition block ''{0}'' has multiple asynchronously executed sources having different sample times. All asynchronously executed sources must have the same sample time.</entry>
    <entry key="BackPropDoesNotSupportND"><![CDATA[Cannot propagate {0,number,integer}-D signal from <sldiag objui="inport" objparam="{1,number,integer}" objname="{2}">input port {1,number,integer}</sldiag> of block ''{2}'' to <sldiag objui="outport" objparam="{3,number,integer}" objname="{4}">output port {3,number,integer}</sldiag> of block ''{4}''. The latter block does not accept signals with greater than 2 dimensions (either entirely or in its current configuration).]]></entry>
    <entry key="BackPropDoesNotSupportNDCompSig"><![CDATA[Cannot propagate composite signal containing at least one {0,number,integer}-D signal from <sldiag objui="inport" objparam="{1,number,integer}" objname="{2}">input port {1,number,integer}</sldiag> of block ''{2}'' to <sldiag objui="outport" objparam="{3,number,integer}" objname="{4}">output port {3,number,integer}</sldiag> of block ''{4}''. The latter block does not accept signals with greater than 2 dimensions (either entirely or in its current configuration).]]></entry>
    <entry key="BadFeedbackConn"><![CDATA[Erroneous feedback connection involving one or more virtual blocks starting at <sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">output port {0,number,integer}</sldiag> of ''{1}'']]></entry>
    <entry key="BusSourcePropBadFeedbackConn"><![CDATA[Erroneous feedback connection involving one or more virtual blocks starting at <sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">output port {0,number,integer}</sldiag> of ''{1}'']]></entry>
    <entry key="AutoInsertedBlocksDataListAssignmentNotAllowed">Indexed assignment is not supported because the block data list isn't modifiable.</entry>
    <entry key="AutoInsertedBlockDataListInvalidBlockName">Invalid block name specified.</entry>
    <entry key="AutoInsertedBlockDataListContainerNotFound">Unable to locate the {0} for the container ''{1}'' while loading a Simulink.AutoInsertedBlockDataList object. Open the correct model and reload the object.</entry>
    <entry key="AutoInsertedBlockDataBlockDiagramObjectNotFound">Unable to locate the Block ''{0}'' responsible for auto-insertion of a Simulink.AutoInsertedBlockData object while loading it from Mat file. Open the correct model and reload the object.</entry>
    <entry key="BadInportNum">System ''{0}'' is missing a block that corresponds with input port {1,number,integer}. Ports must be numbered consecutively starting with 1.</entry>
    <entry key="BadOutportNum">System ''{0}'' is missing a block that corresponds with output port {1,number,integer}. Ports must be numbered consecutively starting with 1.</entry>
    <entry key="BadPropDimsInfoNoUnifyIO"><![CDATA[Simulink cannot propagate dimension information from <sldiag objui="inport" objparam="{0,number,integer}" objname="{1}">input port {0,number,integer}</sldiag> of ''{1}'' to <sldiag objui="outport" objparam="{2,number,integer}" objname="{3}">output port {2,number,integer}</sldiag> of ''{3}''. The dimension of the input dimension '{'{4}'}' of ''{5}'' does not match the multiplexed output signal '{'{6}'}'.]]></entry>
    <entry key="BadPropDimsInfoNoUnifyOI"><![CDATA[Simulink cannot propagate dimension information from <sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">output port {0,number,integer}</sldiag> of ''{1}'' to <sldiag objui="inport" objparam="{2,number,integer}" objname="{3}">input port {2,number,integer}</sldiag> of ''{3}''. The dimension of the multiplexed output signal '{'{4}'}' does not match the input dimension '{'{5}'}' of ''{6}''.]]></entry>
    <entry key="BadPropDimsInfoUnifyOI"><![CDATA[Simulink cannot unify the dimensions of the multiplexed signal at <sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">output port {0,number,integer}</sldiag> of ''{1}'' to match the input dimension of <sldiag objui="inport" objparam="{2,number,integer}" objname="{3}">input port {2,number,integer}</sldiag> of ''{3}''. Specifically, Simulink cannot unify '{'{4}'}' to match {5}. Consequently, Simulink cannot propagate dimension information from <sldiag objui="outport" objparam="{6,number,integer}" objname="{7}">output port {6,number,integer}</sldiag> of ''{7}'' to <sldiag objui="inport" objparam="{8,number,integer}" objname="{9}">input port {8,number,integer}</sldiag> of ''{9}''.]]></entry>
    <entry key="BadPropDimsInfoUnifyMatrixOI"><![CDATA[ Simulink cannot determine unified dimensions for the multiplexed signal at <sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">output port {0,number,integer}</sldiag> of ''{1}'' because one or more of the input signals is of matrix type. Specifically, Simulink cannot unify '{'{2}'}'. Consequently, Simulink cannot propagate dimension information from <sldiag objui="outport" objparam="{3,number,integer}" objname="{4}">output port {3,number,integer}</sldiag> of ''{4}'' to <sldiag objui="inport" objparam="{5,number,integer}" objname="{6}">input port {5,number,integer}</sldiag> of ''{6}''.]]></entry>
    <entry key="BdNotCompiled">The model ''{0}'' must be compiled before it can be accessed programmatically.</entry>
    <entry key="BdCommandDisallowedDuringSim">The model ''{0}'' is simulating and cannot process the command ''{1}'' through the programmatic interface.</entry>
    <entry key="BdSettingChangeNotAllowed">Cannot change parameter ''{0}'' of model ''{1}'' when it is being compiled or while the simulation is running.</entry>
    <entry key="BdSimRunningAlready">A simulation of block diagram ''{0}'' is currently running. A second simulation cannot be started.</entry>
    <entry key="BdWriteCloseError">File closing error while handling {0}. Error code is {1,number,integer} ({2}).</entry>
    <entry key="BdWriteInvBlockParamType">Error, mdlRTW of S-function ''{0}'' in ''{1}'' call ssWriteRTWParameters with an invalid parameter type.</entry>
    <entry key="BdWriteInvIndentLevel">Inconsistent number of record start '''{''' or terminating '''}''' characters found while writing {0}.</entry>
    <entry key="BdWriteMxArrayFailure">Method BdWriteMxArray failed: ''{0}''</entry>
    <entry key="BdWriteParamInvComplexSig">The parameter ''{0}'' must be real.  Use SS_WRITE_VALUE_DTYPE_VECT to write a complex parameter.</entry>
    <entry key="BdWriteParamInvParamValue">Error writing the {0} parameter ''{1}'' value to the ''{2}.rtw'' file.</entry>
    <entry key="BdWriteParamNameTooLong">Length of parameter name ({0}) must be less than {1,number,integer} characters.</entry>
    <entry key="BdWriteParamNonBuiltInDType">Cannot write non-MATLAB data type parameter ''{0}''.</entry>
    <entry key="BlkIgnoringUsedAsDStateFlag">The discrete state of ''{0}'' will not be logged because its data type ''{1}'' is not built-in.</entry>
    <entry key="BlkInAlgLoopErr">Algebraic loop error with ''{0}''\n</entry>
    <entry key="BlkInAlgLoopWarnInfo" translate="false" note="TranslateFalseBatch;"> ''{0}''{1}{2}\n</entry>
    <entry key="BlkInAlgLoopErrWithInfo">Error in algebraic loop that contains block ''{0}''{1}{2}\n</entry>
    <entry key="BlkInLoop">''{0}'' is involved in the loop.</entry>
    <entry key="BlkInTrigSSLoop">Input ports ({0}) of ''{1}'' are involved in a loop containing triggered subsystem(s) and/or triggered Model blocks.</entry>
    <entry key="BlkWithFcnCallRetValInLoop">Simulink has inserted an implicit signal conversion block after the inport blocks {0} of subsystem ''{1}'' to ensure that the corresponding signals are contiguous in memory. This may cause a one-step delay for the function-call initiator block(s) {2} that are observing these signals as return values from the function-call subsystem(s) they are calling. To avoid this condition, ensure that each function-call return value originates from a single block in the function-call subsystem being called.</entry>
    <entry key="BlkWithPortInLoop">Input ports ({0}) of ''{1}'' are involved in the loop.</entry>
    <entry key="BlkWithPortInLoopWithConstTs">Input ports ({0}) of ''{1}'' are involved in the loop. This block has a constant sample time.</entry>
    <entry key="BlkWithPortInLoopWithConstTsInside">Input ports ({0}) of ''{1}'' are involved in the loop. This Subsystem block has a constant sample time, or there are blocks with a constant sample time inside this subsystem.</entry>
    <entry key="BlkWithPortInLoopWithAsyncTs">Input ports ({0}) of ''{1}'' are involved in the loop. This block has an asynchronous sample time.</entry>
    <entry key="BlkWithPortInLoopWithMultiTs">Input ports ({0}) of ''{1}'' are involved in the loop. This block has multiple sample times.</entry>
    <entry key="BlkWithParamWriteInLoop">Invalid algebraic loop containing block ''{0}'', which is a Parameter Writer block or the parent subsystem of a Parameter Writer block, and block ''{1}'', whose parameter is written to by the Parameter Writer block.</entry>
    <entry key="Blk_Support_IR_Conditional_Init">Dummy msg</entry>
    <entry key="BlockBusObjectTsClash">The block ''{0}'' specifies conflicting sample time information: the block specifies bus object ''{1}'', whose elements define the block''s sample time to be {2}, yet the block''s Sample time property specifies {3}.  Either set the sample time of the block, or the object''s elements to inherited (-1).</entry>
    <entry key="BlockCStateArrayBoundsError">The model-wide continuous state array is corrupted after running the ''mdl{0}'' function of the S-Function ''{1}'' in ''{2}''.  This corruption is most likely due to an error in the S-Function''s source code, where the S-Function''s continuous state pointer has been incremented/decremented beyond its allotted limits.  This sort of memory errors can crash MATLAB or produce incorrect simulation results.</entry>
    <entry key="BlockDWorkArrayBoundsError">The model-wide work vector array (including DSTATES, RWORK, IWORK, PWORK, DWORK and MODE vectors) is corrupted after running the ''mdl{0}'' function of the S-Function ''{1}'' in ''{2}''.  This corruption is most likely due to an error in the S-Function''s source code, where one of the S-Function''s work vector pointers has been incremented/decremented beyond its allotted limits.  This sort of memory errors can crash MATLAB or produce incorrect simulation results.</entry>
    <entry key="BlockIO_Complexity"><![CDATA[The {0} input signal for <sldiag objui="inport" objparam="{1,number,integer}" objname="{2}">input port {1,number,integer}</sldiag> of block ''{2}'' cannot be overwritten by its {3} output port {4,number,integer}, because the complexity of both signals must be the same.]]></entry>
    <entry key="BlockIO_Datatypes"><![CDATA[Output port {0,number,integer} of the signal source block ''{1}'' for <sldiag objui="inport" objparam="{2,number,integer}" objname="{3}">input port {2,number,integer}</sldiag> of block ''{3}'' cannot be overwritten by its output port {4,number,integer} because the signals have different data types.]]></entry>
    <entry key="BlockIO_DifferentOutportReuse"><![CDATA[The input signal for <sldiag objui="inport" objparam="{0,number,integer}" objname="{1}">input port {0,number,integer}</sldiag> of block ''{1}'' is not overwritten by its output port {2,number,integer}; rather, it is overwritten by its output port {3,number,integer}.]]></entry>
    <entry key="BlockIO_GlobalLocal"><![CDATA[The {0} input signal for <sldiag objui="inport" objparam="{1,number,integer}" objname="{2}">input port {1,number,integer}</sldiag> of block ''{2}'' cannot be overwritten by its {3} output port {4,number,integer}, because they must have the same scope.]]></entry>
    <entry key="BlockIO_GroundBlock"><![CDATA[The input signal for <sldiag objui="inport" objparam="{0,number,integer}" objname="{1}">input port {0,number,integer}</sldiag> of block ''{1}'' cannot be overwritten by its output port {2,number,integer}, because its source is a GROUND block.]]></entry>
    <entry key="BlockIO_InputSignalGreaterThanOutput"><![CDATA[The input signal for <sldiag objui="inport" objparam="{0,number,integer}" objname="{1}">input port {0,number,integer}</sldiag> of block ''{1}'' cannot be overwritten by its output port {2,number,integer}, because its size is greater than the output port. This is a limitation and will be addressed in a later release.]]></entry>
    <entry key="BlockIO_InputSignalIsNoncontiguous"><![CDATA[The input signal for <sldiag objui="inport" objparam="{0,number,integer}" objname="{1}">input port {0,number,integer}</sldiag> of block ''{1}'' cannot be overwritten by its output port {2,number,integer}, because it comes from multiple output ports.]]></entry>
    <entry key="BlockIO_InputSignalIsRootInport"><![CDATA[The input signal for <sldiag objui="inport" objparam="{0,number,integer}" objname="{1}">input port {0,number,integer}</sldiag> of block ''{1}'' cannot be overwritten by its output port {2,number,integer}, because its source is a ROOT port.]]></entry>
    <entry key="BlockIO_InputSignalSmallerThanOutput"><![CDATA[The input signal for <sldiag objui="inport" objparam="{0,number,integer}" objname="{1}">input port {0,number,integer}</sldiag> of block ''{1}'' cannot be overwritten by its output port {2,number,integer}, because its size is smaller than the output port.]]></entry>
    <entry key="BlockIO_InputSignalStillUsed"><![CDATA[The signal value for <sldiag objui="inport" objparam="{0,number,integer}" objname="{1}">input port {0,number,integer}</sldiag> of block ''{1}'' cannot be overwritten by its output port {2,number,integer}, because it is still needed by <sldiag objui="inport" objparam="{3,number,integer}" objname="{4}">input port {3,number,integer}</sldiag> of block ''{4}'', which has not been executed yet.]]></entry>
    <entry key="BlockIO_MarkedNonReusable"><![CDATA[The input signal for <sldiag objui="inport" objparam="{0,number,integer}" objname="{1}">input port {0,number,integer}</sldiag> of block ''{1}'' cannot be overwritten by its output port {2,number,integer}, since it was marked as non-reusable.]]></entry>
    <entry key="BlockIO_NoBufferReuse"><![CDATA[The input signal for <sldiag objui="inport" objparam="{0,number,integer}" objname="{1}">input port {0,number,integer}</sldiag> of block ''{1}'' cannot be overwritten by its output port {2,number,integer}, since buffer reuse optimizations are OFF for this block diagram.]]></entry>
    <entry key="BlockIO_SignalSourceGreaterThanOutput"><![CDATA[Output port {0,number,integer} of signal source block ''{1}'' for <sldiag objui="inport" objparam="{2,number,integer}" objname="{3}">input port {2,number,integer}</sldiag> of block ''{3}'' cannot be overwritten by its output port {4,number,integer}, because its size is greater than the output port. This is a limitation and will be addressed in a later release.]]></entry>
    <entry key="BlockIO_SignalSourceSmallerThanOutput"><![CDATA[Output port {0,number,integer} of signal source block ''{1}'' for <sldiag objui="inport" objparam="{2,number,integer}" objname="{3}">input port {2,number,integer}</sldiag> of block ''{3}'' cannot be overwritten by its output port {4,number,integer}, because its size is smaller than the output port.]]></entry>
    <entry key="BlockIO_Systems"><![CDATA[Output port {0,number,integer} of the signal source block ''{1}'' for <sldiag objui="inport" objparam="{2,number,integer}" objname="{3}">input port {2,number,integer}</sldiag> of block ''{3}'' cannot be overwritten by its output port {4,number,integer}, because the signals are in different systems.]]></entry>
    <entry key="BlockIO_AlgebraicLoop"><![CDATA[Output port {0,number,integer} of the signal source block ''{1}'' for <sldiag objui="inport" objparam="{2,number,integer}" objname="{3}">input port {2,number,integer}</sldiag> of block ''{3}'' cannot be overwritten by its output port {4,number,integer}, because it is part of an algebraic loop.]]></entry>
    <entry key="BlockIO_Testpoint"><![CDATA[The input signal for <sldiag objui="inport" objparam="{0,number,integer}" objname="{1}">input port {0,number,integer}</sldiag> of block ''{1}'' cannot be overwritten by its output port {2,number,integer}, because at least one of the signals is a testpoint.]]></entry>
    <entry key="BlockIO_Logging"><![CDATA[The input signal for <sldiag objui="inport" objparam="{0,number,integer}" objname="{1}">input port {0,number,integer}</sldiag> of block ''{1}'' cannot be overwritten by its output port {2,number,integer}, because at least one of the signals is being logged.]]></entry>
    <entry key="BlockIO_UnequalSampleTimes"><![CDATA[Output port {0,number,integer} of the signal source block ''{1}'' for <sldiag objui="inport" objparam="{2,number,integer}" objname="{3}">input port {2,number,integer}</sldiag> of block ''{3}'' cannot be overwritten by its output port {4,number,integer}, because the signals have different sample times.]]></entry>
    <entry key="BlockIO_UnknownReason"><![CDATA[The input signal for <sldiag objui="inport" objparam="{0,number,integer}" objname="{1}">input port {0,number,integer}</sldiag> of block ''{1}'' cannot be overwritten by its output port {2,number,integer} for an unknown reason.]]></entry>
    <entry key="BlockJacobianMethodButNoConfig">''{0}'' implements a Jacobian method, but failed to configure its Jacobian dimensions in the DoPostPropagationTasks function.</entry>
    <entry key="BlockJacobianNumElementsOverflow">The Jacobian elements number of ''{0}'' exceeds {1, number, integer}, the maximum Jacobian elements allowed in memory.</entry>
    <entry key="ModelJacobianNumElementsOverflow">The Jacobian elements number of the model ''{0}'' exceeds {1, number, integer}, the maximum Jacobian elements allowed in memory.</entry>
    <entry key="BlockJacobianMethodButNoIrJc">''{0}'' implements a Jacobian method, but failed to initialize its Jacobian structure (Ir, Jc) in the method JacobianIrJc.</entry>
    <entry key="BlockNotFoundMessage">Could not find library block ''{0}''</entry>
    <entry key="BlockNotFoundTitle">Block not found</entry>
    <entry key="BlockOutputArrayBoundsError">The model-wide block output signal array is corrupted after running the ''mdl{0}'' function of the S-Function ''{1}'' in ''{2}''.  This corruption is most likely due to an error in the S-Function''s source code, where one of the S-Function''s output port signal pointers has been incremented/decremented beyond its allotted limits.  This sort of memory errors can crash MATLAB or produce incorrect simulation results</entry>
    <entry key="BlockOutputInfNanDetectedError"><![CDATA[Block ''{0}'' outputs ''{1}'' for element {2,number,integer} of <sldiag objui="outport" objparam="{3,number,integer}" objname="{4}">output port {3,number,integer}</sldiag> at {4} time step {5}
    <actions exclusiveFixIts="no">
    <action type="suppression"></action>
    </actions>]]></entry>
    <entry key="BlockOutputBufferExceedsMaxlimit"><![CDATA[String signal from <sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">output port {0,number,integer}</sldiag> of block ''{1}'' truncated at time step {2}. Its length exceeds the upper limit of {3,number,integer} characters. <actions exclusiveFixIts="no"><action type="suppression"></action></actions>]]></entry>
    <entry key="BlockOutputBufferOverflowDetectedError"><![CDATA[String signal from <sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">output port {0,number,integer}</sldiag> of block ''{1}'' was truncated at time step {2}. Its length exceeded the maximum length of {3,number,integer} characters specified in the output data type. Consider increasing the maximum length of output string data type. <actions exclusiveFixIts="no"><action type="suppression"></action></actions>]]></entry>
    <entry key="BlockOutputStringContainsNullChar"><![CDATA[String signal from <sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">output port {0,number,integer}</sldiag> of block ''{1}'' does not support the null character ''char(0)''.]]></entry>
    <entry key="CANNOT_ACCESS_BUS">Accessing ''{0}'' of a bus signal in ''{1}'' is not supported</entry>
    <entry key="CannotDeleteBusySystem">Cannot delete ''{0}'' while processing a callback or a parameter evaluation.</entry>
    <entry key="ParamEvalDelete">Cannot delete ''{0}'' while it is evaluating parameter.</entry>
    <entry key="CallbackDelete">Cannot delete ''{0}'' while in a callback</entry>
    <entry key="CallbackEvalErr">Error evaluating <![CDATA[<sldiag objui="callback" objparam="{0}"></sldiag>]]> callback of {1} ''{2}''. \nCallback string is ''{3}''</entry>
    <entry key="CallbackRecursion">Attempt to call the {0} callback of ''{1}'' again while the previous one is still running.</entry>
    <!-- CombineOutputUpdateFcnMinorTimeSteps -->
    <entry key="CombineOutputUpdateFcnMinorTimeSteps"><![CDATA[The output(s) read after the base-rate model step reflects intervening minor time steps. To observe data that is a snapshot of output(s) at major time steps, do one of the following:\n * Place a Zero-Order Hold block before the continuous output port ''{0}''. \n * Clear <sldiag objui="configset" objparam="CombineOutputUpdateFcns">Single output/update function</sldiag>, and read model output values after model_output call and before model_update call.]]></entry>
    <entry key="CannotChangeBlkParamsInsideParameterizedForEachSS">Cannot change parameter ''{0}'' of block ''{1}'' inside For Each subsystem ''{2}'' while simulation is running in Rapid Accelerator mode. This is because the subsystem contains one or more partitioned mask parameters.</entry>
    <entry key="CannotChangeBlkParamsInPFESSFromPToNP"> Parameter ''{0}'' of block ''{1}'' must reference at least one For Each subsystem partitioned mask parameter during simulation. This is because the parameter value was configured to directly or indirectly reference one or more partitioned mask parameters of a For Each subsystem.</entry>
    <entry key="CannotChangeBlkParamsInPFESSFromNPToP">Cannot change parameter ''{0}'' of block ''{1}'' to a value that directly or indirectly references a partitioned mask parameter of a For Each subsystem during simulation. This is because this block parameter value was configured not to reference any For Each subsystem partitioned mask parameter.</entry>
    <entry key="CannotSetBlkParamsToPartitionedMaskVarInPFESS">Cannot set parameter ''{0}'' of block ''{1}'' to a value that references a partitioned mask parameter of a For Each subsystem. This parameter does not support referencing partitioned mask parameters.</entry>
    <entry key="CannotSetAnonymousBlkParamsToPartitionedMaskVarInPFESS">Block ''{0}'' cannot reference partitioned mask parameters of For Each subsystems.</entry>
    <entry key="CannotSetBlkParamsInMultiRateDelayBlockInPFESS">Cannot set parameter ''{0}'' of Delay block ''{1}'' to a value that references a partitioned mask parameter of a For Each subsystem. A Delay block does not support referencing partitioned mask parameters in multirate mode.</entry>
    <entry key="CannotSetBlkParamsInSFunctionWithoutMdlProcessParameters">Block ''{0}'' does not support referencing partitioned mask parameters in For-Each subsystem ''{1}'' because function mdlProcessParameters is not defined in this S-Function.</entry>
    <entry key="CannotSetBlkParamsInTLCSfcnBlockInPFESS">Cannot set parameter ''{0}'' of block ''{1}'' to a value that references a partitioned mask parameter. S-Functions generated through TLC do not support referencing partitioned mask parameters.</entry>
    <entry key="CannotSetMdlRefArgToPartitionedMaskVarInRTW">Cannot set model argument ''{0}'' of block ''{1}'' to a value that references a partitioned mask parameter during code generation when ''Configuration Parameters > Code Generation > Identifiers > Generate scalar inlined parameters as'' is set to ''Macros''. Consider changing the parameter to ''Literals''.</entry>
    <entry key="CannotReferenceTransformedTunableVarInPFESS">Cannot set parameter ''{0}'' of block ''{1}'' to a value that references a partitioned mask parameter of For Each subsystem ''{2}''. This parameter is a transformation of one or more dialog parameters. Transformed parameters do not support referencing a partitioned mask parameter of a For Each subsystem. To avoid parameter transformation, consider explicitly casting the expression for mask parameter ''{3}'' of block ''{4}'' to data type ''{5}'' via ''{5}(...)'' expression.</entry>
    <entry key="CannotReferenceTransformedTunableVarInPFESSForUserSFcn">Cannot set parameter ''{0}'' of block ''{1}'' to a value that references a partitioned mask parameter of a For Each subsystem. This parameter is a transformation of one or more dialog parameters. Transformed parameters do not support referencing a partitioned mask parameter of a For Each subsystem.</entry>
    <entry key="PartitionedStructParamNotAllowed">Mask parameter ''{0}'' of For Each subsystem ''{1}'' cannot be partitioned because it evaluates to a non-numeric value or structure containing non-numeric fields.</entry>
    <entry key="CannotChangeConstTsBlks">Cannot change parameter ''{0}'' of ''{1}'' while simulation is running because its sample time is constant (inf). Constant sample times generally occur when ''Configuration Parameters > Code Generation > Optimization > Default parameter behavior'' is set to ''Inlined''.</entry>
    <entry key="CannotChangePortFrameData">S-function method {0} cannot change the frame data of {1} port {2,number,integer} of ''{3}'' once the frame data has been set</entry>
    <entry key="CannotChangePostCompileVirtBlks">Cannot change parameter ''{0}'' of ''{1}'' while simulation is running. The block was made virtual as it was optimized for simulation</entry>
    <entry key="CannotDisplayFrameSignal"><![CDATA[The selected signal originating from <sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">output port {0,number,integer}</sldiag> on ''{1}'' cannot be displayed because it is frame based]]></entry>
    <entry key="CannotDisplayWideFrameSignal"><![CDATA[The selected signal originating from <sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">output port {0,number,integer}</sldiag> on ''{1}'' cannot be displayed because it is a frame based signal with frame size greater than 1]]></entry>
    <entry key="CannotEvaluateFloatingDuration">The Duration field for the floating scope must be a valid MATLAB expression that evaluates to a positive integer. Using the default value auto</entry>
    <entry key="CannotEvaluateDWorkDimArg">The expression specified for the derived parameter, ''{0}'', does not evaluate to a scalar. The derived parameter specified as derived dimension argument must evaluate to a double scalar.</entry>
    <entry key="CannotExecuteTargDataMap">Could not execute target data map file ''{0}{1}{2}'' or it does not exist. \nStop the target, delete the {3} executable, rebuild the code, and try again.   Note that execution of external mode requires the build directory to be present</entry>
    <entry key="CannotHaveNDFrames">Cannot set port {0,number,integer} of ''{1}'' to be {2,number,integer} dimensional when this port is set to be frame-based. For a frame-based port, the number of dimensions must be 2</entry>
    <entry key="CannotHaveUnorientedFrames">Cannot set port {0,number,integer} of ''{1}'' to have one dimension when this port is set to be frame-based. For a frame-based port, the number of dimensions must be 2</entry>
    <entry key="CannotHaveUnsetOutputDimsMode"><![CDATA[The dimension mode of the <sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">output port {0,number,integer}</sldiag> of ''{1}'' is inherited. Whenever the dimension mode is set to either fixed or variable for all input ports, no output ports can have an inherited dimension mode.]]></entry>
    <entry key="CannotHaveUnsetOutputFrameData">''{0}'' has unknown frame status for its output port {1,number,integer}. When all input ports have known frame status, then all output ports must have known frame status</entry>
    <entry key="CannotPropFixedDimsModeForward"><![CDATA[Simulink cannot propagate the fixed-size mode from the <sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">output port {0,number,integer}</sldiag> of ''{1}'' to the <sldiag objui="inport" objparam="{2,number,integer}" objname="{3}">input port {2,number,integer}</sldiag> of ''{3}''. This input port expects a variable-size mode. Either replace ''{4}'' with a block that outputs a variable-size signal or replace ''{5}'' with a block that expects a fixed-size signal.]]></entry>
    <entry key="CannotPropFixedDimsModeForwardWithSource"><![CDATA[Simulink cannot propagate the fixed-size mode from the <sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">output port {0,number,integer}</sldiag> of ''{1}'' to the <sldiag objui="inport" objparam="{2,number,integer}" objname="{3}">input port {2,number,integer}</sldiag> of ''{3}''. This input port expects a variable-size mode. The fixed-size mode originates from ''{4}''. Either replace ''{5}'' with a block that outputs a variable-size signal or replace ''{6}'' with a block that expects a fixed-size signal.]]></entry>
    <entry key="CannotPropFrameDataBus"><![CDATA[Cannot propagate bus ''{0}'' with frame-based element(s) to <sldiag objui="inport" objparam="{1,number,integer}" objname="{2}">input port {1,number,integer}</sldiag> of ''{2}'' because this input port expects a sample-based signal.]]></entry>
    <entry key="CannotPropFrameDataForward"><![CDATA[Cannot propagate frame-based signal from <sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">output port {0,number,integer}</sldiag> of ''{1}'' to <sldiag objui="inport" objparam="{2,number,integer}" objname="{3}">input port {2,number,integer}</sldiag> of ''{3}'' because this input port expects a sample-based signal. Consider inserting an Unbuffer in the signal path.]]></entry>
    <entry key="CannotPropFrameDataForwardWithSource"><![CDATA[Cannot propagate frame-based signal from <sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">output port {0,number,integer}</sldiag> of ''{1}'' to <sldiag objui="inport" objparam="{2,number,integer}" objname="{3}">input port {2,number,integer}</sldiag> of ''{3}'' because this input port expects a sample-based signal. The frame-based signal originates from ''{4}''.  Consider inserting an Unbuffer in the signal path.]]></entry>
    <entry key="CannotPropFrameDataWhenLatchingOutside"><![CDATA[<sldiag objui="inport" objparam="{0,number,integer}" objname="{2}">Input port {0,number,integer}</sldiag> of the subsystem ''{1}'' cannot accept a frame-based signal, because the corresponding Inport block ''{2}'' has the parameter 'Latch by delaying outside signal' selected. ]]></entry>
    <entry key="CannotPropFrameDataWhenLatchingOutsideForRootTrigger">The root input port ''{0}''
    cannot output a frame-based signal, because it has the parameter 'Latch by delaying outside signal' selected.
    Consider deselecting the 'Latch by delaying outside signal' or setting the Sampling mode to 'Sample based' by executing set_param(blk,'SamplingMode','Sample based'), where blk is the root input port handle.</entry>
    <entry key="CannotPropFrameDataWhenLatchingOutsideForTriggeredModelBlock"><![CDATA[<sldiag objui="inport" objparam="{0,number,integer}" objname="{1}">Input port {0,number,integer}</sldiag> of the triggered Model block
    ''{1}'' cannot accept a frame-based signal, because the corresponding Inport block in the referenced model ''{2}'' has the parameter
    'Latch by delaying outside signal' selected. ]]></entry>
    <entry key="CannotPropNonFrameDataForward"><![CDATA[Cannot propagate sample-based signal from <sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">output port {0,number,integer}</sldiag> of ''{1}'' to <sldiag objui="inport" objparam="{2,number,integer}" objname="{3}">input port {2,number,integer}</sldiag> of ''{3}'' because this input port expects a frame-based signal. Consider inserting a Buffer or a Frame Conversion block in the signal path.]]></entry>
    <entry key="CannotPropNonFrameDataForwardWithSource"><![CDATA[Cannot propagate sample-based signal from <sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">output port {0,number,integer}</sldiag> of ''{1}'' to <sldiag objui="inport" objparam="{2,number,integer}" objname="{3}">input port {2,number,integer}</sldiag> of ''{3}'' because this input port expects a frame-based signal. The sample-based signal originates from ''{4}''. Consider inserting a Buffer or a Frame Conversion block in the signal path.]]></entry>
    <entry key="CannotPropVariableDimsModeForward"><![CDATA[Simulink cannot propagate the variable-size mode from the <sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">output port {0,number,integer}</sldiag> of ''{1}'' to the <sldiag objui="inport" objparam="{2,number,integer}" objname="{3}">input port {2,number,integer}</sldiag> of ''{3}''. This input port expects a fixed-size mode. Examine the configuration of ''{4}'' for one of the following scenarios: 1) the block does not support variable-size signals; 2) the block supports variable-size signals but needs to be configured for them.]]></entry>
    <entry key="CannotPropVariableDimsModeForwardWithSource"><![CDATA[Simulink cannot propagate the variable-size mode from the <sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">output port {0,number,integer}</sldiag> of ''{1}'' to the <sldiag objui="inport" objparam="{2,number,integer}" objname="{3}">input port {2,number,integer}</sldiag> of ''{3}''. This input port expects a fixed-size mode. The variable-size mode originates from ''{4}''. Examine the configurations of ''{5}'' for one of the following scenarios: 1) the block does not support variable-size signals; 2) the block supports variable-size signals but needs to be configured for them.]]></entry>
    <entry key="SimFcnInportDoesNotSupportVarDims"><![CDATA[Unable to propagate the variable-size signal with finite upper bounds to the Inport block ''{0}'' of the Simulink Function block. Only fixed-size signals or unbounded variable-size signals are supported by the Inport block of the Simulink Function block.]]></entry>
    <entry key="SimFcnOutportDoesNotSupportVarDims"><![CDATA[Unable to propagate the variable-size signal with finite upper bounds from the Outport block ''{0}'' of the Simulink Function block. Only fixed-size signals or unbounded variable-size signals are supported by the Outport block of the Simulink Function block.]]></entry>
    <entry key="CannotUnifyDimsMode"><![CDATA[Simulink cannot propagate the dimension mode from the <sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">output port {0,number,integer}</sldiag> of ''{1}'' to the <sldiag objui="inport" objparam="{2,number,integer}" objname="{3}">input port {2,number,integer}</sldiag> of ''{3}''. One of the multiplexed signals at the output of the source has variable-size mode. This multiplexed signal has to be demultiplexed before Simulink can propagate it to the destination.]]></entry>
    <entry key="CannotUnifyFrameData"><![CDATA[Cannot propagate frame data from <sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">output port {0,number,integer}</sldiag> of ''{1}'' to <sldiag objui="inport" objparam="{2,number,integer}" objname="{3}">input port {2,number,integer}</sldiag> of ''{3}''. One of the signals that is multiplexed into the signal at the output of the source contains frame-based data. This multiplexed signal has to be demultiplexed before it can be fed to the destination]]></entry>
    <entry key="CannotUploadTunTransformsOfDstType">Error converting from data type ''{0}'' to data type ''{1}'' while uploading parameters from the target</entry>
    <entry key="CannotUseSetDefaultDimsFcn">''{0}'' cannot use ''set default dimension function''.</entry>
    <entry key="CantCmdlSimInExternalMode"><![CDATA[External mode simulation is not supported for simulations started using the sim function. 
        <actions exclusiveFixIts="yes">
        <action type="fixit">
        <cmd>set_param(''{0}'','SimulationMode','Normal');</cmd>
        <txt>Configure model to simulate in normal mode.</txt>
        </action>
        </actions>]]></entry>
    <entry key="CantStepExternalMode">Cannot step external mode</entry>
    <entry key="ChangePortToBlockSampleTimes">Cannot access block-based sample time in ''{0}'' because this block has been set to use port-based sample times</entry>
    <entry key="ExclusiveSignalMustHaveSameStorageClass">Signals with the same identifier within a variant subsystem must have the same storage class.</entry>
    <entry key="ExclusiveSignalOnInport">Usage of same signal object for two different choice inports of variant subsystem is not allowed. Signal ''{0}'' is found on ''{1}'' and ''{2}''. Consider adding a signal conversion block and specifying the signal property on the output port of the signal conversion block.</entry>
    <entry key="Comp_AutoSolver">Compiling : Auto solver selection</entry>
    <entry key="Comp_AdaptBus">Compiling : Adapting bus names</entry>
    <entry key="Comp_Autosave">Autosave : Backing up all unsaved models</entry>
    <entry key="Comp_Blockio">Compiling : Setting up block I/O indices</entry>
    <entry key="Comp_BusCache">Compiling : Refreshing bus cache</entry>
    <entry key="Comp_BusConv">Compiling : Inserting bus conversion blocks</entry>
    <entry key="Comp_CacheMR">Compiling : Caching Model blocks for systems</entry>
    <entry key="Comp_CacheSrcs">Compiling : Caching actual sources and destinations</entry>
    <entry key="Comp_Checksums">Compiling : Computing checksums</entry>
    <entry key="Comp_Cleanup">Compiling : Cleaning up memory</entry>
    <entry key="Comp_CompProps">Compiling : Initializing compiled properties</entry>
    <entry key="Comp_CompSet">Compiling : Creating set of compiled blocks</entry>
    <entry key="Comp_CompileDone" translate="false" note="TranslateFalseBatch;"></entry>
    <entry key="Comp_Complete">Compiling : Compilation stages completed</entry>
    <entry key="Comp_Datatypes">Compiling : Propagating data types, complex signals, units, and symbolic dimensions</entry>
    <entry key="Comp_EvalBlocks">Compiling : Evaluating block parameters</entry>
    <entry key="Comp_SSCConstruct">Compiling : Constructing equation systems for Simscape physical networks</entry>
    <entry key="Comp_SSCAnalyze">Compiling : Analyzing equation systems for Simscape physical networks</entry>
    <entry key="Comp_SSCSetup">Compiling : Setting up simulation for Simscape physical networks</entry>
    <entry key="Comp_SSCInitialize">Running : Initializing equation systems for Simscape physical networks</entry>
    <entry key="Comp_ExpandForBus">Compiling : Expanding blocks for bus support</entry>
    <entry key="Comp_Final">Compiling : Compilation completed</entry>
    <entry key="Comp_GenSorted">Compiling : Generating sorted lists</entry>
    <entry key="Comp_InitBlocks">Compiling : Initializing all blocks</entry>
    <entry key="Comp_MR">Compiling : Updating model reference targets</entry>
    <entry key="Comp_RLS">Compiling : Updating reusable library subsystem targets</entry>
    <entry key="Comp_Model_Terminated" translate="false" note="TranslateFalseBatch;"> </entry>
    <entry key="Comp_PostProp">Compiling : Completing post propagation tasks</entry>
    <entry key="Comp_Precompile">Compiling : Performing pre-compile notifications</entry>
    <entry key="Comp_PropContexts">Compiling : Propagating conditional contexts</entry>
    <entry key="Comp_PropFrames">Compiling : Propagating frame data and dimensions</entry>
    <entry key="Comp_PropLabels">Compiling : Propagating signal labels</entry>
    <entry key="Comp_PropPassByRef">Compiling : Propagating pass by reference</entry>
    <entry key="Comp_Reeval">Compiling : Re-evaluating bus selectors</entry>
    <entry key="Comp_References">Compiling : Updating library link blocks</entry>
    <entry key="Comp_SF_Post">Compiling : Notifying Stateflow post compilation</entry>
    <entry key="Comp_SF_Start">Compiling : Starting Stateflow compilation</entry>
    <entry key="Comp_SampleTimes">Compiling : Propagating sample times</entry>
    <entry key="Comp_SortBlocks">Compiling : Sorting block list for propagation</entry>
    <entry key="Comp_Start">Compiling : Starting model compilation</entry>
    <entry key="Comp_SysProps">Compiling : Propagating system level properties</entry>
    <entry key="Comp_Testpoints">Compiling : Setting up implicit testpoints</entry>
    <entry key="Comp_PostActSrc">Compiling : Configuring subsystem output ports</entry>
    <entry key="Comp_UpdateDisplay">Compiling : Updating graphical display</entry>
    <entry key="Comp_UpdateSorted">Compiling : Updating sorted order display</entry>
    <entry key="Comp_Workspace">Compiling : Initializing model workspace</entry>
    <!-- CompactFormatNotSupportnonInlinedSF TopTester: test/toolbox/simulink/configsets/highlighting/DVHyperlinks/tSLEngineErrorsFixIt1.m -->
    <entry key="CompactFormatNotSupportnonInlinedSF"><![CDATA[Block ''{0}'' is a non-inlined S-function, which is not supported when ''File packaging format'' is ''Compact'' or ''Compact (with separate data file)''.
    <actions exclusiveFixIts="yes">
    <action type="fixit">
    <cmd>configset.internal.fixIt(''{0}'',''ERTFilePackagingFormat'',''Modular'')</cmd>
    <txt>Change <sldiag objui="configset" objparam="ERTFilePackagingFormat">File packaging format</sldiag> to ''Modular''</txt>
    </action>
    </actions>]]>
    </entry>
    <entry key="CompileNeededForSampleTimes">An Update Diagram must be performed in order to access the ''SampleTimes'' information for the model ''{0}''</entry>
    <entry key="CompileNeededForVariantConditions">An Update Diagram must be performed in order to access the ''VariantConditions'' information for the model ''{0}''</entry>
    <entry key="ModelHasNoVariantConditions">The model ''{0}'' has no variant conditions </entry>
    <entry key="CompileNeededForTasks">An Update Diagram must be performed in order to access the ''Tasks'' information for the model ''{0}''</entry>
    <entry key="CompileNeededForClocks">An Update Diagram must be performed in order to access the ''Clocks'' information for the model ''{0}''</entry>
    <entry key="ComplexityNotCompatibleMatlab">The complexity of the given MATLAB array is not compatible with the Simulink internal data</entry>

    <entry key="CompilePhaseStatusBarStart"> : Started</entry>
    <entry key="CompilePhaseStatusBarEnd"> : Completed</entry>
    <entry key="ContSTInpPortIsFrameBased"><![CDATA[<sldiag objui="inport" objparam="{0,number,integer}" objname="{1}">Input port {0,number,integer}</sldiag> of ''{1}'' is set to be frame-based even though this port has a continuous sample time. Frame-based signals should have a discrete sample time.]]></entry>
    <entry key="ContStateAccessError">Continuous states of ''{0}'' cannot be accessed before the Start method of this block has been executed</entry>
    <!-- ContinuousTimeNotSupported TopTester: test/toolbox/simulink/configsets/highlighting/DVHyperlinks/tSLEngineErrorsFixIt1.m -->
    <entry key="ContinuousTimeNotSupported"><![CDATA[Block ''{0}'' uses continuous time, which is not supported with the current configuration.
    <actions exclusiveFixIts="yes">
    <action type="fixit">
    <cmd>configset.internal.fixIt(''{0}'',''SupportContinuousTime'',''on'')</cmd>
    <txt>Select <sldiag objui="configset" objparam="SupportContinuousTime">Support continuous time</sldiag></txt>
    </action>
    </actions>]]>
    </entry>
    <!-- Conv1DVectToColVectByBlock TopTester: test/toolbox/simulink/configsets/highlighting/DVHyperlinks/tSLEngineErrorsFixIt1.m -->
    <entry key="Conv1DVectToColVectByBlock"><![CDATA[''{0}'' is driven by a 1-D signal. It has automatically converted the input signal to a column vector (matrix).
    <actions exclusiveFixIts="yes">
    <action type="suggestion">
    <txt>Use a Reshape</txt>
    </action>
    <action type="fixit">
    <cmd>configset.internal.fixIt(''{0}'',''VectorMatrixConversionMsg'',''none'')</cmd>
    <txt>Suppress this message by setting <sldiag objui="configset" objparam="VectorMatrixConversionMsg">Vector/matrix block input conversion</sldiag> to ''none''</txt>
    </action>
    </actions>]]>
    </entry>
    <entry key="CovAccessError">A fatal error occurred when accessing the coverage tool: {0}</entry>
    <entry key="CovBlockTooManySignals">Too many signals for coverage in: {0}. Signal range coverage is turned off.</entry>
    <entry key="CovGenericBlock">A fatal error in the coverage tool occurred while analyzing ''{0}''.</entry>
    <entry key="CovGenericModel">A fatal error in the coverage tool occurred while analyzing the model.</entry>
    <entry key="CovSetupError">A fatal error occurred when setting up the coverage tool.</entry>
    <entry key="CovNotSupportedSLDVBlockType">The data type is not supported in ''{0}'' - coverage is turned off for this block.</entry>
    <entry key="CreateUndoSubsystemWarning">All graphical changes made inside the subsystem will be removed.\n Select Redo Create Subsystem to restore the subsystem with changes\n</entry>
    <entry key="CreateUndoWriteProtectedSubsystemError">Cannot Undo Create Subsystem for subsystems that are ''ReadOnly'' or ''NoReadWrite''.\n</entry>
    <entry key="DSMemoryAsyncTsNotMatchObject">In model ''{0}'', one or more of the blocks that access data store ''{1}'' execute in an asynchronous task. This conflicts with the sample time property for the data store memory specified by the Simulink.Signal object in the {2} workspace, i.e., the fact that the signal object specifies that the data store is accessed  in a single task having the sample time {3}.</entry>
    <entry key="DSMemoryHybridTsNotMatchObject">In model ''{0}'', one or more of the blocks that access data store ''{1}'' execute in multiple tasks. This conflicts with the sample time property specified for the data store by the Simulink.Signal object in the {2} workspace. The signal object specifies that the data store is accessed in a single task having the sample time {3}.</entry>
    <entry key="DSMemoryReaderWriterTsNotMatchObject">In model ''{0}'', one or more of the blocks that access data store ''{1}'' execute in a task whose sample time is {2}. This conflicts with the sample time property for the data store memory specified by the Simulink.Signal object in the {3} workspace, i.e., the fact that the signal object specifies that the data store is accessed  in a single task having the sample time {4}.</entry>
    <!-- DWorkDataNotReusableSC TopTester: test/toolbox/simulink/configsets/highlighting/DVHyperlinks/tSLEngineErrorsOpen.m -->
    <entry key="DWorkDataNotReusableSC"><![CDATA[The storage class of a state owned by ''{0}'' is global, thus the generated code is not reusable.
    <actions exclusiveFixIts="yes">
    <action type="suggestion">
    <cmd>Simulink.internal.OpenBlockParamsDialog(''{0}'',''StateStorageClass'')</cmd>
    <txt>Set ''Storage class'' to ''Auto''</txt>
    </action>
    <action type="suggestion">
    <cmd>configset.internal.open(''{0}'',''CodeInterfacePackaging'')</cmd>
    <txt>Set ''Code interface packaging'' to ''Nonreusable function'' (might impact referenced or referencing models)</txt>
    </action>
    <action type="suggestion">
    <cmd>configset.internal.open(''{0}'',''MultiInstanceErrorCode'')</cmd>
    <txt>Set ''Multi-instance code error diagnostic'' to ''None'' or ''Warning'.</txt>
    </action>
    </actions>]]>
    </entry>
    <entry key="DWorkDimArgIsNotDerivedParam">Invalid argument, ''{0}'', specified for derived dimension argument. The argument must be a derived block parameter.</entry>
    <entry key="DataDimensionMismatch">Data dimension mismatch</entry>
    <entry key="DataTypeHeaderRecursion">Recursion detected in data type header file dependencies. Chain of type dependencies: ''{0}''. Corresponding chain of header file dependencies: ''{1}''.</entry>
    <entry key="DataTypeMismatch">Data type mismatch, a {0} data is given while a {1} data is expected</entry>
    <entry key="DataTypeMismatchField">Data type mismatch of the fields of the MATLAB struct</entry>
    <entry key="DataTypeMismatchNumField">Data type mismatch, a struct with {0,number,integer} fields is given but a struct with {1,number,integer} fields is expected</entry>
    <entry key="DataTypeNotCompatibleMatlab">The data type of the given MATLAB array is not compatible with the Simulink internal data</entry>
    <entry key="DataUploadNotSupported">Uploading is not supported for data of type ''{0}''</entry>
    <entry key="DefaultBlockDiagramInvalidMethod">Method ''{0}'' is not implemented for that object</entry>
    <entry key="DefaultDimsListHasBeenTruncated">This list of underspecified dimensions was truncated.</entry>
    <entry key="DefaultDimsMethodUsed">Model ''{0}'' has underspecified signal dimensions and Simulink has assigned these dimensions by default. To prevent ambiguities, consider specifying these dimensions in the block dialog box. Alternatively, add ''Signal Specification'' blocks as necessary. Simulink has assigned these signal dimensions:{1}</entry>
    <entry key="DefaultDimsMightHaveCausedError">
      <![CDATA[
               Compilation of model ''{0}'' failed while trying to resolve underspecified signal dimensions.
               <actions exclusiveFixIts="yes">
               <action type="suggestion">
               <cmd>load_system(''{0}'');configset.highlightParameter(''{0}'','UnderSpecifiedDimensionMsg');</cmd>
               <txt>Enable ''warning'' or ''error'' diagnostics for the list of underspecified signal dimensions.</txt>
               </action>
               </actions>
      ]]>
    </entry>
    <entry key="DefaultDimsLinkToDisable">
      <![CDATA[
               To turn off this message, set
               <sldiag objui="configset" objparam="UnderSpecifiedDimensionMsg">Underspecified dimensions</sldiag>
               to ''none''.
      ]]>
    </entry>
    <entry key="DefaultDimsSetAtBlockInPort"><![CDATA[Block ''{0}'' <sldiag objui="inport" objparam="{1,number,integer}" objname="{0}">input port {1,number,integer}</sldiag> has been set to {2}.]]></entry>
    <entry key="DefaultDimsSetAtBlockOutPort"><![CDATA[Block ''{0}'' <sldiag objui="outport" objparam="{1,number,integer}" objname="{0}">output port {1,number,integer}</sldiag> has been set to {2}.]]></entry>
    <entry key="DefaultGraphPropertyLoadOnly">Default graph properties can only be set while the model is loading. Set the property of the root graph instead.</entry>
    <entry key="DerivAccessError">Derivatives of ''{0}'' cannot be accessed before the Start method of this block has been executed</entry>
    <entry key="DerivNotFinite">Derivative of state ''{0}'' in block ''{1}'' at time {2} is not finite. The simulation will be stopped. There may be a singularity in the solution.  If not, try reducing the step size (either by reducing the fixed step size or by tightening the error tolerances)</entry>
    <entry key="JacobianMatrixWithNanInf">Auto solver has detected that the Jacobian matrix at time t=0.0 has entries which are not finite. The simulation will be stopped. There may be a singularity in the solution.  If not, try reducing the step size (either by reducing the maximum step size or by tightening the error tolerances)</entry>
    <!-- Dims1DVectTo2DVectorConversion TopTester: test/toolbox/simulink/configsets/highlighting/DVHyperlinks/tSLEngineErrorsFixIt1.m -->
    <entry key="Dims1DVectTo2DVectorConversion"><![CDATA[A 1-D array has been converted to a 2-D vector (matrix). The 1-D signal generated by <sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">output port {0,number,integer}</sldiag> of ''{1}'' has been automatically converted to a 2-D vector (matrix). This signal is driving <sldiag objui="inport" objparam="{2,number,integer}" objname="{3}">input port {2,number,integer}</sldiag> of ''{3}''.
    <actions exclusiveFixIts="yes">
    <action type="suggestion">
    <txt>Use a Reshape</txt>
    </action>
    <action type="fixit">
    <cmd>configset.internal.fixIt(''{1}'',''VectorMatrixConversionMsg'',''none'')</cmd>
    <txt>Suppress this message by setting <sldiag objui="configset" objparam="VectorMatrixConversionMsg">Vector/matrix block input conversion</sldiag> to ''none''</txt>
    </action>
    </actions>]]>
    </entry>
    <!-- Dims2DVectTo1DVectorConversion TopTester: test/toolbox/simulink/configsets/highlighting/DVHyperlinks/tSLEngineErrorsFixIt1.m -->
    <entry key="Dims2DVectTo1DVectorConversion"><![CDATA[A 2-D Vector (matrix) has been converted to a 1-D array. The 2-D vector (matrix) signal generated by <sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">output port {0,number,integer}</sldiag> of ''{1}'' has been automatically converted to a 1-D array. This signal is driving <sldiag objui="inport" objparam="{2,number,integer}" objname="{3}">input port {2,number,integer}</sldiag> of ''{3}''.
    <actions exclusiveFixIts="yes">
    <action type="suggestion">
    <txt>Use a Reshape</txt>
    </action>
    <action type="fixit">
    <cmd>configset.internal.fixIt(''{1}'',''VectorMatrixConversionMsg'',''none'')</cmd>
    <txt>Suppress this message by setting <sldiag objui="configset" objparam="VectorMatrixConversionMsg">Vector/matrix block input conversion</sldiag> to ''none''</txt>
    </action>
    </actions>]]>
    </entry>

    <entry key="DimsPropBadDefDims2">Error occurred while setting the dimensions of ''{0}''. Output port {1,number,integer} has unknown dimensions even though all input ports have known dimensions.</entry>
    <entry key="DisableButNotReturnWkspOutput">Outputs to the workspace has been disabled, this happens, in particular, if ''sim'' is called inside ''parfor''. To save the workspace outputs, set ''SaveWorkspaceOutputs'' to ''on'' in ''sim'' command options</entry>
    <entry key="DomainDataLocked">Data for Domain ''{0}'' is locked.</entry>
    <entry key="DomainHasNoPortTypes">Domain ''{0}'' has no port types.  It must specify at least one.</entry>
    <entry key="DomainModelAlreadyRegistered">Domain model was already registered under the name ''{0}''.</entry>
    <entry key="DomainModelNotRegistered">Cannot locate domain model definition under the name ''{0}''.</entry>
    <entry key="DomainNotFound">Physical modeling domain definition file {0}.m not found. You will not be able simulate this model. Please close your model, then add the domain definition file to the MATLAB path and re-open your model.</entry>
    <entry key="DomainParameterNotSet">Domain parameter ''{0}'' must be set for all domains. Domain ''{1}'' has not set this parameter.</entry>
    <entry key="DomainPortTypeParameterNotSet">Port type parameter ''{0}'' must be set for all port types. Port type ''{1}'' has not set this parameter.</entry>
    <entry key="DomainConnectIncorrectReturnValue">Incorrect connect function return type for ports ''{0}'' and ''{1}'' for domain ''{2}''. Connect function must return a logical scalar.</entry>
    <entry key="PortTypeNotDefinedForNonDynamicDomain">Port type ''{0}'' is not found in the domain definition for domain ''{1}'' and the domain does not support dynamic port types.
    </entry>
    <entry key="DomainInvalidDynamicPortTypesCallback">Invalid DynamicPortTypesCallback property for domain ''{0}''. This property should be a 1x2 cell-array of MATLAB function handles, the first being setup function handle and second being connect function handle.</entry>
    <entry key="DomainDynamicPortTypeInternalError" translate="false">Internal error: Error encountered while setting up port type ''{0}'' in domain ''{1}''.  However, unable to remove port type due to subsequent errors.  See attached cause for original error encountered while setting up the port type.</entry>
    <entry key="DuplicatePortNum">Duplicate port number found in ''{0}''</entry>
    <entry key="DuplicatedNameInRegistry">An item named ''{0}'' already exists in this registry.</entry>
    <entry key="UngroupedCanPrmNotAllowedMulInstSLFcn">Parameter ''{0}'' is configured as a model argument and used by Simulink function ''{1}'' that is configured to generate multi-instance code. For this modeling combination, the parameter must have a non-auto storage class.</entry>
    <entry key="GroupedCanPrmNotAlloweSLFcnCppClass">Parameter ''{0}'' is configured as a model argument and used by Simulink function ''{1}''. To generate encapsulated C++ code for this modeling configuration, the parameter must be a privately scoped class member. In the C++ Code Mappings editor set the ''Model parameter arguments'' property to ''private''.</entry>
    <entry key="ECPotentialOutputDiffTunablePrm"><![CDATA[The output of ''{0}'' may produce different results than the previous Simulink releases. Block ''{1}'' has a tunable variable and has been inherited by the conditionally executed subsystem, ''{2}''.  If you change the tunable parameters of ''{3}'', the block''s output will be recomputed only when the conditionally executed subsystem executes. To prevent the inheritance of the context, explicitly set the sample time of ''{4}'' to the rate at which you want the signal recomputed. To turn off this warning message, deselect <sldiag objui="configset" objparam="CheckExecutionContextRuntimeOutputMsg">Check runtime output of execution context</sldiag>.]]></entry>
    <entry key="ECPotentialOutputDiffTunablePrmConsistentOutportInit"><![CDATA[The output of ''{0}'' may produce different results than the previous Simulink releases. Block ''{1}'' has a tunable variable and has been inherited by the conditionally executed subsystem, ''{2}''.  If you change the tunable parameters of ''{3}'', the block''s output will be recomputed only when the conditionally executed subsystem executes. To prevent the inheritance of the context, explicitly set the sample time of ''{4}'' to the rate at which you want the signal recomputed. To turn off this warning message, deselect <sldiag objui="configset" objparam="CheckExecutionContextRuntimeOutputMsg">Check runtime output of execution context</sldiag>.]]></entry>
    <entry key="ECoder_LicenseError">Unable to check out the Embedded Coder license which is needed to generate Embedded C code</entry>
    <entry key="MATLABCoder_LicenseError">Unable to check out the MATLAB Coder license which is needed to generate code</entry>
    <entry key="EI_BoolParam">Invalid input arguments for engine interface method ''{0}''.  Parameter ''{1}'' only accept Boolean values ''on'' or ''off''</entry>
    <entry key="EI_UpdateOnlyNotAllowed">UpdateBDOnly is not allowed to be true for HDL or Model Reference style compile using the engine interface.</entry>
    <entry key="EI_CannotCompleteEI">Cannot complete engine interface method</entry>
    <entry key="EI_EINotEnabled">Simulink engine interface is not enabled.</entry>
    <entry key="EI_ImproperSubclass">Input class is not a proper subclass of default classes</entry>
    <entry key="EI_InvalidBlock">Invalid block</entry>
    <entry key="EI_VirtualBlockDoesNotHaveCData">The block is virtual and has been optimized away.</entry>
    <entry key="EI_NOTASynthesizedBlock">The block is NOT a synthesized block.</entry>
    <entry key="EI_ObjChanged">Object changed during model compilation</entry>
    <entry key="EI_InvalidInputPort">Invalid input port</entry>
    <entry key="EI_InvalidModel">Invalid model</entry>
    <entry key="EI_InvalidObject">Invalid Simulink object</entry>
    <entry key="EI_InvalidOption">Invalid option</entry>
    <entry key="EI_InvalidBusSelElIdx">Invalid busSelElIdx. busSelElIdx is always associated with a non-virtual bus source port and must be a valid integer (-1 >= busSelElIdx > maxDFSIdx)</entry>
    <entry key="EI_InvalidVBPort">Port is not associated with a virtual bus signal</entry>
    <entry key="EI_InvalidOutputPort">Invalid output port</entry>
    <entry key="EI_InvalidSimType">Invalid Sim type</entry>
    <entry key="EI_InvalidUDIHandle">Invalid UDI handle</entry>
    <entry key="EI_MissingParamValPair">Invalid input arguments for engine interface method ''{0}''.  Input parameter ''{1}'' has no matching value</entry>
    <entry key="EI_ModelInitiated">Model is already initiated</entry>
    <entry key="EI_UnrecognizedParam">Invalid input arguments for engine interface method ''{0}''.  Input parameter ''{1}'' is not a valid parameter</entry>
    <entry key="EI_UnspecifiedInputPort">The block has more than one input port, please specify</entry>
    <entry key="EI_UnspecifiedOutputPort">The block has more than one output port, please specify</entry>
    <entry key="ElementNotFound">Specified element could not be found</entry>
    <entry key="EI_EIIsLocked">The engine interface has been locked.  You must
    either restart your MATLAB session or attach a debugger and reset the
    locked value. This message will not appear in release builds</entry>
    <entry key="EnabTrigECPotentialPreStartOutputDiff"><![CDATA[The output of ''{0}'' may produce different results than the previous Simulink releases if ''{1}'' is not enabled and triggered at t = 0. Block ''{2}'' may produce non-zero outputs for zero inputs and has been inherited by the ''{3}'' execution context. In previous releases, the ''{4}'' was not inherited by the execution context and may have produced a non-zero output prior to start of the conditional subsystem. To prevent the inheritance of the context, explicitly set the sample time of ''{5}'' to the rate at which you want the signal recomputed. To turn off this warning message, deselect <sldiag objui="configset" objparam="CheckExecutionContextPreStartOutputMsg">Check preactivation output of execution context</sldiag>.]]></entry>
    <entry key="EnabTrigECPotentialPreStartOutputDiffConsistentOutportInit"><![CDATA[The output of ''{0}'' may produce different results than the previous Simulink releases if ''{1}'' is not enabled and triggered at t = 0. Block ''{2}'' may produce non-zero outputs for zero inputs and has been inherited by the ''{3}'' execution context. In previous releases, the ''{4}'' was not inherited by the execution context and may have produced a non-zero output prior to start of the conditional subsystem. To prevent the inheritance of the context, explicitly set the sample time of ''{5}'' to the rate at which you want the signal recomputed. To turn off this warning message, deselect <sldiag objui="configset" objparam="CheckExecutionContextPreStartOutputMsg">Check preactivation output of execution context</sldiag>.]]></entry>
    <entry key="EnabledECPotentialPreStartOutputDiff"><![CDATA[The output of ''{0}'' may produce different results than the previous Simulink releases if ''{1}'' is not enabled at t = 0. Block ''{2}'' may produce non-zero outputs for zero inputs and has been inherited by the ''{3}'' execution context. In previous releases, the ''{4}'' was not inherited by the execution context and may have produced a non-zero output prior to start of the conditional subsystem. To prevent the inheritance of the context, explicitly set the sample time of ''{5}'' to the rate at which you want the signal recomputed. To turn off this warning message, deselect <sldiag objui="configset" objparam="CheckExecutionContextPreStartOutputMsg">Check preactivation output of execution context</sldiag>.]]></entry>
    <entry key="EnabledECPotentialPreStartOutputDiffConsistentOutportInit"><![CDATA[The output of ''{0}'' may produce different results than the previous Simulink releases if ''{1}'' is not enabled at t = 0. Block ''{2}'' may produce non-zero outputs for zero inputs and has been inherited by the ''{3}'' execution context. In previous releases, the ''{4}'' was not inherited by the execution context and may have produced a non-zero output prior to start of the conditional subsystem. To prevent the inheritance of the context, explicitly set the sample time of ''{5}'' to the rate at which you want the signal recomputed. To turn off this warning message, deselect <sldiag objui="configset" objparam="CheckExecutionContextPreStartOutputMsg">Check preactivation output of execution context</sldiag>.]]></entry>
    <entry key="RootOutportDirectConnToIRTRootInport">The root Outport block ''{0}'' cannot be driven by root Inport block ''{1}'' because the root Inport block is also connected to an Initialize, Reinitialize, Reset or Terminate Function block.</entry>
    <entry key="VirtualRootOutportDirectConnToRootInport">Virtual root Outport block ''{0}'' cannot be connected directly to root inport block ''{1}''.</entry>
    <entry key="MATFileLoggingDataObjectRootOutport">The outport block ''{0}'' in the model is driven by signal with non-auto storage class. MAT-File logging is not supported for this configuration.</entry>
    <entry key="ErrInExtModeMexFile">Error occurred while executing External Mode MEX-file ''{0}'':\n{1}</entry>
    <entry key="ErrorAnnotationCallback">Annotation ''{0}''. Error in the ''{1}'' callback</entry>
    <entry key="ErrorInMultipleDimsModes"><![CDATA[Simulink cannot propagate the dimension mode information from the <sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">output port {0,number,integer}</sldiag> of ''{1}'' to the <sldiag objui="inport" objparam="{2,number,integer}" objname="{3}">input port {2,number,integer}</sldiag> of ''{3}''. The multiplexed signal at the output port {4,number,integer} has a dimension mode setting that is inconsistent with that of the input port {5,number,integer}.]]></entry>
    <entry key="ErrorInMultipleFrames"><![CDATA[Error while propagating frame information from <sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">output port {0,number,integer}</sldiag> of ''{1}'' to <sldiag objui="inport" objparam="{2,number,integer}" objname="{3}">input port {2,number,integer}</sldiag> of ''{3}''. The ports are set to allow multiplexed signals with inconsistent frame information]]></entry>
    <entry key="ErrorNotWrittenYet">Error found in ''{0}''.  Error message needs to be assigned and/or written.</entry>
    <entry key="ExecEventAccessError">Simulink can only add or remove an execution event listener to a block during simulation. Block ''{0}'' is not currently executing. Therefore, Simulink cannot add an event listener to this block.</entry>
    <entry key="EventCallbackNotSupportedForMultiThreadCoSim">Execution event listener callbacks are not supported when the block is running in multi-threaded mode. Run the command set_param(''{0}'','MultiThreadCoSim','off') to turn off multi-threading for ''{1}''.</entry>
    <entry key="ExportFcnsMode_AbsoluteTimeNotSupported">Block ''{0}'' uses absolute time, which is not supported with the current configuration for exporting function-calls</entry>
    <entry key="ExportFcnsMode_NonInlinedSFcnsNotSupported">Block ''{0}'' is a non-inlined s-function, which is not supported with the current configuration for exporting function-calls</entry>
    <entry key="ExportedFcnCallSrcInsideContext">The input(s) of the function-call block ''{0}'' depend on its own output(s).  This may cause the inputs of the block to not remain fixed over the duration of the function-call. Consider placing Function-Call Feedback Latch block(s) before corresponding input(s), or select the 'Latch input for feedback signals of function-call subsystem outputs' option on the corresponding Inport block(s).</entry>
    <entry key="ExportedFcnCallSILSrcInsideContext">The input(s) of the block ''{0}'' depend on its own output(s), yet this block simulates the code exported from a subsystem(s) that does not latch its input(s).  This may cause the behavior of the simulation of the code to differ from the simulation of the original subsystem. Consider placing Function-Call Feedback Latch block(s) before the corresponding input(s) of the original subsystem(s), or select the 'Latch input for feedback signals of function-call subsystem outputs' option on the corresponding Inport block(s).</entry>
    <entry key="ExtInpSFExecAtInit">The value at the root inport ''{0}'' is being used by the Stateflow chart ''{1}'' when that chart has the checkbox ''Execute(enter) Chart At Initialization'' selected. This configuration is not supported by the {2}. Consider clearing the chart''s ''Execute(enter) Chart At Initialization'' checkbox, or inserting a signal conversion block immediately after the root inport, making sure the ''Exclude this block from ''Block reduction'' optimization'' checkbox is selected for that signal conversion block</entry>
    <entry key="ExtInpSimscapeWhenFPC">The value at the root inport {0} is being used by the Simscape block ''{1}''. This configuration is not supported by the {2}. Consider inserting a Simulink Signal Conversion Block immediately after the root inport. Be sure to select the Signal Conversion Block parameter "Exclude this block from 'Block reduction' optimization".</entry>
    <entry key="ExtModeCannotDownloadParamBecauseNoHostToTarget">Parameter {0} cannot be downloaded because its type ({1}) has no external mode host-to-target function registered</entry>
    <entry key="ExtModeCantUploadDataCSC">Simulink cannot upload data to ''{0}'' because one of its source signals uses a custom storage class</entry>
    <entry key="ExtModeCantUploadDataConstantSampleTime">Simulink cannot upload data to ''{0}'' because the block or one of its source blocks has constant sample time</entry>
    <entry key="ExtModeCantUploadDataMultipleRates">Simulink cannot upload data to ''{0}'' because it is not single rate.</entry>
    <entry key="ExtModeCantUploadDataNoConnectedSignals">Simulink cannot upload data to ''{0}'' because it has no connected signals</entry>
    <entry key="ExtModeCantUploadDataNoConvertFunc">Simulink cannot upload data to ''{0}'' because one of its source signals uses a data type not supported by External mode</entry>
    <entry key="ExtModeCantUploadDataNoDWork">Simulink cannot upload data to ''{0}'' because it has no uploadable dworks</entry>
    <entry key="ExtModeCantUploadDataNoInputPorts">Simulink cannot upload data to ''{0}'' because it has no input ports</entry>
    <entry key="ExtModeCantUploadDataPortBasedSampleTime">Simulink cannot upload data to ''{0}'' because the block or one of its source blocks has port-based sample time</entry>
    <entry key="ExtModeCantUploadDataRootInport">Simulink cannot upload data to ''{0}'' because one of its driving blocks is a top level inport</entry>
    <entry key="ExtModeCantUploadDataVarDims">Simulink cannot upload data to ''{0}'' because one of its source signals is of variable-size. Variable-size signals are only supported by external mode TCP/IP and serial transport protocols. In addition, the size of 'int' on the target hardware and MATLAB development computer must match.</entry>
    <entry key="ExtModeChecksumMismatch">The model that you are trying to run in External mode does not match the application running on your target. Checksum test ({0}) failed. The host model's structural checksum is [{1,number,integer}, {2,number,integer}, {3,number,integer}, {4,number,integer}] and the target application's structural checksum is [{5,number,integer}, {6,number,integer}, {7,number,integer}, {8,number,integer}]. Rebuild the model, run it on your target, and start External mode simulation again.</entry>
    <entry key="ExtModeErrorCallingSFcnExtModeFcn">Error calling external mode function for ''{0}'': {1}</entry>
    <entry key="ExtModeErrorCalllingExtmodeTransports">Error calling extmode_transports.m.</entry>
    <entry key="ExtModeErrorGettingIntrfLevelFromExtmodeTransports">Could not get proper value for ExtModeIntrfLevel from extmode_transports.m</entry>
    <entry key="ExtModeErrorGettingMexFileFromExtmodeTransports">Could not get proper value for ExtModeMexFile from extmode_transports.m</entry>
    <entry key="ExtModeFailToWriteMatFile">Failed to write matrix to matfile</entry>
    <entry key="ExtModeFileDirNameEmpty">You must specify a directory and file name in the ''Directory'' and ''File'' fields of the External Data Archiving Dialog</entry>
    <entry key="ExtModeInvTrigDuration">External mode trigger duration should be a scalar integer greater than zero</entry>
    <entry key="ExtModeInvalidPositiveValue">''{0}'' must be a positive value.</entry>
    <entry key="ExtModeInvalidNonNegativeValue">''{0}'' must not be a negative value.</entry>
    <entry key="ExtModeInvalidTrigBlock">Invalid External mode trigger signal</entry>
    <entry key="ExtModeInvalidTrigBlockPath">The trigger signal ''{0}'' is not valid. Use the External Signal &amp; Triggering dialog box to specify a valid signal.</entry>
    <entry key="ExtModeInvalidTrigElementSpec">The External mode trigger element specification must be a single integer, the keyword ''last'', or the keyword ''any''</entry>
    <entry key="ExtModeInvalidTrigPortSpec">The External mode trigger port specification must be a single integer or the keyword ''last''</entry>
    <entry key="ExtModeMultipleTriggers">Multiple External mode triggers found</entry>
    <entry key="ExtModeSFAndMATLABFcnInvalidTriggers">External mode cannot use Stateflow or MATLAB Function blocks as trigger signals</entry>
    <entry key="ExtModeMustBeConnectedToStartTarget">Cannot start External mode simulation because target is not connected.</entry>
    <entry key="ExtModeOneClickNeedsSLCoder">Unable to run external mode simulation because Simulink and target hardware are not connected and Simulink Coder is not installed. To build, deploy, and start an external mode simulation, install Simulink Coder. To start a simulation of an already deployed model, connect Simulink to the target hardware.</entry>
    <entry key="ExtModeUnexpectedIncomingPacketFromTarget">External mode is terminating because Simulink received an unexpected incoming packet from target.</entry>
    <entry key="ExtModeNameTooLong">Name too long to add suffix</entry>
    <entry key="ExtModeNoHostToTarget">Signals may not be of type {0} because that type has no external mode host-to-target function registered</entry>
    <entry key="ExtModeNoTargetToHost">Objects of type {0} cannot be uploaded because that type has no external mode target-to-host function registered</entry>
    <entry key="ExtModeNoTrigSpecified">No trigger specified</entry>
    <entry key="ExtModeNotAllRequiredFieldsSet">Initialization of external mode (ExtConnect) failed to initialize all required fields (e.g., sizeofTargetReal, hostToTargetRealFcn)</entry>
    <entry key="ExtModeOpenProtocolError">External Mode Open Protocol {0} command failed</entry>
    <entry key="ExtModeOpenProtocolErrorWithStatus">External Mode Open Protocol {0} command failed with status {1,number,integer}</entry>
    <entry key="ExtModeOpenProtocolInvalidTimeSeriesData">''{0}'' cannot have data uploaded to it because one of its source signals uploaded incorrectly formatted data.  This may be due to one of the following reasons:\n \t(1) The time and data vectors are not equal length \n \t(2) The type, dimensions or complexity of the data vectors and the source signals do not match\n \t(3) The type of the time vector is not ''double''\n \t(4) The parameter ''ExtModeOpenProtocolUploadingEqualLengthVectors'' is ''on'', but the length of all data vectors are not equal</entry>
    <entry key="ExtModeOpenProtocolParamNotSupported">Parameter ''{0}'' not supported by the selected External Mode Open Protocol transport layer.</entry>
    <entry key="ExtModeOpenProtocolIntegerOnlyMismatch">Model value for ''PurelyIntegerCode'' does not match the corresponding value in the target application. Update the model value for ''PurelyIntegerCode'' and rebuild the target application.</entry>
    <entry key="ExtModeOpenProtocolDataDrop">Data dropped for one or more blocks that receive and display uploaded signals from the target application, for example, Floating Scope and Scope blocks, Spectrum Analyzer and Time Scope blocks, Display blocks, and To Workspace blocks. A possible reason is that the precision of the time variable sampled by the target application is not sufficient. Consider replacing the blocks with the Simulation Data Inspector or Dashboard blocks.</entry>
    <entry key="ExtModeTrigElementOutOfRange">The specified external mode trigger element for ''{0}'', port ''{1,number,integer}'' is either negative or out of range.  This port width is {2,number,integer}.  You specified: {3}</entry>
    <entry key="ExtModeTrigPortOutOfRange">The specified external mode trigger port for ''{0}'' is either negative or out of range.  It has {1,number,integer} port(s).  You specified: {2}</entry>
    <entry key="ExtModeTrigSigInTriggeredSubsys">An input to ''{0}'' has been specified as the trigger signal for data uploading.  Trigger signals cannot have destinations with triggered sample times</entry>
    <entry key="ExtOutSFExecAtInit">The value at the root outport ''{0}'' is being assigned by the Stateflow chart ''{1}'', when that chart has the checkbox ''Execute(enter) Chart At Initialization'' selected. This configuration is not supported by the {2}. Consider clearing the chart''s ''Execute(enter) Chart At Initialization'' checkbox, or inserting a signal conversion block immediately before the root outport, making sure the ''Exclude this block from ''Block reduction'' optimization'' checkbox is selected for that signal conversion block</entry>
    <entry key="ExternalDomainRegistrationSymbolNotFound">Registration symbol for ''{0}'' not found.  \n''{1}''</entry>
    <entry key="InvalidDomainRegistrationKey">Registration key for ''{0}'' is invalid.</entry>
    <entry key="ExternalModeNotReusableUnconditionalError"><![CDATA[When external mode simulation is chosen, the generated code is not reusable. Consider setting ''Code interface packaging'' to ''Nonreusable function'' on the Configuration Parameters > Code Generation > Interface pane]]></entry>
    <!-- ExternalModeNotReusableMultiInstanceErrorDiagnostic TopTester: test/toolbox/simulink/configsets/highlighting/DVHyperlinks/tSLEngineErrorsFixIt2.m -->
    <entry key="ExternalModeNotReusableMultiInstanceErrorDiagnostic"><![CDATA[The generated code for ''{0}'' is not reusable because external mode simulation is chosen.
    <actions exclusiveFixIts="yes">
    <action type="fixit">
    <cmd>configset.internal.fixIt(''{0}'',''CodeInterfacePackaging'',''Nonreusable function'')</cmd>
    <txt>Set <sldiag objui="configset" objparam="CodeInterfacePackaging">Code interface packaging</sldiag> to ''Nonreusable function'' (might impact referenced or referencing models)</txt>
    </action>
    <action type="fixit">
    <cmd>configset.internal.fixIt(''{0}'',''MultiInstanceErrorCode'',''None'')</cmd>
    <txt>Suppress this message by setting <sldiag objui="configset" objparam="MultiInstanceErrorCode">Multi-instance code error diagnostic</sldiag> to ''None''</txt>
    </action>
    </actions>]]>
    </entry>

    <entry key="ExternalModeCppClassProfilingNotSupportedError"><![CDATA[When external mode simulation is chosen and ''Code interface packaging'' is set to ''C++ Class'', code execution profiling is not supported. Consider setting ''CodeExecutionProfiling'' to off.]]></entry>
      
    <entry key="ExtraModelrefNoncontSignal"><![CDATA[The model block ''{0}'' is outputting a signal that has discontinuities and is feeding a block with continuous states.  To ensure correct answers, we are also tracking all discrete signals that are feeding input ports of the model block with continuous sample times.  This may result in extra solver resets. You can disable this diagnostic by setting <sldiag objui="configset" objparam="ModelReferenceExtraNoncontSigs">Extraneous discrete derivative signals</sldiag> to ''none'']]></entry>
    <entry key="FcnCallActionDataDepViolation">Data dependency violation due to use of function-call or action subsystem. The loop can be traversed in the forward direction by following the red lines and in the backward direction by following the blue lines. Green lines indicate overlapping forward and backward paths in the loop. See valid and invalid examples of function-call subsystems in &lt;a href=\"matlab:openExample('simulink_features/SimulinkSubsystemSemanticsExample'); open_system('sl_subsys_semantics/ Function-call subsystems');\"&gt;''sl_subsys_semantics''&lt;/a&gt; for additional information.</entry>
    <entry key="MessageServiceDelegationOpNew"><![CDATA[Parameter "Use dynamic memory allocation for model block instantiation" not supported when model {0} contains block {1} that sends or receives messages from a referenced model. In the Configuration Parameters > Code Generation > Interface pane, clear the "Use dynamic memory allocation for model block instantiation" check box.
    <actions exclusiveFixIts="yes">
    <action type="fixit">
    <cmd>configset.internal.fixIt(''{0}'',''UseOperatorNewForModelRefRegistration'',''off'')</cmd>
    <txt>Deselect <sldiag objui="configset" objparam="'UseOperatorNewForModelRefRegistration'"></sldiag> Use dynamic memory allocation for model block instantiation (might impact referenced or referencing models)</txt>
    </action>
    </actions>]]>
    </entry>
    <entry key="FunctionServiceDelegationOpNew"><![CDATA[Parameter "Use dynamic memory allocation for model block instantiation" not supported when model {0} contains a bus element port {1} that provides or requires a function. In the Configuration Parameters > Code Generation > Interface pane, clear the "Use dynamic memory allocation for model block instantiation" check box.
    <actions exclusiveFixIts="yes">
    <action type="fixit">
    <cmd>configset.internal.fixIt(''{0}'',''UseOperatorNewForModelRefRegistration'',''off'')</cmd>
    <txt>Deselect <sldiag objui="configset" objparam="'UseOperatorNewForModelRefRegistration'"></sldiag> Use dynamic memory allocation for model block instantiation (might impact referenced or referencing models)</txt>
    </action>
    </actions>]]>
    </entry>
    <entry key="FunctionServiceCircularDependency">Unable to generate code for model {0}. Model {0} contains model blocks {1} and {2}, which are part of a dependency loop. To break the dependency loop, ensure that a single model does not have both client and server function ports.</entry>
    <entry key="FunctionServiceUnconnectedClient">Unable to generate code for model {0} which contains a model block with an unconnected bus element port {1} that provides or requires a function. To generate code, connect the model block's port to an input or output block.</entry>
    <entry key="FcnCallActionDataDepViolationWarn">Data dependency violation due to use of function-call or action subsystem. To trace these dependencies, in ''Configuration Parameters'' > ''Diagnostics'' > ''Connectivity'' > ''Function calls'' > ''Invalid function-call connection'', choose ''error''. Note that the ''warning'' option will be deprecated in a future release. See valid and invalid examples of function-call subsystems in &lt;a href=\"matlab:openExample('simulink_features/SimulinkSubsystemSemanticsExample'); open_system('sl_subsys_semantics/ Function-call subsystems');\"&gt;''sl_subsys_semantics''&lt;/a&gt; for additional information.</entry>
    <entry key="FcnCallECPotentialPreStartOutputDiff"><![CDATA[The output of ''{0}'' may produce different results than the previous Simulink releases if ''{1}'' is not called at t = 0. Block ''{2}'' may produce non-zero outputs for zero inputs and has been inherited by the ''{3}'' execution context. In previous releases, the ''{4}'' was not inherited by the execution context and may have produced a non-zero output prior to start of the conditional subsystem. To prevent the inheritance of the context, explicitly set the sample time of ''{5}'' to the rate at which you want the signal recomputed. To turn off this warning message, deselect <sldiag objui="configset" objparam="CheckExecutionContextPreStartOutputMsg">Check preactivation output of execution context</sldiag>.]]></entry>
    <entry key="FcnCallECPotentialPreStartOutputDiffConsistentOutportInit"><![CDATA[The output of ''{0}'' may produce different results than the previous Simulink releases if ''{1}'' is not called at t = 0. Block ''{2}'' may produce non-zero outputs for zero inputs and has been inherited by the ''{3}'' execution context. In previous releases, the ''{4}'' was not inherited by the execution context and may have produced a non-zero output prior to start of the conditional subsystem. To prevent the inheritance of the context, explicitly set the sample time of ''{5}'' to the rate at which you want the signal recomputed. To turn off this warning message, deselect <sldiag objui="configset" objparam="CheckExecutionContextPreStartOutputMsg">Check preactivation output of execution context</sldiag>.]]></entry>
    <entry key="FcnCallPortGroupedBlkSrcInsideContext">The Model block ''{0}'' has function-call input(s), and its data input(s) depend on its own output(s). This may cause the input(s) of the block to change during the execution. Consider placing Function-Call Feedback Latch block(s) before corresponding input(s). Another option is to select the ''Latch input for feedback signals of function-call subsystem outputs'' parameter on all downstream Inport blocks that connect to corresponding root Inport block(s) inside the Model block ''{1}''.</entry>
    <entry key="FcnCallMdlBlkSrcInsideContext">The Model block ''{0}'' has function-call input(s), and its data input(s) depend on its own output(s). This may cause the input(s) of the block to change during the execution. Consider placing Function-Call Feedback Latch block(s) before corresponding input(s), or selecting the ''Latch input for feedback signals of function-call subsystem outputs'' parameter on corresponding Inport block(s) of the model ''{1}''.</entry>
    <entry key="FcnCallSSCycleDataDepViolation">Input data dependency violation due to function-call blocks. The following function-call blocks are involved in a cycle and do not have a common function-call initiator. To break the cycle you can use a single block such as a Stateflow chart as the initiator. When a common function-call initiator is used, all data connections between the called function-call blocks are treated as data stores (i.e., global variables) and there is no implied data dependency. You can also break the loop by inserting memory and/or unit delays in the appropriate locations. See valid and invalid examples of function-call subsystems in &lt;a href=\"matlab:openExample('simulink_features/SimulinkSubsystemSemanticsExample'); open_system('sl_subsys_semantics/ Function-call subsystems');\"&gt;''sl_subsys_semantics''&lt;/a&gt; for additional information.</entry>
    <entry key="FcnCallSSSrcInsideContext">The input(s) of the function-call subsystem ''{0}'' depend on the following source blocks, which appear within their own calling context: {1}. This dependency might cause the inputs of the subsystem to not remain fixed over the duration of the function-call. It might also lead to code generation results differing from simulation results. Consider placing Function-Call Feedback Latch block(s) before corresponding input(s), or selecting the ''Latch input for feedback signals of function-call subsystem outputs'' parameter on corresponding Inport blocks of the function-call subsystem.</entry>
    <!-- FcnCallSSSrcInsideContextStatus -->
    <entry key="FcnCallSSSrcInsideContextStatus"><![CDATA[The input(s) of one or more function-call blocks in ''{0}'' depend on source blocks which appear within their own calling context. This condition is reported as an error because in <sldiag objui="configset" objparam="FcnCallInpInsideContextMsg">Context-dependent inputs</sldiag>, you have chosen ''error''. See valid and invalid examples of function-call subsystems in &lt;a href=\"matlab:openExample('simulink_features/SimulinkSubsystemSemanticsExample'); open_system('sl_subsys_semantics/ Function-call subsystems');\"&gt;''sl_subsys_semantics''&lt;/a&gt; for additional information.]]></entry>
    <entry key="FcnCallSSSrcInsideContextGoingToExportStatus">The input(s) of one or more function-call blocks depend on source blocks which appear within their own calling context. In particular, one or more of the function-call blocks corresponds to a function being exported, and the behavior of the exported code may differ from the behavior of the subsystem. This condition is reported as an error because in ''Configuration Parameters'' > ''Diagnostics'' > ''Connectivity'' > ''Function calls'' > ''Context-dependent inputs'', you have chosen ''error''. See valid and invalid examples of function-call subsystems in &lt;a href=\"matlab:openExample('simulink_features/SimulinkSubsystemSemanticsExample'); open_system('sl_subsys_semantics/ Function-call subsystems');\"&gt;''sl_subsys_semantics''&lt;/a&gt; for additional information.</entry>
    <entry key="FcnCallSSSrcInsideContextGoingToExportTip">The input(s) of one or more function-call blocks depend on source blocks which appear within their own calling context.  In particular, one or more of the function-call blocks is a function-call subsystem being exported, and the behavior of the exported code may differ from the behavior of the subsystem. To trace these dependencies, in ''Configuration Parameters'' > ''Diagnostics'' > ''Connectivity'' > ''Function calls'' > ''Context-dependent inputs'', choose ''error''. Note that the ''warning'' option will be deprecated in a future release. See valid and invalid examples of function-call subsystems in &lt;a href=\"matlab:openExample('simulink_features/SimulinkSubsystemSemanticsExample'); open_system('sl_subsys_semantics/ Function-call subsystems');\"&gt;''sl_subsys_semantics''&lt;/a&gt; for additional information.</entry>
    <entry key="FcnCallSSSrcInsideContextTip">The input(s) of one or more function-call blocks depend on source blocks which appear within their own calling context. To trace these dependencies, in ''Configuration Parameters'' > ''Diagnostics'' > ''Connectivity'' > ''Function calls'' > ''Context-dependent inputs'', choose ''error''. Note that the ''warning'' option will be deprecated in a future release. See valid and invalid examples of function-call subsystems in &lt;a href=\"matlab:openExample('simulink_features/SimulinkSubsystemSemanticsExample'); open_system('sl_subsys_semantics/ Function-call subsystems');\"&gt;''sl_subsys_semantics''&lt;/a&gt; for additional information.</entry>
    <entry key="FcnCallSSMessageSrcInsideContext">The message input(s) of the function-call subsystem ''{0}'' depend on the following source blocks, which appear within their own calling context: {1}. This dependency might cause an infinite cycle condition where messages source from the function-call subsystem are cycling around infinitely without progressing the simulation time. Consider placing Message Delay block(s) before corresponding input(s).</entry>
    <entry key="FileNameCycle">The following subsystems are generating code into files that cause cyclic dependency problem.  Please change the file name(s) for these systems to remove the cycle</entry>
    <entry key="FileNameCycleBlockMsg">File ''{0}'' (via subsystem ''{1}'') includes file ''{2}'' (via subsystem ''{3}'')</entry>
    <entry key="FocingSFcnDFMsg">Model ''{0}'' has specified\n \tset_param(''{1}'',''TryForcingSFcnDF'',''on'');\n This setting enables a special execution mode found in Simulink 4.0 and earlier that attempts to compensate for S-functions that:\n \t(1) Specify in mdlInitializeSizes that they don''t have direct feedthrough on their input ports; and\n \t(2) In their mdlOutputs or mdlGetTimeOfNextVarHit methods they then access the corresponding input signals.\n This compensation mode can result in incorrect block execution orders for models involving S-functions within nonvirtual subsystems. Please update any S-functions in your model to specify direct feedthrough for any input port signals that are accessed in mdlOutputs() or mdlGetTimeOfNextVarHit() and then run \tset_param(''{2}'',''TryForcingSFcnDF'',''off'');\n Note, the term ''direct feedthrough'' can be misleading. To reduce the confusion, you can think of the direct feedthrough setting as a ''needs input'' setting. Specifically, if the S-function access an input signal in either mdlOutputs() or mdlGetTimeOfNextVarHit(), then the direct feedthrough flag must be set to 1 (true).\n</entry>
    <entry key="FramesNeedsSigProcLicense">''{0}'' contains one or more blocks whose ports have frame-based sampling modes. A DSP System Toolbox license is required for frame-based processing in Simulink</entry>
    <entry key="FramesNeedsSigProcLicenseInpPort"><![CDATA[Error occurred while setting sampling mode of <sldiag objui="inport" objparam="{0,number,integer}" objname="{1}">input port {0,number,integer}</sldiag> of block ''{1}'' to frame. A DSP System Toolbox license is required for frame-based processing in Simulink]]></entry>
    <entry key="FramesNeedsSigProcLicenseOutPort"><![CDATA[Error occurred while setting sampling mode of <sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">output port {0,number,integer}</sldiag> of block ''{1}'' to frame. A DSP System Toolbox license is required for frame-based processing in Simulink]]></entry>
    <entry key="FwdPropDoesNotSupportND"><![CDATA[Cannot propagate {0,number,integer}-D signal from <sldiag objui="outport" objparam="{1,number,integer}" objname="{2}">output port {1,number,integer}</sldiag> of block ''{2}'' to <sldiag objui="inport" objparam="{3,number,integer}" objname="{4}">input port {3,number,integer}</sldiag> of block ''{4}''. The latter block does not accept signals with greater than 2 dimensions (either entirely or in its current configuration).]]></entry>
    <entry key="FwdPropDoesNotSupportNDCompSig"><![CDATA[Cannot propagate composite signal containing at least one {0,number,integer}-D signal from <sldiag objui="outport" objparam="{1,number,integer}" objname="{2}">output port {1,number,integer}</sldiag> of block ''{2}'' to <sldiag objui="inport" objparam="{3,number,integer}" objname="{4}">input port {3,number,integer}</sldiag> of block ''{4}''. The latter block does not accept signals with greater than 2 dimensions (either entirely or in its current configuration).]]></entry>
    <entry key="FwdTableNotLibWarn">Cannot set forwarding table for block diagram ''{0}'' because it is not a library. Discarding the specified forwarding table information</entry>
    <entry key="FxpPointFiToNoFPSignal">Invalid assignment in ''{0}'': attempt to assign a fi object to a non-fixed-point signal</entry>
    <entry key="FxpPointInvDataTypeID">The data type id does not correspond to a Simulink builtin or fixed-point data type</entry>
    <entry key="FxpPoint_Bias_Mismatch">Invalid assignment in ''{0}'': attempt to assign a fi object of bias {1} to a fixed-point signal of bias {2}</entry>
    <entry key="FxpPoint_Frac_Length_Mismatch">Invalid assignment in ''{0}'': attempt to assign a fi object of fraction length {1,number,integer} to a fixed-point signal of fraction length {2,number,integer}</entry>
    <entry key="FxpPoint_Sign_Mismatch1">Invalid assignment in ''{0}'': attempt to assign a signed fi object to an unsigned signal</entry>
    <entry key="FxpPoint_Sign_Mismatch2">Invalid assignment in ''{0}'': attempt to assign an unsigned fi object to a signed signal</entry>
    <entry key="FxpPoint_Slope_Mismatch">Invalid assignment in ''{0}'': attempt to assign a fi object of slope {1} to a fixed-point signal of slope {2}</entry>
    <entry key="FxpPoint_Word_Length_Mismatch">Invalid assignment in ''{0}'': attempt to assign a fi object of word length {1,number,integer} to a fixed-point signal of word length {2,number,integer}</entry>
    <entry key="FxpPoint_DataType_Mismatch">Invalid assignment in ''{0}'': attempt to assign a fi object with DataType property ''{1}'', which does not match that of the signal.</entry>
    <entry key="GetCurrentTimeInExecOnly">The current simulation time for ''{0}'' can be accessed only when simulation is running</entry>
    <entry key="HalfUnsupportedForSldv">Invalid data type. Half is not supported in Simulink Design Verifier or the Fixed-Point Tool Range Analysis workflow.</entry>
    <entry key="ITVSActionSubsysMustHaveScalarIC">Simulink detected an invalid initial output. Only scalar initial output is allowed in ''{0}'' when it is in a conditionally executed subsystem ''{1}'' for which the parameter ''Propagate sizes of variable-size signals'' of ''{2}'' is set to ''Only when execution is resumed''.</entry>
    <entry key="ITVSActionSubsysVarDimsMismatch">The current dimension {0,number,integer} of the input signal at port {1,number,integer} of ''{2}'' cannot change from its previous value {3,number,integer} to the current value of {4,number,integer} at time {5}. For the ''{6}'' in the subsystem, the parameter of ''Propagate sizes of variable-size signals'' is set to ''Only when execution is resumed''. However, since the subsystem execution was already resumed prior to this time step, the signal size cannot change. The input size variation should be in sync with the time step at which the subsystem resumes the execution.</entry>
    <entry key="ITVSFcnCallSubsysVarDimsMismatch">The current dimension {0,number,integer} of the input signal at port {1,number,integer} of ''{2}'' cannot change at time {3}. For the ''{4}'' in the subsystem, the parameter of ''Propagate sizes of variable-size signals'' is set to ''Only when enabling''. However, since the subsystem was already enabled prior to this time step, the signal size cannot change. Consider changing the variation of the signal input size such that it is in sync with the time step at which the subsystem is being enabled. If this solution is insufficient, place the function-call initiator inside of an Enabled Subsystem.</entry>
    <entry key="ITVSResetSubsysVarDimsMismatch">The current dimension {0,number,integer} of the input signal at port {1,number,integer} of ''{2}'' cannot change from its previous value {3,number,integer} to the current value of {4,number,integer} at time {5}. For the ''{6}'' in the subsystem, the parameter of ''Propagate sizes of variable-size signals'' is set to ''Only when resetting''. However, since the subsystem is not being reset at this time step, the signal size cannot change. The input size variation should be in sync with the time step at which the subsystem is being reset.</entry>
    <entry key="ITVSSubsysMustHaveScalarIC">Simulink detected an invalid initial output. Only scalar initial output is allowed in ''{0}'' when it is in a conditionally executed subsystem ''{1}'' for which the parameter ''Propagate sizes of variable-size signals'' of ''{2}'' is set  to ''Only when enabling''.</entry>
    <entry key="ITVSSubsysVarDimsMismatch">The current dimension {0,number,integer} of the input signal at port {1,number,integer} of ''{2}'' cannot change from its previous value {3,number,integer} to the current value of {4,number,integer} at time {5}. For the ''{6}'' in the subsystem, the parameter of ''Propagate sizes of variable-size signals'' is set to ''Only when enabling''. However, since the subsystem was already enabled prior to this time step, the signal size cannot change. The input size variation should be in sync with the time step at which the subsystem is being enabled.</entry>

    <entry key="IgnoringDataTypeHeaderFilesForERTSfcn">Specified data type header files are ignored when generating an ERT S-function wrapper</entry>
    <entry key="IllegalValue">Illegal value for ''{0}''</entry>
    <entry key="ImpIterBlkSrcIsNotInportBlk"><![CDATA[Invalid source for <sldiag objui="inport" objparam="{0,number,integer}" objname="{1}">input port {0,number,integer}</sldiag> of Implicit Iterator block ''{1}''. Input ports of Implicit Iterator block must connect directly to Inport blocks.]]></entry>
    <entry key="PerturbJacNotSupportedInForEachSS">This subsystem does not support the Jacobian because one block inside the subsystem has a discrete state, but does not provide an analytical Jacobian.</entry>
    <entry key="JacWarningForStateInForEachSSOfOriginalModel">The Jacobian only reflects the discrete states of blocks that are outside the For Each subsystems in the original model.</entry>
    <entry key="IncorrectNumRTPWritten">Error in mdlRTW of S-function ''{0}''. This function wrote {1,number,integer} run-time parameters whereas it has registered {2,number,integer} run-time parameters</entry>
    <entry key="InitStatesInForEachSSNotSupported">Model ''{0}'' has blocks with states inside one or more subsystems which contain a For Each block. Initialization of such states is not supported.</entry>
    <entry key="InitStatesInArrayFormatShouldBeAvoided"><![CDATA[Initial states for model ''{0}'' are specified as an array. Rapid accelerator target will rebuild if initial state values specified in array format are changed. Consider using the structure format that allows tuning of initial states without rebuilding.\nThis warning can be disabled using the setting <sldiag objui="configset" objparam="InitInArrayFormatMsg">Initial state is array</sldiag>.]]></entry>
    <entry key="InitStatesInRefMdlNotSupported">Model ''{0}'' has model blocks with states. Initialization of these states in referenced models is not supported if the initial state is specified in array format.</entry>
    <entry key="InjectionDataMethodCalledNotProperly">For the engine interface method "getInjectionDataForSignalBasedLinearization" to execute properly, the model parameter "CompileForInfoOnSignalBasedLinearization" should be set to "on". Make sure that  you run the command "set_param(mdl,''CompileForInfoOnSignalBasedLinearization'',''on'');" before calling the method.</entry>
    <entry key="InputDimsMismatch"><![CDATA[The current dimensions of input port {0,number,integer} and <sldiag objui="inport" objparam="{1,number,integer}" objname="{2}">input port {1,number,integer}</sldiag> of ''{2}'' are different at time {3}. All input ports must have the same dimensions throughout the model execution.]]></entry>
    <entry key="InputDimsModeInconsistent"><![CDATA[The dimension mode of input port {0,number,integer} and <sldiag objui="inport" objparam="{1,number,integer}" objname="{2}">input port {1,number,integer}</sldiag> of ''{2}'' are different. All input ports must have the same dimension mode.]]></entry>
    <entry key="InputNotConnected"><![CDATA[<sldiag objui="inport" objparam="{0,number,integer}" objname="{1_SLObject}">Input port {0,number,integer}</sldiag> of block ''{1_SLObject}'' is not connected.]]></entry>
    <entry key="InputPortFrameDataMismatch"><![CDATA[Input port frame data mismatch.  <sldiag objui="inport" objparam="{0,number,integer}" objname="{1}">Input port {0,number,integer}</sldiag> of ''{1}'' expects {2} data. However, it is driven by {3} data]]></entry>
    <entry key="InputPortMultiDDimsDisallowed"><![CDATA[Cannot set dimensions of <sldiag objui="inport" objparam="{0,number,integer}" objname="{1}">input port {0,number,integer}</sldiag> of ''{1}'' to {2}. This block is not set up to handle signals of dimensions greater than 2 dimensions.]]></entry>
    <entry key="InputPortTrailingUnityDimsDisallowed"><![CDATA[Cannot initialize dimensions of <sldiag objui="inport" objparam="{0,number,integer}" objname="{1}">input port {0,number,integer}</sldiag> of ''{1}'' to {2}. When the number of dimensions of a matrix exceeds 2, the size of the trailing dimension must be greater than 1.]]></entry>
    <entry key="InsertBlkAtInportIntroduceNewTsInTrigSys"><![CDATA[A Rate Transition block cannot be automatically inserted in a triggered or function-call subsystem because it would introduce an invalid rate in that subsystem. Manually inserting a Rate Transition block at <sldiag objui="inport" objparam="{0,number,integer}" objname="{1}">input port {0,number,integer}</sldiag> of block ''{1}'' can fix this error.]]></entry>
    <entry key="InsertBlkAtOutportIntroduceNewTsInTrigSys"><![CDATA[A Rate Transition block cannot be automatically inserted in a triggered or function-call subsystem because it would introduce an invalid rate in that subsystem. Manually inserting a Rate Transition block at <sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">output port {0,number,integer}</sldiag> of block ''{1}'' can fix this error.]]></entry>
    <entry key="InsertBlkAtVirtualBlkInput"><![CDATA[Simulink detected an unspecified rate transition. However, Simulink cannot automatically insert a Rate Transition block upstream of a virtual block. Manually insert a Rate Transition block at <sldiag objui="inport" objparam="{0,number,integer}" objname="{1}">input port {0,number,integer}</sldiag> of block ''{1}''.]]></entry>
    <entry key="InsertBlkAtVirtualBlkOutput"><![CDATA[Simulink detected an unspecified rate transition. However, Simulink cannot automatically insert a Rate Transition block downstream of a virtual block. Manually insert a Rate Transition block at <sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">output port {0,number,integer}</sldiag> of block ''{1}''.]]></entry>
    <!-- InsertRTBTypeMismatch2Blks TopTester: test/toolbox/simulink/configsets/highlighting/DVHyperlinks/tSLEngineErrorsOpen.m -->
    <entry key="InsertRTBTypeMismatch2Blks"><![CDATA[Unable to insert a rate transition block to ensure deterministic data transfer between <sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">output port {0,number,integer}</sldiag> of block ''{1}'' and <sldiag objui="inport" objparam="{2,number,integer}" objname="{3}">input port {2,number,integer}</sldiag> of block ''{3}'' for one of the following reasons: \n - One of the blocks runs at an asynchronous rate; \n - Sample time of one of the blocks has a nonzero offset; \n - Sample times of two blocks are not an integer multiple pair.
    <actions exclusiveFixIts="yes">
    <action type="suggestion">
    <cmd>configset.internal.open(''{1}'',''InsertRTBMode'')</cmd>
    <txt>Set ''Deterministic data transfer'' to ''Whenever possible'' or ''Never (minimum delay)''</txt>
    </action>
    </actions>]]>
    </entry>
    <entry key="InvActionDuringCallback">Cannot change model ''{0}'' while in a callback</entry>
    <entry key="InvAlgLoopInConstRateTask">Unable to solve algebraic loop in model ''{0}'' because all blocks in the loop have a constant sample time.</entry>
    <entry key="InvAlgLoopWithConstTsBlocks">Unable to solve algebraic loop in model ''{0}'' because one or more blocks in the loop with a constant sample time are connected to constant sample time ports of blocks such as ''{1}'' that is outside this loop.</entry>
    <entry key="InvAlgLoopWithMultiTaskBlocks"><![CDATA[Unable to solve algebraic loop in multi-tasking model ''{0}'' because one or more blocks in the loop has multiple rates.
    <actions exclusiveFixIts="yes">
    <action type="fixit">
    <cmd>set_param_action(''{0}'', ''EnableMultiTasking'', ''off'');</cmd>
    <txt>Consider unselecting configuration option <sldiag objui="configset" objparam="EnableMultiTasking">''Treat each discrete rate as a separate task''</sldiag> to change the model to single tasking mode.</txt>
    </action>
    </actions>]]>
    </entry>
    <entry key="InvAlgLoopWithAsyncTsBlocks">Unable to solve algebraic loop in model ''{0}'' because one or more blocks in the loop has multiple rates including asynchronous sample times.</entry>
    <entry key="InvAsyncTimeSourceNotBaseRate">Invalid time source choice of S-function ''{0}'' driving function-call input port ''{2}'' of Model block ''{1}''. The referenced model contains blocks that need absolute time, so it requires that the S-function to set this option to SS_TIMESOURCE_BASERATE.</entry>
    <entry key="InvAsyncCustomFlag">The flag SS_OPTION_ASYNCHRONOUS_CUSTOM for S-function ''{0}'' is not supported for its function-call destination ''{1}''.</entry>
    <entry key="ModelRefInitAsyncPriorityNotSpecified">The block ''{0}'' must specify asynchronous task priority of {3,number,integer} to match the priority specified at input port ''{2}'' of function-call Model block ''{1}''.</entry>
    <entry key="ModelRefInitAsyncPriorityMismatch">The asynchronous task priority {1,number,integer} specified by block ''{0}'' does not match the priority {4,number,integer} specified at input port ''{3}'' of function-call Model block ''{2}''.</entry>
    <entry key="ModelRefInvalidInitAsyncPriority">Specification of asynchronous task priority {1,number,integer}  by S-function ''{0}'' is invalid when concurrent tasks are enabled.</entry>
    <entry key="ModelRefFcnPortHasMultipleInitiators">Model block ''{0}'' is driven by an asynchronous function call at input port ''{1}''. An asynchronous function call that directly or indirectly involves multiple asynchronous function calls is not allowed to drive a model block input port.</entry>

    <entry key="InvBlkInputPortTs">Sample time [{0}, {1}] of ''{2}'' input port
    number {3,number,integer} is invalid. Sample time must be a real double
    scalar (period) or a real double vector of length 2 (period, offset); where
    period, offset must be finite and non-negative and offset must be less than
    period. </entry>

    <entry key="InvBlkOutputPortTs">Sample time [{0}, {1}] of ''{2}'' output
    port number {3,number,integer} is invalid. Sample time must be a real double
    scalar (period) or a real double vector of length 2 (period, offset); where
    period, offset must be finite and non-negative and offset must be less than
    period.</entry>

    <entry key="InvBlkTs">The period ({0}) and offset ({1}) specified as sample
    time {2,number,integer} of ''{3}'' is invalid. Sample time must be a real double
    scalar (period) or a real double vector of length 2 (period, offset); where
    period, offset must be finite and non-negative and offset must be less than
    period. </entry>

    <entry key="InvBlkUsingElapsedTimeInFcnCallSubsys">Function-call subsystem ''{0}'' cannot contain block ''{1}'' because this block requires a service that maintains the time that has elapsed between two consecutive executions. Since the function-call subsystem is being executed multiple times at t = {2}, the concept of elapsed time is not well-defined between two such executions.</entry>
    <entry key="InvBlkUsingElapsedTimeInIteratorSubsys">Iterator subsystem ''{0}'' cannot contain block ''{1}'' because this block requires a service that maintains the time that has elapsed between two consecutive executions. Since the iterator subsystem can be executed multiple times at a given time step, the concept of elapsed time is not well-defined between two such executions.</entry>
    <entry key="InvBlockAdded">Only Inport, Outport, Connection Port, Subsystem and Model blocks can be added to Variant Subsystem block ''{0}''.</entry>
    <entry key="InvBlockDelete">Cannot delete ''{0}'' while simulation is running</entry>
    <entry key="InvBlockNameInInitStateStruct" note="stringDatatypeUpdate">Unable to load the specified initial state for model ''{0}''. The {1}({2,number,integer}).{3} field in the initial state structure must be a character vector specifying the path to a block in the model.</entry>
    <entry key="InvCStateChange">Cannot change number of continuous states of ''{0}'' while simulation is running</entry>
    <entry key="InvCallForFeature" note="stringDatatypeUpdate">Invalid call to ''slInternal'' with the ''slfeature'' option. This option requires a valid suboption</entry>
    <entry key="InvCallForFeatureName">Invalid slfeature name ''{0}'' specified</entry>
    <entry key="IncompatibleTypeForInplace">Input and output types are incompatible for in-place replacement.</entry>
    <entry key="InplaceVardimNotSupported">''{0}'' uses variable-size in-place input and output signals which are not supported.</entry>
    <entry key="InvCommandDuringPreLoadFcnCallback">Cannot execute command ''{0}'' for  model ''{1}'' while processing PreLoadFcn callback</entry>
    <entry key="InvDFeedChange">Cannot change direct feedthrough of ''{0}'' while simulation is running</entry>
    <entry key="InvDStateChange">Cannot change number of discrete states of ''{0}'' while simulation is running</entry>
    <entry key="InvDisallowConstTsChange">Cannot change disallow_constant_ts flag of ''{0}'' while simulation is running</entry>
    <entry key="InvCompDiscSampleTime"><![CDATA[ Invalid sample time propagated to ''{0}''. You can avoid this error by specifying a fixed discrete sample time in the source of the input signal. For more information, see <a href="matlab:helpview([docroot ''/simulink/helptargets.map''],''specifying_sample_time'')">"How to specify the sample time"</a>.]]></entry>
    <entry key="InvUserDiscSampleTime">The block ''{0}'' does not permit sample time {1}. Enter a discrete or inherited sample time in ''{2}''.</entry>
    <entry key="InvElementInInitStateStruct">Unable to load the specified initial state for model ''{0}''. BlockName/BlockPath of the element at index {1,number,integer} in the initial state is invalid</entry>
    <entry key="InvExtModeMexFile">External mode MEX-file ''{0}'' does not exist or is not on the MATLAB path. Note that the MEX-file name entered should not have a file extension</entry>
    <entry key="InvExtModeMexFileArgs">Error occurred while parsing External Mode MEX-file arguments ''{0}''.</entry>
    <entry key="InvExtModeParamVectName">Invalid MATLAB variable name specified for the ''ExtModeParamVectName'' property</entry>
    <entry key="InvFMexTsLen">Sample times (TS) matrix returned by FORTRAN MEX S-function ''{0}'' in ''{1}'' must be a matrix of dimension {2,number,integer}x2.</entry>
    <entry key="InvFMexTsMatrix">Invalid sample times (TS) matrix returned by  FORTRAN MEX S-function ''{0}'' in ''{1}''.</entry>
    <entry key="InvFcnCallSSDataInput"><![CDATA[Function-call block data dependency violation.\n<sldiag objui="inport" objparam="{0,number,integer}" objname="{1}">Input port {0,number,integer}</sldiag> of function-call block ''{1}'' is driven by ''{2}''. This driver must be executed before the function-call initiator ''{3}'' to ensure that the output of the driver is valid when the function-call block executes. However, Simulink cannot execute the driver before the function-call initiator because of a data dependency between the output of the function-call initiator and the driver. Note, the number of function-calls between the initiator and the block it is executing is {4,number,integer}.  See Subsystem Examples in the Simulink library for valid and invalid examples of function-call blocks.]]></entry>
    <entry key="InvFcnCallSSDataInputNoObj"><![CDATA[Function-call block data dependency violation.\n<sldiag objui="inport" objparam="{0,number,integer}" objname="{1}">Input port {0,number,integer}</sldiag> of function-call block ''{1}'' is driven by ''{2}''. This driver must be executed before the function-call initiator ''{3}'' to ensure that the output of the driver is valid when the function-call block executes. However, Simulink cannot execute the driver before the function-call initiator because of a data dependency between the output of the function-call initiator and the driver. Note, the number of function-calls between the initiator and the block it is executing is {4,number,integer}. See Subsystem Examples in the Simulink library for valid and invalid examples of function-call blocks.]]></entry>
    <entry key="InvFieldInInitStateStruct">Unable to load the specified initial state for model ''{0}''. The initial state must be a structure containing a {1} structure array. The {2} structure should have the following fields: ''{3}'', ''{4}'', and ''{5}''</entry>
    <entry key="InvInputPortChange">Cannot change input port properties of ''{0}'' while simulation is running</entry>
    <entry key="InvLabelInInitStateStruct" note="stringDatatypeUpdate">Unable to load the specified initial state for model ''{0}''. {1} field of the element at index ({2,number,integer}) in the initial state must be a character vector specifying a valid state label</entry>
    <entry key="InvLineAdded">A line cannot be added to Variant Subsystem block ''{0}''.</entry>
    <entry key="InvLinearAnalysisAttrChange"><![CDATA[Cannot change linear analysis attributes of <sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">output port {0,number,integer}</sldiag> of ''{1}'' while simulation is running]]></entry>
    <entry key="InvMFileTsLen">Sample times (TS) matrix returned by MATLAB S-function ''{0}'' in ''{1}'' must be a matrix of dimension {2,number,integer}x2.</entry>
    <entry key="InvMFileTsMatrix">Invalid sample times (TS) matrix returned by MATLAB S-function ''{0}'' in ''{1}''.</entry>
    <entry key="InvMatlFeatureCalledViaSlFeature">slfeature cannot be used as a gateway to feature ''{0}''. This feature was either (a) not registered from Simulink, or (b) has special callbacks that cannot be invoked through this gateway</entry>
    <entry key="InvMdlRefFieldInInitStateStruct">Unable to load the specified initial state for model ''{0}''. The {1}({2,number,integer}).{3} field in the initial state structure must be a logical scalar value</entry>
    <entry key="InvMemLayoutConnStatePort">Invalid connection to ''{0}'' input port {1,number,integer} from the state port of ''{2}''. Only signals from data output ports can be connected to this block</entry>
    <entry key="InvMemLayoutConnectType">Invalid memory layout connection setting found in ''{0}'' output port {1,number,integer}. Please contact MathWorks for assistance with this error message</entry>
    <entry key="InvMemLayoutLoop">Invalid loop involving blocks {0}</entry>
    <entry key="InvMemLayoutPartialPortSrc"><![CDATA[Invalid partial port connection found between memory layout block ''{0}'' <sldiag objui="inport" objparam="{1,number,integer}" objname="{0}">input port {1,number,integer}</sldiag> and its source(s). Please contact MathWorks for assistance with this error message]]></entry>
    <entry key="InvModeVectChange">Changing the number of elements in the mode vector of ''{0}'' during simulation is not supported.</entry>
    <entry key="InvModelBusy">Cannot close the model ''{0}'' while processing a callback or a parameter evaluation.</entry>
    <entry key="InvModelChange">Cannot change the model ''{0}'' while the simulation is running</entry>
    <entry key="InvModelChangeInFastRestart">Cannot change the model ''{0}'' while it is initialized in Fast Restart. Click &lt;a href=\"matlab:set_param(bdroot,'FastRestart','off')\"&gt;here&lt;/a&gt; to disable Fast Restart</entry>
    <entry key="InvModelSimDuringClose">Unable to simulate model ''{0}'' while the model is being closed.</entry>
    <entry key="InvSimCommandArgumentsForFastRestart">The following parameters are not supported by the sim command when Fast Restart is enabled: ''{0}''</entry>
    <entry key="InvModelClose">Cannot close the model ''{0}'' when it is being compiled or while the simulation is running</entry>
    <entry key="InvModelCloseWhenInitializedInFastRestart">Cannot close the model ''{0}'' when it is initialized in Fast Restart</entry>
    <entry key="InvModelCloseDuringSave">Cannot close the model ''{0}'' while it is being saved</entry>
    <entry key="InvModelInitingModelWS">Cannot close the model ''{0}'' while initializing the model workspace</entry>
    <entry key="InvModelCompileWhenInitingModelWS">Unable to compile model ''{0}'' during initialization of the model workspace.</entry>
    <entry key="InvModelUdim">{0}Invalid input vector length ({1,number,integer}) provided to ''{2}'', a length of {3,number,integer} is required</entry>
    <entry key="InvNameChangeDuringLoad">Cannot change name of block diagram ''{0}'' to ''{1}'' when it is being loaded. Name changes are allowed only after the block diagram is loaded fully</entry>
    <entry key="InvNumPortsChange">Cannot change number of ports of ''{0}'' while simulation is running</entry>
    <entry key="InvOptionForFeature">Invalid sub-option ''{0}'' provided in call to ''slInternal'' with the ''slfeature'' option</entry>
    <entry key="InvOptionForFeatureGetSet">Invalid call to get/set slfeature</entry>
    <entry key="InvOptionForFeatureStats">Invalid additional input arguments provided for sub-option ''stats'' in call to ''slInternal'' with the ''slfeature'' option. No additional arguments are expected</entry>
    <entry key="InvOutHasDiscontChange">Cannot change output_has_discontinuities flag of ''{0}'' while simulation is running</entry>
    <entry key="InvParamComplexityChange">Cannot change complexity (real or complex) of parameter {0,number,integer} in ''{1}'' while the simulation is running</entry>
    <entry key="InvParamDTypeChange">Cannot change data type of parameter {0,number,integer} in ''{1}'' while the simulation is running</entry>
    <entry key="InvParamWidthChange">Cannot change the width of parameter {0,number,integer} in ''{1}'' while simulation is running</entry>
    <entry key="InvPortCharChange">Cannot change port characteristics of ''{0}'' while simulation is running</entry>
    <entry key="InvPortDimsChange">Cannot change port dimensions of ''{0}'' while simulation is running</entry>
    <entry key="InvPriOnBEP">Priorities cannot be specified on In Bus Element blocks, or Out Bus Element blocks inside non-virtual subsystems. Ignoring priority {0,number,integer} specified on block ''{1}''.</entry>
    <entry key="InvPriOnFcnCallSS">Ignoring priority {0,number,integer} specified on function-call block ''{1}''. Priorities cannot be specified on function-call blocks since their execution is controlled by their function-call initiators.</entry>
    <entry key="InvPriOnActionSS">Ignoring priority {0,number,integer} specified on Action subsystem ''{1}''. Priorities cannot be specified on Action subsystems since their execution is controlled by If or Switch Case blocks.</entry>
    <entry key="InvPriOnIteratorBlock">Ignoring priority {0,number,integer} specified on For Iterator or While Iterator block ''{1}''. Priorities cannot be specified on an Iterator block since it must be the first block to execute inside the For Iterator or While Iterator Subsystem.</entry>
    <entry key="InvPriOnMergeBlock">Ignoring priority {0,number,integer} specified on Merge block ''{1}''. Priorities cannot be specified on Merge blocks since their execution is controlled by their input ports sources.</entry>
    <entry key="InvPriOnInjInportOutportBlk">Ignoring priority {0,number,integer} specified on Injector Inport/Outport Block ''{1}''. Priorities cannot be specified on Injector Inport/Outport blocks.</entry>
    <entry key="InvPriOnMultiTaskBlock">Ignoring priority {0,number,integer} specified on block ''{1}'' that executes in multiple tasks.</entry>
    <entry key="InvPriOnIRTFunction">Ignoring priority {0,number,integer} specified on Initialize, Reinitialize, Reset or Terminate Function block ''{1}''. Execution of an Initialize, Reinitialize, Reset or Terminate Function block is controlled by its scheduler.</entry>
    <entry key="InvPriOnSimulinkFunction">Ignoring priority {0,number,integer} specified on Simulink function ''{1}''. Priorities cannot be specified on Simulink functions since their execution is controlled by corresponding Function Caller blocks.</entry>
    <entry key="InvPriOnVirtBlock">Ignoring priority {0,number,integer} specified on {1} ''{2}''. Priorities cannot be specified on virtual blocks.</entry>
    <entry key="InvCheckActDstOKToReadInputInStart">Information not available because the owner block ''{0}'' of the specified output port is virtual block or replaced block. Please specify an output port corresponding to a non-virtual block or a non-replaced block.</entry>
    <entry key="InvRTWGenSettingsYESNOType">The value for the RTWGenSetting field, ''{0}'', can only be ''yes'' or ''no''</entry>
    <entry key="InvRTWIdLen">Invalid length specified for the identifiers (see the Code Generation ''Identifiers'' of the Configuration Parameters dialog). Identifier length must be greater than or equal to {0,number,integer}</entry>
    <entry key="InvRapidAccelRTPOpt">Invalid specification of Rapid Accelerator Parameter sets. Note that you need to set the option ''RapidAcceleratorUpToDateCheck'' to ''off''</entry>
    <entry key="InvRapidAccelUpdateCheckOpt">Invalid Rapid Accelerator Update Check option</entry>
    <entry key="InvRetForFeature">Invalid number of return values for call to ''slInternal'' with the ''slfeature'' option</entry>
    <entry key="InvReturnWkspOutputOpt">Invalid value for the option ReturnWorkspaceOutputs</entry>
    <entry key="InvSFcnCall_CommonInit">Invalid configuration for block ''{0}''. The function-calls exported on input ports ''{1,number,integer}'' and ''{2,number,integer}'' are not driven by a common function-call initiator</entry>
    <entry key="InvSFcnCall_InlinedInAccel">Unable to simulate S-Function block ''{0}'' in accelerator mode because its function-call input port {1,number,integer} is driven by block ''{2}'' that is not a noninlined S-function. An S-function is identified as noninlined if it does not use TLC in accelerator mode.</entry>
    <entry key="InvSFcnCall_RTWNotSupported">The S-Function block ''{0}'' does not support code generation because the block is configured to export function calls</entry>
    <entry key="InvSFcnStructParamDType">Invalid value for parameter {0,number,integer} in ''{1}'' because its data type does not match the structure data type that was used when the S-Function was generated</entry>
    <entry key="InvSaveMdlBeforeSaveAs">Cannot export the model to a previous version because it has unsaved changes. Save the model before proceeding.</entry>
    <entry key="MDXNotSupportExportToPrevious">Cannot export a model which uses system target file "mdx.tlc" to a release older than R2020a.</entry>
    <entry key="ExportSubsystemUnsupportedRelease">Cannot export a subsystem model to a release older than R2019b.</entry>
    <entry key="InvScopeArrayFormat1">''{0}'' has more than one input port and can only log multiport data if you set the ''Format'' parameter to ''Structure'' or ''Structure with time'' and not ''Array''. This parameter is in the ''Data history'' tab of the ''Scope Parameters'' dialog. This dialog can be chosen from the ''Scope'' menu.</entry>
    <entry key="InvScopeArrayFormat2">The input to ''{0}'' is a matrix signal. A matrix signal can only be logged if you set the ''Format'' parameter to ''Structure'' or ''Structure with time'' and not ''Array''. This parameter is in the ''Data history'' tab of the ''Scope Parameters'' dialog. This dialog can be chosen from the ''Scope'' menu.</entry>
    <entry key="InvSignalDims">Dimensions specified in ''{0}'' are invalid. Dimensions must either be inherited (set to -1) or specified as a vector containing positive integer values.</entry>
    <entry key="InvSignalDimsDataType"><![CDATA[Dimensions specified in ''{0}'' have an invalid data type. Dimensions must be specified with a <a href="matlab:helpview([docroot ''/simulink/ug/simulink_ug.map''], ''dataTypes'')">Simulink built-in data type</a>.]]></entry>
    <entry key="InvSignalDimsWidth">Error in port widths or dimensions.  The dimension ''{0}'' specified in ''{1}'' must specify a size between 1 and {2,number,integer}.</entry>
    <entry key="InvSimCommandDuringPreLoadFcnCallback">Cannot execute sim command for  model ''{0}'' while processing PreLoadFcn callback</entry>
    <entry key="InvStatePortUsage">State ports can only be used to break algebraic loops or to "hand-off" states between systems.  Use the output port rather than the state port of ''{0}'' as the source of the signal routed (either by direct or virtual connection) to ''{1}''</entry>
    <entry key="InvSubsystemResetInputSampleTime">The sample time of the reset signal entering subsystem ''{0}'' is different from the sample time of the subsystem. Consider inserting a Rate Transition block at the reset input port of the subsystem.</entry>
    <entry key="InvSupAliasTypeChange">Cannot change supports_alias_data_types flag of ''{0}'' while simulation is running</entry>
    <entry key="InvTnext">Time of next hit, {0}, returned by S-function ''{1}'' in ''{2}'' must be greater than previous time hit value of {3}.</entry>
    <entry key="InvTnextForM">Time of next hit, {0}, returned by S-function ''{1}'' in ''{2}'' during flag={3,number,integer} call must be greater than previous time hit value of {4}.</entry>
    <entry key="InvTrigSignal">''{0}'' that defines the trigger signal must be configured for data logging</entry>
    <entry key="InvTsChange">Cannot change sample time of ''{0}'' while simulation is running.</entry>
    <entry key="InvValForFeatureSet">Integer scalar value must be specified while trying to set slfeature ''{0}''</entry>
    <entry key="InvValuesComplexityInInitStateStruct">Type mismatch in the initial state for model ''{0}''. The {1}({2,number,integer}).{3} field in the initial state structure is complex valued, whereas the corresponding state ''{4}'' in block ''{5}'' is not complex valued</entry>
    <entry key="InvValuesDataTypeInInitStateStruct">Data type mismatch in the initial state for model ''{0}''. The {1}({2,number,integer}).{3} field in the initial state structure is of type {4}, whereas the corresponding state ''{5}'' in block ''{6}'' is of type {7}.</entry>
    <entry key="InvValuesInInitStateStruct">Unable to load the specified initial state for model ''{0}''. The {1}({2,number,integer}).{3} field in the initial state structure must be a finite numeric array</entry>
    <entry key="InvValuesInInitStateStructFixedPt">Unable to load fixed-point data for field {0}({1,number,integer}).{2} in the initial state structure. Use Dataset format to load fixed-point initial state data.</entry>
    <entry key="InvValuesInInitStateRaccelFixedPt">Unable to load fixed-point data for 'values' field at index ({0,number,integer}) in the initial state. Fix point data type is not supported for loading initial states.</entry>
    <entry key="InvValuesInInitStateRaccelHalf">Unable to load half-precision data for 'values' field at index ({0,number,integer}) in the initial state. Half data type is not supported for loading initial states.</entry>
    <entry key="InvValuesInInitState">Unable to load data for 'values' field at index ({0,number,integer}) in the initial state. 'values' field in the initial state must be a finite numeric or logical array.</entry>
    <entry key="InvValuesSizeInInitStateStruct">Size mismatch in the initial state for model ''{0}''. The {1}({2,number,integer}).{3} field in the initial state structure has {4,number,integer} element(s), whereas the corresponding state ''{5}'' in block ''{6}'' has {7,number,integer} element(s)</entry>
    <entry key="InvVarTsLoc">''{0}'' is not allowed within conditionally executed subsystems since it contains a variable step size sample time.</entry>
    <entry key="InvVectorModeChange">Cannot change vector/matrix operation mode of ''{0}'' while simulation is running</entry>
    <entry key="InvalidBlockConnection">Unexpected or invalid block connection.  This can arise when a library block changes its underlying implementation to use a new domain that is incompatible with the original implementation.  Check and reconfigure block connections to use a consistent domain.</entry>
    <entry key="UnknownCharacterEncoding">Unknown character encoding ''{0}'' specified for model ''{1}''.</entry>
    <entry key="InvalidCondInput"><![CDATA[S-function ''{0}'' indicated that its <sldiag objui="inport" objparam="{1,number,integer}" objname="{0}">input port {1,number,integer}</sldiag> is conditionally needed in the output function. However, the input port direct feed through flag is false. That is, it does not need its input in the output function. This is invalid.]]></entry>
    <entry key="InvalidDimFromETVSSubsysIC">Invalid dimension detected: The initial output of ''{0}'' specifies that the output dimension of {1,number,integer} is {2,number,integer}, which exceeds the maximum dimension {3,number,integer}.</entry>
    <entry key="InvalidDtypeIDFromDataDictionary">Invalid type ID generated for the type ''{0}'' by data dictionary.</entry>
    <entry key="InvalidElementName">Element with name ''{0}'' exists</entry>
    <entry key="InvalidElementType">Invalid element type</entry>
    <entry key="InvalidICForBusWithVarDimsElements">Initial output of ''{0}'' block does not support a bus with variable size elements.</entry>
    <entry key="InvalidInitialDimensions_sds">Invalid port initial dimension.  Dimension of {0} port {1,number,integer} of ''{2}'' has not been set.</entry>
    <entry key="InvalidInputTypeForProdWithVardims">The input to ''{0}'' is a variable-size signal with a data type of fixed-point with non-zero bias and/or slope. Product blocks do not support this input. If you wish to use fixed-point data type, consider changing the bias to zero and/or using unitary slope.</entry>
    <entry key="InvalidInputTypeForSumWithVardims">The input to ''{0}'' is a variable-size signal with a data type of fixed-point with non-zero bias. Sum blocks do not support this input. If you wish to use fixed-point data type, consider changing the bias to zero.</entry>
    <entry key="InvalidInputVariableSizeSignal"><![CDATA[The signal connected to the <sldiag objui="inport" objparam="{0,number,integer}" objname="{1}">input port {0,number,integer}</sldiag> of block ''{1}'' is a variable-size signal, which is currently disabled for code generation.
    <actions exclusiveFixIts="yes">
    <action type="fixit">
    <cmd>configset.internal.fixIt(''{1}'',''SupportVariableSizeSignals'',''on'')</cmd>
    <txt>Select <sldiag objui="configset" objparam="SupportVariableSizeSignals">Support variable-size signals</sldiag> (might impact referenced or referencing models)</txt>
    </action>
    </actions>]]>
    </entry>
    <entry key="InvalidInputVariableSizeSignalInRowMajor"><![CDATA[The signal connected to the <sldiag objui="inport" objparam="{0,number,integer}" objname="{1}">input port {0,number,integer}</sldiag> of block ''{1}'' is a variable-size signal, which is not currently supported for code generation with row-major array layout.]]></entry>
    <entry key="NDDynamicArrayInputSignalInRowMajor"><![CDATA[The signal connected to the <sldiag objui="inport" objparam="{0,number,integer}" objname="{1}">input port {0,number,integer}</sldiag> of block ''{1}'' is a multidimensional dynamic array signal, which is not currently supported for code generation with row-major array layout.]]></entry>
    <entry key="InvalidMemSecForSystem">Invalid memory section ''{0}'' for ''{1}'' specified in the Subsystem Parameters dialog of block ''{2}''. The memory section package ''{3}'' is loaded in Embedded Coder Dictionary. Please select memory section from ''{3}'' package</entry>
    <entry key="InvalidMemSecForSystemDefaults">Invalid memory section ''{0}'' for ''{1}'' specified in the Configuration Parameters dialog of block diagram ''{2}''. The memory section package is ''{3}''</entry>
    <entry key="InvalidModelArgument">''{0}'' is not a valid argument</entry>
    <entry key="InvalidModelFlag">Simulink model ''{0}'' was called with an invalid flag</entry>
    <entry key="InvalidModelFlagOption">''{0}'' is an invalid flag option</entry>
    <entry key="InvalidModelOption">''{0}'' is an invalid option</entry>
    <entry key="InvalidNumDataStores">Number of DataStores for ''{0}'' cannot be negative</entry>
    <entry key="InvalidNumDworks">Number of Dworks for ''{0}'' cannot be negative</entry>
    <entry key="InvalidNumInputPorts">Number of input ports for ''{0}'' cannot be negative</entry>
    <entry key="InvalidNumModelArg">Simulink model ''{0}'' was called with incorrect number of arguments</entry>
    <entry key="InvalidNumOutputPorts">Number of output ports for ''{0}'' cannot be negative</entry>
    <!-- InvalidOutputVariableSizeSignal TopTester: test/toolbox/simulink/configsets/highlighting/DVHyperlinks/tSLEngineErrorsFixIt3.m -->
    <entry key="InvalidOutputVariableSizeSignal"><![CDATA[The signal connected to the <sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">output port {0,number,integer}</sldiag> of block ''{1}'' is a variable-size signal, which is currently disabled for code generation.
    <actions exclusiveFixIts="yes">
    <action type="fixit">
    <cmd>configset.internal.fixIt(''{1}'',''SupportVariableSizeSignals'',''on'')</cmd>
    <txt>Select <sldiag objui="configset" objparam="SupportVariableSizeSignals">Support variable-size signals</sldiag> (might impact referenced or referencing models)</txt>
    </action>
    </actions>]]>
    </entry>
    <entry key="InvalidOutputVariableSizeSignalInRowMajor"><![CDATA[The signal connected to the <sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">output port {0,number,integer}</sldiag> of block ''{1}'' is a variable-size signal, which is not currently supported for code generation with row-major array layout.]]></entry>
    <entry key="NDDynamicArrayOutputSignalInRowMajor"><![CDATA[The signal connected to the <sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">output port {0,number,integer}</sldiag> of block ''{1}'' is a multidimensional dynamic array signal, which is not currently supported for code generation with row-major array layout.]]></entry>
    <entry key="InvalidPassThroughInputIdx">The input port index {0,number,integer} specified in ''ssSetInputDimsSameAsOutputDims'' for the S-Function block ''{1}'' does not exist.</entry>
    <entry key="InvalidPassThroughOutputIdx">The output port index {0,number,integer} specified in ''ssSetInputDimsSameAsOutputDims'' for the S-Function block ''{1}'' does not exist.</entry>
    <entry key="InvalidReturnErrorsOption">''{0}'' is an invalid option for CaptureErrors.</entry>
    <entry key="InvalidSkipParameterUpdateOption">''{0}'' is an invalid option for SkipParameterUpdate.</entry>
    <entry key="InvalidFastRestartOption">''{0}'' is an invalid option for FastRestart.</entry>
    <entry key="InvalidLiveTuningOption">Invalid option ''{0}'' specified for ''LiveTuning''.</entry>
    <entry key="SkipParameterUpdateNeedsFastRestart">SkipParameterUpdate parameter can be set only when the model is initialized in Fast Restart.</entry>
    <entry key="InvalidSCDBlockLinearizationSpecification" note="stringDatatypeUpdate">The block parameter ''SCDBlockLinearizationSpecification'' is invalid.  The parameter should either be a MATLAB structure or an empty MATLAB array [].  The structure should have the fields containing only character vectors with the fields ''Name'', ''Specification'', ''Type'', ''ParameterNames'', and ''ParameterValues''.</entry>
    <entry key="InvalidSampleTime">Invalid sample time format has been specified for ''{0}''. Sample time must be specified using a vector of the form [sample_time, offset_time]</entry>
    <entry key="InvalidSampleTimeForMSFcn">Invalid sample time format has been specified for ''{0}''. Sample time must be specified using a vector of the form [sample_time, offset_time]. Valid sample time pairs for a Level-2 MATLAB S-function are: continuous: [0, offset], discrete: [discrete_sample_time_period, offset], inherit: [-1, 0], variable: [-2, 0].</entry>
    <entry key="InvalidPortSampleTimeForMSFcn">Sample time [{0}, {1}] of ''{2}'' port {3,number,integer} is invalid. Sample time must be specified using a vector of the form [sample_time, offset_time]. The valid sample time pairs for a Level-2 MATLAB S-function are: continuous: [0, offset], discrete: [discrete_sample_time_period, offset], inherit: [-1, 0], variable: [-2, 0].</entry>
    <entry key="InvalidScalarICTypeForOutportWithVirtualBus">The parameter ''Initial output'' of Outport block ''{0}'' must be of data type ''boolean'', ''uint8'', ''uint16'', ''uint32'', ''int8'', ''int16'', ''int32'', ''single'', ''double'', or fixed-point data type, because the parameter is scalar and the Outport block is driven by a virtual bus signal with mixed data types.</entry>
    <entry key="InvalidScrollbarOffset">The scrollbar offset must be an positive integer vector of length two</entry>
    <entry context="error" note="0 is a block path" key="InvalidSelfLoop">Unable to solve algebraic loop that contains block ''{0}'' because of a self-loop around nonvirtual subsystem ''{1}'' that contains block ''{0}''.</entry>
    <entry key="InvalidSimViewingDevice">''{0}'' is not a valid SimViewingDevice.  SimViewingDevices must

    \n \t - be single rate
    \n \t - have no continuous states
    \n \t - have no outputs
    </entry>
    <entry key="InvalidSolver">The "{0}" solver cannot be used to simulate block diagram ''{1}'' because it contains continuous states</entry>
    <entry key="InvalidContStateInExpFcnMdl">Export-function model ''{0}'' does not support block ''{1}'' because the block has continuous states.</entry>
    <entry key="InvalidZeroCrossingInExpFcnMdl"> Zero-crossing detection is not supported in export-function model "{0}".</entry>


    <!-- InvalidInputSignalComplexity TopTester: test/toolbox/simulink/configsets/highlighting/DVHyperlinks/tSLEngineErrorsFixIt2.m -->
    <entry key="InvalidInputSignalComplexity"><![CDATA[The signal connected to <sldiag objui="inport" objparam="{0,number,integer}" objname="{1}">input port {0,number,integer}</sldiag> of block ''{1}'' is complex valued or contains complex valued bus element(s).
    <actions exclusiveFixIts="yes">
    <action type="suggestion">
    <txt>Change the signal or bus element(s) to non-complex</txt>
    </action>
    <action type="fixit">
    <cmd>configset.internal.fixIt(''{1}'',''SupportComplex'',''on'')</cmd>
    <txt>Select <sldiag objui="configset" objparam="SupportComplex">Support complex numbers</sldiag> (might impact referenced or referencing models)</txt>
    </action>
    </actions>]]>
    </entry>
    <entry key="InvalidInputSignalDataType"><![CDATA[The signal connected to <sldiag objui="inport" objparam="{0,number,integer}" objname="{1}">input port {0,number,integer}</sldiag> of block ''{1}'' is a floating point type or contains floating point type bus elements(s).
    <actions exclusiveFixIts="yes">
    <action type="suggestion">
    <txt>Change the data type</txt>
    </action>
    <action type="fixit">
    <cmd>configset.internal.fixIt(''{1}'',''PurelyIntegerCode'',''off'')</cmd>
    <txt>Select <sldiag objui="configset" objparam="PurelyIntegerCode">Support floating-point numbers</sldiag> (might impact referenced or referencing models)</txt>
    </action>
    </actions>]]>
    </entry>
    <!-- InvalidOutputSignalComplexity TopTester: test/toolbox/simulink/configsets/highlighting/DVHyperlinks/tSLEngineErrorsFixIt2.m -->
    <entry key="InvalidOutputSignalComplexity"><![CDATA[The signal connected to <sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">output port {0,number,integer}</sldiag> of block ''{1}'' is complex valued or contains complex valued bus element(s).
    <actions exclusiveFixIts="yes">
    <action type="suggestion">
    <txt>Change the signal or bus element(s) to non-complex</txt>
    </action>
    <action type="fixit">
    <cmd>configset.internal.fixIt(''{1}'',''SupportComplex'',''on'')</cmd>
    <txt>Select <sldiag objui="configset" objparam="SupportComplex">Support complex numbers</sldiag> (might impact referenced or referencing models)</txt>
    </action>
    </actions>]]>
    </entry>
    <!-- InvalidOutputSignalDataType TopTester: test/toolbox/simulink/configsets/highlighting/DVHyperlinks/tSLEngineErrorsFixIt3.m -->
    <entry key="InvalidOutputSignalDataType"><![CDATA[The signal connected to <sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">output port {0,number,integer}</sldiag> of block ''{1}'' is a floating point type or contains floating point type bus elements(s).
    <actions exclusiveFixIts="yes">
    <action type="suggestion">
    <txt>Change the data type</txt>
    </action>
    <action type="fixit">
    <cmd>configset.internal.fixIt(''{1}'',''PurelyIntegerCode'',''off'')</cmd>
    <txt>Select <sldiag objui="configset" objparam="PurelyIntegerCode">Support floating-point numbers</sldiag> (might impact referenced or referencing models)</txt>
    </action>
    </actions>]]>
    </entry>
    <!-- @todo does not work -->
    <!-- InvalidWorkComplexity TopTester: test/toolbox/simulink/configsets/highlighting/DVHyperlinks/tSLEngineErrorsFixIt2.m -->
    <entry key="InvalidWorkComplexity"><![CDATA[The work vector of block ''{0}'' is complex valued.
    <actions exclusiveFixIts="yes">
    <action type="suggestion">
    <txt>Change the data type</txt>
    </action>
    <action type="fixit">
    <cmd>configset.internal.fixIt(''{0}'',''SupportComplex'',''on'')</cmd>
    <txt>Select <sldiag objui="configset" objparam="SupportComplex">Support complex numbers</sldiag> (might impact referenced or referencing models)</txt>
    </action>
    </actions>]]>
    </entry>
    <!-- @todo does not work -->
    <!-- InvalidWorkDataType TopTester: test/toolbox/simulink/configsets/highlighting/DVHyperlinks/tSLEngineErrorsFixIt3.m -->
    <entry key="InvalidWorkDataType"><![CDATA[The work vector of the block ''{0}'' contains a floating point type.
    <actions exclusiveFixIts="yes">
    <action type="suggestion">
    <txt>Change the data type</txt>
    </action>
    <action type="fixit">
    <cmd>configset.internal.fixIt(''{0}'',''PurelyIntegerCode'',''off'')</cmd>
    <txt>Select <sldiag objui="configset" objparam="PurelyIntegerCode">Support floating-point numbers</sldiag> (might impact referenced or referencing models)</txt>
    </action>
    </actions>]]>
    </entry>
    <entry key="InvalidRTParamComplexity"><![CDATA[The parameter ''{0}'' of block ''{1}'' is complex valued. Consider changing it to non-complex or selecting the ''Support: complex numbers'' check box on the Configuration Parameters > Code Generation > Interface pane]]></entry>
    <!-- InvalidRTParamDataType TopTester: test/toolbox/simulink/configsets/highlighting/DVHyperlinks/tSLEngineErrorsFixIt3.m -->
    <entry key="InvalidRTParamDataType"><![CDATA[The parameter ''{0}'' of block ''{1}'' is a floating point type.
    <actions exclusiveFixIts="yes">
    <action type="suggestion">
    <txt>Change the data type</txt>
    </action>
    <action type="fixit">
    <cmd>configset.internal.fixIt(''{1}'',''PurelyIntegerCode'',''off'')</cmd>
    <txt>Select <sldiag objui="configset" objparam="PurelyIntegerCode">Support floating-point numbers</sldiag> (might impact referenced or referencing models)</txt>
    </action>
    </actions>]]>
    </entry>
    <entry key="InvalidWksParamComplexity"><![CDATA[The parameter ''{0}'' is complex valued. Consider changing it to non-complex or selecting the ''Support: complex numbers'' check box on the Configuration Parameters > Code Generation > Interface pane]]></entry>
    <entry key="InvalidWksParamDataType"><![CDATA[The parameter ''{0}'' is a floating-point type. Consider changing the data type or selecting the ''Support: floating-point numbers'' check box on the Configuration Parameters > Code Generation > Interface pane]]></entry>
    <entry key="InvalidStructuredWksParamComplexity"><![CDATA[Parameter ''{0}'' is complex valued. Consider changing it to non-complex or selecting the ''Support: complex numbers'' check box on the Configuration Parameters > Code Generation > Interface pane]]></entry>
    <entry key="InvalidStructuredWksParamDataType"><![CDATA[Parameter ''{0}'' is a floating-point type. Consider changing the data type or selecting the ''Support: floating-point numbers'' check box on the Configuration Parameters > Code Generation > Interface pane]]></entry>
    <entry key="InvalidTypeForDWorkDimArg">Invalid data type specified for ''{0}''. The derived parameter must evaluate to be of data type, ''double''.</entry>
    <entry key="InvalidVarDimsAssignForOutputPort"><![CDATA[Invalid variable dimensions assignment for <sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">output port {0,number,integer}</sldiag> of ''{1}''. Variable dimensions must be an array of nonnegative integers and each integer cannot exceed the maximum dimension]]></entry>
    <entry key="InvalidVirtualBusSignalTypeForOutportWithScalarIC"><![CDATA[Invalid signal data type at <sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">output port {0,number,integer}</sldiag> of block ''{1}''. All signals in the virtual bus driving the Outport block ''{2}'' must be of type ''boolean'', ''uint8'', ''uint16'', ''uint32'', ''int8'', ''int16'', ''int32'', ''single'', ''double'', or fixed-point data type, because the parameter ''Initial output'' of Outport block is scalar.]]></entry>
    <entry key="UnableToInitializeOutput">Unable to determine an initial output value for the outport block ''{0}''.</entry>
    <entry key="UnableToInitializeOutputCauseDueToInvalidICSrc">Cannot inherit initial output because one or more of the source blocks of the Outport block are not valid initial condition sources. For more information see  <![CDATA[<a href="matlab:helpview([docroot ''/toolbox/simulink/helptargets.map''], ''inherit_initial_output_values'')">''Inherit Initial Output Values from Input Signals''</a>]]> in the Simulink documentation.
    </entry>
    <entry key="UnableToInitializeOutputCauseDueToUnsupportedDataType">Cannot use ground value as the default initial output because such a value could not be determined for the datatype of output port {0, number, integer} of the source block ''{1}''.
    <![CDATA[
             <actions exclusiveFixIts="yes">
             <action type="suggestion">
             <cmd>Simulink.internal.OpenBlockParamsDialog(''{2}'',''InitialOutput'')</cmd>
             <txt>Set ''Initial output'' to a value other than ''[]'' for ''{2}''.</txt>
             </action>
             </actions>
    ]]>
    </entry>
    <entry key="Invalid_Listner_TID_Format">Invalid event listener TID format has been specified for ''{0}''. Event listener TIDs must be specified using a vector of the form [tid_1, tid_2, tid_3]</entry>
    <entry key="JacobianAnalyticLinNotEnabled">AnalyticLinearization option is not enabled</entry>
    <entry key="LatchLinearizeErr">Cannot add linearization point at inport block ''{0}'' because such points are not supported for inports which have the option to latch subsystem inputs during execution turned on.</entry>
    <entry key="LatchLoopAssert">Cannot latch input {0,number,integer} of subsystem ''{1}'' over the duration of its execution. The memory buffer for this input maps to the memory buffer of one of the other inputs of the subsystem that is also being held over the course of the simulation. In normal operation, you should never see this error. The error indicates a potential issue with buffer reuse in this model. Please report this issue as a bug and explicitly add a Signal Conversion block before the outport block that is feeding this input to create a copy of this signal and workaround the problem.</entry>
    <entry key="LatchLoopError">Cannot latch all inputs of subsystem ''{0}'' over the duration of its execution. Since inport ''{1}'' directly reads the signal at the output of inport ''{2}'', it is not possible to latch both of these inputs independently before the execution of the subsystem. Consider inserting a Signal Conversion block before the outport block connected to the first inport to make an explicit copy of this signal.</entry>
    <entry key="LicenseError">Unable to check out the Simulink Coder license which is needed to generate code.</entry>
    <entry key="LineWithoutDst">Unconnected output line found on ''{0}'' (output port: {1,number,integer})</entry>
    <entry key="LineWithoutSrc">Unconnected input line found on ''{0}'' (input port: {1,number,integer})</entry>
    <entry key="LinearAnalysisForIterator"><![CDATA[Linear analysis attributes of the <sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">output port {0,number,integer}</sldiag> of ''{1}'' cannot be set to drive an Iterator block]]></entry>
    <entry key="LinearAnalysisNonDataPort"><![CDATA[Linear analysis attributes of the <sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">output port {0,number,integer}</sldiag> of ''{1}'' cannot be set on a non data port]]></entry>
    <entry key="LinearAnalysisNotSupportedInMultiTasking">
      Linearization is not supported in multitasking mode.
      <![CDATA[
               <actions exclusiveFixIts="yes">
               <action type="fixit">
               <cmd>set_param(''{0}'',''EnableMultiTasking'',''off'');</cmd>
               <txt>Clear <sldiag objui="configset" objparam="EnableMultiTasking">Treat each discrete rate as a separate task</sldiag>.</txt>
               </action>
               <action type="fixit">
               <cmd>set_param(''{0}'',''SolverType'',''Variable-step'');</cmd>
               <txt>Use a variable-step solver.</txt>
               </action>
               </actions>
      ]]>
    </entry>
    <entry key="LinearAnalysisTooManyElements">The model contains too many elements for linearization.  Please reduce the model size.</entry>
    <entry key="LinearAnalysisTooManyIOElements">Total size of input and output elements for linearization ({0} megabytes) must be less than 20% of the total available memory ({1} megabytes). To reduce the total size of the input and output elements, consider using fewer elements.</entry>
    <entry key="LinearizationWithSFuncArrayOfBus">Linearization points cannot be placed on signals that are arrays of buses.</entry>
    <entry key="LinearizationWithSFuncDSMWrite">Linearization is not supported for S-Function blocks that write to a Data Store Memory. The connection between the S-Function block ''{0}'' and the Data Store Memory ''{1}'' will be ignored during linear analysis.</entry>
    <entry key="LinearizationWithSFuncDSMRead">Linearization is not supported for S-Function blocks that read from a Data Store Memory. The connection between the S-Function block ''{0}'' and the Data Store Memory ''{1}'' will be ignored during linear analysis.</entry>
    <entry key="InvalidPotentialLinearizationIO">The element {0,number,integer} in SCDPotentialLinearizationIOs structure is not referring to an existing block in the model.</entry>
    <entry key="InvalidLinearizationIOVariantSubsystem">Linearization IO points may not be placed at the top level of variant subsystems.</entry>
    <entry key="LinearlyImplicitActionSubsystemWithFixedStepImplicit">Unable to generate code for model ''{0}'' because it uses the ''{1}'' solver and contains an action subsystem that specifies a linearly implicit system of ODEs. The use of ''{1}'' with linearly implicit equations in action subsystems is not supported</entry>
    <entry key="LinearlyImplicitEnabledSubsystemWithFixedStepImplicit">Unable to generate code for model ''{0}'' because it uses the ''{1}'' solver and contains an enabled subsystem that specifies a linearly implicit system of ODEs. The use of ''{1}'' with linearly implicit equations in enabled subsystems is not supported</entry>
    <entry key="LinearlyImplicitSystemsUnsupportedTarget">Unable to generate code for model ''{0}'' because it specifies a linearly implicit system of ODEs for a target type other than GRT, ERT, or xPC. Linearly implicit systems of ODEs for GRT, ERT, and xPC targets only are supported</entry>
    <entry key="LinearlyImplicitSystemsUnsupportedTargetOption"><![CDATA[Unable to generate code for model ''{0}'' because ''C++ class'' as code interface packaging is not supported for model that specifies a linearly implicit system of ODEs. Set model configuration parameter <sldiag objui="configset" objparam="CodeInterfacePackaging">Code interface packaging</sldiag> to ''Nonreusable function'' or ''Reusable function''.]]></entry>
    <entry key="Listener_InvalidTid">The event listener TIDs of ''{0}'' must be in the range from 0 to {1,number,integer}</entry>
    <entry key="MFileTsMustBeEmpty">Sample times (TS) matrix returned by MATLAB S-function ''{0}'' in ''{1}'' must be empty.</entry>
    <entry key="MSFcnAddDimsDependRuleCompStageMismatch">Simulink detected an incorrect usage of ''AddOutputDimsDependencyRule'' for the Level-2 MATLAB S-function in ''{0}''. This SimStruct function can only be used in the ''PostPropagationSetup'' method.</entry>
    <entry key="MSFcnInvalidPassThroughInputIdx">The input port index {0,number,integer} specified in ''InputPortSameDimsAsOutputPort'' for the Level-2 MATLAB S-Function block ''{1}'' does not exist.</entry>
    <entry key="MSFcnInvalidPassThroughOutputIdx">The output port index {0,number,integer} specified in ''InputPortSameDimsAsOutputPort'' for the Level-2 MATLAB S-Function block ''{1}'' does not exist.</entry>
    <entry key="MSfcnMissingDefinedDimsDependRuleVarDims"><![CDATA[The Level-2 MATLAB S-function ''{0}'' in ''{1}'' has declared ''SignalSizesComputeType'' to be ''FromInputSize''. Consequently, you must use the ''AddOutputDimsDependencyRules'' method to register the dimension dependency rules of <sldiag objui="outport" objparam="{2,number,integer}" objname="{0}">output port {2,number,integer}</sldiag>.]]></entry>
    <entry key="MTCondExecDiagNotMatchModelAdvisor">The diagnostic of ''Multitask conditionally executed subsystem'' in the Sample Time Diagnostics is ''{0}''. The subsystem ''{1}'' executes in multiple tasks. This can cause corrupted data or non-deterministic behavior in a real-time system. Model Advisor recommends ''error'' for this diagnostic when generating code for a real-time system. Consider changing the diagnostic to ''error''.</entry>
    <!-- MTCondExecSysHasAsync -->
    <entry key="MTCondExecSysHasAsync"><![CDATA[Conditionally executed subsystem ''{0}'' contains an asynchronous subsystem. This can cause corrupted data in a real-time system.
    <actions exclusiveFixIts="yes">
    <action type="suggestion">
    <txt>Move the asynchronous subsystem outside the conditionally executed subsystem.</txt>
    </action>
    <action type="fixit">
    <cmd>configset.internal.fixIt(''{0}'',''MultiTaskCondExecSysMsg'',''none'')</cmd>
    <txt>Suppress this message by setting <sldiag objui="configset" objparam="MultiTaskCondExecSysMsg">Multitask conditionally executed subsystem</sldiag> to ''none''.</txt>
    </action>
    </actions>]]>
    </entry>
    <entry key="MTDSMDiagNotMatchModelAdvisor">The ''Multitask data store'' option in the Diagnostics page of the Configuration Parameters Dialog is ''{0}''. Data store read block(s) and data store write block(s) exist that execute in different tasks. This can cause corrupted data in a real-time system. Model Advisor recommends ''error'' for this diagnostic when generating code for a real-time system. Consider changing the diagnostic to ''error''.</entry>
    <entry key="MaximumFwdTimesExceed">Recursion limit exceeded while trying to load library ''{0}''. The potential cause of this problem is that the library link forwarding mechanism is running into an infinite loop.</entry>
    <entry key="MatrixTypeForDWorkLength">Argument ''{0}'' specified for dimension value must be scalar.</entry>
    <entry key="MdlFileDeleted">block diagram loaded but file deleted</entry>
    <entry key="MdlFileLoaded">block diagram loaded</entry>
    <entry key="MdlFileNotOnPath">The file containing block diagram ''{0}'' is not on the MATLAB path: {1}</entry>
    <entry key="MdlFileShadowedByFile"><![CDATA[The file containing block diagram ''{0}'' is shadowed by a file of the same name higher on the MATLAB path. This can cause unexpected behavior. For more information see <a href="matlab:helpview([docroot ''/toolbox/simulink/helptargets.map''], ''shadowing'')">"Avoiding Problems with Shadowed Files"</a> in the Simulink documentation.\n\nThe file containing the block diagram is: {1}.\nThe file higher on the MATLAB path is: {2}]]></entry>
    <entry key="MdlFileMissingAndShadowedByFile"><![CDATA[The file containing block diagram ''{0}'' is missing. A different file of the same name exists on the MATLAB path. This can cause unexpected behavior. For more information see <a href="matlab:helpview([docroot ''/toolbox/simulink/helptargets.map''], ''shadowing'')">"Avoiding Problems with Shadowed Files"</a> in the Simulink documentation.\n\nThe missing file is: {1}.\nThe file on the MATLAB path is: {2}]]></entry>
    <entry key="LoadShadowedFile"><![CDATA[File ''{0}'' cannot be loaded because it is shadowed by another file of the same name higher on the MATLAB path.  For more information see <a href="matlab:helpview([docroot ''/toolbox/simulink/helptargets.map''], ''shadowing'')">"Avoiding Problems with Shadowed Files"</a> in the Simulink documentation.\n\nThe file that is higher on the MATLAB path is: {1}.]]></entry>
    <entry key="SlxFileShadowsMoreRecentMdlFile"><![CDATA[The file ''{0}.slx'' is shadowing a more recently saved MDL file, ''{1}.mdl'', in the same folder.  For more information see <a href="matlab:helpview([docroot ''/toolbox/simulink/helptargets.map''], ''shadowing'')">"Avoiding Problems with Shadowed Files"</a> in the Simulink documentation.]]></entry>
    <entry key="MdlFileShadowedByVariable">Block diagram ''{0}'' is shadowed by a variable of the same name.</entry>
    <entry key="MdlFileShadowing">The model name ''{0}'' is shadowing another name in the MATLAB workspace or path. Type "which -all {1}" at the command line to find the other uses of this name. You should change the name of the model to avoid problems.</entry>
    <!-- MdlRefExecTimeWithBlockRequestStateResetSizeVary TopTester: test/toolbox/simulink/configsets/highlighting/DVHyperlinks/tSLEngineModelRefs.m -->
    <entry key="MdlRefExecTimeWithBlockRequestStateResetSizeVary"><![CDATA[Block ''{0}'' contains states that require resetting whenever the input signal sizes vary. This block property is inconsistent with the ''Propagate sizes of variable-size signals'' setting ''During execution''.
    <actions exclusiveFixIts="yes">
    <action type="fixit">
    <cmd>configset.internal.fixIt(''{0}'',''PropagateVarSize'',''Only when enabling'')</cmd>
    <txt>Change <sldiag objui="configset" objparam="PropagateVarSize">Propagate sizes of variable-size signals</sldiag> to ''Only when enabling''.</txt>
    </action>
    <action type="suggestion">
    <txt>Place ''{1}'' inside an Enabled/Function-Call/Action/Resettable Subsystem and setting the parameter ''Propagate sizes of variable-size signals'' for the corresponding control port block to: ''Only when enabling'' for an Enabled or a Function-Call Subsystem; ''Only when execution is resumed'' for an Action Subsystem; or ''Only when resetting'' for a Resettable Subsystem.</txt>
    </action>
    </actions>]]>
    </entry>
    <entry key="MdlRefInitTimeWithblockSizeDependOnValue"><![CDATA[The output signal sizes of block ''{0}'' depend on the input signal values. However, <sldiag objui="configset" objparam="PropagateVarSize">Propagate sizes of variable-size signals</sldiag> is set to ''Only when enabling''. Consider changing the parameter to ''During execution''.]]></entry>
    <entry key="MemoryAllocationError">Memory allocation error</entry>
    <entry key="MemorySectionsNotFound">Error loading memory section definitions.</entry>
    <entry key="MetadataMustBeStruct">The "Metadata" parameter of a block diagram must be a MATLAB structure</entry>
    <entry key="MissedNoncontSignal"><![CDATA[<sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">Output port {0,number,integer}</sldiag> of subsystem block ''{1}'' may be outputting a signal that has discontinuities and is feeding a block with continuous states.  This may cause the solver to produce inaccurate answers near the discontinuities]]></entry>
    <entry key="MixedContextOnGenerator">{0}'' destination ports reside in different execution contexts (e.g. one port in the root system and another port in a conditionally executed subsystem)</entry>
    <entry key="MixedContextOnViewer">{0}'' is viewing signals that originate from different execution contexts (e.g. one signal in the root system and another signal in a conditionally executed subsystem)</entry>
    <entry key="ModelAlreadyCompiled">''{0}'' is already compiled</entry>
    <!-- ModelCannotBeCompiledAgainWhileItIsBeingCompiled TopTester: test/toolbox/simulink/engine/tSLCompBDDoubleEntry.m  -testspec:testRTWBuild-->
    <entry key="ModelCannotBeCompiledAgainWhileItIsBeingCompiled">Model is in the compile process and cannot be compiled again</entry>
    <!-- CannotStartNewSimWhileSimOrCompileStarted TopTester: test/toolbox/simulink/engine/tSLCompBDDoubleEntry.m -testspec:testUpdateDiagram-->
    <entry key="CannotStartNewSimWhileSimOrCompileStarted">Cannot start a new command line simulation while an update diagram or a simulation has started for the same model </entry>
    <entry key="ModelBlockNotConfiguredForMessagesMultiInstance"><![CDATA[Reference model ''{0}'' is set up to send or receive messages, but is not configured for message-based communication. Set model configuration parameter ''Total number of instances allowed per top model'' to ''Multiple''.
    <actions exclusiveFixIts="yes">
    <action type="fixit">
    <cmd>configset.internal.fixIt(''{0}'',''ModelReferenceNumInstancesAllowed'',''Multi'')</cmd>
    <txt>Set <sldiag objui="configset" objparam="ModelReferenceNumInstancesAllowed" objname="{0}">Total number of instances allowed per top model</sldiag> to ''Multiple''.</txt>
    </action>
    </actions>]]>
    </entry>
    <entry key="ModelBlockNotConfiguredForFcnPortMultiInstance"><![CDATA[Reference model ''{0}'' is using function ports, but is not configured for client/server communication. Set model configuration parameter ''Total number of instances allowed per top model'' to ''Multiple''.
    <actions exclusiveFixIts="yes">
    <action type="fixit">
    <cmd>configset.internal.fixIt(''{0}'',''ModelReferenceNumInstancesAllowed'',''Multi'')</cmd>
    <txt>Set <sldiag objui="configset" objparam="ModelReferenceNumInstancesAllowed" objname="{0}">Total number of instances allowed per top model</sldiag> to ''Multiple''.</txt>
    </action>
    </actions>]]>
    </entry>
    <!-- ModelBlockCannotBeReusableForMultiInstanceCode TopTester: test/toolbox/simulink/configsets/highlighting/DVHyperlinks/tSLEngineModelRefs.m -->
    <!-- ModelBlockCannotBeReusableForMultiInstanceCode TopTester: test/toolbox/simulink/configsets/highlighting/DVHyperlinks/tSLEngineErrorsFixIt3.m -->
    <entry key="ModelBlockCannotBeReusableForMultiInstanceCode"><![CDATA[The referenced model ''{0}'' cannot generate reusable code. ''Total number of instances allowed per top model'' is set to ''One'' for the referenced model.
    <actions exclusiveFixIts="yes">
    <action type="fixit">
    <cmd>configset.internal.fixIt(''{0}'',''ModelReferenceNumInstancesAllowed'',''Multi'')</cmd>
    <txt>Set <sldiag objui="configset" objparam="ModelReferenceNumInstancesAllowed" objname="{0}">Total number of instances allowed per top model</sldiag> to ''Multiple''.</txt>
    </action>
    <action type="fixit">
    <cmd>configset.internal.fixIt(''{1}'',''CodeInterfacePackaging'',''Nonreusable function'')</cmd>
    <txt>Set <sldiag objui="configset" objparam="CodeInterfacePackaging" objname="{1}">Code interface packaging</sldiag> to ''Nonreusable function'' for the top model ''{1}'' (might impact referenced or referencing models)</txt>
    </action>
    </actions>]]>
    </entry>
    <entry key="FunctionPortsRequireCpp"><![CDATA[Model ''{0}'' contains function service ports, but is not configured to generate C++ class code. Set model configuration parameter Code interface packaging (''CodeInterfacePackaging'') to ''C++ class''.
    <actions exclusiveFixIts="yes">
    <action type="fixit">
    <cmd>configset.internal.fixIt(''{0}'',''CodeInterfacePackaging'',''C++ class'')</cmd>
    <txt>Set <sldiag objui="configset" objparam="CodeInterfacePackaging" objname="{0}">Code interface packaging</sldiag> to ''C++ class'' for the model ''{0}'' (might impact referenced or referencing models)</txt>
    </action>
    </actions>]]>
    </entry>
    <entry key="MessagesDependsOnCppClassCode"><![CDATA[Reference model ''{0}'' is set up to send or receive messages, but is not configured for message-based communication. Set model configuration parameter Code interface packaging (''CodeInterfacePackaging'') to ''C++ class''.
    <actions exclusiveFixIts="yes">
    <action type="fixit">
    <cmd>configset.internal.fixIt(''{0}'',''CodeInterfacePackaging'',''C++ class'')</cmd>
    <txt>Set <sldiag objui="configset" objparam="CodeInterfacePackaging" objname="{0}">Code interface packaging</sldiag> to ''C++ class'' for the model ''{0}'' (might impact referenced or referencing models)</txt>
    </action>
    </actions>]]>
    </entry>
    <entry key="GenerateAllocFcnDependsOnMultiInstanceCode">Cannot set model option GenerateAllocFcn when model option ''CodeInterfacePackaging'' is set to ''Nonreusable function''</entry>
    <entry key="ModelCompInProgress">Compilation of ''{0}'' in progress</entry>
    <entry key="ModelDoesNotExist">
      ''{0}'' is not registered with MATLAB as identifying a Simulink model,
      hence it cannot be compiled. There may be a MATLAB class with the same
      name. If so, rename either the model or the class
    </entry>
    <entry key="ModelNameTooLong">''{0}'' is not a valid model name because it is too long</entry>
    <entry key="ModelTermInProgress">Termination of ''{0}'' is in progress</entry>
    <entry key="ModuleLibraryLoadError">Unable to load ''{0}'' due to the following error\n''{1}''\n</entry>
    <entry key="MultSampleTime">Only one sample time can be specified for ''{0}''</entry>
    <!-- MultSysGenSameFcn TopTester: test/toolbox/simulink/configsets/highlighting/DVHyperlinks/tSLEngineErrorsOpen.m -->
    <entry key="MultSysGenSameFcn"><![CDATA[The subsystems ''{0}'' and ''{1}'' have the same function name ''{2}''.  This is not legal unless the systems are identical copies of each other.
    <actions exclusiveFixIts="yes">
    <action type="suggestion">
    <cmd>Simulink.internal.OpenBlockParamsDialog(''{0}'',''RTWFcnName'')</cmd>
    <txt>Modify the function name for ''{0}''</txt>
    </action>
    <action type="suggestion">
    <cmd>Simulink.internal.OpenBlockParamsDialog(''{1}'',''RTWFcnName'')</cmd>
    <txt>Modify the function name for ''{1}''</txt>
    </action>
    <action type="suggestion">
    <cmd>configset.internal.open(''{0}'',''MaxIdLength'')</cmd>
    <txt>Increase ''Maximum identifier length'' (might impact referenced or referencing models)</txt>
    </action>
    </actions>]]>
    </entry>
    <entry key="RowMajorReusableFcnUnsupported"><![CDATA[The ForEach subsystem ''{0}'' with function name ''{1}''is marked as reusable. This is currently not supported for row-major code generation.]]></entry>
    <entry key="MultiFcnCallInlined">Changing the Code generation function packaging setting for Function-call subsystem ''{0}'' from ''Inline'' to ''Function'' because it has multiple callers</entry>
    <entry key="FcnCallSysWithMulTidsCalledFromSFSfcn">Changing the Code generation function packaging setting for Function-call subsystem ''{0}'' from ''Inline'' to ''Function'' because it cannot be inlined into its parent</entry>
    <entry key="NonSLDomainFcnForceInline">Converting ''Function packaging'' setting of ''{0}'' from ''{1}'' to ''Inline''. The block has  event-based signal inputs or the block is contained in an atomic or Function-call subsystem that has event-based signal inputs</entry>
    <entry key="ReusableTopModelWithInternalDefaultMapping"><![CDATA[The model cannot generate reusable code with inputs and outputs passed as individual arguments. This is because the 'Internal Data' of the model is mapped to ''{0}'' which is a single-instance storage class that forces the system ''{1}'' to be generated as a non-reusable function.
    <actions exclusiveFixIts="yes">
    <action type="fixit">
    <cmd>configset.internal.fixIt(''{0}'',''RootIOFormat'',''Structure reference'')</cmd>
    <txt>Set <sldiag objui="configset" objparam="RootIOFormat">Pass root-level I/O as</sldiag> to ''Structure reference''</txt>
    </action>
    <action type="fixit">
    <cmd>configset.internal.fixIt(''{0}'',''CodeInterfacePackaging'',''Nonreusable function'')</cmd>
    <txt>Set <sldiag objui="configset" objparam="CodeInterfacePackaging">Code interface packaging</sldiag> to ''Nonreusable function'' (might impact referenced or referencing models)</txt>
    </action>
    </actions>]]>
    </entry>
    <entry key="MultiInstanceForcedNonInline"><![CDATA[The model cannot generate reusable code with inputs and outputs passed as individual arguments, because ''{0}'' is forced to not inline.
    <actions exclusiveFixIts="yes">
    <action type="fixit">
    <cmd>configset.internal.fixIt(''{0}'',''RootIOFormat'',''Structure reference'')</cmd>
    <txt>Set <sldiag objui="configset" objparam="RootIOFormat">Pass root-level I/O as</sldiag> to ''Structure reference''</txt>
    </action>
    <action type="fixit">
    <cmd>configset.internal.fixIt(''{0}'',''CodeInterfacePackaging'',''Nonreusable function'')</cmd>
    <txt>Set <sldiag objui="configset" objparam="CodeInterfacePackaging">Code interface packaging</sldiag> to ''Nonreusable function'' (might impact referenced or referencing models)</txt>
    </action>
    </actions>]]>
    </entry>
    <entry key="MultiInstanceForcedNonInlineCPP"><![CDATA[The model cannot generate a C++ class interface because ''{0}'' is forced to not inline.
    <actions exclusiveFixIts="yes">
    <action type="suggestion">
    <cmd>configset.internal.open(''{0}'',''CodeInterfacePackaging'')</cmd>
    <txt>Set ''Code interface packaging'' to a value other than ''C++ class'' (might impact referenced or referencing models)</txt>
    </action>
    </actions>]]>
    </entry>
    <!-- MultiInstanceNonReusableAsyncSFcn TopTester: test/toolbox/simulink/configsets/highlighting/DVHyperlinks/tSLEngineErrorsFixIt3.m -->
    <entry key="MultiInstanceNonReusableAsyncSFcn"><![CDATA[The model cannot generate reusable code because ''{0}'' is an asynchronous S-Function that does not support code reuse.
    <actions exclusiveFixIts="yes">
    <action type="fixit">
    <cmd>configset.internal.fixIt(''{0}'',''CodeInterfacePackaging'',''Nonreusable function'')</cmd>
    <txt>Set <sldiag objui="configset" objparam="CodeInterfacePackaging">Code interface packaging</sldiag> to ''Nonreusable function'' (might impact referenced or referencing models)</txt>
    </action>
    </actions>]]>
    </entry>
    <entry key="MultiInstanceNonReusableAsyncSFcn2"><![CDATA[The model cannot generate reusable code because ''{0}'' is a non-inlined asynchronous S-Function.
    <actions exclusiveFixIts="yes">
    <action type="fixit">
    <cmd>configset.internal.fixIt(''{0}'',''CodeInterfacePackaging'',''Nonreusable function'')</cmd>
    <txt>Set <sldiag objui="configset" objparam="CodeInterfacePackaging">Code interface packaging</sldiag> to ''Nonreusable function'' (might impact referenced or referencing models)</txt>
    </action>
    </actions>]]>
    </entry>
    <!-- MultiInstanceNonReusableSFcn TopTester: test/toolbox/simulink/configsets/highlighting/DVHyperlinks/tSLEngineErrorsFixIt4.m -->
    <entry key="MultiInstanceNonReusableSFcn"><![CDATA[The model cannot generate reusable code with inputs and outputs passed as individual arguments, because ''{0}'' does not support code reuse.
    <actions exclusiveFixIts="yes">
    <action type="fixit">
    <cmd>configset.internal.fixIt(''{0}'',''RootIOFormat'',''Structure reference'')</cmd>
    <txt>Set <sldiag objui="configset" objparam="RootIOFormat">Pass root-level I/O as</sldiag> to ''Structure reference''</txt>
    </action>
    <action type="fixit">
    <cmd>configset.internal.fixIt(''{0}'',''CodeInterfacePackaging'',''Nonreusable function'')</cmd>
    <txt>Set <sldiag objui="configset" objparam="CodeInterfacePackaging">Code interface packaging</sldiag> to ''Nonreusable function'' (might impact referenced or referencing models)</txt>
    </action>
    </actions>]]>
    </entry>
    <entry key="MultiInstanceNonReusableSFcn2"><![CDATA[The model cannot generate reusable code with inputs and outputs passed as individual arguments, because ''{0}'' is non-inlined.
    <actions exclusiveFixIts="yes">
    <action type="fixit">
    <cmd>configset.internal.fixIt(''{0}'',''RootIOFormat'',''Structure reference'')</cmd>
    <txt>Set <sldiag objui="configset" objparam="RootIOFormat">Pass root-level I/O as</sldiag> to ''Structure reference''</txt>
    </action>
    <action type="fixit">
    <cmd>configset.internal.fixIt(''{0}'',''CodeInterfacePackaging'',''Nonreusable function'')</cmd>
    <txt>Set <sldiag objui="configset" objparam="CodeInterfacePackaging">Code interface packaging</sldiag> to ''Nonreusable function'' (might impact referenced or referencing models)</txt>
    </action>
    </actions>]]>
    </entry>
    <entry key="MultiInstanceNonReusableSFcn2GRT">The model cannot generate reusable code because ''{0}'' is non-inlined. Consider using the ''grt.tlc'' target instead of the ''grt_malloc.tlc'' target.</entry>
    <entry key="MultiInstanceNonReusableSFcnCPP"><![CDATA[The model cannot generate ''I/O arguments step method'' style C++ class interface because ''{0}'' does not support code reuse with I/O arguments.  Consider using the ''Void-void step method'' style C++ class interface using the ''Configure C++ Class Interface'' button from the Configuration Parameters > Code Generation > Interface pane.]]></entry>
    <entry key="MultiInstanceNonReusableSFcnGRT">The model cannot generate reusable code because ''{0}'' does not support code reuse. Consider using the ''grt.tlc'' target instead of the ''grt_malloc.tlc'' target.</entry>
    <entry key="MultiInstanceSfcnNotInline"><![CDATA[The model cannot generate reusable code with inputs and outputs passed as individual arguments, because ''{0}'' is not inlined.
    <actions exclusiveFixIts="yes">
    <action type="fixit">
    <cmd>configset.internal.fixIt(''{0}'',''RootIOFormat'',''Structure reference'')</cmd>
    <txt>Set <sldiag objui="configset" objparam="RootIOFormat">Pass root-level I/O as</sldiag> to ''Structure reference''</txt>
    </action>
    <action type="fixit">
    <cmd>configset.internal.fixIt(''{0}'',''CodeInterfacePackaging'',''Nonreusable function'')</cmd>
    <txt>Set <sldiag objui="configset" objparam="CodeInterfacePackaging">Code interface packaging</sldiag> to ''Nonreusable function'' (might impact referenced or referencing models)</txt>
    </action>
    </actions>]]>
    </entry>
    <entry key="MultiInstanceSfcnNotInlineCPP"><![CDATA[The model cannot generate a C++ class interface because ''{0}'' is not inlined.
    <actions exclusiveFixIts="yes">
    <action type="suggestion">
    <cmd>configset.internal.open(''{0}'',''CodeInterfacePackaging'')</cmd>
    <txt>Set ''Code interface packaging'' to a value other than ''C++ class'' (might impact referenced or referencing models)</txt>
    </action>
    </actions>]]>
    </entry>
    <!-- MultiInstanceWideFcnCallTrig TopTester: test/toolbox/simulink/configsets/highlighting/DVHyperlinks/tSLEngineErrorsFixIt4.m -->
    <entry key="MultiInstanceWideFcnCallTrig"><![CDATA[The model cannot generate reusable code with inputs and outputs passed as individual arguments, because ''{0}'' is triggered by a wide function-call trigger.
    <actions exclusiveFixIts="yes">
    <action type="fixit">
    <cmd>configset.internal.fixIt(''{0}'',''RootIOFormat'',''Structure reference'')</cmd>
    <txt>Set <sldiag objui="configset" objparam="RootIOFormat">Pass root-level I/O as</sldiag> to ''Structure reference''</txt>
    </action>
    <action type="fixit">
    <cmd>configset.internal.fixIt(''{0}'',''CodeInterfacePackaging'',''Nonreusable function'')</cmd>
    <txt>Set <sldiag objui="configset" objparam="CodeInterfacePackaging">Code interface packaging</sldiag> to ''Nonreusable function'' (might impact referenced or referencing models)</txt>
    </action>
    </actions>]]>
    </entry>
    <entry key="MultiInstanceDefaultSharedLocalDSMMapping"><![CDATA[The model cannot generate reusable code with inputs and outputs passed as individual arguments, because ''{0}'' is a reusable subsystem and the default storage class of shared local data stores is not defined in the Embedded Coder dictionary.
    <actions exclusiveFixIts="yes">
    <action type="fixit">
    <cmd>configset.internal.fixIt(''{0}'',''RootIOFormat'',''Structure reference'')</cmd>
    <txt>Set <sldiag objui="configset" objparam="RootIOFormat">Pass root-level I/O as</sldiag> to ''Structure reference''</txt>
    </action>
    <action type="fixit">
    <cmd>configset.internal.fixIt(''{0}'',''CodeInterfacePackaging'',''Nonreusable function'')</cmd>
    <txt>Set <sldiag objui="configset" objparam="CodeInterfacePackaging">Code interface packaging</sldiag> to ''Nonreusable function'' (might impact referenced or referencing models)</txt>
    </action>
    </actions>]]>
    </entry>
    <entry key="MultiInstanceWideFcnCallTrigCPP"><![CDATA[The model cannot generate a C++ class interface because ''{0}'' is triggered by a wide function-call trigger.
    <actions exclusiveFixIts="yes">
    <action type="suggestion">
    <cmd>configset.internal.open(''{0}'',''CodeInterfacePackaging'')</cmd>
    <txt>Set ''Code interface packaging'' to a value other than ''C++ class'' (might impact referenced or referencing models)</txt>
    </action>
    </actions>]]>
    </entry>

    <entry key="AutosarCSCMdlRefParam">Submodel ''{0}'' cannot reference ''AUTOSAR.Parameter'' object ''{1}'' because
    the object's custom storage class ''{2}'' is supported only for the top model in a model hierarchy. Consider passing
    the parameter to the submodel as a model argument.</entry>
    <entry key="AutosarCSCMdlRefSig">Submodel ''{0}'' cannot reference ''AUTOSAR.Signal'' object ''{1}'' because
    the object's custom storage class ''{2}'' is supported only for the top model in a model hierarchy. </entry>
    <entry key="AutosarPIMCSCTopModel">Model ''{0}'' cannot reference ''AUTOSAR.Signal'' object ''{1}'' because
    that model is not using an AUTOSAR target. </entry>
    <entry key="MultiplePriorityViolations">Detected {0,number,integer} priority violations in system ''{1}''. Note that these priority violations are not independent, i.e., changing the priorities on a subset of the blocks reported in the diagnostics above may address all the priority violations</entry>
    <!-- MultirateEnable TopTester: test/toolbox/simulink/configsets/highlighting/DVHyperlinks/tSLEngineErrorsFixIt4.m -->
    <entry key="MultirateEnable"><![CDATA[The enabled subsystem ''{0}'' executes in multiple tasks. This can cause corrupted data or non-deterministic behavior in a real-time system.
    <actions exclusiveFixIts="yes">
    <action type="suggestion">
    <txt>Use a single-rate enabled subsystem</txt>
    </action>
    <action type="fixit">
    <cmd>configset.internal.fixIt(''{0}'',''EnableMultiTasking'',''off'')</cmd>
    <txt>Clear <sldiag objui="configset" objparam="EnableMultiTasking">Treat each discrete rate as a separate task</sldiag></txt>
    </action>
    <action type="fixit">
    <cmd>configset.internal.fixIt(''{0}'',''MultiTaskCondExecSysMsg'',''none'')</cmd>
    <txt>Suppress this message by setting <sldiag objui="configset" objparam="MultiTaskCondExecSysMsg">Multitask conditionally executed subsystem</sldiag> to ''none''</txt>
    </action>
    </actions>]]>
    </entry>
    <entry key="MultirateEnable_MC"><![CDATA[Enabled subsystem ''{0}'' executes in multiple concurrent tasks. This can cause corrupted data or nondeterministic behavior in a real-time system.
      <actions exclusiveFixIts="yes">
        <action type="suggestion">
            <txt>Use a single-rate enabled subsystem.</txt>
        </action>
      </actions>]]>
    </entry>
    <entry key="MultirateRootEnable">This model has a root level Enable port ''{0}'' and executes in multiple tasks. This can cause corrupted data or non-deterministic behavior in a real-time system. Consider modifying your model to be single-rate or clear the 'Treat each discrete rate as a separate task' option in the Solver pane of the Configuration Parameters dialog box.</entry>
    <entry key="MultipleAutoInsertedBlocksAtPort">Unable to permanently insert/place a ''{0}'' block at {1} port {2,number,integer} of block ''{3}'' as there are multiple such auto inserted blocks at that port.</entry>
    <entry key="NoAutoInsertedBlocksAtPort">Unable to permanently insert/place a ''{0}'' block at {1} port {2,number,integer} of block ''{3}'' as there are no such auto inserted blocks at that port.</entry>
    <entry key="NamedItemRename">Attempting to rename an already named item.</entry>
    <entry key="NeverGotDisconnectResponse">Never received disconnect response from target.  Disconnecting...</entry>
    <entry key="NeverGotFinalLogBufferTerminator">Did not receive final data logging buffer and logging terminator from target.  Disconnecting...</entry>
    <entry key="NoActionSSInLoops">Input data dependency violation due to action subsystems. See Subsystem Examples in the Simulink library for valid and invalid examples of action subsystems</entry>
    <entry key="NoAutoUpdateStatusClock">Unable to update target time on model status bar and block diagram parameter ''SimulationTime''.  To enable target time updates, run set_param(''{0}'',''ExtModeAutoUpdateStatusClock'',''on'').</entry>
    <entry key="NoBlocksInModel">Block diagram ''{0}'' contains no blocks or all blocks are virtual</entry>
    <entry key="NoBehaviorsForArchitectureModel">Architecture model ''{0}'' contains no components or all components are virtual. Adding behavior to components or root inputs or outputs may resolve this issue.</entry>
    <entry key="NoChangeWhileLogging">Cannot change data logging options while data logging is in progress</entry>
    <entry key="NoChangeWhileRunningInExtMode">Cannot change parameter ''{0} ({1})'' of ''{2}'' while simulation is running in External Mode</entry>
    <entry key="NoChangeToDurationWhileConnectedInPackedMode">Unable to change parameter ''ExtModeTrigDuration''. Model is connected to the target application and ''ExtModeSendContiguousSamples'' is ''on''.</entry>
    <entry key="NoChecksumDetails">There are no ''{0}'' details available for ''{1}''</entry>
    <entry key="NoChecksumDetailsCallGetCS">There are no ''{0}'' details available for ''{1}''. Try terminating your model, and calling Simulink.{2}.getChecksum(''{3}'') with the model in an uncompiled state</entry>

    <entry key="NoDataTypeOverrideForPurelyIntegerCode"><![CDATA[Cannot generate code for this model because support for floating-point numbers is disabled and the model is using double or single data types. This may be due to the 'data type override' setting on the model.
    <actions exclusiveFixIts="yes">
    <action type="fixit">
    <cmd>set_param(get_param(0,'CurrentSystem'), 'PurelyIntegerCode','off')</cmd>
    <txt>To generate code, enable support for floating-point numbers.</txt>
    </action>
    <action type="fixit">
    <cmd>fxptui.setDTOValueOnModel(gcs,'Off')</cmd>
    <txt>Remove data type override from the model.</txt>
    </action>
    </actions>]]>
    </entry>

    <entry key="NoDataUploadBlocks">No data has been selected for uploading.</entry>
    <entry key="NoDirectConnWhenDrivingIter">Invalid connection from Inport block ''{0}'' to the iterator block ''{1}''.  An Inport connected to an iterator cannot be directly connected to an Outport.  Consider inserting a Signal Conversion block on the signal line directly connecting the Inport block to the Outport block.</entry>
    <entry key="NoExtCmdsIfNotRunning">External mode commands may only be issued when in external mode and connected to the target</entry>
    <entry key="NoFcnCallOrActionSSInLoops">Input data dependency violation due to function-call or action subsystems. See valid and invalid examples of function-call subsystems in &lt;a href=\"matlab:openExample('simulink_features/SimulinkSubsystemSemanticsExample'); open_system('sl_subsys_semantics/ Function-call subsystems');\"&gt;''sl_subsys_semantics''&lt;/a&gt; for additional information.</entry>
    <entry key="NoHiliteForInvalidConn">Due to some optimizations, Simulink may not be able to highlight the section of the loop containing ''{0}''.</entry>
    <entry key="NoSimBlockDiagram">Simulation of model ''{0}'' is not allowed because it is a ''{1}'' block diagram.</entry>
    <entry key="NoDefaultBDSim">Simulation of default block diagram is not allowed.</entry>
    <entry key="NoMemSecPackageForSystem">Invalid memory section ''{0}'' specified in the Subsystem Parameters dialog of block ''{1}''. No memory section package selected in the Configuration Parameters dialog.</entry>
    <entry key="NoMemSecPackageForSystemDefaults">Invalid memory section ''{0}'' specified in the Configuration Parameters dialog of block diagram ''{1}''. No memory section package selected.</entry>
    <entry key="NoModelForRTWNameOpen">To use open_system with a Simulink Coder block or system name, you must have the model open.</entry>
    <entry key="RTWNameIsEmpty">The block ''{0}'' has an empty code generation name.</entry>
    <entry key="RTWIdIsVoid">The block ''{0}'' has no code generation identifier.</entry>
    <!--
        NoNonVirtualBlocksInModel should not be a warning. We should switch it to an info message
        because there is no fix. We are simply stating that there is nothing to simulate.
        Warnings are errors that we can recover from. In this case, there is no error.
    -->
    <entry key="NoNonVirtualBlocksInModel"><![CDATA[All blocks in block diagram ''{0}'' are either virtual or have been removed by block reduction optimization or they are inactive variants, therefore there is nothing to simulate. Note, for code generation, block reduction optimization removes all diagram branches terminating in sink blocks that do not participate in code generation. For example, To Workspace blocks and potentially their sources are removed when the <sldiag objui="configset" objparam="MatFileLogging">MAT-file logging</sldiag> is off.]]></entry>
    <entry key="NoNonvirtSubsysSelfLoops">Direct feedback connections involving nonvirtual subsystem ''{0}'' are not allowed.</entry>
    <entry key="NoMultiTaskModelSelfLoops"><![CDATA[In a multi-tasking model, direct feedback connections involving Model block ''{0}'' that have different rates are not allowed.
    <actions exclusiveFixIts="yes">
    <action type="fixit">
    <cmd>set_param_action(''{1}'', ''EnableMultiTasking'', ''off'');</cmd>
    <txt>Consider unselecting configuration option <sldiag objui="configset" objparam="EnableMultiTasking">''Treat each discrete rate as a separate task''</sldiag> to change the model to single tasking mode.</txt>
    </action>
    </actions>]]>
    </entry>
    <entry key="NoConstRateIOSelfLoop"><![CDATA[Direct feedback connection between output port {1,number,integer} and <sldiag objui="inport" objparam="{2,number,integer}" objname="{0}">input port {2,number,integer}</sldiag> of block ''{0}'' is not allowed, when one port has a constant sample time while the other does not.
    ]]>
    </entry>
    <entry key="NoOutputTimesWithFixedStep">"''OutputTimes'' are not supported by fixed step solvers (''{0}'').  The first and last elements of TIMESPAN are being used as the start and stop times.  All other elements are being ignored.  Type ''help sim'' for more information.</entry>
    <entry key="NoRTWCustomCode">The block ''{0}'' is a Simulink Coder Custom Code block; this type of block is not allowed for the {1}.</entry>
    <entry key="NoRefineWithFixedStep">"''Refine'' is not supported by fixed step solvers (''{0}'').  The specified refine factor of ''{1,number,integer}'' is being ignored.  Type ''help sim'' for more information.</entry>
    <entry key="NoRefineWithPureDiscrete"><![CDATA[Ignoring the value specified for the <sldiag objui="configset" objparam="Refine">Refine factor</sldiag> configuration parameter. This is because model ''{0}'' is a purely discrete model. See the documentation for the ''Refine factor'' option for more information.]]></entry>
    <entry key="NoSListForSystem">Can not determine the sorted list for system ''{0}''.</entry>
    <entry key="NoTrigSSInLoops">Ambiguous sorted order detected due to use of triggered subsystem(s) and/or Model blocks in a loop. See Subsystem Examples in the Simulink library for valid and invalid examples of triggered subsystems.</entry>
    <entry key="NoTsInhDueToPreSetDWorkSigObj">This model will not inherit a sample time because a sample time was explicitly set for the signal object ''{0}'' associated with DWork {1,number,integer} in block ''{2}''. \n \n If this model does not need to inherit a sample time, change the "Sample time constraint" to something other than "Ensure sample time independent" on the Solver tab of the Configuration Parameters dialog.</entry>
    <entry key="NoTsInhDueToPreSetOutputSigObj"><![CDATA[This model will not inherit a sample time because a sample time was explicitly set for the signal object ''{0}'' associated with <sldiag objui="outport" objparam="{1,number,integer}" objname="{2}">Output port {1,number,integer}</sldiag> in block ''{2}''.\n \n If this model does not need to inherit a sample time, change the "Sample time constraint" to something other than "Ensure sample time independent" on the Solver tab of the Configuration Parameters dialog.]]></entry>

    <entry key="MultipleRunTimeTasks">The block ''{0}'' has multiple run time rates.</entry>
    <entry key="NonGraphicalDependencyCrossesFunctionSubsystem">Unable to ensure block ''{0}'' runs before block ''{1}'' because one is inside a function call subsystem.</entry>
    <entry key="NonGraphicalDependencyDifferentModels">Unable to ensure block ''{0}'' runs before block ''{1}'' because they are in different models.</entry>
    <entry key="NonGraphicalDependencyLoop">Unable to ensure block ''{0}'' runs before block ''{1}'' because doing so causes a dependency loop.</entry>
    <entry key="NonGraphicalDependencyMergeBlock">Unable to ensure block ''{0}'' runs before block ''{1}'' because one is a merge block.</entry>
    <entry key="NonInhTsGlbDSMInhTsMod">Within the model ''{0}'', one or more blocks access the global data store ''{1}'', whose corresponding Simulink.Signal object has sample time {2}. However, that model specifies that it is sample time independent. The sample time of the object must be inherited (-1).</entry>
    <entry key="NonInlinedSFcnsNotSupported"><![CDATA[Block ''{0}'' is a non-inlined S-function, which is not supported with the current configuration. Select <sldiag objui="configset" objparam="SupportNonInlinedSFcns">Support non-inlined S-functions</sldiag>.]]></entry>
    <entry key="NonInlinedSFcnsNotSupportedForRowMajor">Block ''{0}'' is a non-inlined S-function which is not supported for the row-major code generation.</entry>
    <entry key="NonSourceBeingUsedAsSource"><![CDATA[Viewers & Generators Manager cannot be used with non-sources, ''{0}'' is configured to have inputs and therefore is not a source]]></entry>
    <entry key="NoninlinedSfcnNotReused">The S-function ''{0}'' has the option SS_OPTION_WORKS_WITH_CODE_REUSE set but it does not have a ''{1}.tlc'' file.  The system that it lives in will not be reused</entry>
    <entry key="RowMajorSfcnNotReusedInAcceleratedModes"> Subsystems containing the S-function ''{0}'' cannot participate in code-reuse in Accelerator and Rapid-Accelerator mode because ''{0}'' sets the SS_ROW_MAJOR option.</entry>
    <entry key="NotEnoughMemoryOnTarget">Not enough memory on the target to process the packet: {0}</entry>
    <entry key="NotImplemented">Internal error</entry>
    <entry key="NotMatchWithModelAdvisor">Setting not recommended by Model Advisor.</entry>
    <entry key="NotSupportSubsysFileInCPF"><![CDATA[The "Compact" option for the "File packaging format" parameter on the Code Generation > Code Placement pane of the Configuration Parameter dialog box does not generate separate source files for a subsystem. On the Subsystem Parameter dialog box, specify the "Code generation file name options" parameter as "Auto" for the following subsystem: ''{0}''. An alternative solution is to specify the "File packaging format" parameter as "Modular" on the Code Generation > Code Placement pane of the Configuration Parameter dialog box.]]></entry>
    <!-- NotSupportedVarSizePropTypeAmbiguous TopTester: test/toolbox/simulink/configsets/highlighting/DVHyperlinks/tSLEngineModelRefs.m -->
    <entry key="NotSupportedVarSizePropTypeAmbiguous"><![CDATA[
    ''Propagate sizes of variable-size signals''
    of the model ''{0}'' is set to ''Infer from blocks
    in model''. The model contains a conditionally executed subsystem or a
    resettable subsystem ''{1}'' which has variable-size signals in the Model
    Reference target. However, Simulink did not detect any block in the model
    for which either of the following properties hold: 1) the block output
    signal sizes depend on the input signal values; 2) the block states require
    resetting if the input signal sizes vary and if the block is not inside an
    Enabled/Function-Call/Action/Resettable Subsystem. Consequently, Simulink
    cannot determine if the model should support the propagation of
    variable-size signals ''During execution'' or ''Only when enabling''.
    <actions exclusiveFixIts="yes">
    <action type="suggestion">
    <cmd>configset.internal.open(''{0}'',''PropagateVarSize'')</cmd>
    <txt>Change ''Propagate sizes of variable-size signals'' to ''During execution'' or ''Only when enabling''</txt>
    </action>
    </actions>]]>
    </entry>
    <!-- NotSupportedVarSizePropTypeAmbiguousRootControlPort TopTester: test/toolbox/simulink/configsets/highlighting/DVHyperlinks/tSLEngineModelRefs.m -->
    <entry
        key="NotSupportedVarSizePropTypeAmbiguousRootControlPort"><![CDATA[
        ''Propagate sizes of variable-size signals''
        of the model ''{0}'' is set to ''Infer from
        blocks in model''. The model contains a control port at the root ''{1}'' and
        has variable-size signals in the Model Reference target. However, Simulink
        did not detect any block in the model for which either of the following
        properties hold: 1) the block output signal sizes depend on the input signal
        values; 2) the block states require resetting if the input signal sizes vary
        and if the block is not inside an Enabled/Function-Call/Action/Resettable
        Subsystem. Consequently, Simulink cannot determine if the model should
        support the propagation of variable-size signals ''During execution'' or
        ''Only when enabling''.
        <actions exclusiveFixIts="yes">
        <action type="suggestion">
        <cmd>configset.internal.open(''{0}'',''PropagateVarSize'')</cmd>
        <txt>Change ''Propagate sizes of variable-size signals'' to ''During execution'' or ''Only when enabling''</txt>
        </action>
        </actions>]]>
    </entry>

    <entry key="Not_FxpPoint">The ''{0}'' method of ''{1}'' can only be called for integer and fixed-point data types</entry>
    <entry key="NumDimsMismatchFromETVSSubsysIC">Number of dimensions mismatch detected: The initial output of ''{0}'' specifies the number of output dimensions is {1,number,integer}. However, the input signal is {2,number,integer}-D.</entry>
    <entry key="NumDimsNotMatchMatlab">The number of dimensions of the given MATLAB array does not match that of the Simulink internal data</entry>
    <entry key="Num_Var_Dims_Mismatch"><![CDATA[Invalid variable dimensions assignment for <sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">output port {0,number,integer}</sldiag> of ''{1}''. The number of variable dimensions is {2,number,integer}. However, the length of the MATLAB array is {3,number,integer}]]></entry>

    <entry key="OVERRIDE_IR_SUPPORT_FLAG">Dummy msg</entry>
    <entry key="ObsoleteExprDepthLimit">Model parameter ''RTWExpressionDepthLimit'' is obsolete.  Use the ''ExpressionFolding'' parameter instead.</entry>
    <entry key="ObsoleteSimPrmPage">Model parameter ''SimParamPage'' is obsolete.  To interact with configuration parameters dialog, use ''slCfgPrmDlg'' command</entry>
    <entry key="OldStyleStateLabel">In the initial states structure, the state label for ''{0}'' should be updated from {1} to {2}</entry>
    <entry key="OnlyTermWhenCompForChecksums">The model ''{0}'' has been compiled for checksums only. Termination is the only permissible model command for a model in this state</entry>
    <entry key="OuterOutportPassThruFcnCallInArgMustInheritIC"><![CDATA[The parameter ''Initial output'' of Outport block ''{0}'' must be set to [] to avoid a function-call data dependency violation on the signal originating from <sldiag objui="outport" objparam="{1,number,integer}" objname="{2}">output port {1,number,integer}</sldiag> of block ''{2}''.
    <actions exclusiveFixIts="yes">
        <action type="fixit">
            <cmd>set_param(''{0}'',''InitialOutput'',''[]'');</cmd>
            <txt>Set ''Initial output'' to ''[]'' for ''{0}''.</txt>
        </action>
    </actions>
    ]]></entry>
    <entry key="OutportBufferRequiredConstTS">Signal connected to Outport block ''{0}'' must be a signal copy to ensure correct initialization because the Outport block is driven by block ''{1}'' output port {2,number,integer} with constant sample time. Insert a Signal Conversion block or modify the model.</entry>
    <entry key="OutportBufferRequiredExpFcnRootOutport">Signal connected to Outport block ''{0}'' must be a signal copy because subsystem ''{1}'' output port {2,number,integer} drives a root Outport block in an export-function model. Insert a Signal Conversion block or modify the model.</entry>
    <entry key="OutportBufferRequiredMergeNesting">Signal connected to Outport block ''{0}'' must be a signal copy because subsystem ''{1}'' output port {2,number,integer} connects to a Merge block and the Outport block is driven by nested conditionally executed subsystem ''{3}'' output port {4,number,integer}. The signal copy preserves the last computed output from the nested conditional subsystem before the result is merged. Insert a Signal Conversion block or modify the model.</entry>
    <entry key="OutportBufferRequiredMergeBranching">Signal connected to Outport block ''{0}'' must be a signal copy because subsystem ''{1}'' output port {2,number,integer} connects to a Merge block. Source block ''{3}'' output port {4,number,integer} branches to multiple destinations and therefore it does not support being merged directly. Insert a Signal Conversion block or modify the model.</entry>
    <entry key="OutportBufferRequiredMergeNotReusable">Signal connected to Outport block ''{0}'' must be a signal copy because subsystem ''{1}'' output port {2,number,integer} connects to a Merge block. The signal buffer for source block ''{3}'' output port {4,number,integer} is marked as not reusable and therefore it does not support being merged directly. Insert a Signal Conversion block or modify the model.</entry>
    <entry key="OutportBufferRequiredMergeModelBlock">Signal connected to Outport block ''{0}'' must be a signal copy because subsystem ''{1}'' output port {2,number,integer} connects to a Merge block. The source Model block ''{3}'' output port {4,number,integer} does not support being merged directly because the signal that drives the corresponding root Outport block in the referenced model violates Merge block usage rules. Insert a Signal Conversion block or modify the model.</entry>
    <entry key="OutportBufferRequiredNesting1">Signal connected to Outport block ''{0}'' must be a signal copy to ensure correct initialization because the Outport block is driven by nested conditionally executed subsystem block ''{1}'' output port {2,number,integer} with a separate initial output value. Insert a Signal Conversion block or modify the model.</entry>
    <entry key="OutportBufferRequiredNesting2">Signal connected to Outport block ''{0}'' must be a signal copy to ensure correct initialization because the Outport block is driven by a nested conditionally executed subsystem with a separate initial output value through Merge block ''{1}'' output port {2,number,integer}. Insert a Signal Conversion block or modify the model.</entry>
    <entry key="OutportBufferRequiredNotReusable">Signal connected to Outport block ''{0}'' must be a signal copy to ensure correct initialization because the signal buffer for source block ''{1}'' output port {2,number,integer} is marked as not reusable. Insert a Signal Conversion block or modify the model.</entry>
    <entry key="OutportBufferRequiredBranching">Signal connected to Outport block ''{0}'' must be a signal copy to ensure correct initialization because source block ''{1}'' output port {2,number,integer} drives another Outport block ''{3}'' with a separate initial output value. Insert a Signal Conversion block or modify the model.</entry>
    <entry key="OutportBufferRequiredBranchingSameOutport">Signal connected to Outport block ''{0}'' must be a signal copy to ensure correct initialization because source block ''{1}'' output port {2,number,integer} drives this Outport block via two separate signals. Insert a Signal Conversion block or modify the model.</entry>
    <entry key="OutportBufferRequiredStateflowReset">Signal connected to Outport block ''{0}'' must be a signal copy to ensure correct initialization because Stateflow block ''{1}'' output port {2,number,integer} drives the Outport block and the parent subsystem ''{3}'' is configured to reset states when enabling and is not guaranteed to execute when enabling. Insert a Signal Conversion block or modify the model.</entry>
    <entry key="OutportBufferRequiredVariantCondition">Signal connected to Outport block ''{0}'' must be a signal copy because the Outport block variant condition differs from that of its source block. Insert a Signal Conversion block or modify the model.</entry>
    <entry key="OutportBufferNotAllowedFcnCallInit">Unable to automatically insert Signal Conversion block before Outport block ''{2}'' because the signal from source block ''{0}'' output port {1,number,integer} is a function-call signal.</entry>
    <entry key="OutportBufferNotAllowedFcnCallInArg"><![CDATA[Unable to automatically insert Signal Conversion block before Outport block ''{2}'' because the signal from source block ''{0}'' output port {1,number,integer} passes through the Outport block to a function-call destination block and the insertion would cause a function-call data dependency violation. For examples of function-call data dependency violations, see example model <a href="matlab:openExample(''simulink_features/SimulinkSubsystemSemanticsExample''); open_system('sl_subsys_semantics/ Function-call subsystems');"> ''sl_subsys_semantics''</a>.]]></entry>
    <entry key="OutportBufferNotAllowedSigObj">Unable to automatically insert Signal Conversion block before Outport block ''{2}'' because the signal from source block ''{0}'' output port {1,number,integer} has a non-auto storage class.</entry>
    <entry key="OutportCannotBufferFcnCallSFcn">The function-call signal from ''{0}'' output port {1,number,integer} is being treated as a regular signal by Outport block ''{2}''. To ensure the Outport block recognizes the function-call signal, connect subsystem ''{3}'' output port {4,number,integer} to a function-call subsystem. Set ''Initial output'' of the Outport block to []. Alternatively, if the source code of the S-Function block ''{5}'' is accessible and all elements of output port {6,number,integer} are function-call, consider using ssSetOutputPortDataType(S, {7,number,integer}, SS_FCN_CALL) in mdlInitializeSizes to explicitly declare this output port as a function-call signal. Set ''Initial output'' of the Outport block to [].</entry>
    <entry key="OutportCannotBufferFcnCall">The function-call signal from ''{0}'' output port {1,number,integer} is being treated as a regular signal by Outport block ''{2}''. To ensure the Outport block recognizes the function-call signal, connect subsystem ''{3}'' output port {4,number,integer} to a function-call subsystem. Set ''Initial output'' of the Outport block to [].</entry>
    <entry key="OutportCannotHaveICForVirtualBus"><![CDATA[ The parameter ''Initial output'' of Outport block ''{0}'' must be empty ([]) when the Outport block is driven by a virtual bus signal. It is possible to specify the initial output using a scalar or a structure value for this Outport block. However, you must enable simplified initialization mode by setting <sldiag objui="configset" objparam="UnderspecifiedInitializationDetection">Underspecified initialization detection</sldiag> to ''simplified''. Note that some modifications may be necessary to ensure the model conforms to certain modeling standards required by the new initialization mode. For more information, see documentation for the Model Advisor check ''Check consistency of initialization parameters for Outport and Merge blocks''.]]></entry>
    <entry key="OutportCannotLogNonBuiltInDataTypes">Using the structure or array format is not supported when logging outport ''{0}'' with the string data type or data types that are not built-in. Change the logging format to Dataset or disable Output Logging.
		<![CDATA[
		<actions exclusiveFixIts="yes">
			<action type="fixit">
				<cmd>set_param(bdroot(''{0}''),''SaveFormat'',''Dataset'')</cmd>
				<txt>Set data format of model to Dataset.</txt>
			</action>
			<action type="fixit">
				<cmd>set_param(bdroot(''{0}''),''SaveOutput'',''off'')</cmd>
				<txt>Disable Output Logging.</txt>
			</action>
	    </actions>
		]]>
	</entry>
    <entry key="OutportEmptyDialogIC">Invalid setting for parameter ''Initial output:'' of Outport block ''{0}''. The initial output value must be fully specified.</entry>
    <entry key="OutportInvalidEmptyDialogIC">Invalid setting for parameter ''Initial output:'' of Outport block ''{0}''. The initial output value must be fully specified. Alternatively, to use the default initialization, use an empty matrix ('[]') as the value for the ''Initial output'' parameter.</entry>
    <entry key="OutportInvICSrcInternal">Cannot inherit initial output for Outport block ''{0}'' because Simulink inserted a block of type ''{1}'' on the input signal of this Outport block. To correct this problem, specify an initial output value.</entry>
    <entry key="OutportInvICSrcPort"><![CDATA[Cannot inherit initial output for Outport block ''{0}'' because <sldiag objui="outport" objparam="{1,number,integer}" objname="{2}">output port {1,number,integer}</sldiag> of block ''{2}'' is not a valid initial output source. Outport block can only inherit initial output from Constant, Initial Condition, Merge (with initial output), or conditionally executed subsystem blocks. To correct this problem, ensure Outport is driven by a valid initial output source or specify an initial output value.]]></entry>
    <entry key="OutportInvICSrcRateTrans">Cannot inherit initial output for Outport block ''{0}'' because a Rate Transition block is inserted on the input signal of the Outport block. If you need a rate transition, specify an initial output value for the Outport block. Otherwise, deselect the option ''Automatically handle rate transition for data transfer'' in the Solver pane of the Configuration Parameters dialog</entry>

    <entry key="OutportInheritICStateflowMultiRateEnabledSubsys1"><![CDATA[Outport block
    ''{0}'' is inheriting its initial output value from <sldiag objui="outport" objparam="{1,number,integer}" objname="{2}">output port
    {1,number,integer}</sldiag> of Stateflow block ''{2}'' in the multi-rate enabled
    subsystem ''{3}''. Consider one of the following modifications:\n

    (1) Change ''States when enabling'' parameter of Enable Port block ''{4}'' to
    ''held''.\n

    (2) Make the enabled subsystem single-rate.\n

    (3) For the Outport block, ensure that the parameter ''Initial output'' is
    not empty ([]).\n

    (4) Insert a Signal Conversion block before the Outport block.]]></entry>

    <entry key="OutportInheritICStateflowMdlRefMultiRateEnabledSubsys1"><![CDATA[Outport
    block ''{0}'' is inheriting its initial output value from a Stateflow block
    through <sldiag objui="outport" objparam="{1,number,integer}" objname="{2}">output port {1,number,integer}</sldiag> of Model block ''{2}'' in the
    multi-rate enabled subsystem ''{3}''. Consider one of the following
    modifications:\n

    (1) Change ''States when enabling'' parameter of Enable Port block ''{4}''
    to ''held''.\n

    (2) Make the enabled subsystem single-rate.\n

    (3) For the Outport block, ensure that the parameter ''Initial output'' is
    not empty ([]).\n

    (4) Insert a Signal Conversion block before the Outport block.]]></entry>

    <entry key="OutportInheritICStateflowMultiRateEnabledSubsys2"><![CDATA[Outport block
    ''{0}'' is inheriting its initial output value from <sldiag objui="outport" objparam="{1,number,integer}" objname="{2}">output port
    {1,number,integer}</sldiag> of Stateflow block ''{2}'' but its parent function-call
    subsystem ''{3}'' is driven by a multi-rate enabled subsystem
    ''{4}''. Consider one of the following modifications:\n

    (1) Change ''States when enabling'' parameter of Trigger Port block ''{5}''
    to ''held''.\n

    (2) Make the enabled subsystem single-rate.\n

    (3) For the Outport block, ensure that the parameter ''Initial output'' is
    not empty ([]).\n

    (4) Insert a Signal Conversion block before the Outport block.]]></entry>

    <entry key="OutportInheritICStateflowMdlRefMultiRateEnabledSubsys2"><![CDATA[Outport
    block ''{0}'' is inheriting its initial output value from a Stateflow block
    through <sldiag objui="outport" objparam="{1,number,integer}" objname="{2}">output port {1,number,integer}</sldiag> of Model block ''{2}'' but its parent
    function-call subsystem ''{3}'' is driven by a multi-rate enabled subsystem
    ''{4}''. Consider one of the following modifications:\n

    (1) Change ''States when enabling'' parameter of Trigger Port block ''{5}''
    to ''held''.\n

    (2) Make the enabled subsystem single-rate.\n

    (3) For the Outport block, ensure that the parameter ''Initial output'' is
    not empty ([]).\n

    (4) Insert a Signal Conversion block before the Outport block.]]></entry>

    <entry key="OutportInvalidArrayDataLoggingUsingLHSA_COMPLEXITY">Cannot save outputs through extra output arguments of the sim command because signals connected to the root outports have different complexity. \nSave outputs through single output argument by using input arguments '''ReturnWorkspaceOutputs'' and ''on''.</entry>
    <entry key="OutportInvalidArrayDataLoggingUsingLHSA_DATATYPE">Cannot save outputs through extra output arguments of the sim command because signals connected to the root outports have different data types. \nSave outputs through single output argument by using input arguments '''ReturnWorkspaceOutputs'' and ''on''.</entry>
    <entry key="OutportInvalidArrayDataLoggingUsingLHSA_DIM">Cannot save outputs through extra output arguments of the sim command because signals connected to the root outports of model ''{0}'' are not scalar or 1-D arrays. \nSave outputs through single output argument by using input arguments '''ReturnWorkspaceOutputs'' and ''on''.</entry>
    <entry key="OutportInvalidArrayDataLogging_COMPLEXITY">Cannot save outputs in the ''Array'' format because the signals connected to the root outports are not of the same complexity. \nSet ''Configuration Parameters &gt; Data Import/Export &gt; Format'' to ''Dataset'', ''Structure with time'' or ''Structure''. The output format can also be specified via input argument ''SaveFormat'' of the sim command for command line simulation.</entry>
    <entry key="OutportInvalidArrayDataLogging_DATATYPE">Cannot save outputs in the ''Array'' format because signals connected to the root outports have different data types. \nSet ''Configuration Parameters &gt; Data Import/Export &gt; Format'' to ''Dataset'', ''Structure with time'' or ''Structure''. The output format can also be specified via input argument ''SaveFormat'' of the sim command for command line simulation.</entry>
    <entry key="OutportInvalidArrayDataLogging_DIM">Cannot save outputs in the ''Array'' format because signals connected to the root outports of model ''{0}'' are not scalar or 1-D arrays. Set ''Configuration Parameters &gt; Data Import/Export &gt; Format'' to ''Dataset'', ''Structure'' or ''Structure with time''.</entry>
    <entry key="BEPInvalidDataLoggingFormat"><![CDATA[Model ''{0}'' has root level bus element outport blocks and is configured to save outputs in either ''Array'', ''Structure'' or ''Structure with time'' formats.
    <actions exclusiveFixIts="yes">
    <action type="suggestion">
    <cmd>configset.internal.open(''{0}'',''SaveFormat'')</cmd>
    <txt>Set ''Configuration Parameters &gt; Data Import/Export &gt; Format'' to ''Dataset'' to save outputs</txt>
    </action>
    </actions>]]>
    </entry>
    <entry key="OutportMustHaveScalarICForBusSignal">The parameter ''Initial output'' of Outport block ''{0}'' must be a scalar or a structure when the Outport block is driven by a bus signal</entry>
    <entry key="OutportVarDimsVirtualBusWithNonVirtualSubbusSimplified"><![CDATA[A virtual bus containing non-virtual bus elements is not supported as an input to the Outport block ''{0}'' because at least one of the elements of the bus has variable dimensions.
    <actions exclusiveFixIts="yes">
    <action type="suggestion">
    <txt>Insert the 'To Virtual Bus' block at the input of ''{0}'' to convert the bus signal to one that has no non-virtual bus elements.</txt>
    </action>
    <action type="suggestion">
    <txt>Alternatively, ensure that the input to ''{0}'' does not have any elements that has variable dimensions.</txt>
    </action>
    </actions>]]>
    </entry>
    <entry key="OutportVarDimsVirtualBusWithNonVirtualSubbusClassic"><![CDATA[A virtual bus containing non-virtual bus elements is not supported as an input to the Outport block ''{0}'' because at least one of the elements of the bus has variable dimensions. Carry out all the following steps to fix the issue.
    <actions exclusiveFixIts="yes">
    <action type="fixit">
    <cmd>configset.internal.fixIt(''{1}'',''UnderspecifiedInitializationDetection'',''Simplified'')</cmd>
    <txt>Set <sldiag objui="configset" objparam="UnderspecifiedInitializationDetection">Underspecified initialization detection</sldiag> to Simplified.</txt>
    </action>
    <action type="suggestion">
    <txt>Insert the 'To Virtual Bus' block at the input of ''{0}'' to convert the bus signal to one that has no non-virtual bus elements.</txt>
    </action>
    </actions>]]>
    </entry>
    <entry key="OutportMustHaveScalarICForVarDimsVirtualBusClassic"><![CDATA[The model ''{1}'' cannot have the parameter <sldiag objui="configset" objparam="UnderspecifiedInitializationDetection">Underspecified initialization detection</sldiag> set to ''classic'' when it contains an Outport block such as ''{0}'' which is driven by a virtual bus and the bus contains an element of variable dimensions.
    <actions exclusiveFixIts="yes">
    <action type="suggestion">
    <cmd>Simulink.internal.OpenBlockParamsDialog(''{0}'',''InitialOutput'')</cmd>
    <txt>Set the ''Initial output'' parameter to a scalar value.</txt>
    </action>
    <action type="fixit">
    <cmd>configset.internal.fixIt(''{1}'',''UnderspecifiedInitializationDetection'',''Simplified'')</cmd>
    <txt>Set <sldiag objui="configset" objparam="UnderspecifiedInitializationDetection">Underspecified initialization detection</sldiag> to Simplified.</txt>
    </action>
    </actions>]]>
    </entry>
    <entry key="OutportNeedsVirtualBusCopy">An explicit copy of the bus signal driving the Outport block ''{0}'' is needed to ensure correct initialization of the corresponding subsystem''s output signal. Insert a Signal Conversion block with the ''Output'' option set to ''Signal copy'' before this Outport block. An additional signal copy may be required for the following reasons: (1) Outport is driven by a block with non-overwritable output such as a Ground, Constant, or Stateflow block; (2) Outport shares the same signal source with another Outport in the same subsystem or one nested within the current subsystem but having a different initial output value; (3) Outport is connected to an input of a Merge block or (4) A Simulink.Signal object with explicit initial value is being specified on one of Outport''s input signals</entry>
    <entry key="OutportPassingThruFcnCallInitSigMustInheritIC"><![CDATA[A function-call trigger signal from <sldiag objui="outport" objparam="{1,number,integer}" objname="{2}">output port {1,number,integer}</sldiag> of block ''{2}'' is passing through the Outport block ''{0}''. Therefore, the parameter ''Initial output'' must be set to [].
    <actions exclusiveFixIts="yes">
        <action type="fixit">
            <cmd>set_param(''{0}'',''InitialOutput'',''[]'');</cmd>
            <txt>Set ''Initial output'' to ''[]'' for ''{0}''.</txt>
        </action>
    </actions>
    ]]></entry>
    <entry key="OutputBufferInfNanDetectedError"><![CDATA[Block ''{0}'' output ''{1}'' for element {2,number,integer} of <sldiag objui="outport" objparam="{3,number,integer}" objname="{4}">output port {3,number,integer}</sldiag> at {4} time step {5}. This block may not be where the value was introduced.  To find the block where the value originated, please run in normal mode instead of accelerator mode]]></entry>
    <entry key="OutputNotConnected"><![CDATA[<sldiag objui="outport" objparam="{0,number,integer}" objname="{1_SLObject}">Output port {0,number,integer}</sldiag> of block ''{1_SLObject}'' is not connected.]]></entry>
    <entry key="OutputPortMultiDDimsDisallowed"><![CDATA[Cannot set dimensions of <sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">output port {0,number,integer}</sldiag> of ''{1}'' to {2}. This block is not setup to handle signals of dimensions greater than 2 dimensions.]]></entry>
    <entry key="OutputPortTrailingUnityDimsDisallowed"><![CDATA[Cannot initialize dimensions of <sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">output port {0,number,integer}</sldiag> of ''{1}'' to {2}. When the number of dimensions of a matrix exceeds 2, the size of the trailing dimension must be greater than 1.]]></entry>
    <entry key="OverLicenseBlockLimit">Number of blocks in the block diagram ''{0}'' and all models it references exceeds the license limit of {1,number,integer} nonvirtual blocks.</entry>
    <entry key="LicenseNoAcceleratorWarning">The model ''{0}'' uses Accelerator, or Rapid Accelerator mode. This license does not support these modes. The simulation will run in Normal mode.</entry>
    <entry key="ExplicitPartitionsNotSupportedInXIL">Model with explicit partitions is not supported by top-model SIL or PIL simulation mode. However, this model can be verified, equivalently, by referencing it as a model block with SIL or PIL simulation mode.</entry>
    <entry key="PLCCoder_LicenseError">Unable to check out the Simulink PLC Coder license which is needed to generate code</entry>
    <entry key="ParamDataTypeNotSupportedInRTP">The block diagram ''{0}'' has a tunable parameter ''{1}'' with data type ''{2}''. This data type is not supported by rsimgetrtp or in rapid accelerator mode.</entry>
    <entry key="NotSupportRSIMWithMessages">Model ''{0}'' is configured with system target file rsim.tlc and contains block ''{1}'', which sends or receives messages. System target file rsim.tlc does not support message passing for that block. Select a different system target file.</entry>
    <entry key="NotSupportExtModeWithMessages">Model ''{0}'' is configured to use external mode and contains block ''{1}'', which sends or receives messages. External mode does not support message passing for that block. Clear model configuration parameter External mode.
    <![CDATA[
             <actions exclusiveFixIts="yes">
             <action type="fixit">
             <cmd>configset.internal.fixIt(''{0}'',''ExtMode'',''off'')</cmd>
             <txt>Disable <sldiag objui="configset" objparam="ExtMode">external mode</sldiag>.</txt>
             </action>
             </actions>
    ]]></entry>
    <entry key="NotSupportLogToMDFWithMessages">Model ''{0}'' is configured to log signals to MDF file and contains block ''{1}'', which sends or receives messages. MDF-file signal logging does not support message passing for that block. Set model configuration parameter LogToMDFFile to 'off'.
    <![CDATA[
             <actions exclusiveFixIts="yes">
             <action type="fixit" id="DisableMDF">
             <cmd>configset.internal.fixIt(''{0}'',''LogToMDFFile'',''off'')</cmd>
             <txt>Disable <sldiag objui="configset" objparam="LogToMDFFile">Log signals to MDF file</sldiag>.</txt>
             </action>
             </actions>
    ]]></entry>
    <entry key="ModelParameterNotFoundInCAPI"> The model parameter ''{0}'' was not found in the C-API. </entry>
    <entry key="BlockParameterNotFoundInCAPI"> The block parameter ''{0}'' with block path ''{1}'' was not found in the C-API. </entry>
    <entry key="RSimGetRtpGeneratedCodeDoesNotExist"> Could not find the host C-API library ''{0}''. </entry>
    <entry key="RSimGetRtpCannotUsePreCompiledModel">RSimGetRTP does not work with pre-compiled models.</entry>
    <entry key="RSimGetRtpChecksumMismatch">The checksum in the rtp supplied to RSimGetRTP does not match the checksum in the generated code.</entry>
    <entry key="ParameterDataNotReusableSCForCPP">The storage class of parameter ''{0}'' is global, thus the generated code is not C++ class interface compliant.  Consider using storage class ''Auto'', or setting the option ''Code interface packaging'' to a value other than ''C++ class''</entry>
    <entry key="ParentInitTimeVariableSizeSubsystemExecTimeVariableSize">The subsystem ''{0}'' is set to ''Propagate sizes of variable-size signals during execution''. However, its parent subsystem is set to ''Propagate sizes of variable-size signals only when enabling, resetting, or when execution is resumed''. Consider changing the parameter ''Propagate sizes of variable-size signals'' for ''{1}'' to ''Only when enabling''.</entry>
    <entry key="ResetSSParentInitTimeVariableSizeSubsystemExecTimeVariableSize">The subsystem ''{0}'' is set to ''Propagate sizes of variable-size signals during execution''. However, its parent subsystem is set to ''Propagate sizes of variable-size signals only when enabling, resetting, or when execution is resumed''. Consider changing the parameter ''Propagate sizes of variable-size signals'' for ''{1}'' to ''Only when resetting''.</entry>
    <entry key="EmlParseCompilationError">Derived expression, ''{0}'', specified in the code replacement library is not supported for code generation.</entry>
    <entry key="PartialCompileEarlyTerminate">Terminating compile after parameter evaluation as per request</entry>
    <entry key="PassThroughBusTypeMismatch">''{0}'' has an invalid data type. The block has set a flag (ssSetInputDimsSameAsOutputDims for S-functions) which indicates that the input port {1,number,integer} and the output port {2,number,integer} must have the same bus type throughout the model execution. Simulink requires that the input and the output ports have the same bus type.</entry>
    <entry key="PassThroughCompStageMismatch">Simulink detected an incorrect usage of ''ssSetInputPortDimsSameAsOutputPortDims'' for the S-function in ''{0}''. This SimStruct function can only be used in the ''mdlSetWorkWidths'' method.</entry>
    <entry key="PassThroughDimsMismatch"><![CDATA[The maximum dimensions of the variable-size signals at the <sldiag objui="inport" objparam="{1,number,integer}" objname="{0}">input port {1,number,integer}</sldiag> and the <sldiag objui="outport" objparam="{2,number,integer}" objname="{0}">output port {2,number,integer}</sldiag> of block ''{0}'' are ''{3}'' and ''{4}'' respectively. These values at the input and the output port of this block must match.]]></entry>
    <entry key="PassThroughDimsModeMismatch">''{0}'' has an invalid dimension mode setting. The block has set a flag (ssSetInputDimsSameAsOutputDims for S-functions) which indicates that the dimensions of the input port {1,number,integer} and the output port {2,number,integer} must be the same throughout the model execution. Simulink requires that the input and the output ports have the same dimension mode.</entry>
    <entry key="PassThroughInvalidDirectFeedThroughSetting">''{0}'', which has variable-size mode, has an invalid direct feedthrough setting. The block has set a flag (ssSetInputDimsSameAsOutputDims for S-functions) which indicates that the dimensions of the input port {1,number,integer} and the output port {2,number,integer} must be the same throughout the model execution. Simulink requires that the direct feedthrough setting for the input port must be ''on''.</entry>
    <entry key="PathEmpty">Empty path specified</entry>
    <entry key="PathInvalid">Invalid path specified</entry>
    <entry key="PeriodicFCSSMustHaveScalarCall">Only one function-call initiator can execute function-call block ''{0}'' because it has a periodic sample time.</entry>
    <entry key="PerturbationMustBeScalar">Port perturbation level for the block ''{0}'', port {1,number,integer} must be a scalar variable.</entry>
    <entry key="PerturbationNotValidOnOutputPort">Port perturbation level not valid for a Simulink output port</entry>
    <entry key="PerturbationWithNonDoubleData">The block is linearized using numerical perturbation method. At least one of the input ports is non-double and is not perturbed.</entry>
    <entry key="PortBasedTsNeedsPorts">The block ''{0}'' cannot specify PORT_BASED_SAMPLE_TIMES because it has no ports.</entry>
    <entry key="PortDimsMismatch11"><![CDATA[Error in port widths or dimensions. Invalid dimension has been specified for <sldiag objui="inport" objparam="{0,number,integer}" objname="{1}">input port {0,number,integer}</sldiag> of ''{1}''. Dimensions cannot be NULL.]]></entry>
    <entry key="PortDimsMismatch12"><![CDATA[Error in port widths or dimensions. Invalid dimension has been specified for <sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">output port {0,number,integer}</sldiag> of ''{1}''. Dimensions cannot be NULL.]]></entry>
    <entry key="PortDimsMismatch21"><![CDATA[Error in port widths or dimensions. Invalid dimension has been specified for <sldiag objui="inport" objparam="{0,number,integer}" objname="{1}">input port {0,number,integer}</sldiag> of ''{1}''.]]></entry>
    <entry key="PortDimsMismatch22"><![CDATA[Error in port widths or dimensions. Invalid dimension has been specified for <sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">output port {0,number,integer}</sldiag> of ''{1}''.]]></entry>
    <entry key="PortDimsMismatch31"><![CDATA[Error in port widths or dimensions. <sldiag objui="inport" objparam="{0,number,integer}" objname="{1}">Input port {0,number,integer}</sldiag> of ''{1}'' has {2,number,integer} elements.  This port does not accept the dimensions (or orientation) specified by the input signal.]]></entry>
    <entry key="PortDimsMismatch32"><![CDATA[Error in port widths or dimensions. <sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">Output port {0,number,integer}</sldiag> of ''{1}'' has {2,number,integer} elements.  This port does not accept the dimensions (or orientation) specified by the output signal.]]></entry>
    <entry key="PortDimsMismatch41"><![CDATA[Error in port widths or dimensions. <sldiag objui="inport" objparam="{0,number,integer}" objname="{1}">Input port {0,number,integer}</sldiag> of ''{1}'' is a one dimensional vector with {2,number,integer} elements.]]></entry>
    <entry key="PortDimsMismatch42"><![CDATA[Error in port widths or dimensions. <sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">Output port {0,number,integer}</sldiag> of ''{1}'' is a one dimensional vector with {2,number,integer} elements.]]></entry>
    <entry key="BusSelectorAoBInputErr">Bus Selector block ''{0}'' expects a bus, but receives an array of buses. To select an element from an array of buses, use a Selector block instead of a Bus Selector block.</entry>
    <entry key="PortDimsMismatch51"><![CDATA[Error in port widths or dimensions. <sldiag objui="inport" objparam="{0,number,integer}" objname="{1}">Input port {0,number,integer}</sldiag> of ''{1}'' is a {2} matrix.]]></entry>
    <entry key="PortDimsMismatch52"><![CDATA[Error in port widths or dimensions. <sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">Output port {0,number,integer}</sldiag> of ''{1}'' is a {2} matrix.]]></entry>
    <entry key="PortHandleNotAvailable">At least one of the port handles that correspond to linearization points is no longer available. Make sure that no block has been removed from block diagram, for example, in a model callback function or mask initialization code.</entry>
    <entry key="PortSampHitForNonPST">The ''IsSampleHit'' method of ''{0}'' cannot be called for a port that has no sample time</entry>
    <entry key="PortTypeDomainDifference">Port type ''{0}'' and port type ''{1}'' have different domains and cannot connect.</entry>
    <entry key="PortVarDimsMismatch31"><![CDATA[Error in port widths or dimensions. <sldiag objui="inport" objparam="{0,number,integer}" objname="{1}">Input port {0,number,integer}</sldiag> of ''{1}'' has a maximum of {2,number,integer} elements.  This port does not accept the dimensions (or orientation) specified by the input signal.]]></entry>
    <entry key="PortVarDimsMismatch32"><![CDATA[Error in port widths or dimensions. <sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">Output port {0,number,integer}</sldiag> of ''{1}'' has a maximum of {2,number,integer} elements.  This port does not accept the dimensions (or orientation) specified by the output signal.]]></entry>
    <entry key="PortVarDimsMismatch41"><![CDATA[Error in port widths or dimensions. <sldiag objui="inport" objparam="{0,number,integer}" objname="{1}">Input port {0,number,integer}</sldiag> of ''{1}'' is a one dimensional vector with a maximum of {2,number,integer} elements.]]></entry>
    <entry key="PortVarDimsMismatch42"><![CDATA[Error in port widths or dimensions. <sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">Output port {0,number,integer}</sldiag> of ''{1}'' is a one dimensional vector with a maximum of {2,number,integer} elements.]]></entry>
    <entry key="PortVarDimsMismatch51"><![CDATA[Error in port widths or dimensions. <sldiag objui="inport" objparam="{0,number,integer}" objname="{1}">Input port {0,number,integer}</sldiag> of ''{1}'' is a matrix with a maximum size of {2}.]]></entry>
    <entry key="PortVarDimsMismatch52"><![CDATA[Error in port widths or dimensions. <sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">Output port {0,number,integer}</sldiag> of ''{1}'' is a matrix with a maximum size of {2}.]]></entry>
    <entry key="PrintAlgLoopFound">Found algebraic loop that contains: {0} </entry>
    <entry key="ProfileInitErrWithErrContext">An error occurred initializing the error context for the Simulink profiler</entry>
    <entry key="ProfileInitErrWithMsgContext">An error occurred initializing the message context for the Simulink profiler</entry>
    <entry key="ProfileReportGenErr">An error occurred while generating the profile report for model ''{0}''.</entry>
    <entry key="ProfilingNotSupportedForFixedAndDiscrete">Solver Profiling is not supported for fixed step solvers and models with no states.\nNo solver information will be produced related to the fixed step ODE solver or the discrete solver\n</entry>
    <entry key="ProjStateNotFinite">After imposing invariants at time {0}, state ''{1}'' of ''{2}'' is Inf or NaN.  Stopping simulation.</entry>
    <entry key="ProjectionsNotSupported">Unable to generate code for model ''{0}'' because it requires state projection, which is currently not supported</entry>
    <entry key="RTI_ASSIGN_COMPLEX_MISMATCH">Invalid assignment in ''{0}'': attempt to assign ''complex'' to ''real''</entry>
    <entry key="RTI_ASSIGN_DATA_TYPE_MISMATCH">Invalid assignment in ''{0}'': attempt to assign ''{1}'' to ''{2}''</entry>
    <entry key="RTI_ASSIGN_DIMS_MISMATCH">Invalid assignment in ''{0}'': attempt to assign a matrix of dimensions {1} to a matrix of dimensions {2}</entry>
    <entry key="RTI_ASSIGN_INVALID_DATA">Invalid assignment in ''{0}''. Data must be a numeric or logical array</entry>
    <entry key="RTI_ASSIGN_NUM_DIMS_MISMATCH">Invalid assignment in ''{0}'': attempt to assign a matrix to a vector</entry>
    <entry key="RTI_ASSIGN_VECT_WIDTH_MISMATCH">Invalid assignment in ''{0}'': attempt to assign a vector of width {1,number,integer} to a vector of width {2,number,integer}</entry>
    <entry key="RTI_ContStatesInvalidComplexity">Invalid data complexity specified for continuous states of ''{0}''. Data complexity must be ''Real'' or ''Complex''</entry>
    <entry key="RTI_ContStatesInvalidDatatype">Invalid datatype specified for continuous states of ''{0}''. Datatype ID of continuous states must 0 for ''double''</entry>
    <entry key="RTI_ContStatesInvalidDims">Invalid dimension specified for continuous states of ''{0}''. Dimension for continuous states must be a positive integer</entry>
    <entry key="RTI_DataAsDouble_NonBuiltInNotSupported">DataAsDouble method in ''{0}'' is not supported for non built-in data types</entry>
    <entry key="RTI_DataStoreCmplxReadOnly">Cannot set the read-only ''Complexity'' field of DataStore ''{0,number,integer}'' in ''{1}''</entry>
    <entry key="RTI_DataStoreDimsReadOnly">Cannot set the read-only ''Dimensions'' field of DataStore ''{0,number,integer}'' in ''{1}''</entry>
    <entry key="RTI_DataStoreDtypeReadOnly">Cannot set the read-only ''DataType'' field of DataStore ''{0,number,integer}'' in ''{1}''</entry>
    <entry key="RTI_Data_NonBuiltInNotSupported">Accessing data with non built-in data types in ''{0}'' is not supported</entry>
    <entry key="RTI_DerivativesInvalidComplexity">Invalid data complexity specified for derivatives of ''{0}''. Data complexity must be ''Real'' or ''Complex''</entry>
    <entry key="RTI_DerivativesInvalidDatatype">Invalid datatype specified for derivatives of ''{0}''. Datatype ID of derivatives must be 0 for ''double''</entry>
    <entry key="RTI_DerivativesInvalidDims">Invalid dimension specified for derivatives of ''{0}''. Dimension for continuous states must be a positive integer</entry>
    <entry key="RTI_DlgPrmInvalidComplexity">Invalid data complexity specified for dialog parameter {0,number,integer} of ''{1}''. Data complexity must be ''Real'' or ''Complex''</entry>
    <entry key="RTI_DlgPrmInvalidDatatype">Invalid datatype specified for dialog parameter {0,number,integer} of ''{1}''. Datatype ID must be one of the following: 0 for ''double'', 1 for ''single'', 2 for ''int8'', 3 for ''uint8'', 4 for ''int16'', 5 for ''uint16'', 6 for ''int32'', 7 for ''uint32'', 8 for ''boolean''</entry>
    <entry key="RTI_DlgPrmInvalidDims">Invalid dimensions specified for dialog parameter {0,number,integer} of ''{1}''. Dimensions must be an array of positive integers</entry>
    <entry key="RTI_DworkInvalidComplexity">Invalid data complexity specified for Dwork {0,number,integer} of ''{1}''. Data complexity must be ''Real'' or ''Complex''</entry>
    <entry key="RTI_DworkInvalidDatatype">Invalid datatype specified for Dwork {0,number,integer} of ''{1}''. Datatype ID of Dwork must be one of the following: 0 for ''double'', 1 for ''single'', 2 for ''int8'', 3 for ''uint8'', 4 for ''int16'', 5 for ''uint16'', 6 for ''int32'', 7 for ''uint32'', 8 for ''boolean'', or fixed-point data types</entry>
    <entry key="RTI_DworkInvalidDims">Invalid dimensions specified for Dwork {0,number,integer} of ''{1}''. Dwork must be a vector, and its width must be a positive integer</entry>
    <entry key="RTI_EmptyDataStoreName" note="stringDatatypeUpdate">The name of DataStore {0,number,integer} of ''{1}'' cannot be an empty character vector</entry>
    <entry key="RTI_EmptyDworkName" note="stringDatatypeUpdate">The name of Dwork {0,number,integer} of ''{1}'' cannot be an empty character vector</entry>
    <entry key="RTI_FullDimInfoUnknown">The dimension information of Dwork {0,number,integer} in ''{1}'' is not fully specified</entry>
    <entry key="RTI_IdxForNoDataStore">Invalid DataStore index for ''{0}''. This block has no registered DataStores.</entry>
    <entry key="RTI_IdxForNoDlgPrm">Invalid dialog parameter index for ''{0}''. This block has no dialog parameters</entry>
    <entry key="RTI_IdxForNoDwork">Invalid Dwork index for ''{0}''. This block has no registered Dwork</entry>
    <entry key="RTI_IdxForNoInputPort">Invalid input port index specified for ''{0}''. This block has no input ports</entry>
    <entry key="RTI_IdxForNoOutputPort">Invalid output port index specified for ''{0}''. This block has no output ports</entry>
    <entry key="RTI_IdxForNoRTP">Invalid run-time parameter index for ''{0}''. This block has no run-time parameters</entry>
    <entry key="RTI_InputPortInvalidComplexity"><![CDATA[Invalid signal complexity specified for <sldiag objui="inport" objparam="{0,number,integer}" objname="{1}">input port {0,number,integer}</sldiag> of ''{1}''. Signal complexity must be ''Real'', ''Complex'', or ''Inherited'']]></entry>
    <entry key="RTI_InputPortInvalidDatatype"><![CDATA[Invalid datatype specified for <sldiag objui="inport" objparam="{0,number,integer}" objname="{1}">input port {0,number,integer}</sldiag> of ''{1}''. Datatype ID of input port must be one of the following: -1 for ''inherited'', 0 for ''double'', 1 for ''single'', 2 for ''int8'', 3 for ''uint8'', 4 for ''int16'', 5 for ''uint16'', 6 for ''int32'', 7 for ''uint32'', 8 for ''boolean'', or fixed-point data types]]></entry>
    <entry key="RTI_InputPortInvalidDims"><![CDATA[Invalid dimensions specified for <sldiag objui="inport" objparam="{0,number,integer}" objname="{1}">input port {0,number,integer}</sldiag> of ''{1}''. Dimensions must be an array of positive integers (or -1 for inherited)]]></entry>
    <entry key="RTI_InputPortInvalidDimsMode"><![CDATA[Invalid dimensions mode specified for <sldiag objui="inport" objparam="{0,number,integer}" objname="{1}">input port {0,number,integer}</sldiag> of ''{1}''. Dimensions mode must be ''Fixed'', ''Variable'' or ''Inherited'']]></entry>
    <entry key="RTI_InputPortInvalidFrameness"><![CDATA[Invalid sampling mode specified for <sldiag objui="inport" objparam="{0,number,integer}" objname="{1}">input port {0,number,integer}</sldiag> of ''{1}''. Sampling mode must be ''Sample'', ''Frame'' or ''Inherited'']]></entry>
    <entry key="RTI_InputPortInvalidOverwriteDatatype"><![CDATA[The data type ID of <sldiag objui="inport" objparam="{0,number,integer}" objname="{1}">input port {0,number,integer}</sldiag> of ''{1}'' cannot be changed from {2,number,integer} to {3,number,integer}]]></entry>
    <entry key="RTI_InputPortInvalidReuseSetting"><![CDATA[Invalid reusability specified for <sldiag objui="inport" objparam="{0,number,integer}" objname="{1}">input port {0,number,integer}</sldiag> of ''{1}''. Input port reusability must be ''NotReusableAndGlobal'' or ''ReusableAndLocal'']]></entry>
    <entry key="RTI_InputPortOverwriteComplexity"><![CDATA[The signal complexity of <sldiag objui="inport" objparam="{0,number,integer}" objname="{1}">input port {0,number,integer}</sldiag> of ''{1}'' cannot be changed from ''{2}'' to ''{3}'']]></entry>
    <entry key="RTI_InputPortOverwriteDims"><![CDATA[The dimensions of <sldiag objui="inport" objparam="{0,number,integer}" objname="{1}">input port {0,number,integer}</sldiag> of ''{1}'' cannot be changed from {2} to {3}]]></entry>
    <entry key="RTI_InputPortOverwriteDimsMode"><![CDATA[The dimensions mode of <sldiag objui="inport" objparam="{0,number,integer}" objname="{1}">input port {0,number,integer}</sldiag> of ''{1}'' cannot be changed from ''{2}'' to ''{3}'']]></entry>
    <entry key="RTI_InputPortOverwriteFrameness"><![CDATA[The sampling mode of <sldiag objui="inport" objparam="{0,number,integer}" objname="{1}">input port {0,number,integer}</sldiag> of ''{1}'' cannot be changed from ''{2}'' to ''{3}'']]></entry>
    <entry key="RTI_InvalidDataStoreIdx">Invalid DataStore index for ''{0}''. Dwork index must be in the range from 1 through {1,number,integer}</entry>
    <entry key="RTI_InvalidDlgPrmIdx">Invalid dialog parameter index for ''{0}''. Dialog parameter index must be in the range from 1 through {1,number,integer}</entry>
    <entry key="RTI_InvalidDworkIdx">Invalid Dwork index for ''{0}''. Dwork index must be in the range from 1 through {1,number,integer}</entry>
    <entry key="RTI_InvalidInputPortIdx">Invalid input port index specified for ''{0}''. Input port index must be in the range from 1 through {1,number,integer}</entry>
    <entry key="RTI_InvalidInputPortIdx2">Invalid input port index ({0,number,integer}) specified for block "''{1}''", which has {2,number,integer} input ports. Tip: port numbering goes 1,2,3...</entry>
	<entry key="RTI_InvalidOutputPortIdx">Invalid output port index for ''{0}''. Output port index must be in the range from 1 through {1,number,integer}</entry>
    <entry key="RTI_InvalidRTPIdx">Invalid run-time parameter index for ''{0}''. Run-time parameter index must be in the range from 1 through {1,number,integer}</entry>
    <entry key="RTI_INVALID_INSTANTIATE_DIRECTLY">Cannot instantiate runtime object directly. Please use "get_param."</entry>
    <entry key="RTI_INVALID_INSTANTIATE_BLOCK_DATA">Cannot instantiate Simulink.BlockData object directly.</entry>
    <entry key="RTI_INVALID_COPY_BLOCK_DATA_VALUE">"Copy method is not implemented for BlockDataValues data type."</entry>
	<entry key="RTI_Listener_TIDs_ExecOnly">The event listener TIDs for ''{0}'' can be accessed only when simulation is running</entry>
    <entry key="RTI_Listener_Const_SampleTime">Simulink can only add an execution event listener to a block with a non-constant sample time.
    Block ''{0}'' has a constant sample time.</entry>
    <entry key="RTI_MATLAB_BLK_ONLY">Property ''{0}'' can only be set for a MATLAB S-function block</entry>
    <entry key="RTI_MATLAB_BLK_OR_EVENT_CALLBACK_ONLY">Property ''{0}'' can only be set for a MATLAB S-function block or from an event listener</entry>
    <entry key="RTI_NULL_DATA">Cannot access data in ''{0}''. The probable cause of this error is accessing data that is available only when simulation is running</entry>
    <entry key="RTI_OutputPortInvalidComplexity"><![CDATA[Invalid signal complexity specified for <sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">output port {0,number,integer}</sldiag> of ''{1}''. Signal complexity must be ''Real'', ''Complex'', or ''Inherited'']]></entry>
    <entry key="RTI_OutputPortInvalidDatatype"><![CDATA[Invalid datatype specified for <sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">output port {0,number,integer}</sldiag> of ''{1}''. Datatype ID of output port must be one of the following: -1 for ''inherited'', 0 for ''double'', 1 for ''single'', 2 for ''int8'', 3 for ''uint8'', 4 for ''int16'', 5 for ''uint16'', 6 for ''int32'', 7 for ''uint32'', 8 for ''boolean'', or fixed-point data types]]></entry>
    <entry key="RTI_OutputPortInvalidDims"><![CDATA[Invalid dimensions specified for <sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">output port {0,number,integer}</sldiag> of ''{1}''. Dimensions must be an array of positive integers (or -1 for inherited)]]></entry>
    <entry key="RTI_OutputPortInvalidDimsMode"><![CDATA[Invalid dimensions mode specified for <sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">output port {0,number,integer}</sldiag> of ''{1}''. Sampling mode must be ''Fixed'', ''Variable'' or ''Inherited'']]></entry>
    <entry key="RTI_OutputPortInvalidFrameness"><![CDATA[Invalid sampling mode specified for <sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">output port {0,number,integer}</sldiag> of ''{1}''. Sampling mode must be ''Sample'', ''Frame'' or ''Inherited'']]></entry>
    <entry key="RTI_OutputPortInvalidOverwriteDatatype"><![CDATA[The data type ID of <sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">output port {0,number,integer}</sldiag> of ''{1}'' cannot be changed from {2,number,integer} to {3,number,integer}]]></entry>
    <entry key="RTI_OutputPortInvalidReuseSetting"><![CDATA[Invalid reusability specified for <sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">output port {0,number,integer}</sldiag> of ''{1}''. Output port reusability must be ''NotReusableAndGlobal'' or ''ReusableAndLocal'']]></entry>
    <entry key="RTI_OutputPortOverwriteComplexity"><![CDATA[The signal complexity of <sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">output port {0,number,integer}</sldiag> of ''{1}'' cannot be changed from ''{2}'' to ''{3}'']]></entry>
    <entry key="RTI_OutputPortOverwriteDims"><![CDATA[The dimensions of <sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">output port {0,number,integer}</sldiag> of ''{1}'' cannot be changed from {2} to {3}]]></entry>
    <entry key="RTI_OutputPortOverwriteDimsMode"><![CDATA[The dimensions mode of <sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">output port {0,number,integer}</sldiag> of ''{1}'' cannot be changed from ''{2}'' to ''{3}'']]></entry>
    <entry key="RTI_OutputPortOverwriteFrameness"><![CDATA[The sampling mode of <sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">output port {0,number,integer}</sldiag> of ''{1}'' cannot be changed from ''{2}'' to ''{3}'']]></entry>
    <entry key="RTI_PROPERTY_READONLY">Property ''{0}'' is read-only and cannot be set</entry>
    <entry key="RTI_REDUCED_BLOCK">Cannot create a runtime object for ''{0}''. This block has been removed by block reduction optimization</entry>
    <entry key="RTI_RTPInvalidComplexity">Invalid data complexity specified for run-time parameter {0,number,integer} of ''{1}''. Data complexity must be ''Real'' or ''Complex''</entry>
    <entry key="RTI_RTPInvalidDatatype">Invalid datatype specified for run-time parameter {0,number,integer} of ''{1}''. Datatype ID must be one of the following: 0 for ''double'', 1 for ''single'', 2 for ''int8'', 3 for ''uint8'', 4 for ''int16'', 5 for ''uint16'', 6 for ''int32'', 7 for ''uint32'', 8 for ''boolean''</entry>
    <entry key="RTI_RTPInvalidDims">Invalid dimensions specified for run-time parameter {0,number,integer} of ''{1}''. Dimensions must be an array of positive integers</entry>
    <entry key="RTI_SetEvaledDlgParamsNotPerm">The data for dialog parameter {0,number,integer} in ''{1}'' is read-only and cannot be set</entry>
    <entry key="RTI_SetInputVarDimsNotPerm"><![CDATA[The variable dimensions for <sldiag objui="inport" objparam="{0,number,integer}" objname="{1}">input port {0,number,integer}</sldiag> in ''{1}'' is read-only and cannot be set]]></entry>
    <entry key="RTI_SparseMatrixNotSupported">The block run-time interface used in ''{0}'' does not support MATLAB sparse matrices</entry>
    <entry key="RTI_WRITE_TO_BUS_NOT_SUPPORTED">Cannot use a runtime object of ''{0}'' to write data to a bus object</entry>
    <entry key="RTWBoolsToBitsWithStructAlignment">Booleans may not be packed to bitfields when using a target that specifies an explicit structure alignment.  Turn off the option ''Pack Boolean data into bitfields'' in the Configuration Parameters dialog box.</entry>
    <entry key="RTWCSCStructureFieldIdConflict">A Custom Storage Class Structure Field ''{0}'' conflicts with a programming reserved identifier.</entry>
    <entry key="RTWCSCStructureMacroIdConflict">A Custom Storage Class Structure Field ''{0}'' conflicts with another Custom Storage Class Macro specification</entry>
    <entry key="RTWBusElementNameReservedIdConflictCSC">Unable to generate code using bus object ''{0}'' because it has an element named ''{1}'' which conflicts with a Parameter with Custom Storage Macro specification</entry>
    <entry key="RTWDataTypeNameReservedIdConflictCSC">Unable to generate code using user-defined data type ''{0}'' because it conflicts with a ''{1}'' Parameter with Custom Storage Macro specification</entry>
    <entry key="RTWCSCStructFieldIdConflictEnum">Unable to generate code using user-defined data type ''{0}'' because it has an element ''{1}'' that conflicts Custom Storage Structure specification</entry>
    <entry key="RTWBusElementNameReservedIdConflict">Unable to generate code using bus object ''{0}'' because it has an element named ''{1}'' which conflicts with a programming language reserved identifier.</entry>
    <entry key="RTWBusElementNameAliasConflict">Unable to generate code using bus object ''{0}'' because it has an element named ''{1}'' which conflicts with the name of an alias type.</entry>
    <entry key="RTWCGAutosarEmptyConfigurationError">AUTOSAR model ''{0}'' is not mapped to an AUTOSAR software component.
    <![CDATA[
      <actions exclusiveFixIts="yes">
        <action type="suggestion" btn="open" id="launchWizard" retvalue="false">
          <cmd>autosar.ui.app.quickstart.WizardManager.wizard(''{0}'');</cmd>
          <txt>Use "AUTOSAR Component Quick Start" to map the model to an AUTOSAR software component.</txt>
        </action>
      </actions>]]>
    </entry>
    <entry key="RTWCGAutosarEmptySSConfigurationError">You are attempting to use the AUTOSAR target when generating code for the subsystem ''{0}'', yet the subsystem does not have a proper AUTOSAR interface configured for it. To specify an AUTOSAR interface for the subsystem, convert the subsystem to a model and configure the model.</entry>
    <entry key="RTWCGAutosarValidateError">Error during the validation of AUTOSAR configuration: {0}</entry>
    <entry key="RTWCGAutosarConditionalImplicitWrite">The current configuration of output port block ''{0}'' will result in a conditional implicit write, which has undefined behavior. Either change its data access mode to ExplicitSend, or change its sample time to match the fundamental sample time of the model.</entry>
    <entry key="RTWCGAutosarMergedIRVConditionalWrite"><![CDATA[<sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">Output port {0,number,integer}</sldiag> of ''{1}'' may conditionally write to the Merge block ''{2}'', which is written to by multiple function-call subsystems being exported as runnables; this modeling pattern is not supported by the AUTOSAR target unless <sldiag objui="configset" objparam="UnderspecifiedInitializationDetection">Underspecified initialization detection</sldiag> is set to 'Simplified' in order to ensure consistent behavior. As a result, the behavior of the generated code may be inconsistent with simulation.  For a large or complex model, use the Model Advisor check ''Check consistency of initialization parameters for Outport and Merge blocks'' to help with this task. Use <sldiag objui="configset" objparam="ModelReferenceIOMsg">Invalid root Inport/Outport block connection</sldiag> to control reporting of this condition.]]></entry>
    <entry key="RTWCGAutosarInvalidIRVSSLoopback">Signal output at port ''{1}'' of subsystem ''{0}'' is an AUTOSAR IRV. Feeding the IRV signal back to subsystem ''{0}'' might cause an uninitialized variable access in generated code.</entry>
    <entry key="RTWCGAutosarNvmRwInvReadBlockArgSpec">Function Caller block ''{0}'' is mapped to ReadBlock or RestoreBlockDefaults AUTOSAR non-volatile memory service operation. These operations expect only 1 input argument. Connect an output to a Data Store Write block and map this data store memory port to the input argument to pass it in directly to the operation.</entry>
    <entry key="RTWCGAutosarNvmRwInvWriteBlockArgSpec">Function Caller block ''{0}'' is mapped to the WriteBlock AUTOSAR non-volatile memory service operation. This operation expects only 1 input argument. Connect the input directly to a Data Store Read block and map this data store memory port to the input argument to pass it in directly to the operation.</entry>
    <entry key="RTWCGAutosarNvmRwInvReadBlockInoutArg"><![CDATA[Function Caller block ''{0}'' is mapped to ReadBlock or RestoreBlockDefaults AUTOSAR non-volatile memory service operation. <sldiag objui="outport" objparam="{1}" objname="{0}">Output port {1}</sldiag> cannot be specified as an input-output argument.]]></entry>
    <entry key="RTWCGAutosarNvmRwInvWriteBlockInoutArg">Function Caller block ''{0}'' is mapped to the WriteBlock AUTOSAR non-volatile memory service operation. The data store memory input port cannot be specified as an input-output argument.</entry>
    <entry key="RTWCGAutosarNvmRwUnsupportedWriteBlockSrc">Function Caller block ''{0}'' is mapped to the WriteBlock AUTOSAR non-volatile memory service operation. Connect the input directly to a Data Store Read block to pass the data store memory directly to the operation. Configure the Data Store Read block to execute at the same time step and remove any element assignment specifications. Verify that the Function Caller block immediately follows the Data Store Read block in execution order.</entry>
    <entry key="RTWCGAutosarNvmRwUnsupportedReadBlockDst"><![CDATA[Function Caller block ''{0}'' is mapped to the ReadBlock or RestoreBlockDefaults AUTOSAR non-volatile memory service operation. <sldiag objui="outport" objparam="{1}" objname="{0}">Output port {1}</sldiag> can only be connected to a Data Store Write block to pass the data store memory directly to the operation. Configure the Data Store Write block to execute at the same time step and remove any element assignment specifications. Verify that the Data Store Write block immediately follows the Function Caller block in execution order.]]></entry>
    <entry key="RTWCGAutosarNvmRwUnsupportedReadBlockTestpointSignal"><![CDATA[Function Caller block ''{0}'' is mapped to ReadBlock or RestoreBlockDefaults AUTOSAR non-volatile memory service operation. Signals connected to <sldiag objui="outport" objparam="{1}" objname="{0}">output port {1}</sldiag> cannot be designated as test points in the generated code since the data store memory will be passed in directly to the operation in generated code for AUTOSAR targets.]]></entry>
    <entry key="RTWCGAutosarNvmRwUnsupportedReadBlockNonvirtualSignal"><![CDATA[Function Caller block ''{0}'' is mapped to ReadBlock or RestoreBlockDefaults AUTOSAR non-volatile memory service operation. Signal name cannot be specified for signals connected to <sldiag objui="outport" objparam="{1}" objname="{0}">output port {1}</sldiag> since the data store memory will be passed in directly to the operation in generated code for AUTOSAR targets.]]></entry>
    <entry key="RTWCGAutosarNvmRwValidationFailure">Function Caller block ''{0}'' is mapped to the WriteBlock, ReadBlock, or RestoreBlockDefaults AUTOSAR non-volatile memory service operation. The code generator is unable to pass the data store memory directly to the operation.</entry>
    <entry key="RTWCGAutosarNvmRwUnaddressableDstore">Function Caller block ''{0}'' is mapped to the WriteBlock, ReadBlock, or RestoreBlockDefaults AUTOSAR non-volatile memory service operation. The data store memory signal needs to be addressable in order to pass it in directly to the operation. For example, you can create an AUTOSAR.Signal object to specify the data store memory.</entry>
    <entry key="RTWCGCPPClassGenStr">C++ class interface</entry>
    <entry key="RTWCGCPPClassGenValidateError">Error while validating the C++ class interface specification for model ''{0}'' : {1}</entry>
    <entry key="RTWCGCPPClassMdlRefContStates">The code interface packaging option ''C++ class'' cannot be selected for model ''{0}'' because it contains blocks that use continuous time. This is not supported  when generating code for model reference targets</entry>
    <entry key="RTWCGCPPClassMdlRefVoidStyleNotSupported">Only ''I/O arguments step method'' style C++ class interface is supported for model ''{0}'' that is used as a referenced model.</entry>
    <entry key="RTWCGCPPClassSetNotAllowed">C++ class interface customization is not allowed for non-ERT based targets</entry>
    <entry key="RTWCGCPPClassIOMessagePort"><![CDATA[When model ''{0}''
    is configured to send or receive messages, ''Function specification'' of type ''I/O arguments step method'' is not supported.
    <actions exclusiveFixIts="yes">
    <action type="suggestion" btn="apply">
    <cmd>set_param(''{0}'', ''RTWCPPFcnClass'', RTW.ModelCPPDefaultClass); get_param(''{0}'',''RTWCPPFcnClass'').setStepMethodName(''Step''); get_param(''{0}'',''RTWCPPFcnClass'').setClassName(''{0}ModelClass'');</cmd>
    <txt>Change the setting of ''Function specification'' to ''Default step method'' (might impact referenced or referencing models).</txt>
    </action>
    </actions>
    ]]>
    </entry>
    <entry key="RTWCGCPPMdlRefInstanceVariables">Error reading model reference instance variables for C++ class generation''s I/O arguments step method</entry>
    <!-- RTWCGEmptyCPPEncapConfigurationError TopTester: test/toolbox/simulink/configsets/highlighting/DVHyperlinks/tRTWfcnClass.m -->
    <entry key="RTWCGEmptyCPPEncapConfigurationError">Model ''{0}'' has code interface packaging set to ''C++ class'', but a C++ class interface configuration is not specified for the model.
    <![CDATA[
             <actions exclusiveFixIts="yes">
             <action type="suggestion">
             <cmd>simulinkcoder.internal.slfpc.FunctionControlDialogManager.openEntryFcnDialog(''{0}'')</cmd>
             <txt>Specify a C++ class interface</txt>
             </action>
             </actions>]]>
    </entry>
    <!-- RTWCGFcnProtoCtlMdlRefOutUpdCombined TopTester: test/toolbox/simulink/configsets/highlighting/DVHyperlinks/tRTWfcnClass.m -->
    <entry key="RTWCGFcnProtoCtlMdlRefOutUpdCombined">Model function prototype control cannot be used for ''{0}'' because it does not combine its output and update functions when generating code for model reference targets
    <![CDATA[
             <actions exclusiveFixIts="yes">
             <action type="suggestion" id="FPCMdlRefOutUpdCombined">
             <cmd>simulinkcoder.internal.slfpc.FunctionControlDialogManager.openEntryFcnDialog(''{0}'')</cmd>
             <txt>Fix preceding errors or clear checkbox for ''Configure arguments for Step function prototype''</txt>
             </action>
             </actions>]]>
    </entry>

    <!-- RTWCGCPPClassMdlRefVirtualBusRootIO TopTester: test/toolbox/simulink/configsets/highlighting/DVHyperlinks/tRTWfcnClass.m -->
    <entry key="RTWCGFcnProtoCtlMdlRefVirtualBusRootIO">Model function prototype
    control cannot be used for ''{0}'' because it is a referenced model
    with a virtual bus at root I/O port ''{1}''.
    <![CDATA[
             <actions exclusiveFixIts="yes">
             <action type="suggestion" id="FPCMdlRefVirtualBusRootIO">
             <cmd>simulinkcoder.internal.slfpc.FunctionControlDialogManager.openEntryFcnDialog(''{0}'')</cmd>
             <txt>Fix preceding errors or clear checkbox for ''Configure arguments for Step function prototype''</txt>
             </action>
             <action type="suggestion">
             <cmd>Simulink.internal.OpenBlockParamsDialog(''{1}'',''BusOutputAsStruct'')</cmd>
             <txt>Select ''Output as nonvirtual bus''</txt>
             </action>
             </actions>]]>
    </entry>
    <entry key="RTWCGFcnProtoCtlIOMessagePort">Model function prototype
    control cannot be used for ''{0}'' because it has
    a root I/O port that sends or receives messages.
    <![CDATA[
             <actions exclusiveFixIts="yes">
             <action type="fixit" id="MessageIOFPC" retvalue="false">
             <cmd>simulinkcoder.internal.slfpc.FunctionControlDialogManager.openEntryFcnDialog(''{0}'', Simulink.CodeMapping.get(''{0}'', ''CoderDictionary'').OutputFunctionMappings(1), ''OutputFunctionMappings'')</cmd>
             <txt>Fix preceding errors or clear checkbox for ''Configure arguments for Step function prototype''</txt>
             </action>
             </actions>]]>
    </entry>
    <entry key="RTWCGFcnProtoCtlMdlRefVirtualBusRootIOBEP">Model function prototype
    control cannot be used for ''{0}'' because it is a referenced model
    with a virtual bus at root I/O port ''{1}''.
    <![CDATA[
             <actions exclusiveFixIts="yes">
             <action type="suggestion" id="FPCMdlRefVirtualBusRootIOBEP">
             <cmd>simulinkcoder.internal.slfpc.FunctionControlDialogManager.openEntryFcnDialog(''{0}'')</cmd>
             <txt>Fix preceding errors or clear checkbox for ''Configure arguments for Step function prototype''</txt>
             </action>
             </actions>]]>
    </entry>
    <!-- RTWCGCPPClassMdlRefVirtualBusRootIO TopTester: test/toolbox/simulink/configsets/highlighting/DVHyperlinks/tSLEngineModelRefs.m -->
    <entry key="RTWCGCPPClassMdlRefVirtualBusRootIO"><![CDATA[Configuration of referenced
    model ''{0}'' does not support using a virtual bus at root I/O port ''{1}''.
    <actions exclusiveFixIts="yes">
    <action type="suggestion">
    <cmd>Simulink.internal.OpenBlockParamsDialog(''{1}'',''BusOutputAsStruct'')</cmd>
    <txt>Select ''Output as nonvirtual bus''</txt>
    </action>
    <action type="suggestion">
    <cmd>configset.internal.open(''{0}'',''CodeInterfacePackaging'')</cmd>
    <txt>Change the setting of ''Code interface packaging'' (might impact referenced or referencing models)</txt>
    </action>
    <action type="suggestion">
    <cmd>simulinkcoder.internal.slfpc.FunctionControlDialogManager.openEntryFcnDialog(''{0}'')</cmd>
    <txt>Change the setting of ''Function specification'' to ''Default step method''.</txt>
    </action>
    </actions>
    ]]>
    </entry>

    <entry key="RTWCGFcnProtoCtlValidateError">Error while validating model function prototypes for ''{0}'' : {1}
    <![CDATA[
             <actions exclusiveFixIts="yes">
             <action type="suggestion" id="FPCValidateError">
             <cmd>simulinkcoder.internal.slfpc.FunctionControlDialogManager.openEntryFcnDialog(''{0}'')</cmd>
             <txt>Fix preceding errors or clear checkbox for ''Configure arguments for Step function prototype''</txt>
             </action>
             </actions>]]>
    </entry>
    <entry key="RTWCGArchSpecValidateError">Error while validating {2} for model ''{0}'' : a referenced model ''{1}'' has generated C-API interface and one of its signals connecting to a root inport of this model has set the test point attribute, but this configuration combination is not supported for the feature. Fix the error by avoiding the combination, or consider inserting a Signal Conversion at the root inport of the referenced model leading to the test pointed signal.</entry>
    <entry key="RTWCGInternalError">Error during code generation: {0}</entry>
    <entry key="RTWCGInvalidDTReasonUnknownInternal">Data type ''{1}'' in block ''{0}'' is not supported for code generation.</entry>
    <entry key="RTWCGInvalidDTSize">Code cannot be generated for this model because block ''{0}'' is using the data type ''{1}'' which requires {2,number,integer} bits, but the maximum supported by the block for code generation is {3,number,integer}</entry>
    <entry key="RTWCGInvalidDTSize2Internal">Code cannot be generated for this model because block ''{0}'' is using the data type ''{1}'' which requires {2,number,integer} bits, but the maximum supported for code generation is {3,number,integer}. For input signals, output signals, runtime parameters, and dwork states, unsupported data types usually cause errors earlier in the code generation process. This error occurred at a later stage. It is therefore likely that the unsupported data type is used by a local variable internal to the block.  The local variable may be holding the results of an intermediate calculation.  The data type and scaling selected to hold the intermediate calculation can depend on the model''s test hardware.  The test hardware may specify that the number of bits per long is greater than 32. Search for ''Test hardware'' in the Configuration Parameters dialog box to configure test hardware.</entry>
    <entry key="RTWCGInvalidTargetLongSize">Code cannot be generated. ''Number of bits per long in test hardware'' ({0,number,integer}) must be greater than or equal to 32.</entry>
    <entry key="RTWCGModelReferenceStackSizeConflict">The estimated required stack size of {0,number,integer} bytes for the model ''{1}'' referenced by ''{2}'' is more than the maximum stack size of {3,number,integer} bytes, specified by the "Maximum stack size" parameter in the Configuration Parameters dialog box for ''{4}''. To resolve this conflict, modify the "Maximum stack size" parameter for ''{5}'' by increasing the maximum stack size to a value greater than or equal to {6,number,integer} bytes or select ''{7}''. An alternative resolution is to specify the "Maximum stack size" parameter to  {8,number,integer} bytes (or less) in the Configuration Parameters dialog box for model ''{9}''.</entry>
    <!-- RTWCGTargetStackSizeConflict TopTester: test/toolbox/simulink/configsets/highlighting/DVHyperlinks/tSLEngineErrorsOpen.m -->
    <entry key="RTWCGTargetStackSizeConflict"><![CDATA[The model ''{0}'' has {1,number,integer} bytes specified as ''Maximum stack size (bytes)''. However the current system target requires a maximum stack size no larger then {2,number,integer} bytes.
    <actions exclusiveFixIts="yes">
    <action type="suggestion">
    <cmd>configset.internal.open(''{0}'',''MaxStackSize'')</cmd>
    <txt>Change ''Maximum stack size (bytes)'' to {3,number,integer} (or less) or the string ''{4}''</txt>
    </action>
    <action type="suggestion">
    <txt>Increase the maximum stack size value of the current system target (might impact referenced or referencing models)</txt>
    </action>
    </actions>]]>
    </entry>
    <entry key="SLCGStackSizeAndGlobalDataAccessConflict">'Optimize global data access' set to 'Minimize global data access' is not supported because 'Maximum stack size' set to '0'.</entry>
    <entry key="RTWCGMissingCSCRegistration">Storage class ''{0}'' is not defined in Embedded Coder Dictionary. Define the storage class in the dictionary or, if you changed code definitions in a package that is used by the dictionary, use the command refreshPackage(coder.dictionary.open(''{1}'')) to reload the package.</entry>
    <entry key="RTWCGReusableCSCMultipleEndpoints"><![CDATA[The Reusable CSC ''{0}'' at the <sldiag objui="outport" objparam="{2,number,integer}" objname="{1}">outport port {2,number,integer}</sldiag> of ''{1}'' is not a unique endpoint.  An endpoint is a usage of a Reusable CSC with no other downstream.  The runtime environment should not read this variable because its value is not well defined.]]></entry>
    <entry key="RTWCGReusableCSCNotRenamable">Reusable buffer specification problem: the output ports of ''{0}'' is not reusable and re-nameable.</entry>
    <entry key="RTWCGReusableCSCNotInTheSameNonVirtualSS"><![CDATA[Reusable buffer specification problem: the reusable CSC at the <sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">output port {0,number,integer}</sldiag> of ''{1}'' is not in the same non-virtual subsystem as the other reusable CSC.]]></entry>
    <entry key="RTWCGReusableCSCNotOnAContinuousPath"><![CDATA[Reusable buffer specification problem: the reusable CSC at the <sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">output port {0,number,integer}</sldiag> of ''{1}'' is not on a continuous path with the other reusable CSC; or the compilation of the model introduced new blocks that make the Reusable CSC specification discontinuous.]]></entry>
    <entry key="RTWCGReusableCSCMultipleOutputs">The same reusable CSC ''{0}'' is specified on output ports {1,number,integer} and {2,number,integer} of the block ''{3}''.  You can not specify the same reusable CSC on two or more outputs of the same block.</entry>
    <entry key="RTWCGReusableCSCMultipleInputs">The same reusable CSC ''{0}'' is specified on input ports {1,number,integer} and {2,number,integer} of the block ''{3}''.  You can not specify the same reusable CSC on two or more inputs of the same block.</entry>
    <entry key="RTWCGReusableCSCHasNoBuffer"><![CDATA[The Reusable CSC specified on the <sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">output port {0,number,integer}</sldiag> of ''{1}'' is invalid because there is no corresponding variable for this signal in the generated code. This could be because the subsystem's Output Port block is not connected.]]></entry>
    <entry key="RTWCGReusableCSCOutputCannotOverwriteInput"><![CDATA[Reusable buffer specification problem: the <sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">output port {0,number,integer}</sldiag> of ''{1}'' cannot overwrite the <sldiag objui="outport" objparam="{2,number,integer}" objname="{3}">output port {2,number,integer}</sldiag> of ''{3}''.]]></entry>
    <entry key="RTWCGReusableCSCDataTypesMismatch"><![CDATA[Reusable buffer specification problem: the data type/shape of the signal connected to the <sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">output port {0,number,integer}</sldiag> of ''{1}'' does not match with the data type/shape of the signal connected to the <sldiag objui="outport" objparam="{2,number,integer}" objname="{3}">output port {2,number,integer}</sldiag> of ''{3}''.]]></entry>
    <entry key="RTWCGReusableCSCMappingsCodePropertiesMismatch"><![CDATA[Reusable buffer specification problem for ''{4}'': the code generation properties in code perspective for the signal connected to the <sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">output port {0,number,integer}</sldiag> of ''{1}'' do not match with the signal connected to the <sldiag objui="outport" objparam="{2,number,integer}" objname="{3}">output port {2,number,integer}</sldiag> of ''{3}''.
    <actions exclusiveFixIts="yes">
    <action type="suggestion">
            <txt>Specify the same properties ''DataScope'', ''HeaderFile'', ''DefinitionFile'' and ''Owner'' for the signals</txt>
    </action>
    <action type="suggestion">
    <txt>Suppress this message by setting <sldiag objui="configset" objparam="RCSCRenamedMsg">Detect non-reused custom storage classes</sldiag> to ''none''</txt>
    </action>
    </actions>]]>
    </entry>
    <entry key="RTWCGReusableFPCDataTypesMismatch"><![CDATA[Function prototype control problem: the data type/shape of the non-virtual signal connected to the <sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">output port {0,number,integer}</sldiag> of ''{1}'' does not match with the data type/shape of the non-virtual signal connected to the <sldiag objui="inport" objparam="{2,number,integer}" objname="{3}">input port {2,number,integer}</sldiag> of ''{3}''.]]></entry>
    <entry key="RTWCGReusableCSCRootMustBeSameSize">The reusable custom storage class ''{0}'' is on a signal line that connect to the root Inport block ''{1}'' and the root Outport block that connects to ''{2}'' port ''{3,number,integer}''. The root ports have different sizes.</entry>
    <entry key="RTWCGReusableCSCVariantMismatch"><![CDATA[All signals with the same reusable storage class specification must have the same variant condition.  The signal connected to the <sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">output port {0,number,integer}</sldiag> of ''{1}'' does not have the same variant condition as the signal connected to the <sldiag objui="outport" objparam="{2,number,integer}" objname="{3}">output port {2,number,integer}</sldiag> of ''{3}''.]]></entry>
    <entry key="RTWCGReusableModelReferenceTarget"><![CDATA[Reusable CSC specification problem: Reusable CSC specification is not allowed inside the Model block. Found one such instance in the <sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">output port {0,number,integer}</sldiag> of {1}.]]></entry>
    <entry key="RTWCGReusableModelReferenceInputNotOutput"><![CDATA[Reusable CSC specification is specified on <sldiag objui="inport" objparam="{0}" objname="{1}">inport {0}</sldiag> and internally on block ''{1}''.  This is not allowed for model reference unless the specification is also on an outport as well.]]></entry>
    <entry key="RTWCGReusableCSCDifferentSampleTimesInMultiTaskingMode"><![CDATA[Reusable buffer specification problem: the signal connected to the <sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">output port {0,number,integer}</sldiag> of ''{1}'' and the signal connected to the <sldiag objui="outport" objparam="{2,number,integer}" objname="{3}">output port {2,number,integer}</sldiag> of ''{3}'' have different rates in the multi-tasking solver mode. This is not supported.]]></entry>
    <entry key="RTWCGReusableFPCDifferentSampleTimesInMultiTaskingMode"><![CDATA[Function prototype control problem: the signal connected to the <sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">output port {0,number,integer}</sldiag> of ''{1}'' and the signal connected to the <sldiag objui="outport" objparam="{2,number,integer}" objname="{3}">output port {2,number,integer}</sldiag> of ''{3}'' have different rates in the multi-tasking solver mode. This is not supported.]]></entry>
    <entry key="RTWCGReusableCSCDifferentSampleTimes"><![CDATA[Reusable buffer specification problem: the signal connected to the <sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">output port {0,number,integer}</sldiag> of ''{1}'' and the signal connected to the <sldiag objui="outport" objparam="{2,number,integer}" objname="{3}">output port {2,number,integer}</sldiag> of ''{3}'' have different rates. This is not supported.]]></entry>
    <entry key="RTWCGReusableFPCDifferentSampleTimes"><![CDATA[Function prototype control problem: the signal connected to the <sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">output port {0,number,integer}</sldiag> of ''{1}'' and the signal connected to the <sldiag objui="outport" objparam="{2,number,integer}" objname="{3}">output port {2,number,integer}</sldiag> of ''{3}'' have different rates. This is not supported.]]></entry>
    <entry key="RTWCGReusableCSCRootIOCannotReuseState">Reusable CSC specification problem: the state in the unit delay block ''{0}'' cannot reuse the root IO.</entry>
    <entry key="RTWCGReusableCSCStateProblem">The state of the block ''{0}'' cannot use be specified as a reusable custom storage class with the current model settings.</entry>
    <entry key="RTWCGReusableCSCStateWithPackedBool"><![CDATA[The state of the block ''{0}'' cannot be specified as a reusable custom storage class when the datatype is a Boolean and <sldiag objui="configset" objparam="BooleansAsBitfields">Pack Boolean data into bitfields</sldiag> is set to on.
    <actions exclusiveFixIts="yes">
    <action type="fixit">
    <cmd>configset.internal.fixIt(''{0}'',''BooleansAsBitfields'',''off'')</cmd>
    <txt>Set <sldiag objui="configset" objparam="BooleansAsBitfields">Pack Boolean data into bitfields</sldiag> to off</txt>
    </action>
    <action type="suggestion">
    <txt>Remove the reusable CSC specification from ''{0}''</txt>
    </action>
    </actions>]]>
    </entry>
    <entry key="RTWCGReusableCSCStateWithStateRW">The state of the block ''{0}'' uses a reusable custom storage class that is incompatible with the State Read or State Write blocks.</entry>
    <entry key="RTWCGReusableCSCStateNotERT">The state of the block ''{0}'' uses a reusable custom storage class that requires the model's system target file to be set to ert.tlc.</entry>
    <entry key="RTWCGReusableCSCStateNeedLocalReuse"><![CDATA[The state of the block ''{0}'' uses a custom storage class specification that requires <sldiag objui="configset" objparam="LocalBlockOutputs">Local Block Outputs</sldiag> and <sldiag objui="configset" objparam="BufferReuse">Reuse Local block outputs</sldiag> parameters to be set to on.]]></entry>
    <entry key="RTWCGReusableCSCStateWithSLCI"><![CDATA[The state of the block ''{0}'' cannot use a reusable custom storage class when the <sldiag objui="configset" objparam="AdvancedOptControl">AdvancedOptControl</sldiag> parameter is enabled because reusable storage class specifications on states are incompatible with Simulink Code Inspector.
    <actions exclusiveFixIts="yes">
    <action type="fixit">
    <cmd>configset.internal.fixIt(''{0}'',''AdvancedOptControl'','''')</cmd>
    <txt>Set <sldiag objui="configset" objparam="AdvancedOptControl">AdvancedOptControl</sldiag> to off</txt>
    </action>
    </actions>]]>
    </entry>
    <entry key="RTWCGReusableCSCStateMustUseItsIO">Reusable CSC specification problem: the state in the unit delay block ''{0}'' is supported to merge with only its IO buffers.</entry>
    <entry key="RTWCGReusableCSCPairsCannotReuseStates"><![CDATA[Reusable CSC specification problem: the <sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">output port {0,number,integer}</sldiag> of ''{1}'' reuses the other signal at model boundary, and cannot reuse the state in the unit delay block ''{2}''.]]></entry>
    <entry key="RTWCGReusableCSCStateCannotUseBackPropedSig">Reusable CSC specification problem: the state of the unit delay block ''{0}'' cannot use a reusable CSC propagated from a model.</entry>
    <entry key="RTWCGReusableCSCAtMultipleInputs">The same reusable custom storage class specification is at multiple root inports: ''{0}'' and ''{1}''. This is not allowed.</entry>
    <entry key="RTWCGReusableCSCAtMultipleOutputs">The same reusable custom storage class specification is at multiple root outports:  the root outport connected to port {0,number,integer} of ''{1}'' and the root outport connected to port {2,number,integer} of ''{3}''. This is not allowed.</entry>
    <entry key="RTWCGReusableCSCAtMultipleOutputsOfABlock"><![CDATA[Reusable CSC specification problem: the same specification is found at multiple outputs: the <sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">output port {0,number,integer}</sldiag> of ''{1}'' and the <sldiag objui="outport" objparam="{2,number,integer}" objname="{3}">output port {2,number,integer}</sldiag> of ''{3}''. This is not allowed.]]></entry>
    <entry key="RTWCGReusableCSCAtMultipleInputsOfABlock"><![CDATA[Reusable CSC specification problem: the same specification is found at multiple inputs: the <sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">output port {0,number,integer}</sldiag> of ''{1}'' and the <sldiag objui="outport" objparam="{2,number,integer}" objname="{3}">output port {2,number,integer}</sldiag> of ''{3}''. This is not allowed.]]></entry>
    <entry key="RTWCGReusableCSCSignalsNotAtModelBoundary"><![CDATA[Reusable CSC specification problem: the duplicate specification is supported only for root IO signals or at block boundary; if one reusable CSC is at root IO ports, the other one must also be at root IO ports. In this case, either of the signal connected to the <sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">output port {0,number,integer}</sldiag> of ''{1}'' or the signal connected to the <sldiag objui="outport" objparam="{2,number,integer}" objname="{3}">output port {2,number,integer}</sldiag> of ''{3}'' or both do not satisfy the specification.]]></entry>
    <entry key="RTWCGReusableCSCSignalsCannotBeInClassicMode"><![CDATA[Reusable CSC specification problem: the duplicate specification is supported only for model IO signals in simplified initialization mode. In this case, either of the signal connected to the <sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">output port {0,number,integer}</sldiag> of ''{1}'' or the signal connected to the <sldiag objui="outport" objparam="{2,number,integer}" objname="{3}">output port {2,number,integer}</sldiag> of ''{3}'' or both are at model IO ports.]]></entry>
    <entry key="RTWCGReusableFPCMdlRefCannotRequireGlobalAccess">FPC IO reuse specification problem: the IO port ''{0}'' cannot require global access in a model reference build.</entry>
    <entry key="RTWCGReusableCSCSignalsLiferangeOverlapped"><![CDATA[Reusable CSC specification problem: the signal connected to the <sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">output port {0,number,integer}</sldiag> of ''{1}'' and the signal connected to the <sldiag objui="outport" objparam="{2,number,integer}" objname="{3}">output port {2,number,integer}</sldiag> of ''{3}'' are not reusable, because their life ranges could be overlapped.]]></entry>
    <entry key="RTWCGReusableCSCBlockORenamed"><![CDATA[The <sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">output port {0,number,integer}</sldiag> of block ''{1}'' can not reuse with some other usages of the Reusable CSC ''{2}''.  In most cases this will result in an additional buffer in the generated code.]]></entry>
    <entry key="RTWCGReusableCSCDworkRenamed">The state of ''{0}'' can not reuse with other usages of the Reusable CSC ''{1}''.  In most cases this will result in a additional buffer in the generated code.</entry>
    <entry key="RTWCGReusableCSCSignalsMustBeAtTheSameModel"><![CDATA[Reusable CSC specification problem: the duplicate specification is supported only for model IO signals of the same model. In this case, the signal connected to the <sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">output port {0,number,integer}</sldiag> of ''{1}'' is defined in a different model.]]></entry>
    <entry key="RTWCGReusableCSCSignalsInTwoModels"><![CDATA[Identical Reusable custom storage class signal ''{0}'' is specified on root ports of the Model blocks ''{1}'' and ''{2}''.  This is not supported unless <sldiag objui="configset" objparam="RCSCRenamedMsg">RCSCRenamedMsg</sldiag> is set to ''error''.
    <actions exclusiveFixIts="no">
    <action type="suggestion">
    <txt>Set <sldiag objui="configset" objparam="RCSCRenamedMsg">RCSCRenamedMsg</sldiag> to ''error''</txt>
    </action>
    <action type="suggestion">
    <txt>To avoid build failures, change the RCSCRenamedMsg parameter for all child models to ''error'', or use <a href="matlab:helpview([docroot ''/simulink/helptargets.map''], ''configuration_reference_dialog'')">Configuration References</a>.</txt>
    </action>
    </actions>]]>
    </entry>
    <entry key="RTWCGReusableCSCSignalsInModelAndBlock"><![CDATA[Identical Reusable custom storage class signal ''{0}'' is specified on a root port of the Model block ''{1}'' and also on the <sldiag objui="outport" objparam="{2,number,integer}" objname="{3}">output port {2,number,integer}</sldiag> of block ''{3}''.  This is not supported unless <sldiag objui="configset" objparam="RCSCRenamedMsg">RCSCRenamedMsg</sldiag> is set to ''error''.
    <actions exclusiveFixIts="no">
    <action type="suggestion">
    <txt>Set <sldiag objui="configset" objparam="RCSCRenamedMsg">RCSCRenamedMsg</sldiag> to ''error''</txt>
    </action>
    <action type="suggestion">
    <txt>To avoid build failures, change the RCSCRenamedMsg parameter for all child models to ''error'', or use <a href="matlab:helpview([docroot ''/simulink/helptargets.map''], ''configuration_reference_dialog'')">Configuration References</a>.</txt>
    </action>
    </actions>]]>
    </entry>
    <entry key="RTWCGReusableCSCSignalAtModelBoundMustHaveSingleUse"><![CDATA[Reusable CSC specification problem: the signal connected to the <sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">output port {0,number,integer}</sldiag> of ''{1}'' cannot be connected to multiple blocks.]]></entry>
    <entry key="RTWCGReusableCSCSignalsCannotBeInsideModelBlock"><![CDATA[Reusable CSC specification problem: reusable CSC cannot be used inside a referenced model. In this case, either of the signal connected to the <sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">output port {0,number,integer}</sldiag> of ''{1}'' or the signal connected to the <sldiag objui="outport" objparam="{2,number,integer}" objname="{3}">output port {2,number,integer}</sldiag> of ''{3}'' or both are in a referenced model.]]></entry>
    <entry key="RTWCGReusableCSCCannotBeUsedByMultipleStates">Reusable CSC specification problem: multiple unit delay states cannot use the same reusable CSC. In this case, both ''{0}'' and ''{1}'' use the same reusable CSC.</entry>
    <entry key="RTWCGReusableCSCInterceptingOutputHiddenBuffer1"><![CDATA[Reusable CSC specification problem: there is an internal buffer at the <sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">output port {0,number,integer}</sldiag> of ''{1}''.]]></entry>
    <entry key="RTWCGReusableCSCInterceptingOutputHiddenBuffer"><![CDATA[Reusable CSC specification problem: the duplicate specification is supported only for model or root IO signals. In this case, either of the signal connected to the input port ''{0}'' or the signal connected to the <sldiag objui="outport" objparam="{1,number,integer}" objname="{2}">output port {1,number,integer}</sldiag> of ''{2}'' or both are not in model or root IO ports. Reason: There is an internal buffer at the <sldiag objui="outport" objparam="{3,number,integer}" objname="{4}">output port {3,number,integer}</sldiag> of ''{4}''.]]></entry>
    <entry key="RTWCGReusableCSCInterceptingInputHiddenBuffer"><![CDATA[Reusable CSC specification problem: the duplicate specification is supported only for model or root IO signals. In this case, either of the signal connected to the input port ''{0}'' or the signal connected to the <sldiag objui="outport" objparam="{1,number,integer}" objname="{2}">output port {1,number,integer}</sldiag> of ''{2}'' or both are not in model or root IO ports. Reason: There is an internal buffer at the input port ''{3}''.]]></entry>
    <entry key="RTWCGReusableCSCInputMustBeDirectFeedThrough"><![CDATA[Reusable CSC specification problem: the <sldiag objui="inport" objparam="{0,number,integer}" objname="{1}">input port {0,number,integer}</sldiag> of ''{1}'' must be direct feed through.]]></entry>
    <entry key="RTWCGReusableCSCOutputCannotBeInDifferentRate"><![CDATA[Reusable buffer specification problem: the <sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">output port {0,number,integer}</sldiag> of ''{1}'' is running at a sample rate slower than the model's base rate, which might leave the outport conditionally assigned. Consider not to reuse the outport.]]></entry>
    <entry key="RTWCGReusableCSCOutputCannotBeConditional"><![CDATA[Reusable buffer specification problem: the <sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">output port {0,number,integer}</sldiag> of ''{1}'' cannot be conditional.]]></entry>
    <entry key="RTWCGReusableCSCMultipleSource">Reusable buffer specification problem: the output port ''{0}'' is not driven by a single data source.</entry>
    <entry key="RTWCGReusableCSCInterceptingHiddenBufferAtModelBound"><![CDATA[Reusable CSC specification problem: the duplicate specification is supported only for root IO signals or at block boundary. Reason: There is an internal buffer at the <sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">output port {0,number,integer}</sldiag> of ''{1}'' or at the <sldiag objui="outport" objparam="{2,number,integer}" objname="{3}">output port {2,number,integer}</sldiag> of ''{3}''.]]></entry>
    <entry key="RTWCGReusableCSCEmbeddedSigObj"><![CDATA[Multiple signals that have a reusable custom storage class and the same signal name must all resolve to a Simulink signal object.  The <sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">output port {0,number,integer}</sldiag> of {1} does not resolve to a Simulink signal object.]]></entry>
    <entry key="RTWCGReusableCSCSimulinkFcnUnsupported">Reusable CSC specification is not allowed inside a Simulink Function block. Found one such instance in the port {0,number,integer} of {1}.</entry>
    <entry key="RTWCGReusableCSCDimVarUnsupportedAtBO">Reusable CSC specification is not allowed at blocks with dimension variants. Found one such instance in the port {0,number,integer} of {1}.</entry>
    <entry key="RTWCGReusableCSCDimVarUnsupportedAtDW">Reusable CSC specification is not allowed at blocks with dimension variants. Found one such instance in the state of {0}.</entry>
    <entry key="RTWCGReusableCSCVarDimsUnsupported">Reusable CSC specification problem in {0}: Reusable CSC specification cannot be honored in the presence of signals of variable dimension types anywhere in the model.</entry>
    <entry key="RTWCGReusableCSCExportFcnUnsupported">Reusable CSC specification problem in {0}: Reusable CSC specification cannot be honored in models having export functions.</entry>
    <entry key="RTWCGReusableCSCInportOverwrittenExportFcn"><![CDATA[Reusable CSC specification in {0} will over-write the root inport, therefore the asynchronous execution of the exported functions in the model might produce incorrect results]]></entry>
    <entry key="RTWCGReusableCSCInDifferentTasksInExportFcn"><![CDATA[Reusable buffer specification problem in {0}: the signal connected to the <sldiag objui="outport" objparam="{1,number,integer}" objname="{2}">output port {1,number,integer}</sldiag> of ''{2}'' and the signal connected to the <sldiag objui="outport" objparam="{3,number,integer}" objname="{4}">output port {3,number,integer}</sldiag> of ''{4}'' are executed in different tasks. This is not supported in models having export functions]]></entry>
    <entry key="RTWCGReusableCSCNotAtRootIOInExportFcn"><![CDATA[Reusable buffer specification problem in {0}: Reusable CSC specification cannot be honored for the signal connected to the <sldiag objui="outport" objparam="{1,number,integer}" objname="{2}">output port {1,number,integer}</sldiag> of ''{2}''. In models having export functions, Reusable CSC specification is supported only at root inport and at signals driving root outport]]></entry>
    <entry key="RTWCGReusableCSCAtModelBlockIOInExportFcn"><![CDATA[Reusable buffer specification problem in {0}: Reusable CSC specification cannot be honored for the signal connected to the <sldiag objui="outport" objparam="{1,number,integer}" objname="{2}">output port {1,number,integer}</sldiag> of ''{2}''. In models having export functions, Reusable CSC specification is not supported for signals at root ports of Model blocks]]></entry>
    <entry key="RTWCGReusableCSCNotAtTopLevelInExportFcn"><![CDATA[Reusable buffer specification problem in {0}: Reusable CSC specification cannot be honored for the signal connected to the <sldiag objui="outport" objparam="{1,number,integer}" objname="{2}">output port {1,number,integer}</sldiag> of ''{2}'' because it is inside a non-virtual subsystem. In models having export functions, Reusable CSC specification is supported only for signals at the top level]]></entry>
    <entry key="RTWCGReusableCSCFcnProtoControlUnsupported">Reusable CSC specification problem in {0}: Reusable CSC specification cannot be honored when function prototyping control is enabled.</entry>
    <entry key="RTWCGReusableCSCEncapCPPIOUnsupported">Reusable CSC specification problem in {0}: Reusable CSC specification cannot be honored when generating a C++ class interface.</entry>
    <entry key="RTWCGReusableCSCMoreThanOnePair">Reusable CSC specification problem in {0}: Reusable CSC specification allows only one pair of input and output signals.</entry>
    <entry key="RTWCGReusableCSCRootIORenameWithVC"><![CDATA[All root IO with the same reusable storage class specification must reuse when they have variant conditions. Root input signal connected to the <sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">output port {0,number,integer}</sldiag> of ''{1}'', and root output signal connected to the <sldiag objui="outport" objparam="{2,number,integer}" objname="{3}">output port {2,number,integer}</sldiag> of ''{3}'' have variant conditions but not reused]]></entry>
    <entry key="RTWCGReusableCSCRootIOAtIRT"><![CDATA[Reusable CSC specification is not allowed at the <sldiag objui="outport" objparam="{0, number, integer}" objname="{1}">output port {0, number, integer}</sldiag> of ''{1}'' and at the <sldiag objui="outport" objparam="{2,number,integer}" objname="{3}">output port {2,number,integer}</sldiag> of ''{3}'', because either ''{1}'' or ''{3}'', or both of them are root IO signals that connect to Initialize, Reinitialize, Reset, or Terminate subsystems.]]></entry>
    <entry key="RTWCGReusableFPCSwitchedNonreusedToReused">Converting ''Nonreusable function'' packaging setting of subsystem ''{0}'' to ''Reusable function'' because the subsystem accesses reusable IO arguments by FPC</entry>
    <entry key="RTWCGReusableFPCCannotSwitchNonreusedToReusedO"><![CDATA[Function prototyping control IO reuse problem: the setting to subsystems that access the <sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">output port {0,number,integer}</sldiag> of ''{1}'' cannot be ''Nonreusable function'']]></entry>
    <entry key="RTWCGReusableFPCCannotSwitchNonreusedToReusedI"><![CDATA[Function prototyping control IO reuse problem: the setting to subsystems that access the <sldiag objui="inport" objparam="{0,number,integer}" objname="{1}">input port {0,number,integer}</sldiag> of ''{1}'' cannot be ''Nonreusable function'']]></entry>
    <entry key="RTWCGReusableFPCCannotSpecifyPointerBusOnInport"><![CDATA[Can not apply function prototyping control IO reuse on the inport block ''{0}'' because it feeds into a pointer bus.]]></entry>
    <entry key="RTWCGReusableMatlabIOCannotReusePartialI"><![CDATA[Matlab function block in-place optimization problem: the <sldiag objui="inport" objparam="{0,number,integer}" objname="{1}">input port {0,number,integer}</sldiag> of ''{1}'' does not have a buffer with a full memory region.]]></entry>
    <entry key="RTWCGReusableMatlabIOCannotReuseNoBufferI"><![CDATA[Matlab function block in-place optimization problem: the <sldiag objui="inport" objparam="{0,number,integer}" objname="{1}">input port {0,number,integer}</sldiag> of ''{1}'' has no buffer.]]></entry>
    <entry key="RTWCGReusableMatlabIOCannotReuseNoBufferO"><![CDATA[Matlab function block in-place optimization problem: the <sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">output port {0,number,integer}</sldiag> of ''{1}'' has no buffer.]]></entry>
    <entry key="RTWCGConcurrentAccessOnlyDSM">Invalid attribute on Signal {0}.Concurrent Access Attribute is valid for only Signals on Data Store Memory.</entry>
    <entry key="RTWDataTypeNameReservedIdConflict">Unable to generate code using user-defined data type ''{0}'' because it conflicts with a {1} language reserved identifier</entry>
    <entry key="RTWEmptyNamingRule">The naming rule ''{0}'' specified for the ''{1}'', results in an empty string. Specify a different naming rule or ensure that the naming rule contains $M or $N. </entry>
    <entry key="RTWExternNameClash">Potential conflicting usages of identifier ''{0}'': {1}</entry>
    <entry key="RTWExternNameClash2" note="stringDatatypeUpdate">Potential usage conflicts for identifier ''{0}''.  This might occur when multiple referenced models have similar model names and similar naming rules.  You can resolve this conflict by: increase the maximum identifier length parameter on the Identifiers pane of the Configuration Parameter dialog, add different literal character vectors in identifier naming rules for each referenced model, or use dis-similar names for each referenced model</entry>
    <entry key="RTWExternNameClashWithNamespace">Potential conflicting usages of type ''{0}''; this name is already in use as a namespace. Please change the type name or namespace name.</entry>
    <entry key="RTWExternNameClashWithTypeName">Potential conflicting usages of identifier: ''{0}'' is a field name and a field type name in a C++ class or struct.</entry>
    <entry key="RTWIDInMakingSynthesizedExternNameClash">Potential conflicting usages of identifier ''{0}'': {1}.\n\nThe identifier ''{0}'' for ''{2}'' was generated because it is individually mapped to a non-Auto storage class and the Identifier field is empty.</entry>
    <entry key="RTWIDInMemSynthesizedExternNameClash">Potential conflicting usages of identifier ''{0}'': {1}.\n\nThe identifier ''{0}'' for ''{2}'' was generated because it is individually mapped to a non-Auto storage class and the Identifier field is empty.</entry>
    <entry key="RTWBothIDsSynthesizedExternNameClash">Potential conflicting usages of identifier ''{0}'': {1}.\n\nThe identifier ''{0}'' was generated for both ''{2}'' and ''{3}'' because both blocks are individually mapped to a non-Auto storage class and the Identifier field for each block is empty.</entry>
    <entry key="RTWIDSynthesizedIDIsEmpty">An identifier was generated for the block ''{0}'' because it is individually mapped to a non-Auto storage class and the Identifier field for the block is empty. However, the generated identifier was empty after applying all the rules for a valid identifier. Please rename the block with at least one valid ANSI-C character.</entry>
    <entry key="RTWIDSynthesizedIDForIOBufferIsEmpty">An identifier was generated for the signal associated with block ''{0}'' at port ''{1}'' because it is individually mapped to a non-Auto storage class and the Identifier field for the signal is empty. However, the generated identifier was empty after applying all the rules for a valid identifier. Please rename the block with at least one valid ANSI-C character.</entry>
    <entry key="RTWIDSynthesizedStateIDIsEmpty">An identifier was generated for the state owned by the block ''{0}'' because it is individually mapped to a non-Auto storage class and the Identifier field for the state is empty. However, the generated identifier was empty after applying all the rules for a valid identifier. Please rename the block, ''{0}'', that owns the state with at least one valid ANSI-C character.</entry>
    
    <entry key="RTWRelaxNameForVariantsNotPossibleForCSC"> Try changing the storage class to one of the built-in storage classes.</entry>
    <entry key="RTWReusedFcnNameClashIntraModel"><![CDATA[ ''{0}'' and ''{1}'' have the same function name but different checksums, therefore the same function name ''{2}'' cannot be specified for the two subsystems.\n Try the following in order to eliminate this error:\n\n1. In Library Subsystem > Block Parameter > Code Generation, specify the 'Function Name Options' as 'Auto' to find out differences in the two function signatures. Then, refer to <a href="matlab:helpview([docroot '/ecoder/ug/determine-why-subsystem-code-is-not-reused.html'])">"Determine Why Subsystem Code Is Not Reused"</a>  on tips to resolve checksum differences.\n\n2. Consider renaming the function name from ''{2}'' to ''{2}$C'' in Library Subsystem > Block Parameter > Code Generation > Function Name to the append subsystem checksum to the function name and make it unique. Note that this will turn the code reuse optimization off by generating separate functions for the conflicting instances]]></entry>
    <entry key="RTWGenBadParamValue">Invalid value specified for rtwgen parameter ''{0}''</entry>
    <entry key="RTWGenBuildAdvisorWarning"><![CDATA[Code generation advisor detects potential issues with model ''{0}''.
      <actions exclusiveFixIts="yes">
        <action type="suggestion">
          <cmd>coder.advisor.internal.open</cmd>
          <txt>Address issues in advisor window.</txt>
        </action>
        <action type="suggestion">
          <txt>Turn off the advisor by selecting "Off" for <sldiag objui="configset" objparam="CheckMdlBeforeBuild">Check model before generating code</sldiag> on the Code Generation pane of the Configuration Parameters dialog.</txt>
        </action>
      </actions>]]>
    </entry>
    <entry key="RTWGenDupParam">Duplicate rtwgen parameter ''{0}'' specified</entry>
    <entry key="RTWGenExportedIdClash1">Attempt to export two different function-calls using the same name ''{0}''</entry>
    <entry key="RTWGenExportedIdClash2">The exported function name ''{0}'' clashes with the name of the system for which function-calls are exported</entry>
    <entry key="RTWGenExportedIdClash3">The exported function name ''{0}'' clashes with the Function Name for subsystem ''{1}''</entry>
    <entry key="RTWGenNoInliningSubsysOfSeparateData">The exported function name ''{0}'' clashes with the Function Name for subsystem ''{1}''. To avoid this name conflict, either uncheck ''Function with separate data'' on the subsystem parameters dialog or rename one of the functions.</entry>
    <entry key="RTWGenNoInliningSubsysOfReusableFunction">The exported function name ''{0}'' clashes with the Function Name for subsystem ''{1}''. To avoid this name conflict, either select ''Function'' for ''Function packaging'' on the subsystem parameters dialog or rename one of the functions.</entry>
    <entry key="RTWGenMdlInputDataSpec">External input data for the root inports of model ''{0}'' has been specified. This is not automatically embedded in the generated code. Your target must create a specific run-time interface for the generated code to feed non-zero signals into the root inports</entry>
    <entry key="RTWGenSyntaxErr">Usage: rtwgen(''BlockDiagram'')</entry>
    <entry key="RTWGenModelNameTooLong">Unable to generate code for model ''{0}'' because its name exceeds {1,number,integer} characters</entry>
    <entry key="RTWGenUnknownParam">Unknown rtwgen parameter ''{0}'' specified</entry>
    <entry key="RTWIllegalUseOfReservedId">Cannot use identifier ''{0}'' as a "{1}" because it is a programming language reserved identifier</entry>
    <entry key="RTWReservedIdentifier">The identifier ''{0}'' has already been reserved</entry>
    <entry key="RTWIdentifierServiceCodeGenNotStarted">Cannot request Identifier as Code Generation Context is not available</entry>
    <entry key="RTWIdentifierServiceCodeGenStarted">Cannot reserve Identifier as Code Generation has started. Use requestIdentifier to request for an identifier during Code Generation</entry>
    <entry key="RTWInvalidExportFunctionsCall">The TLC option ''ExportFunctionsMode'' is not supported for generating code from a model. The option applies only to generating code from a subsystem</entry>
    <entry key="RTWNameUnableToLocateRootBlock">Unable to locate ''{0}'' in root window of model {1}</entry>
    <entry key="RTWNameUnableToLocateSubsystemBlock">Unable to locate ''{0}'' in subsystem ''{1}'' (S{2,number,integer}) of model {3}</entry>
    <entry key="RTWNonReuseWideGroundCanInputGrnd">Cannot generate a function for Subsystem block ''{0}''. This subsystem is fed by the Ground block ''{1}'' that has a nonscalar output signal.  Either replace the Ground block with a Constant block having all zero values or modify the ''Function packaging'' setting of the Subsystem block to Inline, or Nonreusable function with ''Function interface'' set to ''void_void''</entry>
    <entry key="RTWNonReuseWideGroundCanInputGrndCPP"><![CDATA[Cannot generate a function for Subsystem block ''{0}'', which is required when generating a C++ class interface. This subsystem is fed by the Ground block ''{1}'' that has a nonscalar output signal.  Either replace the Ground block with a Constant block having all zero values or set <sldiag objui="configset" objparam="CodeInterfacePackaging">Code interface packaging</sldiag> to a value other than ''C++ class'']]></entry>
    <entry key="RTWNonReuseWideGroundCanInputUnconn">Cannot generate a reusable function for Subsystem block ''{0}''. Some of the input port elements of this Subsystem block are not connected, either directly or indirectly, to actual (i.e., nonvirtual) signals. Either connect the unconnected inputs of the Subsystem block to Constant blocks having zero values or modify the ''Function packaging'' setting of the Subsystem block to Inline or Function</entry>
    <entry key="RTWNonReuseWideGroundCanInputUnconnCPP"><![CDATA[Cannot generate a reusable function for Subsystem block ''{0}'', which is required when generating a C++ class interface. Some of the input port elements of this Subsystem block are not connected, either directly or indirectly, to actual (i.e., nonvirtual) signals. Either connect the unconnected inputs of the Subsystem block to Constant blocks having zero values or set <sldiag objui="configset" objparam="CodeInterfacePackaging">Code interface packaging</sldiag> to a value other than ''C++ class'']]></entry>
    <!-- RTWNotConfigForExtMode -->
    <entry key="RTWNotConfigForExtMode"><![CDATA[Current code generation target for model ''{0}'' is either not configured for or does not support external mode.  Select <sldiag objui="configset" objparam="ExtMode">External mode</sldiag> to enable external mode for targets that support it]]></entry>
    <entry key="RTWSFcnComplexTunableParameterNotSupported">S-function parameter ''{0}'' can not be made tunable because its value is complex</entry>
    <entry key="RTWSFcnNonBuiltInTunableParameterNotSupported">S-function parameter ''{0}'' can not be made tunable because its data type is not a built-in type</entry>
    <entry key="RTWSFcnTransformedTunableParameterNotSupported">S-function parameter ''{0}'' can not be made tunable because its value or data type has been transformed relative to the corresponding external parameter</entry>
    <entry key="RTWSimRunning">Cannot generate code for ''{0}'' because the model is currently simulating.</entry>
    <entry key="RTWStateFlowBitSetsWithStructAlignment">Bitsets may not be used when using a target that specifies an explicit structure alignment.  Turn off the options ''Use bitsets for storing state configuration'' and ''Use bitsets for storing Boolean data'' in the Configuration Parameters dialog box.</entry>
    <entry key="RTWDataTypeElementNameReservedIdConflict">Unable to generate code using user-defined data type ''{0}'' because it has an element named ''{1}'' which conflicts with a programming language reserved identifier</entry>
    <entry key="RTWAnonStructElementNameReservedIdConflict">"Unable to generate code for ''{0}'' because it is used in a tunable expression and contains name ''{1}'' in struct that is a programming language reserved identifier."</entry>
    <entry key="RateTransBlkNotAllowedAtMergeBlk"><![CDATA[Rate transition block is not allowed at <sldiag objui="inport" objparam="{0,number,integer}" objname="{1}">input port {0,number,integer}</sldiag> of Merge block ''{1}''. Consider putting a Signal Conversion at the input port of the Merge block before inserting the Rate Transition block.]]></entry>
    <entry key="RateTransBlkDoesntSupportMoreThanTwoTasks" context="error">Rate Transition block ''{0}'' with ''Ensure data integrity'' set to ''on'' does not support multiple read and write transitions involving Union rate.
    <![CDATA[
             <actions exclusiveFixIts="yes">
             <action type="fixit" id="DisableDataTransferProtection" retvalue="false">
             <cmd>set_param(''{0}'', ''Integrity'', ''off'');</cmd>
             <txt>Disable the ''Ensure data integrity'' setting for Rate Transition block ''{0}''.</txt>
             </action>
             </actions>
    ]]>
    </entry>
    <entry key="VirtualBusRootOutportWithUnionTsUnsupported" context="error">The root Outport block ''{0}'' with virtual bus input does not support Union sample time.
    <![CDATA[
               <actions exclusiveFixIts="yes">
               <action type="suggestion" id="ReplaceOutportBlockWithBEP">
               <txt>Replace the root Outport block ''{0}'' with a Out Bus Element block.</txt>
               </action>
               </actions>
    ]]>
    </entry>
    <entry key="SuggestForMultiWordCSC">
      <![CDATA[
               <actions>
               <action type="suggestion" id="rtw_suggestion" retvalue="false">
               <txt> You can try using a custom storage class defined in the Embedded Coder Dictionary instead.</txt>
               </action>
               <action type="fixit" id="rtw_fixit" retvalue="false">
               <cmd>set_param(''{0}'',''ProdLongLongMode'',''on'')</cmd>
               <txt>Suppress this message by setting <sldiag objui="configset" objparam="ProdLongLongMode">Support long long</sldiag> to ''on''; this change must be made for all models in a model hierarchy.</txt>
               </action>

</actions>
      ]]>
    </entry>
    <entry key="RTWCGInvalidCSCDataTypeForOutput">Output port {0,number,integer} of ''{1}'' has a legacy custom storage class as well as a data type having {2,number,integer} bits. This data type is multi-word because the largest integer type supported on the target has only {3,number,integer} bits. Custom storage classes are not supported in conjunction with multi-word data types.
    <![CDATA[
             <actions exclusiveFixIts="yes">
             <action_catalog id="Simulink:Engine:SuggestForMultiWordCSC" enabled="true" ids="{5}">
             <arg>{4}</arg>
             </action_catalog>
             </actions>
    ]]>
    </entry>
    <entry key="RTWCGInvalidCSCDataTypeForState">The state in ''{0}'' has a legacy custom storage class as well as a multi-word data type having {1,number,integer} bits. This data type is multi-word because the largest integer type supported on the target has only {2,number,integer} bits. Custom storage classes are not supported in conjunction with multi-word data types.
    <![CDATA[
             <actions exclusiveFixIts="yes">
             <action_catalog id="Simulink:Engine:SuggestForMultiWordCSC" enabled="true" ids="{4}">
             <arg>{3}</arg>
             </action_catalog>
             </actions>
    ]]>
    </entry>
    <entry key="RTWCGInvalidCSCDataTypeForParam">A parameter in ''{0}'' has a legacy custom storage class as well as a multi-word data type having {1,number,integer} bits. This data type is multi-word because the largest integer type supported on the target has only {2,number,integer} bits. Custom storage classes are not supported in conjunction with multi-word data types.
    <![CDATA[
             <actions exclusiveFixIts="yes">
             <action_catalog id="Simulink:Engine:SuggestForMultiWordCSC" enabled="true" ids="{4}">
             <arg>{3}</arg>
             </action_catalog>
             </actions>
    ]]>
    </entry>
    <entry key="RTWCGInvalidCSCDataTypeForWSParam">The workspace parameter ''{0}'' has a legacy custom storage class as well as a multi-word data type having {1,number,integer} bits. This data type is multi-word because the largest integer type supported on the target has only {2,number,integer} bits. Custom storage classes are not supported in conjunction with multi-word data types.
    <![CDATA[
             <actions exclusiveFixIts="yes">
             <action_catalog id="Simulink:Engine:SuggestForMultiWordCSC" enabled="true" ids="{4}">
             <arg>{3}</arg>
             </action_catalog>
             </actions>
    ]]>
    </entry>
    <entry key="RTWCGInvalidCSCDataTypeForRootOutport">The root outport ''{0}'' has a legacy custom storage class as well as a multi-word data type having {1,number,integer} bits. This data type is multi-word because the largest integer type supported on the target has only {2,number,integer} bits. Custom storage classes are not supported in conjunction with multi-word data types.
    <![CDATA[
             <actions exclusiveFixIts="yes">
             <action_catalog id="Simulink:Engine:SuggestForMultiWordCSC" enabled="true" ids="{4}">
             <arg>{3}</arg>
             </action_catalog>
             </actions>
    ]]>
    </entry>
    <entry key="RTWFuncScopeGlobal"><![CDATA[The signal ''{0}'' on the <sldiag objui="outport" objparam="{1,number,integer}" objname="{2}">output port {1,number,integer}</sldiag> of ''{2}'' was specified to be auto scoped, but could not be localized.{3}]]></entry>
    <entry key="RTWAutoScopeDuplicatedGlobal"><![CDATA[Multiple signals with the same name ''{0}'' have a Localizable storage class or Data Scope of Auto, but one of them is forced to be a global variable.  These can be found on the <sldiag objui="outport" objparam="{1,number,integer}" objname="{2}">output port {1,number,integer}</sldiag> of ''{2}'' and the <sldiag objui="outport" objparam="{3,number,integer}" objname="{4}">output port {3,number,integer}</sldiag> of ''{4}.'']]></entry>
    <entry key="RTWAutoScopeDuplicatedRoot"><![CDATA[Multiple signals with the same name ''{0}'' have a Localizable storage class or Data Scope of Auto, and are outside of a reusable subsystem.  These can be found on the <sldiag objui="outport" objparam="{1,number,integer}" objname="{2}">output port {1,number,integer}</sldiag> of ''{2}'' and the <sldiag objui="outport" objparam="{3,number,integer}" objname="{4}">output port {3,number,integer}</sldiag> of ''{4}''.]]></entry>
    <entry key="RTWAutoScopeDuplicatedSubsys"><![CDATA[Multiple signals with the same id ''{0}'' have a Localizable storage class or Data Scope of Auto, and are inside the same reusable subsystem ''{1}''.  These can be found on the <sldiag objui="outport" objparam="{2,number,integer}" objname="{3}">output port {2,number,integer}</sldiag> of ''{3}'' and the <sldiag objui="outport" objparam="{4,number,integer}" objname="{5}">output port {4,number,integer}</sldiag> of ''{5}''.]]></entry>
    <entry key="RTWAutoScopeDuplicatedNonAutoScope"><![CDATA[The same signal name ''{0}'' is used on multiple signals, only one of which is a Localizable storage class or has a Data Scope of Auto.  These can be found on the <sldiag objui="outport" objparam="{1,number,integer}" objname="{2}">output port {1,number,integer}</sldiag> of ''{2}'' and the <sldiag objui="outport" objparam="{3,number,integer}" objname="{4}">output port {3,number,integer}</sldiag> of ''{4}''.]]></entry>
    <entry key="RapidAcceleratorCantUploadDataNoDWork">Rapid Accelerator mode cannot update ''{0}'' because it has no uploadable dworks</entry>
    <entry key="RapidAcceleratorCantUploadDataNoInputPorts">Rapid Accelerator mode cannot update ''{0}'' because it has no input ports</entry>
    <entry key="RapidAcceleratorCantUploadDataNoConnectedSignals">Rapid Accelerator mode cannot update ''{0}'' because it has no connected signals</entry>
    <entry key="RapidAcceleratorCantUploadDataPortBasedSampleTime">Rapid Accelerator mode cannot update ''{0}'' because the block or one of its source blocks has port-based sample time</entry>
    <entry key="RapidAcceleratorCantUploadDataConstantSampleTime">Rapid Accelerator mode cannot update ''{0}'' because the block or one of its source blocks has constant sample time</entry>
    <entry key="RapidAcceleratorCantUploadDataMultipleRates">Rapid Accelerator mode cannot update ''{0}'' because it is not single rate.</entry>
    <entry key="RapidAcceleratorCantUploadDataRootInport">Rapid Accelerator mode cannot update ''{0}'' because one of its driving blocks is a top level inport</entry>
    <entry key="RapidAcceleratorCantUploadDataCSC">Rapid Accelerator mode cannot update ''{0}'' because one of its source signals uses a custom storage class</entry>
    <entry key="RapidAcceleratorCantUploadDataNoConvertFunc">Rapid Accelerator mode cannot update ''{0}'' because one of its source signals uses a data type not supported by Rapid Accelerator mode</entry>
    <entry key="RapidAcceleratorCantUploadDataVarDims">Rapid Accelerator mode cannot update ''{0}'' because one of its source signals is of variable-size</entry>
    <entry key="RapidAcceleratorUnableToOpenModelParameterInfoFile">Unable to open model parameter information mat-file''{0}''.</entry>
    <entry key="RateTransBlkNotAllowedInTrigSubsys">Rate Transition block ''{0}'' is not allowed inside the {1} subsystem ''{2}'' unless its input or output port sample time is asynchronous sample time. Consider placing the rate transition block outside the {3} subsystem.</entry>
    <entry key="RateTransBlkNotAllowedToHaveTrigRateWithConstSrc">Rate Transition block ''{0}'' has triggered sample time without a source, as the {1} port of {2} subsystem ''{3}'' is disconnected or grounded. Connect the {1} port of {2} subsystem ''{3}'' to any valid source except ground.</entry>
    <entry key="RemoveNonRemovableItem">Item ''{0}'' is not removable.</entry>
    <entry key="RemovedSysDoesNotHaveThis">Subsystem ''{0}'' does not have a ''{1}'' because it is a SimViewingDevice and does not generate code</entry>
    <entry key="ResetSignalMustBeScalar">Cannot set dimensions of the reset input port of ''{0}''. Reset signal must be a scalar signal.</entry>
    <entry key="ResettableSubsystemMustBeSingleRate">All blocks within subsystem ''{0}'', including the reset port ''{1}'', must have the same sample time.</entry>
    <entry key="ReturnWkspOutputOptNotSupported"><![CDATA[Setting ReturnWorkspaceOutputs option to ''off'' is ambiguous. Perform one of the following to avoid this error:\n\t1) use only one return argument when calling the sim command.\n\t2) <a href="matlab:set_param(bdroot,'ReturnWorkspaceOutputs','off');">turn off</a> the parameter ReturnWorkspaceOutputs on the model and do not specify the option ReturnWorkspaceOutputs when calling the sim command.]]></entry>
    <entry key="RightClickBuildFailInsertRateTransBlkInput">Subsystem right click build failed to insert a Rate Transition block at input port {0,number,integer} of block ({1}). Investigate this issue in the original model, by verifying \n - The original model uses a fixed step solver; \n - The Sample Time parameters of the Inport and Outport blocks in the subsystem are all set to -1; \n - The subsystem input signals do not have a constant sample time.</entry>
    <entry key="RightClickBuildFailInsertRateTransBlkOutput">Subsystem right click build failed to insert a Rate Transition block at output port {0,number,integer} of block ({1}). Investigate this issue in the original model, by verifying \n - The original model uses a fixed step solver; \n - The Sample Time parameters of the Inport and Outport blocks in the subsystem are all set to -1; \n - The subsystem input signals do not have a constant sample time.</entry>
    <entry key="InsertRTBWithEnumTypeNotPermitted">
      Automatic insertion of a Rate Transition block on a signal with Enumerated data type is not supported.\nManually insert a Rate Transition block at {0} port {1,number,integer} of block ''{2}'',\nand set ''Initial Conditions'' to a valid enumeration value.
    </entry>
    <entry key="InsertRTBNotPermittedOnInputPortVariantSubsystem">
      Automatic insertion of a Rate Transition block on input port {0,number,integer} of Variant block ''{1}'' is not supported.\nManually insert a Rate Transition block at the input port {0,number,integer} of subsystem ''{2}''.
    </entry>
    <entry key="InsertRTBNotPermittedOnOutputPortVariantSubsystem">
      Automatic insertion of a Rate Transition block on output port {0,number,integer} of Variant block ''{1}'' is not supported.\nManually insert a Rate Transition block at the output port {0,number,integer} of subsystem ''{2}''.
    </entry>
    <entry key="InsertRTBWithAliasEnumTypeNotPermitted">
      Automatic insertion of a Rate Transition block on a signal with Alias to Enumerated data type is not supported. \nManually insert a Rate Transition block at {0} port {1,number,integer} of block ''{2}'',\nand set ''Initial Conditions'' to a valid enumeration value.
    </entry>
    <entry key="InsertBlkAtVirtualBlkInputError">Simulink cannot automatically insert a Rate Transition block downstream of a virtual block.\nManually insert a Rate Transition block at the input port of the virtual block upstream to ''{0}''.</entry>
    <entry key="RootInportCannotCodeGenForVarDims">The root-level input port ''{0}'' is carrying a variable-size signal with finite upper bound.  This is supported only for the following targets:\n\t
    - Model reference\n\t
    - Accelerator\n\t
    - GRT (except GRT malloc)\n\t
    - ERT\n\t
    - S-function\n
    However, even for the above targets, variable-size signals with finite upper bounds are not supported when:\n\t
    - 'Code interface packaging' is set to either 'C++ class' or 'Reusable function' on the Interface pane of the Configuration Parameters dialog box\n</entry>
    <entry key="RunTimeChangeDimsFixedDimsMode"><![CDATA[Simulink cannot modify the dimensions of <sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">output port {0,number,integer}</sldiag> of ''{1}'' because this port has a fixed-size signal.]]></entry>
    <entry key="RunTimeChangeDimsFixedDimsNVBus"><![CDATA[Simulink cannot modify the dimensions of <sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">output port {0,number,integer}</sldiag> of ''{1}'' because this port has a nonvirtual bus with only fixed-size elements.]]></entry>
    <entry key="RunTimeChangeDimsPassThruOutput"><![CDATA[Simulink cannot modify the dimensions of <sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">output port {0,number,integer}</sldiag> of ''{1}''. Modifying the dimensions is disallowed because the block indicates the dimensions of this output port must match the dimensions of one of its input ports. (In the case of an S-function, ''ssSetInputDimsSameAsOutputDims'' has been used).]]></entry>
    <entry key="RunTimeChangeNumRowsFrameOutputSignal"><![CDATA[Simulink cannot modify the first dimension of <sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">output port {0,number,integer}</sldiag> of ''{1}'' because the sampling mode of this port is frame-based. Consider changing the sampling mode of this port to be sample-based.]]></entry>
    <entry key="RunTimeInvalidDims"><![CDATA[Simulink cannot set the current dimensions for <sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">output port {0,number,integer}</sldiag> of ''{1}''. The specified dimension ({2,number,integer}) must be in the range of 0 to {3,number,integer}.]]></entry>
    <entry key="RunTimeInvalidDimsNVBus"><![CDATA[Simulink cannot set the current dimensions for <sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">output port {0,number,integer}</sldiag> of ''{1}''. The specified dimension ({2,number,integer}) for bus element ''{3}'' must be in the range of 0 to {4,number,integer}.]]></entry>
    <entry key="RunTimeExceedNumDims"><![CDATA[Simulink cannot set the current dimensions for <sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">output port {0,number,integer}</sldiag> of ''{1}''. The specified dimensions index ({2,number,integer}) must be in the range of 0 to {3,number,integer} because the number of dimensions of the output port is {4,number,integer}.]]></entry>
    <entry key="RunTimeExceedNumDimsNVBus"><![CDATA[Simulink cannot set the current dimensions for <sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">output port {0,number,integer}</sldiag> of ''{1}''. The specified dimensions index ({2,number,integer}) must be in the range of 0 to {3,number,integer} because the total number of dimensions of the variable-size elements at the output port is {4,number,integer}.]]></entry>
    <entry key="RuntimeMethodCalledInUnallowedPhase">The ''{0}'' method of ''{1}'' can be called only when simulation is running</entry>
    <entry key="SFSfcnFunctionToReusableFunctionCPP">Converting ''Function packaging'' setting of the Stateflow chart ''{0}'' from ''Nonreusable function'' to ''Reusable function'', because the chart contains subfunctions, which require code generation to use ''Reusable function'' as the ''Function packaging'' setting for the chart when generating a C++ class interface.</entry>
    <entry key="SFSfcnInlinedToFunction">Converting ''Function packaging'' setting of the Stateflow chart ''{0}'' from ''Inline'' to ''{1}'', because the chart contains subfunctions and can''t be entirely inlined</entry>
    <entry key="SFSfcnReusableToFunction">Converting ''Function packaging'' setting of the Stateflow chart ''{0}'' from ''Reusable function'' to ''Nonreusable function'', because the chart contains exported graphical functions and cannot be generated as a reusable function</entry>
    <entry key="SFcnAPICannotChangeTXUDuringSim">The simulation time, states and model inputs can not be changed when programmatically calling the model during simulation</entry>
    <entry key="SFcnAPIInvalidExtInputs">Model ''{0}'' contains non-double or complex signals. Cannot set non-double or complex external inputs. Use Data Type Conversions</entry>
    <entry key="SFcnAPIInvalidExtInputs1">The specified number of model inputs ({0,number,integer}) does not match actual number ({1,number,integer}) of inputs</entry>
    <entry key="SFcnAPIInvalidInputs">The simulation inputs must be specified as a vector of doubles</entry>
    <entry key="SFcnAPIInvalidExtOutputs">Model ''{0}'' contains non-double or complex signals. Cannot save external outputs. Use Data Type Conversions</entry>
    <entry key="ModelCommandSingleTaskingModeOnly">Method ''{0}'' is only supported for models in single-tasking execution mode.</entry>
    <entry key="SFcnAPIInvalidSyntax">Invalid syntax in programmatically accessing the model ''{0}''</entry>
    <entry key="SFcnAPIInvalidTime1">The simulation time must be a real, double, scalar value</entry>
    <entry key="SFcnAPIInvalidTime2">The specified value of simulation time ({0}) is invalid, it must be a double scalar between the simulation start ({1}) and stop ({2}) times</entry>
    <entry key="SFcnAPIInvalidStates">The states of the simulation must be specified as a vector of real doubles or a structure</entry>
    <entry key="SFcnAPIInvalidTs">The sample time value must be either empty or a double non-negative scalar</entry>
    <entry key="SFcnAPITerminationDeferred">Termination of ''{0}'' deferred</entry>
    <entry key="SFcnCannotChangeSampleTime">S-function ''{0}'' method {1} cannot change the sample time of ports once they have been set.</entry>
    <entry key="SFcnDidNotSetSampleTime">S-function should set the sample time of {0} port {1,number,integer} of ''{2}'' to the value specified by the sample and offset time arguments of method {3}.</entry>
    <entry key="SFcnDidnotSetPortFrameData">S-function should set the frame data of {0} port {1,number,integer} of ''{2}'' to the frame data specified by the input argument of method {3}</entry>
    <entry key="SFcnDoesNotExist">Error in S-function ''{0}'': S-Function ''{1}'' does not exist</entry>
    <entry key="SFcnInvConstantTs">Invalid sample time assigned in S-function {0} in ''{1}''. To use constant (inf) sample time it must specify the option SS_OPTION_ALLOW_CONSTANT_PORT_SAMPLE_TIME.</entry>
    <entry key="SFcnInvInputPortTsAssigned"><![CDATA[Invalid sample time assigned to <sldiag objui="inport" objparam="{0,number,integer}" objname="{1}">input port {0,number,integer}</sldiag> of S-function {1} in ''{2}''. Sample times assigned to ports must be one of the registered sample times.]]></entry>
    <entry key="SFcnInvName">Error in S-function ''{0}'': ''{1}'' is an invalid model name specification</entry>
    <entry key="SFcnInvNumSampleTimes">Invalid number of sample times return by S-function ''{0}'' in ''{1}''.</entry>
    <entry key="SFcnInvOutputPortTsAssigned"><![CDATA[Invalid sample time assigned to <sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">output port {0,number,integer}</sldiag> of S-function {1} in ''{2}''. Sample times assigned to ports must be one of the registered sample times.]]></entry>
    <entry key="SFcnMissingSetInputFrameData">S-function ''{0}'' in ''{1}'' does not have a mdlSetInputPortFrameData routine. When an S-function with multiple output ports has dynamic frame data (inherit SamplingMode) setting for any of its ports, it is necessary to define a mdlSetInputPortFrameData routine</entry>
    <entry key="SFcnMissingSetInputPortSampleTime">S-function ''{0}'' in ''{1}'' uses PORT_BASED_SAMPLE_TIMES, but doesn''t have a mdlSetInputPortSampleTime routine.</entry>
    <entry key="SFcnMissingSetOutputPortSampleTime">S-function ''{0}'' in ''{1}''uses PORT_BASED_SAMPLE_TIMES, but doesn''t have a mdlSetOutputPortSampleTime routine.</entry>
    <entry key="SFcnNeedsContTs">S-function {0} in ''{1}'' must have a continuous sample time since it has continuous states.</entry>
    <entry key="SFcnNoUnorientedFrameData">S-function ''{0}'' in ''{1}'' sets number of dimensions to be one for its {2} port {3,number,integer} even though that port is frame-based. Note that if a port is frame-based, then the number of dimensions should be at least 2</entry>
    <entry key="SFcnUnableToAcqFcnHdl">Error in S-function ''{0}'': Unable to acquire handle to MATLAB function ''{1}''</entry>
    <entry key="SFcnUseDisallowConstTs">''{0}'' has become invariant (i.e., it will execute only once at the start of simulation). However, it has states. Consider preventing it from becoming invariant by using ssSetOptions(S, SS_OPTION_DISALLOW_CONSTANT_SAMPLE_TIME) in its mdlInitializeSizes method</entry>
    <entry key="SIDCannotAllowCopiedSID">Copied objects cannot have same Simulink ID because high-watermark is not zero.</entry>
    <entry key="SIDCannotSetHighWatermark">Cannot change high-watermark. New high-watermark must be greater than current high-watermark.</entry>
    <entry key="SIDNoSIDSpace">No Simulink ID space exists.</entry>
    <entry key="SLDV_PrecisionLost"> Precision lost when converting values to the signal type in ''{0}''</entry>
    <entry key="SLDV_PrecisionLostErr">There is precision loss due to type mismatch between the signal type and the parameter value types in ''{0}''</entry>
    <entry key="SLDV_ProofViolation">Proof property violated in ''{0}'' at time {1}</entry>
    <entry key="SLDV_SigObjWithICIgnored">The initial output value of ''{0}'' is ignored as it is inherited from a signal object. Please specify the required initial value by using the dialog parameters of this block.</entry>
    <entry key="SLDV_UnknownBlockType"> Unknown Simulink Design Verifier block type ''{0}''</entry>
    <entry key="SLType_MI_NoPublicCtor">No public constructor for class ''{0}''</entry>
    <entry key="SLType_MI_OneIndexed">Index value must be greater than or equal to one</entry>
    <entry key="SLType_ModifyLockedType">Cannot modify locked type object</entry>
    <entry key="SampHitInvalidTid">The sample time index passed into the method ''{0}'' of ''{1}'' must be in the range from 0 to {2,number,integer}</entry>
    <entry key="SampHitInvalidTidForSingleRate">The sample time index passed into the method ''{0}'' of ''{1}'' must be 0 because this model has only one sample time</entry>
    <entry key="SaveWithDisabledLinks_Error">Block diagram ''{0}'' contains a disabled library link and will not be saved. To disable this restriction, type set_param(''{1}'',''SaveWithDisabledLinksMsg'',''none'') and save again.  To find the disabled link use the Model Advisor.</entry>
    <entry key="SaveWithParameterizedLinks_Error">Block diagram ''{0}'' contains a parameterized library link and will not be saved. To disable this restriction, type set_param(''{1}'',''SaveWithParameterizedLinksMsg'',''none'') and save again.  To find the parameterized link use the Model Advisor.</entry>
    <entry key="SetCurrentOutputDimsRunTime">Simulink can only call the method ''ssSetCurrentOutputPortDimensions'' for S-function ''{0}'' in {1} during block-diagram execution.</entry>
    <entry key="SetDirty_MdlFileChangedOnDisk">Block diagram ''{0}'' is being edited but the file has changed on disk since it was loaded.  You should close and reload the block diagram.</entry>
    <entry key="SetDstateNotPerm">The number of discrete states is read-only. Discrete states can be registered by marking appropriate Dworks as states through the ''UsedAsDiscState'' flag</entry>
    <entry key="SetNumCStatesEvalOrPostPropTaskOnly">The number of continuous states can be set only in the Initialize and PostPropagationSetup methods of ''{0}''</entry>
    <entry key="SetNumDataStoresEvalOnly">The number of DataStores can be set only in the CheckPrms method of ''{0}''</entry>
    <entry key="SetNumDworksPostPropOnly">The number of Dworks can be set only in the PostPropagationSetup method of ''{0}''</entry>
    <entry key="SetNumInputPortsInitOnly">The number of input ports can be set only in the Initialize method of ''{0}''</entry>
    <entry key="SetNumOutputPortsInitOnly">The number of output ports can be set only in the Initialize method of ''{0}''</entry>
    <entry key="SetSampleTimeEvalOnly">Sample times can be set only in the Initialize method of ''{0}''</entry>
    <entry key="SettingAliasedThroughDatatypeIdNotPermitted">The aliasedthrough datatype ids for ''{0}'' are read-only and cannot be set</entry>
    <entry key="SettingAliasedThroughDatatypeNameNotPermitted">The aliasedthrough datatype names for ''{0}'' are read-only and cannot be set</entry>
    <entry key="SettingBlockHandleNotPermitted">The block handle for ''{0}'' is read-only and cannot be set</entry>
    <entry key="SettingBlockPortNameNotPermitted">Port name for block ''{0}'' is read-only and cannot be set</entry>
    <entry key="SettingDatatypeNameNotPermitted">The datatype names for ''{0}'' are read-only and cannot be set</entry>
    <entry key="SettingNotPermitted">Property ''{0}'' is read-only and cannot be set</entry>
    <entry key="SettingNumDlgPrmsNotPermitted">The number of dialog parameters for ''{0}'' is read-only and cannot be set</entry>
    <entry key="SettingNumRuntimePrmsNotPermitted">The number of run-time parameters for ''{0}'' is read-only and cannot be set</entry>
    <entry key="SettingObjectTypeEnumNotPermitted">The object type enumeration for ''{0}'' is read-only and cannot be set</entry>
    <entry key="NoDStateNumInfoForModelRef">Discrete states linearization not supported for Model block ''{0}'' because it references a protected model from R2020b or earlier. </entry>
    <entry key="CannotLinearizeModelRefInAccelMode">Discrete states linearization not supported for Model block ''{0}'' because it is in accelerator mode. </entry>
    <entry key="SfcnCannotUseDefaultDimsMethods_s">S-function ''{0}'' does not have mdlSetInputPortDimensionInfo (mdlSetInputPortWidth) and mdlSetOutputPortDimensionInfo (mdlSetOutputPortWidth) methods.  Since it does not follow the default rules, it cannot use Simulink default methods to set its port widths or dimensions.  Please update the S-function by adding the above methods.  You can find more information about these methods in the ''Writing S-functions'' document.</entry>
    <entry key="SfcnHasBothReuseAndssWriteRTW">The S-function ''{0}'' has the option SS_OPTION_WORKS_WITH_CODE_REUSE set but it either uses ssWriteRTWParameters in its mdlRTW function or does not explicitly set parameter tunabilities using ssSetSFcnParamTunable. To be compatible with code reuse, the S-function needs to register its run time parameters. Please see the S-function documentation for information on how to do this</entry>
    <entry key="SfcnInvalidOutputAsMatrix">Error in mdlRTW of S-function ''{0}''. It is using obsolete macros for writing out parameters in 2D format to the .rtw file. In order to write out parameters in 2D, you should upgrade the S-function to register run-time parameters. See the run-time parameter demo in ''sfundemo'' for an example</entry>
    <entry key="SfcnJacobianConfigButNoMethod">S-Function ''{0}'' configured its Jacobian dimensions in the mdlSetWorkWidths function, but failed to implement the mdlJacobian method.</entry>
    <entry key="SfcnJacobianMethodButNoConfig">S-Function ''{0}'' implements the mdlJacobian method, but failed to configure its Jacobian dimensions in the mdlSetWorkWidths function</entry>
    <entry key="SfcnJacobianMethodButNoIrJc">S-Function ''{0}'' implements the mdlJacobian method, but failed to initialize its Jacobian structure (Ir, Jc) in the mdlStart function</entry>
    <entry key="SfcnMissingDefinedDimsDependRuleVarDims"><![CDATA[The S-function ''{0}'' in ''{1}'' has declared ''ssSetSignalSizesComputeType'' to be SS_VARIABLE_SIZE_FROM_INPUT_SIZE. Consequently, you must use ''ssAddOutputDimsDependencyRule'' method to register the dimension dependency rules of <sldiag objui="outport" objparam="{2,number,integer}" objname="{0}">output port {2,number,integer}</sldiag>.]]></entry>
    <entry key="SfcnMissingReqTLCforSetVarDims">The S-function ''{0}'' in ''{1}'' does not have a TLC file. A TLC file is required for this S-function because the S-function has registered output dimension dependency rules for the support of variable-size signals.</entry>
    <entry key="SfcnMustHaveMdlDimsFcn_ss">S-function ''{0}'' must have {1} function.</entry>
    <entry key="SfcnRedundantDimsDepRule"><![CDATA[The S-function ''{0}'' in ''{1}'' has registered a redundant output dimension dependency rule for <sldiag objui="outport" objparam="{2,number,integer}" objname="{0}">output port {2,number,integer}</sldiag>. The input index registered in rule {3,number,integer} is a subset or superset of an existing rule. For example, a rule that contains input index "0, 1" is redundant if another rule already contains the input index "0", "1" or "0, 1".]]></entry>
    <entry key="SfcnTsNotMatchGlbDSMTs">The block ''{0}'' has sample time {1}, yet it accesses the data store memory ''{2}'' whose corresponding Simulink.Signal object has conflicting sample time {3}.</entry>
    <entry key="SfsDomainMustBeFirst">Error in {0} Symbol Format String. If a domain macro ''$D'' is specified in a symbol format string, it must appear at the beginning of the symbol format string.</entry>
    <entry key="SfsInvalid1stChar">Error in {0} Symbol Format String.  The first character specified must be a macro, alphabetic, or an underscore.</entry>
    <entry key="SfsInvalidChar">Error in {0} Symbol Format String.  ''{1}'' is not recognized as a valid macro or C-language identifier.</entry>
    <entry key="SfsInvalidMacro">Error in {0} Symbol Format String.  ''${1}'' is not recognized as a valid macro.</entry>
    <entry key="SfsMangleMacroCount">Error in {0} Symbol Format String.  There must be at least one and only one mangle macro ($M).</entry>
    <entry key="SfsMangleRequired">Error computing symbol names in model ''{0}''. The maximum identifier length ''{1,number,integer}'' does not provide sufficient space to make symbol names unique using the symbol format string ''{2}''. Consider increasing the maximum identifier length.</entry>
    <entry key="SfsMangleOrChange">Error computing symbol names in model ''{0}''. The following symbol ''{1}'' needs to be changed or mangled to make symbol names unique using the symbol format string ''{2}''. Consider changing one of the symbols or adding $M to the symbol format string.</entry>
    <entry key="SfsMangleOrChangeWithBlockPath">Error computing symbol names in model ''{0}''. The following symbol ''{1}'' originating from block ''{2}'', needs to be changed or mangled to make symbol names unique using the symbol format string ''{3}''. Consider changing one of the symbols or adding $M to the symbol format string.</entry>
    <entry key="SfsNoMethod">Error in {0} Symbol Format String. Macro for method name ''$F'' is not supported in this symbol format string.</entry>
    <entry key="SfsNoRoot">Error in {0} Symbol Format String. Macro for model name ''$R'' is not supported in this symbol format string.</entry>
    <entry key="SfsNoSysId">Error in {0} Symbol Format String. Macro for system hierarchy number ''$H'' is not supported in this symbol format string.</entry>
    <entry key="SfsNoType">Error in {0} Symbol Format String. Macro for data type ''$A'' is not supported in this symbol format string.</entry>
    <entry key="SfsTooLong">Incompatible settings among {0} Symbol Format String, Maximum Identifier Length, and Minimum Mangle Length.  Maximum identifier length must be larger than the sum of reserved length, i.e. {1,number,integer}, minimum mangle length, and the length of literal string in {2} symbol format string.</entry>
    <entry key="NamingRuleParsingError">Unable to parse symbol format string ''{0}''. {1} is detected in substring ''{2}'' of the naming rule.{3}</entry>
    <entry key="NamingRuleParsingEmptyRule">Empty naming rule</entry>
    <entry key="NamingRuleParsingInvalidToken">Invalid token</entry>
    <entry key="NamingRuleParsingInvalidDecorator">Invalid decorator</entry>
    <entry key="NamingRuleParsingUnclosedDecorator">Missing ']' for decorator</entry>
    <entry key="NamingRuleParsingUnexpectedOpenBracket">Unexpected '[' for decorator</entry>
    <entry key="NamingRuleParsingUnexpectedCloseBracket">Unexpected ']' for decorator</entry>
    <entry key="NamingRuleParsingInvalidLiteral">An invalid symbol</entry>
    <entry key="ExtendedDecoratorNotAllowedOnUnsupportedToken">Decorators supporting regular expression based string replacement can only be used with $N, $G, or $R.</entry>
    <entry key="DecoratorParsingError">Unable to parse the token decorator ''{0}''.{1}</entry>
    <entry key="DecoratorParsingNoBackSlash">No '/' separator was found.</entry>
    <entry key="DecoratorParsingTooManyBackSlashes">More than two '/' separators were found.</entry>
    <entry key="DecoratorParsingWrongPrefix">The string should start with 'r' or 'r/'.</entry>
    <entry key="DecoratorParsingEmptySpecId">The specification id is empty.</entry>
    <entry key="DecoratorParsingInvalidIdentifierCharacter">''{0}'' is not allowed in an identifier.</entry>
    <entry key="DecoratorParsingIdentifierStartsWithNumber">Identifier starts with a number ''{0}''.</entry>
    <entry key="RegexprepDecoratorOptionsParsingError">Unable to parse the token decorator options string ''{0}''.{1}</entry>
    <entry key="RegexprepDecoratorOptionNotApplicable">Cannot apply option ''{0}''.{1}</entry>
    <entry key="RegexprepDecoratorOptionUnknownOption">Unknown option.</entry>
    <entry key="RegexprepDecoratorOptionConflictingOption">''{0}'' is incompatible with a previous option ''{1}''.</entry>
    <entry key="SfsMangleTooLong">Mangle Length cannot exceed 15 characters.</entry>
    <entry key="SfsChecksumTooLong">Shared Checksum Length cannot exceed 15 characters.</entry>
    <entry key="SignalBasedLinearizationBusNotSupported">When performing signal-based linearization, it is required that the model parameter ''InjectionData'' has a non-empty ''BusSignalName'' field for the IO points that are placed on bus signals.</entry>
    <entry key="SignalBasedLinearizationInvalidInjectionData">The model parameter ''InjectionData'' is invalid. It is required that the model parameter ''InjectionData'' is either empty, a double array of port handles or a MATLAB structure with fields ''PortHandle'', ''InputWKSVariable'', ''OutputWKSVariable'' and ''SignalInjectionData''. ''SignalInjectionData'' field is required to be another structure with fields ''IOType'', ''DataType'', ''Dimensions'', ''PortDataSize'', ''SampleTime'', ''BusSignalName'', ''SignalIndex''.</entry>
    <!-- Table entries for identifier length warnings -->
    <entry key="IdentifierLengthDiagnosticTableHeaderIdentifier">Identifier</entry>
    <entry key="IdentifierLengthDiagnosticTableHeaderType">Type</entry>
    <entry key="IdentifierLengthDiagnosticTableHeaderFormat">Format</entry>
    <entry key="IdentifierLengthDiagnosticSuggestedActionGRT">
      Identifiers for model ''{0}'' were truncated to satisfy maximum identifier length setting. 
      Identifier length must not exceed {1} characters. {2} 
      <![CDATA[
      <actions exclusiveFixIts="no">
          <action type="fixit" id="EliminateMessage">
            <cmd>Simulink.ModelReference.internal.ModelRefFixes(''DisableIdentifierLengthMessage'',''{0}'',''none'')</cmd>
            <txt>Do not show this message again.</txt>
          </action>
          <action type="suggestion" id="HelpMaxIdentifierLength">
            <cmd>configset.internal.open(''{0}'',''MaxIdLength'')</cmd>
            <txt>Increase maximum identifier length which might impact referenced or referencing models.</txt>
          </action>
        </actions>
    ]]></entry>
    <entry key="IdentifierLengthDiagnosticSuggestedActionERT">
      Identifiers for model ''{0}'' were truncated to satisfy maximum identifier length setting. 
      Identifier length must not exceed {1} characters. {2} 
      <![CDATA[
      <actions exclusiveFixIts="no">
          <action type="fixit" id="EliminateMessage">
            <cmd>Simulink.ModelReference.internal.ModelRefFixes(''DisableIdentifierLengthMessage'',''{0}'',''none'')</cmd>
            <txt>Do not show this message again.</txt>
          </action>
          <action type="suggestion" id="HelpMaxIdentifierLength">
            <cmd>configset.internal.open(''{0}'',''MaxIdLength'')</cmd>
            <txt>Increase maximum identifier length which might impact referenced or referencing models.</txt>
          </action>
          <action type="suggestion" id="HelpStringFormat">
            <cmd>configset.internal.open(''{0}'',''CustomSymbolStrGlobalVar'')</cmd>
            <txt>Change identifier format.</txt>
          </action>
        </actions>
    ]]></entry>
    <entry key="IdentifierLengthDiagnosticSuggestedActionGRTError">
      Identifiers for model ''{0}'' must be truncated to satisfy maximum identifier length setting. 
      Identifier length must not exceed {1} characters. {2} 
      <![CDATA[
      <actions exclusiveFixIts="no">
          <action type="fixit" id="EliminateMessage">
            <cmd>Simulink.ModelReference.internal.ModelRefFixes(''DisableIdentifierLengthMessage'',''{0}'',''none'')</cmd>
            <txt>Do not show this message again.</txt>
          </action>
          <action type="suggestion" id="HelpMaxIdentifierLength">
            <cmd>configset.internal.open(''{0}'',''MaxIdLength'')</cmd>
            <txt>Increase maximum identifier length which might impact referenced or referencing models.</txt>
          </action>
        </actions>
    ]]></entry>
    <entry key="IdentifierLengthDiagnosticSuggestedActionERTError">
      Identifiers for model ''{0}'' must be truncated to satisfy maximum identifier length setting. 
      Identifier length must not exceed {1} characters. {2} 
      <![CDATA[
      <actions exclusiveFixIts="no">
          <action type="fixit" id="EliminateMessage">
            <cmd>Simulink.ModelReference.internal.ModelRefFixes(''DisableIdentifierLengthMessage'',''{0}'',''none'')</cmd>
            <txt>Do not show this message again.</txt>
          </action>
          <action type="suggestion" id="HelpMaxIdentifierLength">
            <cmd>configset.internal.open(''{0}'',''MaxIdLength'')</cmd>
            <txt>Increase maximum identifier length which might impact referenced or referencing models.</txt>
          </action>
          <action type="suggestion" id="HelpStringFormat">
            <cmd>configset.internal.open(''{0}'',''CustomSymbolStrGlobalVar'')</cmd>
            <txt>Change identifier format.</txt>
          </action>
        </actions>
    ]]></entry>
    <entry key="IdentifierLengthDiagnosticMessageReportAction">Executed command set_param(''{0}'',''ModelReferenceSymbolNameMessage'',''none'').</entry>
    <!-- SignalDataNotReusableSC -->
    <entry key="SignalDataNotReusableSC"><![CDATA[The storage class of the signal connected to <sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">output port {0,number,integer}</sldiag> of ''{1}'' is global, thus the generated code is not reusable.  Consider using storage class ''Auto'', setting <sldiag objui="configset" objparam="CodeInterfacePackaging">Code interface packaging</sldiag> to ''Nonreusable function'', or setting <sldiag objui="configset" objparam="MultiInstanceErrorCode">Multi-instance code error diagnostic</sldiag> to ''None'' or ''Warning'']]></entry>
    <!-- SignalDimNotReusableSC -->
    <entry key="SignalDimNotReusableSC"><![CDATA[The model cannot generate reusable code. The storage class of the signal connected to the <sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">output port {0,number,integer}</sldiag> of ''{1}'' is global and has variable size dimension. Consider using either the storage class ''Auto'' for the signal or, setting <sldiag objui="configset" objparam="CodeInterfacePackaging">Code interface packaging</sldiag> to ''Nonreusable function'' for the model.]]></entry>
    <entry key="RootOutportSignalDataNotReusableSC"><![CDATA[The storage class of root outport ''{0}'' is global, thus the generated code is not reusable.  Consider using storage class ''Auto'', setting the option ''Code interface packaging'' to ''Nonreusable function'', or setting the option ''Multi-instance code error diagnostic'' to ''None'' or ''Warning'' on the Configuration Parameters > Code Generation > Interface pane]]></entry>
    <entry key="InvalidSettingInLinearAnalysisIOBusElement">Cannot find the bus element for the given bus element in the linearization IO specification. </entry>
    <entry key="ArrayOfBusesLinearAnalysisIOBusElement">Cannot set linearization analysis points on elements of buses in an array.</entry>
    <entry key="LinearAnalysisIOBusElementOnNonBusSignal">Cannot set linearization analysis point using bus elements on a non-bus signal.</entry>
    <entry key="DuplicatedLinearAnalysisIOOnInport">Cannot set multiple linearization I/O points on the duplicated ports of ''{0}''.</entry>
    <entry key="LinearAnalysisIOOnDuplicateInportWarning">A linearization I/O point is specified on ''{0}'' or its duplicate ports, all paths from the duplicates and master port will be considered for this linearization I/O.</entry>
    <entry key="SignalBasedLinearizationIOOnABus">Cannot use a bus signal as an I/O point for signal based linearization.</entry>
    <entry key="SignalDimsLargerThan32">The number of dimensions specified in ''{0}'' exceeds the maximum (32).</entry>
    <entry key="SignalWidthLargerThanProductLongIntSize"><![CDATA[The size of <sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">output port {0,number,integer}</sldiag> of ''{1}'' exceeds the embedded hardware long int size (''{2,number,integer}'' bits) or the test hardware long int size (''{3,number,integer}'' bits). This can cause overflows during execution.]]></entry>
    <entry key="SigobjConsistencyDWork">Signal attribute inconsistency found on the state of block ''{0}'', where the state attribute does not match the signal object ''{1}'' referenced by the state:\n   State attribute ({2}): {3}\n   Object setting ({4}): {5}</entry>
    <entry key="SigobjConsistencyDWork2">Signal attribute inconsistency found on the state of block ''{0}'', where the block attribute does not match the signal object ''{1}'' referenced by the state:\n   Block attribute ({2}): {3}\n   Object setting ({4}): {5}</entry>
    <entry key="SigobjConsistencyPort"><![CDATA[Signal attribute inconsistency found on <sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">output port {0,number,integer}</sldiag> of block ''{1}'', where port setting does not match signal object ''{2}'' on <sldiag objui="outport" objparam="{3,number,integer}" objname="{4}">output port {3,number,integer}</sldiag> of block ''{4}'':\n   Port setting ({5}): {6}\n   Object setting ({7}): {8}]]></entry>
    <entry key="SimCantChangeBDPropDuringExtModeSim">Cannot change the ''{0}'' parameter while the model ''{1}'' is running in External Mode</entry>
    <entry key="SimCantChangeBDPropDuringSim">Cannot change the ''{0}'' parameter while the model ''{1}'' is running</entry>
    <entry key="SimCantChangeBDPropInFastRestart">Cannot change the ''{0}'' parameter when the model ''{1}'' is initialized in Fast Restart</entry>
    <entry key="SimCantChangeInputGlobalAttrDuringSim"><![CDATA[Cannot change the global attribute of <sldiag objui="inport" objparam="{0,number,integer}" objname="{1}">input port {0,number,integer}</sldiag> of ''{1}'' while simulation is running]]></entry>
    <entry key="SimCantChangeInputReusableAttrDuringSim"><![CDATA[Cannot change the reusable attribute of <sldiag objui="inport" objparam="{0,number,integer}" objname="{1}">input port {0,number,integer}</sldiag> of ''{1}'' while simulation is running]]></entry>
    <entry key="SimCantChangeOutputReusableAttrDuringSim"><![CDATA[Cannot change the reusable attribute of <sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">output port {0,number,integer}</sldiag> of ''{1}'' while simulation is running]]></entry>
    <entry key="SimCantChangeOutputTestPointAttrDuringSim"><![CDATA[Cannot change the test point attribute of <sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">output port {0,number,integer}</sldiag> of ''{1}'' while simulation is running]]></entry>
    <entry key="SimCantChangeOverWritableAttrDuringSim"><![CDATA[Cannot change the over writable attribute of <sldiag objui="inport" objparam="{0,number,integer}" objname="{1}">input port {0,number,integer}</sldiag> of ''{1}'' while simulation is running]]></entry>
    <entry key="SimOptInitStepTooLarge">Initial step size ({0}) is larger than the maximum step size ({1})</entry>
    <entry key="SimOptInitStepTooSmall">Initial step size ({0}) is smaller than the minimum step size ({1})</entry>
    <entry key="SimOptMinEqualToMax">Maximum step size ({0}) is equal to the minimum step size ({1}).  For fixed step size problems, use a fixed step solver</entry>
    <entry key="SimOptMinLargerThanMax">Maximum step size ({0}) must be greater than minimum step size ({1})</entry>
    <entry key="SimOptMinLargerThanSample">Minimum step size ({0}) is larger than discrete sampling period ({1})</entry>
    <entry key="SimOptMinLargerThanTotalTime">Minimum step size ({0}) is larger than the total time interval ({1}). Decrease the minimum step size</entry>
    <entry key="SimOptMinStepIgnoredInVarStepDisc">Minimum step size ({0}) will be ignored because the model is using variable step discrete solver</entry>
    <entry key="SimOptRelTolTooSmall">Relative tolerance of {0} is too small, setting relative tolerance to {1}</entry>
    <entry key="SimStatusBuilding">Building</entry>
    <entry key="SimStatusBuildingAsModelRef">Building as referenced model</entry>
    <entry key="SimStatusExternal">External</entry>
    <entry key="SimStatusExternalAsModelRef">External as referenced model</entry>
    <entry key="SimStatusExternalAsNormalModelRef">Referenced model not connected to external simulation</entry>
    <entry key="SimStatusInitializing">Initializing</entry>
    <entry key="SimStatusRestarting">Restarting</entry>
    <entry key="SimStatusInitializingAsModelRef">Initializing as referenced model</entry>
    <entry key="SimStatusRestartingAsModelRef">Restarting as referenced model</entry>
    <entry key="SimStatusPaused">Paused</entry>
    <entry key="SimStatusPausedAsModelRef">Paused as referenced model</entry>
    <entry key="SimStatusPausedInDebugger">Paused in debugger</entry>
    <entry key="SimStatusPausedInDebuggerAsModelRef">Paused in debugger as referenced model</entry>
    <entry key="SimStatusCompiled">Compiled</entry>
    <entry key="SimStatusCompiledAsModelRef">Compiled as referenced model</entry>
    <entry key="SimStatusRunning">Running</entry>
    <entry key="SimStatusRunningAsModelRef">Running as referenced model</entry>
    <entry key="SimStatusPacingUtilization">: {0,number,integer} utilization</entry>
    <entry key="SimStatusPacingOverrun">: unable to pace</entry>
    <entry key="SimStatusPacingPollMode">Pacing (poll){0}</entry>
    <entry key="SimStatusPacingPollModeAsModelRef">Pacing (poll) as referenced model{0}</entry>
    <entry key="SimStatusPacingSleepMode">Pacing (sleep){0}</entry>
    <entry key="SimStatusPacingSleepModeAsModelRef">Pacing (sleep) as referenced model{0}</entry>
    <entry key="SimStatusStopped">Stopped</entry>
    <entry key="SimStatusStoppedAsModelRef">Stopped as referenced model</entry>
    <entry key="SimStatusTerminating">Terminating</entry>
    <entry key="SimStatusTerminatingAsModelRef">Terminating as referenced model</entry>
    <entry key="SimStatusUpdating">Updating</entry>
    <entry key="SimStatusUpdatingAsModelRef">Updating as referenced model</entry>
    <entry key="SimStatusCanceling">Canceling</entry>
    <entry key="SimStatusCancel">Cancel</entry>
    <entry key="SimIsStoppedDuringConditionalStopRequest">Unable to conditionally stop inactive simulation</entry>
    <entry key="PortTypePropagationStatusPausing">Pausing</entry>
    <entry key="PortTypePropagationPause">Pause</entry>
    <entry key="PortTypePropagationPauseTooltip">Pause complex port domain type propagation</entry>
    <entry key="PortTypePropagationStatusMsgInProgress">Port Domain Type Propagation: In Progress</entry>
    <entry key="PortTypePropagationStatusMsgPaused">Port Domain Type Propagation: Paused for complex connections</entry>
    <entry key="PortTypePropagationStatusResuming">Resuming</entry>
    <entry key="PortTypePropagationResume">Resume</entry>
    <entry key="PortTypePropagationResumeTooltip">Resume complex port domain type propagation</entry>
    <entry key="PortTypePropagation">Port domain type propagation</entry>
    <entry key="PortTypePropagationPaused">Paused</entry>
    <entry key="StopRequestedBy">Stop requested by {0}</entry>
    <entry key="StopCommandIssued">Simulation stopped using stop command</entry>
    <entry key="ReachedStopTime">Reached stop time of {0}</entry>
    <entry key="SimulationTimedOut">Simulation timed out</entry>
    <entry key="StartTimeGreaterThanStop">Start time greater than stop time</entry>
    <entry key="SimTypeMismatch">Model ''{0}'' is currently compiled for ''{1}'' simulation type. The current compilation needs to be terminated before the model can be compiled for the specified simulation type ''{2}''</entry>
    <entry key="SimViewingDeviceNotAtomic">''{0}'' is specified as a ''SimViewingDevice'' but it is not atomic. Subsystems that are ''SimViewingDevices'' must be atomic</entry>
    <entry key="SimulationCommandInNoDisplay">Issuing simulation commands using the set_param function is not supported for MATLAB sessions that do not have a display, such as MATLAB sessions started using the -nodisplay option.</entry>
    <entry key="SimCommandInModelAPI">'SimulationCommand' action using set_param function is not supported for models compiled using the model function.</entry>
    <entry context="error" note="1 is the time in the simulation and 0 is a block path" key="SingularJacobian">Singular Jacobian computed at time {1} for algebraic loop that contains block ''{0}'' because the differential algebraic equation system is not of index 1 or because the algebraic equations are either over or under constrained. Try reducing the size of the steps the solver takes by reducing the ''Fixed-step size (fundamental sample time)'' or ''Relative tolerance'' parameter value.</entry>
    <entry key="SlType_IndexOutOfRange">Index value is out of range</entry>
    <entry key="SlType_InvalidElementName">Invalid element name</entry>
    <entry key="NeedsToUseDAEOrAutoSolver"> Model "{0}" contains both dynamic and algebraic
    equations. It may contain Descriptor state space blocks that produce these equations.
    Please switch solver to a DAE solver, such as ode15s, ode23t, ode14x, ode1be, or Auto solver.</entry>
    <entry key="ODENNeedsImplicitIntegrationMethod"> Model "{0}" contains both dynamic and algebraic
    equations. It may contain Descriptor state space blocks that produce these equations.
    ODEN requires the use of an implicit integration method such as ode14x or ode1be to simulate this model.</entry>


    <entry key="SaveWithDisabledLinks_Warning">Block diagram ''{0}'' contains disabled library links.
    Use Model Advisor to find the disabled links in non-library models.  The diagram has been saved but may not contain what you intended.
    <![CDATA[
             <actions exclusiveFixIts="yes">
             <action type="suggestion">
             <cmd>editedlinkstool('Create',''{0}'',0);</cmd>
             <txt>You can restore or push the disabled links in the model using the Library Link Tool.</txt>
             </action>
             </actions>
    ]]>
    </entry>

    <entry key="SaveWithParameterizedLinks_Warning">
      Block diagram ''{0}'' contains one or more parameterized library links.
      To find the parameterized links use the Model Advisor.  The diagram has been saved but may not behave as you intended.
	  Support for parameterized links will be removed in a future release.
      <![CDATA[
               <actions exclusiveFixIts="yes">
               <action type="suggestion">
               <cmd>editedlinkstool('Create',''{0}'',1);</cmd>
               <txt>You can restore or push the parameterized links in the model using the Library Link Tool.</txt>
               </action>
               </actions>
      ]]>
    </entry>


    <entry key="SlvrJacobianMethodCorrected">The ''Solver Jacobian method''
    specified is ''{0}'', however Simulink has chosen the ''{1}'' method because {3}
    <![CDATA[
             <actions exclusiveFixIts="yes">
             <action type="fixit">
             <cmd>set_param(''{2}'',''SolverJacobianMethodControl'',''{1}'');</cmd>
             <txt>You can disable this diagnostic by explicitly setting the
             <sldiag objui="configset" objparam="SolverJacobianMethodControl">Solver
             Jacobian method</sldiag> to ''{1}''.</txt>
             </action>
             <action type="suggestion" btn="apply">
             <cmd>set_param(''{2}'',''SolverPrmCheckMsg'',''none'');</cmd>
             <txt>Set <sldiag objui="configset" objparam="SolverPrmCheckMsg">Automatic
             solver parameter selection</sldiag> diagnostic to ''none''.</txt>
             </action>
             </actions>
    ]]>
    </entry>

    <entry key="SlvrJacobianPatternNotSupported">To get slvrJacobian pattern information, the solver of
    model ''{0}'' must be implicit solver and must use sparse Jacobian method.</entry>

    <entry key="SlvrAnalyticJacobianPatternNotSupported">Unable to get solver Jacobian pattern for model "{0}" using analytical linearization.
    <![CDATA[
             <actions exclusiveFixIts="yes">
             <action type="fixit" id="SlvrAnalyticJacobianPatternNotSupportedFix" retvalue="false">
             <cmd>set_param(''{0}'',''AnalyticLinearization'',''off'');</cmd>
             <txt>Disable analytic linearization for model "{0}".</txt>
             </action>
             </actions>
    ]]>
    </entry>

    <entry key="SlvrAnalyticJacobianValueNotSupported">Unable to get solver Jacobian value for model "{0}" using analytical linearization.
    <![CDATA[
             <actions exclusiveFixIts="yes">
             <action type="fixit" id="SlvrAnalyticJacobianValueNotSupportedFix" retvalue="false">
             <cmd>set_param(''{0}'',''AnalyticLinearization'',''off'');</cmd>
             <txt>Disable analytic linearization for model "{0}".</txt>
             </action>
             </actions>
    ]]>
    </entry>

    <entry key="SlvrJacobianValueNotSupported">To get slvrJacobian value information, the solver of
    model ''{0}'' must be implicit solver. To get value A B C D, must use analytical Jacobian method.</entry>

    <entry key="MassMatrixNotSupported">There is no mass matrix for model ''{0}''.</entry>
    <entry key="SolverConsecutiveZCNum"><![CDATA[At time {0}, simulation hits
    ({1,number,integer}) consecutive zero crossings. Consecutive zero
    crossings will slow down the simulation or cause the simulation to
    hang.
    <actions exclusiveFixIts="no">
    <action type="fixit">
    <cmd>set_param(''{3}'',''ZeroCrossAlgorithm'',''Adaptive'');</cmd>
    <txt>Try changing <sldiag objui="configset" objparam="ZeroCrossAlgorithm">zero-
    crossing detection algorithm</sldiag> to ''Adaptive''. When using the
    adaptive algorithm, you can turn off this message by setting the
    <sldiag objui="configset" objparam="MaxConsecutiveZCsMsg">Consecutive
    zero-crossings violation</sldiag> diagnostic to ''none''.</txt>
    </action>
    <action type="suggestion">
    <txt>Disable the zero crossing of the blocks shown in the following table. \n
    {2}</txt>
    </action>
    <action type="suggestion" btn="apply">
    <cmd>set_param(''{3}'',''MaxConsecutiveZCsMsg'',''none'');</cmd>
    <txt>To disable this diagnostic, set <sldiag objui="configset" objparam=
    "MaxConsecutiveZCsMsg">Consecutive zero-crossings violation</sldiag> diagnostic
    to ''none''</txt>
    </action>
    </actions>
    ]]>
    </entry>
    <entry key="SolverDerivConsistencyCheckFailure">Simulation of ''{0}'' causes derivative consistency check failure at time {1}</entry>
    <entry key="SolverIgnoredZCBracketing"><![CDATA[ The simulation has ignored searching
    for zero-crossing events at time {0} for ({1,number,integer}) zero crossing
    signals. These signals are being ignored either because their values are
    smaller than the zero crossing tolerance, or because they caused multiple
    consecutive zero crossings. This indicates your system has strong chattering. \n
    {2}
    <actions exclusiveFixIts="yes">
    <action type="suggestion" btn="apply">
    <cmd>set_param(''{3}'',''IgnoredZcDiagnostic'',''none'');</cmd>
    <txt>To disable this diagnostic, set <sldiag objui="configset" objparam=
    "IgnoredZcDiagnostic">Ignored zero crossings</sldiag> diagnostics to ''none''</txt>
    </action>
    </actions>
    ]]>
    </entry>

    <!--  SolverMaskedZC -->
    <entry key="SolverMaskedZC"><![CDATA[At time {0}, simulation found ({1,number,integer}) masked
    zero crossings, i.e., signal(s) with an even number of zero crossing events. The search
    algorithm only detected these zero crossings because of the presence of other zero crossings in
    this time step. Masked zero crossings are caused by one or more zero crossing signals that have
    an even number of zero crossings in the current time step. Masked zero crossings may not be
    detected in all cases.  \n
    {3}
    <actions exclusiveFixIts="yes">
    <action type="suggestion">
    <cmd>configset.internal.open(''{4}'',''Refine'')</cmd>
    <txt>Increase ''Refine factor'' from ({2,number,integer}) to a larger value</txt>
    </action>
    <action type="suggestion" btn="apply">
    <cmd>set_param(''{4}'',''MaskedZcDiagnostic'',''none'');</cmd>
    <txt>To disable this diagnostic, set <sldiag objui="configset" objparam=
    "MaskedZcDiagnostic">Masked zero crossings</sldiag> to ''none''</txt>
    </action>
    </actions>
    ]]>
    </entry>

    <!-- SolverMaxConsecutiveMinStepsViolated -->
    <entry key="SolverMaxConsecutiveMinStepsViolated"><![CDATA[Unable to reduce the step size without violating minimum step size of {0} {1,number,integer} consecutive times at time {2}. Simulation stopped. This usually may be caused by the high stiffness of the system. Please check the model ''{3}'' or increase the <sldiag objui="configset" objparam="MaxConsecutiveMinStep">Number of consecutive min steps</sldiag>]]></entry>
    <!-- SolverMaxConsecutiveMinStepsViolatedForDAE -->
    <entry key="SolverMaxConsecutiveMinStepsViolatedForDAE"><![CDATA[Unable to reduce the step size without violating minimum step size of {0} {1,number,integer} consecutive times at time {2}. Simulation stopped. This usually may be caused by violating algebraic constraints in the differential-algebraic system or by the high stiffness of the system. Try tightening the error tolerances, and/or the tolerances for computing consistent conditions. If the problem persists, please check the model ''{3}'' or increase <sldiag objui="configset" objparam="MaxConsecutiveMinStep">Number of consecutive min steps</sldiag>]]></entry>
    <entry key="SolverMinStepErr">Unable to reduce the step size without violating a minimum step size of {0} at time {1} for model ''{2}''</entry>
    <!-- SolverMinStepNonlinearIterWarnForDAE -->
    <entry key="SolverMinStepNonlinearIterWarnForDAE"><![CDATA[
    Unable to reduce the step size without violating minimum step size of {0} for {1,number,integer} consecutive times at time {2}.  This usually may be caused by violating algebraic constraints in the differential-algebraic system or by the high stiffness of the system. Try tightening the error tolerances, and/or the tolerances for computing consistent conditions. If the problem persists, please check the model ''{3}'' or increase the <sldiag objui="configset" objparam="MaxConsecutiveMinStep">Number of consecutive min steps</sldiag>
    <actions exclusiveFixIts="yes">
    <action type="suggestion">
    <cmd>solverprofiler.launchSolverProfiler</cmd>
    <txt>Open Solver Profiler to explore such issues</txt>
    </action>
    </actions>
    ]]>
    </entry>

    <entry key="SolverMinStepSizeCausedByShapePreserveErr">Unable to reduce the step size to satisfy the state shape preservation Constraint without violating minimum step size of {0} at time {1}.</entry>
    <entry key="SolverMinStepSizeCausedByShapePreserveWarn">Unable to reduce the step size to satisfy the state shape preservation constraint without violating minimum step size of {0} at time {1}. Continuing simulation with the step size restricted to {2} and using 1st order Euler integration method to satisfy the state shape preservation constraint</entry>
    <!-- SolverMinStepSizeWarn -->
    <entry key="SolverMinStepSizeWarn"><![CDATA[Unable to reduce the step size without violating minimum step size of {0} for {1,number,integer} consecutive times at time {2}.  Continuing simulation with the step size restricted to {3} and using an effective relative error tolerance of {4}, which is greater than the specified relative error tolerance of {5}. This usually may be caused by the high stiffness of the system. Please check the model ''{6}'' or increase <sldiag objui="configset" objparam="MaxConsecutiveMinStep">Number of consecutive min steps</sldiag>]]></entry>
    <!-- SolverMinStepSizeWarnForDAE -->
    <entry key="SolverMinStepSizeWarnForDAE"><![CDATA[
    Unable to reduce the step size without violating minimum step size of {0} for {1,number,integer} consecutive times at time {2}.  Continuing simulation with the step size restricted to {3} and using an effective relative error tolerance of {4}, which is greater than the specified relative error tolerance of {5}. This usually may be caused by violating algebraic constraints in the differential-algebraic system or by the high stiffness of the system. Try tightening the error tolerances, and/or the tolerances for computing consistent conditions. If the problem persists, please check the model ''{6}'' or increase <sldiag objui="configset" objparam="MaxConsecutiveMinStep">Number of consecutive min steps</sldiag>.
    <actions exclusiveFixIts="yes">
    <action type="suggestion">
    <cmd>solverprofiler.launchSolverProfiler</cmd>
    <txt>Open Solver Profiler to explore such issues</txt>
    </action>
    </actions>
    ]]>
    </entry>

    <entry key="SolverNonlIterMinStepErr"><![CDATA[
    Nonlinear iteration is not converging with step size reduced to hmin ({0}) at time {1}.  Try reducing the minimum step size and/or relax the relative error tolerance
    <actions exclusiveFixIts="yes">
    <action type="suggestion">
    <cmd>solverprofiler.launchSolverProfiler</cmd>
    <txt>Open Solver Profiler to explore such issues</txt>
    </action>
    </actions>
    ]]>
    </entry>

    <entry key="SolverOutputAssertConsoleErrMsg">Output consistency check failed at time {0} for output element {1,number,integer} of port {2,number,integer} in ''{3}''\n</entry>
    <entry key="SolverOutputAssertDlgErrMsg">Simulation of ''{0}'' terminated due to output inconsistencies</entry>
    <entry key="SolverOutputAssertForDblsConsoleErrMsg">Output consistency check failed at time {0} for output element {1,number,integer} of port {2,number,integer} in ''{3}'':\n   Expected value: {4}\n   Actual value  : {5}\n</entry>
    <entry key="SolverStateConsistencyCheckFailure">Simulation of ''{0}'' causes state consistency check failure at time {1}</entry>

    <entry key="SolverZCConsistencyCheckFailure"><![CDATA[
    Simulation of ''{0}'' causes zero crossing consistency check failure at time {1}
    <actions exclusiveFixIts="yes">
    <action type="suggestion">
    <cmd>solverprofiler.launchSolverProfiler</cmd>
    <txt>Open Solver Profiler to explore such issues</txt>
    </action>
    </actions>
    ]]>
    </entry>

    <entry context="warning" key="SortAlgLoopThruIntegrator">Simulation results might be unexpected or unintuitive because Integrator block reset or initial condition ports are part of one or more algebraic loop paths. To avoid algebraic loops when using the Integrator block, use the state port.</entry>
    <entry context="warning" key="SortDiscontinuityInAlgLoop">Discontinuities detected in one or more algebraic loops might prevent the algebraic loop solver from solving the loop.</entry>
    <entry context="warning" key="SortICInAlgLoop">Ignoring IC block ''{0}'' that is part of an algebraic loop because IC block ''{0}'' is driven by ''{1}'' ''{2}''.</entry>
    <entry key="SourceLoopError">Unable to determine signal dimensions. There is a loop consisting of ''{0}'' that cannot be resolved because signal dimensions are defined by a cyclic relationship. Specifying the signal dimensions on Inport, Mux, Selector, Demuxes will help resolve signal dimensions in the loop.  You can also use the Signal Specifications to define the signal dimensions.</entry>
    <entry key="SrcsCannotHaveDynamicDimensionsMode">Source ''{0}'' cannot have inherited dimension mode setting for its output port {1,number,integer}. All output ports of all sources should be set explicitly to fixed-size mode or variable-size mode.</entry>
    <entry key="SrcsCannotHaveDynamicFrameData">Source ''{0}'' cannot have dynamic frame data (inherit SamplingMode) setting for its output port {1,number,integer}. All sources should explicitly set all their output ports to be FRAME_YES (Frame) or FRAME_NO (Sample)</entry>
    <entry key="StandaloneNoCStates">The subsystem ''{0}'' is configured as a Function with separate data and initialization.  Subsystems using this configuration may not contain any continuous states.   Please deselect the ''Separate data and initialization'' option on the subsystem block</entry>
    <entry key="StandaloneNoContTime">The subsystem ''{0}'' is configured as a Function with separate data and initialization and has a block with a continuous sample time. Subsystems using this configuration must only have discrete sample times</entry>
    <entry key="StandaloneNoMdlRef">The model ''{0}'' contains the subsystem ''{1}'' which is configured as a Function with separate data and initialization. Subsystems using this configuration are not supported for the model reference code generation target</entry>
    <!-- StandaloneNoMultiInstanceERT TopTester: test/toolbox/simulink/configsets/highlighting/DVHyperlinks/tSLEngineErrorsOpen.m -->
    <entry key="StandaloneNoMultiInstanceERT"><![CDATA[The model ''{0}'' contains the subsystem ''{1}'' which is configured as a Function with separate data and initialization. Subsystems using this configuration are not supported when <sldiag objui="configset" objparam="CodeInterfacePackaging">Code interface packaging</sldiag> is set to either ''C++ class'' or ''Reusable function''.
    <actions exclusiveFixIts="yes">
    <action type="suggestion">
    <cmd>Simulink.internal.OpenBlockParamsDialog(''{1}'',''FunctionWithSeparateData'')</cmd>
    <txt>Clear Function with separate data</txt>
    </action>
    <action type="suggestion">
    <cmd>configset.internal.open(''{0}'',''CodeInterfacePackaging'')</cmd>
    <txt>Set ''Code interface packaging'' to ''Nonreusable function'' (might impact referenced or referencing models)</txt>
    </action>
    </actions>]]>
    </entry>
    <entry key="StandaloneNoMultiRate">The subsystem ''{0}'' is configured as a Function with separate data and initialization and has multiple sample times.  Subsystems using this configuration must be single rate</entry>
    <entry key="StandaloneNoNoninlinedSfcns">The subsystem ''{0}'' is configured as a Function with separate data and initialization and contains the S-Function ''{1}'' which does not have a TLC file.  Subsystems using this configuration only support inlined S-Functions</entry>
    <entry key="StandaloneOutFedByProbeBlock">The Probe block ''{0}'' is driving an outport of the subsystem ''{1}'' which is configured as a Function with separate data and initialization.  The Probe block does not support global data so please place a Signal Conversion block between the Probe block and the subsystem outport</entry>
    <entry key="StandaloneOutFedByWidthBlock">The Width block ''{0}'' is driving an outport of the subsystem ''{1}'' which is configured as a Function with separate data and initialization.  The Width block does not support global data so please place a Signal Conversion block between the Width block and the subsystem outport</entry>
    <entry key="StandaloneOutputFcnCall">The subsystem ''{0}'' is configured as a Function with separate data and initialization.  Subsystems using this configuration are not allowed to output any function-call signals.  Please deselect the ''Separate data and initialization'' option on the subsystem block</entry>
    <entry key="StartTimeCorrected"> <![CDATA[ The specified simulation start time ({0}) is
    not an integer multiple of the fixed step size ({1}). Changing the start time to
    ({2}).
    <actions exclusiveFixIts="yes">
    <action type="fixit" retvalue="false">
    <cmd>set_param(''{3}'',''StartTime'',''__startTime__'');</cmd>
    <cargs>
    <carg name="__startTime__" type="text">
    <txt_prompt>Enter start time:</txt_prompt>
    </carg>
    </cargs>
    <txt>Specify an integer multiple of the fixed step size for the start time of
    the simulation.</txt>
    </action>
    <action type="suggestion" btn="apply">
    <cmd>set_param(''{3}'', ''SolverPrmCheckMsg'',''none'');</cmd>
    <txt>Set <sldiag objui="configset" objparam="SolverPrmCheckMsg">Automatic
    solver parameter selection</sldiag> diagnostic to ''none''.</txt>
    </action>
    </actions>
    ]]>
    </entry>
    <entry key="StateEnableSignalMustBeScalar">Cannot set dimensions of the enable input port of ''{0}''. The enable signal must be a scalar signal.</entry>
    <entry key="StateEnabledOrTriggeredSubsystemMustBeSingleRate1">All blocks within subsystem ''{0}'' must have the same sample time since the subsystem contains an enable or trigger port and is in the synchronous mode.</entry>
    <entry key="StateEnabledOrTriggeredSubsystemMustBeSingleRate2">All signals entering subsystem ''{0}'' must have the same sample time as that of the subsystem since the subsystem contains an enable or trigger port and is in the synchronous mode.</entry>
    <entry key="StateEnabledOrTriggeredSubsystemMustHaveDiscreteOrTrigTs">Subsystem ''{0}'' must have a discrete or triggered sample time since it contains an enable or trigger port.</entry>
    <entry key="BlockWithStatesModifiedInOutputUpdateInAlgLoop"><![CDATA[''{0}'' or the model referenced by it contains a block that updates persistent or state variables while computing outputs and is not supported in an algebraic loop. It is in an algebraic loop with the following blocks.]]></entry>
    <entry key="BlocksInSubsystemWithStatesModifiedInOutputUpdateInAlgLoop"><![CDATA[''{0}'' or the model referenced by it contains blocks that updates persistent or state variables while computing outputs and is not supported in an algebraic loop. The parent subsystem ''{1}'' is in an algebraic loop with the following blocks.]]></entry>
    <entry key="StatePerturbationMustBeScalar">State perturbation level for the block ''{0}'' must be a scalar variable.</entry>
    <entry key="StatePortCannotFeedOutport">State port cannot feed into outports of nonvirtual subsystems.  Offending connection involves outport ''{0}''</entry>
    <entry key="StateResetForFCSSWithNonExplicitInit">The "States when enabling" parameter of block ''{0}'' may not be set to "reset"; it may only be set to "inherit" or "held" since its function call initiator ''{1}'' is not configured to explicitly enable and disable its destinations</entry>
    <entry key="StopAndCloseRunningModel">''{0}'' is running. Do you want to stop it and close the model?</entry>
    <entry key="StopAndCloseRunningModelInFastRestart">''{0}'' is running in Fast Restart. Do you want to exit Fast Restart and close the model?</entry>
    <entry key="StopAndCloseModelInitializedInFastRestart">''{0}'' is initialized in Fast Restart. Do you want to exit Fast Restart and close the model?</entry>
    <entry key="StopAndCloseRunningModelInExternalMode">''{0}'' is in external mode and connected to the target. Do you want to disconnect and close the model?</entry>
    <entry key="CannotChangeFastRestartWhenStepping">Fast Restart can not be enabled or disabled during a simulation</entry>
    <entry key="FastRestartNotSupportedInThisMode">Fast Restart is supported only for normal and accelerator modes. You can use ''set_param(''{0}'', ''FastRestart'', ''off'')'' to disable Fast Restart.</entry>
    <entry key="FastRestartArgNotSupportedInThisMode">Fast Restart is supported only for normal and accelerator modes.</entry>
    <entry key="FastRestartSingleSimulationOutput">sim function syntaxes that return multiple output arguments are not recommended in general and are not supported when model ''{0}'' has fast restart enabled. Use a documented syntax that returns simulation results as a single output argument.</entry>
    <entry key="LiveTuningArgNotSupportedInThisMode">Option ''LiveTuning'' valid only for normal and accelerator modes.</entry>
    <entry key="StopTimeCorrected"> <![CDATA[ The specified simulation stop time ({0}) is
    not an integer multiple of the fixed step size ({1}). Changing the stop time to
    ({2}).
    <actions exclusiveFixIts="yes">
    <action type="fixit" retvalue="false">
    <cmd>set_param(''{3}'',''StopTime'',''__stopTime__'');</cmd>
    <cargs>
    <carg name="__stopTime__" type="text">
    <txt_prompt>Enter stop time:</txt_prompt>
    </carg>
    </cargs>
    <txt>Specify an integer multiple of the fixed step size for the stop time of
    the simulation.</txt>
    </action>
    <action type="suggestion" btn="apply">
    <cmd>set_param(''{3}'', ''SolverPrmCheckMsg'',''none'');</cmd>
    <txt>Set <sldiag objui="configset" objparam="SolverPrmCheckMsg">Automatic
    solver parameter selection</sldiag> diagnostic to ''none''.</txt>
    </action>
    </actions>
    ]]>
    </entry>
    <entry key="StructFormatNotCompatible">The struct data of the given MATLAB array is not compatible with the Simulink non-virtual bus data</entry>
    <entry key="SubsystemCannotBeReusableForMultiInstanceCode"><![CDATA[The model cannot generate reusable code with inputs and outputs passed as individual arguments, because ''{0}'' can not generate a reusable function. Consider changing  <sldiag objui="configset" objparam="RootIOFormat">Pass root-level I/O</sldiag> to ''Structure reference''. Alternatively, consider setting <sldiag objui="configset" objparam="CodeInterfacePackaging">Code interface packaging</sldiag> to ''Nonreusable function''.]]></entry>
    <entry key="SubsystemCannotBeReusableForMultiInstanceCodeCPP"><![CDATA[''{0}'' can not generate a reusable function which is required when generating a C++ class interface. Consider setting <sldiag objui="configset" objparam="CodeInterfacePackaging">Code interface packaging</sldiag> to a value other than ''C++ class'']]></entry>
    <entry key="SubsystemChangedToBeReusableNotSupportedInInplace">Inplace specification not supported when the implementation of ''{0}'' needs to be changed to a Reusable function. Please set the function packaging on this block to Reusable.</entry>
    <entry key="SubsystemChangedToBeReusableForMultiInstanceCode">Attempting to change the implementation of ''{0}'' to a reusable function, so that the generated code may be reusable</entry>
    <entry key="SubsystemChangedToBeReusableInsideServer">Changing the implementation of ''{0}'' to a reusable function since it is inside the server block ''{1}''</entry>
    <entry key="StandaloneNoServer">The model ''{0}'' contains the subsystem ''{1}'' which is configured as a Function with separate data and initialization. Subsystems using this configuration are not supported inside of server blocks, and that subsystem is inside the server block ''{2}''</entry>
    <entry key="SubsystemNonReusableInReusableSubsysCPP">''{0}'' is a subsystem using the Code generation function packaging parameter value: ''Nonreusable function'' or is a Simulink Function, while it has an ancestor subsystem ''{1}'' that is using the ''Reusable function'' option. This is not allowed when generating a C++ class interface. Consider either changing the former subsystem''s option to ''Reusable function'', or changing the latter subsystem''s option to ''Nonreusable function''</entry>
    <entry key="SuppressErrStNotSupportNonInlinedSF"><![CDATA[Block ''{0}'' is a non-inlined sfunction block, which is not supported when <sldiag objui="configset" objparam="SuppressErrorStatus">Remove error status field in real-time model data structure</sldiag> is checked. Consider unselecting the option or removing the block]]></entry>
    <entry key="SuppressErrorStatusNotSupportCTime"><![CDATA[Model ''{0}'' has both <sldiag objui="configset" objparam="SupportContinuousTime">Support: continuous time</sldiag> and <sldiag objui="configset" objparam="SuppressErrorStatus">Remove error status field in real-time model data structure</sldiag> checked, which is not a supported configuration. One of these options must be unselected in order to build this model.]]></entry>
    <entry key="SwitchedReusedToNonreused">Converting ''Reusable function'' setting of subsystem ''{0}'' to ''Nonreused function'' because a child system has either been explicitly marked as nonreused, or is used in a configuration that must be nonreused. Please generate the HTML report during code generation and see the "Subsystems" section for more information</entry>
    <entry key="ConnToModelRefFcnCallInitiator">Subsystem block ''{0}'' has an output function call that is connected to the function call port of a Model Reference block. This prevents the ''{0}'' subsystem from being reused. To avoid this warning, change the Function packaging parameter of ''{0}'' to ''Inline''.</entry>
    <entry key="CompositeRateSubsysToRootOutport">Subsystem block ''{0}'' is in an export function model. The subsystem block has union rate and is connected to a root outport. This prevents the ''{0}'' subsystem from being reused. To avoid this warning, change the Function packaging parameter of ''{0}'' to ''Inline''.</entry>
    <entry key="SysGenSameFcnAsMdl">Subsystem ''{0}'' function name setting ({1}) is the same name as the model ''{2}''.  Please change the function name setting for this subsystem</entry>
    <entry key="SLFcnNameClashWithMdlCppConstructor"> Simulink function name ''{0}'' clashes with the C++ class constructor name of the model ''{1}''. Consider changing the function name or changing the 'Code interface packaging' parameter to a setting other than 'C++ class'</entry>
    <entry key="SysGenSameFileAsMdl">The subsystem ''{0}'' is trying to generate code to a reserved file ({1}) for the model ''{2}''.  Please change the file name setting for this subsystem</entry>
    <entry key="SysIllegalFileName">The subsystem ''{0}'' is trying to generate code into a file ({1}) whose name starts with ''rt_sys''.  This is an Simulink Coder reserved identifier, please change the file name setting for this subsystem</entry>
    <entry key="TagEmpty">Tag should not be empty</entry>
    <entry key="Target_BadTFLSource">Code Replacement Library ''{0}'' is missing or does not contain a valid table.</entry>
    <entry key="Target_FailedToGetHostWordLengths">Attempt to obtain Host Word Lengths failed with error.</entry>
    <entry key="TipAlert_AutoConnectionDescription">To quickly connect blocks, select the source block(s), then hold down the Ctrl key while left-clicking on the destination block.</entry>
    <entry key="TipAlert_AutoConnectionPrefsKey" translate="false" note="TranslateFalseBatch;">SimulinkTipAlertAutoConnectTip</entry>
    <entry key="TipAlert_AutoConnectionTitle">Automatic Block Connection Tip</entry>
    <entry key="TnextMustBeScalar">Time of next hit returned by S-function ''{0}'' in ''{1}'' during flag={2,number,integer} call must be a real scalar.</entry>
    <entry key="TrigSSDataInputPortsInLoop">Input port(s), {0} of ''{1}'' are involved in a loop. To remove loops involving triggered subsystems and/or Model blocks, specify ''Latch input by delaying outside signal'' on the appropriate inport(s).</entry>
    <entry key="TrigSSEnabPortInLoop">The enable input port of enabled and triggered subsystem or Model block ''{0}'' is involved in a loop. This causes the enable signal at time t to be dependent on the output of the subsystem or Model block at time t, resulting in an ambiguous execution. You can use a Memory block to break the loop.</entry>
    <entry key="TrigSSTrigPortInLoop">The trigger input port of triggered subsystem or Model block ''{0}'' is involved in a loop. This causes the  trigger signal at time t to be dependent on the output of the triggered subsystem or Model block at time t, resulting in an ambiguous execution order. You can use a Memory to break the loop.</entry>
    <entry key="TrigSigMustBeRealDouble">External mode trigger signal must be non-complex and of type ''int32'' for integer only targets or ''double'' for all others.</entry>
    <entry key="TrigStateflowDataInputPortsInLoop">Input port(s), {0}, of triggered Stateflow chart ''{1}'' are involved in a loop. You can use a Memory block to remove loops involving Triggered Stateflow charts</entry>
    <entry key="TriggerECPotentialPreStartOutputDiff"><![CDATA[The output of ''{0}'' may produce different results than the previous Simulink releases if ''{1}'' is not triggered at t = 0. Block ''{2}'' may produce non-zero outputs for zero inputs and has been inherited by the ''{3}'' execution context. In previous releases, the ''{4}'' was not inherited by the execution context and may have produced a non-zero output prior to start of the conditional subsystem. To prevent the inheritance of the context, explicitly set the sample time of ''{5}'' to the rate at which you want the signal recomputed. To turn off this warning message, deselect <sldiag objui="configset" objparam="CheckExecutionContextPreStartOutputMsg">Check preactivation output of execution context</sldiag>.]]></entry>
    <entry key="TriggerECPotentialPreStartOutputDiffConsistentOutportInit"><![CDATA[The output of ''{0}'' may produce different results than the previous Simulink releases if ''{1}'' is not triggered at t = 0. Block ''{2}'' may produce non-zero outputs for zero inputs and has been inherited by the ''{3}'' execution context. In previous releases, the ''{4}'' was not inherited by the execution context and may have produced a non-zero output prior to start of the conditional subsystem. To prevent the inheritance of the context, explicitly set the sample time of ''{5}'' to the rate at which you want the signal recomputed. To turn off this warning message, deselect <sldiag objui="configset" objparam="CheckExecutionContextPreStartOutputMsg">Check preactivation output of execution context</sldiag>.]]></entry>
    <entry key="TriggeredFcnCallCannotBeITVS">The Function-Call Port block ''{0}'' has an invalid setting specified for its ''Sample time type'' parameter. When ''Propagate sizes of variable-size signals'' is set to ''Only when enabling'', the ''Sample time type'' option must be set to ''periodic''.</entry>
    <entry key="InitTrigStateCannotBeNegative">Parameter ''Initial trigger signal state'' for Trigger Port block ''{0}'' cannot be ''negative'' because the data type ''{1}'' of the corresponding parent subsystem trigger port is unsigned.</entry>
    <entry key="UnableRepresentDataInFi">Unable to construct the fi object for the fixed-point data type ''{0}'' associated with block ''{1}''.</entry>
    <entry key="UnableRepresentModelDataInFi">Unable to construct the fi object for the fixed-point data type ''{0}''.</entry>
    <entry key="UnableRepresentDataInMatlab">Unable to find the appropriate MATLAB data type to save the Simulink internal data</entry>
    <entry key="UnableRepresentDataInMatlabErr">Unable to find the appropriate MATLAB data type to save the Simulink internal data of type ''{0}'' for ''{1}''</entry>
    <entry key="UnableToHonorPriority">Unable to honor user-specified block priorities. ''{0}'' with a block priority {1} has to execute before ''{2}'' that has a higher block priority {3} to satisfy data dependencies.</entry>
    <entry key="UnableToHonorPriorityInTask">Unable to honor user-specified block priorities in task {4,number,integer} to schedule block execution with a sample time {5}. ''{0}'' with a block priority {1} has to execute before ''{2}'' that has a higher block priority {3} to satisfy data dependencies.</entry>
    <entry key="UnableToHonorPriorityInTask0">Unable to honor user-specified block priorities in task {4,number,integer} to schedule block execution with a discrete or continuous sample time. ''{0}'' with a block priority {1} has to execute before ''{2}'' that has a higher block priority {3} to satisfy data dependencies.</entry>
    <entry key="UnableToHonorPriorityInConstTask">Unable to honor user-specified block priorities for blocks with a constant sample time. ''{0}'' with a block priority {1} has to execute before ''{2}'' that has a higher block priority {3} to satisfy data dependencies.</entry>
    <entry key="UnableToLoadBd">Unable to load block diagram ''{0}''</entry>
    <entry key="PossibleSimulationResultsMismatchForCodeGen">Cannot guarantee that results retrieved from .mat file are identical to results of other simulation modes because root inport ''{0}'' and root outport ''{1}'' are reused.</entry>
    <entry key="UnableToLocateRTWNameInBd">Unable to locate Simulink Coder block or system name ''{0}'' in model ''{1}''</entry>
    <entry key="UnableToSolveAlgLoop"><![CDATA[Unable to solve algebraic loop that contains block ''{0}'' because the loop contains one or more blocks that do not support assignment of algebraic variables, such as Stateflow charts, nonvirtual subsystems, blocks with complex output signals, or blocks with outputs that have discrete sample time or a data type other than double.
	<actions exclusiveFixIts="yes">
    <action type="suggestion">
    <txt>If the signals in the loop have discrete sample time, break the loop by adding a block, such as a Delay block or a Memory block, to the loop.</txt>
    </action>
    <action type="suggestion">
    <txt>If the signals in the loop have continuous sample time, break the loop by adding a continuous block, such as a Transfer Function block that implements a first-order system with a time constant that is small enough to not affect the system dynamics.</txt>
	</action>
	<action type="suggestion">
    <txt>To get more information about the loop, use the Simulink.BlockDiagram.getAlgebraicLoops function.</txt>
    </action>
    </actions>]]></entry>

    <entry key="UnableToUpdateDisplayInRapidAccelMode">Rapid accelerator mode does not update some visualization blocks such as ''{0}''. Run the model in normal or accelerator mode to take full advantage of visualization blocks.</entry>
    <entry key="UnconnLine">Unconnected line found in ''{0}'' (starts {1,number,integer}% from left and {2,number,integer}% from top of view)</entry>
    <entry key="UnconnLineOutsideWindow">Unconnected line found in ''{0}'' (outside of current view)</entry>
    <entry key="UnnamedRegsitryItem">Cannot add an unnamed item to a registry.</entry>
    <entry key="UnresolvedPassThroughLoop">Simulink detected an invalid loop containing blocks with variable sizes in ''{0}''. The loop consists of blocks and their corresponding ports. All of these blocks indicate that the dimensions of their output ports must match the dimensions of their respective input ports. (In the case of an S-function, ''ssSetInputDimsSameAsOutputDims'' has been used). As a result, none of the blocks in the loop are actually setting the port dimensions at any given time step. The blocks and the port indices corresponding to the external input ports of this loop are: {1}.</entry>

    <entry key="UnsupportedBlockJacobian">The Jacobian of this block is not supported.</entry>
    <entry key="VerySmallMaxStepSize">Auto step size of model ''{0}'' is selected to be {1} because of a high frequency source block in the model. The simulation requires a minimum of {2} simulation steps to complete. To reduce the number of simulation steps, decrease the stop time or select a larger maximum step size.</entry>
    <entry key="VerySmallFixedStepSize">Auto step size of model ''{0}'' is selected to be {1} because of a high frequency source block in the model. The simulation requires {2} simulation steps to complete. To reduce the number of simulation steps, decrease the stop time or select a larger fixed step size.</entry>
    <entry key="UsingDefaultMaxStepSize"><![CDATA[Model ''{0}'' is using a default value of {1} for maximum step size. You can disable this diagnostic by setting <sldiag objui="configset" objparam="SolverPrmCheckMsg">Automatic solver parameter selection</sldiag> to ''none'']]></entry>
    <entry key="UsingDiscreteSolver"><![CDATA[The model ''{0}'' does not have continuous states, hence Simulink is using the solver ''{1}'' instead of solver ''{2}''. You can disable this diagnostic by explicitly specifying a discrete solver in <sldiag objui="configset" objparam="Solver">Solver</sldiag>, or by setting <sldiag objui="configset" objparam="SolverPrmCheckMsg">Automatic solver parameter selection</sldiag> to ''none'']]></entry>
    <entry key="AutoSolverHighNx">The stiffness check in auto solver is not supported for this model because the number of continuous states ''{0}'' is  greater than the threshold value ''{1}''. To change the threshold value, set the ''NumStatesForStiffnessChecking'' model parameter at the MATLAB command line.</entry>
    <entry key="EnableRuntimeSolverSwitching">Run time solver switching should be enabled before turning on the heuristics for block diagram ''{0}''.</entry>
    <entry key="RuntimeSolverSwitchingInvalidSolver">Run time solver switching is only supported for VariableStepAuto solver. Please change the solver for block diagram ''{0}''.</entry>
    <entry key="AutoSolverRuntimeInvalidParamNames">Invalid input for EnableRuntimeSolverSwitching specified for block diagram ''{0}''. The following parameter names are invalid: ''{1}''.</entry>
    <entry key="AutoSolverRuntimeInvalidParamValues">Invalid input for EnableRuntimeSolverSwitching for block diagram ''{0}''. The values of the following parameters are invalid: ''{1}''.</entry>
    <entry key="AutoSolverRuntimeInvalidParamNamesAndValues">Invalid input for EnableRuntimeSolverSwitching for block diagram ''{0}''. The following parameter names are invalid: ''{1}''. The values of the following parameters are invalid: ''{2}''.</entry>
    <entry key="ValueLabelSignalReuseClashPart1">Signal storage reuse is turned on for this model. Consequently, the output port display for blocks may be incorrect.</entry>
    <entry key="ValueLabelSignalReuseClashPart2">Select OK to turn on the port displays regardless, or select Cancel to keep the current setting.</entry>
    <entry key="VarDimRulesExceedMaxNumber">The number of propagated dimension dependency rules ({0,number,integer}) of ''{1}'' has exceeded the maximum number of rules ({2,number,integer}) allowed in the model. You can use ''set_param(modelname, ''MaxNumVariableDimRules'', N)'' to change this setting, but this might result in longer block-diagram updates.</entry>
    <entry key="VarDimsBlockExecTimeWithBlockRequestStateResetSizeVary">Block ''{0}'' contains states that require resetting whenever the input signal sizes vary. This block property is inconsistent with a block property of ''{1}''; the output signal sizes of block ''{2}'' depend on its input signal values. Consider placing ''{3}'' in an Enabled/Function-Call/Action/Resettable Subsystem and setting the parameter ''Propagate sizes of variable-size signals'' on the corresponding control port block to: ''Only when enabling'' for an Enabled or a Function-Call Subsystem; ''Only when execution is resumed'' for an Action Subsystem; or ''Only when resetting'' for a Resettable Subsystem.</entry>
    <entry key="VarDimsBlockRequestStateResetNonModelRef">Block ''{0}'' contains states that require resetting whenever the input signal sizes vary. However, Simulink can only set signal sizes when this block is being enabled. Consider placing ''{1}'' inside an Enabled/Function-Call/Action/Resettable Subsystem and setting the parameter ''Propagate sizes of variable-size signals'' on the corresponding control port block to: ''Only when enabling'' for an Enabled or a Function-Call Subsystem; ''Only when execution is resumed'' for an Action Subsystem; or ''Only when resetting'' for a Resettable Subsystem.</entry>
    <entry key="VarDimsBusElementNotAllowed">{0} does not support nonvirtual buses which contain variable-size elements.</entry>
    <entry key="VarDimsContextNotResetBlockRequestStateResetSizeVary1">The block ''{0}'' contains states that require resetting when input signal sizes vary. Consider changing ''States when enabling'' parameter of ''{1}'' to ''reset''.</entry>
    <entry key="VarDimsContextNotResetBlockRequestStateResetSizeVary2">The block ''{0}'' contains states that require resetting when input signal sizes vary. Consider changing ''States when execution is resumed'' parameter of ''{1}'' to ''reset''.</entry>
    <entry key="VarDimsExecTimeContextModelBlockInitTime"><![CDATA[The subsystem ''{0}'' contains the control port block ''{1}'' and the model block ''{2}''. For the control port block ''{3}'', the parameter ''Propagate sizes of variable-size signals'' is set to ''During execution''. In addition, the model block  has one of the following properties: 1) the model block contains states that require resetting when the input signal sizes vary. 2) the ''Configuration Parameters > Model Referencing > Propagate sizes of variable-size signals'' parameter of the referenced model ''{4}'' is set to ''Only when enabling''. Consider changing the parameter ''Propagate sizes of variable-size signals'' for ''{5}'' to ''Only when enabling''.]]></entry>
    <entry key="VarDimsExecTimeContextModelBlockInitTimeAction"><![CDATA[The subsystem ''{0}'' contains the control port block ''{1}'' and the model block ''{2}''. For the control port block ''{3}'', the parameter ''Propagate sizes of variable-size signals'' is set to ''During execution''. In addition, the model block  has one of the following properties: 1) the model block contains states that require resetting when the input signal sizes vary. 2) the ''Configuration Parameters > Model Referencing > Propagate sizes of variable-size signals'' parameter of the referenced model ''{4}'' is set to ''Only when enabling''. Consider changing the parameter ''Propagate sizes of variable-size signals'' for ''{5}'' to ''Only when execution is resumed''.]]></entry>
    <entry key="VarDimsExecTimeContextModelBlockInitTimeReset"><![CDATA[The subsystem ''{0}'' contains the control port block ''{1}'' and the model block ''{2}''. For the control port block ''{3}'', the parameter ''Propagate sizes of variable-size signals'' is set to ''During execution''. In addition, the model block  has one of the following properties: 1) the model block contains states that require resetting when the input signal sizes vary. 2) the ''Configuration Parameters > Model Referencing > Propagate sizes of variable-size signals'' parameter of the referenced model ''{4}'' is set to ''Only when enabling''. Consider changing the parameter ''Propagate sizes of variable-size signals'' for ''{5}'' to ''Only when resetting''.]]></entry>
    <entry key="VarDimsExecTimeContextRequestStateResetSizeVary">Block ''{0}'' contains states that require resetting when input signal sizes vary. However, the subsystem that contains this block is set to ''Propagate sizes for variable-size signals during execution''. The resetting of states for ''{1}'' can occur only when the subsystem is being enabled. Consider changing the parameter ''Propagate sizes of variable-size signals'' for ''{2}'' to ''Only when enabling''.</entry>
    <entry key="VarDimsExecTimeContextRequestStateResetSizeVaryAction">Block ''{0}'' contains states that require resetting when input signal sizes vary. However, the subsystem that contains this block is set to ''Propagate sizes for variable-size signals during execution''. The resetting of states for ''{1}'' can occur only when the subsystem execution is resumed. Consider changing the parameter ''Propagate sizes of variable-size signals'' for ''{2}'' to ''Only when execution is resumed''.</entry>
    <entry key="VarDimsExecTimeContextRequestStateResetSizeVaryReset">Block ''{0}'' contains states that require resetting when input signal sizes vary. However, the subsystem that contains this block is set to ''Propagate sizes for variable-size signals during execution''. The resetting of states for ''{1}'' can occur only when the subsystem is reset. Consider changing the parameter ''Propagate sizes of variable-size signals'' for ''{2}'' to ''Only when resetting''.</entry>
    <entry key="VarDimsInitTimeContextModelBlockExecTime"><![CDATA[The subsystem ''{0}'' contains the control port block ''{1}'' and the model block ''{2}''. For the control port block ''{3}'', the parameter ''Propagate sizes of variable-size signals'' is set to ''Only when enabling''. In addition, the model block  has one of the following properties: 1) the model block contains a block for which the output signal sizes depend on the input signal values; 2) the ''Configuration Parameters > Model Referencing > Propagate sizes of variable-size signals'' parameter of the referenced model ''{4}'' is set to ''During execution''. Consider changing the parameter ''Propagate sizes of variable-size signals'' for ''{5}'' to ''During execution''.]]></entry>
    <entry key="VarDimsInitTimeContextSizeDependOnValue">The output signal sizes of block ''{0}'' depend on the input signal values. However, the subsystem that contains this block is set to ''Propagate sizes of variable-size signals only when enabling''. Consider placing this block outside subsystems with this parameter setting  or changing the parameter ''Propagate sizes of variable-size signals'' for ''{1}'' to ''During execution''.</entry>
    <entry key="ResetSSVarDimsInitTimeContextSizeDependOnValue">The output signal sizes of block ''{0}'' depend on the input signal values. However, the subsystem that contains this block is set to ''Propagate sizes of variable-size signals only when resetting''. Consider changing the parameter ''Propagate sizes of variable-size signals'' for ''{1}'' to ''During execution''.</entry>
    <entry key="VarDimsInputEmpty"><![CDATA[The signal at <sldiag objui="inport" objparam="{0,number,integer}" objname="{1}">input port {0,number,integer}</sldiag> of ''{1}'' cannot have an empty size.]]></entry>
    <entry key="VarDimsInputRequireDiscreteST"><![CDATA[The signal at <sldiag objui="inport" objparam="{0,number,integer}" objname="{1}">input port {0,number,integer}</sldiag> of ''{1}'' is a variable-size signal with a nondiscrete sample time. The sample time for any variable-size signal must be discrete.]]></entry>
    <entry key="VarDimsBusInputRequireDiscreteST"><![CDATA[The signal at <sldiag objui="inport" objparam="{0,number,integer}" objname="{1}">input port {0,number,integer}</sldiag> of ''{1}'' is a bus with a variable-size element and has a nondiscrete sample time. The sample time for any variable-size signal must be discrete.]]></entry>
    <entry key="VarDimsInvalidDrivingSS"><![CDATA[Outport ''{0}'' is driven directly by <sldiag objui="outport" objparam="{1,number,integer}" objname="{2}">output port {1,number,integer}</sldiag> of subsystem ''{2}''. Since ''{3}'' has a variable-size input and it is inside a subsystem that propagates sizes of variable-size signals during execution, it cannot be driven directly by a subsystem that propagates sizes of variable-size signals only when enabling, resetting, or when execution is resumed. To fix this, you can either insert a Signal Conversion block with its ''Output'' parameter set to ''Signal copy'' and ''Override optimizations and always copy signal'' parameter checked between two Outport blocks; or you can enable simplified initialization mode by setting <sldiag objui="configset" objparam="UnderspecifiedInitializationDetection">Underspecified initialization detection</sldiag> to ''simplified''. Note that some modifications may be necessary to ensure the model conforms to certain modeling standards required by the new initialization mode. For more information, see documentation for the Model Advisor check ''Check consistency of initialization parameters for Outport and Merge blocks''.]]></entry>
    <entry key="VarDimsInvalidDrivingMdlRef"><![CDATA[Outport ''{0}'' is driven directly by <sldiag objui="outport" objparam="{1,number,integer}" objname="{2}">output port {1,number,integer}</sldiag> of Model block ''{2}''. Since ''{3}'' has a variable-size input and it is inside a subsystem that propagates sizes of variable-size signals during execution, it cannot be driven directly by a subsystem inside the referenced model that propagates sizes of variable-size signals only when enabling, resetting, or when execution is resumed. To fix this, you can either insert a Signal Conversion block with its ''Output'' parameter set to ''Signal copy'' and ''Override optimizations and always copy signal'' parameter checked between two Outport blocks; or you can enable simplified initialization mode by setting <sldiag objui="configset" objparam="UnderspecifiedInitializationDetection">Underspecified initialization detection</sldiag> to ''simplified''. Note that some modifications may be necessary to ensure the model conforms to certain modeling standards required by the new initialization mode. For more information, see documentation for the Model Advisor check ''Check consistency of initialization parameters for Outport and Merge blocks''.]]></entry>
    <entry key="VarDimsInvalidInputIndexDimsDependencyRule">The dimension dependency rule specified for ''{0}'' is invalid. Input port indices must be in the range of 0 to {1,number,integer} (where {2,number,integer} is the number of input ports minus 1).</entry>
    <entry key="VarDimsInvalidInputModeDimsDependencyRule">The dimension dependency rule specified for ''{0}'' is invalid. The input port {1,number,integer} cannot have a fixed-size mode.</entry>
    <entry key="VarDimsMultiModeLoopInputError"><![CDATA[Simulink is not able to determine the dimension dependency rules for the loop involving the <sldiag objui="inport" objparam="{0,number,integer}" objname="{1}">input port {0,number,integer}</sldiag> of ''{1}''. Simulink cannot resolve the dimension dependency rules because they are defined by a cyclic relationship.]]></entry>
    <entry key="VarDimsMultiModeLoopOutputError"><![CDATA[Simulink is not able to determine the dimension dependency rules for the loop involving the <sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">output port {0,number,integer}</sldiag> of ''{1}''. Simulink cannot resolve the dimension dependency rules because they are defined by a cyclic relationship.]]></entry>
    <entry key="VarDimsOutportInitOutConflict"><![CDATA[<sldiag objui="outport" objparam="{0}" objname="{1}">Outport {0}</sldiag> and ''{1}'' which are driven by the same signal specify conflicting values for the "Initial output" parameter. Initial outputs should be the same.]]></entry>
    <entry key="VarDimsSfChartOutportInitOutConflict">The Stateflow Chart ''{0}'' and Outport block ''{1}'' specify conflicting initial output values. Initial outputs should be the same.</entry>
    <entry key="VarDimsOutputRequireDiscreteST"><![CDATA[The signal at <sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">output port {0,number,integer}</sldiag> of ''{1}'' is a variable-size signal with a nondiscrete sample time. The sample time for any variable-size signal must be discrete.]]></entry>
    <entry key="VarDimsBusOutputRequireDiscreteST"><![CDATA[The signal at <sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">output port {0,number,integer}</sldiag> of ''{1}'' is a bus with a variable-size element and has a nondiscrete sample time. The sample time for any variable-size signal must be discrete.]]></entry>
    <entry key="VarDimsOutputRequireNonCustomStorageClass"><![CDATA[The signal at <sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">output port {0,number,integer}</sldiag> of ''{1}'' is a variable-size signal with a custom storage class. However, variable-size signals do not support any custom storage class. Consider, in the ''Signal Properties...'' dialog, selecting a noncustom storage class from the list. (Open the ''Signal Properties...'' dialog by right-clicking the signal line).]]></entry>
      <entry key="UnboundedDimsOutputRequireBuiltInStorageClass"><![CDATA[The signal at <sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">output port {0,number,integer}</sldiag> of ''{1}'' contains an unbounded variable-size signal with a storage class that is not supported. Storage class must be 'Auto', 'Exported Global', 'Imported Extern', or 'Imported Extern Pointer'.]]></entry>
      <entry key="UnboundedDimsInputRequireBuiltInStorageClass"><![CDATA[The signal at <sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">input port {0,number,integer}</sldiag> of ''{1}'' contains an unbounded variable-size signal with a storage class that is not supported. Storage class must be 'Auto', 'Exported Global', 'Imported Extern', or 'Imported Extern Pointer'.]]></entry>
    <entry key="VarDimsRequireContiguousInput"><![CDATA[The <sldiag objui="inport" objparam="{0,number,integer}" objname="{1}">input port {0,number,integer}</sldiag> of ''{1}'' is set to accept variable-size signals, but the port is using discontiguous memory. If you are using an S-function, consider setting ''ssSetInputPortRequiredContiguous'' to on. Otherwise, consider inserting a Signal Conversion block upstream of this input port.]]></entry>
    <entry key="VarDimsSSExecTimeWithBlockRequestStateResetSizeVary">Block ''{0}'' contains states that require resetting whenever the input signal sizes vary. This block property is inconsistent with the block parameter setting for block ''{1}'' in subsystem ''{2}''. Specifically, the parameter ''Propagate sizes of variable-size signals'' is set to ''During execution''. Consider placing ''{3}'' inside an Enabled/Function-Call/Action/Resettable Subsystem and setting the parameter ''Propagate sizes of variable-size signals'' for the corresponding control port block to: ''Only when enabling'' for an Enabled or a Function-Call Subsystem; ''Only when execution is resumed'' for an Action Subsystem; or ''Only when resetting'' for a Resettable Subsystem. Alternatively, change the ''Propagate sizes of variable-size signals'' parameter setting for ''{4}'' to ''Only when enabling''.</entry>
    <entry key="VarDimsSSExecTimeWithBlockRequestStateResetSizeVaryAction">Block ''{0}'' contains states that require resetting whenever the input signal sizes vary. This block property is inconsistent with the block parameter setting for block ''{1}'' in subsystem ''{2}''. Specifically, the parameter ''Propagate sizes of variable-size signals'' is set to ''During execution''. Consider placing ''{3}'' inside an Enabled/Function-Call/Action/Resettable subsystem and setting the parameter ''Propagate sizes of variable-size signals'' for the corresponding control port block to: ''Only when enabling'' for an Enabled or a Function-Call Subsystem; ''Only when execution is resumed'' for an Action Subsystem; or ''Only when resetting'' for a Resettable Subsystem. Alternatively, change the ''Propagate sizes of variable-size signals'' parameter setting for ''{4}'' to ''Only when execution is resumed''.</entry>
    <entry key="VarDimsSSExecTimeWithBlockRequestStateResetSizeVaryReset">Block ''{0}'' contains states that require resetting whenever the input signal sizes vary. This block property is inconsistent with the block parameter setting for block ''{1}'' in subsystem ''{2}''. Specifically, the parameter ''Propagate sizes of variable-size signals'' is set to ''During execution''. Consider placing ''{3}'' inside an Enabled/Function-Call/Action/Resettable subsystem and setting the parameter ''Propagate sizes of variable-size signals'' for the corresponding control port block to: ''Only when enabling'' for an Enabled or a Function-Call Subsystem; ''Only when execution is resumed'' for an Action Subsystem; or ''Only when resetting'' for a Resettable Subsystem. Alternatively, change the ''Propagate sizes of variable-size signals'' parameter setting for ''{4}'' to ''Only when resetting''.</entry>
    <entry key="VarDimsSfcnRequireContiguous"><![CDATA[The <sldiag objui="inport" objparam="{0,number,integer}" objname="{1}">input port {0,number,integer}</sldiag> of S-Function block ''{1}'' is set to accept variable-size signals. The S-function ''{2}'' must call the method ''ssSetInputPortRequiredContiguous(S,port,true)''.]]></entry>
    <entry key="VarDimsMultiRateEnableNotSupported"> Simulink does not support the multirate enabled subsystem ''{0}'' as configured for a variable-size input. Since the subsystem ''{1}'' is multirate and the parameter ''Propagate sizes of variable-size signals'' of the control port ''{2}'' is set to ''Only when enabling'', this subsystem cannot accept any variable-size signals as input. Consider using a single-rate enabled subsystem instead.</entry>
    <entry key="VarDimsTrivialRTBNotAllowed">Rate Transition Block ''{0}'' cannot be used with a variable-size signal when the block parameter ''Ensure data integrity during data transfer'' is disabled. To eliminate this message, enable that parameter.</entry>
    <entry key="VarDimsDeferredRTBNotAllowed">Rate Transition Block ''{0}'' cannot be used with a variable-size signal when in deferred mode.</entry>
    <entry key="VarSTInpPortIsFrameBased"><![CDATA[<sldiag objui="inport" objparam="{0,number,integer}" objname="{1}">Input port {0,number,integer}</sldiag> of ''{1}'' is set to be frame-based even though this port has a variable sample time. Frame-based signals should have a discrete sample time.]]></entry>
    <!-- VectToMatrixConversionByBlock TopTester: test/toolbox/simulink/configsets/highlighting/DVHyperlinks/tSLEngineErrorsFixIt3.m -->
    <entry key="VectToMatrixConversionByBlock"><![CDATA[Mixture of 1-D array and 2-D vector (matrix) signals are driving ''{0}''. It has automatically converted the 1-D signals to 2-D vector signals.
    <actions exclusiveFixIts="yes">
    <action type="suggestion">
    <txt>Use a Reshape</txt>
    </action>
    <action type="fixit">
    <cmd>configset.internal.fixIt(''{0}'',''VectorMatrixConversionMsg'',''none'')</cmd>
    <txt>Suppress this message by setting <sldiag objui="configset" objparam="VectorMatrixConversionMsg">Vector/matrix block input conversion</sldiag> to ''none''.</txt>
    </action>
    </actions>]]>
    </entry>
    <entry key="VirtSubsysDoesNotHaveThis">Subsystem ''{0}'' does not have a ''{1}'' because it may be part of an inactive variant or commented block hierarchy or virtual subsystem</entry>
    <entry key="ModelIsNotYetLinked">This command cannot be used if the model is not initialized. Please execute feval(bdroot, ''Init'') first.</entry>
    <entry key="VirtSubsysHasNoSList">Virtual subsystem ''{0}'' does not have a sorted list.</entry>
    <entry key="WaitingForDisconnectResponse">A disconnect message was sent to the target {0,number,integer} seconds ago.  Waiting for response..</entry>
    <entry key="WaitingForFinalLogBufferTerminator">Received shutdown message from target {0,number,integer} seconds ago.  Waiting for final data logging buffer and logging terminator..</entry>

    <entry context="warning" key="WarnAlgLoopsFound"><![CDATA[Model ''{0}'' contains {1,number,integer} algebraic loops.
       <actions exclusiveFixIts="yes">
      <action type="suggestion">
      <cmd>Simulink.BlockDiagram.getAlgebraicLoops(''{0}'');</cmd>
      <txt>Highlight and view information about the algebraic loops in the model using the Simulink.BlockDiagram.getAlgebraicLoops function.</txt>
      </action>
      <action type="fixit">
      <cmd>set_param(''{0}'','AlgebraicLoopMsg', 'none');</cmd>
      <txt>Suppress this diagnostic by setting the 'Algebraic Loop' diagnostic parameter to 'none'.</txt>
      </action>
      </actions>
    ]]></entry>
    <entry context="warning" key="WarnAlgLoopsFoundInDebugger">Model ''{0}'' contains {1,number,integer} algebraic loops. To get information about the loops in the model, use the ashow function after starting the Simulink programmatic debugging interface using the sldebug function.</entry>
    <entry context="warning" key="WarnArtAlgLoopMdlPortDF"><![CDATA[Model ''{1}'' contains a direct feedthrough path from input port ''{0}'' to one or more root-level output ports, which prevents the software from removing artificial algebraic loops that involve references to model ''{1}''.
	<actions exclusiveFixIts="yes">
    <action type="suggestion">
    <txt>To resolve this warning by enabling the software to remove the artificial algebraic loop, modify the contents of model ''{1}'' such that input port ''{0}'' does not have direct feedthrough to any root-level output ports.</txt>
    </action>
	<action type="suggestion">
    <txt>To eliminate this warning without modifying the contents of the model, clear the ''Minimize artificial algebraic loop occurrences'' configuration parameter for model ''{1}''.</txt>
    </action>
    </actions>]]></entry>
    <entry key="WarnArtAlgLoopSysPortDF"><![CDATA[Subsystem ''{1}'' contains a direct feedthrough path from input port ''{0}'' to one or more subsystem output ports that prevents the software from removing artificial algebraic loops that involve subsystem ''{1}''.
	<actions exclusiveFixIts="yes">
    <action type="suggestion">
    <txt>To resolve this warning by enabling the software to remove the artificial algebraic loop, modify the contents of subsystem ''{1}'' such that input port ''{0}'' does not have direct feedthrough to any output ports of subsystem ''{1}''.</txt>
    </action>
	<action type="suggestion">
    <txt>To eliminate this warning without modifying the contents of the subsystem, clear the ''Minimize artificial algebraic loop occurrences'' parameter of subsystem ''{1}''.</txt>
    </action>
    </actions>]]></entry>
    <entry key="WarnArtAlgLoopLoggingDF"><![CDATA[When atomic subsystem or referenced model ''{0}'' is part of an artificial algebraic loop, the software is unable to remove the loop because one or more signals in the direct feedthrough path are logged using signal logging or a block that logs data.
    <actions exclusiveFixIts="yes">
    <action type="suggestion">
    <txt>To resolve this warning by enabling the software to remove the artificial algebraic loop, do not log signals, such as outputs of block ''{1}'', that are in the direct feedthrough path inside ''{0}''.</txt>
    </action>
    <action type="suggestion">
    <txt>To eliminate this warning without removing the artificial algebraic loop, clear the ''Minimize artificial algebraic loop occurrences'' parameter for atomic subsystem or referenced model ''{0}''.</txt>
    </action>
    </actions>]]>
    </entry>
    <entry key="WarnForFrameUpgrade"><![CDATA[Block ''{0}'' uses the frame status of the signal. Update your model to move control of sample-based and frame-based processing from the frame status of the signal to the block dialog parameters. For help in resolving this and other upgrade issues, run the 'Check model for block upgrade issues requiring compile time information' check in <a href="matlab:{1}">the Simulink Upgrade Advisor</a>.\n\nTo identify user-created library blocks with frame upgrade issues, run the 'Check model for custom library blocks that rely on frame status of the signal' check in the Upgrade Advisor.\n\nFor general information about the changes to frame-based processing, see your product-specific Release Notes.]]></entry>
    <entry key="WarnForFrameObjUpgrade">Your model contains at least one Simulink.Signal object whose 'SamplingMode' setting is set to 'Frame based'. Please manually change it to 'auto'.</entry>
    <entry key="WebBlockCallbackEvalErr">Error evaluating ''{0}'' callback of ''{1}''. \nCallback string is ''{2}''</entry>
    <entry key="WebBlockInPanelCallbackEvalErr">Error evaluating ''{0}'' callback of ''{1}'' in panel ''{2}''. \nCallback string is ''{3}''</entry>
    <entry key="WidthNotMatchMatlab">The width of the given MATLAB array does not match that of the Simulink internal data</entry>
    <entry key="kthDimensionsNotMatchMatlab">The {0,number,integer}-th dimensions of the given MATLAB array do not match those of the Simulink internal data</entry>
    <!-- Note: An additional parameter({2}) is introduced in the following error message id to facilitate same error id, irrespective of the value of 'StartupVariants' feature. This is done to avoid adding a new error id and updating all the tests capturing this error id, with feature control. Once we turn on the feature, we can replace the parameter value with the one with startup -->
     
    <entry key="SimStepperWrongStage"> Cannot call the method in the current stage. </entry>
    <entry key="SimStepperWrongMode">Cannot use SimStepper in the current simulation mode. As of now, SimStepper can only be used for models in normal mode.</entry>
    <entry key="SimStepperModelExistsWhileInit">The model ''{0}'' is already running.</entry>
    <entry key="SimStepperOnlySingleTasking">Selection of the 'Configuration Parameters' > 'Solver' > 'Treat each discrete rate as a separate task' option is not supported in SimStepper.</entry>
    <!-- Simple String fragments for use by engine in constructing messages. These are mainly used for constructing zero-crossing table where these values are keys -->
    <entry key="StringNumberConsecutiveZc">Number of consecutive zero-crossings</entry>
    <entry key="StringZcSignalName">Zero-crossing signal name</entry>
    <entry key="StringZcSignalIndex">Zero-crossing signal index</entry>
    <entry key="StringBlockType">Block type</entry>
    <entry key="StringBlockPath">Block path</entry>
    <entry key="StringTime">Time</entry>
    <entry key="StringReason">Reason</entry>
    <entry key="StringSuggestion">Suggestion</entry>
    <entry key="SparseMethodMayCauseProblem">For the model ''{0}'', the Solver Jacobian method parameter is set to Sparse method. If the size of the model is large, this setting might cause slower simulation times or memory allocation errors. If you observe such issues, choose the Full perturbation method for this parameter.</entry>
    <entry key="AnalyticalJacobianNotSupportPlugin">''Solver Jacobian Method'' parameter value for model ''{0}'' must be ''Full perturbation'' or ''Sparse perturbation'.</entry>
    <entry key="NoAnalyticalSlvrJacobian">of the following reasons.\n{0}\n </entry>
    <entry key="NoAnalyticalJacobian">Block has no analytical jacobian</entry>
    <entry key="AnalyticalJacobianIsNotExact">Analytical jacobian is not exact</entry>
    <entry key="AnalyticalJacobianIsNotExactSuggestion">Turn off 'Treat as gain when linearizing' in the Block Parameters dialog box</entry>
    <!-- Please pay attention to the [space] at the end of 'HasDataStoreForSlvrJacobian', 'TooMuchMemoryForSlvrJacobian'and 'EmptySlvrJacobian', they are necessary for the message format. -->
    <entry key="HasDataStoreForSlvrJacobian">there are data read or data write blocks in the model. </entry>
    <entry key="TooMuchMemoryForSlvrJacobian">too much memory will be required if the original method is selected. </entry>
    <entry key="UseFullPerturbationToAvoidMemoryError">There is insufficient memory for computing the pattern of the solver Jacobian matrix. To correct this error, set the ''Solver Jacobian method'' in the Solver pane of the Configuration Parameters dialog box to ''Full perturbation''.</entry>
    <entry key="EmptySlvrJacobian">the solver Jacobian matrix is an empty matrix. </entry>
    <entry key="ContainsLocalSolversForSolverJacobian">the model contains one or more referenced models configured to use a local solver. </entry>
    <entry key="InvalidArraySize"><![CDATA[Simulink supports signal size up to {0,number,integer} number of bytes. The signal size is calculated based on data type size, number of elements, and signal type (real/complex). The signal originated from <sldiag objui="outport" objparam="{1,number,integer}" objname="{2}">output port {1,number,integer}</sldiag> of block ''{2}'' has a signal size greater than {0,number,integer}. Consider reducing the signal size before compiling or simulating the model.]]></entry>
    <entry key="InvalidBlockIOSize">Simulink supports total block I/O buffer size up to {0,number,integer} number of bytes. The total block I/O size is calculated based on data type size, number of elements, and signal type (real/complex) of all signals in the model. Consider reducing signal sizes before compiling or simulating the model.</entry>
    <entry key="InvalidParameterSize">Simulink supports parameter size up to {0,number,integer} number of bytes. This size is calculated based on data type size, number of elements, and signal type (real/complex). Parameter ''{1}'' of block ''{2}'' has a size greater than {0,number,integer}. Consider reducing the parameter size before compiling or simulating the model.</entry>
    <entry key="InputPortStrLC">input port</entry>
    <entry key="OutputPortStrLC">output port</entry>
    <entry key="InvSignalDimensionSize">Simulink supports signal dimension size up to {0,number,integer}, which is the maximum allowable 32-bit signed integer value. The dimension size specified on or computed for {1} {2,number,integer} of ''{3}'' exceeds this limit. Consider reducing the signal size before compiling or simulating the model.</entry>
    <entry key="InvDimensionSize">Simulink supports signal and parameter dimension size up to {0,number,integer}, which is the maximum allowable 32-bit signed integer value. Consider reducing the signal or parameter size before compiling or simulating the model.</entry>
    <entry key="CannotMixDynAndInfInDimensionSpec">Dimension specification cannot contain a combination of inherited (-1) and unbounded (inf) values.</entry>
    <entry key="InfDimensionSpecRequiresNumDimensions">Dimension specification containing an unbounded (inf) value must provide number of dimensions.</entry>
    <entry key="InvalidDWorkOffsetSize">Simulink supports discrete states/dwork size  up to {0,number,integer} number of bytes. It uses the size of each discrete state to calculate the offset needed for internal memory alignment.  The size of the offset is calculated based on data type size, number of elements, and type (real/complex). The computed offset of discrete state or dwork of the block ''{1}''  is greater than {2,number,integer}. Consider reducing the discrete state/dwork or the signal width before compiling or simulating the model.</entry>
    <entry key="InvalidModelRefAccelDWorkSize">Simulink supports discrete states/dwork size, for Model Reference in Accelerator mode, up to {0,number,integer} number of bytes. The size of discrete states or dwork of the Model block ''{1}''  is greater than {2,number,integer}. Consider reducing the discrete states/dwork or the signal width before compiling or simulating the model.</entry>
    <entry key="InvalidVarDimsRootInportForEnabledModel">The root inport ''{0}'' has an output
    that is a variable-size signal. This is not allowed because the model has a root-level Enable port ''{1}''.</entry>
    <entry key="InvalidVarDimsRootOutportForEnabledModel">The root outport ''{0}'' has an input
    that is a variable-size signal. This is not allowed because the model has a root-level Enable port ''{1}''.</entry>
    <entry key="ParamNotAllowed">Failed to set the parameter ''{0}'' for the model ''{1}''. Parameter ''{0}'' applies only to libraries.</entry>
    <entry key="ParamNotAllowedGeneric">Cannot set parameter ''{0}'' because it is not allowed ({1}: ''{2}'')</entry>
    <entry key="Model">Model</entry>
    <entry key="Library">Library</entry>
    <entry key="Subsystem">Subsystem</entry>
    <entry key="STFNotSupported">The selected system target file ''{0}'' is not currently supported for concurrent execution.</entry>
    <entry key="SILPILNotSupportedForConcurrency">SIL and PIL modes currently do not support concurrent execution.</entry>
    <entry key="IDsLessThanDynamic">Cannot have IDs &lt; dynamic.</entry>
    <entry key="DynamicMixError">Cannot mix always needed and dynamically needed</entry>
    <entry key="ConditionalMixError">Cannot have same conditional ID for input and output ports</entry>
    <entry key="NoCompiledModel">No compiled model to terminate</entry>
    <entry key="UseTopModel">Cannot call this API on the referenced model ''{0}''.  Instead, use the topmost model in the compiled hierarchy: ''{1}''.</entry>
    <entry key="InvalidBlockDiagram">Invalid block diagram</entry>
    <entry key="UninitializedModel">Model is not initialized</entry>
    <entry key="ModelNotCompiledForQuery">Model is not compiled for this query</entry>
    <entry key="UnknownModel">Unknown Model</entry>
    <entry key="FixUseDblUsage">Detect obsolete usage of global variable 'FixUseDbl'.  To set the datatype override status, please set the parameter of 'DataTypeOverride' in the model or subsystem level</entry>
    <entry key="FixLogPrefUsage">Detect obsolete usage of global variable 'FixLogPref'.  To set the min/max/overflow logging status, please set the parameter of 'MinMaxOverflowLogging' in the model or subsystem level</entry>
    <entry key="InvalidRTWIndex">Internal Error: ''{0}'' has an invalid RTWIndex</entry>
    <entry key="NotCurrentNetList">Internal Error: ''{0}'' is not part of the current net-list.</entry>
    <entry key="CompRTWCGDiffRTWIndex">Internal Error: ''{0}'' has a different RTWIndex {1,number,integer} != {2,number,integer} than its first instance ''{3}''.</entry>
    <entry key="CompRTWCGDiffInputType">Internal Error: ''{0}'' has a different input type {1,number,integer} != {2,number,integer} than its first instance ''{3}''.</entry>
    <entry key="CompRTWCGDiffOutputType">Internal Error: ''{0}'' has a different output type {1,number,integer} != {2,number,integer} than its first instance ''{3}''.</entry>
    <entry key="SubsystemHiddenParameterImproperlyAccessed">Using a testing get_param that is valid only if you do model([],[],[],'compileForRTW') first.</entry>
    <entry key="VirtualSubsystemHiddenParameterImproperlyAccessed">Using a testing get_param that is valid only for a non-virtual subsystem.</entry>
    <entry key="RealizingTransformedBlocksIsDebugOnly">Realizing blocks from the transformed graph into the visible graph is a feature to be used only in internal debugging and testing.</entry>
    <entry key="ShadowedModelName">Shadowed Model Name</entry>
    <entry key="CannotInitMLSysForCodeGen">Model ''{0}'' contains one or more MATLAB System blocks and is configured to load initial states. This capability is only supported for Normal mode.
    </entry>
    <entry key="ConflictingEnumerationAlreadyPresentInModelReference">
      Enumeration ''{0}'' used to output state activity in referenced model {1} conflicts
      with enumeration used to output state activity in referenced model {2}.
    </entry>
    <entry key="DisableVolatileCSCForCPPClass">The usage of custom storage class ''{0}'' with C++ class code generation is not supported, because the custom storage class uses a ''Volatile'' specification.</entry>
    <entry key="DisableOtherTypeCSCForCPPClass">The usage of C++ class code generation with custom storage class ''{0}'' is not supported, because the custom storage class'' CSCType is ''Other''.</entry>
    <entry key="DisableVolatileMemSecForCPPClass">The usage of memory section ''{0}'' for parameter ''{1}'' with C++ class code generation is not supported, because the memory section uses a ''Volatile'' specification.</entry>


    <!-- The following are CCF Format related messages, no need to be translated -->
    <entry key="MxArrayIsNotSparse" translate="false">
      The matrix is not sparse.
    </entry>
    <entry key="PrArrayIsNULL" translate="false">
      Its Pr array is NULL.
    </entry>
    <entry key="PiArrayIsNULL" translate="false">
      Its Pi array is NULL.
    </entry>
    <entry key="IrArrayIsNULL" translate="false">
      Its Ir array is NULL.
    </entry>
    <entry key="JcArrayIsNULL" translate="false">
      Its Jc array is NULL.
    </entry>
    <entry key="PrArrayIsNotZero" translate="false">
      Its Pr array is Pr = '{'{0}'}' now. However, it should be Pr = '{'0'}'.
    </entry>
    <entry key="PiArrayIsNotZero" translate="false">
      Its Pi array is Pi = '{'{0}'}' now. However, it should be Pi = '{'0'}'.
    </entry>
    <entry key="IrArrayIsNotZero" translate="false">
      Its Ir array is Ir = '{'{0}'}' now. However, it should be Ir = '{'0'}'.
    </entry>
    <entry key="JcArrayNotOneZero" translate="false">
      Its Jc array is Jc = '{'{0}'}' now. However, it should be Jc = '{'0'}'.
    </entry>
    <entry key="JcArrayTailWrong" translate="false">
      The last element of Jc array does not equal to nzmax. nCols == {0}, Jc[nCols] == {1}, nzmax == {2}.
    </entry>
    <entry key="AllZeroButNzmax" translate="false">
      Its Ir and Jc arrays'' elements are all zero, but nzmax is {0}.
    </entry>
    <entry key="PassFormatCheck" translate="false">
      Pass the check.
    </entry>

    <entry key="IrArrayWrongOrder" translate="false">
      The order of element in Ir array's is wrong at row {0} (the first row's index is 0).
    </entry>
    <entry key="JcArrayWrongOrder" translate="false">
      Jc[{0}] is larger than Jc[{1}].
    </entry>

    <entry key="JcArrayNotAllZero" translate="false">
      Its Jc array has Jc[{0}] == {1}. However, Jc should be a all zero array.
    </entry>
    <entry key="JcArrayHeadWrong" translate="false">
      Its nzmax > 0, the Jc array has Jc[0] = {0} now. However, there should always be Jc[0] = 0.
    </entry>

    <entry key="NzmaxNotMatch" translate="false">
      Its Jc[nCols] == 0, nzmax == {0}. However, there should be Jc[nCols] == nzmax or Jc[nCols] == 0, nzmax == 1.
    </entry>

    <entry key="StateOwnerRequirementsForStateReader">Block ''{0}'' has attributes or configurations that are not supported by State Reader block ''{1}''.</entry>
    <entry key="StateOwnerRequirementsForStateWriter">Block ''{0}'' has attributes or configurations that are not supported by State Writer block ''{1}''.</entry>
    <entry key="StateOwnerRequirementsForStateAccessInChart">Block ''{0}'' has attributes or configurations that are not supported by textual state access in chart ''{1}''.</entry>
    <entry key="StateOwnerFrameInput"><![CDATA[Block ''{0}'' has frame-based signal at <sldiag objui="inport" objparam="{1,number,integer}" objname="{0}">input port {1,number,integer}</sldiag>.]]></entry>
    <entry key="StateOwnerFrameOutput"><![CDATA[Block ''{0}'' has frame-based signal at <sldiag objui="outport" objparam="{1,number,integer}" objname="{0}">output port {1,number,integer}</sldiag>.]]></entry>
    <entry key="StateOwnerVarDimsInput"><![CDATA[Block ''{0}'' has variable-size signal at <sldiag objui="inport" objparam="{1,number,integer}" objname="{0}">input port {1,number,integer}</sldiag>.]]></entry>
    <entry key="StateOwnerVarDimsOutput"><![CDATA[Block ''{0}'' has variable-size signal at <sldiag objui="outport" objparam="{1,number,integer}" objname="{0}">output port {1,number,integer}</sldiag>.]]></entry>
    <entry key="StateOwnerVirtualBusInput">Block ''{0}'' has virtual bus signal at input port {1,number,integer}. Consult documentation to see if block ''{2}'' supports non-virtual buses.</entry>
    <entry key="StateOwnerVirtualBusOutput">Block ''{0}'' has virtual bus signal at output port {1,number,integer}. Consult documentation to see if block ''{2}'' supports non-virtual buses.</entry>
    <entry key="StateOwnerStatePort">Block ''{0}'' has a state port.</entry>
    <entry key="StateOwnerResetPort">Block ''{0}'' has a reset port.</entry>
    <entry key="StateOwnerInitCondPort">Block ''{0}'' has an initial condition port.</entry>
    <entry key="StateOwnerInInitSS">Block ''{0}'' is inside an Initialize Function block.</entry>
    <entry key="StateOwnerInSubsystemResettingStates">Block ''{0}'' is inside a subsystem that can reset states such as a Resettable Subsystem or an Enabled Subsystem with parameter ''States when enabling'' of the Enable Port block set to ''reset''.</entry>
    <entry key="StateOwnerFrameBasedProcessing">Block ''{0}'' has parameter ''Input processing'' set to ''Columns as channels (frame based)''. Consider setting the parameter to ''Elements as channels (sample based)''.</entry>
    <entry key="StateOwnerCircularBuffer">Block ''{0}'' must have parameter ''Use circular buffer for state'' unchecked.</entry>
    <entry key="StateOwnerZeroDelay">Block ''{0}'' has parameter ''Delay length'' set to 0.</entry>
    <entry key="StateOwnerDiscIntegratorInTrigSS">Discrete-Time Integrator block ''{0}'' cannot be within a triggered subsystem with the parameter 'Integrator method' set to 'Integration:'. Switch the integrator method to be of type 'Accumulation:'.</entry>
    <entry key="StateOwnerDiscIntegratorICMode">Discrete-Time Integrator block ''{0}'' must have parameter ''Initial condition setting'' set to ''Auto''.</entry>
    <entry key="StateOwnerDiscIntegratorLimitOutput">Discrete-Time Integrator block ''{0}'' must have parameter ''Limit output'' unchecked.</entry>
    <entry key="StateAccessForOutportResetWhenDisabled">Outport block ''{0}'' must have parameter ''Output when disabled'' set to ''held''.</entry>
    <entry key="StateAccessForOutportInheritIC">Outport block ''{0}'' is inheriting its initial output value from its sources(s). To correct this problem, ensure that the ''Initial output'' parameter is set to a value different from the empty matrix([]).</entry>
    <entry key="StateAccessForMessageOutport">Outport block ''{0}'' is outputting a message.</entry>
    <entry key="StateAccessSrcDataTypeMismatch">Outport block ''{0}'' has input data type ''{1}''. However, the source block ''{2}'' has output data type ''{3}''. These two types should match when the outport block is state owner. </entry>
    <entry key="StateAccessForMergedOutport">The subsystem output corresponding to the Outport block ''{0}'' is connected to the Merge block ''{1}''.</entry>
    <entry key="StateAccessForSignedTriggerPort">For Trigger Port block ''{0}'', the data type ''{1}'' of the corresponding parent subsystem trigger port is signed. Consider using unsigned data type such as ''boolean'' or ''uint32''.</entry>
    <entry key="StateAccessForEitherRisingOrFallingTriggerPort">Trigger Port block ''{0}'' must have parameter ''Initial trigger signal state'' set to ''zero'' or ''positive'' when parameter ''Trigger type'' is set to ''either'' in order to support State Reader or State Writer blocks.</entry>
    <entry key="StateOwnerFcnCall">The state of block ''{0}'' is of data type function-call. State Reader and State Writer blocks do not support function-call.</entry>
    <entry key="StateOwnerEmptyStates">The state of block ''{0}'' is empty.</entry>
    <entry key="StateAccessContStateMultiState">The block ''{0}'' has multiple states. To access state externally, only one state is supported.</entry>
    <entry key="StateAccessContStateInvalidName">The identifier for parameter ''{0}'' of ''{1}'' is not a valid state name for access. To access state externally, valid state names are between quotes, start with an alphabetic or ''_'' character, followed by alphanumeric or ''_'' characters.</entry>
    <entry key="TextualAccessStateInvalidName">The name ''{0}'' assigned to state of ''{1}'' is not a valid identifier. To access textual state, valid identifiers start with an alphabetic or ''_'' character, followed by alphanumeric or ''_'' characters.</entry>
    <entry key="State">State</entry>
    <entry key="Parameter">Parameter</entry>
    <entry key="InconsistentReaderDims">The {0} dimensions {1} computed by block ''{2}'' is inconsistent with output signal dimensions {3} computed by the {0} Reader block ''{4}''.</entry>
    <entry key="InconsistentWriterDims">The {0} dimensions {1} computed by block ''{2}'' is inconsistent with input signal dimensions {3} computed by the {0} Writer block ''{4}''.</entry>
    <entry key="InconsistentParameterWriterDims">The input signal dimensions of the Parameter Writer block ''{4}'' is {3} whereas the parameter ''{0}'' owned by the block ''{2}'' has dimensions ''{1}''. Ensure that the dimensions provided to the Parameter Writer block are the same as that of the parameter.</entry>
    <entry key="InconsistentDefaultReaderDims">Simulink used heuristics to determine signal dimensions for block ''{0}'' due to underspecification. However, the resulting dimensions {1} computed by this block is inconsistent with output signal dimensions {2} computed by the Reader block ''{3}''. Consider specifying dimensions for all input and output signals of block ''{4}'' fully to avoid this problem.</entry>
    <entry key="InconsistentDefaultWriterDims">Simulink used heuristics to determine signal dimensions for block ''{0}'' due to underspecification. However, the resulting state dimensions {1} computed by this block is inconsistent with input signal dimensions {2} computed by the Writer block ''{3}''. Consider specifying dimensions for all input and output signals of block ''{4}'' fully to avoid this problem.</entry>
    <entry key="InconsistentReaderDataType">The {0} data type ''{1}'' computed by block ''{2}'' is inconsistent with the output signal data type ''{3}'' computed by the {0} Reader block ''{4}''.</entry>
    <entry key="InconsistentWriterDataType">The {0} data type ''{1}'' computed by block ''{2}'' is inconsistent with the input signal data type ''{3}'' computed by {0} Writer block ''{4}''.</entry>
    <entry key="InconsistentParameterWriterDataType">The input signal data type of the Parameter Writer block ''{4}'' is {3} whereas the parameter ''{0}'' owned by the block ''{2}'' has data type ''{1}''. Ensure that the data type of the input to the Parameter Writer block is the same as that of the parameter.</entry>
    <entry key="InconsistentParameterWriterToWSVarDims">The input signal dimensions of the Parameter Writer block ''{3}'' is {2} whereas the parameter ''{0}'' in the current model workspace has dimensions ''{1}''. Ensure that the dimensions provided to the Parameter Writer block are the same as that of the parameter.</entry>
    <entry key="InconsistentChartAndOwnerDataType">The state data type ''{0}'' computed by block ''{1}'' is inconsistent with the data type ''{2}'' computed by chart ''{3}''.</entry>
    <entry key="InconsistentDefaultReaderDataType">Simulink used heuristics to determine signal data types for block ''{0}'' due to underspecification. However, the resulting data type ''{1}'' computed by this block is inconsistent with output signal data type ''{2}'' computed by the Reader block ''{3}''. Consider specifying data type for all input and output signals of block ''{4}'' fully to avoid this problem.</entry>
    <entry key="InconsistentDefaultWriterDataType">Simulink used heuristics to determine signal data types for block ''{0}'' due to underspecification. However, the resulting data type ''{1}'' computed by this block is inconsistent with input signal data type ''{2}'' computed by the Writer block ''{3}''. Consider specifying data type for all input and output signals of block ''{4}'' fully to avoid this problem.</entry>
    <entry key="InconsistentReaderComplexSignal1">The {0} signal type ''real'' computed by block ''{1}'' is inconsistent with output signal type ''complex'' computed by the {0} Reader block ''{2}''.</entry>
    <entry key="InconsistentReaderComplexSignal2">The {0} signal type ''complex'' computed by block ''{1}'' is inconsistent with output signal type ''real'' computed by the {0} Reader block ''{2}''.</entry>
    <entry key="InconsistentWriterComplexSignal1">The {0} signal type ''real'' computed by block ''{1}'' is inconsistent with input signal type ''complex'' computed by {0} Writer block ''{2}''.</entry>
    <entry key="InconsistentWriterComplexSignal2">The {0} signal type ''complex'' computed by block ''{1}'' is inconsistent with the input signal type ''real'' computed by the {0} Writer block ''{2}''.</entry>
    <entry key="InconsistentParameterWriterComplexSignal1">The signal type ''real'' of the parameter ''{0}'' owned by the block ''{1}'' is inconsistent with input signal type ''complex'' computed by the Parameter Writer block ''{2}''.</entry>
    <entry key="InconsistentParameterWriterComplexSignal2">The signal type ''complex'' of the parameter ''{0}'' owned by the block ''{1}'' is inconsistent with the input signal type ''real'' computed by the Parameter Writer block ''{2}''.</entry>
    <entry key="InconsistentDefaultReaderComplexSignal1">Simulink used heuristics to determine signal types for block ''{0}'' due to underspecification. However, the resulting signal type ''real'' computed by this block is inconsistent with output signal type ''complex'' computed by the Reader block ''{1}''. Consider specifying signal type for all input and output signals of block ''{2}'' fully to avoid this problem.</entry>
    <entry key="InconsistentDefaultReaderComplexSignal2">Simulink used heuristics to determine signal types for block ''{0}'' due to underspecification. However, the resulting signal type ''complex'' computed by this block is inconsistent with output signal type ''real'' computed by the Reader block ''{1}''. Consider specifying signal type for all input and output signals of block ''{2}'' fully to avoid this problem.</entry>
    <entry key="InconsistentDefaultWriterComplexSignal1">Simulink used heuristics to determine signal types for block ''{0}'' due to underspecification. However, the resulting signal type ''real'' computed by this block is inconsistent with input signal type ''complex'' computed by the Writer block ''{1}''. Consider specifying signal type for all input and output signals of block ''{2}'' fully to avoid this problem.</entry>
    <entry key="InconsistentDefaultWriterComplexSignal2">Simulink used heuristics to determine signal types for block ''{0}'' due to underspecification. However, the resulting signal type ''complex'' computed by this block is inconsistent with input signal type ''real'' computed by the Writer block ''{1}''. Consider specifying signal type for all input and output signals of block ''{2}'' fully to avoid this problem.</entry>
    <entry key="SFcnStateWidthChangeInMdlSetWorkWidths">The width of work vector ''{0}'' in S-Function block ''{1}'' changes from {2,number,integer} in mdlInitializeSizes to {3,number,integer} in mdlSetWorkWidths. Consider removing the call to ssSetDWorkWidth from mdlSetWorkWidths or ensure that ssSetDWorkWidth sets the width to DYNAMICALLY_SIZED in mdlInitializeSizes for this work vector.</entry>
    <entry key="SFcnStateDataTypeChangeInMdlSetWorkWidths">The data type of work vector ''{0}'' in S-Function block ''{1}'' changes from ''{2}'' in mdlInitializeSizes to ''{3}'' in mdlSetWorkWidths. Consider removing the call to ssSetDWorkDataType from mdlSetWorkWidths or ensure that ssSetDWorkDataType sets the data type to DYNAMICALLY_TYPED in mdlInitializeSizes for this work vector.</entry>
    <entry key="SFcnStateComplexSignalChangeInMdlSetWorkWidths1">Signal type of work vector ''{0}'' in S-Function block ''{1}'' changes from ''real'' in mdlInitializeSizes to ''complex'' in mdlSetWorkWidths. Consider removing the call to ssSetDWorkComplexSignal from mdlSetWorkWidths or ensure that ssSetDWorkComplexSignal sets the signal type to DYNAMICALLY_TYPED in mdlInitializeSizes for this work vector.</entry>
    <entry key="SFcnStateComplexSignalChangeInMdlSetWorkWidths2">Signal type of work vector ''{0}'' in S-Function block ''{1}'' changes from ''complex'' in mdlInitializeSizes to ''real'' in mdlSetWorkWidths. Consider removing the call to ssSetDWorkComplexSignal from mdlSetWorkWidths or ensure that ssSetDWorkComplexSignal sets the signal type to DYNAMICALLY_TYPED in mdlInitializeSizes for this work vector.</entry>
    <entry key="InconsistentStateReaderDimsSFcn">Dimensions {0} of the work vector ''{1}'' in S-Function block ''{2}'' is inconsistent with output signal dimensions {3} of State Reader block ''{4}''. Consider moving the call to ssSetDWorkWidth from mdlSetWorkWidths to mdlInitializeSizes for this work vector. Alternatively, ensure that the output port of the State Reader block has matching dimensions, e.g. by using Signal Specification block.</entry>
    <entry key="InconsistentStateReaderDimsSFcnDefault">Simulink used heuristics to determine the dimensions {0} for the work vector ''{1}'' in S-Function block ''{2}''. However, the result is inconsistent with output signal dimensions {3} of State Reader block ''{4}''. Consider using ssSetDWorkWidth in mdlInitializeSizes or mdlSetWorkWidths to specify dimensions for this work vector.</entry>
    <entry key="InconsistentStateWriterDimsSFcnDefault">Simulink used heuristics to determine the dimensions {0} for the work vector ''{1}'' in S-Function block ''{2}''. However, the result is inconsistent with input signal dimensions {3} of State Writer block ''{4}''. Consider using ssSetDWorkWidth in mdlInitializeSizes or mdlSetWorkWidths to specify dimensions for this work vector.</entry>
    <entry key="InconsistentStateReaderDataTypeSFcn">Data type ''{0}'' of the work vector ''{1}'' in S-Function block ''{2}'' is inconsistent with output signal data type ''{3}'' of State Reader block ''{4}''. Consider moving the call to ssSetDWorkDataType from mdlSetWorkWidths to mdlInitializeSizes for this work vector. Alternatively, ensure that the output port of the State Reader block has matching data type, e.g. by using Signal Specification block.</entry>
    <entry key="InconsistentStateWriterDataTypeSFcn">Data type ''{0}'' of the work vector ''{1}'' in S-Function block ''{2}'' is inconsistent with input signal data type ''{3}'' of State Writer block ''{4}''. Consider moving the call to ssSetDWorkDataType from mdlSetWorkWidths to mdlInitializeSizes for this work vector. Alternatively, ensure that the input port of the State Writer block has matching data type, e.g. by using Signal Specification block.</entry>
    <entry key="InconsistentStateReaderDataTypeSFcnDefault">Simulink used heuristics to determine the data type ''{0}'' for the work vector ''{1}'' in S-Function block ''{2}''. However, the result is inconsistent with output signal data type ''{3}'' of State Reader block ''{4}''. Consider using ssSetDWorkDataType in mdlInitializeSizes or mdlSetWorkWidths to specify data type for this work vector.</entry>
    <entry key="InconsistentStateWriterDataTypeSFcnDefault">Simulink used heuristics to determine the data type ''{0}'' for the work vector ''{1}'' in S-Function block ''{2}''. However, the result is inconsistent with input signal data type ''{3}'' of State Writer block ''{4}''. Consider using ssSetDWorkDataType in mdlInitializeSizes or mdlSetWorkWidths to specify data type for this work vector.</entry>
    <entry key="InconsistentStateReaderComplexSignalSFcn1">Signal type ''real'' of the work vector ''{0}'' in S-Function block ''{1}'' is inconsistent with output signal type ''complex'' of State Reader block ''{2}''. Consider moving the call to ssSetDWorkComplexSignal from mdlSetWorkWidths to mdlInitializeSizes for this work vector. Alternatively, ensure that the output port of the State Reader block has matching signal type, e.g. by using Signal Specification block.</entry>
    <entry key="InconsistentStateReaderComplexSignalSFcn2">Signal type ''complex'' of the work vector ''{0}'' in S-Function block ''{1}'' is inconsistent with output signal type ''real'' of State Reader block ''{2}''. Consider moving the call to ssSetDWorkComplexSignal from mdlSetWorkWidths to mdlInitializeSizes for this work vector. Alternatively, ensure that the output port of the State Reader block has matching signal type, e.g. by using Signal Specification block.</entry>
    <entry key="InconsistentStateWriterComplexSignalSFcn1">Signal type ''real'' of the work vector ''{0}'' in S-Function block ''{1}'' is inconsistent with input signal type ''complex'' of State Writer block ''{2}''. Consider moving the call to ssSetDWorkComplexSignal from mdlSetWorkWidths to mdlInitializeSizes for this work vector. Alternatively, ensure that the input port of the State Writer block has matching signal type, e.g. by using Signal Specification block.</entry>
    <entry key="InconsistentStateWriterComplexSignalSFcn2">Signal type ''complex'' of the work vector ''{0}'' in S-Function block ''{1}'' is inconsistent with input signal type ''real'' of State Writer block ''{2}''. Consider moving the call to ssSetDWorkComplexSignal from mdlSetWorkWidths to mdlInitializeSizes for this work vector. Alternatively, ensure that the input port of the State Writer block has matching signal type, e.g. by using Signal Specification block.</entry>
    <entry key="InconsistentStateReaderComplexSignalSFcnDefault1">Simulink used heuristics to determine the signal type ''real'' for the work vector ''{0}'' in S-Function block ''{1}''. However, the result is inconsistent with output signal type ''complex'' of State Reader block ''{2}''. Consider using ssSetDWorkComplexSignal in mdlInitializeSizes or mdlSetWorkWidths to specify the signal type for this work vector.</entry>
    <entry key="InconsistentStateReaderComplexSignalSFcnDefault2">Simulink used heuristics to determine the signal type ''complex'' for the work vector ''{0}'' in S-Function block ''{1}''. However, the result is inconsistent with output signal type ''real'' of State Reader block ''{2}''. Consider using ssSetDWorkComplexSignal in mdlInitializeSizes or mdlSetWorkWidths to specify the signal type for this work vector.</entry>
    <entry key="InconsistentStateWriterComplexSignalSFcnDefault1">Simulink used heuristics to determine the signal type ''real'' for the work vector ''{0}'' in S-Function block ''{1}''. However, the result is inconsistent with input signal type ''complex'' of State Writer block ''{2}''. Consider using ssSetDWorkComplexSignal in mdlInitializeSizes or mdlSetWorkWidths to specify the signal type for this work vector.</entry>
    <entry key="InconsistentStateWriterComplexSignalSFcnDefault2">Simulink used heuristics to determine the signal type ''complex'' for the work vector ''{0}'' in S-Function block ''{1}''. However, the result is inconsistent with input signal type ''real'' of State Writer block ''{2}''. Consider using ssSetDWorkComplexSignal in mdlInitializeSizes or mdlSetWorkWidths to specify the signal type for this work vector.</entry>
    <entry key="SubsysFcnOptionNotSupported">The subsystem ''{0}'' contains a State/Parameter Reader/Writer block but does not contain the corresponding state/parameter owner block, and is inside a For Each subsystem ''{1}''. Also, its parameter ''Code generation function packaging'' is set to ''Reusable function''. Simulink does not support this scenario. Consider changing the parameter ''Code generation function packaging'' of subsystem ''{2}'' to ''Inline'' or ''Auto''.</entry>
    <!-- InvMcosObjectForInitState -->
    <entry key="InvMcosObjectForInitState"><![CDATA[Loading initial states for model ''{0}'' from the MATLAB object specified in <sldiag objui="configset" objparam="InitialState">Initial state</sldiag> is not supported. To specify the initial state, use a non-empty scalar object of type Simulink.op.ModelOperatingPoint or Simulink.SimulationData.Dataset.]]></entry>
    <entry key="SimModeAuto">auto</entry>
    <entry key="SimModeNormal">normal</entry>
    <entry key="SimModeAccelerated">accelerator</entry>
    <entry key="SimModeRapidAccel">rapid-accelerator</entry>
    <entry key="SimModeSIL">software-in-the-loop (sil)</entry>
    <entry key="SimModePIL">processor-in-the-loop (pil)</entry>
    <entry key="SimModeExternal">external</entry>
    <entry key="NormalModeOptimizationAuto">auto</entry>
    <entry key="NormalModeOptimizationInitialization">initialization</entry>
    <entry key="NormalModeOptimizationExecution">execution</entry>
    <entry key="AutoOnOffAuto">auto</entry>
    <entry key="AutoOnOffOn">on</entry>
    <entry key="AutoOnOffOff">off</entry>
    <entry key="ClearAccelCacheNone">None</entry>
    <entry key="ClearAccelCacheMemory">Memory</entry>
    <entry key="ClearAccelCacheAll">All</entry>
    <entry key="SimRollbackUninitialized">uninitialized</entry>
    <entry key="SimRollbackCompliant">compliant</entry>
    <entry key="SimRollbackNonCompliantNeutral">noncompliant-neutral</entry>
    <entry key="SimRollbackNonCompliantFatal">noncompliant-fatal</entry>
    <entry key="RapidAccelSimStatusInactive">inactive</entry>
    <entry key="RapidAccelSimStatusDormant">dormant</entry>
    <entry key="RapidAccelSimStatusStarting">starting</entry>
    <entry key="RapidAccelSimStatusEditing">editing</entry>
    <entry key="RapidAccelSimStatusInitializing">initializing</entry>
    <entry key="RapidAccelSimStatusBuilding">building</entry>
    <entry key="RapidAccelSimStatusUpdating">updating</entry>
    <entry key="RapidAccelSimStatusConnecting">connecting</entry>
    <entry key="RapidAccelSimStatusRunning">running</entry>
    <entry key="RapidAccelSimStatusTerminating">terminating</entry>
    <entry key="RapidAccelMenuSimStatusUnused">unused</entry>
    <entry key="RapidAccelMenuSimStatusReady">ready</entry>
    <entry key="RapidAccelMenuSimStatusActive">active</entry>
    <entry key="RapidAccelMenuSimStatusPassed">passed</entry>
    <entry key="RapidAccelMenuSimStatusFailed">failed</entry>
    <entry key="RapidAccelCmdlSim" translate="false" note="TranslateFalseBatch;">cmdlsim</entry>
    <entry key="RapidAccelMenuSim" translate="false" note="TranslateFalseBatch;">menusim</entry>
    <entry key="RapidAccelCmdlBuildOnly" translate="false" note="TranslateFalseBatch;">buildonly</entry>
    <entry key="IncompleteVarUsageInfo">Variable usage information may be incomplete. Model must be initialized in FastRestart to get complete list of nontunable variables</entry>
    <entry key="NonTunableVarChangedInFastRestart">Variable ''{0}'' was changed but it is used in a nontunable parameter in ''{1}''. The new value will not be used since the model is initialized with Fast Restart. Switch off Fast Restart if you would like to use the new value. </entry>
    <entry key="NonTunableVarChanged">Variable ''{0}'' was changed but it is used in a nontunable parameter in ''{1}''. The new value will not be used in the current simulation. Restart the simulation if you would like to use the new value. </entry>
    <entry key="NonTunableVarChangedMaxWarnings">Additional variables used in nontunable parameters were changed but were not reported to limit the number of warning messages</entry>
    <entry key="WarnModelClose">The model {0} has been closed during compilation or simulation.</entry>
    <entry key="SlFcnFpcUnsupportedVoidPtr">Argument ''{0}'' of the Simulink Function block ''{1}'' is configured with ''void*'' type. AUTOSAR code generation supports this only for Function Caller blocks. For AUTOSAR targets, Function Caller blocks that are mapped to certain non-volatile memory (NvM) operations are automatically configured with the ''void*'' argument type; In that case, the corresponding Simulink Function block can only be defined for simulation.</entry>
    <entry key="SlFcnFpcUnsupportedCaller"> The caller of Simulink Function block ''{0}'' is not supported for code generation. Use at least one Function Caller block to call a Simulink Function block.</entry>
    <entry key="RTWDataTypeHeaderFileIdConflict">Unable to generate code using the type ''{0}'' because the header file specified for the type ''{1}'' conflicts with a file generated by the model.</entry>
    <entry key="ExpFcnRootOutportDrivenByStatePort">The root Outport block ''{0}'' cannot be driven by the state port of block ''{1}'' in an export function model.</entry>
    <entry key="VirtualBusDrivingVirtualRootOutport">The root Outport block ''{0}'' cannot accept virtual bus signal because it must be virtual.</entry>
    <entry key="DiscontigVirtualRootOutport">The root Outport block ''{0}'' must be virtual. Ensure that the connection from the source output port to the Outport block is a straight full port connection without any element reordering or selection.</entry>
    <entry key="NoBranchingToSameVirtualRootOutport"><![CDATA[Invalid connection from block ''{0}'' <sldiag objui="outport" objparam="{1,number,integer}" objname="{0}">output port {1,number,integer}</sldiag> to virtual root Outport block ''{2}''. An output signal cannot be branched and later recombined to drive the same virtual root Outport block.]]></entry>
    <entry key="NoBranchingToTwoVirtualRootOutports"><![CDATA[Invalid connection from block ''{0}'' <sldiag objui="outport" objparam="{1,number,integer}" objname="{0}">output port {1,number,integer}</sldiag> to root Outport blocks ''{2}'' and ''{3}''. An output signal cannot be branched to multiple virtual root Outport blocks.]]></entry>
    <entry key="BufferRequiredOnInitResetTermOutport">The Outport block ''{0}'' must be virtual because its source signal originates inside an Initialize, Terminate, Reinitialize or Reset Function block. However, Simulink determined that a signal buffer is required at some point along this connection path. Ensure that the connection from the source output port to the Outport block is a straight full port connection without any element reordering or selection.</entry>
    <entry key="BufferRequiredOnVirtualOutport">The Outport block ''{0}'' must be virtual. However, Simulink determined that a signal buffer is required at some point along the path from the source output port. Ensure that the connection from the source output port to the Outport block is a straight full port connection without any element reordering or selection.</entry>
    <entry key="NonEmptyICOnInitResetTermParentOutport">The Outport block ''{0}'' cannot have an initial output value because its source signal originates an Initialize, Terminate, Reinitialize or Reset Function block. To correct this problem, set the parameter ''{1}'' of the Outport block to ''on''. Alternatively, set the parameter ''Initial output'' of the Outport block to empty matrix ([]).</entry>
    <entry key="VirtualOutportCodeGenErrorDueToDataConnector">The Outport block ''{0}'' has the parameter ''{1}'' turned on but Simulink cannot guarantee that the outport will be virtual in generated code due to the following reasons. One of the ways to correct this issue is to set the parameter ''{1}'' to ''off''. </entry>
    <entry key="InitTermResetCodeGenErrorDueToDataConnector">The Outport block ''{0}'' needs to be virtual in generated code because it is driven by an Initialize, Reinitialize, Reset or Terminate Function block. However, Simulink is unable to honor this condition due to the following reasons.</entry>
    <entry key="OutportNeedsToBeVirtualForUnionRate">The Outport block ''{0}'' needs to be virtual in generated code because it is driven by a Simulink function call subsystem under union of rates. However, Simulink is unable to honor this condition due to the following reasons.</entry>
    <entry key="ReusableSSDrivingRootOutportWithEnsureVirtualSpec">The Outport block ''{0}'' is driven by subsystem ''{1}'' that has been configured to generate a reusable function.  To correct this problem, set the parameter ''Function packaging'' of the subsystem to ''Inline'' or ''Nonreusable function''.</entry>
    <entry key="NoDataConnectorRootOutportWithEnsureVirtualSpec">Unable to ensure that the root Outport block ''{0}'' is virtual in the generated code. To correct this problem, set the  parameter ''{1}'' of the Outport block to ''off''.</entry>
    <entry key="DifferentWidthsRootOutportWithEnsureVirtualSpec">The root Outport block ''{0}'' and its source block ''{1}'' have different widths. To correct this problem, ensure that both the Outport block ''{0}'' and its source have the same widths.
    </entry>
    <entry key="VarDimsRootOutportEnsureVirtualSpec">The input of the root Outport block ''{0}'' is of variable dimensions (or contains elements that are of variable dimensions).
    </entry>
    <entry key="SourceWithConstSampleTimeRootOutportWithEnsureVirtualSpec">Since the source block ''{1}'' of the root Outport block ''{0}'' has a constant sample-time, Simulink cannot ensure the root Outport block is virtual. To correct this problem, ensure that the source block ''{1}'' uses a sample-time that is not constant.
    </entry>
    <entry key="VirtualOutportDueToSpecification"><![CDATA[The Outport block ''{0}'' must be virtual because it has the parameter ''{1}'' set to ''on''.
    <actions exclusiveFixIts="yes">
    <action type="fixit">
    <cmd>set_param(''{0}'',''EnsureOutportIsVirtual'',''off'')</cmd>
    <txt>To switch to ''copy'' semantic (and possibly get a different answer),  set parameter ''{1}'' for block ''{0}'' to ''off''</txt>
    </action>
    </actions>]]>
    </entry>
    <entry key="VirtualOutportDueToIRT">The Outport block ''{0}'' must be virtual because its source signal originates from an Initialize, Terminate, Reinitialize or Reset Function block.</entry>
    <entry key="VirtualOutportDueToExpFcn">The root Outport block ''{0}'' in an export function model must be virtual due to one of the following reasons:\n
    (1) It is driven by a Merge block.\n
    (2) It is driven by a Mux block.\n
    (3) It is driven by an Outport block with parameter ''{1}'' set to ''on''.\n
    (4) It is driven by an output port of a Model block that is referencing another export function model and the corresponding root outport in the referenced model would have been required to be virtual by any of the above reasons.</entry>
    <entry key="NoDataConnectorVirtualRootOutport">The root Outport block ''{0}'' must be virtual. However, this condition cannot be guaranteed in the generated code. Please contact MathWorks for assistance with this error message</entry>
    <entry key="InitResetTermNeedSimplifiedInitMode"><![CDATA[The Initialize, Reinitialize, Reset, or Terminate Function block ''{0}'' requires simplified initialization mode for model ''{1}''. For more information, see <a href="matlab:helpview([docroot '/simulink/ug/simplified-initialization-mode.html'])">Simplified initialization mode</a>.
    <actions exclusiveFixIts="yes">
    <action type="fixit">
    <cmd>configset.internal.fixIt(''{1}'',''UnderspecifiedInitializationDetection'',''Simplified'')</cmd>
    <txt>Set the parameter <sldiag objui="configset" objparam="UnderspecifiedInitializationDetection">"Underspecified initialization detection"</sldiag> in the Diagnostics page of the Configuration Parameters dialog to ''Simplified''.</txt>
    </action>
    </actions>]]>
    </entry>
    <entry key="SimulinkStateNeedSimplifiedInitMode"><![CDATA[The Simulink state ''{0}'' requires simplified initialization mode for model ''{1}''. For more information, see <a href="matlab:helpview([docroot '/simulink/ug/simplified-initialization-mode.html'])">Simplified initialization mode</a>.
    <actions exclusiveFixIts="yes">
    <action type="fixit">
    <cmd>configset.internal.fixIt(''{1}'',''UnderspecifiedInitializationDetection'',''Simplified'')</cmd>
    <txt>Set the parameter <sldiag objui="configset" objparam="UnderspecifiedInitializationDetection">"Underspecified initialization detection"</sldiag> in the Diagnostics page of the Configuration Parameters dialog to ''Simplified''.</txt>
    </action>
    </actions>]]>
    </entry>
    <entry key="OutportStateAccessNeedSimplifiedInitMode"><![CDATA[The model ''{0}'' must use simplified initialization mode in order to support read/write for Outport block ''{1}''. For more information, see <a href="matlab:helpview([docroot '/simulink/ug/simplified-initialization-mode.html'])">Simplified initialization mode</a>.
    <actions exclusiveFixIts="yes">
    <action type="fixit">
    <cmd>configset.internal.fixIt(''{0}'',''UnderspecifiedInitializationDetection'',''Simplified'')</cmd>
    <txt>Set the parameter <sldiag objui="configset" objparam="UnderspecifiedInitializationDetection">"Underspecified initialization detection"</sldiag> in the Diagnostics page of the Configuration Parameters dialog to ''Simplified''.</txt>
    </action>
    </actions>]]>
    </entry>
    <entry key="InvalidVariableSizeSignalForRootOutport"> Outport block ''{0}'' has a signal object with non-auto storage class. But it is driven by a variable size signal. Currently a variable size signal is not allowed in such a case. </entry>
    <entry key="UnableToUpdateModel"> Unable to update model ''{0}''. </entry>
    <entry key="AlgConstBlockMultipleConfigs">{0,number,integer} Algebraic Constraint blocks in the same algebraic loop do not all specify consistent solver and tolerance values.</entry>
    <entry key="AlgConstBlockInAlgLoopInfo" translate="false" note="TranslateFalseBatch;"> ''{0}'' ({1,number,integer})</entry>
    <!-- FMU Block -->
    <entry key="FMUModeDisallowedSS">''{0}'' is an FMU block with {1} mode. An FMU block with {1} mode is not allowed inside the {2} subsystem ''{3}''.</entry>
    <entry key="FMUModeDisallowedSSState">''{0}'' is an FMU block with {1} mode. An FMU block with {1} mode is not allowed inside the {2} subsystem ''{3}'' with states ''{4}''.</entry>
    <entry key="FMUModeIsNotRecognized">FMU mode ''{0}'' is not recognized for ''{1}'' block.</entry>
    <entry key="SameNamedModelSourceAndDataFile">The model is trying to generate the source file ''{0}'' and the data file ''{0}'' with the same name. Please change the source file name/data file name setting or change the file packaging format to "Compact".</entry>
    <!-- Multi Thread -->
    <entry key="BlockMultiThreadCoSimThreadSafeWarning">The S-function associated with ''{0}'' block will be forced to run as run-time thread-safe even though the S-function has not been declared as run-time thread-safe. To avoid the warning, declare the S-function as run-time thread-safe with ''ssSetRuntimeThreadSafetyCompliance(S, RUNTIME_THREAD_SAFETY_COMPLIANCE_TRUE)''.</entry>
    <entry key="BlockMultiThreadCoSimThreadSafeError">The S-function associated with ''{0}'' block will not be forced to run as run-time thread-safe because the S-function has been declared as not run-time thread-safe. To set the S-function as run-time thread-safe, use ''ssSetRuntimeThreadSafetyCompliance(S, RUNTIME_THREAD_SAFETY_COMPLIANCE_TRUE)''.</entry>
    <entry key="MTCSGlobalErrorStatus">One or more multithreaded blocks uses "ssSetErrorStatus", which may report errors inaccurately. For more accurate error reporting, use "ssSetLocalErrorStatus" instead.</entry>
    <entry key="MTCSBlocker_Accel">Multithreading is supported for Model blocks in accelerator mode. Set Model block to accelerator mode.</entry>
    <entry key="MTCSBlocker_BlkSetting">The block property ''MultithreadedSim'' is off. To enable the block setting, use set_param(blockName, ''MultithreadedSim'', ''auto'').</entry>
    <entry key="MTCSBlocker_CompChk">Multithreading is not enabled when the S-function analyzer is on. Try multithreading in normal mode.</entry>
    <entry key="MTCSBlocker_ConstBlock">Multithreading is not activated for blocks with constant sample time.</entry>
    <entry key="MTCSBlocker_ContStChk">Multithreading is not enabled when S-function has continuous states and solver is fixed-step, which together trigger continuous states consistency check. To disable continuous states consistency check, use ''ssSetSkipContStatesConsistencyCheck'' function.</entry>
    <entry key="MTCSBlocker_ContTS"><![CDATA[Multithreading is not enabled when S-function has continuous sample time. Consider using a different <a href="matlab:helpview([docroot ''/simulink/helptargets.map''],''specifying_sample_time'')">"sample time setting"</a>.]]></entry>
    <entry key="MTCSBlocker_Coverage">Coverage (for internal use).</entry>
    <entry key="MTCSBlocker_Debugger">Multithreading is not enabled when Simulink debugger is on. Turn off Simulink debugger.</entry>
    <entry key="MTCSBlocker_MRToFile"><![CDATA[Multithreading is not enabled when model contains a To File block. Consider using another method to <a href="matlab:helpview([docroot ''/simulink/helptargets.map''],''data_logging_summary'')">"export simulation data"</a>.]]></entry>
    <entry key="MTCSBlocker_MRFromFile">Multithreading is not enabled when model contains a From File block. Consider feeding data into the referenced model via an inport from the top-level model.</entry>
    <entry key="MTCSBlocker_MRDSM">Multithreading is not enabled when model uses global data store.</entry>
    <entry key="MTCSBlocker_MRConstant">Multithreading is not enabled when model has constant sample time.</entry>
    <entry key="MTCSBlocker_MRRuntimeDiag">Multithreading is not enabled when the referenced model contains a block that issues runtime diagnostics.</entry>
    <entry key="MTCSBlocker_MRCoverage">Coverage (for internal use).</entry>
    <entry key="MTCSBlocker_MRSLFunc">Multithreading is not enabled when model contains a Simulink Function block.</entry>
    <entry key="MTCSBlocker_DebugLog">Multithreading is not enabled when FMU block debug logging is enabled. To disable FMU block debug logging, use set_param(blockName, ''FMUDebugLogging'', ''off'').</entry>
    <entry key="MTCSBlocker_CrossplatformSim">Multithreading is not enabled when FMU block is running cross-platform simulation.</entry>
    <entry key="MTCSBlocker_DynProf"><![CDATA[Computational cost does not justify the overhead cost of multithreading {0} methods. See <a href="matlab:helpview([docroot ''/simulink/helptargets.map''],''comp_based_model_guidelines'')">"guidelines for component-based modeling"</a>.]]></entry>
    <entry key="MTCSBlocker_DynProfNotFinished">Simulation did not have enough number of steps to measure the dynamic performance of {0} methods. Try running the simulation longer.</entry>
    <entry key="MTCSBlocker_EventPort">Multithreading is not enabled when a Model block has event ports.</entry>
    <entry key="MTCSBlocker_ExcFree"><![CDATA[Multithreading requires S-function to declare exception-free option. For more information, see <a href="matlab:helpview([docroot ''/simulink/helptargets.map''],''guidelines_for_threadsafe_sfunctions'')">"Guidelines for Writing Thread-Safe S-Functions"</a>.]]></entry>
    <entry key="MTCSBlocker_FMUME">Multithreading is enabled only for co-simulation mode. Consider using a Model Exchange FMU instead of a Co-Simulation FMU.</entry>
    <entry key="MTCSBlocker_ForEachSS">Multithreading is not enabled when a Model block is in a For Each Subsystem. Consider moving the Model block out of the For Each Subsystem.</entry>
    <entry key="MTCSBlocker_Graph">The block depends on another block that cannot be multithreaded. Consider breaking the dependency, e.g., using a Unit Delay block.</entry>
    <entry key="MTCSBlocker_TOPO_Source_Node_RTTS_YES_BUT_DF">The start block cannot have direct feedthrough inputs.</entry>
    <entry key="MTCSBlocker_MdlSetting">Model setting for multithreading is turned off. To enable multithreading for the model, use  set_param(modelName, ''MultithreadedSim'', ''auto'').</entry>
    <entry key="MTCSBlocker_Multirate">Multithreading is supported for single-rate blocks. Convert multirate block to single-rate blocks to enable multithreading.</entry>
    <entry key="MTCSBlocker_NoBlock">There are no blocks that qualify for multithreading. Try to satisfy multithreading conditions for existing blocks or add new blocks.</entry>
    <entry key="MTCSBlocker_NoOutput">Multithreading concurrently runs output and update methods. The block does not have an output method.</entry>
    <entry key="MTCSBlocker_NotDefault">Not default block case (for internal use).</entry>
    <entry key="MTCSBlocker_NoUpdate">Multithreading concurrently runs output and update methods. The block does not have an update method.</entry>
    <entry key="MTCSBlocker_OOP">Multithreading is not supported when FMU is running out-of-process. To disable this setting, use set_param(blockName, ''DebugExecutionForFMUViaOutOfProcess'', ''off'').</entry>
    <entry key="MTCSBlocker_RTAPI">S-function runtime model API support off (for internal use).</entry>
    <entry key="MTCSBlocker_RTThrSafe"><![CDATA[Multithreading requires S-function to set runtime thread-safety compliance option to true. For more information, see <a href="matlab:helpview([docroot ''/simulink/helptargets.map''],''guidelines_for_threadsafe_sfunctions'')">"Guidelines for Writing Thread-Safe S-Functions"</a>.]]></entry>
    <entry key="MTCSBlocker_RTThrSafeFCGen">Multithreading is not enabled for Function-Call Generator block.</entry>
    <entry key="MTCSBlocker_SimMode">Multithreading is supported only for normal simulation mode.</entry>
    <entry key="MTCSBlocker_VarTS"><![CDATA[Multithreading doesn't support variable sample time. See <a href="matlab:helpview([docroot ''/simulink/helptargets.map''],''specifying_sample_time'')">"sample time setting"</a>.]]></entry>
    <entry key="MTCSBlockerBlockOutputIn">Participating parallel output method execution</entry>
    <entry key="MTCSBlockerBlockUpdateIn">Participating parallel update method execution</entry>
    <entry key="MTCSBlockerBlockOut">Not participating parallel execution</entry>
    <entry key="MTCSBlockerBlockName">MTCS block: ''{0}''</entry>
    <entry key="MTCSBlockerBlockType">Block type: {0}</entry>
    <entry key="MTCSBlockerBlockUnknown">Unknown blockers</entry>
    <entry key="MTCSBlockerBlockCommon">Common blockers</entry>
    <entry key="MTCSBlockerBlockOutput">Output method specific blockers</entry>
    <entry key="MTCSBlockerBlockUpdate">Update method specific blockers</entry>
    <entry key="MTCSBlockerModelName">Model: ''{0}''</entry>
    <entry key="MTCSBlockerModelIn">Participating parallel execution</entry>
    <entry key="MTCSBlockerModelOut">Not participating parallel execution</entry>
    <entry key="MTCSBlockerModelUnknown">Unknown blockers</entry>
    <entry key="MTCSBlockerModelAll">Blockers</entry>
    <entry key="MTCSBlockerHeader">Multithreaded Simulation Blockers Start</entry>
    <entry key="MTCSBlockerFooter">Multithreaded Simulation Blockers End</entry>
    <!-- SL String -->
    <entry key="TruncateWrittenStringParam"> Parameter ''{0}'' of block ''{1}'' requires a buffer size of ''{2, number, integer}'' bytes to store all characters and a null terminator at the end. This required buffer size exceeds the buffer size of the dynamic string specified by the configuration parameter "Buffer size of dynamically-sized string". For generated code, the block truncates the parameter value to fit the buffer of ''{3, number, integer}'' bytes. To avoid truncation, consider increasing the string buffer size.</entry>
    <entry key="TruncateWrittenStringOutput"><![CDATA[ Initial value of <sldiag objui="outport" objparam="{0, number, integer}" objname="{1}">output port {0, number, integer}</sldiag> of block ''{1}'' requires a buffer size of ''{2, number, integer}'' bytes to store all characters and a null terminator at the end. This required buffer size exceeds the buffer size of the dynamic string specified by the configuration parameter "Buffer size of dynamically-sized string". For generated code, the block truncates the initial value to fit the buffer of ''{3, number, integer}'' bytes. To avoid truncation, consider increasing the string buffer size.]]></entry>
    <entry key="CrossModelModification">It is incorrect to modify the model ''{0}'' from the InitFcn callback of a different model.</entry>
    <entry key="ErrCreateBlockDiagramThroughMCOS">It is incorrect to create Block Diagram through MCOS directly.</entry>
    <entry key="SolverProfileLevelInvalidName">Invalid field name ''{0}'' for solver profiler logging level setting.</entry>
    <entry key="SolverProfileLevelMustBeStruct">Parameter SolverProfileInfoLevel must be a MATLAB struct.</entry>
    <entry key="ErrCallDeleteOnObject">This object does not support delete operation.</entry>
    <entry key="ErrGetUDIWithFeatureON">get_udi should not be called when UDDToMCOS feature ON.</entry>
    <entry key="ArchitectureExportToPreviousNotSupported">Exporting Architecture models to Simulink version R2019a or earlier is not supported.</entry>
    <entry key="NotAcyclicGraph">This underlying graph is not an acyclic graph.</entry>
    <entry key="InvalidSubsysDiffPross">Invalid subsystem diff process. Exactly two subsystems should be marked for checksum diff.</entry>       
    <entry key="BusElementEmptySLValueType">Bus element ''{0}'' of bus object ''{1}'' specifies an empty ValueType. </entry>
    <entry key="BusElementCannotFindSLValueType">Unable to find 'ValueType' ''{0}'' specified for bus element ''{1}'' of bus object ''{2}''. </entry>
    <entry key="BlockCannotFindSLValueType">Unable to find 'Simulink.ValueType' ''{0}'' specified for block ''{1}''. </entry>
    <entry key="SimulinkTypeCannotBeEmpty">Simulink.ValueType ''{0}'' specified for block ''{1}'' must provide values for properties. </entry>
    <entry key="SlDataObjectEmptySLValueType">Simulink data object ''{0}'' specifies an empty value type. </entry>
    <entry key="SlDataObjectCannotFindSLValueType">Unable to find value type ''{0}'' specified for Simulink data object ''{1}''. </entry>
    <entry key="SlParameterValueMismatchValueTypeDataType">Value type ''{0}'' specifies a bus object, but the numeric value of ''Value'' for Simulink.Parameter object ''{1}'' is not a structure. Data types must match.</entry>
    <entry key="SlParameterValueMismatchValueTypeDataTypeEnum">''Value'' property of Simulink.Parameter object ''{0}'' specifies a value with enumerated data type ''{1}'', but the ''DataType'' property specifies Simulink.ValueType object ''{2}'' with data type ''{3}''. Data types must match.</entry>
    <entry key="SlParameterValueMismatchValueTypeDimensions">Dimensions must match between value type ''{0}'' and the numeric value of ''Value'' for Simulink.Parameter object ''{1}''.</entry>
    <entry key="SlParameterValueMismatchValueTypeComplexity">Complexity must match between value type ''{0}'' and the numeric value of ''Value'' for Simulink.Parameter object ''{1}''.</entry>    
    <entry key="ModelNotLoaded">No model loaded.</entry>    
    <entry key="SymbolicDimsWithVariableDimsUnsupportedCause"><![CDATA[<sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">output port {0,number,integer}</sldiag> of block ''{1}'']]></entry>
    <entry key="SymbolicDimsWithVariableDimsUnsupported">Symbolic dimensions are only supported for fixed-size signals. Update the following block ports to use either symbolic dimensions or variable-size signals, but not both:</entry>
    <entry key="InvalidBlockIOBufferSizeCause"><![CDATA[<sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">output port {0,number,integer}</sldiag> of block ''{1}'']]></entry>
    <entry key="InvalidBlockIOBufferSize">Simulink supports individual block I/O signal sizes up to {0,number,integer} bytes. The signal sizes are calculated based on data type size, number of elements and signal complexity. The following block ports exceed this limit:</entry>
    <entry key="HeaderGuardPrefixInvalidStr">Invalid custom header guard prefix. Only string literals with no space are allowed.</entry>
    <entry key="HalideFolderInvalidAccess">Do not have access to folder.</entry>
    <entry key="PromptForChange">Change</entry>
    <entry key="PromptForIgnore">Ignore</entry>
    <entry key="PromptForAlwaysIgnore">Always ignore</entry>
    <entry key="PointerBusNameNotFound">The pointer bus name ''{0}'' specifies a bus object, but such bus object can not be found in any workspace or data dictionary.</entry>
    <entry key="EditTimeDashBoardOpenTip">View Modeling Guidance</entry>
    <entry key="EditTimeDashBoardNoIssuesTip">No issues found in model</entry>
    <entry key="EditTimeDashBoardIssuesFoundTip">Modeling issues detected. Click to view.</entry>
    <entry key="OpaqueEnumFeatureConflict">You must disable the tunable enumerated type feature in order to change any of the following features from their default value: RangeAnalysisForEnums, ShrinkCfgSwitchPruning, or PreserveEnumsWithDuplicateValues. Contact MathWorks Technical Support</entry>
    <entry key="OpaqueEnumFeatureConflict2">The following features will be removed in a future release: RangeAnalysisForEnums, ShrinkCfgSwitchPruning, or PreserveEnumsWithDuplicateValues. Use tunable enumerated types instead.</entry>
    <entry key="BlockNotAvailable">Block ''{0}'' has been removed from simulation and hence the linearization point marked at its output is no longer available.</entry>
  </message>
</rsccat>
<!--
    LocalWords:  xml UTF CDATA sle Acc uncheck preactivation ashow DTYPE PWork mdx DAE alg Dep MDF
    LocalWords:  DSTATES RWORK IWORK PWORK datatypes testpoint Jc nonvirtual Tmp editedlinkstool
    LocalWords:  Sgnl UDI uploadable dworks extmode Intrf matfile Inp subsys slx Multithreading
    LocalWords:  DF directfeed HMI slfeature suboption DSTATE TRIGSS unapplied multithreading MTCS
    LocalWords:  SCD scrollbar Ds linearizing Metadata grt uncompiled th SIL IOs daessc supportnon
    LocalWords:  TIMESPAN DWork Dlg overwritable discontiguous PLC datatype DFS DVect DVector encap
    LocalWords:  reusability bitfields UDD AUTOSAR Bitsets bitsets Prms RTWCPP wfcn proto ctl upd
    LocalWords:  aliasedthrough tunabilities sfundemo superset WKS resave slvr rtwcgcpp oden
    LocalWords:  Zcs hmin Demuxes sfunction unselecting Nonreused nonreused FPC Jacobian'and ccf
    LocalWords:  TFL UI pri modelname nondiscrete noncustom Unbuffer TIMESOURCE underspecified IRV
    LocalWords:  demultiplexed runable BASERATE ZCs Zc FCNCALL subsystem's sil underspecification
    LocalWords:  Visulization Nonreusable RSim rtp pil cmdlsim menusim
    LocalWords:  buildonly Nv Inplace nontunable variantfixes Localizable ui
    LocalWords:  localizable solverprofiler FMU CStates RTB CFunction fxptui
    LocalWords:  quickstart simulinkcoder slfpc RCSC multithreaded TCP rsim
    LocalWords:  SILPIL
-->
