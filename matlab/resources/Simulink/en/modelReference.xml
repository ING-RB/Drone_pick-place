<?xml version="1.0" encoding="UTF-8" ?>
<!-- Copyright 2009-2024 The MathWorks, Inc. -->
<rsccat version="1.0" locale="en_US" product="Simulink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../../schema/msgcat.xsd">
  <message>
    <!-- These slMdlref_* messages are used in private/get_ordered_model_references.m, the keys are constructed in M -->
    <entry key="slMdlRef_accelerator">accelerator</entry>
    <entry key="slMdlRef_rapid_accelerator">rapid accelerator</entry>
    <entry key="slMdlRef_software_in_the_loop">software-in-the-loop</entry>
    <entry key="slMdlRef_processor_in_the_loop">processor-in-the-loop</entry>
    
    <entry key="slMdlRefIncompatibleSimModes"><![CDATA[Incompatible simulation
    modes. Model ''{0}'' is running in {1} mode and references model ''{2}'' in
    {3} mode. You must change one of the conflicting simulation modes. For more
    details, see the documentation on <a href="matlab:helpview([docroot,
    ''/toolbox/simulink/ug/simulink_ug.map''],
    ''ModelRefMixingSimulationModes'');">mixing simulation modes</a>.]]></entry>
    
    <entry key="topLevelFunctionCallInvalidName">The function call input
    associated with inport ''{0}'' has been configured use the name ''{1}'' as
    the method name during code generation, which is not a valid identifier.
    Change the name of the signal associated with this inport or the name of the
    inport so that it is a valid identifier name.</entry>

    <entry key="slSSDeleteContentsInvalidNumInputs"> Incorrect usage of
    Simulink.SubSystem.deleteContents. This function expects one input.</entry>
    <entry key="slSSDeleteContentsInvalidInput"> Incorrect usage of Simulink.SubSystem.deleteContents. The input must be a subsystem name or handle.</entry>
    <entry key="slBadSimStatus"> Simulation status of block diagram ''{0}'' is ''{1}''. This indicates that the block diagram is being run. Please stop the simulation and rerun the command.</entry>
    <entry key="slBDDeleteContentsInvalidNumInputs"> Incorrect usage of Simulink.BlockDiagram.deleteContents. This function expects one input.</entry>
    <entry key="slBDDeleteContentsInvalidInput"> Incorrect usage of Simulink.BlockDiagram.deleteContents. The input must be a block diagram name or handle.</entry>
    <entry key="slBDCopyContentsToSSInvalidNumInputs"> Incorrect usage of Simulink.BlockDiagram.copyContentsToSubSystem. This function expects two inputs.</entry>
    <entry key="slBDCopyContentsToSSIn1Invalid"> First argument must be a block diagram name or handle.</entry>
    <entry key="slBDCopyContentsToSSIn2Invalid"> Second argument must be a subsystem name or handle.</entry>
    <entry key="slBDCopyContentsToSSInvalidInputs"> Incorrect usage of Simulink.BlockDiagram.copyContentsToSubSystem. The Subsystem block cannot be part of the input block diagram.</entry>
    <entry key="slSSCopyContentsToBDInvalidNumInputs">Incorrect usage of Simulink.SubSystem.copyContentsToBlockDiagram. This function expects two inputs.</entry>
    <entry key="slSSCopyContentsToBDIn1Invalid"> First argument must be a subsystem name or handle.</entry>
    <entry key="slSSCopyContentsToBDIn2Invalid"> Second argument must be a block diagram name or handle.</entry>
    
    <entry key="slss2mdlUnsupportedDataType">Data type ''{0}'' is not supported.</entry>
    <entry key="modelNotFound">Model ''{0}'' not found.</entry>
    <entry key="buildingModelReferenceTarget">Building model reference target</entry>
    <entry key="ModelNotFoundWithBlockName">Unable to find model ''{0}'' referenced by ''{1}''.</entry>

    <entry key="MultiInstanceTargetBuildFailed">Failed to build a multi-instanced target. Modifying the model to allow only one instance and rebuilding the target.</entry>

    <entry key="successfullyConvertedSubsystem">Successfully converted Subsystem block to Model block.</entry>
    <entry key="compareComponentsIncorrectNumberOfArguments">There must be two arguments to this function.</entry>
    <entry key="findMdlrefsUsage">Usage:  find_mdlrefs(ModelName, [true/false]) or find_mdlrefs(ModelName, ''Param1'', Val1, ...).</entry>
    <entry key="findMdlrefsFirstArgModel">First argument must be a model name, Model block path, or Subsystem block path.</entry>
    <entry key="findMdlrefsSecondArgTrueFalse">When two inputs are given, the second input must be true or false.</entry>
    <entry key="findMdlrefsInvalidNumberOfOutputs">Invalid number of output arguments.</entry>
    <entry key="findMdlrefsInvalidModel">Invalid model name ''{0}'' specified by 
        Model block ''{1}''. The model name must be a valid MATLAB identifier.</entry>
    <entry key="detectedModelReferenceLoop">Detected model reference loop ''{0}''</entry>
    <entry key="findMdlrefsMissingModel">Unable to find referenced model ''{0}'' 
        specified by Model block ''{1}''. The referenced model must be on the MATLAB path.</entry>
    <entry key="findMdlrefsInvalidModelArguments">"InvalidModelNames" value must be "error", "warning", or "ignore".</entry>

    <entry key="unableToFindMdlFile">Unable to find the model file ''{0}'' for the model ''{1}''.</entry>
    <entry key="referencedModelNeverSavedSIM">Unable to update the model reference simulation target of model ''{0}'' because it is not referenced in Normal mode and has never been saved.  Please reference this model in Normal mode or save the model.</entry>
    <entry key="referencedModelNeverSavedCoder">Unable to update the model reference code generation target of model ''{0}'' because it is not referenced in Normal mode and has never been saved.  Please reference this model in Normal mode or save the model.</entry>
    <entry key="unableToLoadBdBecauseOfCase">Could not load model ''{0}'' with an exact (case-sensitive) match.  However, model ''{1}'' that differs only in case was found.  The specified Model name on the Model block must be an exact (case-sensitive) match with the referenced model name. There should not be any open model or any model on the MATLAB path with case-insensitive match. Please either specify the correct referenced model name on the Model block, or close any open model with case-insensitive match and remove it from the MATLAB path.</entry>
    <entry key="duplicatedMdlRefsName">Invalid referenced model names. Unable to reference multiple models that only differ in case. One invalid pair of referenced models names is: ''{0}'' and ''{1}''.</entry>

    <entry key="deletedModelBlockDuringCompile">Model block ''{0}'' was deleted during model compilation. In callbacks and MATLAB scripts, remove calls to delete_block that delete a Model block.</entry>
    
    <entry key="ModelRefGraphAnalyzerInvalidGraphObject" translate="false">The value must be a Simulink.ModelReference.internal.ModelRefGraph object.</entry>
    <entry key="ModelRefGraphAnalyzerInvalidSimModeChoice" translate="false">The value must be either ''OnlyNormal'', ''OnlyAccel'', ''AnyNormal'', ''AnyAccel'', or ''All''.</entry>
    <entry key="ModelRefGraphAnalyzerInvalidResultView" translate="false">The value must be either ''File'' or ''Instance''.</entry>
    
    <entry key="nameValuePairNeedsLogicalValue">The value of parameter {0} must be a logical.</entry>
    <entry key="nameValuePairNeedsStringValue" note="stringDatatypeUpdate">The value of parameter {0} must be a character vector.</entry>
    <entry key="nameValuePairNeedsFunctionValue">The value of parameter {0} must be a function handle.</entry>
    <entry key="nameValuePairNeedsCellArrayOfStringsValue" note="stringDatatypeUpdate">The value of parameter {0} must be a cell array of character vectors.</entry>
    <entry key="nameValuePairNeedsCellArray">The value of parameter {0} must be a cell array.</entry>
    <entry key="nameValuePairNeedsStringForName" note="stringDatatypeUpdate">Input number {0,number,integer} is expected to be the name of a name/value pair but is not a character vector.  Names of name/value pairs are required to be character vectors.  </entry>
    <entry key="nameValuePairUnknownParameter">Unrecognized argument name ''{0}''.</entry>
    <entry key="nameValuePairDuplicate"> ''{0}'' must be used only once.</entry>
    
    <entry key="InstSpecParamMismatchesForSimulation"><![CDATA[
      <message>
        Parameters for Model block ''{1}'' are out of date. Simulation ignores out-of-date parameters. To save affected models to have up-to-date parameters, select Fix.
      </message>
      <actions exclusiveFixIts="no">
        <action type="fixit">
          <cmd>Simulink.ModelReference.internal.InstSpecParamResaveModels(''{0}'')</cmd>
          <txt>Parameters for Model block ''{1}'' are out of date. Simulation ignores out-of-date parameters. To save affected models to have up-to-date parameters, select Fix.</txt>
        </action>
      </actions>
      ]]>
    </entry>

    <entry key="InstSpecParamMismatchesForModelProtection"><![CDATA[
      <message>
        Parameters for Model block ''{1}'' are out of date. To protect the model, parameters must be up to date. To save affected models to have up-to-date parameters, select Fix.
      </message>
      <actions exclusiveFixIts="no">
        <action type="fixit">
          <cmd>Simulink.ModelReference.internal.InstSpecParamResaveModels(''{0}'')</cmd>
          <txt>Parameters for Model block ''{1}'' are out of date. To protect the model, parameters must be up to date. To save affected models to have up-to-date parameters, select Fix.</txt>
        </action>
      </actions>
      ]]>
    </entry>
        
    <entry key="InstSpecParamMismatchResavingModel">Resaving model ''{0}''.</entry>

    <entry key="TunableParameterCannotBeChangedToNonTunable">The parameter
    ''{0}'' was declared by referenced model ''{1}'' as being tunable.  The
    current definition of the parameter declares it to be nontunable.  This is
    not supported.  Change the parameter so that it is declared to be
    tunable.</entry>

    <entry key="browseMdlRefsName">Select a model</entry>

    <entry key="selectedFileInvalidModel">Invalid file ''{0}'' specified. Specify a model file.</entry>

    <entry key="selectedMdlNotOnPathQString">Referenced model ''{0}'' must be on the MATLAB path.</entry>

    <entry key="selectedMdlNotOnPathAddCurrentSession">Add to path</entry>

    <entry key="selectedMdlNotOnPathDoNotAdd">Do not add to path</entry>

    <entry key="selectedMdlNotOnPathCancel">Cancel</entry>

    <entry key="selectedMdlExistsOnPathQString">Selected model ''{0}'' has same
    name as another model(s) on the path. Multiple models with the same name on
    the MATLAB path may cause unexpected behavior. Please make the appropriate
    choice. Note that "Add path" adds the path for the current MATLAB session
    only.</entry>
    
    <entry key="selectedMdlPathIssueTitle">Resolve path issue with selected model</entry>

    <entry key="selectedModelHasLowerPrecedence">Selected model ''''{0}'''' with
    full path ''''{1}'''' has lower precedence than model ''''{2}'''' with full
    path ''''{3}''''. This operation is not allowed because the selected model
    will not get used.</entry>
    
    <entry key="selectedModelHasLowerPrecedenceDirty">Selected model ''''{0}''''
    with full path ''''{1}'''' has lower precedence than an unsaved model in
    memory. This operation is not allowed because the selected model will not
    get used.</entry>

    <entry key="selectedModelHasHigherPrecedenceTemporarily">Selected model
    ''''{0}'''' with full path ''''{1}'''' currently has higher precedence than
    another model ''''{2}'''' with full path ''''{3}'''' because the selected
    model is loaded in memory. However, the other model has a higher PATH
    precedence. This will cause an issue if the selected model is no longer in
    memory. Please Continue or Cancel the operation. </entry>

    <entry key="selectedFileIsLoadedWithMultipleFilesOnPath">Selected model
    ''''{0}'''' with full path ''''{1}'''' is loaded and on the path.  Another
    model ''''{2}'''' with full path ''''{3}'''' is also on the path. This may
    cause an issue if the selected model is no longer in memory. Please Continue
    or Cancel the operation.</entry>

    <entry key="selectedMdlPrecedenceIssueTitle">Resolve precedence issue with
    selected model</entry>

    <entry key="selectedMdlPrecedenceIssueCancel">Cancel</entry>

    <entry key="selectedMdlPrecedenceIssueContinue">Continue</entry>

    <entry key="searchingRefMdlsStatus">Searching for referenced models</entry>
    <entry key="searchingRefMdlsDetailStatus">Found {1,number,integer} model references, processing ''{0}''</entry>

    <entry key="searchingRefMdlsLog">Searching for referenced models in model ''{0}''.</entry>
    <entry key="searchingRefMdlsCompleteLog">Total of {0,number,integer} models to build.</entry>

    <entry key="updatingSIMTargetStatus"> ({0,number,integer} of {1,number,integer}) ''{2}'': Updating model reference simulation target</entry>
    <entry key="updatingParallelSIMTargetStatus"> ({0,number,integer} of {1,number,integer} completed) Updating model reference simulation targets in parallel using {2,number,integer} workers</entry>
    <entry key="updatingCoderTargetStatus"> ({0,number,integer} of {1,number,integer}) ''{2}'': Updating model reference code generation target</entry>
    <entry key="updatingParallelCoderTargetStatus"> ({0,number,integer} of {1,number,integer} completed) Updating model reference code generation targets in parallel using {2,number,integer} workers</entry>
    <entry key="unpackingProtectedModel"> Unpacking protected models. </entry>    

    <entry key="multiTaskingInSingleTasking"> Model ''{0}'' has the 'Configuration Parameters' > 'Solver' > 'Treat each discrete rate as a separate task' option cleared, and it references  model ''{1}'', which has this option selected and contains rate transitions. This configuration is not supported when generating code for ERT or GRT based targets. Select the option for the parent model or clear the option for the referenced model.</entry>

    <entry key="variableDimsNotAllowedOnInput"><![CDATA[ <sldiag objui="inport" objparam="{0,number,integer}" objname="{1}">Input port {0,number,integer}</sldiag> of
    the subsystem ''{1}'' has an output that is a variable-size signal.  Such
    input ports are not allowed when converting this subsystem to a model
    reference.]]></entry>

    <entry key="variableDimsNotAllowedOnOutput"><![CDATA[ <sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">Output port {0,number,integer}</sldiag>
    of the subsystem ''{1}'' has an input that is a variable-size signal.  Such
    output ports are not allowed when converting a subsystem with an enable port
    to a model reference.]]></entry>
    
    

    <entry key="ModelRefConfigurableSubsystemDuplicateName">Duplicate port names 
    on a block that is a part of a configurable subsystem are not supported.
    The Model block ''{0}'' is used in configurable subsystem ''{1}'' and has
    multiple ports with the name ''{2}''.  To avoid duplicate port names, edit
    the referenced model ''{3}'' and do one or more of the following, depending
    on the configuration of this model:\n\n

    a) Set ''Icon display'' to ''Port number'' on the root input and output
    ports.\n\n

    b) Show the block names on the root input and output ports.\n\n

    c) Change the names of the signals attached to the root input and output
    ports to eliminate having more than one root input or output attached to a
    signal with the same name.</entry>

    <entry key="convertToModelReference_ErrorInSubsystem">The following error
    occurred in subsystem ''{0}'': {1}</entry>

    <entry key="convertToModelReference_BusWithMixedSampleTimes">Invalid bus
    element sample time. Unable to use bus object ''{0}'' for {1} block ({2}) in
    the new model. This bus object has elements with different sample
    times. In order to convert a subsystem to a model, all bus element sample
    times must be the same or they must be inherited (-1).</entry>
    
    <entry key="convertToModelReference_InvalidSubsystemFcnCallOutput">Output port
    ''{0}'' of the specified Subsystem block contains a function-call signal.
    Converting subsystems with function-call outputs to referenced models is not
    supported. </entry>
    
    <entry key="convertToModelReference_InvalidSubsystemConstInput">Compiled sample 
    time of input port block ''{0}'' in subsystem ''{1}'' is constant. which is not 
    supported at referenced model input ports.</entry>
    
    <entry key="convertToModelReference_InvalidMergeConnection">Input port
    ''{0}'' is driving a Merge block. Since external signals from root level
    inports in the new model cannot be merged with internal block output
    signals, this subsystem cannot be converted to a model.</entry>
    
    <entry key="convertToModelReference_BusWithKnownTsInTriggerSS">Invalid bus
    element sample time. Bus object ''{0}'' has non-inherited sample time
    elements (or sub-elements).  Unable to use this bus object for {1} block
    ({2}) in the new model. Since the new model must be configured to be
    sample time independent, all bus element sample times must be specified as
    inherited (-1).</entry>
    
    <entry key="convertToModelReference_SubsystemHasLinkToADirtyLibrary">Subsystem
      ''{0}'' is linked to a library with unsaved changes. Please save the
      library before converting the subsystem to a model.</entry>
    <entry key="convertToModelReference_BadSimulationStatus">Simulation status
    of model ''{0}'' is ''{1}''.  This indicates that the model is being run.
    Please stop the simulation, and rerun convertToModelReference.</entry>
    
    <entry key="convertToModelReference_InvalidModelRef" note="stringDatatypeUpdate">The new model name must be 
    a valid character vector and variable name: ''{0}''.</entry>

    <entry key="convertToModelReference_ModelRefFileExisted">Unable to use ''{0}''
    as a new referenced model name. The model ''{1}'' already exists on the
    path.</entry>

    <entry key="convertToModelReference_UnableToWireBlock">Error occurred when
      wiring the input and output ports of block ''{0}'' in system ''{1}''.
      Please connect the block.</entry>

    <entry key="convertToModelReference_InvalidSubsystemDWorkCrossSys">The
    subsystem ''{0}'' is in an iterator system. This subsystem
    directly/indirectly contains an Assignment block. The Assignment block is
    not in an iterator system. Please update your model to avoid this
    configuration. Unable to convert this subsystem to model reference.</entry>

    <entry
    key="convertToModelReference_InvalidSubsystemFcnCallSSWithInheritState">The
    ''State when enabling'' parameter of the Trigger port block inside the
    Function-Call subsystem ''{0}'' is set to inherit. Simulink is unable to ensure
    compatibility between the original subsystem ''{1}'' and the new
    model. Please set the ''State when enabling'' parameter to reset or held
    before converting the subsystem block to model reference.</entry>

    <entry key="convertToModelReference_InvalidSubsystemWideFcnCallPort">The
    function-call input port of the specified subsystem block expects a wide
    (non-scalar) signal with {0,number,integer} elements. Unable to convert
    subsystems with wide function-call input port to model reference.</entry>

    <entry key="convertToModelReference_FailedToBuildTarget">Failed to build
    model reference target.</entry>

    <entry key="convertToModelReference_InvalidSigGenConnection"><![CDATA[The
    specified subsystem block contains input ports connected to Viewers & Generators
    Manager signal generators.  Unable to convert subsystems with this
    condition.]]></entry>

    <entry key="convertToModelReference_InvalidNumInputs">Invalid usage of
    convertToModelReference.  Two or more inputs are expected.</entry>

    <entry key="convertToModelReference_BuildTarget">Invalid value for
    BuildTarget parameter.  BuildTarget must be ''Sim'' or ''Coder''.</entry>  
    
    <entry key="convertToModelReference_DiffRefLocation">Referenced model ''{0}'' has been 
    saved to ''{1}'', which differs from the location of parent model ''{2}''. Code generation 
    of the referenced model might fail if it requires custom code because of its different 
    location.</entry>
   
    <entry key="SubsystemsForErrorChecking">Invalid input parameter for
    ''SubsystemConversionCheck'' class. This parameter must be a cell array of
    subsystem names or handles.</entry>
    
    <entry key="convertToModelReference_InvalidInputArgument">Invalid input
    argument: {0}.</entry>
    <entry key="convertToModelReference_InvalidInputArgument_UseConversionAdvisor">'UseConversionAdvisor' must be true. 
    To convert a subsystem to a referenced model without using the Model Reference Conversion Advisor, omit the 
    'UseConversionAdvisor' argument and specify a name for the referenced model.</entry>

    <entry key="convertToModelReference_InvalidInputArgument_InvalidHandleType">Handle must be a valid Simulink block or port handle.</entry>

    <entry key="convertToModelReference_inportInvalidDownStreamSampleTimeErr"><![CDATA[
      Block ''{0}'' has a sample time of [{1}, {2}] which does not match the
      sample time [{3}, {4}] of <sldiag objui="inport" objparam="{5,number,integer}" objname="{6}">input port {5,number,integer}</sldiag> of downstream
      block ''{6}''. Sample times must be the same. Please either change one of
      the two sample times or insert a Rate Transition block.
    ]]></entry>

    <entry key="convertToModelReference_outportInvalidUpStreamSampleTimeErr"><![CDATA[
      Block ''{0}'' has a sample time of [{1}, {2}] which does not match the
      sample time [{3}, {4}] of <sldiag objui="outport" objparam="{5,number,integer}" objname="{6}">output port {5,number,integer}</sldiag> of upstream block
      ''{6}''. Sample times must be the same. Please either change one of the
      two sample times or insert a Rate Transition block.
    ]]></entry>
    
    
    <entry key="convertToModelReference_multiRatesMaybeInvalidForBEPsIn">
        Input port {0} of the new model uses In Bus Element blocks to pass the virtual 
        bus because the bus contains multirate signals.</entry>
        
    <entry key="convertToModelReference_multiRatesMaybeInvalidForBEPsOut">
        Output port {0} of the new model uses Out Bus Element blocks to pass the virtual 
         bus because the bus contains multirate signals.</entry>


    <entry key="convertToModelReference_configSetReferenceResolved">
      Unable to use referenced configuration set ''{0}'' for model ''{1}''.
      Model ''{1}'' uses an independent configuration set that resolves
      incompatible parameter settings.
    </entry>
    
    <entry key="convertToModelReference_localScopedSimulinkFunctionUsed">
      Scoped function defined by Simulink Function block ''{0}'' will not be available
      to function caller ''{1}'' when simulating model ''{2}'' after conversion. Change
      function visibility to global to access the function in the new referenced model
      across the model hierarchy.
    </entry>
    <entry key="convertToModelReference_ScopedFuncCallCannotConverted">
      Converting subsystem that contains Function Caller block ''{1}'' to a referenced
      model is not supported because the scoped function ''{0}'' will be 
      unavailable to the new referenced model.
    </entry>
    
    <entry key="convertToModelReference_ImplicitRTBCheckingOnInvalidPortBlocks">
        Port block must be an Inport or an Outport block.
    </entry>

    <entry key="NormalModeSimulationError">Unable to simulate Model block ''{0}''.  </entry>

    <entry key="NormalModeSimulationWarning">Warning issued while simulating Model block ''{0_SLObject}''.</entry>

    <entry key="NormalModeCodegenError">Unable to generate code for Model block ''{0}''.  </entry>

    <entry key="NormalModeVisibilityUnexpectedCommand">The command {0} is not a
    valid option to Simulink.ModelReference.NormalModeVisibility.</entry>

    <entry key="NormalModeVisibilityUnexpectedCommandType" note="stringDatatypeUpdate">The command given to
    Simulink.ModelReference.NormalModeVisibility is not a character vector.</entry>

    <entry key="NormalModeVisibilityInvalidFileType">Normal mode visibility is not supported for libraries or subsystems.</entry>
    
    <entry key="MultiinstanceNormalModeWorkspaceVariableChanged">The values of
    one or more global workspace variables used by the model ''{0}'' have
    changed between the time when two different instances of this model were
    compiled for Model Reference Normal Mode, which is not allowed.</entry>

    <entry key="MultiinstanceNormalModeBlockDiagramChecksumChanged">The model
      ''{0}'' has changed between the time when two instances of this model were
      compiled.  This is not allowed for models referenced in Normal
      Mode.</entry>

    <entry key="ModelBlockNormalModeVisibilityInvalidValue" note="stringDatatypeUpdate">The value of the
      ''ModelBlockNormalModeVisibility'' parameter must be either a cell array
      of cell arrays of character vectors, or an array of Simulink.BlockPaths.</entry>

    <entry key="DuplicateModelBlockNormalModeVisibility"><![CDATA[
      Model blocks {1} and {2} reference model ''{0}'' and have their Normal
      Mode Visibility set to on. You need to change the Normal Mode Visibility
      settings on the top model, ''{3}'', so that at most one Model block that
      references model ''{4}'' has its Normal Mode Visibility set to on. Change
      the settings either with the ''ModelBlockNormalModeVisibility'' block
      diagram parameter or with the 
      <a href="matlab:Simulink.ModelReference.NormalModeVisibility(''{5}'')">Model
      Block Normal Model Visibility Editor</a>.]]></entry>

    <entry key="ParameterOnlyValidWhenModelIsCompiledAndTopModel">The value of
      this parameter is only valid when the model is in a compiled
      state and is a top model.</entry>

    <entry key="IgnoringModelBlockNormalModeVisibilitySummary">Normal Mode
    Visibility is being ignored for the following block paths because they do
    not specify Model blocks that simulate in Normal mode.  Save the model
    ''{0}'' to avoid this warning when simulating in the future.</entry>

    <entry key="IgnoringOneModelBlockNormalModeVisibility">Normal Mode
    Visibility is being ignored for the block path {0}.</entry>
    
    <entry key="IgnoringVisibilityInactiveVariant">Normal Mode Visibility is
    being ignored for the block path {0}.  This block path is in an inactive
    variant.</entry>

    <entry key="MultiInstanceNormalModeSetupFailedBecauseOfModelName">Simulink
      failed to set up the model ''{0}'' for multi-instance Normal mode.  This
      can happen if you have models with similar names that are referenced many
      times or are on the path.  Rename some of your models and try
      again.</entry>
    <entry key="InvalidNormalModeCallbackSpecified">The callback being set must
      be a single object of type
      Simulink.ModelReference.NormalModeCallback or an empty matrix.</entry>
    <entry key="MultiInstanceNormalModeSFunctionMustSupportMultipleExecBlockInstances">The
      S-Function block ''{0}'' is not supported in multi-instance Normal mode
      because it does not declare that it supports multiple execution instances.
      If the S-Function satisfies the multiple execution instances requirements,
      you can declare this using the SimStruct function
      'ssSupportsMultipleExecInstances' in the 'mdlSetWorkWidths'
      method.</entry>
    <entry key="MultiInstanceNormalModeMFileSFunctionMustSupportMultipleExecBlockInstances">The
      MATLAB S-Function block ''{0}'' is not supported in multi-instance Normal
      mode because it does not declare that it supports multiple execution
      instances. If the MATLAB S-Function satisfies the multiple execution
      instances requirements, you can declare this by setting the flag
      block.SupportsMultipleExecInstances to true in the Setup section.
    </entry>
    <entry key="MultiInstanceReuseCompileSFunctionUserDataCompilance">This
    model cannot be optimized for performance because the S-Function block ''{0}''
    sets the UserData before 'mdlStart' in multi-instance Normal mode. To see
    faster model update times, move the UserData allocation to 'mdlStart'. If the UserData
    is read-only at simulation, it satisfies the requirements for performance optimization
    in multi-instance Normal mode. You can declare this using the SimStruct function
    'ssUserDataInvariantPostCompile' method at the time of UserData allocation.You can also
    disable this error message and opt out of this optimization by calling
    set_param(''{1}'',''MultipleExecBDOptimizationStatus'', ''off'');</entry>
    <entry key="MultiInstanceReuseCompileSFunctionCustomRTPDataCompilance">This
    model cannot be optimized for performance because the S-Function block ''{0}''
    sets the custom RTP before 'mdlStart' in multi-instance Normal mode. To see
    faster model update times, implement the mdlCopyRTPData method to clone
    the custom RTP for execution. You can also disable this error message and opt out of this optimization by calling
    set_param(''{1}'',''MultipleExecBDOptimizationStatus'', ''off'');</entry>
    <entry key="ModelBlockSimulationModeFixed">Executed the command 'matlab:set_param(''{0}'',SimulationMode', Normal')'</entry>

    <entry key="OpenNonVisibleInstancePrefDescription">Warn when opening Model
      blocks with Normal Mode Visibility set to off</entry>

    <entry key="OpenNonVisibleInstancePrefToolTip">Show a warning when opening
      models from Model blocks that have Normal Mode Visibility set to
      off</entry>
    <entry key="OpenNonVisibleInstanceActionButton">Edit Visibility</entry>

    <entry key="OpenNonVisibleInstanceText">The last time that you simulated the
    model ''{0}'', the Model block from which you opened the model ''{1}'' did
    not have its Normal Mode Visibility set to on.  When a model is referenced
    multiple times in Normal mode, Model blocks that do not have Normal Mode
    Visibility set to on will have gray corners.  The Scope blocks, port values,
    etc. for model ''{2}'' will show data from a different instance.  To change
    the Normal Mode Visibility settings, click ''{3}''.</entry>

    <entry key="DoesBlockRunInNormalModeArgMustBeBlockPath">First argument 
    must be a Simulink block path.</entry>
    
    <entry key="HierarchyExplorerInstructionsPrompt">Instructions</entry>
    <entry key="HierarchyExplorerReadyStatusMessage">Ready</entry>
    <entry key="HierarchyExplorerRefreshingStatusMessage">Refreshing</entry>
    <entry key="HierarchyExplorerOKButton">OK</entry>
    <entry key="HierarchyExplorerCancelButton">Cancel</entry>
    <entry key="HierarchyExplorerHelpButton">Help</entry>
    <entry key="HierarchyExplorerRefreshButton">Refresh</entry>
    <entry key="HierarchyExplorerApplyButton">Apply</entry>
    <entry key="HierarchyExplorerLegendAccelerator">Accelerated, Software-in-the-Loop (SIL), or Processor-in-the-Loop (PIL) Mode</entry>
    <entry key="HierarchyExplorerLegendNormal">Normal Mode</entry>
    <entry key="HierarchyExplorerUnappliedChangesTitle">Apply Changes</entry>
    <entry key="HierarchyExplorerRefreshWithUnappliedChangesMessage">
       You have changed the settings for model ''{0}'', but have not yet applied
       these changes to the model.  Would you like to apply these changes before
       refreshing the dialog?</entry>
    <entry key="HierarchyExplorerClosedWhenNotReady">The Hierarchy Explorer was
       closed in a non-ready state.</entry>
    <entry key="HierarchyExplorerUnappliedChangesApplyButton">Apply</entry>
    <entry key="HierarchyExplorerUnappliedChangesDoNotApplyButton">Do Not Apply</entry>
    <entry key="HierarchyExplorerUnappliedChangesCancelButton">Cancel</entry>
    <entry key="NormalModeVisibilityExplorerInstructions"><![CDATA[
       <p>The Normal Mode Visibility setting determines the instances of a
          Normal mode referenced model for which you can perform activities such
          as viewing Scope blocks or port values.</p>

       <p>Select the check boxes for the multi-instance Normal mode Model blocks
          for which you want to enable Normal Mode Visibility during the next
          simulation.</p>

       <p>If you change the model reference hierarchy, click <b>Refresh</b> to
          update the hierarchy in the dialog.</p>
    ]]></entry>

    <entry key="HierarchyExplorerCouldNotLoadModel">The {0} dialog for model
    ''{1}'' could not be opened because it references the model ''{2}'' that
    failed to load.</entry>

    <entry key="NormalModeVisibilityExplorerTitle">Model Block Normal Mode Visibility</entry>
    <entry key="NormalModeVisibilityExplorerOpenCallback"><![CDATA[&Open]]></entry>
    <entry key="NormalModeVisibilityExplorerOpenTooltip">Open</entry>
    <entry key="CannotOpenBlockInModelWithNormalModeVisibilityUnset">The block
      ''{0}'' cannot be opened because it is in a model that does not have
      Normal mode visibility set to on.</entry>
    <entry key="CannotOpenBlockDiagramWithNormalModeVisibilityUnset">The block
      diagram ''{0}'' cannot be opened because it does not have Normal mode
      visibility set to on.</entry>

    <entry key="SaveBlockAlertTitle">Saving Referenced Models</entry>
    <entry key="SaveBlockAlertMessage"><![CDATA[Model block ''{0}'' is referencing model
      ''{1}''. Model ''{2}'' has unsaved changes.  Select: 
      <ul>
        <li> <b>Save</b> to save ''{3}'' and refresh all Model blocks in the parent model.
        <li> <b>Save All</b> to recursively repeat the above action for referenced models that
        have unsaved changes.
        <li> <b>Cancel</b> to cancel the Save operation for this model and its parents.
      </ul> ]]></entry>
    <entry key="SaveButton">Save</entry>
    <entry key="SaveAllButton">Save All</entry>
    <entry key="RefreshButton">Refresh</entry>
    <entry key="CancelButton">Cancel</entry>
    <entry key="noMinAlgLoopForTriggeredMdlRef">Unable to generate code for model "{0}" because code generation is not supported for models that have root-level trigger ports and are configured to minimize artificial algebraic loop occurrences.
     <![CDATA[
       <actions exclusiveFixIts="yes">
        <action type="fixit" id="removeRootLevelTriggerPorts">
          <txt>Remove the root-level trigger ports from model "{0}".</txt>
         </action>
         <action type="fixit" id="offMinAlgLoopOccurrences">
           <cmd>Simulink.ModelReference.internal.ModelRefFixes(''noMinAlgLoopForTriggeredMdlRefFixAct'',''{0}'',''none'')</cmd>
           <txt>Clear <sldiag objui="configset" objparam="ModelReferenceMinAlgLoopOccurrences">Minimize artificial algebraic loop occurrences</sldiag> for model "{0}".</txt>
         </action>
       </actions>
      ]]>
    </entry>
    <entry key="noMinAlgLoopForTriggeredMdlRefFixAction">Executed command set_param(''{0}'',''ModelReferenceMinAlgLoopOccurrences'',''off'').</entry>
    <entry key="ArrayBoundsCheckingNotSupportedInMdlRefNormalMode">The referenced model ''{0}'' has ''Array bounds exceeded'' set to ''{1}''. This is not supported in Normal mode simulation of a referenced model.
      <![CDATA[
        <actions exclusiveFixIts="yes">
            <action type="fixit">
                <cmd>configset.internal.fixIt(''{0}'',''ArrayBoundsChecking'',''none'')</cmd>
                <txt>Set <sldiag objui="configset" objparam="ArrayBoundsChecking">Array bounds exceeded</sldiag> to ''none'' to run ''{0}'' in Normal mode</txt>
            </action>
      </actions>]]>
    </entry>

    <entry key="CannotChangeVerIoMismatchMsg"><![CDATA[Model block ''{0}'' was refreshed from model
    ''{1}'' that had unsaved changes. Before changing "Model block version mismatch" or "Port and
    parameter mismatch" diagnostics from none to warning or error, you should:\n

    1) Save all referenced models.\n

    2) <a href="matlab:helpview([docroot, ''/toolbox/simulink/ug/simulink_ug.map''],
    ''RefreshingModelBlocks'');">Refresh all Model blocks</a> in your model.]]></entry>

    <entry key="CannotReferenceALibraryOrSubsystem">Unable to reference ''{0}'' from a Model block because it is a library or subsystem.</entry>
    <entry key="CannotReferenceAHarness">Model block cannot reference a test harness. ''{0}'' is a test harness. Please specify a model name.</entry>
    
    <entry key="CannotRefreshFromDirtyMdlDiagOn"><![CDATA[Refreshing Model block ''{0}'' is not supported when the referenced model has unsaved changes and diagnostic configuration parameter <sldiag objui="configset" objparam="ModelReferenceVersionMismatchMessage">Model block version mismatch</sldiag> or <sldiag objui="configset" objparam="ModelReferenceIOMismatchMessage">Port and parameter mismatch</sldiag> is set to ''error''.]]></entry>
    
    <entry key="ConsistentOutportInitMismatchParentToClassic"><![CDATA[<sldiag objui="configset" objparam="UnderspecifiedInitializationDetection">Underspecified initialization detection</sldiag> value must match between parent model ''{2}'' and model ''{0}'', which Model block ''{1}'' references. In model ''{3}'', set the value to ''Classic''.]]></entry>    
    <entry key="ConsistentOutportInitMismatch"><![CDATA[<sldiag objui="configset" objparam="UnderspecifiedInitializationDetection">Underspecified initialization detection</sldiag> value must match between parent model ''{2}'' and model ''{0}'', which Model block ''{1}'' references. In model ''{3}'', set the value to ''Simplified''.]]></entry>    
    <entry key="Cycle">The model ''{0}'' contains a reference to itself through the referencing hierarchy ''{1}'' initiated in Model block ''{2}''</entry>
    <entry key="CycleNotAllowed">Model reference loop is not supported. Model ''{0}'' has a model reference loop: ''{1}''</entry>
    <entry key="DSMMismatch">A global data store {0} that is being accessed in a model directly or indirectly referenced by ''{1}'' has an inconsistent data type with the data store memory that is being created.  The data type in the referenced model is {2} and the data type of the memory is {3}.  One possible cause of this is if the DataTypeOverride parameter is set inconsistently in this model reference hierarchy.</entry>
    <entry key="DisallowNonIterAssignmentBlocks">Invalid configuration for an Assignment block in a referenced model.  The following configuration is not currently supported: \n - the Model block ''{0}'' lives in an iterator system ''{1}''. \n \n - the Model block is referencing a model ''{2}'' that directly/indirectly contains the Assignment block ''{3}''. \n \n - the Assignment block is not in an iterator system in the referenced model.\n\n Please update your model to avoid this configuration.</entry>
    <entry key="DisallowNonzeroStartTime">The model ''{0}'' can not have a
    nonzero start time when generating real-time code if it is being referenced
    by another model.  Please change the "Start Time" to zero in the Solver page
    of the Configuration Parameters dialog.</entry>
    <entry key="DisallowWideFcnCallMdlRef">Multiple callers specified for
    ''{0}''.  The Model block must have a single caller.</entry>

    <entry key="ModelBlockRefreshFixedMsg">Executed command Simulink.ModelReference.refresh(''{0}'')</entry>

    <entry key="ErrDiagIOMismatchMsg">Ports and parameters must match between Model block ''{0}'' and referenced model ''{1}''. 
    </entry>
    <entry key="RefreshModelBlockFixItMsg">
    <![CDATA[
      <actions exclusiveFixIts="yes">
        <action type="fixit">
          <cmd>Simulink.ModelReference.internal.ModelRefFixes(''RefreshModelBlock'', ''{0}'')</cmd>
          <txt>Refresh the Model block ''{0}''.</txt>
        </action>
        <action type="suggestion">
          <txt>Revert the changes to the referenced model.</txt>
        </action>
        <action type="suggestion">
          <txt>Turn off this diagnostic. Set the ''Port and parameter mismatch'' configuration parameter to ''none''.</txt>
        </action>
      </actions>
    ]]>
    </entry>

    <entry key="WarnDiagIOMismatchMsg">Ports and parameters of Model block ''{0}'' have been updated to reflect changes in referenced model ''{1}''.</entry>

    <entry key="ErrRefreshBlocksAndDiagIOMismatchMsg">Unable to refresh Model blocks because the ''ModelReferenceIOMismatchMessage'' configuration parameter is set to ''error''. Refresh specific Model blocks with the Simulink.ModelReference.refresh function or change the ''ModelReferenceIOMismatchMessage'' value.</entry>

    <entry key="WarnNoSyncDiagIOMismatchMsg">Ports and parameters of Model block ''{0}'' do not reflect changes in referenced model ''{1}''. 
    </entry>

    <entry key="ErrInvalidModelrefInput_Sfcn">A noninlined S-Function reading its input from a root Inport block is found. A hidden Signal Conversion block (with the ''Exclude this block from ''Block reduction'' optimization'' option enabled) needs to be inserted before noninlined S-Function ''{0}'' in referenced model ''{1}'' to facilitate code generation. \nUse the ''Invalid root Inport/Outport block connection'' option on the ''Model Referencing'' group of the Diagnostics page of the Configuration Parameters dialog box to control reporting of this condition.</entry>
    <entry key="ErrInvalidModelrefInput_Sfcn_FcnCall">A noninlined S-Function ''{0}'' is reading its input from root Inport block ''{1}''. This scenario is not allowed because this root Inport is driving a function-call block whose trigger signal is driven by another root Inport block. A Signal Conversion block (with the ''Exclude this block from ''Block reduction'' optimization'' option enabled) needs to be inserted before the noninlined S-Function in referenced model ''{2}'' to facilitate code generation.</entry>
    <entry key="ErrInvalidModelrefOutput_ConstTP">Invalid root Outport block connection in the referenced model ''{0}''. Root Outport block ''{1}'' is driven by the block ''{2}'' which also has an output port that is testpointed or has non-auto storage class. \nUse the ''Invalid root Inport/Outport block connection'' option on the ''Model Referencing'' group of the Diagnostics page of the Configuration Parameters dialog box to control reporting of this condition.</entry>
    <entry key="ErrInvalidModelrefOutput_ConstTP_FcnCall">Invalid root Outport block connection in the referenced model ''{0}''. Root Outport block ''{1}'' is driven by the block ''{2}'' which also has an output port that is testpointed or has non-auto storage class. This scenario is not allowed because the function-call block that drives this root Outport is triggered by a root Inport block that outputs a function-call signal.</entry>
    <entry key="ErrInvalidModelrefOutput_GroundBlock">Invalid root Outport block connection in the referenced model ''{0}''. Root Outport block ''{1}'' is driven by a ground block. \nUse the ''Invalid root Inport/Outport block connection'' option on the ''Model Referencing'' group of the Diagnostics page of the Configuration Parameters dialog box to control reporting of this condition.</entry>
    <entry key="ErrInvalidModelrefOutput_MultiDst"><![CDATA[Invalid root Outport block connection in the referenced model ''{0}''. <sldiag objui="outport" objparam="{1,number,integer}" objname="{2}">Output port {1,number,integer}</sldiag> of block ''{2}'' drives root Outport blocks {3,number,integer} and {4,number,integer}. To be a valid connection, the source port must drive only one root Outport block. \nUse the ''Invalid root Inport/Outport block connection'' option on the ''Model Referencing'' group of the Diagnostics page of the Configuration Parameters dialog box to control reporting of this condition.]]></entry>
    <entry key="ErrInvalidModelrefOutput_MultiDst_FcnCall"><![CDATA[Invalid root Outport block connection in the referenced model ''{0}''. <sldiag objui="outport" objparam="{1,number,integer}" objname="{2}">Output port {1,number,integer}</sldiag> of block ''{2}'' drives root Outport blocks {3,number,integer} and {4,number,integer}. This scenario is not allowed because the function-call block that drives this root Outport is triggered by a root Inport block that outputs a function-call signal. To be a valid connection, the source port must drive only one root Outport block.]]></entry>
    <entry key="ErrInvalidModelrefOutput_MultiPath"><![CDATA[Invalid root Outport block connection in the referenced model ''{0}''. <sldiag objui="outport" objparam="{1,number,integer}" objname="{2}">Output port {1,number,integer}</sldiag> of block ''{2}'' drives root Outport {3,number,integer} via two paths. To be a valid connection, only one signal path can exist between a root Outport block and the block that drives it. \nUse the ''Invalid root Inport/Outport block connection'' option on the ''Model Referencing'' group of the Diagnostics page of the Configuration Parameters dialog box to control reporting of this condition.]]></entry>
    <entry key="ErrInvalidModelrefOutput_MultiPath_FcnCall"><![CDATA[Invalid root Outport block connection in the referenced model ''{0}''. <sldiag objui="outport" objparam="{1,number,integer}" objname="{2}">Output port {1,number,integer}</sldiag> of block ''{2}'' drives root Outport {3,number,integer} via two paths. This scenario is not allowed because the function-call block that drives this root Outport is triggered by a root Inport block that outputs a function-call signal. To be a valid connection, only one signal path can exist between a root Outport block and the block that drives it.]]></entry>
    <entry key="ErrInvalidModelrefOutput_MultiSrc">Invalid root outport connection in the referenced model ''{0}''. Two different blocks drive the root Outport block ''{1}''. To be a valid connection, the root Outport block must be driven by one source port. \nUse the ''Invalid root Inport/Outport block connection'' option on the ''Model Referencing'' group of the Diagnostics page of the Configuration Parameters dialog box to control reporting of this condition.</entry>
    <entry key="ErrInvalidModelrefOutput_MultiSrc_FcnCall">Invalid root outport connection in the referenced model ''{0}''. Two different blocks drive the root Outport block ''{1}''. This scenario is not allowed because the function-call block that drives this root Outport is triggered by a root Inport block that outputs a function-call signal. To be a valid connection, the root Outport block must be driven by one source port.</entry>
    <entry key="ErrInvalidModelrefOutput_NONCont"><![CDATA[Invalid root Outport block connection in the referenced model ''{0}''. Only {1,number,integer} element(s) of <sldiag objui="outport" objparam="{2,number,integer}" objname="{3}">output port {2,number,integer}</sldiag> of block ''{3}'' drive the root Outport {4,number,integer}. To be a valid connection, all of the signal''s elements must drive the root Outport block to which it is connected. \nUse the ''Invalid root Inport/Outport block connection'' option on the ''Model Referencing'' group of the Diagnostics page of the Configuration Parameters dialog box to control reporting of this condition.]]></entry>
    <entry key="ErrInvalidModelrefOutput_BusSelection"><![CDATA[Invalid root Outport block connection at root output port {3,number,integer} of referenced model ''{0}'' because the Outport block is driven by an element of a bus from <sldiag objui="outport" objparam="{1,number,integer}" objname="{2}">output port {1,number,integer}</sldiag> of block ''{2}''. Use ''Configuration Parameters > Diagnostics > Model Referencing > Invalid root Inport/Outport block connection'' to control reporting of this condition.]]></entry>
    <entry key="ErrInvalidModelrefOutput_NONCont_FcnCall"><![CDATA[Invalid connection at root Outport block ''{1}'' of referenced model ''{0}'' because the Outport block receives only part of the input to a block, and the input is driven by function-call root Inport blocks. Insert a Signal Conversion block after the partial selection and before <sldiag objui="outport" objparam="{2,number,integer}" objname="{3}">output port {2,number,integer}</sldiag> of function-call subsystem ''{3}''.]]></entry>
    <entry key="ErrInvalidModelrefOutput_NONCont_SimulinkFcn"><![CDATA[Invalid root Outport block connection in the referenced model ''{0}''. The input of the root-level Outport block ''{1}'' cannot use partial signal from <sldiag objui="outport" objparam="{2,number,integer}" objname="{3}">output port {2,number,integer}</sldiag> of Simulink Function block ''{3}''.]]></entry>
    <entry key="ErrInvalidModelrefOutput_NonConstDrivingConst">Invalid root Outport block connection in the referenced model ''{0}''. Root Outport {1,number,integer} has a constant sample time but is driven by a block that does not have a constant sample time. \nUse the ''Invalid root Inport/Outport block connection'' option on the ''Model Referencing'' group of the Diagnostics page of the Configuration Parameters dialog box to control reporting of this condition.</entry>    
    <entry key="ErrInvalidModelrefOutput_ConstDrivingNonConst">Invalid root Outport block connection in the referenced model ''{0}''. Root Outport {1,number,integer} does not have a constant sample time but is driven by a block that has a constant sample time. \nUse the ''Invalid root Inport/Outport block connection'' option on the ''Model Referencing'' group of the Diagnostics page of the Configuration Parameters dialog box to control reporting of this condition.</entry>
    <entry key="ErrInvalidModelrefOutput_NoninlinedSfcn">Invalid root Outport block connection in the referenced model ''{0}''. Root Outport block ''{1}'' is being read from or written to by the noninlined S-Function ''{2}''. \nUse the ''Invalid root Inport/Outport block connection'' option on the ''Model Referencing'' group of the Diagnostics page of the Configuration Parameters dialog box to control reporting of this condition.</entry>
    <entry key="ErrInvalidModelrefOutput_NoninlinedSfcn_FcnCall">Invalid root Outport block connection in the referenced model ''{0}''. Root Outport block ''{1}'' is being read from or written to by the noninlined S-Function ''{2}''. This scenario is not allowed because the function-call block that drives this root Outport is triggered by a root Inport block that outputs a function-call signal.</entry>
    <entry key="ErrInvalidModelrefOutput_TestPoint">Invalid root Outport block connection in the referenced model ''{0}''. The signal driving the root Outport block ''{1}'' is a test point or it has ''Model default'' storage class specified. Use the ''Invalid root Inport/Outport block connection'' option on the ''Model Referencing'' group of the Diagnostics page of the Configuration Parameters dialog box to control reporting of this condition.</entry>
    <entry key="ErrInvalidModelrefOutput_TestPoint_FcnCall">Root output block ''{1}'' of referenced model ''{0}'' does not support signals from function-call subsystems that are test points or have a ''Model default'' storage class. In external mode, signals marked for logging are test points. To create a copy of the signal to use as output, add a Signal Copy block.</entry>
    <entry key="InvalidModelrefOutput_ReturnByValueClassic"><![CDATA[Invalid root Outport block connection in the referenced model ''{0}''. The Outport block {1,number,integer} is configured to return the model output by value in the model''s function prototype control dialog. The block may be conditionally assigned and therefore incompatible with the selected model function prototype control setting. \nSimulink inserts a hidden Signal Conversion block before the Outport and enables the ''Exclude this block from ''Block reduction'' optimization'' option for that Signal Conversion block.  As a result, the behavior of the generated code may be inconsistent with simulation.  Consider setting <sldiag objui="configset" objparam="UnderspecifiedInitializationDetection">Underspecified initialization detection</sldiag> to 'Simplified' in order to ensure consistent behavior.  For a large or complex model, use the Model Advisor check ''Check consistency of initialization parameters for Outport and Merge blocks'' to help with this task. Use the ''Invalid root Inport/Outport block connection'' option on the ''Model Referencing'' group of the Diagnostics page of the Configuration Parameters dialog box to control reporting of this condition.]]></entry>
    <entry key="InvalidModelrefOutput_ReturnByValueSimplified">Invalid root Outport block connection in the referenced model ''{0}''. The Outport block {1,number,integer} is configured to return the model output by value in the model''s function prototype control dialog. The block may be conditionally assigned and therefore incompatible with the selected model function prototype control setting. \nSimulink inserts a hidden Signal Conversion block before the Outport and enables the ''Exclude this block from ''Block reduction'' optimization'' option for that Signal Conversion block.  Use the ''Invalid root Inport/Outport block connection'' option on the ''Model Referencing'' group of the Diagnostics page of the Configuration Parameters dialog box to control reporting of this condition.</entry>
    <entry key="ConflictModelRefOutportAndDrivingSignalSpec"><![CDATA[Conflicting signal specifications: Outport block {0} attributes '{'Signal name:''{1}'', StorageClass = ''{2}'''}' and <sldiag objui="outport" objparam="{3,number,integer}" objname="{4}">output port {3,number,integer}</sldiag> of {4} attributes '{'Signal name:''{5}'', StorageClass=''{6}'''}' are inconsistent. Either make them consistent or change the identifiers.]]></entry>
    <entry key="ConflictModelRefOutportAndDrivingSignalSpec1"><![CDATA[Conflicting signal specifications: Outport block {0} and <sldiag objui="outport" objparam="{1,number,integer}" objname="{2}">output port {1,number,integer}</sldiag> of {2} have specified same signal identifier '{'Signal name:''{3}'''}' but the properties are different. Either make them consistent or change the identifiers.]]></entry>
    
    <entry key="ErrorRetrievingInterfaceChecksum">Unable to retrieve interface checksum for ''{0}''.</entry> 
     
    
    <entry key="ErrorSignalLabelNumberOfPortsMismatch">The number of Outport
    blocks in the saved model file for model ''{0}'' is different than the
    number in the updated diagram.  The saved model file has {1,number,integer},
    while the updated diagram has {2,number,integer}. Save the model to resolve
    the inconsistency.</entry>
    <entry key="ErrorGraphicalInterfaceInconsistency">
        <![CDATA[Computed interface information must match saved interface information for referenced model ''{0}''.
            <actions exclusiveFixIts="yes">
                <action_catalog id="Simulink:modelReference:UpdateAndResaveModelFix">
                    <arg>{0}</arg>
                </action_catalog>
            </actions>
        ]]></entry>

    <entry key="UpdateAndResaveModelFix" translate="true">
        <![CDATA[
            <actions exclusiveFixIts="yes">
                <action type="fixit" id="UpdateAndResaveModel" retvalue="false">
                    <cmd>load_system(''{0}''); set_param(''{0}'', ''SimulationCommand'', ''Update''); set_param(''{0}'', ''dirty'', ''on''); save_system(''{0}'');</cmd>
                    <txt>Update diagram and resave the model ''{0}''.</txt>
                </action>
            </actions>
        ]]></entry>

    <entry key="ErrorResetEventNameMismatch">Some Reinitialize or Reset Functions are no longer
    found in the model ''{0}''. Resave the model ''{0}'' to resolve this inconsistency.</entry>
    <entry key="FixedStepMismatch">
	  Fixed-step size of parent model ''{0}'' and model ''{3}'' referenced by Model block ''{2}'' must match because the referenced model contains a hybrid of discrete and continuous components. The parent model uses a fixed-step size of {1}, and the referenced model uses a fixed-step size of {4}.
	        <![CDATA[                                                                                                       
            <actions exclusiveFixIts="yes">                                                                             
                <action type="fixit">                                                                                   
                    <cmd>Simulink.ModelReference.internal.ModelRefFixes(''FixedStepMismatch'',''{3}'', ''{1}'')</cmd>                    
                    <txt>Set the fixed step size of referenced model ''{3}'' to {1}.</txt>                                          
                </action>                                                                                                
            </actions>                                                                                                  
        ]]>      	
	</entry>
	<entry key="FixedStepMismatchFixed">Executed the command set_param(''{0}'', ''FixedStep'', ''{1}'').</entry>
    <entry key="IOMismatchInputBusName"><![CDATA[<sldiag objui="inport" objparam="{0,number,integer}" objname="{1}">Input port {0,number,integer}</sldiag> of Model block ''{1}'' is using bus object "{2}" and is referencing model ''{3}''. The input port {4,number,integer}, of the referenced model, is using bus object "{5}".]]></entry>
    <entry key="IOMismatchInputNames"><![CDATA[<sldiag objui="inport" objparam="{0,number,integer}" objname="{1}">Input port {0,number,integer}</sldiag> of Model block ''{1}'' has a name of "{2}" and is referencing model ''{3}''. The input port {4,number,integer}, of the referenced model, has a name of "{5}".]]></entry>
    <entry key="IOMismatchInputSigName"><![CDATA[<sldiag objui="inport" objparam="{0,number,integer}" objname="{1}">Input port {0,number,integer}</sldiag> of Model block ''{1}'' has a signal name of "{2}" and is referencing model ''{3}''. The input port {4,number,integer}, of the referenced model, has a signal name of "{5}".]]></entry>

    <entry key="IOMismatchInputUnitExpr"><![CDATA[<sldiag objui="inport" objparam="{0,number,integer}" objname="{1}">Input port {0,number,integer}</sldiag> of Model block ''{1}'' has a unit expression of "{2}" and is referencing model ''{3}''. The input port {4,number,integer}, of the referenced model, has a unit expression of "{5}".]]></entry>

    <entry key="IOMismatchNumInports">Number of input ports must match between Model block ''{0}'' ({1,number,integer}) and referenced model ''{2}'' ({3,number,integer}).</entry>

    <entry key="IOMismatchNumReinitPorts">Number of reinitialize ports must match between Model block ''{0}'' ({1,number,integer}) and referenced model ''{2}'' ({3,number,integer}).</entry>
    
    <entry key="IOMismatchNumResetPorts">Number of reset ports must match between Model block ''{0}'' ({1,number,integer}) and referenced model ''{2}'' ({3,number,integer}).</entry>
     
    <entry key="IOMismatchNumOutports">Number of output ports must match between Model block ''{0}'' ({1,number,integer}) and referenced model ''{2}'' ({3,number,integer}).</entry>

    <entry key="IOMismatchInputLatchParams">Inport block ''{0}'' of referenced model ''{1}'' sets ''LatchInputForFeedbackSignals'' to ''{2}'', but Model block ''{3}'' does not apply this setting to the corresponding input port.</entry>

    <entry key="IOMismatchInputLatchOutsideParams">Inport block ''{0}'' of referenced model ''{1}'' sets ''LatchByDelayingOutsideSignal'' to ''{2}'', but Model block ''{3}'' does not apply this setting to the corresponding input port.</entry>

    <entry key="IOMismatchOutputBusAsStructParams">Outport block ''{0}'' of referenced model ''{1}'' sets ''BusOutputAsStruct'' to ''{2}'', but Model block ''{3}'' does not apply this setting to the corresponding output port.</entry>
    
    <entry key="IOMismatchNotificationBar">The interface for Model block ''{0}'' does not match the referenced model. Refresh the Model block.</entry>
    <entry key="MdlInitPortMustHaveHighestPriority">In a model executing in multitasking mode, when Model block ''{0}'' has the 'Show model initialize port' parameter selected, the input port to initialize the referenced model ''{1}'' should execute in the task with the highest priority. However, the referenced model has content with sample time {4} that has a higher priority than sample time {3} of input port ''{2}'' of the Model block.
    <![CDATA[<actions exclusiveFixIts="yes">
        <action type="suggestion">
            <txt>Consider updating the sample time of function-call signal driving input port ''{2}'' of the Model block to meet this requirement.</txt>
        </action>
        <action type="fixit">
            <cmd>set_param_action(''{5}'', ''SolverMode'', ''SingleTasking'');</cmd>
            <txt>Alternatively, consider configuring model ''{5}'' to execute in single tasking mode.</txt>
        </action>
        <action type="fixit">
            <cmd>set_param_action(''{0}'', ''ShowModelInitializePort'', ''off'');</cmd>
            <txt>Or, clear the Model block parameter 'Show model initialize port'.</txt>
        </action>
      </actions>]]>
    </entry>
    <entry key="OperatingPointSaveErrorForMdlInitPort">Simulation of initialize port of Model block ''{0}'' relies on the ability to save the model''s operating point. However, the following error occurred when an attempt was made to save the operating point:</entry>
    <entry key="FcnCallAdaptMdlInvalidSpecRateWithOffset">When Model block ''{0}'' has the ''Schedule rates'' parameter selected and the ''Schedule rates with'' parameter set to ''Ports'', each discrete rate specified on dialog must have a zero offset. However, specified sample time {1} has an offset {2}.
    <![CDATA[<actions exclusiveFixIts="yes">
        <action type="suggestion">
            <txt>Consider updating specified discrete rates to meet this requirement.</txt>
        </action>
        <action type="fixit">
            <cmd>set_param_action(''{0}'', ''AutoFillPortDiscreteRates'', ''on'');set_param_action(''{3}'', ''SimulationCommand'', ''Update'');</cmd>
            <txt>Alternatively, consider importing discrete rates from the referenced model by updating block diagram '{3}'.</txt>
        </action>
      </actions>]]>
    </entry>
    <entry key="FcnCallAdaptMdlInvalidSpecRate1">When Model block ''{0}'' has the ''Schedule rates'' parameter selected and the ''Schedule rates with'' parameter set to ''Ports'', each discrete rate specified on dialog must exist inside the referenced model. However, specified sample time {1} does not meet this requirement.
    <![CDATA[<actions exclusiveFixIts="yes">
      <action type="fixit" id="DisableSchedulingChecks" retvalue="false">
          <cmd>configset.internal.fixIt(''{2}'', ''EnableRefExpFcnMdlSchedulingChecks'', ''off'')</cmd>
          <txt>To disable this error message, clear the parameter <sldiag objui="configset" objparam="EnableRefExpFcnMdlSchedulingChecks">'Enable strict scheduling checks for referenced models'</sldiag> in the Model Referencing page of the Configuration Parameters dialog.</txt>
        </action>
        <action type="fixit" id="RemovePortDiscreteRates" retvalue="false">
          <cmd>set_param(''{0}'', ''PortDiscreteRates'', ''{3}'')</cmd>
          <txt>Alternatively, remove inactive discrete rates specified on Model block ''{0}''.</txt>
        </action>
      </actions>]]>
    </entry>
    <entry key="FcnCallAdaptMdlInvalidSpecRate2">When Model block ''{0}'' has the ''Schedule rates'' parameter selected and the ''Schedule rates with'' parameter set to ''Ports'', each discrete rate inside the referenced model must be specified on dialog. However, sample time {1} of the referenced model is not specified.
    <![CDATA[
      <actions exclusiveFixIts="yes">
        <action type="fixit" id="PortDiscreteRates" retvalue="false">
          <cmd>set_param(''{0}'', ''PortDiscreteRates'', ''{2}'')</cmd>      
          <txt>Update Model block ''{0}'' parameter 'PortDiscreteRates' to include all missing discrete rates.</txt>
        </action>
      </actions>]]>
    </entry>
    <entry key="FcnCallAdaptMdlInvalidSpecRate3">When Model block ''{0}'' has the ''Schedule rates'' parameter selected and the ''Schedule rates with'' parameter set to ''Ports'', only one discrete rate can be specified on the Model block dialog, when the referenced model has the 'Configuration Parameters' > 'Solver' > 'Periodic sample time constraint' parameter set to 'Ensure sample time independent', or that parameter is set to 'Unconstrained' but the referenced model has not explicitly specified any discrete rate.</entry>
    <entry key="FcnCallAdaptMdlHasNoDiscreteRate">Since the referenced model ''{1}'' does not contain any blocks with a discrete sample time, Model block ''{0}'' cannot have the ''Schedule rates'' parameter selected.
    <![CDATA[
      <actions exclusiveFixIts="yes">
        <action type="fixit">
          <cmd>set_param_action(''{0}'', ''ShowModelPeriodicEventPorts'', ''off'');</cmd>
          <txt>Consider clearing Model block ''{0}'' parameter ''Schedule rates''.</txt>
        </action>
      </actions>
    ]]>
    </entry>
    <entry key="ModelBlockWithEventPortCannotHaveVirtualBusInput">The Model block ''{0}'' cannot have any model event input port because it has virtual bus inputs.
    <![CDATA[<actions exclusiveFixIts="yes">
      <action type="suggestion">
      <txt>Consider changing all virtual bus input signals to non-virtual buses.</txt></action>
      <action  type="fixit">
      <cmd>set_param(''{0}'',''ShowModelInitializePort'',''off'');set_param(''{0}'',''ShowModelTerminatePort'',''off'');set_param(''{0}'',''ShowModelResetPorts'',''off'');set_param(''{0}'',''ShowModelReinitializePorts'',''off'');set_param(''{0}'',''ShowModelPeriodicEventPorts'',''off'');</cmd>
      <txt>Alternatively, clear Model block dialog parameters to disable all model event input ports.</txt></action>
      </actions>]]>
    </entry>
    <entry key="ModelBlockWithEventPortCannotHaveVirtualBusOutput">The Model block ''{0}'' cannot have any model event input port because it has virtual bus outputs.
    <![CDATA[<actions exclusiveFixIts="yes">
      <action type="suggestion">
      <txt>Consider changing all virtual bus output signals to non-virtual buses.</txt></action>
      <action  type="fixit">
      <cmd>set_param(''{0}'',''ShowModelInitializePort'',''off'');set_param(''{0}'',''ShowModelTerminatePort'',''off'');set_param(''{0}'',''ShowModelResetPorts'',''off'');set_param(''{0}'',''ShowModelReinitializePorts'',''off'');set_param(''{0}'',''ShowModelPeriodicEventPorts'',''off'');</cmd>
      <txt>Alternatively, clear Model block dialog parameters to disable all model event input ports.</txt></action>
      </actions>]]>
    </entry>
    <entry key="ModelBlockWithEventPortCannotUseContinuousTs">When Model block ''{0}'' has model event input ports, the referenced model ''{1}'' cannot contain any block that has a continuous or fixed-in-minor-step sample time.
      <![CDATA[<actions exclusiveFixIts="yes">
               <action type="fixit">
               <cmd>set_param(''{0}'',''ShowModelInitializePort'',''off'');set_param(''{0}'',''ShowModelTerminatePort'',''off'');set_param(''{0}'',''ShowModelResetPorts'',''off'');set_param(''{0}'',''ShowModelReinitializePorts'',''off'');set_param(''{0}'',''ShowModelPeriodicEventPorts'',''off'');</cmd>
               <txt>Consider clearing Model block dialog parameters to disable all model event input ports.</txt>
               </action>
      </actions>]]>
    </entry>
    <entry key="ModelBlockWithEventPortCannotHasCtrlRate">When Model block ''{0}'' has model event input ports, the referenced model ''{1}'' cannot contain any block that has a controllable sample time.
      <![CDATA[<actions exclusiveFixIts="yes">
               <action type="fixit">
               <cmd>set_param(''{0}'',''ShowModelInitializePort'',''off'');set_param(''{0}'',''ShowModelTerminatePort'',''off'');set_param(''{0}'',''ShowModelResetPorts'',''off'');set_param(''{0}'',''ShowModelReinitializePorts'',''off'');set_param(''{0}'',''ShowModelPeriodicEventPorts'',''off'');</cmd>
               <txt>Consider clearing Model block dialog parameters to disable all model event input ports.</txt>
               </action>
      </actions>]]>
    </entry>
    <entry key="ConstTsMdlBlkCannotHaveEventPorts">The Model block ''{0}'' cannot have any 'Model events simulation' parameter selected, because it has a constant sample time.
    <![CDATA[
      <actions exclusiveFixIts="yes">
        <action type="fixit">
          <cmd>set_param_action(''{0}'', ''ShowModelInitializePort'', ''off'');set_param_action(''{0}'', ''ShowModelTerminatePort'', ''off'');set_param_action(''{0}'', ''ShowModelResetPorts'', ''off'');set_param_action(''{0}'',''ShowModelReinitializePorts'',''off'');set_param_action(''{0}'', ''ShowModelPeriodicEventPorts'', ''off'');</cmd>
          <txt>Consider clearing all 'Model events simulation' parameters on Model block ''{0}''.</txt>
        </action>
      </actions>
    ]]>
    </entry>
    <entry key="InvalidMdlEventSettingForTsIndependentRefMdl">Model block ''{0}'' has 'Model events simulation' settings that cannot be supported because the referenced model ''{1}'' is sample time independent and the Model block does not have periodic sample time on any of its input or output ports besides the Initialize, Reset, Reinitialize, or Terminate ports. Consider one of the following options:
    <![CDATA[
      <actions exclusiveFixIts="yes">
        <action type="fixit">
          <cmd>set_param_action(''{0}'', ''ShowModelPeriodicEventPorts'', ''on'');</cmd>
          <txt>Turn on parameter ''Schedule rates'' on Model block ''{0}''.</txt>
        </action>
        <action type="fixit">
          <cmd>set_param_action(''{0}'', ''ShowModelInitializePort'', ''off'');set_param_action(''{0}'', ''ShowModelTerminatePort'', ''off'');set_param_action(''{0}'', ''ShowModelResetPorts'', ''off'');set_param_action(''{0}'', ''ShowModelReinitializePorts'', ''off'');</cmd>
          <txt>Turn off Initialize, Reset, Reinitialize, and Terminate ports on Model block ''{0}''.</txt>
        </action>
      </actions>
    ]]>
    </entry>    
    
    <entry key="FcnCallAdaptMdlInvalidSpecPartitionsTitle">When Model block ''{0}'' has the 'Schedule Rates' parameter selected and 'Schedule Rates With' set to ''Ports'', each discrete rate and partition inside the referenced model must be specified on the Model dialog.  If there are no partitions in the referenced model, specify this information as either a vector of periods or 2-D matrix of period and offsets.  If there are partitions it must be specified as 2-D cell array of partition name, period and offset. The periods must be non-empty and real, and be monotonically non-decreasing.</entry>
    <entry key="FcnCallAdaptMdlInvalidSpecEmpty">The specified rate is empty.</entry>
    <entry key="FcnCallAdaptMdlInvalidSpecNot2DArray">Rate information is not a 2 dimensional numeric.</entry>
    <entry key="FcnCallAdaptMdlInvalidSpecNot2DArrayPartitions">Rate information is not a 2 dimensional numeric or cell array.</entry>
    <entry key="FcnCallAdaptMdlInvalidSpecNotValidCellArray">Rate information specified as 2-D cell array should have partition names as first column, periods as second column and optionally offsets as third column.</entry>
    
    <entry key="FcnCallAdaptMdlInvalidSpecNotCharPartitions">Partition name of row {0} of cell array is not of type character.</entry>
    <entry key="FcnCallAdaptMdlInvalidSpecNotNumeric">Numeric array rate information is either not finite real or not of double type.</entry>
    <entry key="FcnCallAdaptInvalidSpecPeriodNotPositive">The element {0} sample time {1} is not positive.</entry>
    <entry key="FcnCallAdaptInvalidSpecPeriodNotIncreasing">The element {0} sample time {1} is not larger than element {2} sample time {3}.</entry>
    <entry key="FcnCallAdaptInvalidSpecPeriodNotNonDecreasing">The element {0} sample time period {1} is smaller than element {2} sample time period {3}.</entry>
    <entry key="FcnCallAdaptInvalidSpecOffsetNotPositive">The element {0} sample time offset {1} is not positive.</entry>
    <entry key="FcnCallAdaptMdlInvalidSpecOffsetNotSmallerThanPeriod">The element {0} sample time has period {1} smaller than or equal to the sample time offset {2}.</entry>
    <entry key="FcnCallAdaptMdlInvalidSpecTsNotStrictlyIncreasing">When the sample time periods are equal, the sample time offsets must be strictly increasing. The element {0} sample time period {1} is equal to element {3} sample time period, but element {0} sample time offset {2} is smaller than or equal to the element {3} sample time offset {4}.</entry>
    <entry key="UnsupportedBlkForProtectedModelRefPeriodicEventPort">The parameter ''Schedule rates with'' cannot be set to ''Ports'' for the Model block ''{0}'' because the protected referenced model ''{1}'' contains an unsupported block.</entry>
    <entry key="UnsupportedBlkListForModelRefPeriodicEventPort">The parameter ''Schedule rates with'' cannot be set to ''Ports'' for the Model block ''{0}'' because the referenced model ''{1}'' contains the following unsupported block(s):</entry>
    <entry key="ModelRefPeriodicEventPortDeterministicRTB">Rate Transition block ''{0}'' cannot have the parameter 'Ensure deterministic data transfer (maximum delay)' selected.
      <![CDATA[<actions exclusiveFixIts="yes">
        <action type="fixit">
          <cmd>set_param(''{0}'',''Deterministic'',''off'')</cmd>
          <txt>Suppress this message by clearing the parameter ''Ensure deterministic data transfer (maximum delay)''.</txt>
        </action>
      </actions>]]>
    </entry> 
    <entry key="ModelRefPeriodicEventPortAutoDeterministicRTB">The referenced model ''{0}'' is configured to automatically handle rate transition. This results in deterministic data transfer at some location, which is not supported.
      <![CDATA[<actions exclusiveFixIts="yes">
        <action type="fixit">
          <cmd>configset.internal.fixIt(''{0}'',''InsertRTBMode'',''Never (minimum delay)'')</cmd>
          <txt>Suppress this message by setting the parameter ''Deterministic data transfer'' to ''Never (minimum delay)''.</txt>
        </action>
      </actions>]]>
    </entry> 
    <entry key="ModelRefPeriodicEventPortMultiRateSubsystem">Subsystem ''{0}'' contains multiple rates. Only atomic subsystem can have multiple rates.</entry>
    <entry key="ModelRefPeriodicEventPortMultiRateBlock">Multirate block ''{0}'' is not supported.</entry>
    <entry key="ModelRefPeriodicEventPortMultiRateModelBlock"><![CDATA[Multirate Model block ''{0}'' is not supported unless Configuration Parameter <sldiag objui="configset" objparam="EnableRefExpFcnMdlSchedulingChecks">'Enable strict scheduling checks for referenced models'</sldiag> of ''{1}'' is selected.
    <actions exclusiveFixIts="yes">
      <action type="fixit">
        <cmd>configset.internal.fixIt(''{1}'', ''EnableRefExpFcnMdlSchedulingChecks'', ''on'')</cmd>
        <txt>To disable this error message, select the parameter <sldiag objui="configset" objparam="EnableRefExpFcnMdlSchedulingChecks">'Enable strict scheduling checks for referenced models'</sldiag>, and make sure sample time of each function-call signal driving the corresponding function-call input port of Model block ''{0}'' matches the specification.</txt>
      </action>
    </actions>]]>
    </entry>
    <entry key="ModelRefPeriodicEventPortProtectedModelBlock">Protected Model block ''{0}'' contains an unsupported block.</entry>
    <entry key="ModelRefPeriodicEventPortTriggeredRateElapsedTimeBlock1">Inside the model referenced by Model block ''{0}'', it contains block ''{1}'' with a triggered sample time that needs elapsed time. In this case, the function-call signal to input port of Model block must match its specification. However, input port ''{2}'' of the Model block has specified the sample time of {3}, but the function-call initiator ''{4}'' has a different sample time of {5}.</entry>
    <entry key="ModelRefPeriodicEventPortTriggeredRateElapsedTimeBlock2">
      <![CDATA[Block ''{2}'' that needs elapsed time cannot have a triggered sample time, when top level model ''{3}'' simulates in normal mode, and it contains Model block ''{0}'' that sets its dialog parameter <sldiag objui="blockdlg" objparam="SimulationMode">''Simulation mode''</sldiag> to ''Normal'', while the other Model block ''{1}'' in its model reference hierarchy sets its dialog parameter <sldiag objui="blockdlg" objparam="SimulationMode">''Simulation mode''</sldiag> to ''Accelerator''. Consider one of the following to fix it:
      <actions exclusiveFixIts="yes">
      <action type="fixit">
        <cmd>set_param_action(''{0}'', 'SimulationMode', 'Accelerator');</cmd>
        <txt>Set ''{0}'' dialog parameter <sldiag objui="blockdlg" objparam="SimulationMode">''Simulation mode''</sldiag> to ''Accelerator''.</txt>
      </action>
      <action type="suggestion">
        <txt>Set ''{1}'' dialog parameter <sldiag objui="blockdlg" objparam="SimulationMode">''Simulation mode''</sldiag> to ''Normal'' or ''Software-in-the-loop (SIL)''.</txt>
      </action>
      <action type="suggestion">
        <txt>Change simulation mode of model ''{2}'' to another option but not ''Normal''.</txt>
      </action>
      </actions>]]>
    </entry>
    <entry key="IOEventPortMismatchNotificationBar_ModelVariants">The Model block ''{0}'' does not show the event input ports because it has been configured to use variant conditions.</entry>
    <entry key="IOMismatchNumProps">The Model block ''{0}'' has a different set of "{1}" than the model it is referencing ''{2}''.</entry>
    <entry key="PeriodicEventPortMismatchNotificationBar_NonExpFcn">
      <![CDATA[The Model block ''{0}'' does not show periodic event input ports because referenced model ''{1}'' is an <a href="matlab:helpview([docroot ''/toolbox/simulink/helptargets.map''], ''export_function_models'')">export-function model</a>.]]>
    </entry>
    <entry key="PeriodicEventPortMismatchNotificationBar_PriorTo16b">
      <![CDATA[The Model block ''{0}'' does not show periodic event input ports because referenced model ''{1}'' is an <a href="matlab:helpview([docroot ''/toolbox/simulink/helptargets.map''], ''export_function_models'')">export-function model </a> saved in R2016a or earlier. Dialog parameter <sldiag objui="blockdlg" objparam="ShowModelPeriodicEventPorts">Schedule rates</sldiag> parameter on the Model block has been cleared. Alternatively, consider resaving referenced model ''{1}'' to the latest version.]]>
    </entry>
    <entry key="PeriodicEventPortAutoUpdateNotificationBar">
      <![CDATA[The Model block ''{0}'' has dialog parameter <sldiag objui="blockdlg" objparam="ShowModelPeriodicEventPorts">Schedule rates</sldiag> selected. Periodic event input ports will be added when updating the block diagram.]]>
    </entry>
    <entry key="IOMismatchReinitPortNames">The Model block ''{0}'' has a different set of Reinitialize port names than the model it is referencing ''{1}''.</entry>
    <entry key="IOMismatchResetPortNames">The Model block ''{0}'' has a different set of Reset port names than the model it is referencing ''{1}''.</entry>
    <entry key="IOMismatchOutputBusName"><![CDATA[<sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">Output port {0,number,integer}</sldiag> of Model block ''{1}'' is using bus object "{2}" and is referencing model ''{3}''. The output port {4,number,integer}, of the referenced model, is using bus object "{5}".]]></entry>
    <entry key="IOMismatchOutputNames"><![CDATA[<sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">Output port {0,number,integer}</sldiag> of Model block ''{1}'' has a name of "{2}" and is referencing model ''{3}''. The output port {4,number,integer}, of the referenced model, has a name of "{5}".]]></entry>
    <entry key="IOMismatchOutputSigName"><![CDATA[<sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">Output port {0,number,integer}</sldiag> of Model block ''{1}'' has a signal label of "{2}" and is referencing model ''{3}''. The output port {4,number,integer}, of the referenced model, has a signal label of "{5}".]]></entry>
    <entry key="IOMismatchOutputUnitExpr"><![CDATA[<sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">Output port {0,number,integer}</sldiag> of Model block ''{1}'' has a unit expression of "{2}" and is referencing model ''{3}''. The output port {4,number,integer}, of the referenced model, has a unit expression of "{5}".]]></entry>
    <entry key="IOMismatchParamArgs">The Model block ''{0}'', which has the parameter arguments "{1}", is referencing model ''{2}'', which has parameter arguments "{3}".</entry>
    <entry key="IOMismatchTrigName">The Model block ''{0}'' has a trigger port with the name "{1}" and is referencing model ''{2}''. The trigger port of the referenced model has the name "{3}".</entry>
    <entry key="IOMismatchEnableName">The Model block ''{0}'' has an enable port with the name "{1}" and is referencing model ''{2}''. The enable port of the referenced model has the name "{3}".</entry>
    <entry key="IOMismatchTrigType">The Model block ''{0}'' has a trigger port with the Trigger type "{1}" and is referencing model ''{2}''. The trigger port of the referenced model has the Trigger type "{3}".</entry>
    <entry key="IllegalModelRefName">The Model block ''{0}'' is trying to reference a model that has a name longer than {1,number,integer} characters.  Please enter a valid model name.</entry>
    <entry key="InvFcnCallMdlRefOutputConn">The diagnostic ''Invalid root Inport/Outport block connection'' option on the ''Model Referencing'' group of the Diagnostics page of the Configuration Parameters dialog has been overridden to warning because this model contains function-call trigger port at the root level. To avoid this warning, please insert a Signal Conversion block immediately before the root outport blocks described above. Ensure that the ''Exclude this block from ''Block reduction'' optimization'' flag is turned on for these Signal Conversion blocks.</entry>
    <entry key="InvSolverType">Variable-step solver type of model "{0}" is not compatible with the fixed-step solver type of model "{2}" referenced by Model block "{1}" because this model has both discrete and continuous sample times. Solver "Type" settings must be compatible throughout the model hierarchy.
			<![CDATA[                                                                                                       
            <actions exclusiveFixIts="yes">                                                                             
                <action type="fixit">                                                                                   
                    <cmd>Simulink.ModelReference.internal.ModelRefFixes(''SolverTypeChangeSubModel'',''{0}'', ''{2}'')</cmd>                    
                    <txt>Set solver "Type" parameter of referenced model "{2}" to "Variable-step".</txt>                                          
                </action>                                                                                                
                <action type="fixit">                                                                                   
                    <cmd>Simulink.ModelReference.internal.ModelRefFixes(''SolverTypeChangeParentModel'',''{0}'', ''{2}'')</cmd>                    
                    <txt>Set solver "Type" parameter of parent model "{0}" to "Fixed-step".</txt>                                          
                </action>                                                                                                
            </actions> 			
        ]]> 
	</entry>
    <entry key="ModelNameIsDefaultName">You have not entered a referenced model name. Please specify a model to open.</entry>
    <entry key="InvalidContinuousSampleTime">The Model block ''{0}'' cannot inherit a continuous or fixed-in-minor-step sample time.  
    On the Configuration Parameters > Solver page for the referenced model ''{1}'', either set the Type parameter to ''Variable-step'' or 
    set Type to ''Fixed-step'' and the Fixed-step size (fundamental sample time) parameter to a value other than ''Auto''. </entry>
    <entry key="InvalidConstantSampForMdlrefInputPort">Input ports of a Model block cannot be constant. Input port ''{0}'' of Model block ''{1}'' cannot accept a constant sample time.</entry>
    <entry key="InvalidContinuousSampForMdlrefOnInput">
        <![CDATA[
            Model block ''{1}'' is unable to inherit the continuous or fixed-in-minor-step sample time at <sldiag objui="inport" objparam="{0,number,integer}" objname="{1}">input port {0,number,integer}</sldiag> because the model block is sample-time independent.
            <actions exclusiveFixIts="yes">
                <action type="suggestion" id="MdlRefSetSolverTypeVarStep">
                    <cmd>configset.internal.open(''{2}'',''SolverType'')</cmd>
                    <txt>In referenced model ''{2}'', set configuration parameter ''SolverType'' to ''Variable-step''.</txt>
                </action>
                <action type="suggestion" id="MdlRefSetFixedStepValue">
                    <cmd>configset.internal.open(''{2}'',''FixedStep'')</cmd>
                    <txt>In referenced model ''{2}'', set configuration parameter ''FixedStep'' to a value other than ''auto''.</txt>
                </action>
                <action type="suggestion" id="MdlRefSetNoninheritSampleTime">
                    <txt>Specify a noninherited sample time for block <sldiag objui="inport" objparam="{0,number,integer}" objname="{1}">input port {0,number,integer}</sldiag>.</txt>
                </action>
            </actions>
                ]]>
    </entry>
    <entry key="InvalidContinuousSampForMdlrefOnOutput">
        <![CDATA[
            Model block ''{1}'' is unable to inherit the continuous or fixed-in-minor-step sample time at <sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">output port {0,number,integer}</sldiag> because the model block is sample-time independent.
            <actions exclusiveFixIts="yes">
                <action type="suggestion" id="MdlRefSetSolverTypeVarStep">
                    <cmd>configset.internal.open(''{2}'',''SolverType'')</cmd>
                    <txt>In referenced model ''{2}'', set configuration parameter ''SolverType'' to ''Variable-step''.</txt>
                </action>
                <action type="suggestion" id="MdlRefSetFixedStepValue">
                    <cmd>configset.internal.open(''{2}'',''FixedStep'')</cmd>
                    <txt>In referenced model ''{2}'', set configuration parameter ''FixedStep'' to a value other than ''auto''.</txt>
                </action>
                <action type="suggestion" id="MdlRefSetNoninheritSampleTime">
                    <txt>Specify a noninherited sample time for block <sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">output port {0,number,integer}</sldiag>.</txt>
                </action>
            </actions>
            ]]>
    </entry>
    <entry key="InvalidInportDTypeForMdlRef">Invalid root Inport block data type. Data type of root Inport block ''{0}'' in model ''{1}'' is ''{2}''. This data type is not supported for referenced models; data types must be builtin, fixed-point, string, or registered from Simulink.DataType or Simulink.Bus objects.</entry>
    <entry key="InvalidMdlRefPhase">Unable to update, simulate, or generate code for the model hierarchy with model ''{0}'' as the top model because referenced model ''{1}'' is in the compilation phase of simulation.
        <![CDATA[
            <actions exclusiveFixIts="yes">
            <action type="fixit">
                <cmd>Simulink.ModelReference.internal.ModelRefFixes(''InvalidMdlRefPhaseMdlName'',''{1}'')</cmd>
                <txt>Terminate compilation of referenced model ''{1}'' that was started using the model name as a function.</txt>
            </action>
            <action type="fixit">
                <cmd>Simulink.ModelReference.internal.ModelRefFixes(''InvalidMdlRefPhaseSimCmd'',''{1}'')</cmd>
                <txt>Stop simulation of referenced model ''{1}'' using the ''SimulationCommand'' model parameter.</txt>
            </action>
            <action type="fixit">
                <cmd>Simulink.ModelReference.internal.ModelRefFixes(''InvalidMdlRefPhaseFastRst'',''{1}'')</cmd>
                <txt>Disable fast restart of referenced model ''{1}'' using the ''FastRestart'' model parameter.</txt>
            </action>
            </actions>
        ]]>
        </entry>
    <entry key="InvalidMdlRefPhaseMdlNameFixed">Executed command eval([''{0}'' '([], [], [], ''''term'''')'])</entry>
    <entry key="InvalidMdlRefPhaseSimCmdFixed">Executed command set_param(''{0}'', 'SimulationCommand', 'stop')</entry>
    <entry key="InvalidMdlRefPhaseFastRstFixed">Executed command set_param(''{0}'', 'FastRestart', 'off')</entry>
    <entry key="InconsistentMdlrefFrameDiagnosticsSettings">When the 'Block behavior depends on frame status of signal' parameter under Model Configuration parameters->Diagnostics->Compatibility for ''{0}'' is set to 'error', the referenced model ''{1}'' must have the 'Block behavior depends on frame status of signal' parameter set to 'error' as well.</entry>
    <entry key="InvalidMinAlgAndCmbOutputUpdate"><![CDATA[Invalid settings when generating model reference code for model ''{0}''.  
      <sldiag objui="configset" objparam="ModelReferenceMinAlgLoopOccurrences">Minimize artificial algebraic loop occurrences</sldiag> and <sldiag objui="configset" objparam="CombineOutputUpdateFcns">Single output/update function</sldiag> cannot be set at the same time.]]></entry>
    <entry key="InvalidModelrefName">Invalid model name ''{0}'' specified at Model block ''{1}''. Model name must be a valid MATLAB identifier.</entry>
    <entry key="InvalidOutportDTypeForMdlRef">Invalid root Outport block data type. Data type of root Outport block ''{0}'' in model ''{1}'' is ''{2}''. This data type is not supported for referenced models; data types must be built-in, fixed-point, string, or registered from Simulink.DataType or Simulink.Bus objects.</entry>
    <entry key="InvalidTarget">Invalid model reference target. Block ''{0}'' is referencing model ''{1}''. The number of input and output ports of the model and the model reference target does not match. This indicates that the model reference target of model ''{2}'' is not up to date.</entry>
    <entry key="InvalidVariantName">The variant control ''{0}'' specified in the Model block ''{1}'' is invalid. It must be a condition expression or a valid variant object name.</entry>
    <entry key="ConstAndParamChangeEventSampleTimeOutputError"> Constant sample time at Model block ''{0}'' output is not supported because the Model block is configured to show the initialize port.
         <![CDATA[
            <actions exclusiveFixIts="yes">
              <action type="fixit">
                  <cmd>set_param(''{0}'',''ShowModelInitializePort'',''off'');</cmd>
                  <txt>Consider clearing Model block parameter ''Show model initialize port''.</txt>
              </action>
            </actions>
        ]]>
    </entry>   
    <entry key="ErrorModelRefVariantVariable">Unable to simulate model block ''{0}'' having Simulink.VariantVariable ''{1}'' with Simulink.VariantControl as model argument. </entry>
    <entry key="NoDiscreteInitialStatesForCodeGen">Initial state loading is not
    supported for discrete states in referenced models for code generation or
    Rapid Accelerator.  Initial states for such blocks are ignored.  One block
    for which a given initial state is ignored is ''{0}''.</entry>

    <entry key="ModelArgumentCouldNotBeSetNoPath">Could not set the model
    argument {0} on Model block ''{1}'' because no argument exists with that
    name.</entry>


    <entry key="ModelArgumentCouldNotBeSetWithPath">Could not set the model
    argument {0} promoted from {1} on Model block {2} because no argument exists
    with that name.</entry>

    <entry key="InstParam_InvalidStructureArray">To set model parameters, use a structure array with fields 'Name', 'Value', 'FullPath', and 'Argument'.</entry>
    <entry key="InstParam_NameFieldShouldBeChar">The 'Name' field must be a character vector.</entry>
    <entry key="InstParam_FullPathMustBeSimulinkPathOrEmptyString">The 'FullPath' field must be a Simulink.BlockPath object or an empty string.</entry>
    <entry key="InstParam_ParameterContainsInvalidItems">Unrecognized parameter name ''{0}'' for block ''{1}''.</entry>
    <entry key="InstParam_ArgumentFieldMustBeLogical">The 'Argument' field must be a logical value.</entry>
    <entry key="InstParam_ArgumentCheckBoxInLibrary">Exposing argument ''{0}'' to parent models is not supported when Model block ''{1}'' is inside a library or subsystem file.</entry>
    <entry key="InstParam_RepromotedArgsCannotBeExportedAsMDL">Unable to export model ''{0}'' in the MDL file format because Model block ''{1}'' contains instance parameters.</entry>
    <entry key="InstParam_ArgumentCheckBoxChangedDuringSimulating">Changing Argument check box selection for Model block ''{0}'' instance parameters during simulation is not supported.</entry>
    <entry key="InstParam_PromotedArgumentValueChangedDuringSimulating">Changing Model block ''{0}'' instance parameter value during simulation is not supported when the instance parameter is selected as an argument.</entry>
    <entry key="InstParam_ModelContainsPromotedInstParam">Model block ''{0}'' contains instance parameters that the referenced model workspace does not define. Use Model block parameter ''InstanceParameters''.</entry>

    <entry key="ModelArgumentIncorrectValues"><![CDATA[The second value to
    Simulink.ModelReference.internal.setModelBlockArguments must be a structure
    array with three fields, 'Name', 'Path', and 'Value' where:
    <UL>
     <LI>'Name' is the name of the model argument.</LI>
     <LI>'Path' should be a Simulink.BlockPath object for a promoted grouped model argument
          and empty otherwise.</LI>
     <LI>'Value' is the new value for the model argument, given as a character vector.</LI>
    </UL>]]></entry>

    

    <entry key="InvalidParameterArgumentValuesList">The value of the model
    arguments for Model block ''{0}'' must be a cell array of character
    vectors.</entry>

    <entry key="CouldNotParseParameterArgumentValue">The value ''{0}'' of model
    argument {1,number,integer} on Model block ''{2}'' could not be
    parsed.</entry>

    <entry key="CouldNotParseNamedParameterArgumentValue">The value ''{0}'' of
    model argument {1} on Model block ''{2}'' could not be parsed.</entry>

    <entry key="MultipleValueParameterArgumentValue">The value ''{0}'' of model
    argument {1,number,integer} on Model block ''{2}'' must be an empty or a
    single value, but {3,number,integer} values were found.</entry>

    <entry key="MultipleValueNamedParameterArgumentValue">The value ''{0}'' of
    model argument {1} on Model block ''{2}'' must be an empty or a single value,
    but {3,number,integer} values were found.</entry>

    <entry key="ParameterArgumentValueWithComment">The value ''{0}'' of model
    argument {1,number,integer} on Model block ''{2}'' cannot contain a
    comment.</entry>

    <entry key="NamedParameterArgumentValueWithComment">The value ''{0}'' of
    model argument {1} on Model block ''{2}'' cannot contain a comment.</entry>

    <entry key="CouldNotParseParameterArgumentValues">The value ''{0}'' of
    ParameterArgumentValues on Model block ''{1}'' could not be parsed.</entry>

    <entry key="ParameterArgumentValuesWithComment">The value ''{0}'' of
    ParameterArgumentValues on Model block ''{1}'' cannot contain a
    comment.</entry>

    <entry key="ParameterArgumentValuesStructIsNotAScalar">When setting
    ParameterArgumentValues on Model block ''{0}'' using a struct, the struct
    must be scalar.</entry>

    <entry key="ParameterArgumentValuesContainsInvalidParameter">One field of
    the struct used to specify ParameterArgumentValues on Model block ''{0}'' is
    named ''{1}'', which is not the name of a model argument on this Model
    block.</entry>

    <entry key="ParameterArgumentValuesIsNotAString">The value for model
    argument for Model block ''{0}'' must be a character vector.</entry>

    <entry key="NamedParameterArgumentValuesIsNotAString">The value for model
    argument ''{0}'' for Model block ''{1}'' must be a character vector.</entry>

    <entry key="ParameterArgumentValuesDimensionInvalid">Value for model argument
    for Model block ''{0}'' must be a 1-by-n string array or a 1-by-n cell array of character vectors.</entry>

    <entry key="ParameterArgumentValuesStringTrailingOrLeadingComma">Default value for a model argument
    must be specified by using '' in a 1-by-n string array, 1-by-n cell array of character vectors, or a struct.</entry>

    <entry key="ParameterArgumentValuesSetWithErrorDatatype">The value of
    ''ParameterArgumentValues'' on Model block ''{0}'' must be a character vector or a
    struct.</entry>

    <entry key="ParameterArgumentValuesSetWithErrorDatatype_String">The value of
    ''ParameterArgumentValues'' on Model block ''{0}'' must be a character vector.</entry>

    <entry key="ParameterArgumentIsAccessedByParameterWriter"> The value for model argument ''{1}''
    for Model block ''{0}'' cannot be changed during simulation because it has been locked for
    access by Parameter Writer block ''{2}''.</entry>

    <entry key="MustUseStructWithUnorderedModelArguments"><![CDATA[ Model block ''{0}'' references
    model ''{1}'' and the model arguments of the referenced model were last edited in a way that did
    not provide an order to the model arguments. To set the values of the model arguments of the
    Model block you must either:\n

    * Use a struct for the value of the Model block parameter ''ParameterArgumentValues''. The
    struct must have fields whose names are the names of the model arguments and whose values are
    the character vector representation of the desired value for that model argument.\n

    * Use the block diagram parameter ''ParameterArgumentNames'' to provide an order for the model
    arguments of the referenced model.]]></entry>

    <entry key="RefreshRequiresModelBlock">Argument must be a Model block specified as a numeric handle or character vector.</entry>
   
    <entry key="MRV_InvalidObjectName">''{0}'' is not a valid name for a variant object.</entry>

    <entry key="slInternal_invalidArg_ModelBlockHandle">This slInternal call
    takes a single argument, which must be the handle to a Model block.</entry>
    
    <entry key="GroupedArg_ParamArgValueCannotbeChangedDuringSim">Unable to change
    parameter 'ParameterArgumentValues' of Model block ''{0}'' during simulation
    because it has instance parameters.</entry>
    <entry key="FcnCallAdaptMultiRateModelInSTasking1">
        When Model block ''{0}'' has ''Schedule rates'' check box selected, it cannot reference a multirate model ''{1}'' that has the 'Configuration Parameters' > 'Solver' > 'Treat each discrete rate as a separate task' check box cleared.
        <![CDATA[
            <actions exclusiveFixIts="yes">
                <action type="fixit" id="EnableMultiTasking">
                    <cmd>configset.internal.fixIt(''{1}'',''EnableMultiTasking'',''on'')</cmd>
                    <txt>Set <sldiag objui="configset" objparam="EnableMultiTasking">EnableMultiTasking</sldiag> to ''on''.</txt>
                </action>
            </actions>
        ]]>
    </entry>
    <entry key="FcnCallAdaptMultiRateModelInSTasking2">
        When Model block ''{0}'' has ''Schedule rates'' check box selected, it cannot reference a model ''{1}'' that has the 'Configuration Parameters' > 'Solver' > 'Type' parameter set to 'Variable-step'.
        <![CDATA[
            <actions exclusiveFixIts="yes">
                <action type="fixit" id="EnableFixedStepMultiTasking">
                    <cmd>set_param_action(''{1}'',''SolverType'',''Fixed-step'',''EnableMultiTasking'',''on'');</cmd>
                    <txt>Set <sldiag objui="configset" objparam="SolverType">SolverType</sldiag> to ''Fixed-step'' and <sldiag objui="configset" objparam="EnableMultiTasking">EnableMultiTasking</sldiag> to ''on''.</txt>
                </action>
            </actions>
        ]]>
    </entry>
    <entry key="SWComponentRefMultiRateModelInSTasking">
        In software architecture model ''{2}'', the reference component ''{0}'' cannot reference a multirate model ''{1}'' that has the 'Configuration Parameters' > 'Solver' > 'Treat each discrete rate as a separate task' check box cleared.
        <![CDATA[
            <actions exclusiveFixIts="yes">
                <action type="fixit" id="EnableMultiTasking">
                    <cmd>configset.internal.fixIt(''{1}'',''EnableMultiTasking'',''on'')</cmd>
                    <txt>Set <sldiag objui="configset" objparam="EnableMultiTasking">EnableMultiTasking</sldiag> to ''on''.</txt>
                </action>
            </actions>
        ]]>
    </entry>
    <entry key="MRateSTaskingInMTasking">When multirate model ''{0}'' has ''Configuration Parameters > Solver > Treat each discrete rate as a separate task'' selected, 
    multirate referenced model ''{1}'', which Model block ''{2}'' references, must also have ''Treat each discrete rate as a separate task'' selected.\n
      <![CDATA[
            <actions exclusiveFixIts="yes">
                <action type="fixit" id="DisableTopModelToMultiTasking">
                    <cmd>set_param_action(''{0}'', 'EnableMultiTasking', 'off');</cmd>
                    <txt>Clear ''Treat each discrete rate as a separate task'' on model ''{0}''.</txt>
                </action>
                
                <action type="fixit" id="EnableRefModelToMultiTasking">
                    <cmd>set_param_action(''{1}'', 'EnableMultiTasking', 'on');</cmd>
                    <txt>Select ''Treat each discrete rate as a separate task'' on model ''{1}''.</txt>
                </action>
            </actions>
        ]]>  
    </entry>
    <entry key="FcnCallMTaskingInSTasking">
      The single-tasking model ''{0}'' cannot reference a multirate multi-tasking model ''{1}'' which contains function call input ports via the Model block ''{2}''.
      <![CDATA[
            <actions exclusiveFixIts="yes">
                <action type="fixit" id="SetTopModelToMultiTasking" retvalue="false">
                    <cmd>set_param_action(''{0}'', 'Solver', 'FixedStepDiscrete');set_param_action(''{0}'', ''SolverMode'', ''MultiTasking'');</cmd>
                    <txt>Configure model ''{0}'' to execute in fixed step multi-tasking mode.</txt>
                </action>
            </actions>
        ]]>
    </entry>
    <entry key="MdlRefCannotLogStatesNoCAPI">The states in model ''{0}'' cannot be logged because the model has Model blocks with states. 
      The specified code generation target does not support state logging for model reference.</entry>
    <entry key="MdlRefCannotSaveWhenCompiled">Unable to save model ''{0}''. This model is being compiled and it contains Model blocks that need to be refreshed before saving the model. Please stop model compilation/simulation before saving the model.</entry>
    <entry key="MdlRefContainsAlgebraicLoop">Referenced model ''{0}'' contains an algebraic loop. Referenced models do not support algebraic loops.</entry>
    
    <entry key="MdlRefGlobalVariableClash">Global variable ''{0}'' is used in incompatible ways in the following two Model blocks: ''{1}'' and ''{2}''.  The variable must have the same attributes in all contexts.</entry>
    <entry key="MdlRefHardwareSettingsMismatchStrWithNames"><![CDATA[The setting for the property ''{0}'' is ''{1}'' for the parent model ''{2}'' and ''{3}'' for the referenced model <a href="matlab:open_system(''{4}'')">{4}</a>. This setting must match between the parent model and the referenced model.]]></entry>
    <entry key="MdlRefIgnoreTunableParamTable">Ignoring settings in the tunable parameters table for model ''{0}'' because it references or is referenced by another model. Run tunablevars2parameterobjects to create parameter objects with the storage class information from the tunable parameters table.</entry>
    <entry key="MdlRefInconsistentOptimSettingsStr">Value of configuration parameter ''{0}'' must match between parent model ''{2}'' and model ''{3}'' referenced by Model block ''{4}''. The parent model uses a value of ''{5}'', and the referenced model uses a value of ''{6}''.
    <![CDATA[
      <actions exclusiveFixIts="no">
        <action type="suggestion">
          <cmd>configset.internal.open(''{2}'', ''{1}'')</cmd>
          <txt>Set configuration parameter ''{0}'' to ''{6}'' for ''{2}''.</txt>
        </action>
        <action type="suggestion">
          <cmd>configset.internal.open(''{3}'', ''{1}'')</cmd>
          <txt>Set configuration parameter ''{0}'' to ''{5}'' for ''{3}''.</txt>
        </action>
      </actions>
    ]]>
    </entry>
    <entry key="MdlRefInconsistentStartTime">Error in Model block ''{0}'': the ''Start time'' must match between the parent model ''{1}'' 
      and the referenced model ''{2}''.  The parent model has a value of ''{3}'', while the referenced model has a value of ''{4}''.  To 
      change this parameter, go to the ''Solver'' page of the Configuration Parameters dialog.  Note that the ''Start time'' that is used 
      for a model is adjusted to fall exactly on a sample hit.  Set the parameter ''Configuration Parameters > Diagnostics > Automatic solver
      parameter selection'' to either ''warning'' or ''error'' to be notified when Simulink adjusts the ''Start time''.</entry>
    <entry key="MdlRefInconsistentDateTimeAtTZero">Error in Model block ''{0}'': the ''DateTime at simulation time zero'' must match between the parent model ''{1}'' 
      and the referenced model ''{2}''.  The parent model has a value of ''{3}'', while the referenced model has a value of ''{4}''.  To 
      change this parameter, go to the ''Solver'' page of the Configuration Parameters dialog.</entry>
    <entry key="MdlRefInvFcnCallCycle"><![CDATA[The model ''{0}'' referenced by the Model block ''{1}'' is directly connected to 
      <sldiag objui="inport" objparam="{2,number,integer}" objname="{3}">input port {2,number,integer}</sldiag> of the function-call block ''{3}''. This input port depends on the output(s) of the same system, 
      which means the inputs to the Model block may not remain fixed over the duration of the function-call.  This may also cause results 
      from generated code to be different than simulation results.  Consider using the ''Latch input for feedback signals 
      of function-call subsystem outputs'' option on the inport ''{4}''.]]></entry>
    <entry key="MdlRefInvSimCommand">The model ''{0}'' is referenced in normal mode and the SimulationCommand was set to ''{1}'' while it is compiling. It is not valid to set the SimulationCommand to any other value than ''Stop'' while it is compiling.</entry>
    <entry key="MdlRefInvalidAdd">Model block ''{0}'' was added during block parameter evaluation. Model blocks and their parameters should not be modified in block callbacks.</entry>
    <entry key="MdlRefInvalidCallFromGeneratedCode">The noninlined S-function ''{0}'' in a referenced model is not allowed to call macros that use the generic function in the SimStruct. To find such macros, search for GenericFcn in simstruc.h.</entry>
    <entry key="MdlRefInvalidCallFromGeneratedCode_SigSelect">A noninlined S-function used in either a referenced model or the S-function Target is not allowed to use macros that access the selected signals in a model.  If such an S-function is being used to view the selected signals, the S-function should set the option SS_OPTION_SIM_VIEWING_DEVICE using ssSetOptions.</entry>
    <entry key="MdlRefInvalidDelete">One or more Model blocks were deleted during block evaluation parameter phase. Model blocks and their parameters should not be modified in block callbacks.</entry>
    <entry key="MdlRefInvalidModelNameChange">ModelName parameter of Model block ''{0}'' is changed after evaluating block parameters:\n  - before evaluating block parameters: {1},\n  - after evaluating block parameters:  {2}\n Model blocks and their parameters should not be modified in block callbacks.</entry>
    <entry key="MdlRefInvalidSimModeChange">SimulationMode parameter of Model block ''{0}'' is changed after evaluating block parameters:\n  - before evaluating block parameters: {1},\n  - after evaluating block parameters:  {2}\n Model blocks and their parameters should not be modified in block callbacks.</entry>
    <entry key="MdlRefStateSemanticsMismatch">Model block ''{0}'' is inside a synchronous environment, but the referenced model ''{1}'' does not use synchronous semantics. To fix this conflict, add a State Control block with synchronous semantics into the referenced model. </entry>
    <entry key="MdlRefConcurrentTasksSupportMismatch">Configuration mismatch for Model block ''{0}''.  The ''Allow tasks to execute concurrently on target'' check box on the Configuration Parameters > Solver pane  is set to ({3}) for parent model ''{1}'' and ({4}) for referenced model ''{2}''. Such mismatches are allowed only if the referenced model does not contain asynchronous sample times and one of the following is true:\n
     * The referenced model contains only a single periodic sample time.\n
     * The referenced model contains multiple periodic sample times. Since the parent model is enabled for explicit partitioning, Simulink satisfies the rate transition requirements with rate monotonic scheduling.</entry>
    <entry key="MdlRefDictionaryAssociationMismatchBWSRefByDD"><![CDATA[Error in Model block ''{0}''. Referenced model ''{1}'' is configured to use the base workspace. Parent model ''{2}'' is linked to dictionary ''{3}''. A referenced model must be linked to a dictionary if its parent model is linked to a dictionary. {4} to link ''{5}'' to a dictionary.]]></entry>
    <entry key="MdlRefDictionaryAssociationMismatchBWS"><![CDATA[Error in Model block ''{0}''. Referenced model ''{1}'' is configured to use the base workspace. It must be linked to dictionary ''{2}'' (used by ''{3}'') or a dictionary referenced by ''{4}''. {5} to link ''{6}'' to a dictionary.]]></entry>
    <entry key="MdlRefDictionaryAssociationMismatchBWSLink">Click here</entry>
    <entry key="MdlRefDictionaryAssociationMismatchDD"><![CDATA[Error in Model block ''{0}''. Dictionary ''{1}'' (used by ''{2}'') is missing a reference to dictionary ''{3}'' (used by ''{4}''). <a href="matlab:sl('linkDictToDict', ''{5}'', ''{6}'');">Click here</a> to automatically create this reference.]]></entry>
    
    <entry key="CPP11DWorkAccessFunctionNotAllowed">Set/Get Access will be generated for the model's DWorks inside the C++ class and an instance of a child model object will be nested inside a reusable subsystem DWork structure. This is not supported because the copy assignment operator required by the access methods has been deleted in the child model class. To resolve this error, change the 'Member Access Method' for internal data to be 'None'.</entry>
    <entry key="MdlRefNoninlinedSfcnNotReused">The S-function ''{0}'' has the option SS_OPTION_WORKS_WITH_CODE_REUSE set but either it does not have a ''{1}.tlc'' file or it does not set the SS_OPTION_USE_TLC_WITH_ACCELERATOR option to enable inlining for Model Reference. The system that it lives in will not be reused.</entry>
    <entry key="MdlRefNotAvailForLicense">The model ''{0}'' contains a Model block. Model blocks using Accelerator mode are not supported with this license. The Model block will run in Normal mode.</entry>
    
    <entry key="MdlRefPILInsideCondExecedSubsystem">The Model block ''{0}'' resides in the conditionally executed subsystem ''{1}'' and is either configured to use SIL or PIL simulation mode or is directly or indirectly referencing a model that contains a Model block using SIL or PIL simulation mode.  This configuration is not supported when the referenced model in SIL or PIL mode has multiple sample times or contains a block which requires absolute time support.</entry>
    <entry key="ModelRefBlockWithFcnCallAndAbsTimeCanNotHaveConstantSampleTime"> Constant sample time not supported by Model block ''{0}'' because the block has a function-call port and references a model with absolute or elapsed time.</entry>
    <entry key="MdlRefXILStdAloneInsideCondExecedSubsystem">The Model block ''{0}'' lies in a conditionally executed context (e.g. a triggered or enabled subsystem) and is configured for SIL or PIL simulation.   This is not supported when the Model block parameter "Code interface" is "Top model".   To avoid this error, either remove the Model block from its conditionally executed context or set "Code interface" to "Model reference".</entry>
    <entry key="MdlRefRTPOnlyIfInlined">Invalid run-time parameter registration in S-function ''{0}'' in model ''{1}''. An S-function can register run-time parameters only if the S-function is being inlined.  To be able to reference the model ''{2}'', the S-function ''{3}'' needs to set the option SS_OPTION_USE_TLC_WITH_ACCELERATOR and it needs to have a TLC file.</entry>
    <entry key="MdlRefRTWGeneratedSFcn">The block ''{0}'' is an S-function generated by Simulink Coder.  This is not supported in a referenced 
      model in accelerated mode or when generating code for a referenced model.</entry>

    <entry key="MdlRefSFcnDoesNotExist"><![CDATA[Unable to find model reference simulation target ''{0}''
    for model ''{2}'', which is referenced by Model block ''{1}''. This could be because the top
    model has <sldiag objui="configset" objparam="UpdateModelReferenceTargets">''Rebuild''</sldiag>
    set to ''Never''. Change the ''Rebuild'' setting and try again.]]></entry>

    <entry key="MdlRefSaveCanceled">Save operation was canceled</entry>
    <entry key="MdlRefSfcnJacobianNotSupportedWithSimTarget">Model reference simulation target does not support S-function ''{0}'' in ''{1}'' because the S-function contains a Jacobian method.</entry>    
    <entry key="MdlRefSfcnLevel1NotSupportedWithSimTarget">Model reference simulation target does not support S-function ''{0}'' in ''{1}'' because the S-function is a Level 1 S-function.</entry>
    <entry key="MdlRefSfcnNonInlinedInSimTarget">S-function ''{0}'' in ''{1}''  does not support inlining for model reference simulation target because the S-function source code does not set the SS_OPTION_USE_TLC_WITH_ACCELERATOR option.</entry>
    <entry key="MdlRefSfcnNotSupportedWithVStepSimTarget">Model reference simulation target does not support noninlined S-function ''{0}'' in ''{1}'' because the model is configured to use a variable-step solver.</entry>
    
    <entry key="MdlRefSfcnNotSupportedWithConstraints">Model reference simulation target does not support noninlined S-function ''{1}'' of S-Function block ''{0}'' because the S-function uses constraints.</entry>
       
    <entry key="MdlRefSolverParamZCControlMismatchWarn">Solver parameter ''Zero Crossing Control'' does not match between top model ''{0}'' and model ''{1}'' referenced by block ''{2}''. Zero crossing detection in the referenced model may not follow the setting in the top model.</entry>
    <entry key="MdlRefSolverParamZCControlMismatchError" context="error" note="First hole is top model name, second is bottom model name, and third is location of model reference block in top model">"Zero-crossing control" value must match between the top model "{0}" and model "{1}" referenced by block "{2}" because the top model sets the parameter to "Disable All" and the referenced model simulates in accelerator mode.</entry>
    <entry key="MdlRefUnsupportedDataLogging">Model reference Accelerator, SIL, or PIL modes do not support logging data with a Scope block configured to save data to the workspace. Logging with a To Workspace block in model reference Accelerator mode is only supported for Timeseries format, and is not supported for model reference SIL or PIL mode. Model ''{0}'' contains an unsupported logging combination of model reference simulation mode and Scope block or To Workspace block configuration. Data is not being logged to the workspace. To avoid this message, set the ''Configuration Parameters > Diagnostics > Model Referencing > Unsupported data logging'' parameter to ''none''.</entry>
    <entry key="XCPCannotLogToWksInChildModel">No data will be logged for the To Workspace block ''{0}''. In XCP-based external-mode simulations, To Workspace blocks in child models can log data only if the configuration parameter 'StreamToWks' is 'on' and the configuration parameter ''MATFileLogging'' is ''off''.</entry>
    <entry key="MdlRefWarnOutputUpdateNotCombined"><![CDATA[The referenced model ''{0}'' has set <sldiag objui="configset" objparam="CombineOutputUpdateFcns">Single output/update function</sldiag>, but Simulink is unable to honor this request.  Some possible reasons for this are\n * The model has a continuous sample time.\n * The model is saving states.]]></entry>
    <entry key="MdlRefErrorCppOutputUpdateNotCombined"><![CDATA[The code interface packaging option ''C++ class'' cannot be selected for referenced model ''{0}'' because it cannot combine its output and update functions.  Some possible reasons for this restriction are\n * The model has a continuous sample time.\n * The model is saving states.]]></entry>
    <entry key="ModelBlkWithUnsetTsInhSupLevel">The Model block ''{0}'' contains blocks that have not set their sample time inheritance rule for model reference and the model is inheriting a sample time. The Model block may give incorrect results when the blocks are not properly configured to support inherited sample time.</entry>
    <entry key="ModelReferenceSingleInstanceDeprecationWarning"><![CDATA[''Configuration Parameters > Model Referencing > Total number of instances allowed per top model'' is set to ''One'' for model ''{0}''. This setting will be removed in a future release.
        <actions exclusiveFixIts="yes">
            <action type="fixit">
                <cmd>Simulink.ModelReference.internal.ModelRefFixes(''DeprecatedNumInstancesAllowedSetting'',''{0}'')</cmd>
                <txt>Set configuration parameter ''Total number of instances allowed per top model'' to ''Multi''.</txt>
            </action>
        </actions>]]></entry>
    <entry key="ModelReferenceZeroInstanceDeprecationWarning"><![CDATA[''Configuration Parameters > Model Referencing > Total number of instances allowed per top model'' is set to ''Zero'' for model ''{0}''. This setting will be removed in a future release.
        <actions exclusiveFixIts="yes">
            <action type="fixit">
                <cmd>Simulink.ModelReference.internal.ModelRefFixes(''DeprecatedNumInstancesAllowedSetting'',''{0}'')</cmd>
                <txt>Set configuration parameter ''Total number of instances allowed per top model'' to ''Multi''.</txt>
            </action>
        </actions>]]></entry>
    <entry key="DeprecatedNumInstancesAllowedSettingFixed"> Executed 'matlab:set_param(''{0}'','ModelReferenceNumInstancesAllowed', 'Multi')'</entry>
    <entry key="SingleInstanceConstraintViolation">Model ''{0}'' directly or indirectly referenced by model ''{1}'' does not support multiple instances.</entry>
    <entry key="SingleInstanceConstraintDiagnosticWrapper">{0}</entry>
    <entry key="SingleInstanceConstraintReferenced">Model block ''{0}'' references a model containing a single-instance constraint.</entry>
    <entry key="SingleInstanceConstraintOwned">Model ''{0}'' contains a single-instance constraint.</entry>
    <entry key="SingleInstanceConstraintTruncated">Model ''{0}'' is referenced {1,number,integer} times by model ''{2}''. Error reporting truncated.</entry>
    <entry key="SingleInstanceConstraintViolationsTruncated">Model ''{0}'' violates {1,number,integer} unique single-instance constraints. Error reporting truncated.</entry>
    <entry key="SingleInstanceConstraintBlock">Single-instance constraint registered by ''{0}'' block at ''{1}''</entry>
    <entry key="SingleInstanceConstraintAddOnlyDuringCompile">Utility "slInternal('addSingleInstanceConstraintToModel', modelName, diagnostic)" does not modify a model in edit mode. Use this utility only on models that are being compiled.</entry>
    <entry key="SingleInstanceConstraintAddedDuplicate">Duplicate diagnostics not supported.</entry>
    <entry key="ParamWriterBlockSingleInstanceConstraintReason">Using a Parameter Writer block to write to a block, mask, or instance parameter in model ''{0}'' is not supported because the model hierarchy references this model multiple times. Remove Parameter Writer block ''{1}'' or reference the model only once in the model hierarchy.</entry>
    <entry key="MultiInstanceCallWideFcnCallTrig"><![CDATA[''Configuration Parameters > Model Referencing > Total number of instances allowed per top model'' is set to ''Multiple'' for model ''{0}''.  Block ''{1}'' of this model is calling a Function-Call Subsystem block that has a function-call port of width greater than 1.  This port width is not allowed in a model configured to be referenced multiple times.
        <actions exclusiveFixIts="yes">
            <action type="fixit">
                <cmd>Simulink.ModelReference.internal.ModelRefFixes(''MultiInstanceToFile'',''{0}'')</cmd>
                <txt>Set the configuration parameter ''Total number of instances allowed per top model'' to ''One''.</txt>
            </action>
        </actions>]]></entry>
    <entry key="MultiInstanceDWorkDataNotReusableSC"><![CDATA[''Configuration Parameters > Model Referencing > Total number of instances allowed per top model'' is set to ''Multiple'' for model ''{0}''.  Block ''{1}'' of this model has a state with a global storage class. A global storage class is not allowed in a model configured to be referenced multiple times. 
        <actions exclusiveFixIts="yes">
            <action type="fixit">
                <cmd>Simulink.ModelReference.internal.ModelRefFixes(''MultiInstanceToFile'',''{0}'')</cmd>
                <txt>Set the configuration parameter ''Total number of instances allowed per top model'' to ''One''.</txt>
            </action>
            <action type="suggestion">
                <txt>Change the state''s storage class.</txt>
            </action>
        </actions>]]></entry>
    <entry key="MultiInstanceSimulinkFunction"><![CDATA[''Configuration Parameters > Model Referencing > Total number of instances allowed per top model'' is set to ''Multiple'' for model ''{0}''.  Block ''{1}'' of this model is a Simulink Function block with the Trigger block parameter ''Function visibility'' set to ''global''. This setting is not allowed in a model configured to be referenced multiple times.
        <actions exclusiveFixIts="yes">
            <action type="fixit">
                <cmd>Simulink.ModelReference.internal.ModelRefFixes(''MultiInstanceToFile'',''{0}'')</cmd>
                <txt>Set the configuration parameter ''Total number of instances allowed per top model'' to ''One''.</txt>
            </action>
            <action type="suggestion">
                <txt>Set the Trigger block parameter ''Function visibility'' for the Simulink Function block to ''scoped''.</txt>
            </action>
        </actions>]]></entry>
    <entry key="MultiInstanceSimulinkFunctionCaller"><![CDATA[''Configuration Parameters > Model Referencing > Total number of instances allowed per top model'' is set to ''Multiple'' for model ''{0}''.  Block ''{1}'' of this model invokes a Simulink Function block, which is not allowed in a model configured to be referenced multiple times. 
        <actions exclusiveFixIts="yes">
            <action type="fixit">
                <cmd>Simulink.ModelReference.internal.ModelRefFixes(''MultiInstanceToFile'',''{0}'')</cmd>
                <txt>Set the configuration parameter ''Total number of instances allowed per top model'' to ''One''.</txt>
            </action>
        </actions>]]></entry>
    <entry key="MultiInstanceForcedNonInline"><![CDATA[''Configuration Parameters > Model Referencing > Total number of instances allowed per top model'' is set to ''Multiple'' for model ''{0}''.  Subsystem block ''{1}'' of this model is forced to be a non-reusable function because its function-call port of this block is being driven either by an S-Function with no TLC implementation or the mdlInitializeSizes function for the TLC implementation''s S-function does not set the option SS_OPTION_USE_TLC_WITH_ACCELERATOR, SS_OPTION_FORCE_NONINLINED_FCNCALL, or SS_OPTION_WORKS_WITH_CODE_REUSE.  
        <actions exclusiveFixIts="yes">
            <action type="fixit">
                <cmd>Simulink.ModelReference.internal.ModelRefFixes(''MultiInstanceToFile'',''{0}'')</cmd>
                <txt>Set the configuration parameter ''Total number of instances allowed per top model'' to ''One''.</txt>
            </action>
            <action type="suggestion">
                <txt>Develop a valid TLC implementation.</txt>
            </action>
        </actions>]]></entry>
    <entry key="MultiInstanceNonReusableSFcn"><![CDATA[''Configuration Parameters > Model Referencing > Total number of instances allowed per top model'' is set to ''Multiple'' for model ''{0}''.  S-Function block ''{1}'' of this model does not support code reuse, which is not allowed in a model configured to be referenced multiple times.\n 
        <actions exclusiveFixIts="yes">
            <action type="fixit">
                <cmd>Simulink.ModelReference.internal.ModelRefFixes(''MultiInstanceToFile'',''{0}'')</cmd>
                <txt>Set the configuration parameter ''Total number of instances allowed per top model'' to ''One''.</txt>
            </action>
            <action type="suggestion">
                <txt>To enable code reuse, the block must have a TLC implementation and the S-function''s mdlInitializeSizes function must set the options ''SS_OPTION_USE_TLC_WITH_ACCELERATOR'' and ''SS_OPTION_WORKS_WITH_CODE_REUSE''.</txt>
            </action>
        </actions>]]></entry>
    <entry key="MultiInstanceNonReusableSFcnRTW"><![CDATA[''Configuration Parameters > Model Referencing > Total number of instances allowed per top model'' is set to ''Multiple'' for model ''{0}''.  S-Function block ''{1}'' of this model does not support code reuse, which is not allowed in a model configured to be referenced multiple times.\n  
        <actions exclusiveFixIts="yes">
            <action type="fixit">
                <cmd>Simulink.ModelReference.internal.ModelRefFixes(''MultiInstanceToFile'',''{0}'')</cmd>
                <txt>Set the configuration parameter ''Total number of instances allowed per top model'' to ''One''.</txt>
            </action>
            <action type="suggestion">
                <txt>To enable code reuse, the block must have a TLC implementation and the S-function''s mdlInitializeSizes function must set the option ''SS_OPTION_WORKS_WITH_CODE_REUSE''.</txt>
            </action>
        </actions>]]></entry>
    <entry key="MultiInstanceSignalDataNotReusableSC"><![CDATA[''Configuration Parameters > Model Referencing > Total number of instances allowed per top model'' is set to ''Multiple'' for model ''{0}''.  Block ''{1}'' of this model has an output signal with a global storage class, which is not allowed in a model configured to be referenced multiple times.  
        <actions exclusiveFixIts="yes">
            <action type="fixit">
                <cmd>Simulink.ModelReference.internal.ModelRefFixes(''MultiInstanceToFile'',''{0}'')</cmd>
                <txt>Set the configuration parameter ''Total number of instances allowed per top model'' to ''One''.</txt>
            </action>
            <action type="suggestion">
                <txt>Change the signal''s storage class.</txt>
            </action>
        </actions>]]></entry>
    <entry key="MultiInstanceSingleInstanceMdlRef"><![CDATA[''Configuration Parameters > Model Referencing > Total number of instances allowed per top model'' is set to ''Multiple'' for parent model ''{0}'' and ''One'' for referenced model ''{1}''. A top model configured to be referenced multiple times cannot reference a model configured to be referenced only once. 
        <actions exclusiveFixIts="yes">
            <action type="fixit">
                <cmd>Simulink.ModelReference.internal.ModelRefFixes(''MultiInstanceToFile'',''{0}'')</cmd>
                <txt>Set the configuration parameter ''Total number of instances allowed per top model'' to ''One'' for the parent model.</txt>
            </action>
            <action type="fixit">
                <cmd>Simulink.ModelReference.internal.ModelRefFixes(''MultipleRefToSingleInstMdl'',''{1}'')</cmd>
                <txt>Set the configuration parameter ''Total number of instances allowed per top model'' to ''Multiple'' for the referenced model.</txt>
            </action>            
        </actions>]]></entry>
    <entry key="MultiInstanceSubsystemMarkedAsFunction"><![CDATA[''Configuration Parameters > Model Referencing > Total number of instances allowed per top model'' is set to ''Multiple'' for model ''{0}''.  Subsystem block ''{1}'' of this model has its ''Function packaging'' option set to ''Nonreusable function'', which is not supported in reusable referenced models. 
        <actions exclusiveFixIts="yes">
            <action type="fixit">
                <cmd>Simulink.ModelReference.internal.ModelRefFixes(''MultiInstanceToFile'',''{0}'')</cmd>
                <txt>Set the configuration parameter ''Total number of instances allowed per top model'' to ''One''.</txt>
            </action>
            <action type="suggestion">
                <txt>Change the ''Function packaging'' option of subsystem block ''{2}'' to ''Reusable function''.</txt>
            </action>
        </actions>]]></entry>
    <entry key="MultiInstanceSubsystemContainsResourceRWBlock"><![CDATA[''Configuration Parameters > Model Referencing > Total number of instances allowed per top model'' is set to ''Multiple'' for model ''{0}''.  Subsystem block ''{1}'' of this model has its ''Function packaging'' option set to ''Reusable function''. A reusable function cannot be generated because the subsystem contains a State/Parameter Reader/Writer block but does not contain the corresponding state/parameter owner block. Consequently, the model cannot be referenced multiple times.
        <actions exclusiveFixIts="yes">
            <action type="fixit">
                <cmd>Simulink.ModelReference.internal.ModelRefFixes(''MultiInstanceToFile'',''{0}'')</cmd>
                <txt>Set the configuration parameter ''Total number of instances allowed per top model'' to ''One''.</txt>
            </action>
            <action type="suggestion">
                <txt>Change the ''Function packaging'' option of subsystem block ''{2}'' to ''Auto'' or ''Inline''.</txt>
            </action>
        </actions>]]></entry>
    <entry key="MultiInstanceForEachSubsystemMarkedAsParallel"><![CDATA[''Configuration Parameters > Model Referencing > Total number of instances allowed per top model'' is set to ''Multiple'' for model ''{0}''.  Subsystem block ''{1}'' of this model has checked ''Request parallel execution in rapid accelerator simulation'', which is not allowed in a model configured to be referenced multiple times. 
        <actions exclusiveFixIts="yes">
            <action type="fixit">
                <cmd>Simulink.ModelReference.internal.ModelRefFixes(''MultiInstanceToFile'',''{0}'')</cmd>
                <txt>Set the configuration parameter ''Total number of instances allowed per top model'' to ''One''.</txt>
            </action>
            <action type="suggestion">
                <txt>Uncheck the ''Request parallel execution in rapid accelerator simulation'' option of subsystem block ''{2}''.</txt>
            </action>
        </actions>]]></entry>

    <entry key="MultiInstanceToFile"><![CDATA[''Configuration Parameters > Model Referencing >Total number of instances allowed per top model'' is set to ''Multiple'' for model ''{0}''.  This model contains a To File block ''{1}''. To prevent loss of simulation data, this block is not allowed in a model configured to be referenced multiple times.
        <actions exclusiveFixIts="yes">
            <action type="fixit">
                <cmd>Simulink.ModelReference.internal.ModelRefFixes(''MultiInstanceToFile'',''{0}'')</cmd>
                <txt>Set the configuration parameter ''Total number of instances allowed per top model'' to ''One''.</txt>
            </action>
            <action type="suggestion">
                <txt>Remove the To File block ''{1}''.</txt>
            </action>
        </actions>]]>
    </entry>    
    <entry key="SingleInstanceConstraintToFile">Model ''{0}'' does not support To File blocks because the model hierarchy references this model multiple times. Remove To File block ''{1}'' or reference the model only once in the model hierarchy.</entry>
    <entry key="SingleInstanceConstraintToWksAndScope">Model ''{0}'' does not support To Workspace or Scope blocks with data logging enabled because the model hierarchy references this model multiple times. Disable data logging for block ''{1}'' or reference the model only once in the model hierarchy.</entry>
    
    <entry key="MultiInstanceToFileFixed"> Executed the command 'matlab:set_param(''{0}'','ModelReferenceNumInstancesAllowed', 'single')'</entry>
    <entry key="MultiInstanceToWksAndScope"><![CDATA[''Configuration Parameters > Model Referencing > Total number of instances allowed per top model'' is set to ''Multiple'' for model ''{0}''.  This model contains a To Workspace block or a Scope block with data logging enabled. To prevent loss of simulation data, data logging is not allowed in a model configured to be referenced multiple times.  
        <actions exclusiveFixIts="yes">
            <action type="fixit">
                <cmd>Simulink.ModelReference.internal.ModelRefFixes(''MultiInstanceToFile'',''{0}'')</cmd>
                <txt>Set the configuration parameter ''Total number of instances allowed per top model'' to ''One''.</txt>
            </action>
            <action type="suggestion">
                <txt>Disable data logging for block ''{1}''.</txt>
            </action>
            <action type="suggestion">
                <txt>Remove block ''{1}''.</txt>
            </action>
        </actions>]]></entry>
    <entry key="MultiInstanceDefaultSharedLocalDSMMapping"><![CDATA[''Configuration Parameters > Model Referencing > Total number of instances allowed per top model'' is set to ''Multiple'' for model ''{0}''. Subsystem block ''{1}'' of this model is a reusable subsystem, yet the default storage class for shared local data stores is a storage class that is not defined in the Embedded Coder dictionary.
        <actions exclusiveFixIts="yes">
            <action type="fixit">
                <cmd>Simulink.ModelReference.internal.ModelRefFixes(''MultiInstanceToFile'',''{0}'')</cmd>
                <txt>Set the configuration parameter ''Total number of instances allowed per top model'' to ''One''.</txt>
            </action>
        </actions>]]></entry>
    <entry key="MultiInstanceWideFcnCallTrig"><![CDATA[''Configuration Parameters > Model Referencing > Total number of instances allowed per top model'' is set to ''Multiple'' for model ''{0}''.  Subsystem block ''{1}'' of this model is a function-call subsystem with a function-call port that has a width greater than 1. This port width is not allowed in a model configured to be referenced multiple times.
        <actions exclusiveFixIts="yes">
            <action type="fixit">
                <cmd>Simulink.ModelReference.internal.ModelRefFixes(''MultiInstanceToFile'',''{0}'')</cmd>
                <txt>Set the configuration parameter ''Total number of instances allowed per top model'' to ''One''.</txt>
            </action>
        </actions>]]></entry>
    <entry key="MultipleRefToSingleInstMdl"><![CDATA[''Configuration Parameters > Model Referencing > Total number of instances allowed per top model'' is set to ''One'' for model ''{0}''.  This model, however, is directly or indirectly referenced by Model blocks ''{1}'' and ''{2}''.
        <actions exclusiveFixIts="yes">
            <action type="fixit">
                <cmd>Simulink.ModelReference.internal.ModelRefFixes(''MultipleRefToSingleInstMdl'',''{0}'')</cmd>
                <txt>Set the configuration parameter ''Total number of instances allowed per top model'' to ''Multiple''.</txt>
            </action>
            <action type="suggestion">
                <txt>Edit the model reference hierarchy so that model ''{0}'' is only referenced once.</txt>
            </action>
        </actions>]]>
    </entry>

    <entry key="MultipleRefToZeroInstMdl"><![CDATA[''Configuration Parameters > Model Referencing >
    Total number of instances allowed per top model'' is set to ''Zero'' for model ''{0}''.  This
    model, however, is directly or indirectly referenced by Model blocks ''{1}'' and ''{2}''.
    <actions exclusiveFixIts="yes">
            <action type="fixit">
                <cmd>Simulink.ModelReference.internal.ModelRefFixes(''MultipleRefToSingleInstMdl'',''{0}'')</cmd>
                <txt>Set the configuration parameter ''Total number of instances allowed per top model'' to ''Multiple''.</txt>
            </action>
            <action type="suggestion">
                <txt>Edit the model reference hierarchy so that model ''{0}'' is only referenced once.</txt>
            </action>
        </actions>]]>
    </entry>
    
    <entry key="MultipleRefToSingleInstMdlFixed"> Executed the command 'matlab:set_param(''{0}'','ModelReferenceNumInstancesAllowed', 'Multi')'</entry>
    <entry key="NoDirectConnAtMrefRoot">Invalid connection originating from root Inport block ''{0}''. Root level Inport blocks cannot be connected directly to root level Outport blocks if there is a Trigger block at the root level. Consider breaking this connection by explicitly inserting a Signal Conversion block.</entry>
    <entry key="NoInstAllowed"><![CDATA[Unable to generate model reference target for model ''{0}''. ''Configuration Parameters > Model Referencing > Total number of instances allowed per top model'' is set to ''Zero'' for this model.  Consider setting the parameter ''Total number of instances allowed per top model'' to ''One'' or ''Multiple'' or removing the reference to this model.]]></entry>
    <entry key="NormalModeStatus">({0,number,integer} of {1,number,integer}) ''{2}'': Updating referenced model in normal mode</entry>
    <entry key="MultiInstanceNormalModeStatus">({0,number,integer} of {1,number,integer}) ''{2}'': Updating referenced model in multi-instance normal mode</entry>
    <entry key="NormalModeInExtModeNotSupported"> For referenced models, external mode simulations do not support the following:
      <![CDATA[ <ul>
        <li>The use of blocks to view signals from the target application.</li>
        <li>Tuning or uploading of model parameters.</li>
      </ul> ]]>
    </entry>
    <entry key="NormalModeInRaccelNotSupported"> Model ''{0}'' is running in Rapid Accelerator mode but references one or more models configured in Normal mode.  Consequently, you cannot tune or update any parameters or visualization blocks inside these referenced models.</entry>
    <entry key="NotSupportedAsyncSFcn">Unable to generate model reference target. Block ''{0}'' in model {1} has one of the following options: SS_OPTION_ASYNCHRONOUS, SS_OPTION_ASYNCHRONOUS_CUSTOM, SS_OPTION_ASYNCHRONOUS_INTERRUPT or SS_OPTION_FORCE_NONINLINED_FCNCALL. These options are not supported for model reference target.</entry>
    <entry key="OptCodeInResetSubsys">Error in Model block ''{0}'': this block is in a subsystem that is resetting its states. The block is referencing model ''{1}'' that has the setting ''Optimize initialization code for model reference'' turned on. Turn this optimization off in the Configuration Parameters dialog of the referenced model to use this block in a subsystem that can reset its states.</entry>
    <entry key="OptCodeMismatch">The model ''{0}'' has the setting ''Optimize Initialization code for model reference'' turned off, but is referencing the model ''{1}'' via the Model block ''{2}'' which has the option turned on.  When generating Model Reference code for a model with this option turned off, all referenced models must have this option turned off.  The setting can be changed in the Configuration Parameters dialog box.</entry>
    
    <entry key="RemoveResetFuncForRootLevelFcnCall">Error in model ''{0}'': this model has a root level function call port that is resetting states, while the setting ''Remove reset function'' is turned on, which is not allowed. Turn this option off for this model.</entry>
    <entry key="RemoveResetFuncWrongContext">Error in Model block ''{0}'': this block is in a conditionally executed context that is resetting states, while it is referencing model ''{1}'' that has the setting ''Remove reset function'' turned on, which is not allowed. Turn this option off for the referenced model to use this block in any conditionally executed context that is resetting states.</entry>
    <entry key="RemoveDisableFuncWrongContext">Error in Model block ''{0}'': this block is in a conditionally executed context, while it is referencing model ''{1}'' that has the setting ''Remove disable function'' turned on, which is not allowed. Turn this option off for the referenced model to use this block in any conditionally executed context.</entry>
    <entry key="RemoveDisableFuncWrongContextForFcnCall">Error in Model block ''{0}'': this model block is a function call system that can be disabled by function call initiator ''{1}''. However, this model block is referencing model ''{2}'' that has the setting ''Remove disable function'' turned on, which is not allowed. Turn this option off for the referenced model to use this block in any conditionally executed context.</entry>
    <entry key="PILECoderLicense">SIL or PIL simulation requires Embedded Coder to be installed and licensed.  The software is either not installed, or installed but not licensed.</entry>
    <entry key="XILSimulinkCoderLicense">SIL or PIL simulation requires Simulink Coder to be installed and licensed.  The software is either not installed, or installed but not licensed.</entry>
    <entry key="ParamIntf_DuplicateParamArgName">Duplicate parameter argument name, ''{0}''.</entry>
    
    <entry key="ParamIntf_GlobalParam_DimsMismatch">Invalid dimensions for global parameter ''{0}'' of Model block ''{1}''. The parameter provided is a {2} array but a {3} array is expected.</entry>
    <entry key="ParamIntf_GlobalParam_Missing">Unable to find global parameter ''{0}'' used by Model block ''{1}''. This parameter is required by the referenced model ''{2}'' and existed when the referenced model was rebuilt, but it has been removed.</entry>
    <entry key="ParamIntf_GlobalParam_ShouldBeComplex">Invalid complexity of global parameter ''{0}'' of Model block ''{1}''. The parameter provided is a real array but a complex array is expected</entry>
    <entry key="ParamIntf_GlobalParam_ShouldNotBeComplex">Invalid complexity for global parameter ''{0}'' of Model block ''{1}''. The parameter provided is a complex array but a real array is expected.</entry>
    <entry key="ParamIntf_InvalidParamArgName">Argument {0,number,integer} specified in ''{1}'' is not a valid MATLAB variable. Model arguments are required to be a comma separated list of valid MATLAB variables.</entry>  
    <entry key="ParamIntf_NumParamArgMismatch">Invalid number of parameter arguments for Model block ''{0}''. This block expects {1,number,integer} parameter arguments but {2,number,integer} were provided.</entry>
    <entry key="ParamIntf_ParamArgDefinitionInvalid">Block diagram ''{0}'' has a parameter argument ''{1}'' but the corresponding parameter in the model''s workspace is not valid.  The value of this parameter must be numeric and non-empty.</entry>
    <entry key="ParamIntf_ParamArgSpecifiedButNotDefined">Block diagram ''{0}'' has a parameter argument ''{1}'' but this parameter is not defined in the model''s workspace.</entry>
    <entry key="ParamIntf_ParamArgSpecifiedButUndefinedOrInvalid">Fail to create parameter argument ''{0}'' for block diagram ''{1}'' because this parameter either is not defined in the model''s workspace or has invalid value. A parameter's value must be a numeric array, fi object, an enumerated value, or a scalar structure whose fields contain valid values. The parameter argument list is unchanged.</entry>
    <entry key="ParamIntf_ParamArg_DimsMismatch">Instance parameter ''{0}'' of Model block ''{1}'' expects a {3} array but receives a {2} array.</entry>
	<entry key="ParamIntf_ParamArgInvalidVariantVariable">Usage of Simulink.VariantVariable ''{0}'' as a model argument in ''{1}'' is not supported. To use instance-specific values for ''{0}'', specify the associated Simulink.VariantControl objects as model arguments.</entry>
    
    
    
    <entry key="ParamIntf_ParamArg_DataTypeMismatch">Invalid data type for parameter argument ''{0}'' of Model block ''{1}''. The data type of the argument value is inconsistent with that of the corresponding model argument defined in the referenced model.</entry>
    <entry key="ParamIntf_ParamArg_InvalidStructDataType">Invalid structure data type for parameter argument ''{0}'' of Model block ''{1}''. The parameter type is ''{2}'' but ''{3}'' is expected.</entry>
    <entry key="ParamIntf_ParamArg_ShouldBeComplex">Invalid complexity of parameter argument ''{0}'' of Model block ''{1}''. The parameter provided is a real array but a complex array is expected.</entry>
    <entry key="ParamIntf_ParamArg_ShouldNotBeComplex">Invalid complexity for parameter argument ''{0}'' of Model block ''{1}''. The parameter provided is a complex array but a real array is expected.</entry>
    <entry key="ParamIntf_ParamArg_ShouldNotBeSparse">Parameter argument ''{0}'' of Model block ''{1}'' is a sparse array. Only dense arrays are supported as parameter arguments.</entry>
    <entry key="MdlRefInconsistentLUTObjectStructOrder">Mismatch in structure order between ''{0}'' (used to set a model argument value in Model block ''{1}'') and  ''{2}'' (argument definition in referenced model workspace) because of inconsistency in model configuration parameter ''{3}'' between the parent and referenced model. Change these values in the ''Code Generation > Interface'' pane in the Configuration Parameters dialog box.</entry>     
    <entry key="ParamIntf_LUTBPArg_PropertyMismatch">Mismatch in property ''{0}'' between ''{1}'' (used to set a model argument value in Model block ''{2}'') and ''{3}'' (argument definition in referenced model workspace).</entry>
    <entry key="ParamIntf_LUTBPArg_Mismatch">Mismatch between properties of model argument ''{2}'' (in referenced model workspace) and ''{0}'' (used to set argument value in Model block ''{1}'').</entry>
    <entry key="InlineOffParentInlineOn">Model ''{0}'' must have configuration parameter ''Default parameter behavior'' set to ''Inlined'' because parent model ''{1}'' has ''Default parameter behavior'' set to ''Inlined''.  For model ''{2}'', set ''Default parameter behavior'' to ''Inlined'' in the Configuration Parameters dialog box.</entry>
   
    <entry key="ModelFileExtensionMismatch">The Model block ''{0}'' specifies
    its referenced model by ''{1}'' and the Model file being used is ''{2}'',
    which has a different extension.  To eliminate this warning, update the
    ''ModelName'' parameter of Model block ''{3}'' to be ''{4}''.</entry>

    <entry key="RootControlPortLinearizationNotSupported">Linearization is not supported for model ''{0}'' because the model
      contains a root level control port ''{1}''.</entry>
    <entry key="RootControlPortCodeGenRequiresModelRef">Standalone code generation is not supported for model ''{0}'' because the model contains a root-level control port (''{1}''). To generate code, reference the model with a Model block.</entry>
    <entry key="RootFuncallRequiresSingleFundamentalRate">Invalid solver option specified for model ''{0}''. All of the model''s blocks specify the same sample time and this sample time is slower than the fundamental sample time specified by the model on the Solver pane of the Configuration Parameters dialog box.  To fix the problem, set the fundamental sample time to ''Auto'' or to be the same as the sample time of the root function-call trigger port ''{1}''.</entry>
    <entry key="RootInputTsError"><![CDATA[Root Inport ''{0}'' has a sample time of {1} which may not be compatible with the sample time {2} of its destination: <sldiag objui="outport" objparam="{3,number,integer}" objname="{4}">output port {3,number,integer}</sldiag> of block ''{4}''. Root inports must have a sample time that is the GCD of their destinations for model reference. Please change one of the sample times or insert a Rate Transition block.]]></entry>
    <entry key="RootOutputTsError"><![CDATA[Root Outport ''{0}'' has a sample time of {1} which does not match the sample time {2} of its source: <sldiag objui="outport" objparam="{3,number,integer}" objname="{4}">output port {3,number,integer}</sldiag> of block ''{4}''. Root outports must have the same sample time as their sources for model reference. Please change one of the sample times or insert a Rate Transition block.]]></entry>
    <entry key="ConstantRootOutputTsError"><![CDATA[When generating code, root Outport ''{0}'' is implemented using a sample time of {1} which does not match the Constant sample time of its source: <sldiag objui="outport" objparam="{2,number,integer}" objname="{3}">output port {2,number,integer}</sldiag> of block ''{3}''. Root outports must have the same implemented sample time as their sources for model reference. Please correct this by changing the sample time of the source to match the implemented sample time of the root Outport, or by inserting a Rate Transition block.]]></entry>
    <entry key="RootTrigportRequiresSimpleRate">Invalid sample time {0} specified for ''{1}''.  The block must specify a zero offset value for its sample time.</entry>
    <entry key="RootTrigportRequiresSimpleRateNoAsync">Simulink does not support asynchronous subsystems in a model containing a function-call trigger port block in the model root level. The function-call model ''{0}'' contains one or more asynchronous subsystems.</entry>
    <entry key="SavingCycleDetected">Unable to save ''{0}'' because of Model reference cycle. Model ''{1}'' is being referenced by model ''{2}'' via Model block ''{3}''. Model ''{4}'' is indirectly referencing model ''{5}'' through other Model blocks. Model reference cycle is not allowed.</entry>
    <entry key="SelfReferenceNotAllowed">Invalid model name is specified for the Model block ''{0}'' in model ''{1}''. The Model block cannot reference the model that it is placed in.</entry>
    <entry key="SelfReferenceNotAllowedEdit">Invalid model name is specified for the Model block being placed in model ''{0}''. The Model block cannot reference the model that it is placed in.</entry>
    <entry key="SigAttribPropErr4ForInport"><![CDATA[Conflicting signal specifications: The attributes '{'Name = ''{0}'', StorageClass = ''{1}'', StorageTypeQualifier = ''{2}'''}' specified on <sldiag objui="outport" objparam="{3,number,integer}" objname="{4}">output port {3,number,integer}</sldiag> of {4}, and the attributes '{'Name = ''{5}'', StorageClass = ''{6}'', StorageTypeQualifier = ''{7}'''}' specified for the root Inport {8,number,integer} of referenced model ''{9}'' are inconsistent but they correspond to the same signal.]]></entry>
    <entry key="SigAttribPropErr4ForOutport"><![CDATA[Conflicting signal specifications: The attributes '{'Name = ''{0}'', StorageClass = ''{1}'', StorageTypeQualifier = ''{2}'''}' specified on <sldiag objui="outport" objparam="{3,number,integer}" objname="{4}">output port {3,number,integer}</sldiag> of {4}, and the attributes '{'Name = ''{5}'', StorageClass = ''{6}'', StorageTypeQualifier = ''{7}'''}' specified for the root Outport {8,number,integer} of referenced model ''{9}'' are inconsistent but they correspond to the same signal.]]></entry>
    <entry key="SigAttribPropErr5ForInport">Signal label mismatch: {0} output port {1,number,integer} label ''{2}'', should match the root Inport {3,number,integer} label ''{4}'' of referenced model ''{5}''.</entry>
    <entry key="SigAttribPropErr5ForOutport">Signal label mismatch: {0} output port {1,number,integer} label ''{2}'', should match the root Outport {3,number,integer} label ''{4}'' of referenced model ''{5}''.</entry>
    <entry key="SigAttribPropErr6ForInport"><![CDATA[Conflicting signal configuration.  The Simulink signal object on the <sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">output port {0,number,integer}</sldiag> of ''{1}'' conflicts with the Simulink signal object on the root Inport {2,number,integer} of referenced model ''{3}'' since both map to the same signal.]]></entry>
    <entry key="SigAttribPropErr6ForOutport"><![CDATA[Conflicting signal configuration.  The Simulink signal object on the <sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">output port {0,number,integer}</sldiag> of ''{1}'' conflicts with the Simulink signal object on the root Outport {2,number,integer} of referenced model ''{3}'' since both outputs map to the same signal.]]></entry>
    <entry key="ConflictSignalSpecificationForVoidVoidSDPInport">Conflicting signal specification: {0} is configured using service interface, and root Inport {1,number,integer} of referenced model ''{2}'' is configured using nonreusable function interface with global root I/O implementation, but they correspond to the same signal. Consider adding a Signal Conversion block after {3}.</entry>
    <entry key="ConflictIdentifierForSubcomponentInport">Conflicting signal identifier: root Inport {0,number,integer} identifier ''{1}'' of referenced model ''{2}'' conflicts with identifier ''{3}'' from other model reference since both identifiers are associated with the same signal. Consider making signal label or block name consist.</entry>
    <entry key="ConflictIdentifierForSubcomponentOutport">Conflicting signal identifier: root Outport {0,number,integer} identifier ''{1}'' of referenced model ''{2}'' conflicts with identifier ''{3}'' from other model reference since both identifiers are associated with the same signal. Consider making signal label or block name consist.</entry>
    <entry key="ConflictSignalSpecificationForVoidVoidInport1">Conflicting signal specification: {0} output port {1,number,integer} is mapped to or propagated to have a storage class other than ''Auto'', but root Inport {2,number,integer} of referenced model ''{3}'' is configured using nonreusable function interface with global root I/O implementation. Consider setting storage class to ''Auto''.</entry>
    <entry key="ConflictSignalSpecificationForVoidVoidOutport1">Conflicting signal specification: {0} output port {1,number,integer} is mapped to or propagated to have a storage class other than ''Auto'', but root Outport {2,number,integer} of referenced model ''{3}'' is configured using nonreusable function interface with global root I/O implementation. Consider setting storage class to ''Auto''.</entry>
    <entry key="ConflictSignalSpecificationForVoidVoidInport2">Conflicting signal specification: root Inport {0,number,integer} of referenced model ''{1}'' is mapped to a storage class other than ''Auto'', but the signal from {2} output port {3,number,integer} is configured using nonreusable function interface with global root I/O implementation. Consider setting storage class to ''Auto''.</entry>
    <entry key="ConflictSignalSpecificationForVoidVoidOutport2">Conflicting signal specification: root Outport {0,number,integer} of referenced model ''{1}'' is mapped to a storage class other than ''Auto'', but the signal from {2} output port {3,number,integer} is configured using nonreusable function interface with global root I/O implementation. Consider setting storage class to ''Auto''.</entry>
    <entry key="RootInputWithModelDefaultAndSignalObjectIC">Initial value specified on signal object that is resolved for inport {0,number,integer} of ''{1}'' is ignored by ''{2}'' because the signal has a ''Model default'' storage class.</entry>
    <entry key="RootOutputWithModelDefaultAndSignalObjectIC">Initial value specified on signal object that is resolved for outport {0,number,integer} of ''{1}'' is ignored by ''{2}'' because the signal has a ''Model default'' storage class.</entry>
    <entry key="SolverMismatch">The model ''{0}'' has continuous states and is referencing (via the Model block ''{1}'') the fixed-step model ''{2}'' which has blocks with continuous sample time.  The solver ''{3}'' used to simulate model ''{4}'', will execute the referenced model ''{5}'' in minor time steps, whereas during standalone simulation the model ''{6}'' uses a discrete solver which does not have minor time steps.  This can cause results from the Model block and results obtained from standalone simulation of the referenced model to be different. You can disable this diagnostic by setting ''Automatic solver parameter selection'' diagnostic to ''none'' in the Diagnostics page of the Configuration Parameters dialog.</entry>
    <entry key="SolverModeMismatch">Model ''{0}'', configured with the 'Configuration Parameters' > 'Solver' > 'Treat each discrete rate as a separate task' option cleared, is referencing (via Model block ''{1}'') model ''{2}'' which is configured with this option selected. This can cause the results from the Model block and the results obtained from standalone simulation of the referenced model to be different. You can disable this diagnostic by setting 'Automatic solver parameter selection' diagnostic to 'none' in the Diagnostics page of the Configuration Parameters dialog box.</entry>
    <entry key="SolverNameMismatch">The solver used for model ''{0}'', and the referenced model ''{1}'' (referenced via the Model block ''{2}'') do not match.  Using a different solver for the continuous time referenced model is not supported.  The solver specified on the top model will be used for the referenced models. You can disable this diagnostic by setting ''Automatic solver parameter selection'' diagnostic to ''none'' in the Diagnostics page of the configuration parameters dialog.</entry>
    <entry key="SolverTypeMismatch">The variable-step model ''{0}'' is referencing (via the Model block ''{1}'') the fixed-step model ''{2}'' which has blocks with continuous sample time.  This can cause the results from the Model block and the results obtained from standalone simulation of the referenced model to be different. You can disable this diagnostic by setting ''Automatic solver parameter selection'' diagnostic to ''none'' in the Diagnostics page of the configuration parameters dialog.</entry>
    <entry key="SolverTypeMismatch2">Model "{0}" uses a fixed-step solver and must reference only models that use fixed-step solvers, but Model block "{2}" references model "{1}" that uses a variable-step solver. Solver "Type" settings must be compatible throughout the model hierarchy.
	<![CDATA[
            <actions exclusiveFixIts="yes">
                <action type="fixit" id="ChangeRefToFixedStep">
                    <cmd>Simulink.ModelReference.internal.ModelRefFixes(''SolverTypeChangeSubModel'',''{0}'', ''{2}'')</cmd>
                    <txt>Set solver "Type" parameter of referenced model "{2}" to "Fixed-step".</txt>
                </action>
                <action type="fixit" id="ChangeTopToVariableStep">
                    <cmd>Simulink.ModelReference.internal.ModelRefFixes(''SolverTypeChangeParentModel'',''{0}'', ''{2}'')</cmd>
                    <txt>Set solver "Type" parameter of parent model "{0}" to "Variable-step".</txt>
                </action>
            </actions>
        ]]>  
    </entry>
    <entry key="SWArchMdlSolverTypeMismatch">
	Software architecture model ''{0}'' references variable-step model ''{2}'' using Model block ''{1}''. Referencing a variable-step model from a software architecture model is not supported.
        <![CDATA[
            <actions exclusiveFixIts="yes">
                <action type="fixit" id="ChangeRefToFixedStep">
                    <cmd>Simulink.ModelReference.internal.ModelRefFixes(''SolverTypeChangeSubModel'',''{0}'', ''{2}'')</cmd>
                    <txt>Set solver type of referenced model ''{2}'' to Fixed-step.</txt>
                </action>
            </actions>
        ]]> 
    </entry>
    <entry key="SolverTypeMismatchFixed">Executed command set_param(''{0}'', ''SolverType'', ''{1}'')</entry>
    <entry key="TunableParamRefByNonInlinedSFcn">Reducing parameter {0,number,integer} of S-Function ''{1}'' to its numerical equivalent because model reference does not support tunable parameters for non-inlined S-Functions. This parameter resolves to tunable variables ({2}). You will be unable to tune this parameter during model execution.</entry>
    <entry key="VariableTsWithModelRef">''{0}'' has a variable sample time. Variable sample times are not supported by Model Reference.</entry>
    <entry key="HybridTsNotSupportedInLocalSolver">Unable to use local solver for model ''{0}'' because model ''{1}'' referenced by Model block ''{2}'' contains both discrete and continuous sample times.
    <![CDATA[
           <actions exclusiveFixIts="yes">
               <action type="fixit" id="TurnOffLocalSolver">
                    <cmd>set_param(''{0}'', ''UseModelRefSolver'', ''off'')</cmd>                   
                    <txt>Use top solver when referencing model ''{0}''.</txt>                
                </action>
            </actions> 			
    ]]>
    </entry>
    <entry key="LocalSolverVSZCNotSupported">Variable-step zero crossing detection is not supported for model ''{0}'' because the model is configured to use a local solver.</entry>
    <entry key="LocalSolverFSZCNotSupported">Fixed-step zero crossing detection is not supported for model ''{0}'' because the model is configured to use a local solver.
    <![CDATA[
           <actions exclusiveFixIts="no">
               <action type="fixit" id="TurnOffLocalSolver">
                    <cmd>set_param(''{0}'', ''UseModelRefSolver'', ''off'')</cmd>                   
                    <txt>Use the top solver when referencing model ''{0}''.</txt>                
                </action>
                <action type="fixit" id="TurnOffFSZC">
                    <cmd>set_param(''{0}'', ''EnableFixedStepZeroCrossing'', ''off'')</cmd>                   
                    <txt>Disable fixed-step zero crossing detection in model ''{0}''.</txt>  
                </action>
            </actions> 			
    ]]></entry>
    <entry key="LocalSolverNotSupportedWithIRT">Local solver is not supported for model ''{0}'' referenced by Model block ''{1}'' because the Model block is configured to show one or more of these types of ports: initialize, reinitialize, reset, terminate, or periodic event.</entry>
    <entry key="LocalVariableStepSolverNotSupported">Solver type for model ''{0}'' must be fixed-step because model ''{0}'' is configured to use a local solver.
    <![CDATA[                                                                                                      <actions exclusiveFixIts="yes">                                                                           <action type="fixit" id="TurnOffLocalSolver">
                    <cmd>set_param(''{0}'', ''UseModelRefSolver'', ''off'')</cmd>                   
                    <txt>Use the top solver when referencing model ''{0}''.</txt>                
                </action>
                <action type="fixit" id="UseFixedStepLocalSolver">
                    <cmd>set_param(''{0}'', ''SolverType'', ''Fixed-step'')</cmd>                   
                    <txt>Change the solver type to ''Fixed-step'' for model ''{0}''.</txt>  
                </action>
            </actions> 			
    ]]></entry>
    <entry key="LocalVariableStepSolverNotSupportedShort">Variable-step not supported</entry>   
    <entry key="LocalSolverNotSupportCodeGen">Unable to generate code for model ''{0}'' because the ''Use local solver when referencing model'' parameter is selected.<![CDATA[<actions exclusiveFixIts="yes">
                 <action type="fixit" id="TurnOffLocalSolver">
                    <cmd>set_param(''{0}'', ''UseModelRefSolver'', ''off'')</cmd>                   
                    <txt>Clear ''Use local solver when referencing model'' parameter for model ''{0}''.</txt>                
                 </action>
             </actions> 			
    ]]></entry>
    <entry key="LocalSolverNotSupportTopSimMode">Local solvers for referenced models are not supported in SIL, PIL, or external mode simulations.
     <![CDATA[                                                                                                      <actions exclusiveFixIts="no">                                                                           <action type="fixit" id="TurnOffLocalSolver">
                    <cmd>Simulink.internal.disableLocalSolver(''{0}'')</cmd>                   
                    <txt>Use the top solver when referencing model ''{0}''.</txt>                
               </action>
            </actions> 			
    ]]>
    </entry>
     <entry key="LocalVariableStepRefineNotSupported"><![CDATA["<sldiag objui="configset" objparam="Refine">Refine factor</sldiag>" parameter of model "{0}" ignored because local solvers do not support producing additional logged data values, and model "{0}" is configured to use a local solver.]]></entry>
    <entry key="LocalVariableStepOutputTimesNotSupported"><![CDATA["<sldiag objui="configset" objparam="OutputTimes">Output times</sldiag>" parameter of model "{0}" ignored because local solvers do not support logging data at specified times, and model "{0}" is configured to use a local solver.]]></entry>
    <entry key="LocalSolverNotSupportSILPIL">Model block ''{0}'' is configured to use a local solver for a SIL or PIL simulation. Local solvers are supported only for normal, accelerator, and rapid accelerator simulations.</entry>
    <entry key="LocalSolverNotSupportVarDims">Local solver is not supported for model ''{0}'' because the model interface has a variable-size signal at block ''{1}''.
    <![CDATA[                                                                                                      <actions exclusiveFixIts="yes">                                                                           <action type="fixit" id="TurnOffLocalSolver">
                    <cmd>set_param(''{0}'', ''UseModelRefSolver'', ''off'')</cmd>                   
                    <txt>Use the top solver when referencing model ''{0}''.</txt>                
                </action>
            </actions> 			
    ]]></entry>
    <entry key="LocalSolverWarnForRunAsTop">Local solver is not supported when referencing model ''{0}''.</entry>
    <entry key="LocalSolverZeroContinuousStates">Local solver not supported for model ''{0}'' because the model does not have continuous states.
    <![CDATA[                                                                                                       <actions exclusiveFixIts="yes">                                                                             <action type="fixit" id="TurnOffLocalSolver">
                    <cmd>set_param(''{0}'', ''UseModelRefSolver'', ''off'')</cmd>                   
                    <txt>Use the top solver when referencing model ''{0}''.</txt>                
                </action>
            </actions> 			
    ]]>
    </entry>
    <entry key="LocalSolverNotSupportFastRestartInAccel">Fast Restart is not supported because model ''{1}'' referenced by Model block ''{0}'' is configured to use a local solver.
    <![CDATA[                                                                                                       <actions exclusiveFixIts="no">                                                                             <action type="fixit" id="LocalSolverAccelTurnOffFastRestart">
                    <cmd>set_param(''{0}'', ''FastRestart'', ''off'')</cmd>                   
                    <txt>Disable fast restart.</txt>                
                </action>
				<action type="fixit" id="TurnOffLocalSolver">
                    <cmd>set_param(''{1}'', ''UseModelRefSolver'', ''off'')</cmd>                   
                    <txt>Use the top solver when referencing model ''{1}''.</txt>                
                </action>
            </actions> 			
    ]]>
    </entry>
	<!-- Used only in test that is commented out. Updated for consistency with non-accel message, but I have questions. No updates to source code because the source never uses this message according to codesearch. -->
    <entry key="LocalSolverNoSupportOPInAccel">Saving and specifying operating points is not supported because model "{1}" referenced by Model block "{0}" is configured to use a local solver and simulate in accelerator mode.
		<![CDATA[   <actions exclusiveFixIts="no">
	                <action type="fixit" id="TurnOffLocalSolver">
                    <cmd>set_param(''{1}'', ''UseModelRefSolver'', ''off'')</cmd>                   
                    <txt>Use the parent solver when referencing model ''{1}''.</txt>                
                </action>
				<action type="suggestion" id="UseNormalMode">                
                    <txt>Simulate the model using normal mode instead.</txt>                
                </action>
            </actions> 			
    ]]>
	</entry>
    <entry key="LocalSolverNotSupportOP">Saving and restoring the model operating point is not supported because model ''{1}'' referenced by Model block ''{0}'' is configured to use a local solver.
	<![CDATA[       <actions exclusiveFixIts="yes">
	                <action type="fixit" id="TurnOffLocalSolver">
                    <cmd>set_param(''{1}'', ''UseModelRefSolver'', ''off'')</cmd>                   
                    <txt>Use the top solver when referencing model ''{1}''.</txt>                
                </action>
            </actions> 			
    ]]></entry>
    <entry key="LocalSolverNotSupportedInMultiTasking">Multitasking execution is not supported in model ''{0}'' because Model block ''{1}'' references model ''{2}'' that is configured to use a local solver.
    <![CDATA[                                                                                                       <actions exclusiveFixIts="no">                                                                             <action type="fixit" id="TurnOffMultiTasking">
                    <cmd>set_param(''{0}'', ''EnableMultiTasking'', ''off'', ''ConcurrentTasks'', ''off'')</cmd>                   
                    <txt>Use single-tasking execution in model ''{0}''.</txt>                
                </action>
                <action type="fixit" id="TurnOffLocalSolver">
                    <cmd>set_param(''{2}'', ''UseModelRefSolver'', ''off'')</cmd>                   
                    <txt>Use the top solver when referencing model ''{2}''.</txt>                
                </action>
            </actions> 			
    ]]>
    </entry>
    <entry key="LocalSolverRefMemoryBlockNotSupported">Unable to simulate model "{0}" using a local solver because block "{1}" has the "Data store reference" parameter enabled, and permitting data store access at higher levels of the model hierarchy is not supported with local solvers.
    <![CDATA[
           <actions exclusiveFixIts="yes">
               <action type="fixit" id="TurnOffLocalSolver">
                    <cmd>set_param(''{0}'', ''UseModelRefSolver'', ''off'')</cmd>                   
                    <txt>Use top solver when referencing model ''{0}''.</txt>                
                </action>
            </actions> 			
    ]]>
    </entry>
    <entry key="MultiTaskingNotSupportedInLocalSolver">Multitasking execution is not supported for model ''{0}'' because the model is configured to use a local solver.
    <![CDATA[                                                                                                       <actions exclusiveFixIts="no">
                <action type="fixit" id="TurnOffMultiTasking">
                    <cmd>set_param(''{0}'', ''EnableMultiTasking'', ''off'', ''ConcurrentTasks'', ''off'')</cmd>                   
                    <txt>Use single-tasking execution in model ''{0}''.</txt>                
                </action>
                <action type="fixit" id="TurnOffLocalSolver">
                    <cmd>set_param(''{0}'', ''UseModelRefSolver'', ''off'')</cmd>                   
                    <txt>Use the top solver when referencing model ''{0}''.</txt>                
                </action>
            </actions> 			
    ]]>
    </entry>
    <entry key="LocalSolverInstanceParamNotSupported">Model arguments are not supported for model ''{0}'' because the model is configured to use a local solver.
    <![CDATA[                                                                                                       <actions exclusiveFixIts="no">
                <action type="fixit" id="TurnOffLocalSolver">
                    <cmd>set_param(''{0}'', ''UseModelRefSolver'', ''off'')</cmd>                   
                    <txt>Use the top solver when referencing model ''{0}''.</txt>                
                </action>
            </actions> 			
    ]]>
    </entry>
    <entry key="LocalSolverImplicitIteratorNotSupported">Local solver is not supported for model ''{0}'' because the referencing block ''{1}'' is inside an iterator subsystem.
    <![CDATA[                                                                                                       <actions exclusiveFixIts="no">
                <action type="fixit" id="TurnOffLocalSolver">
                    <cmd>set_param(''{0}'', ''UseModelRefSolver'', ''off'')</cmd>                   
                    <txt>Use the top solver when referencing model ''{0}''.</txt>                
                </action>
            </actions> 			
    ]]>    
    </entry>
    <entry key="LocalSolverNotSupportedInLinearization">Linearization is not supported for  model ''{0}'' because Model block ''{1}'' references model ''{2}'' that is configured to use a local solver.
    <![CDATA[                                                                                                       <actions exclusiveFixIts="no">
                <action type="fixit" id="TurnOffLocalSolver">
                    <cmd>set_param(''{2}'', ''UseModelRefSolver'', ''off'')</cmd>                   
                    <txt>Use the top solver when referencing model ''{2}''.</txt>                
                </action>
            </actions> 			
    ]]>
    </entry>
    <entry key="LocalSolverPeriodicStateNotSupported">Local solver is not supported for model ''{0}'' because the model contains wrapped states.
    <![CDATA[                                                                                                       <actions exclusiveFixIts="yes">                                                                             <action type="fixit" id="TurnOffLocalSolver">
                    <cmd>set_param(''{0}'', ''UseModelRefSolver'', ''off'')</cmd>                   
                    <txt>Use the top solver when referencing model ''{0}''.</txt>                
                </action>
            </actions> 			
    ]]>
    </entry>
    <entry key="LocalSolverComplexSignalNotSupported">Local solver is not supported for model ''{0}'' because the model interface has a complex signal at block ''{1}''.
    <![CDATA[                                                                                                       <actions exclusiveFixIts="yes">                                                                             <action type="fixit" id="TurnOffLocalSolver">
                    <cmd>set_param(''{0}'', ''UseModelRefSolver'', ''off'')</cmd>                   
                    <txt>Use the top solver when referencing model ''{0}''.</txt>                
                </action>
            </actions> 			
    ]]>
    </entry>
    <entry key="LocalSolveErrorGettingDialogInfoShort">Error</entry>
    <entry key="LocalSolverIgnoredCommStepOffset">Sample time offset specified for communication step size in Model block ''{0}'' is not used because sample time offsets are not supported for the communication step size.
    <![CDATA[                                                                                                       <actions exclusiveFixIts="yes">                                                                             <action type="fixit" id="RemoveOffset">
                    <cmd>set_param(''{0}'', ''CommunicationStepSize'', ''{1}'')</cmd>                   
                    <txt>Set the ''Communication step size'' value to ''{1}''.</txt>                
                </action>
            </actions> 			
    ]]>
    </entry>
    <entry key="LocalSolverCommStepIsNotMultipleOfFixedStep">Communication step size (''{0}'') for Model block ''{1}'' must be an integer multiple of the fixed step size (''{2}'') for the local solver. 
    <![CDATA[                                                                                                       <actions exclusiveFixIts="yes">                                                                             <action type="fixit" id="FixCommStep">
                    <cmd>set_param(''{1}'', ''CommunicationStepSize'', ''{3}'')</cmd>                   
                    <txt>Set the ''Communication step size'' value to ''{3}''.</txt>                
                </action>
            </actions> 			
    ]]>
    </entry>
    <entry key="LocalSolverCommStepIsNotGCD">Communication step size (''{0}'') in Model block ''{1}'' must be an integer divisor of all discrete sample times in model ''{2}''. 
    <![CDATA[                                                                                                       <actions exclusiveFixIts="yes">                                                                             <action type="fixit" id="FixCommStep">
                    <cmd>set_param(''{1}'', ''CommunicationStepSize'', ''{3}'')</cmd>                   
                    <txt>Set the ''Communication step size'' value to ''{3}''.</txt>                
                </action>
            </actions> 			
    ]]>
    </entry>
    <entry key="LocalSolverCommStepRatioTooLarge">Local solver configuration for Model block "{0}" is not supported. The ratio of the communication step size ("{1}") to the fixed step size for the referenced model ("{2}") must be less than or equal to the maximum value of uint32 (4294967295).
    </entry>
    <entry key="LocalSolverUseZOHInputHandling">Model block ''{0}'' must use zero-order hold input signal handling because the fixed step size for the local solver (''{1}'') is smaller than the communication step size (''{2}''). 
    <![CDATA[                                                                                                       <actions exclusiveFixIts="yes">                                                                             <action type="fixit" id="UseZOHInputHandling">
                    <cmd>set_param(''{0}'', ''InputSignalHandling'', ''Zero-order hold'')</cmd>                   
                    <txt>Set the ''Input signal handling'' value to ''Zero-order hold''.</txt>                
                </action>
            </actions> 			
    ]]>
    </entry>
    <entry key="LocalSolverUseZOHOutputHandling">Model block ''{0}'' must use zero-order hold output signal handling because the fixed step size for the local solver (''{1}'') is smaller than the communication step size (''{2}'').
    <![CDATA[                                                                                                       <actions exclusiveFixIts="yes">                                                                             <action type="fixit" id="UseZOHOutputHandling">
                    <cmd>set_param(''{0}'', ''OutputSignalHandling'', ''Zero-order hold'')</cmd>                   
                    <txt>Set the ''Output signal handling'' value to ''Zero-order hold''.</txt>                
                </action>
            </actions> 			
    ]]>
    </entry>
    <entry key="LocalSolverUseZOHOutputHandlingFixedStepZeroCrossing">Model block ''{0}'' must use zero-order hold output signal handling because referenced model ''{1}'' enables fixed-step zero-crossing detection.
            <![CDATA[<actions exclusiveFixIts="yes">
                    <action type="fixit" id="UseZOHOutputHandling">
                        <cmd>set_param(''{0}'', ''OutputSignalHandling'', ''Zero-order hold'')</cmd>                   
                        <txt>Set ''Output signal handling'' value for Model block ''{0}'' to ''Zero-order hold''.</txt>
                    </action>
            </actions> 			
    ]]>
    </entry>
    <entry key="LocalSolverExportFcnNotSupported">Local solver is not supported in model ''{0}'' because it is an export-function model.</entry>
    <entry key="LocalSolverDoesNotSupportCustomCode">Custom code block ''{0}'' is not supported because model ''{1}'' uses a local solver.
    <![CDATA[<actions exclusiveFixIts="yes">
             <action type="fixit" id="TurnOffLocalSolver">
             <cmd>set_param(''{1}'', ''UseModelRefSolver'', ''off'')</cmd>                   
             <txt>Use the top solver when referencing model ''{1}''.</txt>
             </action>
             </actions> 			
    ]]>
    </entry>
    <entry context="error" note="0 is the name of a referenced model, 1 is a model reference block, 2 is a numerical scalar sample time offset" key="LocalSolverDoesNotSupportOffset">Unable to simulate model "{0}" using a local solver because the sample time for block "{1}" has a sample time offset ("{2}").
    <![CDATA[<actions exclusiveFixIts="yes">
             <action type="fixit" id="TurnOffLocalSolver">
             <cmd>set_param(''{0}'', ''UseModelRefSolver'', ''off'')</cmd>                   
             <txt>Use the top solver when referencing model "{0}".</txt>                
             </action>
             <action type="suggestion" id="RemoveOffset">                  
             <txt>Specify a sample time without an offset for block "{1}" and any other blocks that have sample time offsets.</txt>                
             </action>
             </actions> 			
    ]]>
    </entry>
    <entry context="warning" note="0 is the path to a model block, 1,2,3 are numerical scalar" key="LocalSolverCommStepRatioLargeWarning">Local solver in model block "{0}" is configured to take a large number of steps per communication step ({1}). This may cause the simulation to become unresponsive.<![CDATA[<actions exclusiveFixIts="yes">
    <action type="suggestion" id="ReduceRatio">                  
    <txt>Reduce communication step size ("{2}"), or increase fixed step size ("{3}"), such that the ratio of communication step size to fixed step size is less than 100000</txt> 
    </action>
    </actions> 			
    ]]>
    </entry>
    <entry context="error" note="0 is the name of a referenced model, 1 is a model reference block" key="LocalSolverVarTsNotSupported">Unable to simulate model "{0}" using a local solver because the model contains one or more blocks that have variable sample time.
    <![CDATA[<actions exclusiveFixIts="yes">
             <action type="fixit" id="TurnOffLocalSolver">
             <cmd>set_param(''{0}'', ''UseModelRefSolver'', ''off'')</cmd>                   
             <txt>Use the top solver when referencing model "{0}".</txt> 
             </action>
             </actions> 			
    ]]>
    </entry>
    <entry context="error" note="0 is the name of a referenced model" key="ExplicitPartitionsNotSupportedInLocalSolver">Unable to simulate model "{0}" using a local solver because the model contains explicit partitions.
    <![CDATA[<actions exclusiveFixIts="yes">
             <action type="fixit" id="TurnOffLocalSolver">
             <cmd>set_param(''{0}'', ''UseModelRefSolver'', ''off'')</cmd>                   
             <txt>Use the top solver when referencing model "{0}".</txt> 
             </action>
             </actions> 			
    ]]>
    </entry>
    <entry context="warning" key="LocalSolverOPRestoredBetweenCommStep">
        Zero-order hold used for output signal handling in block "{0}" until the simulation time reaches {1} because the model operating point specified as an initial state corresponds to a time between local solver communication steps.
    </entry>
    <entry key="InvalidMultiSolverSimulationSupportFeatureValue">MultiSolverSimulationSupport value is deprecated/invalid.</entry>
    <entry key="AutoDataExchange">Auto</entry>
    <entry key="ZeroOrderHoldDataExchange">Zero-order hold</entry>
    <entry key="LinearDataExchange">Linear</entry>
    <entry key="QuadDataExchange">Quadratic</entry>
    <entry key="NEPCEDataExchange">NEPCE</entry>
    <entry key="UseSolverInterpolant">Use solver interpolant</entry>
    <entry key="WarnInvalidModelrefInput_Sfcn">A noninlined S-Function reading its input from a root Inport block is found. A hidden Signal Conversion block (with the ''Exclude this block from ''Block reduction'' optimization'' option enabled) needs to be inserted before noninlined S-Function ''{0}'' in referenced model ''{1}'' to facilitate code generation. \nUse the ''Invalid root Inport/Outport block connection'' option on the ''Model Referencing'' group of the Diagnostics page of the Configuration Parameters dialog box to control reporting of this condition.</entry>
    <entry key="WarnInvalidModelrefOutput_ConstTP">Invalid root Outport block connection in the referenced model ''{0}''. Root Outport block ''{1}'' is driven by the block ''{2}'' which also has an output port that is testpointed or has non-auto storage class. Simulink inserts a hidden Signal Conversion block (with the ''Exclude this block from ''Block reduction'' optimization'' option enabled) before the root Outport block. \nUse the ''Invalid root Inport/Outport block connection'' option on the ''Model Referencing'' group of the Diagnostics page of the Configuration Parameters dialog box to control reporting of this condition.</entry>
    <entry key="WarnInvalidModelrefOutput_GroundBlock">Invalid root Outport block connection in the referenced model ''{0}''. Root Outport ''{1}'' is driven by a ground block. Simulink inserts a hidden Signal Conversion block (with the ''Exclude this block from ''Block reduction'' optimization'' option enabled) before the root Outport block. \nUse the ''Invalid root Inport/Outport block connection'' option on the ''Model Referencing'' group of the Diagnostics page of the Configuration Parameters dialog box to control reporting of this condition.</entry>
    <entry key="WarnInvalidModelrefOutput_MultiDst"><![CDATA[Invalid root Outport block connection in the referenced model ''{0}''. <sldiag objui="outport" objparam="{1,number,integer}" objname="{2}">Output port {1,number,integer}</sldiag> of block ''{2}'' drives root Outport blocks {3,number,integer} and {4,number,integer}. To be a valid connection, the source port must drive only one root Outport block. Simulink inserts a hidden Signal Conversion block (with the ''Exclude this block from ''Block reduction'' optimization'' option enabled) before the root Outport block. \nUse the ''Invalid root Inport/Outport block connection'' option on the ''Model Referencing'' group of the Diagnostics page of the Configuration Parameters dialog box to control reporting of this condition.]]></entry>
    <entry key="WarnInvalidModelrefOutput_MultiPath"><![CDATA[Invalid root Outport block connection in the referenced model ''{0}''. <sldiag objui="outport" objparam="{1,number,integer}" objname="{2}">Output port {1,number,integer}</sldiag> of block ''{2}'' drives root Outport {3,number,integer} via two paths. To be a valid connection, only one signal path can exist between a root Outport block and the block that drives it. Simulink inserts a hidden Signal Conversion block (with the ''Exclude this block from ''Block reduction'' optimization'' option enabled) before the root Outport block. \nUse the ''Invalid root Inport/Outport block connection'' option on the ''Model Referencing'' group of the Diagnostics page of the Configuration Parameters dialog box to control reporting of this condition.]]></entry>
    <entry key="WarnInvalidModelrefOutput_MultiSrc">Invalid root Outport block connection in the referenced model ''{0}''. Two different blocks drive the root Outport block ''{1}''. To be a valid connection, the root Outport block must be driven by one source port. Simulink inserts a hidden Signal Conversion block (with the ''Exclude this block from ''Block reduction'' optimization'' option enabled) before the root Outport block. \nUse the ''Invalid root Inport/Outport block connection'' option on the ''Model Referencing'' group of the Diagnostics page of the Configuration Parameters dialog box to control reporting of this condition.</entry>
    <entry key="WarnInvalidModelrefOutput_NONCont"><![CDATA[Invalid root Outport block connection in the referenced model ''{0}''. Only {1,number,integer} element(s) of <sldiag objui="outport" objparam="{2,number,integer}" objname="{3}">output port {2,number,integer}</sldiag> of block ''{3}'' drive the root Outport {4,number,integer}. To be a valid connection, all of the signal''s elements must drive the root Outport block to which it is connected. Simulink inserts a hidden Signal Conversion block (with the ''Exclude this block from ''Block reduction'' optimization'' option enabled) before the root Outport block. \nUse the ''Invalid root Inport/Outport block connection'' option on the ''Model Referencing'' group of the Diagnostics page of the Configuration Parameters dialog box to control reporting of this condition.]]></entry>
    <entry key="WarnInvalidModelrefOutput_BusSelection"><![CDATA[Invalid root Outport block connection at root output port {3,number,integer} of referenced model ''{0}'' because the Outport block is driven by an element of a bus from <sldiag objui="outport" objparam="{1,number,integer}" objname="{2}">output port {1,number,integer}</sldiag> of block ''{2}''. The software inserts a hidden Signal Conversion block before the root Outport block. The inserted Signal Conversion block is excluded from block reduction. Use ''Configuration Parameters > Diagnostics > Model Referencing > Invalid root Inport/Outport block connection'' to control reporting of this condition.]]></entry>
    <entry key="WarnInvalidModelrefOutput_NonConstDrivingConst">Invalid root Outport block connection in the referenced model ''{0}''. Root Outport {1,number,integer} has a constant sample time but is driven by a block that does not have a constant sample time. Simulink inserts a hidden Signal Conversion block (with the ''Exclude this block from ''Block reduction'' optimization'' option enabled) before the root Outport block. \nUse the ''Invalid root Inport/Outport block connection'' option on the ''Model Referencing'' group of the Diagnostics page of the Configuration Parameters dialog box to control reporting of this condition.</entry>
    <entry key="WarnInvalidModelrefOutput_ConstDrivingNonConst">Invalid root Outport block connection in the referenced model ''{0}''. Root Outport {1,number,integer} does not have a constant sample time but is driven by a block that has a constant sample time. Simulink inserts a hidden Signal Conversion block (with the ''Exclude this block from ''Block reduction'' optimization'' option enabled) before the root Outport block. \nUse the ''Invalid root Inport/Outport block connection'' option on the ''Model Referencing'' group of the Diagnostics page of the Configuration Parameters dialog box to control reporting of this condition.</entry>
    <entry key="WarnInvalidModelrefOutput_NoninlinedSfcn">Invalid root Outport block connection in the referenced model ''{0}''. Root Outport block ''{1}'' is being read from or written to by the noninlined S-Function ''{2}''. Simulink inserts a hidden Signal Conversion block (with the ''Exclude this block from ''Block reduction'' optimization'' option enabled) before the root Outport block. \nUse the ''Invalid root Inport/Outport block connection'' option on the ''Model Referencing'' group of the Diagnostics page of the Configuration Parameters dialog box to control reporting of this condition.</entry>
    <entry key="WarnInvalidModelrefOutput_TestPoint">Invalid root Outport block connection in the referenced model ''{0}''. The signal driving the root Outport block ''{1}'' is a test point or it has ''Model default'' storage class specified. Use the ''Invalid root Inport/Outport block connection'' option on the ''Model Referencing'' group of the Diagnostics page of the Configuration Parameters dialog box to control reporting of this condition.</entry>
    <entry key="MACheckInvalidModelrefInput_Sfcn">Noninlined S-function ''{1}'' in referenced model ''{0}'' reads input from a root input port block. The software inserts a hidden Signal Conversion block before the noninlined S-function. The inserted Signal Conversion block is excluded from block reduction.</entry>
    <entry key="MACheckInvalidModelrefInput_Sfcn_Title">Noninlined S-function reads from root input port block</entry>
    <entry key="MACheckInvalidModelrefOutput_ConstTP">Block ''{1}'' drives root output port block ''{2}'' in referenced model ''{0}'' and has a non-auto storage class or an output port test point. The software inserts a hidden Signal Conversion block before the root output port block. The inserted Signal Conversion block is excluded from block reduction.</entry>
    <entry key="MACheckInvalidModelrefOutput_ConstTP_Title">Block with non-auto storage class or output port test point drives root output port block</entry>
    <entry key="MACheckInvalidModelrefOutput_GroundBlock">Ground block drives root output port block ''{1}'' in referenced model ''{0}''. The software inserts a hidden Signal Conversion block before the root output port block. The inserted Signal Conversion block is excluded from block reduction.</entry>
    <entry key="MACheckInvalidModelrefOutput_GroundBlock_Title">Ground block drives root output port block</entry>
    <entry key="MACheckInvalidModelrefOutput_MultiDst">Output port {1,number,integer} of block ''{2}'' drives ''{3}'' and ''{4}'' in referenced model ''{0}''. The software inserts a hidden Signal Conversion block before one of the corresponding root output port blocks. The inserted Signal Conversion block is excluded from block reduction.</entry>
    <entry key="MACheckInvalidModelrefOutput_MultiDst_Title">Block port drives multiple root output port blocks</entry>
    <entry key="MACheckInvalidModelrefOutput_MultiPath">Output port {1,number,integer} of block ''{2}'' drives root output port {3,number,integer} using multiple signal paths in referenced model ''{0}''. The software inserts a hidden Signal Conversion block before the corresponding root output port block. The inserted Signal Conversion block is excluded from block reduction.</entry>
    <entry key="MACheckInvalidModelrefOutput_MultiPath_Title">Multiple paths between block port and root output port block</entry>
    <entry key="MACheckInvalidModelrefOutput_MultiSrc">Multiple source blocks drive root output port block ''{1}'' in referenced model ''{0}''. The software inserts a Signal Conversion block before the root output port block. The inserted Signal Conversion block is excluded from block reduction.</entry>
    <entry key="MACheckInvalidModelrefOutput_MultiSrc_Title">Multiple source blocks drive root output port block</entry>
    <entry key="MACheckInvalidModelrefOutput_NONCont">Output port {1,number,integer} of block ''{2}'' drives root output port {3,number,integer} with only a subset of its signal elements in referenced model ''{0}''. The software inserts a Signal Conversion block before the corresponding root output port block. The inserted Signal Conversion block is excluded from block reduction.</entry>
    <entry key="MACheckInvalidModelrefOutput_NONCont_Title">Partial signal drives root output port block</entry>
    <entry key="MACheckInvalidModelrefOutput_BusSelection">Root output port {3,number,integer} of referenced model ''{0}'' is driven by an element of a bus from output port {1,number,integer} of block ''{2}''. The software inserts a hidden Signal Conversion block before the corresponding root output port block. The inserted Signal Conversion block is excluded from block reduction.</entry>
    <entry key="MACheckInvalidModelrefOutput_BusSelection_Title">Bus element drives root output port block</entry>
    <entry key="MACheckInvalidModelrefOutput_NonConstDrivingConst">Root output port {1,number,integer} in referenced model ''{0}'' expects a constant sample time but receives a signal from a block with a nonconstant sample time. The software inserts a Signal Conversion block before the corresponding root output port block. The inserted Signal Conversion block is excluded from block reduction.</entry>
    <entry key="MACheckInvalidModelrefOutput_InconsistentSampleTime_Title">Inconsistent sample time at root output port block</entry>
    <entry key="MACheckInvalidModelrefOutput_ConstDrivingNonConst">Root output port {1,number,integer} in referenced model ''{0}'' expects a nonconstant sample time but receives a signal from a block with a constant sample time. The software inserts a Signal Conversion block before the corresponding root output port block. The inserted Signal Conversion block is excluded from block reduction.</entry>
    <entry key="MACheckInvalidModelrefOutput_NoninlinedSfcn">Noninlined S-function ''{1}'' reads from or writes to root output port block ''{2}'' in referenced model ''{0}''. The software inserts a Signal Conversion block before the root output port block. The inserted Signal Conversion block is excluded from block reduction.</entry>
    <entry key="MACheckInvalidModelrefOutput_NoninlinedSfcn_Title">Noninlined S-function interacts with root output port block</entry>
    <entry key="MACheckInvalidModelrefOutput_TestPoint">Signal that drives root output port block ''{1}'' in referenced model ''{0}'' is a test point or specifies a ''Model default'' storage class. The software inserts a Signal Conversion block before the root output port block. The inserted Signal Conversion block is excluded from block reduction.</entry>
    <entry key="MACheckInvalidModelrefOutput_TestPoint_Title">Signal with test point or ''Model default'' storage class drives root output port block</entry>
    <entry key="MACheckInvalidModelref_RecAct_NoninlinedSfcn"><![CDATA[Insert a Signal Conversion block before noninlined S-function <a href="matlab:hilite_system(''{0}'')">''{0}''</a> to explicitly avoid an invalid connection.]]></entry>
    <entry key="MACheckInvalidModelref_RecAct_Outport_Block"><![CDATA[Insert a Signal Conversion block before output port block <a href="matlab:hilite_system(''{0}'')">''{0}''</a> to explicitly avoid an invalid connection.]]></entry>
    <entry key="MACheckInvalidModelref_RecAct_Outport_Port">Insert a Signal Conversion block before output port {0,number,integer} to explicitly avoid an invalid connection.</entry>
    <entry key="MACheckInvalidModelref_RecAct_Outport_Blocks"><![CDATA[Insert a Signal Conversion block before output port blocks <a href="matlab:hilite_system(''{0}'')">''{0}''</a> and <a href="matlab:hilite_system(''{1}'')">''{1}''</a> to explicitly avoid an invalid connection.]]></entry>
    <entry key="WarnMaxConstBOSizeIgnoredForMdlRef">The TLC option MaxConstBOSize specified at the model ''{0}'' is ignored while building model reference target.</entry>

    <entry key="WarnSaveFunctionInterfaceInMdlFile">Some function connectors may not be shown because one or more referenced models were saved using an older version of Simulink. Resave these models to avoid this warning.</entry>
    <entry key="BlockSaveFunctionInterfaceInMdlFile">The model ''{0}'' referenced by Model block ''{1}'' needs to be resaved.</entry>

    <entry key="WarnSaveInterfaceInfoInMdlFile">The Model block ''{0}'' is referencing model ''{1}''. Model ''{2}'' was saved using an older version of Simulink. Resave model ''{3}'' to speed up model loading.</entry>
    <entry key="WarningCannotSetSignalPropagationToAll">For signal propagation on signals that go out of Model blocks, "all" is an invalid setting.  The signal propagation setting for the signal out of Model block ''{0}'' has been set to "on".</entry>
    <entry key="ErrorDiagVersionMismatchMsg">Referenced model version must match between Model block ''{0}'', which references model ''{1}'' version ''{2}'', and the version of the model on the MATLAB path (''{3}''). 
    </entry>

    <entry key="WarningDiagVersionMismatchMsg">Model block ''{0}'' referenced model ''{1}'' version ''{2}'' and has been updated to reference the version of the model on the MATLAB path (''{3}'').</entry>

    <entry key="WarningNoSyncDiagVersionMismatchMsg">Model block ''{0}'' references model ''{1}'' version ''{2}'', which does not match the version of the model on the MATLAB path (''{3}''). 
    </entry>

    <entry key="MessageViewer_BuildingTarget">Building {0}</entry>
    <entry key="MessageViewer_SearchingHierarchy">Searching for Referenced Models</entry>
    <entry key="MessageViewer_UpdatingSIMTargets">Updating Model Simulation Targets</entry>
    <entry key="MessageViewer_UpdatingCoderTargets">Updating Model Code Generation Targets</entry>

    <entry key="TargetUpdateError">Unable to update models referenced by ''{0}''.</entry>

    <entry key="OutOfDate">The model ''{0}'' has the Rebuild parameter on the Model Referencing pane of the Configuration Parameters dialog box set to Never.  However, the following referenced models are out-of-date for the following reasons.  Consider resetting the Rebuild parameter to a value other than Never.</entry>
    <entry key="ExtModeOutOfDate">The model ''{0}'' is configured to run in external mode, but the referenced models below are out of date.  If an external mode simulation is not required, set ''SimulationMode'' to ''normal''. Otherwise, regenerate the code for ''{1}''.</entry>
    <entry key="OverriddenBusRootOutputNotAllowedInAccel">Overridden bus object ''{0}''  detected at the root Outport block ''{1}''. Overridden bus objects are not supported at root Outport blocks of a referenced model in accelerated simulation mode. Either run the referenced model using normal mode simulation or set the Data type override setting of the referenced model to 'Use local settings' or 'Off'.</entry>
    <entry key="OverriddenLUTObjectNotAllowed">Expected ''DataType'' ''{0}'' specified in submodel for instance-specific parameter ''{1}'' of Model block ''{2}'' is not compatible with DataTypeOverride setting of model ''{3}''. For Simulink.LookupTable objects configured as model arguments, DataTypeOverride is only supported when all fields of the object have a data type compatible with DataTypeOverride setting.</entry>
    <entry key="modelAlreadyCompiled">The model ''{0}'' is already in a compiled state as a referenced model.</entry>
    <entry key="inheritedStatesWhenResettingSubsystem">The function-call subsystem ''{0}'' has the 'States when enabling' 
      parameter set to 'Inherit', and is inheriting from the context of the referenced model's root system.  
      Set the parameter 'States when enabling' on the subsystem's Trigger port block to either 'Reset' or 'Held'.
      The 'Inherit' setting will be removed in a future release.</entry>
    <entry key="inheritedStatesWhenResettingStateflow">The Stateflow chart ''{0}'' has the 'States when enabling' 
      parameter set to 'Inherit', and is inheriting from the context of the referenced model's root system.  
      Set the parameter 'States when enabling' on the Stateflow chart to either 'Reset' or 'Held'.
      The 'Inherit' setting will be removed in a future release.</entry>
    <entry key="inheritedStatesWhenResettingError">The Model block ''{0}'' lives in a conditionally executed 
      context and is referencing a model that directly or indirectly contains function-call subsystems that 
      have their 'States when enabling' parameter set to 'Inherit'.  This is not supported when the "Remove 
      reset function" option in the Configuration Parameters dialog for the referenced model is turned on.
      See below for a list of function-call subsystems that you must update.</entry>
    
    
    <entry key="dialogDescName" translate="false">Model Reference</entry>
    <!-- Used in compareComponentWithChild -->
    
    <entry key="InvalidFixedStepSizeForEnabledModel">The model ''{0}'' has a root level Enable and
      has the Configuration Parameters > Solver > Fixed-step size (fundamental sample time) parameter
      set to ''{1}''.  However, no blocks are running at that rate.  Consider changing
      the fixed-step size of this model to ''{2}''.      
    </entry>
        
    <entry key="ConversionDialogTitle">Create Model Block</entry>    
        
    <entry key="Normal_CB">Normal</entry>
    <entry key="Accelerator_CB">Accelerator</entry>
    <entry key="Software_in_loop_CB">Software-in-the-loop (SIL)</entry>
    <entry key="Processor_in_loop_CB">Processor-in-the-loop (PIL)</entry>
    <entry key="Ports_CB">Ports</entry>
    <entry key="ScheduleEditor_CB">Schedule Editor</entry>
    <entry key="CodeInterfaceMdlref">Model reference</entry>
    <entry key="CodeInterfaceTop">Top model</entry>
    

    <!-- Rebuild Manager messages -->
    <entry key="AddToBuildSkipListNotEmpty">Adding to Rebuild Manager build list for top model ''{0}'' is not supported because the skip list contains models.</entry>
    <entry key="AddToBuildGlobalSkipListNotEmpty">Adding to Rebuild Manager build list for top model ''{0}'' is not supported because the global skip list contains models.</entry>
    <entry key="AddToSkipBuildListNotEmpty">Adding to Rebuild Manager skip list for top model ''{0}'' is not supported because the build list contains models.</entry>
    <entry key="AddToGlobalListBuildListNotEmpty">Adding to Rebuild Manager global skip list is not supported because the build list contains models.</entry>
    <entry key="RemoveErrorSkipListEmpty">Unable to remove model from Rebuild Manager skip list because the list for top model ''{0}'' is empty.</entry>
    <entry key="RemoveErrorBuildListEmpty">Unable to remove model from Rebuild Manager build list because the list for top model ''{0}'' is empty.</entry>
    <entry key="RemoveErrorGlobalSkipListEmpty">Unable to remove model from Rebuild Manager global skip list because the list is empty.</entry>

    <entry key="DirectFeedThrough">LibBlockInputSignal was used by a block in
    this model, but the direct feedthrough was set to false for root input port
    ''{0}''.  Fix the TLC for the block reading this input port.</entry>

    <entry key="SetBlockParamNotAllowedForMixedModeModelRef">Tuning block
    parameters of model ''{0}'' during simulation is not allowed because at
    least one of its instance(s) is referenced in Accelerator,
    Software-in-the-loop (SIL) or Processor-in-the-loop (PIL) mode.</entry>

    <entry key="OutputExportedFcnError" translate="false">Export functions
    output call failed.</entry>
    
    <entry key="EnableExportedFcnError" translate="false">Export functions
    enable call failed.</entry>

    <entry key="DisableExportedFcnError" translate="false">Export functions
    disable call failed.</entry>
    
    <entry key="WarnAboutStatesNotLogged"> The model ''{0}'' is logging states,
    but the following referenced models contain a state that cannot be logged
    because its data type is not supported for logging: ''{1}''.  To see which
    states are not logged, simulate these referenced models and check for
    warnings. </entry>

    <!-- Message to flag potential blind spots in TLC -->
    <entry key="InternalCodeGenerationError">
        An internal error occurred while generating code. The error
        message is ''{0}''. Please report this bug to MathWorks Technical
        Support.
    </entry>

    <entry key="WarnAboutConstCastPrototypeFeature">
        Model ''{0}'' is being used as a referenced model through block ''{1}'', and it 
        is using the Model step function prototype control. The referenced model's root 
        input argument ''{2}'' does not have
        a 'const' qualifier, but its source signal in the parent model has a 'const' 
        qualifier. To honor the referenced model's interface specification, a type cast
        has been inserted in the code for the parent model to discard the 'const' qualifier
        from the source signal. If this behavior is not desired, consider adding an
        appropriate 'const' qualifier to the ''{3}'' argument of the referenced model.
    </entry>
    <entry key="WarnAboutConstCastIOArgFeature">
        Model ''{0}'' is being used as a referenced model through block ''{1}'', and it 
        is using the 'I/O arguments step method' style C++ class interface. 
        The referenced model's root input argument ''{2}'' does not have
        a 'const' qualifier, but its source signal in the parent model has a 'const' 
        qualifier. To honor the referenced model's interface specification, a type cast
        has been inserted in the code for the parent model to discard the 'const' qualifier
        from the source signal. If this behavior is not desired, consider adding an
        appropriate 'const' qualifier to the ''{3}'' argument of the referenced model.
    </entry>
    <entry key="DefaultInterfaceConstInconsistency">
        Referenced model ''{0}'' in block ''{1}'' uses 'I/O arguments step method' style
        C++ class interface. The root input argument ''{2}'' to the referenced model
        does not have a 'const' qualifier.
        The source signal in the parent model uses 'Default step method' style interface
        and has a 'const' qualifier.
        Resolve the 'const' qualifier inconsistencies between the referenced model and the
        parent model by adding a 'const' qualifier to the referenced model argument ''{3}'',
        or by using the same C++ class interface style for the referenced model and the
        parent model.
    </entry>

    <entry key="UpgradeToModelMask">Model contains Model blocks with user-defined masks, which can be upgraded to system masks. Replace these user-defined masks with system masks.</entry>

      <entry key="unableToFindSparseJacobianFile">Unable to open the sparse Jacobian
    data file: ''{0}''.</entry>

    <entry key="VarDimsNotSupportedForVirtualBusAcrossModelReferenceInput">
        Inport block {0,number,integer} of model ''{1}'' accepts a virtual
        bus with a variable dimensions element. This is not currently supported
        for referenced models. Please configure the bus to be nonvirtual by
        opening the Inport block parameters and selecting "Output as nonvirtual bus".
    </entry>

    <entry key="VarDimsNotSupportedForVirtualBusAcrossModelReferenceOutput">
        Outport block {0,number,integer} of model ''{1}'' outputs a virtual bus
        with a variable dimensions element. This is not currently supported 
        for referenced models. Please configure the bus to be nonvirtual by
        opening the Outport block parameters and selecting "Output as nonvirtual
        bus in parent model".
    </entry>
    
    


    

    <entry key="VirtualBusAcrossModelReferenceAOBInput">
        Inport block {0,number,integer} of referenced model ''{1}'' accepts a
        virtual bus and the bus ''{2}'' has an element that is an array of
        buses.  Arrays of buses are not supported in virtual buses.  On the
        Inport block, select "Output as nonvirtual bus".
    </entry>


    <entry key="VirtualBusAcrossModelReferenceAOBOutput">
        Outport block {0,number,integer} of referenced model ''{1}'' accepts a
        virtual bus and the bus ''{2}'' has an element that is an array of
        buses.  Arrays of buses are not supported in virtual buses.  On the
        Outport block, select "Output as nonvirtual bus in parent model".
    </entry>

    <entry key="VirtualBusRootIOInfo_InvalidArg">slInternal call
    ''getModelReferenceVirtualBusRootPortInformation'' requires one argument which
    must be the handle to a root Inport or Outport block of a referenced model.</entry>
    <entry key="VirtualBusAcrossModelReference_SampleTimeMismatch_Input">
      Inport block {0,number,integer} of referenced model ''{1}'' specifies a
      sample time of {2}, which is incompatible with sample time {3} of bus
      element ''{4}'' of bus object ''{5}''.  These sample times either need to
      be the same, or one or both of them must be inherited.
    </entry>


    <entry key="VirtualBusAcrossModelReference_SampleTimeMismatch_Output">
      Outport block {0,number,integer} of referenced model ''{1}'' specifies a
      sample time of {2}, which is incompatible with sample time {3} of bus
      element ''{4}'' of bus object ''{5}''.  These sample times either need to
      be the same, or one or both of them must be inherited.
    </entry>

    <entry key="DeletedUserDefinedMask">The user-defined mask for block
    ''{0}''is now replaced with an auto generated Model Mask.</entry>
    
    <entry key="OverriderWarnForProtectedModels">''{1}'' value includes these protected models: {2}. Overriding the simulation mode of the corresponding Model blocks during simulation of top model ''{0}'' is not supported.</entry>
    <entry key="OverriderWarnForProtectedModelBlocks">''{1}'' value includes these Model blocks that reference protected models: {2}. Overriding the simulation mode of these Model blocks during simulation of top model ''{0}'' is not supported.</entry>
    <entry key="OverriderWarnForModelsNotFound">''{1}'' value includes these commented, inactive, or unreferenced models: {2}. Overriding the simulation mode of the corresponding Model blocks during simulation of top model ''{0}'' is not supported.</entry>
    <entry key="OverriderWarnForModelBlocksNotFound">''{1}'' value includes these commented, inactive, or nonexistent Model blocks: {2}. Overriding the simulation mode of these Model blocks during simulation of top model ''{0}'' is not supported.</entry>
    <entry key="OverriderWarnAccelOrRapidAccelNotSupported">Top model must simulate in normal mode for ''{0}'' value of ''{1}'' to affect the simulation of referenced models.</entry>
    
    <entry key="SaveSystemWithDirtyReferencedModels">Unable to save specified model because it references dirty models, such as ''{0}''. To save the specified model and all dirty referenced models, use the save_system function with ''SaveDirtyReferencedModels'' set to ''on''.</entry>
    
    <entry key="ChangeModelNameWithDirtyReferencedModels">Changing the referenced model
    file name of Model block ''{0}'' is not supported when a model it directly or
    indirectly references is open with unsaved changes.</entry>
    
    <entry key="DeleteBlockWithDirtyReferencedModels">Deleting block ''{0}'' is not 
    supported when a model it directly or indirectly references is open with unsaved
    changes.</entry>
    
    <entry key="invalidOverrideModels">''{0}'' value must be a cell array of model names when ''{1}'' value is ''{2}''.</entry>
    <entry key="invalidOverrideBlocks">''{0}'' value must be an array of Simulink.BlockPath objects when ''{1}'' value is ''{2}''.</entry>

    <entry key="invalidSubModel">Invalid referenced model ''{0}'' specified for the model hierarchy of top model ''{1}''.</entry>


    <entry key="PropertyInspectorModelRefObjectType" translate="false" note="TranslateFalseBatch;">ModelReference</entry>
    <entry key="PropertyInspectorProtectedModelRefObjectType" translate="false" note="TranslateFalseBatch;">ProtectedModelReference</entry>

    <entry key="CannotFetchUpdateStatus">Unable to fetch update-only model status.</entry>    

    <entry key="ContainsModelRefWithIRTPorts">The Model block ''{0}'' references
    a model which contains another Model block with an Initialize, Reinitialize, Reset, or
    Terminate ports enabled. In such case, the enabling of the Initialize, Reinitialize, Reset
    or Terminate port on the Model block ''{0}'' is not supported.</entry>

    <entry key="ModelWithControlPortContainsIRTFunctions">The Model block ''{0}'' has control port and references a model which contains Reinitialize functions. In such case, code generation of the Model block ''{0}'' is not supported.</entry>

    <entry key="ModelRefNoEventPortsForReinitialize">Enabling the reinitialize port on Model block ''{0}'' is not supported because the Model block is inside Reinitialize environment.</entry>
    
    
    <entry key="ModelNeedReinitializeFunction">Model block ''{0}'' is inside the environment of Reinitialize function ''{1}''. In such case, the referenced model should have the Reinitialize event ''{2}'' at the root level.</entry>

    <entry key="ModelNeedReinitializeFunctionAtRoot">Model block ''{0}'' has Reinitialize ports. In such case, the referenced model should have the Reinitialize event ''{1}'' at the root level.</entry>
    
    <entry key="ContainsModelWithSigObjICDrivingRootOutport">The Model block ''{0}'' references a model which contains a signal object with an explicit initial value driving a root outport block. In such cases, the enabling of the Initialize, Reinitialize, Reset or Terminate ports on the Model block ''{0}'' is not supported when the model is being simulated in Rapid Accelerator mode.</entry>
    <entry key="UnconnectedIRTPortsOnModelInExpFcnMdl">The Model block ''{0}'' has Initialize, Reinitialize, Reset or Terminate ports enabled. These ports cannot remain unconnected when the top model ''{1}'' is an <![CDATA[<a href="matlab:helpview([docroot, ''/toolbox/simulink/ug/simulink_ug.map''], ''export_function_models'');">export-function model</a>.]]></entry>

    <entry key="InvalidLinearizationModelRefWithIRTPorts">Linearization is not
    supported for Model block ''{0}'' because it has an Initialize, Reinitialize, Reset, or
    Terminate port enabled.</entry>

    <entry key="InvalidCodeGenWithModelRefWithEventPorts">Code generation is not 
    supported for model ''{0}'' because Model block ''{1}'' has at least one 
    enabled initialize, reinitialize, reset, or terminate port.</entry>

    <entry key="InvalidCodeGenWithModelRefWithPeriodicEventPorts">The top model
    ''{0}'' contains the Model block ''{1}'' with periodic event ports
    enabled. In such case, code generation is supported only when the sample
    time of the input signal to each periodic event port matches the sample time
    specified on the periodic event port itself.</entry>

    <entry key="InvalidCPPCodeGenWithModelRefWithPeriodicEventPorts">The model
    ''{0}'' contains the Model block ''{1}'' with periodic event ports
    enabled. C++ code generation is not supported for such model.
    </entry>

    <entry key="InvalidCodeGenWithNestedModelRefWithEventPorts">Code generation
    is not supported for top model ''{1}'' due to one of the following reasons:

    \n\t(1) Model block ''{0}'' references a model which contains another Model
    block with one or more of its Initialize, Reinitialize, Reset, or Terminate ports enabled;

    \n\t(2) Model block ''{0}'' references a model which contains another Model
    block with periodic event ports enabled and the sample time of at least one
    input signal to a periodic event port of the nested Model block does not
    match the sample time specified on the periodic event port itself.</entry>

    <entry key="InvalidMdlRefCodeGenWithModelRefWithEventPorts">The top model
    ''{0}'' contains the Model block ''{1}'' which has one or more of its
    Initialize, Reinitialize, Reset, or Terminate ports enabled. Model reference target code
    generation is not supported for such model.</entry>

    <entry key="InvalidMdlRefCodeGenWithModelRefWithPeriodicEventPorts">The top
    model ''{0}'' contains the Model block ''{1}'' with periodic event ports
    enabled. In such case, model reference target code generation is supported
    only when the sample time of the input signal to each periodic event port
    matches the sample time specified on the periodic event port itself.</entry>

    <entry key="InvalidNestedAdaptedModel"><![CDATA[When the Model block ''{0}'' has the ''Schedule rates'' parameter selected and ''Schedule rates with'' is set to ''Ports'', and the referenced model ''{1}'' is not an <a href="matlab:helpview([docroot ''/toolbox/simulink/helptargets.map''], ''export_function_models'')">export-function model</a>, it is not allowed to contain any Model blocks with the same parameter selected inside ''{1}''.]]></entry>
    <entry key="InvalidVirtualBusWithStorageClassSpec"> Outport block ''{0}'' is configured to output a virtual bus but has non-Auto storage class. Set "Output as nonvirtual bus in parent model" on the block dialog or change to ''Auto'' storage class.</entry>

    <entry key="InvalidModelContainingStateRWInSubsystemWhichResets">The model block ''{0}'' contains State Reader/Writer blocks and is placed in subsystem ''{1}'' which resets its states. This is not supported. To fix this, ensure the model referenced by block ''{0}'' does not contain State Reader/Writer blocks or change the setting of subsystem ''{1}''. </entry>
    <entry key="InvalidModelContainingIRTSystemsInSubsystemWhichResets">The model block ''{0}'' contains Initialize/Reinitialize/Reset/Terminate Function blocks and is placed in subsystem ''{1}'' which resets its states. This is not supported. To fix this, ensure the model referenced by block ''{0}'' does not contain Initialize/Reinitialize/Reset/Terminate Function blocks or change the setting of subsystem ''{1}''. </entry>

    <entry key="RequireMdlTerminateFcn">Terminate function must be generated because the model ''{0}'' contains the Model block ''{1}'', which in turn references another model with a Terminate Function block inside.
    <![CDATA[
      <actions>
        <action type="fixit">
          <cmd>matlab:configset.internal.fixIt(''{0}'',''IncludeMdlTerminateFcn'',''on'')</cmd> 
          <txt>To generate code, check configuration parameter <sldiag objui="configset" objparam="IncludeMdlTerminateFcn">IncludeMdlTerminateFcn</sldiag>.</txt>
        </action>
      </actions>
    ]]>
    </entry>

    <entry key="ReferencingPartitionedModelIncompatibleWithIRTPorts">
        <![CDATA[Unable to reference a model with explicit partitions when showing initialize, reset, reinitialize, or terminate ports on model block ''{0}''.
            <actions exclusiveFixIts="yes">
                <action type="fixit" id="DoNotShowIRTPorts">
                    <cmd>set_param_action(''{0}'', ''ShowModelTerminatePort'', ''off'', ''ShowModelResetPorts'', ''off'', ''ShowModelReinitializePorts'', ''off'', ''ShowModelInitializePort'', ''off'');</cmd>
                    <txt>Do not show initialize, reset, reinitialize and terminate ports.</txt>
                </action>
                <action type="fixit" id="ScheduleRatesWithPorts">
                    <cmd>set_param_action(''{0}'', ''ScheduleRatesWith'',''Ports'');</cmd>
                    <txt>Schedule discrete rates from the model block with ports.</txt>
                </action>
            </actions>
        ]]></entry>
        
    <entry key="SchedulingWithScheduleEditorIncompatibleWithIRTPorts">
        <![CDATA[Unable to schedule rates using the Schedule Editor when showing initialize, reset, reinitialize, or terminate ports on model block ''{0}''.
            <actions exclusiveFixIts="yes">
                <action type="fixit" id="DoNotShowIRTPorts">
                    <cmd>set_param_action(''{0}'', ''ShowModelTerminatePort'', ''off'', ''ShowModelResetPorts'', ''off'', ''ShowModelReinitializePorts'', ''off'', ''ShowModelInitializePort'', ''off'');</cmd>
                    <txt>Do not show initialize, reset, reinitialize and terminate ports.</txt>
                </action>
                <action type="fixit" id="ScheduleRatesWithPorts">
                    <cmd>set_param_action(''{0}'', ''ScheduleRatesWith'',''Ports'');</cmd>
                    <txt>Schedule discrete rates from the model block with ports.</txt>
                </action>
            </actions>
        ]]></entry>

    <entry key="RegisteringEventsIncompatibleWithIRTPorts">
        <![CDATA[Unable to register events from referenced model when showing initialize, reset, reinitialize or terminate ports on model block ''{0}''.
            <actions exclusiveFixIts="yes">
                <action type="fixit" id="DoNotShowIRTPorts">
                    <cmd>set_param_action(''{0}'', ''ShowModelTerminatePort'', ''off'', ''ShowModelResetPorts'', ''off'', ''ShowModelReinitializePorts'', ''off'', ''ShowModelInitializePort'', ''off'');</cmd>
                    <txt>Do not show initialize, reset, reinitialize and terminate ports.</txt>
                </action>
            </actions>
        ]]></entry>

    <entry key="RegisteringEventsInvalidWithPeriodicEventPortsForPartitions">
        <![CDATA[Unable to register events from referenced model when scheduling rates with ports on model block ''{0}''.
            <actions exclusiveFixIts="yes">
                <action_catalog id="SimulinkPartitioning:Fixes:ModelPartition" ids="ScheduleEditor">
                    <arg>{0}</arg>
                </action_catalog>
            </actions>
        ]]></entry>

    <entry key="RegisteringEventsInvalidWithPeriodicEventPortsForRates">
        <![CDATA[Unable to register events from referenced model when scheduling rates with ports on model block ''{0}''.
            <actions exclusiveFixIts="yes">
                <action_catalog id="SimulinkPartitioning:Fixes:ModelPartition" ids="ScheduleEditor">
                    <arg>{0}</arg>
                </action_catalog>
                <action_catalog id="SimulinkPartitioning:Fixes:ModelPartition" ids="DoNotSchedule">
                    <arg>{0}</arg>
                </action_catalog>
            </actions>
        ]]></entry>

    <entry key="cannotUseSimTarget">The model reference simulation target cannot be used because of the following error: ''{0}''</entry>

    <entry key="cannotUseRapidAccelTarget">The rapid accelerator executable cannot be used because of the following error: ''{0}''</entry>

    <entry key="InvalidModelNamesInput">Incorrect syntax specified. 'ModelName' value ''{0}'' of ''{1}'' must be a cell array of valid model names.</entry>

    <entry key="StorageClassNotCompatible"><![CDATA[In model defaults mapping, storage class ''{0}'' for model element category {1} for model ''{2}'' is not compatible with storage class ''{3}'' for model element category {4} for referenced model ''{5}''. Select compatible storage classes for global parameters and global data stores in model reference hierarchy.]]></entry>

    <entry key="cannotUseMSFWithSFcnBlock">File ''{0}'' is not compatible with the S-Function block ''{1}''.</entry>
    <entry key="ParamIntf_UngroupedArgument">Parameter ''{0}'' on Model block ''{1}'' is configured as an argument, but its storage class is set to 'Auto' in model ''{2}''. Change the storage class of the parameter in the model ''{2}'' or clear the 'Argument' check box in Model block ''{1}''. Note that clearing the 'Argument' check box will discard values for this parameter that have been specified higher in the model reference hierarchy, which may change the behavior of the model.</entry>
    <entry key="ParamIntf_UngroupedArgument_CPP">Parameter ''{0}'' on Model block ''{1}'' is configured as an argument, but this requires that the default mapping for model parameter arguments in model ''{2}'' specifies that Data Visibility is ''None'', and the parameter needs to be defined as a data object in that model. If the parameter is defined as a MATLAB variable, convert it to a data object.  Then ensure that the Data Visibility of the default mapping is set to ''private''. If it is not possible to satisfy both of these conditions, clear the 'Argument' check box in Model block ''{1}''. Clearing the 'Argument' check box will discard values for this parameter that have been specified higher in the model reference hierarchy, which may change the behavior of the model.</entry>
    <entry key="InstanceSpecificBlkParam_Commented">Uncomment block ''{0}'' that contains model arguments.</entry>
    <entry key="ParamIntf_InvalidSC">Instance-specific parameter ''{0}'' on model ''{1}'' has a non-Auto storage class assigned to it at its place of definition. However, its value expression ''{2}'' contains ''{3}'', also with non-Auto storage class. This may cause non-deterministic parameter initialization in code and therefore is not allowed.</entry>
    <entry key="ParamIntf_InstanceSpecificValue">Unable to assign parameter ''{2}'' to model argument ''{0}'' in block ''{1}''. Assignment of a model argument to another model argument is not supported.</entry>
    <entry key="ParamIntf_ParameterWriter">Unable to assign model argument ''{2}'' to parameter ''{0}'' of Model block ''{1}''. Use of a Parameter Writer block is not supported for Model block parameters initialized with a model argument. Clear the Argument check box for model argument ''{2}'' or remove the Parameter Writer block ''{3}''.</entry>
    <entry key="SILPILDistributedHardwareNotSupported">Simulation for model ''{0}'' is not supported when the simulation mode of a referenced model that is mapped to a hardware node is set to ''Software-in-the-loop (SIL)'' or ''Processor-in-the-loop (PIL)''.  Set the ''Simulation Mode'' parameter for all Model blocks that reference ''{1}'' to ''Normal'' or ''Accelerator''.</entry>
    <entry key="VariantConditionCompileTime">Model must be compiling to determine whether a port of Subsystem block ''{0}'' has a variant condition.</entry>
    <entry key="RootLevelControlPortsNotSupportedForArchitecture">Unable to compile architecture because the linked Simulink behavior model ''{0}'' contains at least one root-level enable or trigger ports.</entry>

    <entry key="CannotReferenceSystemArchitecture">The model ''{0}'' is a system architecture. Referencing a system architecture model from a software architecture model is not supported.</entry>

    <entry key="SWArchCannotReferenceModelWithContTs">The Model block ''{0}'' references model ''{1}'', which contains a block with a continuous or fixed-in-minor-step sample time that is not supported in software architecture models.</entry>

    <entry key="SWArchCannotReferenceModelWithCtrlTs">The Model block ''{0}'' references model ''{1}'', which contains a block with a controllable sample time that is not supported in software architecture models.</entry>

    <entry key="SWArchUnsupportedBlkInProtectedModelRef">The Model block ''{0}'' references model ''{1}'', which contains a block that is not supported in software architectures.</entry>

    <entry key="SWArchUnsupportedBlkInModelRef">The Model block ''{0}'' references model ''{1}'', which contains the following blocks that are not supported in software architectures:</entry>

    <entry key="SWArchModelRefHasNoDiscreteRate">The Model block ''{0}'' references model ''{1}'', which is not supported in software architectures because it does not contain any blocks with a discrete sample time.</entry>
    
    <!-- Model argument default value messages -->
    <entry key="DefaultValue_OlderProtectedModel">Default value for model argument ''{0}'' on Model block ''{1}'' is not supported for protected model saved in older release of Simulink. Provide an explicit value.</entry>
    <entry key="DefaultValue_NoExplicitFinalValueDiagErr">Provide an explicit value for the final value for model argument ''{0}'' on Model block ''{1}''.
        <![CDATA[
          <actions>
            <action type="suggestion">
              <cmd>open_system(''{1}'', ''parameter'');</cmd>
              <txt>Provide an explicit value for ''{0}'' using ''Instance parameters'' for the Model block.</txt>
            </action>
            <action type="fixit">
              <cmd>configset.internal.fixIt(''{2}'',''ModelReferenceNoExplicitFinalValueMsg'',''warning'');</cmd>
              <txt>Convert this error to a warning by setting ''Configuration Parameters > Diagnostics > Model Referencing > No explicit final value for model arguments'' to ''warning'' for ''{2}''.</txt>
            </action>
            <action type="fixit">
              <cmd>configset.internal.fixIt(''{2}'',''ModelReferenceNoExplicitFinalValueMsg'',''none'');</cmd>
              <txt>Turn off this error by setting ''Configuration Parameters > Diagnostics > Model Referencing > No explicit final value for model arguments'' to ''none'' for ''{2}''.</txt>
            </action>
          </actions>
        ]]>
    </entry>
    <entry key="DefaultValue_NoExplicitFinalValueDiagWarn">An explicit value is not provided for model argument ''{0}'' on Model block ''{1}''.
        <![CDATA[
          <actions>
            <action type="suggestion">
              <cmd>open_system(''{1}'', ''parameter'');</cmd>
              <txt>Provide an explicit value for ''{0}'' using ''Instance parameters'' for the Model block.</txt>
            </action>
            <action type="fixit">
              <cmd>configset.internal.fixIt(''{2}'',''ModelReferenceNoExplicitFinalValueMsg'',''none'');</cmd>
              <txt>Turn off this warning by setting ''Configuration Parameters > Diagnostics > Model Referencing > No explicit final value for model arguments'' to ''none'' for ''{2}''.</txt>
            </action>
          </actions>
        ]]>
    </entry>
    <entry key="DefaultValue_CompileInfoResave">Default value changed for model arguments: {0}</entry>
    <entry key="CompiledVariantInfo_CompileInfoResave">CompiledVariantInfo value changed for model blocks : {0}</entry>
    <entry key="CalibrationData_CompileInfoResave">CalibrationData value changed for model blocks: {0}</entry>
    <entry key="EnforceDataConsistencyInfo_CompileInfoResave">EnforceDataConsistencyInfo value changed for items: {0}</entry>
    <entry key="ModelArgDefaultInternalValue" translate="false"></entry>
    <entry key="ModelArgDefaultUIValue">&lt;from below&gt;</entry>
    <entry key="ModelArgDefaultUIValue_InstanceSpecific">&lt;inherited&gt;</entry>
    <!-- End of model argument default value messages -->

    <!-- Model argument value interface messages -->
    <entry key="ValueIntf_IncompleteSpec_Suggestions">
        <![CDATA[
          <actions>
            <action type="suggestion">
              <txt>To use model argument ''{0}'' as an interface, provide missing specification.</txt>
            </action>
            <action type="suggestion">
              <txt>If model argument ''{0}'' is not an interface, provide a ''Value''.</txt>
            </action>
          </actions>
        ]]>
    </entry>
    <entry key="ValueIntf_UnableToUseSubmodelAsTop">Unable to use model argument ''{0}'' as an interface when model ''{1}'' is being compiled as a top model.
        <![CDATA[
          <actions>
            <action type="suggestion">
              <txt>Reference ''{1}'' from a model or create a harness to compile ''{1}''.</txt>
            </action>
            <action type="suggestion">
              <txt>If model argument ''{0}'' is not an interface, provide a ''Value''.</txt>
            </action>
          </actions>
        ]]>
    </entry>
    <entry key="ValueIntf_IncompleteSpec_DT">Parameter object must have a non-''auto'' ''DataType''.</entry>
    <entry key="ValueIntf_IncompleteSpec_Dimensions">Parameter object must have non-empty numeric ''Dimensions'' or symbolic ''Dimensions''.</entry>
    <entry key="ValueIntf_UnableToSynthesize">Unable to use model argument ''{0}'' as an interface.</entry>
    <entry key="ValueIntf_UnknownError">Unknown error. Check design specifications including
    ''DataType'', ''Dimensions'', ''Min'', ''Max'' and ''Complexity''.</entry>
    <entry key="ValueIntf_UnableToSynthesizeAliasType">Unable to use Simulink.AliasType ''{0}'' in model argument interface.</entry>
    <entry key="ValueIntf_UnableToSynthesizeBus">Unsupported design specifications specified for Bus object ''{0}''.</entry>
    <entry key="ValueIntf_UnableToSynthesizeBusElement">Unsupported design specifications specified for Bus element ''{0}''.</entry>
    <entry key="ValueIntf_UnableToSynthesizeEnumType">Unable to use Simulink.EnumType ''{0}'' in model argument interface.</entry>
    <entry key="ValueIntf_UnableToSynthesizeNumericType">Unable to use Simulink.NumericType ''{0}'' in model argument interface.</entry>
    <entry key="ValueIntf_InvalidDimensions">Dimensions must be non-negative and non-zero integers.</entry>
    <entry key="ValueIntf_InvalidDataType">Resolved DataType ''{0}'' is not supported.</entry>
    <entry key="ValueIntf_ComplexBoolean">Boolean data type ''{0}'' cannot be complex.</entry>
    <entry key="ValueIntf_RequireExplicitFinalValue">An explicit value must be provided for model argument ''{0}''
    on Model block ''{1}'' because a default value for the model argument is not specified at the point of definition.</entry>
    <!-- End of model argument value interface messages -->

    <!-- Enforce data consistency check messages -->
    <entry key="UnableToEnableConsistencyChecking">Unable to enforce consistent data definitions for model ''{0}'' because consistency checking is not enforced for referenced systems ''{1}''.</entry>
    <entry key="UnableToEnableTopModelConsistencyCheckingWithFix">Unable to enforce consistent data definitions for top model ''{0}'' because consistency checking is not enforced for referenced systems ''{1}''.
      <![CDATA[
        <actions>
          <action type="fixit" id="DisableTopModelDataConsistencyChecking" retvalue="false">
            <cmd>load_system(''{0}''); set_param(''{0}'', ''EnforceDataConsistency'', ''off'');</cmd>
            <txt>Set model parameter 'EnforceDataConsistency' to 'off' for top model ''{0}''.</txt>
          </action>
        </actions>
      ]]>
    </entry>
    <entry key="DataConsistencyOffNotSupportedWithNonNormalMode">Model parameter 'EnforceDataConsistency' must be set to 'on' for model ''{0}'' because either the model or its parent is not executing in normal mode.</entry>
    <entry key="DataConsistencyOffNotSupportedWithProtectedModel">Model parameter 'EnforceDataConsistency' must be set to 'on' for protected model ''{0}''.</entry>
    <entry key="DataConsistencyOffNotSupportedWithCodeGenOrSILPIL">To generate code or execute in SIL/PIL mode for model ''{0}'', set model property 'EnforceDataConsistency' to 'on' on the 'External Data' tab of the Model Properties dialog box.</entry>
    <entry key="InconsistentBusObjectDefinition">Simulink.Bus object "{0}" must have consistent definitions in models "{1}" and "{2}".</entry>
    <!-- End of enforce data consistency check messages -->
    <entry key="InconsistentClockResolution">Clock resolution for sample time {0} in parent model ''{1}'' is {2}, but clock resolution in referenced model ''{3}'' is {4}. Clock resolutions for the same sample time must match between parent model and referenced model.</entry>

    <entry key="RemoveModelReferenceExtraNoncontSigsMsg">Diagnostic configuration parameter ''ModelReferenceExtraNoncontSigs'' has been removed. Use the Solver Profiler to check the number of solver resets and the reset sources instead.</entry>
    <entry key="ModelRefInvalidIOMACheckMsg">Diagnostic configuration parameter ''ModelReferenceIOMsg'' has been removed. Use Model Advisor check mathworks.hism.hisl_0079 to diagnose invalid connections to root port blocks instead.</entry>
    <entry key="Internal_modelNotLoaded" translate="false">Model must be loaded to use this internal call.</entry>
    <entry key="LocalSolverDisabled">Set parameter "UseModelRefSolver" to "off" in model "{0}".</entry>
  </message>
</rsccat>

<!-- LocalWords:  xml UTF CDATA SIL checksums mdlrefs slprj mexfile SLX SLXP Ps interpolant Alg hism
     LocalWords:  testpointed singletasking Parameterizing FCNCALL Resave slxp Underspecified hisl
     LocalWords:  unchecking tunability tunablevars parameterobjects dropdown noninherited Wks
     LocalWords:  AES mlx Noncont Sigs nonconstant InvalidMdlRefPhaseFastRst codesearch
     LocalWords:  subsystem's Webview Configurator webview buildable resaved
     LocalWords:  FPC nontunable sampletimes th RTB resaving MRV Nonreusable
     LocalWords:  Argument NEPCE Multithreading
-->
