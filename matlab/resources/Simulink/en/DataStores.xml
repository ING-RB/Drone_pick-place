<?xml version="1.0" encoding="UTF-8" ?>
<!-- Copyright 2009-2023 The MathWorks, Inc. -->
<rsccat version="1.0" locale="en_US" product="Simulink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../../../../matlab/resources/schema/msgcat.xsd">
  <message>
    <entry key="DSReadBlockDescription">Read values from the specified data store. Use the 'Element Selection' tab to select specific elements to read. If you do not select any elements, the entire data store is read.</entry>
    <entry key="DSWriteBlockDescription">Write values to the specified data store. Use the 'Element Assignment' tab to assign values to specific elements. If you do not select any elements, the write operation is performed on the entire data store.</entry>
    <entry key="DSMDynamicIndexingBlockDescription">For dynamic indexing, use index port labels e.g. idx1, idx2 as index variables in element selection expressions.</entry>
    <entry key="busSupportForDSMIsUnavailable"><![CDATA[The data type of the Data Store Memory block ''{0}'' is a bus type. Data Store Memory blocks support bus types only when strict bus modeling is ON. To enable this diagnostic, set the ''Mux blocks used to create bus signals'' option to ''error'' in Configuration Parameters Dialog -> Diagnostics -> Connectivity pane.]]></entry>
    <entry key="hiddenGlobalDSMBlockMessage">The above message is related to a hidden Data Store Memory block. This block is inserted to support a global data store corresponding to the Simulink.Signal object ''{0}''.</entry>
    <entry key="hiddenModelDSMBlockMessage">The above message is related to a hidden Data Store Memory block. This block is inserted to support a local data store corresponding to the Simulink.Signal object ''{0}'' in the model workspace.</entry>
    <entry key="hiddenDSMRefBlockMessage">The above message is related to a reference to the data store ''{0}'' from a submodel.</entry>
    <entry key="dsmLoggingNotSupportedWithBusesInBlocks">The Data Store Memory block ''{0}'' is configured for Data Store Memory logging and the data type of the block is a bus type. Data Store Memory logging is only supported for non-bus types. To eliminate this warning, clear ''Log Signal data'' option on the Logging pane of the Block Parameter dialog.</entry>
    <entry key="dsmLoggingNotSupportedWithBusesInObjects">The Simulink.Signal object ''{0}'' is configured for Data Store Memory logging and the data type of this object is a bus type. Data Store Memory logging is only supported for non-bus types. To eliminate this warning, turn off DataLogging for this Simulink.Signal object.</entry>
    <entry key="dsmLoggingNotSupportedInsideForEachSS">The Data Store Memory block ''{0}'' is configured for Data Store Memory logging. However, Data Store Memory logging does not support a block inside a subsystem, which contains a For Each block. To eliminate this warning, clear the ''Log Signal data'' option on the Logging pane of the Block Parameter dialog.</entry> 
    <entry key="dsmLoggingNotSupportedInsideMLSystemBlk">Logging data stores inside the MATLAB System block ''{0}'' is not supported during accelerator and rapid accelerator mode simulations. To log this data, run the simulation in normal mode.</entry>
    <entry key="dsmLoggingNotSupportedForDynamicArray">Unable to log Data Store Memory block ''{0}'' variables in accelerator and rapid accelerator mode simulations because the data is an unbounded variable-size signal.</entry>
    <entry key="busDSMCannotBeComplex">The data type of the Data Store Memory block ''{0}'' is a bus type and its complexity is set as ''complex''. Please change the complexity of this block or the associated Simulink.Signal object to ''real''.</entry>
    <entry key="InvDSMSettingWithStringType">Invalid parameter setting in Data Store Memory block ''{0}'' with string data type:</entry>    
    <entry key="busDSMCannotHaveVarDims">All signals in the bus object hierarchy must be fixed-sized when bus objects are used in Data Store Memory blocks. The Data Store Memory block ''{0}'' specifies a bus object ''{1}'' for its data type, and this bus object has one or more variable-sized signals in its hierarchy.</entry> 
    <entry key="DSMemoryICDimsMismatch">The dimensions of the ''InitialValue'' parameter of the Data Store Memory block ''{0}'' is inconsistent with the value specified for the ''Dimensions'' parameter of this block. To infer dimensions from ''InitialValue'' specify ''-1'' in the ''Dimensions'' parameter.</entry>
    <entry key="DSMemoryBlockNotFound"><![CDATA[Data store memory with name ''{0}'' was not found for block ''{1}''
    <actions exclusiveFixIts="yes">
        <action type="fixit">
            <cmd>slprivate(''createMissingDataStore_cb'', ''missingDataStoreCompileTime'', ''{0}'', ''{1}'')</cmd>
            <txt>Create data store.</txt>
        </action>
     </actions>
     ]]></entry>
     <entry key="DSMemoryBlockNotFoundForDataStoreReference"><![CDATA[Unable to find data store ''{0}'' for Data Store Memory block ''{1}'' placed inside the model referenced by Model block ''{2}'' with parameter <sldiag objui="blockdlg" objparam="DataStoreReference">''Data store reference''</sldiag> selected.
    <actions exclusiveFixIts="yes">
        <action type="fixit">
            <cmd>add_block(''simulink/Signal Routing/Data Store Memory'', ''{3}'', ''MakeNameUnique'', ''on'', ''DataStoreName'', ''{0}'');</cmd>
            <txt>Add a Data Store Memory block with <sldiag objui="blockdlg" objparam="DataStoreName">''Data store name''</sldiag> ''{0}''.</txt>
        </action>
     </actions>
    ]]></entry>
    <entry key="DSMemoryBlockNotFoundForDataStoreReferenceNonDSM"><![CDATA[Unable to find data store ''{0}'' for Data store block of type ''{3}'' ''{1}'' with parameter <sldiag objui="blockdlg" objparam="DataStoreReference">''Data store reference''</sldiag> selected and placed inside model referenced by Model block ''{2}''.]]></entry>
    <entry key="DSMemoryRenamed">
      <![CDATA[Data store memory with name ''{0}'' has been renamed to ''{1}'' in {2} for block ''{4}''
    <actions exclusiveFixIts="yes">
	    <action type="fixit">
            <cmd>slprivate(''robustVarRefHotlink_cb'', ''renameRef'', ''{6}'', ''{2}'', ''{1}'', ''{0}'', ''{3}'', ''{4}'', ''{5}'')</cmd>
            <txt>Update reference to use ''{1}''.</txt>
        </action>
        <action type="fixit">
            <cmd>slprivate(''robustVarRefHotlink_cb'', ''copyEntry'', ''{6}'', ''{2}'', ''{1}'', ''{0}'', ''{5}'')</cmd>
            <txt>Create a new variable named ''{0}'' as a copy of ''{1}''.</txt>
        </action>
        <action type="fixit">
            <cmd>slprivate(''createMissingDataStore_cb'', ''missingDataStoreCompileTime'', ''{0}'', ''{4}'')</cmd>
            <txt>Create data store.</txt>
        </action>
     </actions>
    ]]>
    </entry>
    <entry key="DSMemoryDeleted">
      <![CDATA[Data store memory with name ''{0}'' in block ''{5}'' has been deleted from {4}
    <actions exclusiveFixIts="yes">
        <action type="fixit">
            <cmd>slprivate(''robustVarRefHotlink_cb'', ''revertCache'', ''{2}'', ''{1}'', ''{0}'', ''{3}'')</cmd>
            <txt>Undo the deletion.</txt>
        </action>
        <action type="fixit">
            <cmd>slprivate(''createMissingDataStore_cb'', ''missingDataStoreCompileTime'', ''{0}'', ''{5}'')</cmd>
            <txt>Create data store.</txt>
        </action>
     </actions>
    ]]>
    </entry>
    <entry key="DSMemoryBlockNotFound3">Data store memory with name ''{0}'' was not found</entry>
    <entry key="DupDSMemoryBlockFound0">Duplicate data store blocks of block type ''{1}'' named ''{0}'' found.</entry>
    <entry key="DupDSMemoryBlockFound1">First reference is in ''{0}''</entry>
    <entry key="DupDSMemoryBlockFound2">Second reference is in ''{0}''</entry>
    <entry key="InvDataStoreName">Data store name specified in ''{0}'' is an invalid identifier. Valid identifiers start with a letter, contain no spaces or special characters and are at most {1,number,integer} characters long</entry>
    <entry key="UniqueDataStoreMemory"> <![CDATA[Data store memory name ''{0}'' is used for block ''{1}'' and block ''{2}''.
    <actions exclusiveFixIts="yes">
        <action type="fixit">
            <cmd>set_param_action(''{3}'', 'UniqueDataStoreMsg', 'none');</cmd>
            <txt>Consider setting the configuration parameter <sldiag objui="configset" objparam="UniqueDataStoreMsg" objname="{0}">''Duplicate data store names''</sldiag> to ''none''.</txt>
        </action>
        <action type="suggestion">
            <txt>Alternatively, make <sldiag objui="blockdlg" objparam="DataStoreName">''Data store name''</sldiag> parameters of these two blocks different.</txt>
        </action>
     </actions>
]]></entry>
    <entry key="DSReadDiagnosticsNotReported">Block ''{0}'' is reading a bus element from the data store ''{1}''. Data store read/write diagnostics are not reported because this block is either in a model executing in Accelerator mode or in a referenced model with Simulation mode set to Accelerator. To turn this warning off, use: warning(''off'',''Simulink:DataStores:DSReadDiagnosticsNotReported'')</entry>
    <entry key="DSWriteDiagnosticsNotReported">Block ''{0}'' is writing a bus element to the data store ''{1}''. Data store read/write diagnostics are not reported because this block is either in a model executing in Accelerator mode or in a referenced model with Simulation mode set to Accelerator. To turn this warning off, use: warning(''off'',''Simulink:DataStores:DSWriteDiagnosticsNotReported'')</entry>
    <entry key="DSDiagnosticsNotReported">Block ''{0}'' is accessing the data store defined by the block ''{1}''. Data store read/write diagnostics are not reported because the data store has 2 or more dimensions, and this block is either in a model executing in Accelerator mode or in a referenced model with Simulation mode set to Accelerator. To turn this warning off, use: warning(''off'',''Simulink:DataStores:DSDiagnosticsNotReported'')</entry>
    <entry key="DSReadBeforeWrite">The block ''{0}'' is reading from the data store ''{1}'' before any blocks have written to this entire region of memory at time {2}. For performance reasons, occurrences of this diagnostic for this memory at other simulation time steps will be suppressed.</entry>
    <entry key="DSReadBeforeWriteInMinor">The block ''{0}'' is reading from the data store ''{1}'' before any blocks have written to this entire region of memory at time {2}. For performance reasons, occurrences of this diagnostic for this memory at other simulation time steps will be suppressed.</entry>
    <entry key="DSReadBeforeWriteInMWE">The block ''{0}'' is reading from the data store ''{1}'' before any blocks have written to this entire region of memory during event ''{3}'' at time {2}. For performance reasons, occurrences of this diagnostic for this memory at other simulation time steps will be suppressed.</entry>
    <entry key="DSReadBeforeWriteOfElement">The block ''{0}'' is reading from element {1,number,integer} of the data store ''{2}'' before any blocks have written to this memory at time {3}. For performance reasons, occurrences of this diagnostic for this memory at other simulation time steps will be suppressed.</entry>
    <entry key="DSReadBeforeWriteOfElementInMinor">The block ''{0}'' is reading from element {1,number,integer} of the data store ''{2}'' before any blocks have written to this memory at time {3}. For performance reasons, occurrences of this diagnostic for this memory at other simulation time steps will be suppressed.</entry>
    <entry key="DSReadBeforeWriteOfElementInMWE">The block ''{0}'' is reading from element {1,number,integer} of the data store ''{2}'' before any blocks have written to this memory during event ''{4}'' at time {3}. For performance reasons, occurrences of this diagnostic for this memory at other simulation time steps will be suppressed.</entry>
    <entry key="DSReadBeforeWriteOfRegionExpr">The region ''{1}'' of data store memory ''{2}'' that block ''{0}'' is reading from was not fully written to by any blocks at time {3}. For performance reasons, occurrences of this diagnostic for this memory at other simulation time steps will be suppressed.</entry>
    <entry key="DSReadBeforeWriteOfRegionExprInMinor">The region ''{1}'' of data store memory ''{2}'' that block ''{0}'' is reading from was not fully written to by any blocks at time {3}. For performance reasons, occurrences of this diagnostic for this memory at other simulation time steps will be suppressed.</entry>
    <entry key="DSReadBeforeWriteOfRegionExprInMWE">The region ''{1}'' of data store memory ''{2}'' that block ''{0}'' is reading from was not fully written to by any blocks during event ''{4}'' at time {3}. For performance reasons, occurrences of this diagnostic for this memory at other simulation time steps will be suppressed.</entry>
    <entry key="DSWriteAfterRead">The block ''{0}'' is writing to the data store ''{1}'' but the block(s) ''{2}'' have already read from a portion or the entire region of this memory at time {3}. For performance reasons, occurrences of this diagnostic for this memory at other simulation time steps will be suppressed.</entry>
    <entry key="DSWriteAfterReadInMinor">The block ''{0}'' is writing to the data store ''{1}'' but the block(s) ''{2}'' have already read from a portion or the entire region of this memory at time {3}. For performance reasons, occurrences of this diagnostic for this memory at other simulation time steps will be suppressed.</entry>
    <entry key="DSWriteAfterReadInMWE">The block ''{0}'' is writing to the data store ''{1}'' but the block(s) ''{2}'' have already read from a portion or the entire region of this memory during event ''{4}'' at time {3}. For performance reasons, occurrences of this diagnostic for this memory at other simulation time steps will be suppressed.</entry>
    <entry key="DSWriteAfterReadOfElement">The block ''{0}'' is writing to element {1,number,integer} of the data store ''{2}'' but the block ''{3}'' has already read from this memory at time {4}. For performance reasons, occurrences of this diagnostic for this memory at other simulation time steps will be suppressed.</entry>
    <entry key="DSWriteAfterReadOfElementInMinor">The block ''{0}'' is writing to element {1,number,integer} of the data store ''{2}'' but the block ''{3}'' has already read from this memory at time {4}. For performance reasons, occurrences of this diagnostic for this memory at other simulation time steps will be suppressed.</entry>
    <entry key="DSWriteAfterReadOfElementInMWE">The block ''{0}'' is writing to element {1,number,integer} of the data store ''{2}'' but the block ''{3}'' has already read from this memory during event ''{5}'' at time {4}. For performance reasons, occurrences of this diagnostic for this memory at other simulation time steps will be suppressed.</entry>
    <entry key="DSWriteAfterReadOfRegionExpr">The region ''{1}'' of data store memory ''{2}'' that block ''{0}'' is writing to was already read by the block(s) ''{3}'' in part or fully at time {4}. For performance reasons, occurrences of this diagnostic for this memory at other simulation time steps will be suppressed.</entry>
    <entry key="DSWriteAfterReadOfRegionExprInMinor">The region ''{1}'' of data store memory ''{2}'' that block ''{0}'' is writing to was already read by the block(s) ''{3}'' in part or fully at time {4}. For performance reasons, occurrences of this diagnostic for this memory at other simulation time steps will be suppressed.</entry>
    <entry key="DSWriteAfterReadOfRegionExprInMWE">The region ''{1}'' of data store memory ''{2}'' that block ''{0}'' is writing to was already read by the block(s) ''{3}'' in part or fully during event ''{5}'' at time {4}. For performance reasons, occurrences of this diagnostic for this memory at other simulation time steps will be suppressed.</entry>
    <entry key="DSWriteAfterWrite">The block ''{0}'' is writing to the data store ''{1}'' but the block(s) ''{2}'' have already written to a portion or the entire region of this memory at time {3}. For performance reasons, occurrences of this diagnostic for this memory at other simulation time steps will be suppressed.</entry>
    <entry key="DSWriteAfterWriteInMinor">The block ''{0}'' is writing to the data store ''{1}'' but the block(s) ''{2}'' have already written to a portion or the entire region of this memory at time {3}. For performance reasons, occurrences of this diagnostic for this memory at other simulation time steps will be suppressed.</entry>
    <entry key="DSWriteAfterWriteInMWE">The block ''{0}'' is writing to the data store ''{1}'' but the block(s) ''{2}'' have already written to a portion or the entire region of this memory during event ''{4}'' at time {3}. For performance reasons, occurrences of this diagnostic for this memory at other simulation time steps will be suppressed.</entry>
    <entry key="DSWriteAfterWriteOfElement">The block ''{0}'' is writing to element {1,number,integer} of the data store ''{2}'' but the block ''{3}'' has already written to this memory at time {4}. For performance reasons, occurrences of this diagnostic for this memory at other simulation time steps will be suppressed.</entry>
    <entry key="DSWriteAfterWriteOfElementInMinor">The block ''{0}'' is writing to element {1,number,integer} of the data store ''{2}'' but the block ''{3}'' has already written to this memory at time {4}. For performance reasons, occurrences of this diagnostic for this memory at other simulation time steps will be suppressed.</entry>
    <entry key="DSWriteAfterWriteOfElementInMWE">The block ''{0}'' is writing to element {1,number,integer} of the data store ''{2}'' but the block ''{3}'' has already written to this memory during event ''{5}'' at time {4}. For performance reasons, occurrences of this diagnostic for this memory at other simulation time steps will be suppressed.</entry>
    <entry key="DSWriteAfterWriteOfRegionExpr">The region ''{1}'' of data store memory ''{2}'' that block ''{0}'' is writing to was already written to by the block(s) ''{3}'' in part or fully at time {4}. For performance reasons, occurrences of this diagnostic for this memory at other simulation time steps will be suppressed.</entry>
    <entry key="DSWriteAfterWriteOfRegionExprInMinor">The region ''{1}'' of data store memory ''{2}'' that block ''{0}'' is writing to was already written to by the block(s) ''{3}'' in part or fully at time {4}. For performance reasons, occurrences of this diagnostic for this memory at other simulation time steps will be suppressed.</entry>
    <entry key="DSWriteAfterWriteOfRegionExprInMWE">The region ''{1}'' of data store memory ''{2}'' that block ''{0}'' is writing to was already written to by the block(s) ''{3}'' in part or fully during event ''{5}'' at time {4}. For performance reasons, occurrences of this diagnostic for this memory at other simulation time steps will be suppressed.</entry>
    <entry key="GlobalDSReadBeforeWrite">The block ''{0}'' is reading from the data store corresponding to Simulink.Signal object ''{1}'' before any blocks have written to this entire region of memory at time {2}. For performance reasons, occurrences of this diagnostic for this memory at other simulation time steps will be suppressed.</entry>
    <entry key="GlobalDSReadBeforeWriteInMinor">The block ''{0}'' is reading from the data store corresponding to Simulink.Signal object ''{1}'' before any blocks have written to this entire region of memory at time {2}. For performance reasons, occurrences of this diagnostic for this memory at other simulation time steps will be suppressed.</entry>
    <entry key="GlobalDSReadBeforeWriteInMWE">The block ''{0}'' is reading from the data store corresponding to Simulink.Signal object ''{1}'' before any blocks have written to this entire region of memory during event ''{3}'' at time {2}. For performance reasons, occurrences of this diagnostic for this memory at other simulation time steps will be suppressed.</entry>
    <entry key="GlobalDSReadBeforeWriteOfElement">The block ''{0}'' is reading from element {1,number,integer} of the data store corresponding to Simulink.Signal object ''{2}'' before any blocks have written to this memory at time {3}. For performance reasons, occurrences of this diagnostic for this memory at other simulation time steps will be suppressed.</entry>
    <entry key="GlobalDSReadBeforeWriteOfElementInMinor">The block ''{0}'' is reading from element {1,number,integer} of the data store corresponding to Simulink.Signal object ''{2}'' before any blocks have written to this memory at time {3}. For performance reasons, occurrences of this diagnostic for this memory at other simulation time steps will be suppressed.</entry>
    <entry key="GlobalDSReadBeforeWriteOfElementInMWE">The block ''{0}'' is reading from element {1,number,integer} of the data store corresponding to Simulink.Signal object ''{2}'' before any blocks have written to this memory during event ''{4}'' at time {3}. For performance reasons, occurrences of this diagnostic for this memory at other simulation time steps will be suppressed.</entry>
    <entry key="GlobalDSReadBeforeWriteOfRegionExpr">The region ''{1}'' of data store memory corresponding to Simulink.Signal object ''{2}'' that block ''{0}'' is reading from was not fully written to by any blocks at time {3}. For performance reasons, occurrences of this diagnostic for this memory at other simulation time steps will be suppressed.</entry>
    <entry key="GlobalDSReadBeforeWriteOfRegionExprInMinor">The region ''{1}'' of data store memory corresponding to Simulink.Signal object ''{2}'' that block ''{0}'' is reading from was not fully written to by any blocks at time {3}. For performance reasons, occurrences of this diagnostic for this memory at other simulation time steps will be suppressed.</entry>
    <entry key="GlobalDSReadBeforeWriteOfRegionExprInMWE">The region ''{1}'' of data store memory corresponding to Simulink.Signal object ''{2}'' that block ''{0}'' is reading from was not fully written to by any blocks during event ''{4}'' at time {3}. For performance reasons, occurrences of this diagnostic for this memory at other simulation time steps will be suppressed.</entry>
    <entry key="GlobalDSWriteAfterRead">The block ''{0}'' is writing to the data store corresponding to Simulink.Signal object ''{1}'' but the block(s) ''{2}'' have already read from a portion or the entire region of this memory at time {3}. For performance reasons, occurrences of this diagnostic for this memory at other simulation time steps will be suppressed.</entry>
    <entry key="GlobalDSWriteAfterReadInMinor">The block ''{0}'' is writing to the data store corresponding to Simulink.Signal object ''{1}'' but the block(s) ''{2}'' have already read from a portion or the entire region of this memory at time {3}. For performance reasons, occurrences of this diagnostic for this memory at other simulation time steps will be suppressed.</entry>
    <entry key="GlobalDSWriteAfterReadInMWE">The block ''{0}'' is writing to the data store corresponding to Simulink.Signal object ''{1}'' but the block(s) ''{2}'' have already read from a portion or the entire region of this memory during event ''{4}'' at time {3}. For performance reasons, occurrences of this diagnostic for this memory at other simulation time steps will be suppressed.</entry>
    <entry key="GlobalDSWriteAfterReadOfElement">The block ''{0}'' is writing to element {1,number,integer} of the data store corresponding to Simulink.Signal object ''{2}'' but the block ''{3}'' has already read from this memory at time {4}. For performance reasons, occurrences of this diagnostic for this memory at other simulation time steps will be suppressed.</entry>
    <entry key="GlobalDSWriteAfterReadOfElementInMinor">The block ''{0}'' is writing to element {1,number,integer} of the data store corresponding to Simulink.Signal object ''{2}'' but the block ''{3}'' has already read from this memory at time {4}. For performance reasons, occurrences of this diagnostic for this memory at other simulation time steps will be suppressed.</entry>
    <entry key="GlobalDSWriteAfterReadOfElementInMWE">The block ''{0}'' is writing to element {1,number,integer} of the data store corresponding to Simulink.Signal object ''{2}'' but the block ''{3}'' has already read from this memory during event ''{5}'' at time {4}. For performance reasons, occurrences of this diagnostic for this memory at other simulation time steps will be suppressed.</entry>
    <entry key="GlobalDSWriteAfterReadOfRegionExpr">The region ''{1}'' of data store memory corresponding to Simulink.Signal object ''{2}'' that block ''{0}'' is writing to was already read by the block(s) ''{3}'' in part or fully at time {4}. For performance reasons, occurrences of this diagnostic for this memory at other simulation time steps will be suppressed.</entry>
    <entry key="GlobalDSWriteAfterReadOfRegionExprInMinor">The region ''{1}'' of data store memory corresponding to Simulink.Signal object ''{2}'' that block ''{0}'' is writing to was already read by the block(s) ''{3}'' in part or fully at time {4}. For performance reasons, occurrences of this diagnostic for this memory at other simulation time steps will be suppressed.</entry>
    <entry key="GlobalDSWriteAfterReadOfRegionExprInMWE">The region ''{1}'' of data store memory corresponding to Simulink.Signal object ''{2}'' that block ''{0}'' is writing to was already read by the block(s) ''{3}'' in part or fully during event ''{5}'' at time {4}. For performance reasons, occurrences of this diagnostic for this memory at other simulation time steps will be suppressed.</entry>
    <entry key="GlobalDSWriteAfterWrite">The block ''{0}'' is writing to the data store corresponding to Simulink.Signal object ''{1}'' but the block(s) ''{2}'' have already written to a portion or the entire region of this memory at time {3}. For performance reasons, occurrences of this diagnostic for this memory at other simulation time steps will be suppressed.</entry>
    <entry key="GlobalDSWriteAfterWriteInMinor">The block ''{0}'' is writing to the data store corresponding to Simulink.Signal object ''{1}'' but the block(s) ''{2}'' have already written to a portion or the entire region of this memory at time {3}. For performance reasons, occurrences of this diagnostic for this memory at other simulation time steps will be suppressed.</entry>
    <entry key="GlobalDSWriteAfterWriteInMWE">The block ''{0}'' is writing to the data store corresponding to Simulink.Signal object ''{1}'' but the block(s) ''{2}'' have already written to a portion or the entire region of this memory during event ''{4}'' at time {3}. For performance reasons, occurrences of this diagnostic for this memory at other simulation time steps will be suppressed.</entry>
    <entry key="GlobalDSWriteAfterWriteOfElement">The block ''{0}'' is writing to element {1,number,integer} of the data store corresponding to Simulink.Signal object ''{2}'' but the block ''{3}'' has already written to this memory at time {4}. For performance reasons, occurrences of this diagnostic for this memory at other simulation time steps will be suppressed.</entry>
    <entry key="GlobalDSWriteAfterWriteOfElementInMinor">The block ''{0}'' is writing to element {1,number,integer} of the data store corresponding to Simulink.Signal object ''{2}'' but the block ''{3}'' has already written to this memory at time {4}. For performance reasons, occurrences of this diagnostic for this memory at other simulation time steps will be suppressed.</entry>
    <entry key="GlobalDSWriteAfterWriteOfElementInMWE">The block ''{0}'' is writing to element {1,number,integer} of the data store corresponding to Simulink.Signal object ''{2}'' but the block ''{3}'' has already written to this memory during event ''{5}'' at time {4}. For performance reasons, occurrences of this diagnostic for this memory at other simulation time steps will be suppressed.</entry>
    <entry key="GlobalDSWriteAfterWriteOfRegionExpr">The region ''{1}'' of data store memory corresponding to Simulink.Signal object ''{2}'' that block ''{0}'' is writing to was already written to by the block(s) ''{3}'' in part or fully at time {4}. For performance reasons, occurrences of this diagnostic for this memory at other simulation time steps will be suppressed.</entry>
    <entry key="GlobalDSWriteAfterWriteOfRegionExprInMinor">The region ''{1}'' of data store memory corresponding to Simulink.Signal object ''{2}'' that block ''{0}'' is writing to was already written to by the block(s) ''{3}'' in part or fully at time {4}. For performance reasons, occurrences of this diagnostic for this memory at other simulation time steps will be suppressed.</entry>
    <entry key="GlobalDSWriteAfterWriteOfRegionExprInMWE">The region ''{1}'' of data store memory corresponding to Simulink.Signal object ''{2}'' that block ''{0}'' is writing to was already written to by the block(s) ''{3}'' in part or fully during event ''{5}'' at time {4}. For performance reasons, occurrences of this diagnostic for this memory at other simulation time steps will be suppressed.</entry>
    <entry key="RegionValidationDimsMismatch">The number of dimensions is specified as ''{0,number,integer}'' for the region of memory ''{1}'' associated with the block ''{2}''. This does not match the actual number of dimensions ''{3,number,integer}'' associated with this memory</entry>
    <entry key="RegionValidationInvalidBusElementIdx">The index of the bus element is specified as ''{0,number,integer}''. This value is not valid for the region of memory ''{1}'' associated with the block ''{2}''</entry>
    <entry key="RegionValidationIndexSpecifiedWhenSelectingAll">No indices should be specified when using the option MEM_REGION_SELECT_ALL. This was specified for the region of memory ''{0}'' associated with the block ''{1}''</entry>
    <entry key="RegionValidationDiscontiguousAtNonLeaf">Accessing dis-contiguous memory regions is supported only at non-bus nodes. This was specified for the region of memory ''{0}'' associated with the block ''{1}''</entry>
    <entry key="RegionValidationInvalidStartIncrEnd">Invalid indices specified for the indexing option MEM_REGION_STARTIDX_INCR_ENDIDX. This was specified for the region of memory ''{0}'' associated with the block ''{1}''</entry>
    <entry key="RegionValidationIndexOutOfBounds">The indices specified for the region of memory ''{0}'' associated with the block ''{1}'' is out of bounds</entry>
    <entry key="RegionValidationInvalidIndexingMode">The indexing mode specified for the region of memory ''{0}'' associated with the block ''{1}'' is not valid</entry>    
    <entry key="ExpressionValidationMissingField">The field ''{0}'' specified in the ''{5}'' tab for expression ''{1}'' and associated with port {2} of block ''{3}'' does not correspond to a bus element with the same name in the associated bus object ''{4}''. Modify the field name in the expression to a matching bus element name or update the bus object by adding a new bus element with this name.</entry>
    <entry key="ExpressionValidationFieldSpecifiedForNonBus">The field ''{0}'' specified in the ''{4}'' tab for expression ''{1}'' and associated with port {2} of block ''{3}'' does not have a matching bus element in the data type of the associated data store memory. Remove the field from the expression or update the data type of the associated data store memory to a bus object containing a bus element with this field name.</entry>
    <entry key="ExpressionValidationParseError">The expression ''{0}'' specified in the ''{4}'' tab and associated with port {1} of block ''{2}'' has an invalid MATLAB syntax: ''{3}''</entry>
    <entry key="ExpressionValidationUnsupportedOps">The expression ''{0}'' specified in the ''{3}'' tab and associated with port {1} of block ''{2}'' uses operators, variables, or functions that this block does not support. See the documentation for this block for more details.</entry>
    <entry key="ExpressionValidationInvalidRootName">The expression ''{0}'' specified in the ''{4}'' tab and associated with port {1} of block ''{2}'' does not begin with, or refer to, the associated data store memory name ''{3}''.</entry>
    <entry key="ExpressionValidationDisContiguous">The expression ''{0}'' specified in the ''{4}'' tab and associated with port {1} of block ''{2}'' is associated with non-contiguous elements. Non-contiguous element access is only supported at terminal nodes. ''{3}'' in the given expression is not a terminal node.</entry>
    <entry key="ExpressionValidationDimsMismatch">The expression ''{0}'' specified in the ''{5}'' tab and associated with port {1} of block ''{2}'' specifies an invalid number of dimensions at node ''{3}''. The expected number of dimensions for this node is {4}.</entry>
    <entry key="ExpressionValidationDimsMismatchWithDetail">The expression ''{0}'' specified in the ''{5}'' tab and associated with port {1} of block ''{2}'' specifies an invalid number of dimensions at node ''{3}'' {6}. The expected number of dimensions for this node is {4}.</entry>
    <entry key="ExpressionValidationIndexOutOfBounds">The expression ''{0}'' specified in the ''{5}'' tab and associated with port {1} of block ''{2}'' specifies one or more indices that are out of bounds at node ''{3}''. Indices are one-based and must be greater than zero in each dimension. The maximum allowed values for indices (in each dimension) at this node is ''{4}''.</entry>
    <entry key="ExpressionValidationIndexRepeats">The expression ''{0}'' specified in the ''{4}'' tab and associated with port {1} of block ''{2}'' specifies one or more indices that repeat at node ''{3}''. Indices must be unique in each dimension.</entry>
    <entry key="IndexLabelsNotMatching">The expression ''{0}'' in the ''{1}'' tab associated with block ''{2}'' contains one or more index variables that do not match index port labels.</entry>
    <entry key="ElementsNotSupportedForDynamicArrays">The block ''{0}'' cannot be configured for element selection because the data store memory is associated with either an unbounded variable-size signal or a bus containing an unbounded variable-size element.</entry>
    <entry key="ScopedDSMSignalAttribMismatch1"><![CDATA[Data store blocks of block type ''{3}'' ''{0}'' and ''{1}'' must specify the same signal attributes because they specify the same data store name ''{2}'' and ''{1}'' has the <sldiag objui="blockdlg" objparam="DataStoreReference">'reference'</sldiag> parameter selected.]]></entry>
    <entry key="ScopedDSMSignalAttribMismatch2"><![CDATA[Data store blocks of block type ''{3}'' ''{0}'' and ''{1}'' must specify the same signal attributes because they specify the same data store name ''{2}'' and both blocks have the <sldiag objui="blockdlg" objparam="DataStoreReference">'reference'</sldiag> parameter selected.]]></entry>
    <entry key="ScopedDSMSignalAttribMismatch3"><![CDATA[Simulink.Signal object ''{0}'' in model workspace of model ''{2}'' and data store block of block type ''{2}'' ''{1}'' must specify the same signal attributes because they use the same data store name and ''{1}'' has the <sldiag objui="blockdlg" objparam="DataStoreReference">'reference'</sldiag> parameter selected.]]></entry>
    <entry key="ScopedDSMBusSignalPropNotSupported"><![CDATA[Unable to set <sldiag objui="blockdlg" objparam="OutDataTypeStr">''Data type''</sldiag> of Data Store Memory block ''{0}'' with data store name ''{1}'' to ''Inherit: auto'' when the corresponding data store reference ''{2}'' inside the model referenced by Model block ''{3}'' specifies a bus data type ''{4}''.
    <actions exclusiveFixIts="yes">
        <action type="fixit" retvalue="false">
            <cmd>set_param(''{0}'', 'OutDataTypeStr', ''{4}'');</cmd>
            <txt>Set <sldiag objui="blockdlg" objparam="OutDataTypeStr">''Data type''</sldiag> of ''{0}'' to ''{4}''.</txt>
        </action>
    </actions>
    ]]></entry>
    <entry key="ScopedDSMImageTypePropNotSupported"><![CDATA[Unable to set <sldiag objui="blockdlg" objparam="OutDataTypeStr">''Data type''</sldiag> of Data Store Memory block ''{0}'' with data store name ''{1}'' to ''Inherit: auto'' when the corresponding data store reference ''{2}'' inside the model referenced by Model block ''{3}'' specifies a image type ''{4}''.
    <actions exclusiveFixIts="yes">
        <action type="fixit" retvalue="false">
            <cmd>set_param(''{0}'', 'OutDataTypeStr', ''{4}'');</cmd>
            <txt>Set <sldiag objui="blockdlg" objparam="OutDataTypeStr">''Data type''</sldiag> of ''{0}'' to ''{4}''.</txt>
        </action>
    </actions>
    ]]></entry>
    <entry key="ScopedDSMICDimensionMismatch"><![CDATA[''{0}'' set the dimensions of <sldiag objui="blockdlg" objparam="InitialValue">'Initial value'</sldiag> to ''{2}''. But ''{1}'' set <sldiag objui="blockdlg" objparam="Dimensions">'Dimensions'</sldiag> to ''{3}''.]]></entry>
    <entry key="ScopedDSMDataTypeMismatch"><![CDATA[''{0}'' and ''{1}'' set their respective data type to ''{2}'' and ''{3}'', respectively.]]></entry>
    <entry key="ScopedDSMComplexityMismatch"><![CDATA[''{0}'' and ''{1}'' set <sldiag objui="blockdlg" objparam="SignalType">'Signal type'</sldiag> to ''{2}'' and ''{3}'', respectively.]]></entry>
    <entry key="ScopedDSMOneDVectorMismatch"><![CDATA[''{0}'' and ''{1}'' set <sldiag objui="blockdlg" objparam="VectorParams1D">'Interpret vector parameters as 1-D'</sldiag> to ''{2}'' and ''{3}'', respectively.]]></entry>
    <entry key="ScopedDSMDimensionMismatch"><![CDATA[''{0}'' and ''{1}'' set <sldiag objui="blockdlg" objparam="Dimensions">'Dimensions'</sldiag> to ''{2}'' and ''{3}'', respectively.]]></entry>
    <entry key="DupDataStoreReferences1"><![CDATA[When a Data Store Memory block ''{0}'' is configured as a data store reference, it is not allowed for any other Data Store Memory block in this model to be configured to data store reference with the same data store name ''{2}''. However, ''{1}'' violates this rule.
    <actions exclusiveFixIts="yes">
        <action type="fixit" retvalue="false">
            <cmd>add_block(''{0}'', ''{3}'', ''MakeNameUnique'', ''on''); delete_block(''{0}''); delete_block(''{1}'');</cmd>
            <txt>Define data store reference ''{2}'' in a higher level graph and remove ''{0}'' and ''{1}''.</txt>
        </action>
    </actions>]]>
    </entry>
    <entry key="DupDataStoreReferences2"><![CDATA[When a Data Store Memory block ''{0}'' is configured as a data store reference, it is not allowed for any other Data Store Memory block in this model to be configured to data store reference with the same data store name ''{2}''. However, ''{1}'' violates this rule.
    <actions exclusiveFixIts="yes">
        <action type="fixit" retvalue="false">
            <cmd>delete_block(''{1}'');</cmd>
            <txt>Remove ''{1}''.</txt>
        </action>
    </actions>]]>
    </entry>
    <entry key="DupDataStoreReferences3"><![CDATA[When a Data Store Memory block ''{0}'' is configured as a data store reference, it is not allowed for any other Data Store Memory block in this model to be configured to data store reference with the same data store name ''{2}''. However, Model block ''{1}'' contains a data store reference with the same name in its referenced model hierarchy, and the block that needs to define the data store reference violates this rule.
    <actions exclusiveFixIts="yes">
        <action type="fixit" retvalue="false">
            <cmd>add_block(''{0}'', ''{3}'', ''MakeNameUnique'', ''on''); delete_block(''{0}'');</cmd>
            <txt>Move ''{0}'' to a higher level graph.</txt>
        </action>
    </actions>]]>
    </entry>
    <entry key="ScopedDSMNameShadowing">When a data store block of type ''{3}'' ''{0}'' is configured as a data store reference, it is not supported for any other data store blocks of type ''{3}'' to specify the same data store name ''{2}'' in its higher level subsystems. ''{1}'' violates this rule.</entry>
    <entry key="ScopedDSMNameShadowing_HiddenLocalDSM"><![CDATA[When a Data Store Memory block ''{1}'' is configured as a data store reference, it is not supported for any other Data Store Memory block to specify the same data store name ''{0}'' in its higher level subsystems. However, since the model ''{2}'' has a Simulink.Signal object with the same name ''{0}'' in its model workspace accessed by block ''{3}'' as a data store, this will lead to a Data Store Memory block to implicitly placed at root graph of this model, which violates this rule.
    <actions exclusiveFixIts="yes">
        <action type="fixit" retvalue="false">
            <cmd>h=add_block(''{6}'', ''{5}'', ''MakeNameUnique'', ''on''); set_param(h,''DataStoreName'', ''{0}'');</cmd>
            <txt>Explicitly add a Data Store Memory block in ''{4}''.</txt>
        </action>
    </actions>]]>
    </entry>
    <entry key="DSMRefStdStringUnsupported">Data store reference ''{0}'' is implemented as a std::string, which is not supported.</entry>
    <entry key="DataStoreRefShadowedByGlobalDSM"><![CDATA[Data Store Memory block ''{0}'' placed inside a subsystem with parameter <sldiag objui="blockdlg" objparam="DataStoreReference">''Data store reference''</sldiag> selected, does not allow another Data Store Memory block with the same ''Data store name'' at a higher-level in the subsystem hiererachy in the model. However, Simulink.Signal object ''{1}'' that acts as a global data store violates this rule.]]></entry>
    <entry key="DataStoreRefFromChildMdlShadowedByGlobalDSM"><![CDATA[Data Store Memory block''{0}'' placed inside the model referenced by Model block ''{2}'' with parameter <sldiag objui="blockdlg" objparam="DataStoreReference">''Data store reference''</sldiag> selected, does not allow another Data Store Memory block with the same ''Data store name'' inside a subsystem at higher-level in the model hiererachy. However, Simulink.Signal object ''{1}'' that acts as a global data store violates this rule.]]></entry>
    <entry key="InvalidSharedDSMDefMemForDataStoreRef"><![CDATA[Data Store Memory block ''{1}'' with <sldiag objui="blockdlg" objparam="ShareAcrossModelInstances">'Share across model instances'</sldiag> selected is not supported for defining data store for Data Store Memory block ''{0}'' with the <sldiag objui="blockdlg" objparam="DataStoreReference">'Data store reference'</sldiag> parameter selected.
    <actions exclusiveFixIts="yes">
        <action type="fixit">
            <cmd>set_param_action(''{1}'', ''ShareAcrossModelInstances'', ''off'');</cmd>
            <txt>Clear <sldiag objui="blockdlg" objparam="ShareAcrossModelInstances">'Share across model instances'</sldiag>.</txt>
        </action>
    </actions>]]>
    </entry>
    <entry key="DataTypeNotSpecifiedForDataStoreRef"><![CDATA[Invalid setting for parameter <sldiag objui="blockdlg" objparam="OutDataTypeStr">''Data type''</sldiag> to ''Inherit: auto'' in block ''{0}'' with parameter <sldiag objui="blockdlg" objparam="DataStoreReference">''Data store reference''</sldiag> selected. Select the <sldiag objui="blockdlg" objparam="OutDataTypeStr">''Data type''</sldiag> explicitly from the drop-down options.]]></entry>
    <entry key="DimensionNotSpecifiedForDataStoreRef"><![CDATA[Invalid setting for parameter <sldiag objui="blockdlg" objparam="Dimensions">''Dimensions''</sldiag> to ''-1'' in block ''{0}'' with parameter <sldiag objui="blockdlg" objparam="DataStoreReference"> ''Data store reference''</sldiag> selected. Specify the <sldiag objui="blockdlg" objparam="Dimensions">''Dimensions''</sldiag> explicitly.]]></entry>
    <entry key="ComplexityNotSpecifiedForDataStoreRef"><![CDATA[Invalid setting for parameter <sldiag objui="blockdlg" objparam="SignalType">''Signal type''</sldiag> to ''auto'' in block ''{0}'' with parameter <sldiag objui="blockdlg" objparam="DataStoreReference">''Data store reference''</sldiag> selected. Select the <sldiag objui="blockdlg" objparam="SignalType">''Signal type''</sldiag> explicitly from the drop-down options.]]></entry>
    <entry key="UnableToRenameDataStoreRefInProtectedMdl"><![CDATA[Unable to change <sldiag objui="blockdlg" objparam="DataStoreName">''Data store name''</sldiag> parameter from ''{0}'' to ''{1}'' for Data Store Memory block(s) placed inside the model referenced by Model block ''{2}'' with <sldiag objui="blockdlg" objparam="DataStoreReference">''Data store reference''</sldiag> parameter of the Data Store Memory block(s) selected, because the referenced model ''{3}'' was saved as a protected model.]]></entry>
    <entry key="UnableToRenameLibLinkedStateflowDataStoreName">Unable to rename data store in ''{2}'' from ''{0}'' to ''{1}''. This is because ''{2}'' is a Stateflow chart or a MATLAB Function linked from a library.</entry>
    <entry key="RefdDSMIndMapToNonAddr">Unable to set data store memory ''{0}'' with references to non-addressable storage class ''{1}''</entry>
    <entry key="RefdDSMDefMapToNonAddr">Unable to set data store memory ''{0}'' with references to ''Model default'' since the default storage class for internal data is set to non-addressable storage class ''{1}''.</entry>
    <entry key="DSMRefIndMapToLegacy">Cannot set the storage class of data store reference ''{0}'' to ''{1}'' because that storage class is a built-in storage class, or a storage class that is defined in a package. The storage class of a data store reference must be configured as Auto or a storage class defined in the Embedded Coder dictionary</entry>
    <entry key="DSMRefDefMapToLegacy">Cannot set the storage class of data store reference ''{0}'' to 'Model default' because the default storage class for internal data, ''{1}'', is a built-in storage class or a storage class that is defined in a package. The storage class of a data store reference must be Auto or a storage class defined in the Embedded Coder dictionary</entry>
    <entry key="RefdDSMIndPreserveND">Unable to set storage class of data store memory ''{0}'' with references to ''{1}'' since it selects ''Preserve array dimensions'' </entry>
    <entry key="RefdDSMDefPreserveND">Unable to set storage class of data store memory ''{0}'' with references to ''Model default'' since the default storage class for internal data is set to storage class ''{1}'' which selects ''Preserve array dimensions''.</entry>
    <entry key="DSMRefIndPreserveND">Unable to set storage class of data store reference ''{0}'' to ''{1}'' because it selects ''Preserve array dimensions''</entry>
    <entry key="DSMRefDefPreserveND">Unable to set storage class of data store reference ''{0}'' to 'Model default' because the default storage class for internal data, ''{1}'', selects ''Preserve array dimensions''</entry>
    <entry key="DynamicallySizedDataStoreReference">Data store reference ''{0}'' must have finite dimensions</entry>
    <entry key="DataStoreReferenceRequiresPublic">The data store reference accessed by ''{0}'' requires the ''Data Visibility'' of ''Signals, states, and internal data'' to be set to ''public''</entry>
    <entry key="DSMDataTypeAuto">Data type 'auto' not supported for Data Store Memory {0} used by {1}. Specify data type in the Simulink Data Store Memory dialog box.</entry>
    <entry key="DSMSignalTypeAuto">Signal type 'auto' not supported for Data Store Memory ''{0}'' used by {1}. Specify signal type in the Simulink Data Store Memory dialog box.</entry>
  </message>
</rsccat>

<!-- LocalWords:  STARTIDX INCR ENDIDX
-->
