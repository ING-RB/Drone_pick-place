<?xml version="1.0" encoding="UTF-8" ?>
<!-- Copyright 2009-2024 The MathWorks, Inc. -->
<rsccat version="1.0" locale="en_US" product="Simulink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../../../../matlab/resources/schema/msgcat.xsd">
  <message>
    <entry key="DerivativeNonContinuousInput">Derivative block ''{0}'' might produce unexpected or incorrect output values because the input signal is not differentiable. Consider changing the model so the input signal has continuous sample time or implementing the derivative using a Transfer Fcn block instead of the Derivative block.</entry>
    <entry key="AlgebraicConstraintTolerancePositive">Tolerance must be a positive number.</entry>
    <entry key="AlgebraicConstraintToleranceScalar">Tolerance must be a scalar.</entry>
    <entry key="AlgebraicConstraintInvalidDoubleParameter">Parameter ''{0}'' must be set to a value of type ''double''.</entry>
    <entry key="AlgebraicConstraintInvalidParameter">Simulink detected an invalid parameter setting for the block ''{0}''.</entry>
    <entry key="AlgebraicConstraintNaNDoubleParameter">Parameter ''{0}'' is set to ''Not a Number (NaN)''. Change this value to a number having a ''double'' type.</entry>
    <entry key="AlgebraicConstraintInitialValueIsInfinite">The ''Initial guess'' parameter ''{0}'' is infinite. Change this value to a finite number having a ''double'' type.</entry>
    <entry key="EnumConstBlockType">Enumerated Constant</entry>
    <entry key="EnumConstBlockDescription"><![CDATA[Output the enumerated value specified by the ''Value'' parameter.\n\nThe output data type must be entered as:\n  ''Enum: <class name>''.\nThe value can be any expression that evaluates to an array of values of the specified enumerated class.]]></entry>
    <entry key="EnumConstTypePrompt">Output data type:</entry>
    <entry key="EnumConstValuePrompt">Value:</entry>
    <entry key="EnumConstSampleTimePrompt">Sample time:</entry>
    <entry key="EnumConstEmptyDataType">No data type specified.</entry>
    <entry key="EnumConstInvalidSyntaxForDataType">Invalid data type. Accepted values are enumerated class name preceded by ''Enum: '' or class metadata of enumerated class.</entry>
    <entry key="EnumConstInvalidDataType">Invalid data type ''{0}''. Data type must resolve to an enumerated class.</entry>
    <entry key="EnumConstInvalidEnumValue">Invalid value specified because it is not an instance of the enumerated class ''{0}''.</entry>
    <entry key="EnumConstValueForInvalidDataType">Invalid class name specified in 'Output data type' parameter.</entry>
    <entry key="UnknownAction">M Assert: unknown action</entry>
    <entry key="TimeRangeOverridden">Time range of ''{0}'' is currently being overridden by a global setting.</entry>
    <entry key="ReplaceBlock">The XY Graph scope ''{0}'' should be replaced with a new version from the Simulink block library.</entry>
    <entry key="slBlocksCannotChangeDatatypeDuringSim"><![CDATA[--> To change the ''Upper limit'' to {0,number,integer}, its data type must be changed. The data type cannot be changed while simulation is running.]]></entry>
    <entry key="SineLookupWordLengthTooSmall">The parameter output word length (OutputWordLength) must be a scalar numeric and an integer value greater than 1.</entry>
    <entry key="SineLookupNumDataPtsTooSmall">The parameter number of data points for lookup table must be a scalar numeric and must have an exact integer not less than 2.</entry>
    <entry key="SineLookupEitherTooSmall"><![CDATA[The two parameters number of data points for lookup table (NumDataPoints) and output word length (OutputWordLength) are not compatible. You must either reduce the number of data points or increase the word length. The equation\n     ( 2^(OutputWordLength-2) + 1 ) >= NumDataPoints\nmust be satisfied. One alternative is to decrease the NumDataPoints from {0,number,integer} to {1,number,integer}. Another alternative is to increase the OutputWordLength from {2,number,integer} to {3,number,integer}.]]></entry>
    <entry key="IntegerPartIsNotBigEnough"><![CDATA[In the block ''{0}'', the number of integer bits {1,number,integer} is too small to represent the output. The number of integer bits must be at least {2,number,integer}.]]></entry>
    <entry key="FractionPartIsNotBigEnough"><![CDATA[In the block ''{0}'', the number of fraction bits {1,number,integer} is too small to represent the output. The number of fraction bits must be at least {2,number,integer}.]]></entry>
    <entry key="BitMaskWordLengthTooLarge">The value of parameter ''Bit Mask'' must fit in 53 bits, larger values are not supported.</entry>
    <entry key="BitMaskNotComplex">The value of parameter ''Bit Mask'' cannot contain any complex number.</entry>
    <entry key="BitToIntegerConverter">Map a vector of bits to a corresponding vector of integer values. M defines how many bits are mapped for each output integer. The input length must be an integer multiple of M.</entry>
    <entry key="IntegerToBitConverter">Map a vector of integer-values inputs to a vector of bits.  Block inputs must be integer values in the range [-2^(M-1), 2^(M-1)-1]  when they are treated as signed and [0, 2^M-1] when they are treated as unsigned.  For fixed-point inputs, the stored integer value is used.</entry>
    <entry key="RenameViewerErr">Could not rename viewer to {0} since another \n Simulink object has the same name. Renaming it to {1}.</entry>
    <entry key="CannotViewBus">The Scope {0} is unable to view a signal containing an array of non-virtual buses or a non-virtual bus containing an array of sub-buses. Disconnect the Scope from that signal.</entry>
    <entry key="LibNotFoundOrNA">Library {0} not found or not available.</entry>
    <entry key="RenameErrorTitle">Rename error</entry>
    <entry key="SSMgrNoSelection">no selection</entry>
    <entry key="SSMgrLibraryUnavailable">Library ''{0}'' not found or not available</entry>
    <entry key="ScopeAxes">Axes</entry>
    <entry key="SSMgrInput">Input</entry>
    <entry key="SSMgrOutput">Output</entry>
    <entry key="CacheUpdateErr">Error updating cache. Model workspace unavailable.</entry>
    <entry key="NoIOSignals">M Assert: unexpected empty return of IOSignals.</entry>
    <entry key="ModelNotFound">Model: {0} not found.</entry>
    <entry key="SigSelectionNADuringSim">Cannot select signal while simulation is running.</entry>
    <entry key="SizeOfDataStructuresDiff">Size of data structures differs between run #1 and run #{0}.</entry>
    <entry key="CancelButton">Cancel</entry>
    <entry key="OKButton">OK</entry>
    <entry key="HelpButton">Help</entry>
    <entry key="ApplyButton">Apply</entry>
    <entry key="ScopeTime">Time</entry>
    <entry key="ScopeParametersDecimation">Decimation</entry>
    <entry key="IndexOptionPromp">Index Option</entry>
    <entry key="DataUpdateError">Error encountered when updating selection data.</entry>
    <entry key="unhandledFlag">Unhandled flag "{0}".</entry>
    <entry key="linearizationNotSupportedInThisMode">Linearization is not supported in {0} mode.</entry>
    <entry key="oldVersionOfManualSwitchBlock">You are using an old version of the Manual Switch block. ''Please update block "{0}" with the latest version from the Simulink library.</entry>
    <entry key="invalidParameter">Invalid parameter specified.</entry>
    <entry key="mustHaveSameNumberOfElements">{0} must have the same number of elements as TABLE has {1}.</entry>
    <entry key="indexMustMonotonicallyIncrease">{0} must increase monotonically.</entry>
    <entry key="mustSupplyOneParameter">At least one parameter must be supplied.</entry>
    <entry key="replacementOfFunctionByBlock">The {0} graph scope "{1}" should be replaced with a new version from the simulink_extras block library.</entry>
    <entry key="cannotDeleteBlock">Cannot delete block while simulating.</entry>
    <entry key="somethingWrongInGetParam">Something wrong in get_param, You don''t have the current Simulink.</entry>
    <entry key="numberOfBufferPointsGreaterThanPlotFreq">The number of points in the buffer must be more than the plot frequency.</entry>
    <entry key="sampleTimeMustBePositive">The sample time field accepts only positive values.</entry>
    <entry key="axisLimitsMustBeDefined">Axis limits must be defined.</entry>
    <entry key="invalidBlock">Invalid block.</entry>
    <entry key="undefinedCorrelationType">Undefined correlation type "{0}".</entry>
    <entry key="obsoleteMask"><![CDATA[Mask of {0}, {1}, is obsolete. Run <a href="matlab:upgradeadvisor(bdroot)">Upgrade Advisor</a> on this model.]]></entry>
    <entry key="licenseRequiredForPIDTuner">''{0}'' requested use of the PID tuning tool. Use of the PID tuning tool requires a Simulink Control Design license, but license checkout failed.</entry>
    <entry key="licenseRequiredForFixedPointTool">''{0}'' requested use of the Fixed-Point Tool. Use of the Fixed-Point Tool requires a Fixed-Point Designer license, but license checkout failed.</entry>
    <entry key="tooManyInputArguments">Too many input arguments.</entry>
    <entry key="GotoUnknownAction">Unknown action in {0}</entry>
    <entry key="invalidNumInputs">Invalid number of input arguments: {0}.</entry>
    <entry key="invalidNumInputsSpecified">Invalid number of inputs specified.</entry>
    <entry key="unknownBlockType">Unknown block type!</entry>
    <entry key="invalidType">Invalid type: {0}.</entry>
    <entry key="wrongArgument">Wrong argument "{0}" in "{1}"!</entry>
    <entry key="requiresFixedStepDiscreteSolver">Requires fixed-step discrete solver.</entry>
    <entry key="emptyMatricesNotAllowed">Empty matrices not allowed.</entry>
    <entry key="invalidSamplingPeriod">Invalid sampling period {0}.</entry>
    <entry key="corruptedDialogStructure">Assertion: Dialog structure has been corrupted.</entry>
    <entry key="noSolutionFound">Failed to find an initial condition. Exit flag is "{0}".</entry>
    <entry key="wrongSolutionFound">Calculated initial condition is not feasible. Condition number of the system matrix is {0}.</entry>
    <entry key="tbleditDimensionMatchBreakPoint">Error reported by block ''''{0}'''': The size of dimension {1,number,integer} of the table data must equal the size of the corresponding breakpoint data.</entry>
    <entry key="multirateOnePort">The block is supposed to have only one input port.</entry>
    <entry key="multirateInvaliDimension">Invalid dimensions: the input should be 1-D.</entry>
    <entry key="SL_SimscapeBus">Error finding help for Simscape bus block. Simscape must be installed to access this block reference page. Check your installed products.</entry>
    <entry key="SL_ConnectionLabel">Error finding help for Connection Label block. Simscape must be installed to access this block reference page. Check your installed products.</entry>
    <entry key="SL_VariantConnector">Error finding help for Variant Connector block. Simscape must be installed to access this block reference page. Check your installed products.</entry>
    <entry key="SL_BlockIsNotMasked">Block is not masked.</entry>
    <entry key="SL_UnknownCommandOption">Unknown option ''{0}''.</entry>
    <entry key="SL_FailedHelper">Failed to run the helper function getBlockHelpMapNameAndPath for BlockType ''{0}'' because of:\n{1}</entry>
    <entry key="SlselsubsNotEnoughArgs">Not enough input arguments.</entry>
    <entry key="SlselsubsFirstArgNotVector">The first input argument must be a 1xn/nx1 array or cell array.</entry>
    <entry key="SlselsubsSecondArgNotVectorOrScalar">The second input argument must be a numerical vector or scalar.</entry>
    <entry key="SlselsubsThirdArgNotLogicScalar">The third input argument must be a logical scalar.</entry>
    <entry key="SlselsubsSecondArgNotScalarAsStartingIdx">To choose elements through the end of the vector, the second input argument must be a scalar.</entry>
    <entry key="AbortParseXMLFile">The XML file ''{0}'' will be ignored due to previous errors.</entry>
    <entry key="AbsValInvalidOutputTypeSetting">Invalid output data type setting for ''{0}''</entry>
    <entry key="ActionPortExists">An action port already exists in subsystem ''{0}''. Addition of another control block is not allowed.</entry>
    <entry key="ArccosArgOutOfRange">Argument to arccosine is out of range in ''{0}''</entry>
    <entry key="ArcsinArgOutOfRange">Argument to arcsine is out of range in ''{0}''</entry>
    <entry key="AssertionAssert">Assertion detected in ''{0}'' at time {1}</entry>
    <entry key="AssertionShadowNotBlock">Shadow object must be a block or a subsystem</entry>
    <entry key="AssignmentAllDimInvDims"><![CDATA[Invalid input dimensions specified for input ports <Y0> and/or <U> of ''{0}''. The two ports must have the same size for dimension {1,number,integer}, because parameter ''{2}'' is specified as ''Assign all'' for this dimension]]></entry>
    <entry key="AssignmentAllDimInvDimsSkip"><![CDATA[Invalid input dimensions specified for input port <Y0> and/or the parameter ''{0}'' of ''{1}''. Either of them must have the same setting for dimension {2,number,integer} as the dimensions setting for the input port <U> for this dimension because the parameter ''{3}'' is specified as ''Assign all'']]></entry>
    <entry key="AssignmentAllElemsInvDims"><![CDATA[Invalid input dimensions specified for input ports <Y0> and/or <U> of ''{0}''. The two ports must have the same width because parameter ''{1}'' is specified as ''Assign all'']]></entry>
    <entry key="AssignmentComplexOrNonpositiveOutputDims">Parameter ''{0}'' in ''{1}'' is invalid. The specified ''{2}'' must real and positive integers</entry>
    <entry key="AssignmentDataPortDimsModeMismatch"><![CDATA[The dimensions mode of input port <U> in ''{0}'' does not match the expected dimensions mode based on the dialog parameters and the dimensions mode of other ports]]></entry>
    <entry key="AssignmentDataPortInvDType"><![CDATA[The data type of input port <U> of ''{0}'' is invalid. Input ports <Y0> and <U>  must have the same data type]]></entry>
    <entry key="AssignmentDoesNotSupportVB"><![CDATA[Incoming signal to input port <Y0> and/or <U> of ''{0}'' is a virtual bus signal. The input port expects vector or matrix signals. To explicitly convert this virtual bus signal to a vector, consider inserting a Bus to Vector block. This diagnostic message can be controlled by setting ''Bus signal treated as vector'' appropriately in the Configuration Parameters Dialog -> Diagnostics -> Connectivity pane.]]></entry>
    <entry key="AssignmentIdxPortDoesNotSupportBuses"><![CDATA[Incoming signal to input port <Idx{0,number,integer}> of ''{1}'' is a bus signal, which is invalid. Index ports of Assignment blocks must be non-bus signals only.]]></entry>
    <entry key="AssignmentInitPortInvDType"><![CDATA[The data type of input port <Y0> of ''{0}'' is invalid. Input ports <Y0> and <U>  must have the same data type]]></entry>
    <entry key="AssignmentInputExceedOutputDims"><![CDATA[The dimensions of input port <U> of ''{0}'' for dimension {1,number,integer} should not exceed the specified output port dimensions for this dimension]]></entry>
    <entry key="AssignmentInputExceedOutputWidth"><![CDATA[The width of input port <U> of ''{0}'' cannot exceed the specified output port width]]></entry>
    <entry key="AssignmentInvalidConfigInsideIteratorSubsys">Invalid configuration for an Assignment block in a For/While iterator subsystem. The following configuration is not supported: \n \n - Assignment block ''{0}'' is contained in For Each subsystem ''{1}'', which is directly or indirectly contained by For/While iterator subsystem ''{2}''. \n \n - Assignment block ''{0}'' initialization port (Y0 port) is enabled. \n \nUpdate your model to avoid this configuration.</entry>
    <entry key="AssignmentInvalidDataPortDims"><![CDATA[Invalid input dimensions specified for input port U of ''{0}''. The input port has been specified to have a size of {1} in dimension {2,number,integer},  which the size must be less than or equal to the size of this dimension at input port <Y0>, {3}]]></entry>
    <entry key="AssignmentInvDataPortDimSize"><![CDATA[Invalid input dimensions specified for input port U of ''{0}''. The input port has been specified to have a size of {1,number,integer} in dimension {2,number,integer},  which the size must be less than or equal to the size of this dimension at input port <Y0>, {3,number,integer}]]></entry>
    <entry key="AssignmentInvDataPortDims"><![CDATA[Invalid input dimensions specified for input port <U> of ''{0}''. The specified dimensions, {1}, do not match the expected dimensions, {2}]]></entry>
    <entry key="AssignmentInvDataPortIndexPartialWidth"><![CDATA[Invalid input dimensions specified for input port <U> of ''{0}''. The specified width, {1}, must be at least as large as {2} based on the parameters and port dimensions]]></entry>
    <entry key="AssignmentInvDataPortIndexWidth"><![CDATA[Invalid input dimensions specified for input port <U> of ''{0}''. The specified width, {1}, does not match the expected width, {2}]]></entry>
    <entry key="AssignmentInvDataPortWidth"><![CDATA[Invalid input dimensions specified for input port <U> of ''{0}''. The input port has been specified to have a width of {1}, while the port must have a width less than or equal to input port <Y0> which has a width of {2}]]></entry>
    <entry key="AssignmentInvDataPortDimsModeForFixedScalarOutput"><![CDATA[The signal at input port <U> of Assignment block ''{0}'' is a variable-size signal, but the block is set up to output fixed-size scalar signals. This combination is not supported.]]></entry>
    <entry key="AssignmentInvIndexPort"><![CDATA[Invalid input dimensions specified for input port <Idx{0,number,integer}> of ''{1}''. Only scalar and vector is allowed to be input to this port]]></entry>
    <entry key="AssignmentInvIndexPortStartValue"><![CDATA[Invalid input dimensions specified for input port <Idx{0,number,integer}> of ''{1}''. Only scalars are allowed to be input into the element, row, and column input ports when the ''Use index as starting value'' option is selected]]></entry>
    <entry key="AssignmentInvInitMaxElemParam"><![CDATA[Invalid input dimensions specified for input port <Y0> of ''{0}''. Specification in parameter ''{1}'' expects at least {2} elements from input port <Y0>, but it only provides {3} elements]]></entry>
    <entry key="AssignmentInvInitPortElems"><![CDATA[Invalid input dimensions specified for input port <Y0> of ''{0}''. The specified number of elements, {1}, does not match the expected minimal number of elements, {2}, based on the dimension of input port <Idx{3,number,integer}>]]></entry>
    <entry key="AssignmentInvInitPortSize"><![CDATA[Invalid input dimensions specified for input port <Y0> of ''{0}''. The specified size for dimension {1,number,integer} is {2,number,integer}. It is expected to be greater than or equal to {3,number,integer}]]></entry>
    <entry key="AssignmentInvInputElement"><![CDATA[Element {0,number,integer} of input port <Idx{1,number,integer}> in ''{2}'' has a value of {3,number,integer}. This value is not within the range of permissible values ({4,number,integer} through {5,number,integer}) that allows assignment of a valid data element]]></entry>
    <entry key="AssignmentInvInputElementEnd"><![CDATA[The ending index for dimension {0,number,integer} in ''{1}'' has a value of {2,number,integer} because the starting index from input port <Idx{3,number,integer}> has a value of {4,number,integer} and the size of this dimension at the input port <U> is {5,number,integer}. This value is not within the range of permissible values ({6,number,integer} through {7,number,integer}) that allows assignment of a valid data element]]></entry>
    <entry key="AssignmentInvInputElementStart"><![CDATA[The starting index from input port <Idx{0,number,integer}> in ''{1}'' has a value of {2,number,integer}. This value is not within the range of permissible values ({3,number,integer} through {4,number,integer}) that allows assignment of a valid data element]]></entry>
    <entry key="AssignmentInvMatrixDataInpInVecMode"><![CDATA[Invalid input dimensions specified for input port <U> of ''{0}''. None of the input ports accept a matrix when the number of output dimension is 1]]></entry>
    <entry key="AssignmentInvMatrixInitInpInVecMode"><![CDATA[Invalid input dimensions specified for input port <Y0> of ''{0}''. None of the input ports accept a matrix when the number of output dimension is 1]]></entry>
    <entry key="AssignmentInvMaxDimParam"><![CDATA[Invalid input dimensions specified for input port <Y0> of ''{0}''. Specification in parameter ''{1}'' expects that the size for dimension {2,number,integer}, is at least {3,number,integer} at input port <Y0>, but it is only {4,number,integer}]]></entry>
    <entry key="AssignmentInvNDDataInpInVecMode"><![CDATA[Invalid input dimensions specified for input port <U> of ''{0}''. None of the input ports accept a {1,number,integer}-dimensional signal when it is in vector mode]]></entry>
    <entry key="AssignmentInvNDDataPortNumDims"><![CDATA[Invalid input dimensions specified for input port <U> of ''{0}''. The signal should be a scalar or of dimension {1,number,integer}]]></entry>
    <entry key="AssignmentInvNDInitInpInVecMode"><![CDATA[Invalid input dimensions specified for input port <Y0> of ''{0}''. None of the input ports accept a {1,number,integer}-dimensional signal when it is in vector mode]]></entry>
    <entry key="AssignmentInvInitInpForFrameOutputInVecMode"><![CDATA[Invalid input dimensions specified for input port <Y0> of ''{0}''. This input port does not accept a 1-dimensional signal when the Assignment block outputs a frame signal and the ''Number of output dimensions'' parameter is set to ''1'']]></entry>
    <entry key="AssignmentInvNDInitPortNumDims"><![CDATA[Invalid input dimensions specified for input port <Y0> of ''{0}''. The number of dimensions of the signal should be {1,number,integer}]]></entry>
    <entry key="AssignmentInvalidMatrixOutputDims">Parameter ''{0}'' in ''{1}'' specifies sizes for {2,number,integer} dimensions. It does not match the number of output dimensions, {3,number,integer}</entry>
    <entry key="AssignmentInvalidSelIdxForEmptyInp"><![CDATA[The current size of dimension {0,number,integer} at input port <Y0> is 0. Block ''{1}'' requires this size to be at least {2,number,integer}]]></entry>
    <entry key="AssignmentInvalidVectorOutputDims">Invalid ''{0}'' setting for ''{1}''. The specified ''{2}'' for dimension 1 must be: [n] or [n 1] when the number of output dimensions is 1</entry>
    <entry key="AssignmentMatrixOutputDimsVectorInp">Invalid ''{0}'' setting for ''{1}''. The output must be a vector because the number of output dimensions is 1</entry>
    <entry key="AssignmentMismatchDataIndexPortDim"><![CDATA[Invalid input dimensions specified for dimension {0,number,integer} in ''{1}''. The specified number of elements, {2}, for input port <Idx{3,number,integer}> does not match the specified size, {4}, for dimension {5,number,integer} for input port <U>]]></entry>
    <entry key="AssignmentMismatchDataPortWidth"><![CDATA[Invalid input dimensions specified for input port <U> of ''{0}''. The specified number of elements, {1}, does not match the expected number of elements, {2}]]></entry>
    <entry key="AssignmentNDDataPortDimMismatch"><![CDATA[The output port of ''{0}'' expects {1,number,integer} element(s) along dimension {2,number,integer} from input port <U>. The width of dimension {3,number,integer} at input port <U> is {4,number,integer}]]></entry>
    <entry key="AssignmentNoBooleanIdxPort"><![CDATA[Invalid data type setting for input port <Idx{0,number,integer}> of ''{1}''. This port does not support boolean, half, or non-numeric data type.]]></entry>
    <entry key="AssignmentNoScaledOrBiasedFxpIdxPort"><![CDATA[Invalid data type setting for input port <Idx{0,number,integer}> of ''{1}''. For fixed-point to be used in the index port, the data type must have bias equal to 0, fractional length equal to 0, slope equal to 1.0, and word length less than or equal to 128.]]></entry>
    <entry key="AssignmentNonIntegerInput"><![CDATA[Non-integer input truncated at input port <Idx{0,number,integer}> of ''{1}'']]></entry>
    <entry key="AssignmentIntegerInputOverflow"><![CDATA[Integer input overflow at input port <Idx{0,number,integer}> of ''{1}'', the input data exceeds the range of int32 and has resulted in a loss during conversion.]]></entry>
    <entry key="AssignmentNotAllOutputElementAssigned">At least 1 element in the output signal of ''{0}'' has not been assigned</entry>
    <entry key="AssignmentIndexPortDataTypeRangeNotEnough">In Assignment block ''{0}'', index port {1,number,integer} for dimension {2,number,integer} has type of ''{3}'', whose range is not enough for maximum index {4,number,integer} based on the output size. At least one element in the output signal will not be assigned.</entry>
    <entry key="AssignmentObsoleteAssignAllSetting">''-1'' is used in parameter ''{0}'' to indicate the assignment of all elements for dimension {1,number,integer} in {2}. This use of ''-1'' will be deprecated in future releases. Set parameter ''{3}'' to ''Assign all'' for this dimension instead.</entry>
    <entry key="AssignmentOutputDimsNotVector">Parameter ''{0}'' in ''{1}'' is invalid. The specified output sizes must be a vector of real and positive integers</entry>
    <entry key="AssignmentRepeatIdxFromPort"><![CDATA[Elements {0,number,integer} and {1,number,integer} have the same value {2,number,integer}. Same values are not supported for indices from <sldiag objui="inport" objparam="{3,number,integer}" objname="{5}">input port {3,number,integer}</sldiag> for dimension {4,number,integer} of ''{5}''.]]></entry>
    <entry key="AssignmentRepeatIdxParam">Parameter ''{0}'' in ''{1}'' cannot have repeat value. For dimension {2,number,integer}, elements {3,number,integer} and {4,number,integer} in parameter ''{5}'' have the same value {6,number,integer}</entry>
    <entry key="AssignmentTailDimsTrailing">The output dimension specified for ''{0}'' will be trimmed because the width for the highest {1,number,integer} dimension(s) is 1. The number of dimensions of the output port will be different from the value specified in the dialog</entry>
    <entry key="AssignmentUnequalBusInputs"><![CDATA[Incoming signals to input ports <U> and <Y0> for block ''{0}'' are different with respect to names and hierarchies. For the Assignment block to work with bus signals, both input buses must have the same names and hierarchies.]]></entry>
    <entry key="AssignmentVectorDataPortDimMismatch"><![CDATA[The output port of ''{0}'' expects {1,number,integer} element(s) from input port <U>. The width of input port <U> is {2,number,integer}]]></entry>
    <entry key="AssumingDefaultSimStateForL2MSFcn"><![CDATA[The MATLAB S-function ''{0}'' in block ''{1}'' has not specified its simulation operating point compliance level. Assuming that the default operating point snapshot is sufficient to capture the complete simulation operating point of this block. You can either update {2}.m to specify the OperatingPointCompliance setting or <a href="matlab:warning(''off'',''Simulink:blocks:AssumingDefaultSimStateForL2MSFcn'')">disable</a> this warning.]]></entry>
    <entry key="AssumingDefaultSimStateForSFcn"><![CDATA[The OperatingPointCompliance setting of the {0} S-Function ({1}) block ''{2}'' is not specified. Simulink therefore assumes that the default simulation operating point save/restore is sufficient to capture the complete simulation operating point of this block. Please specify the OperatingPointCompliance setting in the S-function source code. Alternatively, you can  <a href="matlab:warning(''off'',''Simulink:blocks:AssumingDefaultSimStateForSFcn'')">disable</a> this warning.]]></entry>
    <entry key="BCST_CannotMakeCapabilities">The capabilities cannot be made: {0}</entry>
    <entry key="BMathComplexInputNotSupported">Invalid complex data type specified for the input port of block ''{0}''. Operator ''{1}'' does not support complex input signal type.</entry>
    <entry key="BMathComplexOutputNotSupported">Invalid complex data type specified for the output port of block ''{0}''. Operator ''{1}'' does not support complex output signal type.</entry>
    <entry key="BMathInvDtype">Cannot set data type of input and output ports of ''{0}'' to {1}. The data type must be double or single when configured to be a ''{2}'' operation.</entry>
    <entry key="BMathInvDtype3">Cannot set data type of input and output ports of ''{0}'' to {1}. The data type must be signed when configured to be a ''{2}'' operation.</entry>
    <entry key="BMathNRUnsupportedFloatInputFixptInterm">In ''{0}'', the operator ''{1}'' does not support ''{2}'' method for floating-point input, fixed-point output, and intermediate results data type ''Inherit from output''. Please, consider adding a Data Type Conversion block in front of the Math Function block to convert the original floating-point input to a fixed-point signal.</entry>
    <entry key="BMathSignedSqrtIntermDtpMustBeFloat">In ''{0}'', the input or output to ''signedSqrt'' operator must be floating-point.</entry>
    <entry key="BMathSlopeBiasScaledInputNotSupported">Invalid data type specified for the input port of block ''{0}''. Operator ''{1}'' supports built-in data types and fixed-point data types with bias equal to zero and slope power of two.</entry>
    <entry key="RecipNRSlopeBiasScaledInputNotSupported">Invalid data type specified for the input port of block ''{0}''. Block ''{1}'' supports built-in data types and fixed-point data types with bias equal to zero and slope power of two.</entry>
    <entry key="BMathSlopeBiasScaledOutputNotSupported">Invalid data type specified for the output port of block ''{0}''. Operator ''{1}'' supports built-in data types and fixed-point data types with bias equal to zero and slope power of two.</entry>
    <entry key="RecipNRInvIterationNum">In block ''{0}'', valid value of parameter ''{1}'' is an integer between 1 and 255.</entry>
    <entry key="BMathUnsupportedMethod">In ''{0}'', operator ''{1}'' does not support ''{2}'' method for fixed-point types.</entry>
    <entry key="BadDimensionsForUpperLowerLimit">Invalid dimensions in ''{0}''. The dimensions for ''{1}'' must match the dimensions for ''{2}''</entry>
    <entry key="BadParamValueForUpperLowerLimit">Invalid setting in ''{0}'' ''{1}''. Data type for ''{2}'' must be of type double or single and must be the same as the data type for ''{3}''</entry>
    <entry key="BiasNonScalar">The Bias parameter specified in ''{0}'' is invalid. Since the input signal is variable-size, the Bias parameter must be a scalar. A nonscalar Bias only works for fixed-size signals since the Bias size must equal the signal size.</entry>
    <entry key="BlkParamInvalidLinkStatus">The LinkStatus of a block can be set to ''none'' or ''inactive'' for linked blocks. For inactive links, it can be set to ''none'', ''restore'' or ''propagate''</entry>
    <entry key="BlkParamInvalidLinkStatusForInactiveLink">The LinkStatus of an inactive link can be only set to ''none'', ''restore'' or ''propagate''</entry>
    <entry key="BlkParamInvalidLinkStatusForLink">The LinkStatus of a linked block can be only set to ''none'' or ''inactive''</entry>
    <entry key="BlkParamLinkStatusOnNonReference">The LinkStatus can be set only for a linked block</entry>
    <entry key="BlkWithStatePortNotSupported">Subsystem ''{0}'', which contains a For Each block (''{1}''), does not support block ''{2}'' because the block has a state output port.</entry>
    <entry key="PeriodicFCSSDiagNotSupported">Subsystem ''{0}'', which contains a For Each block (''{1}''), does not support Function-Call subsystem ''{2}'' because the ''Sample time type'' parameter of block ''{3}'' is set to ''periodic''. Consider setting this parameter to ''triggered''.</entry>
    <entry key="AsyncFCSSSFcnNotSupported">Simulink does not support an asynchronous S-function initiator block ''{0}'' inside subsystem ''{1}'', which contains a For Each block (''{2}'').</entry>
    <entry key="BlockAliasNotFound">Unable to find block alias ''{0}'' for ''{1}''. Alias ''{2}'' is for ''{3}''.</entry>
    <entry key="BlockCannotAcceptBusInput">Block ''{0}'' cannot accept a nonvirtual bus signal or a virtual bus with a nonvirtual sub-bus. Bus signals connected to this block must be virtual. Consider inserting a "To Virtual Bus" block to convert the input signal to a virtual bus.</entry>
    <entry key="BlockCannotAcceptMixedVirtualBusInput">Block ''{0}'' does not support virtual buses that contain nonvirtual buses. Use a "To Virtual Bus" block to convert the input bus to a virtual bus.</entry>
    <entry key="BlockCannotProduceBusOutput">Block ''{0}'' cannot output a bus signal.</entry>
    <entry key="BlockConfiguredToExpectBus">The Signal Conversion block ''{0}'' cannot operate on a non-bus signal when it has been configured to expect a bus signal. Either create a bus signal by using a Bus Creator block or other bus capable block upstream, or set the Output parameter of the block to ''Signal copy'' for non-bus signals.</entry>
    <entry key="BlockConfiguredToExpectNonVirtualBus">The Signal Conversion block ''{0}'' is configured to convert a nonvirtual bus to a virtual bus. However, the input signal is already a virtual bus signal. To avoid this warning, in the block change the parameter 'Output parameters' to 'Signal copy'.</entry>
    <entry key="BlockConfiguredToExpectVirtualBus">The Signal Conversion block ''{0}'' is configured to convert a virtual bus to a nonvirtual bus. However, the input signal is already a nonvirtual bus signal. To avoid this warning, in the block change the parameter 'Output parameters' to 'Signal copy'.</entry>
    <entry key="BlockContinuousFrame">Continuous-time input signals are not allowed for ''{0}'' because it is operating in frame-based mode</entry>
    <entry key="BlockDoesNotSupportMultiExecInstances">Simulink does not support block ''{0}'' inside subsystem ''{1}'' because the subsystem contains a For Each block (''{2}'').</entry>
    <entry key="BlockDoesNotSupportMultiExecInstancesWithCustomMsg">Simulink does not support block ''{0}'' inside subsystem ''{1}'' because the subsystem contains a For Each block (''{2}''). Open the following message for detail.</entry>
    <entry key="LoggingBlockDoesNotSupportMultiExecInstancesWithCustomMsg">Logging for block ''{0}'' inside subsystem ''{1}'' is not supported because the subsystem contains a For Each block (''{2}''). Open the following message for detail.</entry>
    <entry key="BlockDoesNotSupportMultiExecInstancesCustomMsg" translate="false" note="TranslateFalseBatch;">{0}</entry>
    <entry key="BlockElapseTimeOverflow">The time between the last two triggers was so long that the Elapsed Time Counter used more than 32 bits. The block {0} can not carry out accurate calculations when this happens</entry>
    <entry key="BlockFrameInputPortParameter">Invalid dimensions specified for input port of ''{0}''. The input dimensions should be of the form ''[F x {1,number,integer}]'' to match the dimensions of one or more of its parameters</entry>
    <entry key="BlockFrameMatrixParameter">Invalid parameters specified for ''{0}'' which is operating in frame-based mode. In this mode, all parameters must either be scalars or row vectors whose lengths match the number of frame channels</entry>
    <entry key="BlockFrameOutputPortParameter">Invalid dimensions specified for output port of ''{0}''. The output dimensions should be of the form ''[F x {1,number,integer}]'' to match the dimensions of one or more of its parameters</entry>
    <entry key="BlockHasUnappliedChanges">Apply or cancel unapplied changes in ''{0}'' before running the simulation.</entry>
    <entry key="BlockTypeStrExists">Cannot register block ''{0}'' in module ''{1}''. This block was previously registered in module ''{2}''.</entry>
    <entry key="BlockWithExplicitICFeedingEmptyOutport"><![CDATA[The initial output of Outport ''{0}'' is set to [] which might cause unexpected initialization. If you want <sldiag objui="outport" objparam="{1,number,integer}" objname="{2}">output port {1,number,integer}</sldiag> of Subsystem ''{2}'' to have the same initial value as the Outport source, ''{3}'', please explicitly set this initial output value on ''{4}''. To turn off this warning message, deselect <sldiag objui="configset" objparam="CheckSSInitialOutputMsg">Check undefined subsystem initial output</sldiag>.]]></entry>
    <entry key="BlockWithExplicitICFeedingEmptyOutportConsistentOutportInit"><![CDATA[The initial output of Outport ''{0}'' is set to [] which might cause unexpected initialization. If you want <sldiag objui="outport" objparam="{1,number,integer}" objname="{2}">output port {1,number,integer}</sldiag> of Subsystem ''{2}'' to have the same initial value as the Outport source, ''{3}'', please explicitly set this initial output value on ''{4}''. To fix this issue, set <sldiag objui="configset" objparam="UnderspecifiedInitializationDetection">Underspecified initialization detection</sldiag> to 'Simplified'. Migration to the simplified initialization mode can also be done by using Upgrade Advisor with the check "Check consistency of initialization parameters for Outport and Merge blocks". To turn off this warning message, deselect <sldiag objui="configset" objparam="CheckSSInitialOutputMsg">Check undefined subsystem initial output</sldiag>.]]></entry>
    <entry key="MultipleWarningsBlkWithExpICFeedingEmptyOutport"> The model ''{0}'' has a total of {1,number,integer} Outport blocks which exhibit the same issue as the Outport block in the warning above.</entry>
    <entry key="BlockWithFewExplicitICsFeedingEmptyOutport"><![CDATA[The initial output of Outport ''{0}'' is set to [] which might cause unexpected initialization. If you want <sldiag objui="outport" objparam="{1,number,integer}" objname="{2}">output port {1,number,integer}</sldiag> of Subsystem ''{2}'' to have the same initial value as the Outport sources, {3}, please explicitly set this initial output value on ''{4}''. To turn off this warning message, deselect <sldiag objui="configset" objparam="CheckSSInitialOutputMsg">Check undefined subsystem initial output</sldiag>.]]></entry>
    <entry key="BlockWithFewExplicitICsFeedingEmptyOutportConsistentOutportInit"><![CDATA[The initial output of Outport ''{0}'' is set to [] which might cause unexpected initialization. If you want <sldiag objui="outport" objparam="{1,number,integer}" objname="{2}">output port {1,number,integer}</sldiag> of Subsystem ''{2}'' to have the same initial value as the Outport sources, {3}, please explicitly set this initial output value on ''{4}''. To turn off this warning message, deselect <sldiag objui="configset" objparam="CheckSSInitialOutputMsg">Check undefined subsystem initial output</sldiag>.]]></entry>
    <entry key="BlockWithManyExplicitICsFeedingEmptyOutport"><![CDATA[The initial output of Outport ''{0}'' is set to [] which might cause unexpected initialization. If you want <sldiag objui="outport" objparam="{1,number,integer}" objname="{2}">output port {1,number,integer}</sldiag> of Subsystem ''{2}'' to have the same initial value as the Outport sources, {3}, ... (There are {4,number,integer} blocks in the list), please explicitly set this initial output value on ''{5}''. To turn off this warning message, deselect <sldiag objui="configset" objparam="CheckSSInitialOutputMsg">Check undefined subsystem initial output</sldiag>.]]></entry>
    <entry key="BlockWithManyExplicitICsFeedingEmptyOutportConsistentOutportInit"><![CDATA[The initial output of Outport ''{0}'' is set to [] which might cause unexpected initialization. If you want <sldiag objui="outport" objparam="{1,number,integer}" objname="{2}">output port {1,number,integer}</sldiag> of Subsystem ''{2}'' to have the same initial value as the Outport sources, {3}, ... (There are {4,number,integer} blocks in the list), please explicitly set this initial output value on ''{5}''. To turn off this warning message, deselect <sldiag objui="configset" objparam="CheckSSInitialOutputMsg">Check undefined subsystem initial output</sldiag>.]]></entry>
    <entry key="BmathLogOfNegativeNumber">Log of a negative number in ''{0}''. Consider setting the ''Output signal type'' to complex.</entry>
    <entry key="BmathRcpSqrtOfNegativeNumber">Square root of a negative number in ''{0}''.</entry>
    <entry key="BmathSqrtOfNegativeNumber">Square root of a negative number in ''{0}''. Consider setting the ''Output signal type'' to complex.</entry>
    <entry key="BmathUndefinedResultOfPow2">Result of 2^u is undefined in ''{0}''.</entry>
    <entry key="BmathUndefinedResultOfPow10">Result of 10^u is undefined in ''{0}''.</entry>
    <entry key="BreakpointSetMustMatchTable">Size of Breakpoint vector {0,number,integer} in block ''{1}'' must be same as its corresponding dimension in Table. Size of Breakpoint vector is {2,number,integer}, but size of corresponding dimension of Table is {3,number,integer}.</entry>
    <entry key="BreakpointSetsMustBeVector">Breakpoint vector {0,number,integer} in block ''{1}'' must be a vector that contains at least two elements.</entry>
    <entry key="BusSelectorRequiresBusSignal">The signal connected to the input port of ''{0}'' is not a bus signal. The input to the Bus Selector block must be a virtual or nonvirtual bus signal. \nA possible cause of this error is the use of a bus-capable block (such as Merge or Unit Delay) that in this current situation is unable to propagate the bus downstream to the block reported in this error. Please see Simulink documentation for further information on composite (i.e. bus) signals and their proper usage.</entry>
    <entry key="BusAssignRequiresBusSignal"><![CDATA[The signal connected to <sldiag objui="inport" objparam="1" objname="{0}">input port 1</sldiag> of ''{0}'' is not a bus signal. The first input to the Bus Assignment block must be a virtual or nonvirtual bus signal. \nA possible cause of this error is the use of a bus-capable block (such as Merge or Unit Delay) that in this current situation is unable to propagate the bus downstream to the block reported in this error. Please see Simulink documentation for further information on composite (i.e. bus) signals and their proper usage.]]></entry>
    <entry key="BusAssignmentDupAssignment">A signal can be assigned only once, but ''{0}'' is assigned multiple times in block ''{1}''.</entry>
    <entry key="BusAssignmentCoveredAssignment">A signal can be assigned only once, but the assigned bus signal ''{0}'' fully covers the assigned signal ''{1}'' in block ''{2}''.</entry>
    <entry key="BusAssignmentInvOutSignal">Selected signal ''{0}'' in ''{1}'' is not part of the bus entering the Bus Assignment block. A possible cause of this error is the existence of a feedback loop involving Bus Creators, Bus Selectors and bus capable blocks that Simulink is unable to resolve. Please refer the Simulink documentation on Bus signals for further information on how to resolve this error.</entry>
    <entry key="BusAssignmentOutSignalNameUpdate">Remapping selected signal ''{0}'' to ''{1}'' in ''{2}'' to match the bus hierarchy. Save your file to make this change permanent.</entry>
    <entry key="BusAssignmentAssignedSignalIsInsideAoB">The Bus Assignment block ''{0}'' could not replace signal ''{1}'', because this signal is inside an array of buses ''{2}''.</entry>
    <entry key="BusAssignmentInvalidAssignedSignal" note="stringDatatypeUpdate">Property ''AssignedSignals'' cannot be set to empty character vector.</entry>
    <entry key="BusAssignmentMismatchedAssignedSignal">The structure of the input bus signal at port ''{0,number,integer}'' of the Bus Assignment block ''{1}'' is different from the structure of selected bus signal ''{2}''.</entry>
    <entry key="BusAssignmentBusToSignalMismatch"><![CDATA[The <sldiag objui="inport" objparam="{0,number,integer}" objname="{1}">input port {0,number,integer}</sldiag> of the Bus Assignment block ''{1}'' is configured to accept a non-bus signal. However, the actual input is a bus signal.]]></entry>
    <entry key="BusAssignmentSignalToBusMismatch"><![CDATA[The <sldiag objui="inport" objparam="{0,number,integer}" objname="{1}">input port {0,number,integer}</sldiag> of the Bus Assignment block ''{1}'' is configured to accept a bus signal. However, the actual input is a non-bus signal.]]></entry>
    <entry key="BusAssignmentUnconnectedAssignedBusSignal"><![CDATA[The <sldiag objui="inport" objparam="{0,number,integer}" objname="{1}">input port {0,number,integer}</sldiag> of the Bus Assignment block ''{1}'' is configured to accept a bus signal. However, the input port is unconnected.]]></entry>
    <entry key="BusBlkOutBadDims2"><![CDATA[Error occurred while setting the dimensions of <sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">output port {0,number,integer}</sldiag> of ''{1}'' to '{'{2}'}'. The signals contributing to this port indicate that the dimensions should be '{'{3}'}'.]]></entry>
    <entry key="BusCC_BusCheckFailed">The input bus to block ''{0}'' does not match the bus specified by the bus object ''{1}'' on the block dialog. The following errors were detected:</entry>
    <entry key="BusCC_ElementDataTypeMismatch">Bus element ''{0}'' of bus object ''{1}'' is specified to be of data type ''{2}'', but the incoming signal has a data type of ''{3}''.</entry>
    <entry key="BusCC_ElementDimMismatch">Bus element ''{0}'' of bus object ''{1}'' is specified to be of dimensions {2}, but the incoming signal is of dimensions {3}.</entry>
    <entry key="BusCC_ElementRequireAOB">Bus element ''{0}'' of bus object ''{1}'' is specified to be an array of buses, but the incoming signal is a virtual bus. An array of buses must be a nonvirtual bus.</entry>
    <entry key="BusCC_ElementDimMismatchVectMatConv">Bus element ''{0}'' of bus object ''{1}'' is specified to be of dimensions {2}, but the incoming signal is of dimensions {3}. This error is due to the ''Vector/Matrix conversion'' diagnostic setting in the Diagnostics page of Configuration Parameters dialog. Try setting this diagnostic to ''None'' to eliminate this error.</entry>
    <entry key="BusCC_ElementDimensionsModeMismatch">The dimensions mode of the bus element ''{0}'' of bus object ''{1}'' is ''{2}'', but the dimensions mode of the incoming signal is ''{3}''.</entry>
    <entry key="BusCC_ElementFramenessMismatch">Bus element ''{0}'' of bus object ''{1}'' is specified to be ''{2}'', but the incoming signal is ''{3}''.</entry>

    <entry key="BusCC_ElementNameMismatch">Block ''{0}'' receives a bus with a signal named ''{2}'' but expects a signal named ''{3}'' based on bus object ''{1}''.</entry>
    
    <entry key="BusCC_ElementNameMismatchWarning">Block ''{0}'' receives a bus with a signal named ''{2}'' but expects a signal named ''{3}'' based on bus object ''{1}''. To disable this diagnostic, set the  Configuration Parameters &gt; Diagnostics &gt; Connectivity &gt; ''Element name mismatch'' option to ''None''.</entry>
    <entry key="BusCC_ElementNotABus">Bus element ''{0}'' of bus object ''{1}'' is not a bus, but the incoming signal is a bus.</entry>
    <entry key="BusCC_ElementSampleTimeMismatch">Bus element ''{0}'' of bus object ''{1}'' is specified to be of sample time {2}, but the incoming signal is of sample time {3}.</entry>
    <entry key="BusCC_ElementSampleTimeMismatchForBusCreatorInExpandedSubsystem">The block ''{0}'' attempts to set the sample time of the outgoing bus to {1}, yet the bus is defined using bus object ''{2}'' which specifies that one or more of its elements are of sample time {3}. The bus object ''{4}'' must define its elements to have inherited sample times by assigning their sample time values to -1.</entry>
    <entry key="BusCC_ElementSignalTypeMismatch">Bus element ''{0}'' of bus object ''{1}'' is specified to be of type ''{2}'', but the incoming signal is ''{3}''.</entry>
    <entry key="BusCC_InputNotABus">Bus element ''{0}'' of bus object ''{1}'' is a bus, but the incoming signal is not a bus.</entry>
    <entry key="BusCC_InvalidBus">Bus object ''{0}'' is not a bus.</entry>
    <entry key="BusCC_NumElementsMismatch">Bus object ''{0}'' has {1,number,integer} bus elements, but the incoming bus has {2,number,integer} signals.</entry>
    <entry key="BusCannotCacheCompBus">Unable to cache compiled bus structure for one of the block ports. The cause of this problem can be reinstantiation of library links or block replacement via callbacks during update diagram. Rerunning the command may fix this problem because the block may no longer need to be reinstantiated or replaced.</entry>
    <entry key="BusComp_ControlPortError1"><![CDATA[The signal at <sldiag objui="inport" objparam="{0,number,integer}" objname="{1}">input port {0,number,integer}</sldiag> of block ''{1}'' is of width {2,number,integer}. This must be a scalar for buses to successfully pass through this block.]]></entry>
    <entry key="BusComp_ControlPortError2"><![CDATA[The signal at <sldiag objui="inport" objparam="{0,number,integer}" objname="{1}">input port {0,number,integer}</sldiag> of block ''{1}'' is of dimension {2}. This must be a scalar for buses to successfully pass through this block.]]></entry>
    <entry key="BusComp_DataTypeError"><![CDATA[Incoming buses to block ''{0}'' have a data type mismatch. The signal at <sldiag objui="inport" objparam="{1,number,integer}" objname="{2}">input port {1,number,integer}</sldiag> of ''{2}'' is of data type ''{3}'', while its corresponding signal at <sldiag objui="inport" objparam="{4,number,integer}" objname="{5}">input port {4,number,integer}</sldiag> of ''{5}'' is of data type ''{6}''.]]></entry>
    <entry key="BusComp_DimensionsModeError"><![CDATA[Incoming buses to block ''{0}'' have a dimensions mode mismatch. The dimensions mode of the signal at <sldiag objui="inport" objparam="{1,number,integer}" objname="{2}">input port {1,number,integer}</sldiag> of ''{2}'' is ''{3}'', while the dimensions mode of the corresponding signal at <sldiag objui="inport" objparam="{4,number,integer}" objname="{5}">input port {4,number,integer}</sldiag> of ''{5}'' is ''{6}''.]]></entry>
    <entry key="BusComp_DimsError1"><![CDATA[Incoming buses to block ''{0}'' have a dimension mismatch. The signal at <sldiag objui="inport" objparam="{1,number,integer}" objname="{2}">input port {1,number,integer}</sldiag> of ''{2}'' is of width {3}, while its corresponding signal at <sldiag objui="inport" objparam="{4,number,integer}" objname="{5}">input port {4,number,integer}</sldiag> of ''{5}'' is of width {6}.]]></entry>
    <entry key="BusComp_DimsError2"><![CDATA[Incoming buses to block ''{0}'' have a dimension mismatch. The signal at <sldiag objui="inport" objparam="{1,number,integer}" objname="{2}">input port {1,number,integer}</sldiag> of ''{2}'' is of dimension {3}, while its corresponding signal at <sldiag objui="inport" objparam="{4,number,integer}" objname="{5}">input port {4,number,integer}</sldiag> of ''{5}'' is of dimension {6}.]]></entry>
    <entry key="BusComp_DimsNumError"><![CDATA[Incoming buses to block ''{0}'' have a dimension mismatch. The signal at <sldiag objui="inport" objparam="{1,number,integer}" objname="{2}">input port {1,number,integer}</sldiag> of ''{2}'' is of dimensionality {3,number,integer}, while its corresponding signal at <sldiag objui="inport" objparam="{4,number,integer}" objname="{5}">input port {4,number,integer}</sldiag> of ''{5}'' is of dimensionality {6,number,integer}.]]></entry>
    <entry key="BusComp_FrameError"><![CDATA[Incoming buses to block ''{0}'' have a frame mismatch. The signal at <sldiag objui="inport" objparam="{1,number,integer}" objname="{2}">input port {1,number,integer}</sldiag> of ''{2}'' is ''{3}'', while its corresponding signal at <sldiag objui="inport" objparam="{4,number,integer}" objname="{5}">input port {4,number,integer}</sldiag> of ''{5}'' is ''{6}''.]]></entry>
    <entry key="BusComp_SampleTimeError"><![CDATA[Incoming buses to block ''{0}'' have a sample time mismatch. The signal at <sldiag objui="inport" objparam="{1,number,integer}" objname="{2}">input port {1,number,integer}</sldiag> of ''{2}'' is of sample time {3}, while its corresponding signal at <sldiag objui="inport" objparam="{4,number,integer}" objname="{5}">input port {4,number,integer}</sldiag> of ''{5}'' is of sample time {6}.]]></entry>
    <entry key="BusComp_SignalTypeError"><![CDATA[Incoming buses to block ''{0}'' have a signal type mismatch. The signal at <sldiag objui="inport" objparam="{1,number,integer}" objname="{2}">input port {1,number,integer}</sldiag> of ''{2}'' is of type ''{3}'', while its corresponding signal at <sldiag objui="inport" objparam="{4,number,integer}" objname="{5}">input port {4,number,integer}</sldiag> of ''{5}'' is of type ''{6}''.]]></entry>
    <entry key="BusCreatorInvalidInputComplex"><![CDATA[Cannot set the signal type of <sldiag objui="inport" objparam="{0,number,integer}" objname="{1}">input port {0,number,integer}</sldiag> of ''{1}'' to complex; the signal type should be real.]]></entry>
    <entry key="BusCreatorInvalidInputDataType"><![CDATA[Cannot set the data type of <sldiag objui="inport" objparam="{0,number,integer}" objname="{1}">input port {0,number,integer}</sldiag> of ''{1}'' to {2}; the expected data type is {3}.]]></entry>
    <entry key="BusCreatorInvalidInputReal"><![CDATA[Cannot set the signal type of <sldiag objui="inport" objparam="{0,number,integer}" objname="{1}">input port {0,number,integer}</sldiag> of ''{1}'' to real; the signal type should be complex.]]></entry>
    <entry key="BusCreatorInvalidInputUnit"><![CDATA[Cannot set the unit of <sldiag objui="inport" objparam="{0,number,integer}" objname="{1}">input port {0,number,integer}</sldiag> of ''{1}'' to {2}; the expected unit is {3}.]]></entry>
    <entry key="BusCreatorInvalidOutputComplex">Cannot set the output signal type of ''{0}'' to complex; the output signal type should be real.</entry>
    <entry key="BusCreatorInvalidOutputDataType">Cannot set the output data type of ''{0}'' to {1}; the output data type should be a structure type with {2,number,integer} elements.</entry>
    <entry key="BusCreatorInvalidOutputUnit">Cannot set the output unit of ''{0}'' to {1}; the output should be unitless.</entry>
    <entry key="BusInputSignalNotSupportedByForEach">The signal at input {0,number,integer} is a bus signal for subsystem ''{1}''. The corresponding Inport block is set to partition the input signal in the block dialog of the For Each block ''{2}''. A bus input signal can not be partitioned by subsystem ''{3}''. However, subsystem ''{4}'' can accept a bus signal if the corresponding Inport is not selected for partitioning.</entry>
    <entry key="BusObjectAtMdlrefInportNotConsistent">The bus data type ''{0}'' specified for the block ''{1}'' and the bus data type ''{2}'' specified for input {3,number,integer} of ''{4}'' are inconsistent; they must be the same.</entry>
    <entry key="BusObjectAtBusCreatorInputNotConsistent">The bus data type ''{0}'' specified for the block ''{1}'' and the bus data type ''{2}'' specified for input {3,number,integer} of ''{4}'' are inconsistent; they must be the same.</entry>
    <entry key="SignalConversionSaveAsParameters">The Signal copy Conversion Output option on the Signal Conversion block is not available in ''{0}''. Therefore, all Signal Conversion blocks in this model with Conversion Output set to Signal copy will be saved with the Conversion Output set to Contiguous copy.</entry>
    <entry key="BusObjectAtSignalConversionNotConsistent">The bus object ''{0}'' specified on the Signal Conversion block ''{1}'' does not match the bus object ''{2}'' specified on the Signal Conversion block's input port. This could be caused by a different bus data type being specified on an upstream block, such as a Bus Creator block, than the one specified on the Signal Conversion block.</entry>
    <entry key="SignalConversionVirtualBusContiguousCopy">The input of the Signal Conversion block ''{0}'' is a virtual bus. This block is configured to create a contiguous vector. Before R2011b, a bus-to-vector conversion was automatically performed at the input port of this block. In R2011b and later, a \"Signal copy\" option replaces the \"Contiguous copy\" option. To eliminate this warning, consider inserting a Bus To Vector block at the input port of this Signal Conversion block, to convert the virtual bus input to a vector.</entry>
    <entry key="SignalConversionVirtualBusSignalObject"><![CDATA[The Simulink.Signal object specified on the line originating from <sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">output port {0,number,integer}</sldiag> of ''{1}'' is not allowed because it cannot be mapped uniquely to a non-virtual signal. To resolve this issue, consider inserting a Bus To Vector block at the input of the Signal Conversion block. Alternatively, you can change the \"Output\" option of the Signal Conversion block to \"Nonvirtual bus\" and specify a Simulink.Bus object on the block.]]></entry>
    <entry key="SignalConversionVirtualBusSignalObject2"><![CDATA[The Simulink.Signal object specified on the line originating from <sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">output port {0,number,integer}</sldiag> of ''{1}'' is not allowed because it cannot be mapped uniquely to a non-virtual signal. To resolve this issue, consider changing the \"Output\" option of the Signal Conversion block to \"Nonvirtual bus\".]]></entry>
    <entry key="BusObjectAtRootOutportNotConsistent">The bus data type ''{0}'' specified for the block ''{1}'' and the bus data type ''{2}'' specified by ''{3}'' are inconsistent; they must be identical since they both correspond to the same bus type.</entry>
    <entry key="BusObjectNeededForRootOutport">A bus data type should be specified for the block ''{0}'' since a bus is entering its input port.</entry>
    <entry key="BusObject_SampleTimeMismatch">All elements of bus object ''{0}'' must inherit their sample time or specify the same sample time ({1}).</entry>
    <entry key="BusSelDupBusCreatorSigNames">Signals entering Bus Creator ''{0}'' have duplicated names at input ports: {1}\nAll signals in the resulting bus are being made unique by appending \"(signal #)\". Please update the labels of the signals such that they are all unique.</entry>
    <entry key="BusSelDupMuxSigNames">Signals entering Mux ''{0}'' have duplicated names at input ports: {1}\nAll signals in the resulting bus are being made unique by appending \"(signal #)\". Please update the labels of the signals such that they are all unique.</entry>
    <entry key="BusSelInvBusCreatorSigNames">Signal {0,number,integer} entering Bus Creator ''{1}'' contains \".\" and/or \",\" characters. New names are being generated for the block by replacing these characters with \":\" and \";\" respectively.</entry>
    <entry key="BusSelInvMuxSigNames">Signal {0,number,integer} entering Mux ''{1}'' contains \".\" and/or \",\" characters. New names are being generated for the block by replacing these characters with \":\" and \";\" respectively.</entry>
    <entry key="BusSelectorCantChangeSignalLabel">Cannot change the signal label of a line connecting a Bus Selector.</entry>
    <entry key="BusSelectorDuplicateLeafSignalInMuxedOutput">Bus Selector block ''{0}'' might cause incorrect results because the output bus contains signals with duplicate names. Include each signal in the output bus no more than once, rename input signals to have unique names, or clear "Output as virtual bus" and create the bus with a Bus Creator block.</entry>
    <entry key="BusSelectorInputDuplicateSignalNames">Bus Selector block ''{0}'' does not support the bus it receives because the input bus contains multiple elements named ''{1}''.</entry>
    <entry key="SynthesizedBusSelectorInputDuplicateSignalNames">Block ''{0}'' does not support the bus it receives because the input bus contains multiple elements named ''{1}''.</entry>
    <entry key="DuplicateSignalInBusFromBusSelectorMuxedOutput">The output bus signal from block ''{0}'' contains signals with duplicate names, which can give incorrect results in logging. We can not log bus with duplicate names.</entry>
    <entry key="BusSelectorEvalPrmInvOutSignal">Selected signal ''{0}'' in ''{1}'' is not part of the bus entering the Bus Selector. One probable cause of this error is the use of Mux blocks instead of Bus Creator blocks to create buses in this model. Consider changing the ''Mux blocks used to create bus signals'' diagnostic to ''error'' in this model and replace any Muxes that are then reported with Bus Creators. Another possible cause of this error is the use of a bus-capable block (such as Merge or Unit Delay) that in this current situation is unable to propagate the bus downstream to the block reported in this error. Please see Simulink documentation for further information on composite (i.e. bus) signals and their proper usage.</entry>
    <entry key="BusSelectorExpectsBusInput">A valid bus signal should be connected to the Bus Selector block ''{0}''.</entry>
    <entry key="SubrefInportExpectsBus"><![CDATA[A valid bus signal should be connected to the <sldiag objui="inport" objparam="{0,number,integer}" objname="{1}">input port {0,number,integer}</sldiag> of ''{1}''.]]></entry>
    <entry key="BusSelectorInvBusObject">Unable to load bus object ''{0}'' for block ''{1}''. \n The bus object \n specified does not exist in the MATLAB workspace or is not of type Simulink.Bus.</entry>
    <entry key="BusSelectorInvOutSignal">Selected signal ''{0}'' in ''{1}'' is not part of the bus entering the Bus Selector. A possible cause of this error is the existence of a feedback loop involving Bus Creators, Bus Selectors and bus capable blocks that Simulink is unable to resolve. Please refer the Simulink documentation on Bus signals for further information on how to resolve this error.</entry>
    <entry key="BusSelectorOutSignalNameUpdate">Remapping selected signal ''{0}'' to ''{1}'' in ''{2}'' to match the bus hierarchy. Save your file to make this change permanent.</entry>
    <entry key="BusSelectorUnconnected">''{0}'' must be connected to a Bus Creator, Bus Selector or a bus capable block. \n A possible cause of this error is the use of a bus-capable block (such as Merge or Unit Delay) that in this current situation is unable to propagate the bus downstream to the block reported in this error. Please see Simulink documentation for further information on composite (i.e. bus) signals and their proper usage.</entry>
    <entry key="BusSelectorSelectionInsideAoB">Selected signal ''{0}'' in the Bus Selector block ''{1}'' is invalid since it refers to a bus element within an array of sub-buses. The path to the array of sub-buses is ''{2}''. Please select the appropriate array element using a Selector block before using the Bus Selector block to access an element within the bus. </entry>
    <entry key="PhyRouterGeneral">Physical connection router: ''{0}''</entry>
    <entry key="BrancherHierStringMatlabName">Hierarchy string ''{0}'' specified for child port ''{1,number,integer}'' is not a valid MATLAB variable name. </entry>
    <entry key="SimscapeBusBlockDesc">This block bundles connections into a Simscape Bus line. You can also use it to access one or more connections from an existing Simscape Bus line. Use automatic port creation to add new connections to the block.</entry>
    <entry key="LabelledConnNodeBlockDesc">This block is used to make virtual connections between two Simscape blocks without using physical lines. This removes clutter in the Simscape block diagram. </entry>
    <entry key="PhyRouterLoopBan">Compilation terminated because of a connection loop involving Simscape blocks ''{0}''.</entry>
    <entry key="ConnectionLabelBlockLoopBan">Compilation terminated because of a connection loop involving Connection Label blocks ''{0}''.</entry>
    <entry key="PhyRouterPhysicalSignalBan">Physical signals are not allowed into Simscape buses; check connection ports on block ''{0}''.</entry>
    <entry key="LabelledConnectionNodesPhysicalSignalBan">Physical signals are not allowed into Connection Label blocks; check connection port on block ''{0}''.</entry>
    <entry key="NonNetworkEngineBan">The connection attached to child port {0,number,integer} on Simscape Bus block ''{1}'' is not allowed to participate in Simscape buses.</entry>
    <entry key="LabelledConnectionNodesNonNetworkEngineBan">The connection attached to the Connection Label block ''{0}'' is not supported.</entry>
    <entry key="InvalidHierStringInSimscapeBusDialog">Hierarchy string specified is not a valid MATLAB variable name. </entry>
    <entry key="BusSelectorSelectionInsideAoBForLogging">
      The signal for logging at ''{0}'' block is a virtual bus that contains an array of bus at ''{1}''.
      Logging does not support an array of bus inside a virtual bus.
    Please convert this virtual bus to a non-virtual bus or disable logging for this port.</entry>
    <entry key="BusSelectorSelectionInsideAoBForBusExp">
      The input signal for ''{0}'' block is a virtual bus that contains an array of bus at ''{1}''.
      This block does not support an array of bus inside a virtual bus.
    Please convert this virtual bus to a non-virtual bus.</entry>
    <entry key="BusSelectorMuxedOutputsDoesNotSupportAOB">Bus Selector block, ''{0}'', has the ''Output as virtual bus'' option enabled, but that setting is not supported for an array of buses input signal or an input signal containing an array of buses.</entry>
    <entry key="BusSupHierarchyMismatch">Signal ''{0}'' is a bus while signal ''{1}'' is not and hence the input buses to ''{2}'' are not equal.</entry>
    <entry key="BusSupNamesMismatch">Signal ''{0}'' does not match signal ''{1}'' in name and hence the input buses to ''{2}'' are not equal.</entry>
    <entry key="BusSupNumSignalsMismatch">The input buses to ''{0}'' differ in the number of signals they contain.</entry>
    <entry key="SignalSpecBlockInputBusTypeMismatch">Input bus type mismatch on Signal Specification block. The bus signal at the input of ''{0}'' is a ''{1}'', however the block expects a ''{2}'' as per the setting specified for ''Require nonvirtual bus'' in the dialog of the signal specification block.</entry>
    <entry key="CGIRUnSupBlockType">Block ''$PATH$'' is of type {0}. $PRODUCT$ does not support blocks of this type.</entry>
    <entry key="CGIRUnSupLookUp2DComplex">The Table data parameter of the Lookup Table (2-D) block ''$PATH$'' is complex valued. $PRODUCT$ does not support complex outputs.</entry>
    <entry key="CGIRUnSupLookUp2DDataType">Output port of Lookup Table (2-D) block ''$PATH$'' has data type {0}. $PRODUCT$ does not support this data type.</entry>
    <entry key="CGIRUnSupLookUp2DHetrCol">The column index input port and output port of Lookup Table (2-D) block ''$PATH$'' has data type {0} and {1} respectively. $PRODUCT$ does not support different data types for input and output ports.</entry>
    <entry key="CGIRUnSupLookUp2DHetrRow">The row index input port and output port of Lookup Table (2-D) block ''$PATH$'' has data type {0} and {1} respectively. $PRODUCT$ does not support different data types for input and output ports.</entry>
    <entry key="CGIRUnSupLookUp2DMethod">The Look-up method parameter of the Lookup Table (2-D) block ''$PATH$'' is configures to {0}. $PRODUCT$ does not support this method.</entry>
    <entry key="CGIRUnSupLookUpComplex">Lookup Table block ''$PATH$'' outputs a complex-valued signal. $PRODUCT$ does not support complex outputs.</entry>
    <entry key="CGIRUnSupLookUpDataType">Output port of Lookup Table block ''$PATH$'' has data type {0}. $PRODUCT$ does not support this data type.</entry>
    <entry key="CGIRUnSupLookUpHetr">Input and output ports of Lookup Table block ''$PATH$'' has data type {0} and {1} respectively. $PRODUCT$ does not support different data types for input and output ports.</entry>
    <entry key="CGIRUnSupLookUpMethod">The Look-up method parameter of the Lookup Table block ''$PATH$'' is configured to {0}. $PRODUCT$ does not support this method.</entry>
    <entry key="CGIRUnSupNnZOffset">The compiled sample time of block ''$PATH$'' is {0}. $PRODUCT$ does not support blocks with nonzero sample time offset.</entry>
    <entry key="CGIRUnSupSfunc">$PRODUCT$ does not support S-function {0} invoked from block ''$PATH$''.</entry>
    <entry key="CacheCompiledBusStruct">Invalid setting for CacheCompiledBusStruct parameter for block ''{0}''. This parameter can be on for Subsystem Inport blocks, Outport blocks and Bus Creator blocks.</entry>
    <entry key="CancelMsg">Cancel</entry>
    <entry key="CannotChangePortComplexSignal">S-function method {0} cannot change the complex signal of {1} port {2,number,integer} of ''{3}'' once it has been set</entry>
    <entry key="CannotChangePortDataType">S-function method {0} cannot change the data type of {1} port {2,number,integer} of ''{3}'' once the data type has been set</entry>
    <entry key="CannotChangePortDimensions">S-function method {0} cannot change the dimension of {1} port {2,number,integer} of ''{3}'' once it has been set</entry>
    <entry key="CannotChangePortWidth">S-function method {0} cannot change the width of {1} port {2,number,integer} of ''{3}'' once the width has been set</entry>
    <entry key="CannotChangePortUnit">S-function method {0} cannot change the unit of {1} port {2,number,integer} of ''{3}'' once it has been set</entry>
    <entry key="CannotConvToVarDimsFrame">''{0}'' cannot convert a variable-size sample-based signal to a variable-size frame-based signal. The size of the first dimension of a variable- size sample-based signal can change during execution. In contrast, the frame-based signal (e.g., [m x n]) must keep its frame length (i.e., m) fixed.</entry>
    <entry key="CannotExtrapData">''{0}'' extrapolation of integer and fixed-point data are not supported by block ''{1}''. In addition, ''{0}'' extrapolation requires that the 'Intermediate results' and 'Output' data types must be the same floating-point data type.</entry>
    <entry key="CannotFindSignalInStrictMode">Cannot find signal {0} in input signal of Bus Selector block ''{1}''.</entry>
    <entry key="CannotGetSimStateForSFcnWithPWork">Simulink is unable to save the operating point of the {0} S-Function ({1}) block ''{2}'' because the S-function has pointer work (PWork) vectors.</entry>
    <entry key="CannotSetSimStateForSFcnWithPWork">Simulink is unable to restore the operating point for the {0} S-Function ({1}) block ''{2}'' because the S-function has pointer work (PWork) vectors.</entry>
    <entry key="CannotSplitFrameData">Cannot split the multiplexed frame information at the input of ''{0}'' to the various output ports. The multiplexed signal at the input corresponds to frame information for {1,number,integer} individual signals. A possible problem may be that there is not enough information in the block dialog on how the frame information from the various signals needs to be split among the various output ports</entry>
    <entry key="CaseConditionsNotCoverEnums">The ''{0}'' of ''{1}'' are of an enumerated data type but they do not cover all of the underlying values in the enumerated data type and the default case is not enabled</entry>
    <entry key="CaseNonIntegerInput">Noninteger input truncated at port {0,number,integer} of {1}</entry>
    <entry key="CaseOverflowIntegerInput">Overflow integer input truncated at port {0,number,integer} of {1}</entry>
    <entry key="ColMismatch">Number of elements in {0} for ''{1}'' must match number of columns in the output table</entry>
    <entry key="CollapsedParamRefPartitionedMaskParam">Parameter ''{0}'' of block ''{1}'' cannot reference partitioned mask parameter ''{2}'' of For Each subsystem ''{3}'' because parameter ''{4}'' will be reduced to a numerical value.</entry>
    <entry key="CompileNeededForForeachSubsysCompliant">In order to access the parameter ''ForeachIteratorSubsystemCompliant'' in model ''{0}'', you must place the model in the compiled state.</entry>
    <entry key="CompileNeededForForeachSubsysIncompliantBlkList">In order to access the parameter ''ForeachIteratorSubsystemCompliantBlocks'' in model ''{0}'', you must place the model in the compiled state.</entry>
    <entry key="ConcatBusTypesMustBeSame">Invalid connection detected for ''{0}'' at input port {1,number,integer}. Concatenate blocks do not allow mixtures of non-bus signals and bus signals. When creating an array of buses, make all inputs to a Concatenate block nonvirtual buses that have identical signal names and hierarchies.</entry>
    <entry key="ConcatInputPortCurrDimsMismatch">Mismatch of current input port dimensions has been detected in ''{0}''. When concatenating variable-size signals, the current sizes of dimensions other than the concatenate dimension must match for all input ports. This requirement is violated along dimension {1,number,integer} of the {2,number,integer}-th input port because its current size {3,number,integer} is not the same as the current size {4,number,integer} specified by the first input port.</entry>
    <entry key="ConcatInvalidCurrDimsInVectorMode"><![CDATA[Simulink has detected an invalid run-time dimension 0 on the dimension {0,number,integer} from the <sldiag objui="inport" objparam="{1,number,integer}" objname="{2}">input port {1,number,integer}</sldiag> of the block ''{2}'' at time {3}. For vector mode, when an input is a 2-D vector, the dimension that does not become concatenated should be the fixed value of 1.]]></entry>
    <entry key="ConcatInvalidDimsInVectorMode">Invalid dimensions {0} encountered from the input ports of Concatenate block ''{1}''. In vector mode, Concatenate blocks with multiple input signals can accept only scalars, 1-D vectors, and either row-vectors or column-vectors (but not both).</entry>
    <entry key="ConfigSubInvChoice">Block choice ''{0}'' is not a valid member of ''{1}''</entry>
    <entry key="ConfigSubInvPortBlockChoice">Block choice ''{0}'' is a port block and hence an invalid member of ''{1}''</entry>
    <entry key="ConfigSubInvMembers">Cannot set member block list for configurable subsystem instance ''{0}''</entry>
    <entry key="ConfigSubInvSubMember">''{0}'' must not be an enabled or triggered subsystem to be a valid choice</entry>
    <entry key="ConfigSubInvTemplate">Cannot change the template parameter for ''{0}''</entry>
    <entry key="ConfigSubInvUsage">''{0}'' must be placed in a library to be used</entry>
    <entry key="ConfigSubMissingChoice">''{0}'' does not have a block choice</entry>
    <entry key="ConfigSubMissingMember">Member ''{0}'' does not exist in ''{1}''</entry>
    <entry key="ConfigSubOpenMasterError">''{0}'' must be placed in a library to be used</entry>
    <entry key="ConfigSubSaveLibrary">Library must be saved before creating configurable subsystem templates</entry>
    <entry key="ConfigSubVirgin">''{0}'' has not been configured</entry>
    <entry key="ConjComplexHasNoNonZeroBiasSupport">Complex inputs must have non-zero bias in Math Function block ''{0}''</entry>
    <entry key="CoreFactoryNotFound">Cannot find a valid core factory with name ''{0}''.</entry>
    <entry key="DSAccessedByRTWSFunction">Data store diagnostics are being disabled for the block ''{0}'' because its data store is accessed by the block ''{1}'', which is an S-function generated.</entry>
    <entry key="DSMNameNotInDomain">The block ''{0}'' maps the original data store name ''{1}'' to ''{2}''. However, a child of ''{3}'' is attempting to use the same data store using that original data store name.</entry>
    <entry key="DSMNameInvalid">The block ''{0}'' specifies an invalid data store name ''{1}''</entry>
    <entry key="DSMNameNotUnique">The block ''{0}'' specifies the data store name ''{1}'' multiple times</entry>
    <entry key="DSMNameValueMismatch">The block ''{0}'' has {1,number,integer} data store names, but {2,number,integer} data store values</entry>
    <entry key="DSMNameValueUnsupported">The block ''{0}'' cannot specify data store mappings</entry>
    <entry key="DSMValueInvalid">The block ''{0}'' specifies an invalid data store value ''{1}''</entry>
    <entry key="DSMValueNotUnique">The block ''{0}'' specifies the data store value ''{1}'' multiple times</entry>
    <entry key="DSMemoryComplexICWithBooleanSignal">Data Store Memory block ''{0}'' has a complex Initial value yet specifies that its ''Data type'' is boolean. You can resolve this by specifying a non-complex Initial value.</entry>
    <entry key="DSMemoryComplexICWithRealSignal">Data Store Memory block ''{0}'' has a complex Initial value yet specifies that its ''Signal type'' is ''real''. You can resolve this by specifying the ''Signal type'' be ''complex'', or by applying the ''real'' function to the specified Initial value to convert it to a non-complex value, e.g. real(ICValue)</entry>
    <entry key="DSMemoryDimensionsError">Simulink.Signal object ''{0}'' implies a Data Store Memory block for the model ''{1}'', so the property ''Dimensions'' may not be -1</entry>
    <entry key="DSMemoryDimensionsModeError">Simulink.Signal object ''{0}'' implies a Data Store Memory block for the model ''{1}'', so the property ''Dimensions Mode'' cannot be ''Variable dimensions mode''. Data Store Memory block does not support variable dimensions mode</entry>
    <entry key="DSMemoryFramesError">Global Simulink.Signal object ''{0}'' implies a Data Store Memory block for the model ''{1}'', so the property ''SamplingMode'' cannot be set to ''Frame based''</entry>
    <entry key="DSMemoryLoggingBlockAsyncSampleTime">The Data Store Memory block ''{0}'' is set to log but uses asynchronous sample time. No data will be logged for this Data Store Memory block.</entry>
    <entry key="DSMemoryLoggingBlockCustomDType">The Data Store Memory block ''{0}'' is set to log and has data type ''{1}''. Logging is only supported for built-in, fixed-point and enumeration types. No data will be logged for this Data Store Memory block.</entry>
    <entry key="DSMemoryLoggingBlockNoFixedPt">The Data Store Memory block ''{0}'' is set to log and has a fixed point data type. No Fixed-Point Designer license is available. No data will be logged for this Data Store Memory block.</entry>
    <entry key="DSMemoryLoggingDecimateDataInconsistency">The Data Store Memory block ''{0}'' resolves to Simulink.Signal object ''{1}'' and has inconsistent logging information for DecimateData.</entry>
    <entry key="DSMemoryLoggingDecimationInconsistency">The Data Store Memory block ''{0}'' resolves to Simulink.Signal object ''{1}'' and has inconsistent logging information for Decimation.</entry>
    <entry key="DSMemoryLoggingLimitDataInconsistency">The Data Store Memory block ''{0}'' resolves to Simulink.Signal object ''{1}'' and has inconsistent logging information for LimitDataPoints.</entry>
    <entry key="DSMemoryLoggingMaxPointsInconsistency">The Data Store Memory block ''{0}'' resolves to Simulink.Signal object ''{1}'' and has inconsistent logging information for MaxPoints.</entry>
    <entry key="DSMemoryLoggingMdlRefAccel">The global Data Store Memory variable ''{0}'' is accessed directly or indirectly by the referenced model ''{1}'' running in accelerator mode. Logging of global variables is only supported in normal mode. No data will be logged for this variable.</entry>
    <entry key="DSMemoryLoggingNameInconsistency">The Data Store Memory block ''{0}'' resolves to Simulink.Signal object ''{1}'' and has inconsistent logging information for LoggingName. The block uses ''{2}'' and the Signal object uses ''{3}''.</entry>
    <entry key="DSMemoryLoggingNameModeInconsistency">The Data Store Memory block ''{0}'' resolves to Simulink.Signal object ''{1}'' and has inconsistent logging information for NameMode.</entry>
    <entry key="DSMemoryLoggingSimMode">The current model is configured to log Data Store Memory but Data Store Memory logging is only supported in normal mode simulation. No Data Store Memory blocks or global variables will be logged. To eliminate this warning, uncheck the Data Store Memory logging option in the Data Import/Export page of the Configuration Parameters dialog.</entry>
    <entry key="DSMemoryLoggingVariableCustomDType">The Data Store Memory variable ''{0}'' is set to log and has data type ''{1}''. Logging is only supported for built-in, fixed-point and enumeration types. No data will be logged for this Data Store Memory.</entry>
    <entry key="DSMemoryLoggingVariableNoFixedPt">The Data Store Memory variable ''{0}'' is set to log and has a fixed point data type. No Fixed-Point Designer license is available. No data will be logged for this Data Store Memory.</entry>
    <entry key="DSMemoryOwnedByAncestorDynamicComplexity">Global Simulink.Signal object ''{0}'' implies a global Data Store Memory block for the reference model ''{1}'', so the property ''Complexity'' must not be set to ''auto''</entry>
    <entry key="DSMemoryOwnedByAncestorDynamicDataType">Global Simulink.Signal object ''{0}'' implies a global Data Store Memory block for the reference model ''{1}'', so the property ''DataType'' must not be set to ''auto''</entry>
    <entry key="DSRegisteredAfterEvalParams">The block ''{0}'' is registering a data store memory in a routine other than mdlInitializeSizes; this is not permitted</entry>
    <entry key="DTConvComplexToBool">Complex number cannot be converted to boolean in ''{0}''</entry>
    <entry key="DTConvCustomNoStoreInt">The parameter ''ConvertRealWorld'' in ''{0}'' is set to ''Stored integer''. ''Stored integer'' can only be used when both input and output ports are set to MATLAB built-in data types or fixed-point data types. Currently the data types are user-defined</entry>
    <entry key="DTConversionUncessary"><![CDATA[Unnecessary Data Type Conversion ''{0}''.The input and output data types are the same<actions exclusiveFixIts="no"><action type="suppression"></action></actions>]]></entry>
    <entry key="DTConversionComplex2Enum">The input port of block ''{0}'' is complex but output port is of enumeration type. This conversion is invalid.</entry>
    <entry key="DemuxBadBusVectorParam">Invalid vector used in parameter {0} of ''{1}'' to specify port information. The vector must have finite non-zero elements that are positive integers.</entry>
    <entry key="DemuxCannotSplitMatrices">Invalid setting for dimensions of input port of ''{0}''. The Demux cannot be used to split matrices</entry>
    <entry key="DemuxCellOnlyInBusMode">Invalid parameter ''{0}'' specified for ''{1}''. This parameter does not support cell array as input.</entry>
    <entry key="DemuxDimsInfoMismatch1">Invalid setting for dimensions of input port of ''{0}''. The port is being set to have dimensions that correspond to {1,number,integer} multiplexed signals. Not enough information has been specified in the block dialog to determine how these signals should be presented at the output. Try using the cell array format to specify the output port dimensions</entry>
    <entry key="DemuxDimsInfoMismatch2">Invalid setting for dimensions of input port of ''{0}''. This port is being set to have dimensions that correspond to {1,number,integer} multiplexed signals, while the output ports have been set to expect {2,number,integer} multiplexed signals</entry>
    <entry key="DemuxInValidPortWidths">Invalid setting for input port dimensions of ''{0}''. The dimensions are being set to {1}. This is not valid because the total number of input and output elements are not the same</entry>
    <entry key="DemuxMatricesOnlyInBusIn">Invalid dimensions setting for input port of ''{0}''. The dimensions are being set to '{'{1}'}'. This is not allowed because the Demux handles matrices only when it is in Bus Selection Mode.</entry>
    <entry key="DemuxMatricesOnlyInBusOut"><![CDATA[Invalid dimensions setting for <sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">output port {0,number,integer}</sldiag> of ''{1}''. The dimensions are being set to '{'{2}'}'. This is not allowed because the Demux handles matrices only when it is in Bus Selection Mode.]]></entry>
    <entry key="DemuxPortLargerThanOutDims">Invalid setting for input port dimensions of ''{0}''. The dimensions are being set to {1}. This is not valid because the input has fewer elements than the total number of elements ({2,number,integer}) in the output ports</entry>
    <entry key="DemuxSplittingInBusMode">Invalid setting for input port dimensions in ''{0}''. In bus selection mode, the input to the Demux must be a composite signal that was generated by a Bus Creator or Mux.</entry>
    <entry key="DemuxOutputsFcnCallWithGroundSrc"><![CDATA[Code generation is not supported because the signal at <sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">output port {0,number,integer}</sldiag> of the Demux block ''{1}'' is a function-call signal but its input is grounded or unconnected.]]></entry>
    <entry key="DerivJacobian">Derivative block is linearized to zero when Linearization Time is set to Inf. Please consider using a finite number for the Linearization Time parameter.</entry>
    <entry key="DetermismMustBeOffForAsyncTrateTrans">Cannot ensure determinism of data transfer because either the source or destination of rate transition block ''{0}'' is associated with an asynchronous task. Uncheck the rate transition block''s ''Ensure deterministic data transfer'' parameter</entry>
    <entry key="DetermismMustBeOffForExportedTaskTrateTrans">Cannot ensure determinism of data transfer because either the source or destination of rate transition block ''{0}'' is associated with an exported task. Uncheck the rate transition block''s ''Ensure deterministic data transfer'' parameter</entry>
    <entry key="DeterminismMustBeOffForAperiodicRateTrans">
      <![CDATA[Cannot ensure determinism of data transfer because either the source or destination of rate transition block ''{0}'' is associated with an aperiodic partition.
               <actions exclusiveFixIts="yes">
               <action type="fixit" id="Deterministic">
               <cmd>set_param_action(''{0}'', ''Deterministic'',''off'');</cmd>
               <txt>Uncheck the rate transition block''s ''Ensure deterministic data transfer'' parameter.</txt>
               </action>
               </actions>
      ]]>
    </entry>
    <entry key="DIntInvStateInitTrigTs">
      <![CDATA[Discrete-Time Integrator block ''{0}'' requires periodic sample time. If changing sample time is not desirable, do one of the following.
               <actions exclusiveFixIts="yes">
               <action type="fixit">
               <cmd>set_param_action(''{0}'', ''IntegratorMethod'', ''Accumulation: Forward Euler'');</cmd>
               <txt>Set ''Integrator method'' to ''Accumulation: Forward Euler''.</txt>
               </action>
               <action type="fixit">
               <cmd>set_param_action(''{0}'', ''IntegratorMethod'', ''Accumulation: Backward Euler'');</cmd>
               <txt>Set ''Integrator method'' to ''Accumulation: Backward Euler''.</txt>
               </action>
               <action type="fixit">
               <cmd>set_param_action(''{0}'', ''IntegratorMethod'', ''Accumulation: Trapezoidal'');</cmd>
               <txt>Set ''Integrator method'' to ''Accumulation: Trapezoidal''.</txt>
               </action>
               <action type="fixit">
               <cmd>set_param_action(''{0}'', ''InitialConditionSetting'', ''Output'');</cmd>
               <txt>If the source of the triggered sample time is a periodic sample time, you may set ''Initial condition setting'' to ''Output''.</txt>
               </action>
               </actions>
      ]]>
    </entry>
    <entry key="DIntInvStateInitTrigTsInExpFcnMdl">Discrete-Time Integrator block ''{0}'' requires periodic sample time because parameter 'Initial condition setting' is set to 'State (most efficient)' and parameter 'Integration method' is not an accumulation method. In an export function model, place the integrator block in a function-call subsystem that is driven directly by a function-call root-level Inport block. Set 'Sample time type' of the trigger port block of the subsystem block to 'periodic' and specify a periodic sample-time for the root-level Inport block.</entry>
    <entry key="DirectLookupNdBlockIndexOutOfRangeErrorMsg">In block ''{0}'', input exceeds table dimensions</entry>
    <entry key="EnforceDirectLookupNdBlockIndexOutOfRangeErrorMsg">In block ''{0}'', input exceeds table dimensions. Either clear  the 'Assume input is within range' parameter or limit input to be within the range of the table dimensions.</entry>
    <entry key="DirectLookupNdBlockIndexOutOfRangeWarnMsg">In block ''{0}'',  input exceeds table dimensions. Clamping input and continuing</entry>
    <entry key="DirectLookupNdBlockNumOfIndexOutOfRangeWarnMsg">In block ''{0}'',  input exceeded table dimensions for {1,number,integer} number of times</entry>
    <entry key="DirectLookupNdIndexInputsSpecMsg">In block ''{0}'', index input ports must be non-frame, non-complex signals with a built-in data type: double, single, int8, uint8, int16, uint16, int32, uint32, boolean, or a fixed-point data type with bias equal to 0, fractional length equal to 0, slope equal to 1.0, and word length less than or equal to 65535.</entry>
    <entry key="DirectLookupNdInputDimensionsCannotBeDeterminedMsg">In block ''{0}'', insufficient dimension information to determine input port dimensions. Recommendation: specify input port dimensions using upstream blocks</entry>
    <entry key="DirectLookupNdInputDimensionsMutuallyIncompatibleMsg">For block ''{0}'', input port dimensions must follow scalar expansion rules: non-scalar port dimensions must all be identical</entry>
    <entry key="DirectLookupNdNumInputsInvMsg">In block ''{0}'', specified output dimensions exceeds table dimensions. Choose output shape (dimensions) up to 2-D and equal to or less than table dimensions</entry>
    <entry key="DirectLookupNdOutputPortDimsIncompatibleMsg">Output port not compatible with specified input dimensions in block ''{0}''</entry>
    <entry key="DirectLookupNdOutputTypeMustMatchTableMsg">In block ''{0}'', output port data type must match table parameter data type</entry>
    <entry key="DirectLookupNdInvIndexPortType">In block ''{0}'', the index port data type must be one of the following: ''boolean'', ''uint8'', ''uint16'', ''uint32'', ''int8'', ''int16'', ''int32'', ''single'', ''double'', or ''fixed-point''. Fixed-point data type must have bias equal to 0, slope equal to 1.0, fractional length equal to 0, and word length less than or equal to 65535.</entry>
    <entry key="DirectLookupNdOutputTypeMustMatchTablePortMsg">In block ''{0}'', output port data type must match table input port data type (marked ''T'')</entry>
    <entry key="DirectLookupNdTableDimsMustMatchExplicitMsg">For block ''{0}'', number of dimensions in ''Table data'' must match the explicit number specified, or be a row or column matrix for 1-D table data</entry>
    <entry key="DirectLookupNdTableInOutComplexityMatchMsg">In block ''{0}'', output port complexity must match table input port complexity (marked ''T'')</entry>
    <entry key="DirectLookupNdTableOutComplexityMatchMsg">In block ''{0}'', output port must match complexity of table</entry>
    <entry key="DirectLookupNdTablePortDimensionMustBeSpecMsg">In block ''{0}'', table port dimensions must be specified, they cannot be back-inherited. Recommendation: specify table port dimensions using upstream blocks</entry>
    <entry key="DirectLookupNdUnsupportedDataTypeInTableMsg">Unsupported data type in table parameter for block ''{0}''</entry>
    <entry key="DirectLookupNdTableDimSizeOutOfRange">In block ''{0}'', number of table elements is larger than maximum limit of ''{1, number, integer}'' for the integer size configured in the Hardware Implementation settings of the model.</entry>
    <entry key="DisallowTuning">In ''{0}'', you cannot tune the leading filter coefficient from a nonzero value to zero or vice versa while a simulation is running, because this changes the direct feedthrough status of the block</entry>
    <entry key="DiscIntegratorWeightNonPositive">Value of the parameter {0} of Discrete Integrator {1} must be positive</entry>
    <entry key="DiscIntegratorSaturPortDataTypeConflict">In Discrete-time Integrator block ''{0}'', Saturation port data type ''{1}'' conflicts with Output port data type ''{2}''. Saturation port must have the same data type as output when input and output have the same floating-point data type (double or single).</entry>
    <entry key="DiscInvDisagreeInternalRuleDType">Data type propagation for the Discrete-time Integrator block ''{0}'' resulted in an error, caused by violating one of the following requirements: (1) The data type of the first output, state, and external initial condition must be the same. (2) The data type of saturation output must be double, single or int8. (3) Saturation port must have the same data type as output when input and output have the same floating-point data type (double or single).</entry>
    <entry key="DiscNonSupportSaturPortType">A data type propagation error occurs in the Discrete-time Integrator block ''{0}''. The data type of the Saturation port must be double, single, or int8. This is because the Saturation port needs to represent three output values: 1.0, 0.0, and -1.0</entry>
    <entry key="DiscreteFirAllDataTypeMustBeSigned">The accumulator, product output, and output data types of ''{0}'' must be signed if the input data type or the coefficient data type is signed.</entry>
    <entry key="DiscreteFirAllDataTypeMustBeUnsigned">The accumulator, product output, and output data types of ''{0}'' must be unsigned if both the input data type and coefficient data type are unsigned.</entry>
    <entry key="AllpoleAllDataTypeMustBeSigned">The coefficients, accumulator, product output, and output data types of ''{0}'' must be signed.</entry>
    <entry key="DiscreteFirAllInputPortsMustHaveSameDataType">The input and the coefficients of ''{0}''must have the same data type.</entry>
    <entry key="DiscreteFirBinaryScalingOnly">''{0}'' supports binary point-only scaling. For all fixed-point data types, the slope must be a power of two and the bias must be zero.</entry>
    <entry key="DiscreteFirHomogeneousDataType">The data types used with ''{0}''must either be all double-precision, all single-precision, or all fixed point.</entry>
    <entry key="DiscreteFirInitialValueMustBeReal">For any direct form filter structure, the ''Initial states'' parameter of ''{0}'' must be real when the input is real.</entry>
    <entry key="DiscreteFirInitialValueMustBeScalarOrMatrix">The ''Initial states'' parameter of ''{0}''must either be a scalar or a matrix with the same number of dimensions as the number of filter states.</entry>
    <entry key="DiscreteFirMatrixInputNotAllowed">Matrix inputs are not supported on the coefficient (Num) port of ''{0}''.</entry>
    <entry key="DiscreteFirStateWriteNonFloatInput">Input to block ''{0}'' is not floating-point. Only floating-point inputs are supported by state Writer/Reader blocks when used with Discrete FIR Filter.</entry>
    <entry key="DiscreteIIRBaseJacobianNotSupported">Linearization of this block is only supported for real-valued scalar inputs, real-valued filter coefficients, dialog-specified parameters, and sample-based processing.</entry>
    <entry key="DiscreteFirBaseJacobianNotSupported">Linearization of this block is only supported for real-valued scalar inputs, real-valued filter coefficients, dialog-specified parameters, and sample-based processing.</entry>
    <entry key="DisplaySINeedsNumericDType">Block ''{0}'' can only display stored integer values for signals of numeric data types.</entry>
    <entry key="DisplaySINeedsNumericOrDateTimeDType">Block ''{0}'' can only display stored integer values for signals of numeric or DateTime data types.</entry>
    <entry key="WarnEventNameCollision">Detect event name collision</entry>
    <entry key="WarnEventNameCollisionInfo">Event ''{0}'' has been defined as ''{1}'' Function, \nso it can not be redefined as ''{2}'' Function.</entry>
    <entry key="DetectEventNameCollision">
      <![CDATA[Event ''{0}'' is defined as 'Reinitialize' in block ''{1}''. But it is also defined as 'Reset' in block ''{2}'', which is not allowed.
               <actions exclusiveFixIts="yes">
               <action type="fixit" id="KeepOn">
               <cmd>set_param_action(''{2}'', ''EventType'',''Reinitialize'');</cmd>
               <txt>Change the event type for block ''{2}'' to 'Reinitialize'.</txt>
               </action>
               <action type="fixit" id="KeepOff">
               <cmd>set_param_action(''{1}'', ''EventType'',''Reset'');</cmd>
               <txt>Change the event type for block ''{1}'' to 'Reset'.</txt>
               </action>
               </actions>
      ]]>
    </entry>

    <entry key="EventListenerBlockCannotBeAddedAtTopLevel">The Event listener block is being added to the top level of the model ''{0}''. This is not allowed.</entry>
    <entry key="EventListenerCannotBeAddedToSSHavingEventListenerBlock">The Subsystem ''{0}'' already contains an Event listener block. Another Event listener block cannot be added to such a subsystem.</entry>
    <entry key="EventListenerCannotBeAddedToSSHavingControlPorts">Event Listener block is being added to subsystem ''{0}''. Event Listener blocks can only be added to subsystems which do not already contain control port blocks like Enable or Trigger port blocks.</entry>
    <entry key="EventListenerInSSWithControlPorts">Event Listener block is within the subsystem ''{0}'' which contains a control port block. Event Listener blocks can only be added to subsystems which do not already contain control port blocks like Enable orTrigger port blocks.</entry>
    <entry key="DuplicateDomainConfiguratorBlocks">''{0}'' already contains a domain configuration block. Another domain configuration block cannot be added.</entry>
    <entry key="AdditionOfSSHavingEventListenerToGraphHavingEventListener">An Initialize, Reset, or Terminate Function block is being added within the Initialize, Reset, or Terminate Function block ''{0}''. This is not allowed.</entry>
    <entry key="FilterCoefMustBeRowVector">Filter coefficients in ''{0}'' must be a row vector.</entry>
    <entry key="FilterCoefMustBeRowVectorWarn">The input filter coefficients to ''{0}'' must be a row vector. You can transpose your filter coefficients into a row vector by using a Reshape block. To automatically place a Reshape block in your model, run the Upgrade Advisor.</entry>
    <entry key="FilterCirularFixedPointSpecNotAllowed">When the product output data type of ''{0}'' is set to 'Inherit: Inherit via internal rule', the output data type must be specified explicitly or set to 'Inherit: Same as input'.</entry>
    <entry key="varSizeChannelsNotSupported">When the input to ''{0}'' is a variable-sized signal, the number of input channels must remain fixed.</entry>
    <entry key="IIRFilterCirularFixedPointSpecNotAllowed">When the denominator product output data type of ''{0}'' is set to 'Inherit: Inherit via internal rule', the output data type must be specified explicitly or set to 'Inherit: Same as input'.</entry>
    <entry key="DiscreteFirOnlySignedDataTypeAllowed">Only signed data types are allowed when ''{0}''performs complex arithmetic.</entry>
    <entry key="DiscreteFirOutputDataTypeMismatch">The data type on the output port of ''{0}''does not match the ''Output data type'' parameter on the block dialog.</entry>
    <entry key="DiscreteFirSIMONotAllowed">Single-input/multiple-output (SIMO) mode is only supported by the direct form and direct form transposed filter structures of ''{0}''.</entry>
    <entry key="DiscreteFirScalarCoefNotAllowed">The direct form symmetric and direct form antisymmetric filter structures of ''{0}''only support coefficient lengths longer than 1.</entry>
    <entry key="DiscreteFirStateDataTypeMustBeSigned">The state data type of ''{0}''must be signed.</entry>
    <entry key="DiscreteFirStateDataTypeMustBeUnsigned">The state data type of ''{0}''must be unsigned.</entry>
    <entry key="DiscreteFirTapSumDataTypeMustBeSigned">The tap sum data type of ''{0}''must be signed.</entry>
    <entry key="DiscreteFirTapSumDataTypeMustBeUnsigned">The tap sum data type of ''{0}''must be unsigned.</entry>
    <entry key="FIRFilterBlockType" translate="false" note="TranslateFalseBatch;">Discrete FIR Filter</entry>
    <entry key="IIRFilterBlockType" translate="false" note="TranslateFalseBatch;">Discrete Filter</entry>
    <entry key="AllpoleFilterBlockType" translate="false" note="TranslateFalseBatch;">Allpole Filter</entry>
    <entry key="DTFBlockType" translate="false" note="TranslateFalseBatch;">Discrete Transfer Fcn</entry>
    <entry key="DivideByZero"><![CDATA[Division by zero in ''{0}''<actions exclusiveFixIts="no"><action type="suppression"></action></actions>]]></entry>
    <entry key="DivideZeroByZero">Zero divided by zero in ''{0}''</entry>
    <entry key="DomainTypeStrExists">Cannot register domain ''{0}'' in module ''{1}''. This domain was previously registered in module ''{2}''.</entry>
    <entry key="DotProductInvalidInputPortComplexity">The output of block ''{0}'' is REAL, but one or more inputs is COMPLEX</entry>
    <entry key="DotProductInvalidOutputPortComplexity">The output of block ''{0}'' is COMPLEX, but both inputs are REAL</entry>
    <entry key="DtypeDuplicateInvInputPorts">The specified number of input ports must be finite and positive in block ''{0}''</entry>
    <entry key="DtypeDuplicateInvBusInputs">Block ''{0}'' requires all its input ports to have the same bus type. Input port {1,number,integer} of this block expects a nonvirtual bus, while input port {2,number,integer} expects a non-bus or virtual bus signal.</entry>
    <entry key="DupBlockName">The name ''{0}'' already exists in ''{1}''. Note: line breaks and spaces are equivalent in names</entry>
    <entry key="DupDataLogFileName1">Duplicate data logging file name ''{0}'' specified in ''{1}''.</entry>
    <entry key="DupDataLogFileName2">Duplicate data logging file ''{0}''. The file name parameters specified in ''{1}'' and ''{2}'' resolve to the same file. File names must resolve to different files.</entry>
    <entry key="DupDataLogFileName3">'Log Dataset data to file' file name ''{0}' is a duplicate of a file name already specified by a To File block in the model hierarchy. The file for the To File block could be in a low-level subfolder, possibly using the UNIX soft link mechanism.</entry>
    <entry key="DupGotoTagVisBlockFound0">Duplicate goto tag visibility scopes named ''{0}'' found</entry>
    <entry key="DupGotoTagVisBlockFound1">First reference is in ''{0}''</entry>
    <entry key="DupGotoTagVisBlockFound2">Second reference is in ''{0}''</entry>
    <entry key="DupToFileFromFileFileName">Duplicate data logging and loading file ''{0}''. The file name parameters specified in ''{1}'' and ''{2}'' resolve to the same file. The same simulation cannot write to and read from the same file.</entry>
    <entry key="EmptyName" note="stringDatatypeUpdate">You cannot set the name of ''{0}'' to an empty character vector</entry>
    <entry key="EmptyRTWFcnName">The ''Function name'' field in ''{0}'' is empty and cannot be used as the function name. Enter a non-empty and valid function name.</entry>
    <entry key="EmptyRTWFileName">The ''File name'' field in ''{0}'' is empty and cannot be used as the file name. Enter a non-empty and valid file name.</entry>
    <entry key="EnablePortExists">An enable port already exists in subsystem ''{0}''. Addition of a second enable port is not allowed.</entry>
    <entry key="ErrBdMuxBlksUsedAsBusCreator">The block diagram ''{0}'' improperly uses {1,number,integer} Mux blocks as Bus Creators. The following list identifies up to 10 of the improperly used Mux blocks.</entry>
    <entry key="ExceedDisplayBlockLimit">Block ''{0}'' shows truncated signal data. The Display block can show up to 200 elements of vector or matrix signals.</entry>
    <entry key="ExpResultUndefined">Result of exp is undefined for NaN input in ''{0}''.</entry>
    <entry key="ExpResultSaturates">Result of exp saturates to infinity in ''{0}''.</entry>    
    <entry key="FXP_1BitSigned">Invalid setting for data type in ''{0}'': Signed 1-bit data types are not supported</entry>
    <entry key="FXP_AutoSign">Invalid setting for data type in ''{0}'': ''Signedness'' field of the MATLAB structure describing the data type must specify a ''Signed'' or ''Unsigned'' data type.</entry>
    <entry key="FXP_DlgParamNotRealVect">Invalid setting for parameter in ''{0}'': Dialog parameter must be a real vector</entry>
    <entry key="FXP_DlgParamNumElt">Invalid setting for parameter in ''{0}'': Dialog parameter specifies the wrong number of elements</entry>
    <entry key="FXP_MantissaGt0">Invalid setting for data type in ''{0}'': Mantissa bits must be greater than or equal to 1 and less than or equal to {1,number,integer}</entry>
    <entry key="FXP_MantissaNotEmpty">Invalid setting for data type in ''{0}'': ''MantBits'' field of the MATLAB structure describing the data type must specify a value greater than zero using a ''double'' data type</entry>
    <entry key="FXP_NotRecognizedType">Invalid setting for data type in ''{0}'': The specified data type cannot be recognized</entry>
    <entry key="FXP_SignedDoubleNotEmpty">Invalid setting for data type in ''{0}'': ''IsSigned'' field of the MATLAB structure describing the data type must specify a nonempty array of data type ''double''</entry>
    <entry key="FXP_SlopeInf">Invalid setting for data type in ''{0}'': Slope cannot be ''Inf''</entry>
    <entry key="FXP_SlopeNaN">Invalid setting for data type in ''{0}'': Slope cannot be ''NaN''</entry>
    <entry key="FXP_SlopeNormalized"><![CDATA[Invalid setting for data type in ''{0}'': Fractional Slope  (fSlope) must be normalized such that 1 <= fSlope < 2]]></entry>
    <entry key="FXP_UnsupportedType">Invalid setting for data type in ''{0}'': Only numeric data types are supported</entry>
    <entry key="FactoryStrExists">Cannot register factory ''{0}'' in module ''{1}''. This domain was previously registered in module ''{2}''.</entry>
    <entry key="FcnBlkIndexErr">The expression: {0}\nin ''{1}''\nhas a subscript that is out of range</entry>
    <entry key="FcnBlkMatchErr">Error while parsing expression: {0}\nin ''{1}''\ntoken "{2}" was found, whereas "{3}" was expected</entry>
    <entry key="FcnBlkOnlyDblAndSgl">Cannot set data type of port {0,number,integer} of ''{1}'' to {2}. The data type must be double or single</entry>
    <entry key="FcnBlkSyntaxErr">The expression: {0}\nin ''{1}''\nhas a syntax error</entry>
    <entry key="FcnBlkUIdxMustBeNum">Input ("u") index must be a positive integer in the expression: {0}\nin ''{1}''\nwhen used for code generation</entry>
    <entry key="FcnCallSplitInvalidNumOutputs">Invalid Number of outputs (''{0}''). This value must be an integer greater than or equal to 2</entry>
    <entry key="FcnInputWidthErr">Error in expression for ''{0}'', an input index exceeds its input width of {1,number,integer}</entry>
    <entry key="FindIncompatibleOutputSize"><![CDATA[Simulink cannot set the size of <sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">output port {0,number,integer}</sldiag> of block ''{1}''. Output ports of  the FIND block only accept one-dimensional sizes.]]></entry>
    <entry key="FindInvalidNumPorts">The number of output ports of ''{0}'' must be greater than zero.</entry>
    <entry key="FindIxPortNumberMismatch">The number of input dimensions of ''{0}'' is set to {1,number,integer}, however, the input signal has {2,number,integer} dimensions. Correct the parameter specifying the number of input dimensions.</entry>
    <entry key="FindJacobian">The Jacobian of the Find block is only defined if the input signal contains no zeros. If the input signal contains zeros, the output dimensions change and the Jacobian becomes ill-defined.</entry>
    <entry key="FindWrongFixptType">An invalid data type has been specified for the output port of block ''{0}''. This block supports built-in data types and fixed-point data types which have bias equal to zero and unitary slope.</entry>
    <entry key="FixPointSignalsWithNonZeroBias">''{0}'' does not support signals with a nonzero bias</entry>
    <entry key="FixptReciprocalHasNoComplexSupport">No complex fixed point support currently for Reciprocal in Math Function block ''{0}''</entry>
    <entry key="FixptSqrtHasNoComplexSupport">No fixed point support currently for complex inputs for sqrt in Math Function block ''{0}''</entry>
    <entry key="ForInvalidNumItersParamWithOutputPortOn">The For Iterator block is configured to output iteration variable of type {0} in {1,number,integer}-based index mode. Under this configuration, the parameter ''{2}'' of the For Iterator block must evaluate to an integer within the range from {3} to {4}.</entry>
    <entry key="ForInvalidNumItersParamWithOutputPortOff">The For Iterator block is configured to operate in {0,number,integer}-based index mode. Under this configuration, the parameter ''{1}'' of the For Iterator block must evaluate to an integer within the range from {2} to {3}.</entry>
    <entry key="ForInvalidPortInputNumItersWithOutputPortOn">The For Iterator block is configured to output iteration variable of type {0} in {1,number,integer}-based index mode. Under this configuration, the input value at port {2,number,integer} of the For Iterator block must evaluate to an integer within the range from {3} to {4}. Therefore, Simulink truncates the input value {5} to {6} at time {7}.</entry>
    <entry key="ForInvalidPortInputNumItersWithOutputPortOff">The For Iterator block is configured to operate in {0,number,integer}-based index mode. Under this configuration, the input value at port {1,number,integer} of the For Iterator block must evaluate to an integer within the range from {2} to {3}. Therefore, Simulink truncates the input value {4} to {5} at time {6}.</entry>
    <entry key="ForInvalidExternalIncrement">An invalid value for the next iteration variable has been passed in to the For Iterator block ''{0}''. The double value {1} must evaluate to an integer within 32-bit signed integer range.</entry>
    <entry key="FormatedBadSignalComplexityForUpperLowerLimit">Invalid signal complexity in ''{0}''. ''{1}'' cannot be complex. It only accepts real data</entry>
    <entry key="FractionOutOfBounds"><![CDATA[Fraction is less than 0.0 or greater than 1.0 for <sldiag objui="inport" objparam="{0}" objname="{2}">input port {0}</sldiag>{1,number,integer} of block ''{2}''.]]></entry>
    <entry key="FractionOutOfBoundsFromBus"><![CDATA[Fraction is less than 0.0 or greater than 1.0 for the second signal in the bus object propagated to the <sldiag objui="inport" objparam="{0}" objname="{2}">input port {0}</sldiag>{1,number,integer} of block ''{2}''.]]></entry>
    <entry key="EnforceFractionOutOfBounds"><![CDATA[Fraction is less than 0.0 or greater than 1.0 for <sldiag objui="inport" objparam="{0}" objname="{2}">input port {0}</sldiag>{1,number,integer} of block ''{2}''. Either clear  the 'Assume index is within range' parameter or limit input to be within the range of the table dimensions.]]></entry>
    <entry key="EnforceFractionOutOfBoundsFromBus"><![CDATA[Fraction is less than 0.0 or greater than 1.0 for the second signal in the bus object propagated to the <sldiag objui="inport" objparam="{0}" objname="{2}">input port {0}</sldiag>{1,number,integer} of block ''{2}''. Either clear  the 'Assume index is within range' parameter or limit input to be within the range of the table dimensions.]]></entry>
    <entry key="FromFileBlkErr">Error in ''{0}''</entry>
    <entry key="FromFileNoLinearInterpolationForEnum">Enumerated data encountered in file ''{0}''. Linear interpolation or extrapolation is not supported for enumerated data. Change any interpolation or extrapolation settings to a value other than ''{1}'' or ''{2}''</entry>
    <entry key="FromFileInvEnumType">Data type ''{0}'' in MAT-file ''{1}'' is incompatible with the enumerated data type specified in MATLAB. Either the MAT-file data contain enumerated names that do not exist in the current class definition or at least one enumerated value does not match the corresponding value in the current class definition. Use the load(''{2}'') command, update the data to match the current class definition, and resave the MAT-file.</entry>
    <entry key="FromFileInvTimeVectorFull">Error in ''{0}''. Time values in file ''{1}'' must be monotonically non-decreasing</entry>
    <entry key="FromFileOpenErr">Error opening file "{0}" in ''{1}'': The specified file is not a valid MAT file. Only MAT files are currently supported</entry>
    <entry key="FromwksDimsModeMismatch1">The port dimension mode set for block ''{0}'' is invalid. The output port of ''{1}'' is set for a fixed-size signal, whereas the workspace data has a variable-size signal.</entry>
    <entry key="FromwksInvalidRtpForRAccel">Unsupported data specified using ''Data'' parameter of From Workspace block ''{0}''. For rapid accelerator simulation, the From Workspace block supports loading only data that has a built-in numeric data type other than half.</entry>
    <entry key="FromwksInvalidRtpInRsim">Unsupported data specified using ''Data'' parameter of From Workspace block ''{0}''. When generating code for RSIM target, the From Workspace block supports loading only data that has a built-in numeric data type other than half.</entry>
    <entry key="FromwksRAccelInterpolate64Bit">From Workspace block does not support linear interpolation of int64 or uint64 data in rapid accelerator simulation, but From Workspace block "{0}" is configured to load and linearly interpolate int64 or uint64 data.
      <![CDATA[
        <actions exclusiveFixIts="yes">
          <action type="fixit" id="ClearInterpolateFix">
            <cmd>set_param(''{0}'',''Interpolate'',''off'')</cmd>
            <txt>Clear the "Interpolate data" parameter of From Workspace block "{0}". </txt>
          </action>
          <action type="suggestion" id="ChangeSimModeFix">
            <txt>Simulate the model using normal or accelerator mode instead.</txt>
          </action>
          <action type="suggestion" id="ChangeDataTypeFix">
            <txt>Configure From Workspace block "{0}" to load data using a built-in numeric data type other than int64, uint64, or half.</txt>
          </action>
        </actions> 
      ]]>
    </entry>
    <entry key="FromwksRAccelInterpolate64BitWithExtrapolation">From Workspace block does not support linear interpolation or extrapolation of int64 or uint64 data in rapid accelerator simulation, but From Workspace block "{0}" is configured to load and linearly interpolate and extrapolate int64 or uint64 data.
      <![CDATA[
        <actions exclusiveFixIts="yes">
          <action type="fixit" id="ClearInterpolateFix" retvalue="false">
            <cmd>set_param(''{0}'',''Interpolate'',''off'', ''OutputAfterFinalValue'',''__ARG1__'')</cmd>
            <cargs>
              <carg translate="false" name="__ARG1__" type="menu">
                <txt_prompt>OutputAfterFinalValue</txt_prompt>
                <enum>{1_CMsgID}</enum>
                <enum>{2_CMsgID}</enum>
                <enum>{3_CMsgID}</enum>
              </carg>
            </cargs>
            <txt>Configure From Workspace block "{0}" to disable linear interpolation and to produce output values after the final value in the external input data using an option other than extrapolation.</txt>
          </action>
          <action type="suggestion" id="ChangeSimModeFix">
            <txt>Simulate the model using normal or accelerator mode instead.</txt>
          </action>
          <action type="suggestion" id="ChangeDataTypeFix">
            <txt>Configure From Workspace block "{0}" to load data using a built-in numeric data type other than int64, uint64, or half.</txt>
          </action>
        </actions> 
      ]]>
    </entry>
    <entry key="FromwksModelRefAccelInterpolate64Bit" context="error" note="0=From Workspace Block Path, 1=Name of Model containing From Workspace block">Unable to load data as specified in block "{0}" because the From Workspace block does not support linear interpolation of int64 or uint64 data for code generation or model references that simulate in a mode other than normal.
      <![CDATA[
        <actions exclusiveFixIts="yes">
          <action type="fixit" id="ClearInterpolateFix">
            <cmd>set_param(''{0}'',''Interpolate'',''off'')</cmd>
            <txt>Clear the "Interpolate data" parameter of From Workspace block "{0}". </txt>
          </action>
          <action type="suggestion" id="ChangeSimModeFix">
            <txt>Configure the top model and all Model blocks that directly or indirectly reference model "{1}" to use normal mode.</txt>
          </action>
          <action type="suggestion" id="ChangeDataTypeFix">
            <txt>Configure From Workspace block "{0}" to load data using a built-in numeric data type other than int64, uint64, or half.</txt>
          </action>
        </actions> 
      ]]>
    </entry>
    <entry key="FromwksOnlyDiscSampleTime1">Invalid continuous sample time propagated to ''{0}''. It cannot have a continuous sample time when the input from workspace is a structure with no time data</entry>
    <entry key="FromwksOnlyDiscSampleTime2">Invalid continuous sample time propagated to ''{0}''. It cannot have a continuous sample time when the option to repeat data cyclically is chosen</entry>
    <entry key="FxpPointInvalidFSlopeSpec"><![CDATA[Invalid fixed-point data type specified in ''{0}''. The slope value must be normalized 1 <= Fslope < 2]]></entry>
    <entry key="FxpPointMantBitsTooHighSpec">Invalid fixed-point data type specified in ''{0}''. The number of mantissa bits is too high</entry>
    <entry key="FxpPointSignedOneMantBitsSpec">Invalid fixed-point data type specified in ''{0}''. For 1 bit numbers, the Unsigned case is supported, but the Signed case is not</entry>
    <entry key="GotoBlockWaitbar">Please wait...</entry>
    <entry key="GotoTagVisBlockNotFound">Tag visibility for ''{0}'' not found</entry>
    <entry key="GroundNoBus">Invalid use of ''{0}'' to ground bus line with dimensions '{'{1}'}'. Grounds cannot be used on bus lines.</entry>
    <entry key="HandleIsNotValid">One of the handles being set in the IOSignals parameter for ''{0}'' is not a valid port object, model reference, or Stateflow chart.</entry>
    <entry key="HardZeroSmallSignalGain">''{0}'' linearizes to a gain of zero</entry>
    <entry key="HiddenBlockBusExpanPropnErrorBO">This block is added to lock down the specification of individual bus elements as defined by the bus object ''{0}'' and specified in the ''Data type'' parameter of ''{1}''.</entry>
    <entry key="HiddenBlockBusExpanPropnErrorInherit">This block is added to lock down the specification as defined by the parameters of ''{0}'' for individual elements in the input bus signal.</entry>
    <entry key="HiddenBlockDebugMsg">Consider manually inserting such a block to debug the problem.</entry>
    <entry key="HiddenBlockIndirectlyRelatedError">This error message is indirectly related to a hidden {0} block.</entry>
    <entry key="HiddenBlockOptimizationMsg">This block is added for block ''{0}'' as result of block insertion or expansion</entry>
    <entry key="HiddenBlockParamMsg">The hidden block''s parameter ''{0}'' is set to ''{1}''</entry>
    <entry key="HiddenBlockPortOptimizationMsg">This block is added for block ''{0}'' at {1} as result of block insertion or expansion</entry>
    <entry key="HiddenBlockRelatedError">This message is related to a hidden {0} block.</entry>
    <entry key="HiddenBlockSigobjPropnError"><![CDATA[This block is added for signal object ''{0}'', which is resolved from block ''{1}'' <sldiag objui="outport" objparam="{2,number,integer}" objname="{1}">output port {2,number,integer}</sldiag>. Consider changing the signal object property or block setting to resolve this conflict.]]></entry>
    <entry key="HiddenOutportBlockSigobjPropnError">This block is added for signal object ''{0}'', which is resolved from Outport block ''{1}''. Consider changing the signal object property to resolve this conflict.</entry>
    <entry key="HideContents">Contents of masked subsystem ''{0}'' are hidden and cannot be viewed</entry>
    <entry key="ICOutsideOfBlkLimits">Initial condition is outside of the limits in ''{0}''</entry>
    <entry key="IfBlkDimsPropErr"><![CDATA[Invalid dimensions specified for <sldiag objui="inport" objparam="{0,number,integer}" objname="{1}">input port {0,number,integer}</sldiag> of ''{1}''. While the dimensions specify that the width of this port is {2,number,integer}, one of the if/elseif conditions is accessing element {3,number,integer} from this port]]></entry>
    <entry key="IfBlkIncompatExpressions">Symbol for input ''u{0,number,integer}'' used in incompatible expressions in ''{1}''. One of the expressions is using this input symbol without specifying an index. Such a usage assumes that the input is of width 1. Whereas, another expression is accessing element ''{2,number,integer}'' of this input</entry>
    <entry key="IfBlkIndexErr">The expression ''{0}'' in ''{1}'' has a subscript that is out of range</entry>
    <entry key="IfBlkScalarBooleanOutput">The expression ''{0}'' in ''{1}'' must produce a scalar output. This requirement might be violated when input signals or parameters, which are referenced in ''{2}'', are not scalars. </entry>
    <entry key="IfBlockInvalidIndex">The input ''{0}'' used in the expression ''{1}'' for block ''{2}'' has a subscript that is out of range</entry>
    <entry key="IfBlockInvalidParamDataType">The parameter ''{0}'' used in the expression ''{1}'' for block ''{2}'' is not compliant. If block only accepts boolean, built-in numeric, and enumerated data types. </entry>
    <entry key="IfBlockInvalidParam">Unrecognized symbol ''{0}'' is used in the expression ''{1}'' for block ''{2}''. If it is a parameter, please make sure it is defined. If it is a function, please see the block documentation page for a list of supported functions.</entry>
    <entry key="IfBlockInvalidInportLabel">The new input port label ''{0}'' for block ''{1}'' is invalid. </entry>
    <entry key="IfBlockInportLabelSameAsWSVar">The new input port label ''{0}'' for block ''{1}'' is invalid because the label is the same as that of an existing workspace variable. </entry>
     <entry key="IfBlockInportLabelInUse">The label ''{0}'' is already used by another input port. </entry>
    <entry key="IfBlockUnusedInputPort">The input port {0,number,integer} for block ''{1}'' is not referenced in any of if/elseif conditions. </entry>
    <entry key="IfBlockInputPortDataTypeErr">The input port {0,number,integer} for block ''{1}'' has conflict settings. ''{2}'' is compared to data with different type ''{3}'' and ''{4}'', which is not allowed. </entry>
    <entry key="IfBlkInvalidElseIfExpr" note="stringDatatypeUpdate">Invalid parameter ''{0}'' specified for ''{1}''. The parameter must be a comma-separated list of character vectors with as many character vectors as elseif expressions. Furthermore, each character vector must be non-empty and must contain at least one non-whitespace character</entry>
    <entry key="IfBlkMatchErr">Error while parsing expression ''{0}'' in ''{1}''. Token "{2}" was found, whereas "{3}" was expected</entry>
    <entry key="IfBlkSyntaxErr">The expression ''{0}'' in ''{1}'' has a syntax error</entry>
    <entry key="IfBlkParserErr">Cannot evaluate expression ''{0}'' in ''{1}'' because: \n''{2}''</entry>
    <entry key="IfBlkTooManyInputs">Invalid parameter ''{0}'' specified for ''{1}''. It accepts at most {2,number,integer} inputs</entry>
    <entry key="IfBlkUIdxMustBeNum">Input symbol index must be a positive integer in the expression ''{0}'' in ''{1}''</entry>
    <entry key="IfBlkUIdxTooBig">Invalid expression ''{0}'' specified for ''{1}''. The expression uses input specifier ''{2}'', even though it has {3,number,integer} inputs</entry>
    <entry key="IfConvertBetweenFcnFailed">Failed to convert the input data type to double in ''{0}''</entry>
    <entry key="IfNoConvertBetweenFcn">Invalid data type specified for input ports of ''{0}''. The data type should have a ConvertBetween function registered which specifies how the data type should be converted to a double data type</entry>
    <entry key="IfNoLogOpsForNums">Invalid use of numbers in logical operators in expression ''{0}'' of ''{1}''. Only boolean-valued numbers are permitted to be operands in logical expressions</entry>
    <entry key="IfNoLogOpsForOnlyNums">Invalid use of numbers in logical operators in expression ''{0}'' of ''{1}''. At least one of the operands must reference an input signal (i.e., u1, u2, ...)</entry>
    <entry key="IfNoRelopsForBoolean">Invalid use of relational operators with a boolean input signal in expression ''{0}'' of ''{1}''</entry>
    <entry key="IfNoRelopsForOnlyNums">Invalid use of relational operators in expression ''{0}'' of ''{1}''. At least one of the operands must reference an input signal (i.e., u1, u2, ...)</entry>
    <entry key="IfNumericOverflow">Overflow condition during the conversion of the number ''{0}'' in expression ''{1}'' of ''{2}'' from data type ''double'' to ''{3}''</entry>
    <entry key="IfNumericPrecisionLoss">Loss of precision occurred during the conversion of the number ''{0}'' in expression ''{1}'' of ''{2}'' from data type ''double'' to ''{3}''</entry>
    <entry key="IfPureNumExprs">Invalid conditional expression ''{0}'' in ''{1}''. The condition must reference an input signal (i.e., u1, u2, ...)</entry>
    <entry key="IfNoUnaryMinusForUnsignedIntDataType">Unary minus operator is not allowed in expression for If block ''{0}'', which has unsigned integer input signal(s). Remove the unary minus operator from the expression or use a 'single' or 'double' data type for the input signal(s).</entry>
    <entry key="IfUnaryMinusOnSignedIntInput">A unary minus operator is being applied to an input signal of data type ''{1}'' in the If or Elseif expression of the If block ''{0}''. This may lead to different simulation and code generation results if the input signal reaches the most negative value of the data type ({2, number, integer}). Consider implementing the unary minus using the Unary Minus block from the Simulink library to better handle signal values at limit conditions. See bug report 798453 for more detail.</entry>
    <entry key="IfUnaryMinusOnSignedIntMinVal">A unary minus operator is being applied to the most negative value ({2, number, integer}) of the data type ''{1}'' in the If or Elseif expression of the If block ''{0}''. This may lead to different simulation and code generation results. See bug report 798453 for more detail.</entry>
    <entry key="IfBlkInvFcnCallInput">An input signal to If block ''{0}'' cannot be a function-call signal.</entry>
    <entry key="IfBlkInvActionInput">An input signal to If block ''{0}'' cannot be an action signal.</entry>
    <entry key="IfBlkNoContTsIfEnsureIfElseCode">
	<![CDATA[
	         If block ''{0}'' has checked 'Provide if-else statements in generated code'. It cannot be placed in model ''{1}'' which uses continuous sample time.
	         <actions exclusiveFixIts="yes">
	         <action type="fixit" id="NoContTsIfEnsureIfElseCode">
	         <cmd>set_param_action(''{0}'', ''EnsureIfElseCode'', ''off'');</cmd>
	         <txt>To allow usage of continuous sample time, open block dialog of block ''{0}'', clear the checkbox 'Provide if-else statements in generated code'.</txt>
	         </action>
	         </actions>
	]]>
    </entry>
    <entry key="RootOutportBlkInvActionInput">An input signal to root-level Outport block ''{0}'' cannot be an action signal.</entry>
    <entry key="IllegalIndexValue">Illegal value at index port k{0,number,integer} of block ''{1}''.</entry>
    <entry key="IllegalSelectionValue">Illegal value at selection port sel{0,number,integer} of block ''{1}''.</entry>
    <entry key="ImplicitAssignmentInvalidInputWidth"><![CDATA[The signal size propagated to the <sldiag objui="inport" objparam="{1,number,integer}" objname="{0}">input port {1,number,integer}</sldiag> of block ''{0}'' has a width of {2,number,integer}. This size must be a multiple of {3,number,integer}. This size relationship is necessary because block ''{5}'' expects a signal input size {6,number,integer} for dimension {4,number,integer}.]]></entry>
    <entry key="ImplicitAssignmentInvalidInputWidth2"><![CDATA[The signal size propagated to the <sldiag objui="inport" objparam="{1,number,integer}" objname="{0}">input port {1,number,integer}</sldiag> of block ''{0}'' has a width of {2,number,integer}. This width is not valid because block ''{4}'' expects a signal input width of at least {3,number,integer}.]]></entry>
    <entry key="ImplicitAssignmentInvalidInputWidth3"><![CDATA[The signal size propagated to the <sldiag objui="inport" objparam="{1,number,integer}" objname="{0}">input port {1,number,integer}</sldiag> of block ''{0}'' has a width of {2,number,integer}. This width is not valid because block ''{4}'' expects a signal input width of {3,number,integer}.]]></entry>
    <entry key="ImplicitAssignmentIOWidthMismatch"><![CDATA[The output signal from <sldiag objui="outport" objparam="{1,number,integer}" objname="{0}">port {1,number,integer}</sldiag> of subsystem ''{0}'' has a width of {2,number,integer}. This width must be a multiple of the width of the input signal {4,number,integer} to Outport block ''{3}''. This size relationship is necessary because the output signal of subsystem ''{5}'' is formed by concatenating the input signal to Outport block ''{6}''.]]></entry>
    <entry key="ImplicitAssignmentIODimMismatch"><![CDATA[The output signal from <sldiag objui="outport" objparam="{1,number,integer}" objname="{0}">port {1,number,integer}</sldiag> of subsystem ''{0}'' has a size of {2,number,integer} for dimension {3,number,integer}. This size must be a multiple of the input signal size {5,number,integer} to Outport block ''{4}'' for the same dimension. This size relationship is necessary because the output signal of subsystem ''{6}'' is formed by concatenating the input signal to Outport block ''{8}'' along dimension {7,number,integer}.]]></entry>
    <entry key="ImplicitAssignmentWidthBasedNumIterMismatch1"><![CDATA[The output signal from <sldiag objui="outport" objparam="{1,number,integer}" objname="{0}">port {1,number,integer}</sldiag> of subsystem ''{0}'' has a width of {2,number,integer}. The input signal to Outport block ''{3}'' has a width of {4,number,integer}. Consequently, subsystem ''{7}'' requires {5,number,integer} iterations. This requirement conflicts with {6,number,integer}, the number of iterations expected by a partitioned mask parameter of this subsystem.]]></entry>
    <entry key="ImplicitAssignmentWidthBasedNumIterMismatch"><![CDATA[The output signal from <sldiag objui="outport" objparam="{1,number,integer}" objname="{0}">port {1,number,integer}</sldiag> of subsystem ''{0}'' has a width of {2,number,integer}. The input signal to Outport block ''{3}'' has a width of {4,number,integer}. Consequently, subsystem ''{7}'' requires {5,number,integer} iterations. This requirement conflicts with {6,number,integer}, the number of iterations expected by another input/output signal of this subsystem.]]></entry>
    <entry key="ImplicitAssignmentDimBasedNumIterMismatch1"><![CDATA[The output signal from <sldiag objui="outport" objparam="{1,number,integer}" objname="{0}">port {1,number,integer}</sldiag> of subsystem ''{0}'' has a size of {2,number,integer} for dimension {3,number,integer}. The input signal to Outport block ''{4}'' has a size of {5,number,integer} for the same dimension. Consequently, subsystem ''{8}'' requires {6,number,integer} iterations. This requirement conflicts with {7,number,integer}, the number of iterations expected by a partitioned mask parameter of this subsystem.]]></entry>
    <entry key="ImplicitAssignmentDimBasedNumIterMismatch"><![CDATA[The output signal from <sldiag objui="outport" objparam="{1,number,integer}" objname="{0}">port {1,number,integer}</sldiag> of subsystem ''{0}'' has a size of {2,number,integer} for dimension {3,number,integer}. The input signal to Outport block ''{4}'' has a size of {5,number,integer} for the same dimension. Consequently, subsystem ''{8}'' requires {6,number,integer} iterations. This requirement conflicts with {7,number,integer}, the number of iterations expected by another input/output signal of this subsystem.]]></entry>
    <entry key="ImplicitAssignmentInvalidOutputWidth"><![CDATA[The output signal from <sldiag objui="outport" objparam="{1,number,integer}" objname="{0}">port {1,number,integer}</sldiag> of subsystem ''{0}'' has a width of {2,number,integer}. It must be a multiple of {3,number,integer}, the number of iterations expected by another subsystem input/output signals.]]></entry>
    <entry key="ImplicitAssignmentInvalidOutputWidth2"><![CDATA[The output signal from <sldiag objui="outport" objparam="{1,number,integer}" objname="{0}">port {1,number,integer}</sldiag> of subsystem ''{0}'' has a width of {2,number,integer}. However, the width must be at least {3,number,integer}.]]></entry>
    <entry key="ImplicitAssignmentInvalidOutputWidth3"><![CDATA[The output signal from <sldiag objui="outport" objparam="{1,number,integer}" objname="{0}">port {1,number,integer}</sldiag> of subsystem ''{0}'' has a width of {2,number,integer}. However, the width must be {3,number,integer}.]]></entry>
    <entry key="ImplicitAssignmentInvalidOutputDim"><![CDATA[The output signal from <sldiag objui="outport" objparam="{1,number,integer}" objname="{0}">port {1,number,integer}</sldiag> of subsystem ''{0}'' has a size of {2,number,integer} for dimension {3,number,integer}. It must be a multiple of {4,number,integer}, the number of iterations expected by another subsystem input/output signals.]]></entry>
    <entry key="ImplicitAssignmentInvalidInputSize">The input size propagated for dimension {1,number,integer} to input of block ''{2}'' is {0,number,integer}. Whereas, block ''{5}'' expects an input size of {3,number,integer} for dimension {4,number,integer}.</entry>
    <entry key="ImplicitAssignmentInvalidOutputSize">The output size propagated for dimension {1,number,integer} to output {3,number,integer} of subsystem ''{2}'' is {0,number,integer}. Whereas, subsystem ''{6}'' expects an output size of {4,number,integer} for dimension {5,number,integer}.</entry>
    <entry key="ImplicitAssignmentInvalidInputDimsMode"><![CDATA[The dimensions mode propagated to the <sldiag objui="inport" objparam="{0,number,integer}" objname="{1}">input port {0,number,integer}</sldiag> of block ''{1}'' is variable. However, block ''{2}'' expects a fixed-size input signal.]]></entry>
    <entry key="ImplicitIterSS_AnalysisPointNotSupportedInside">Simulink does not support the linearization point inside subsystem ''{0}'' because the subsystem contains a For Each block (''{1}''). Specifically, the output {2,number,integer} of block ''{3}'' is set as a linearization point. Consider clearing this linearization point.</entry>
    <entry key="ImplicitIterSS_DWorkDataNotReusableSC">Block ''{0}'' has a state with a global storage class. However, this block is inside subsystem ''{1}'', which contains a For Each block (''{2}''). Simulink does not support this scenario.</entry>
    <entry key="ForEachSSCallerGroundBlock">The function-call port of ''{0}'' is driven either by a ground block or is unconnected, which marks the block to be non-inlined. However, this block is inside subsystem ''{1}'', which contains a For Each block (''{2}''). Simulink does not support this scenario.</entry>
    <entry key="ImplicitIterSS_DataLoggingNotSupportedInside">The parameter ''Log signal data'' in the ''Signal Properties...'' dialog for the output {0,number,integer} of block ''{1}'' is selected. However, the block is inside subsystem ''{2}'', which contains a For Each block (''{3}''). Simulink does not support this scenario. Consider clearing the parameter ''Log signal data''. (Open the ''Signal Properties...'' dialog by right-clicking the signal line).</entry>
    <entry key="ImplicitIterSS_ExpStorageClassNotSupportedInside">The signal at output {0,number,integer} of block ''{1}'' is not using the auto storage class. Only auto storage class is supported inside subsystem ''{2}'' because the subsystem contains a For Each block (''{3}''). Consider, in the ''Signal Properties...'' dialog, setting the ''Storage class'' parameter to ''Auto''. (Open the ''Signal Properties...'' dialog by right-clicking the signal line).</entry>
    <entry key="ImplicitIterSS_FcnCallOutputNotSupported">The signal at output {0,number,integer} of subsystem ''{1}'' is a function-call signal. Function-call output signals are not supported by subsystem ''{2}'' because the subsystem contains a For Each block (''{3}'').</entry>
    <entry key="ImplicitIterSS_ForcedNonInline">The function-call port of subsystem block ''{0}'' is being driven either by an S-Function with no TLC implementation or the mdlInitializeSizes function for the TLC implementation''s S-function does not set either ''SS_OPTION_USE_TLC_WITH_ACCELERATOR'', ''SS_OPTION_FORCE_NONINLINED_FCNCALL'', or ''SS_OPTION_WORKS_WITH_CODE_REUSE'' option. Consequently, subsystem block ''{1}'' is a non-reusable function that Simulink does not support inside subsystem ''{2}'', which contains a For Each block (''{3}'').</entry>
    <entry key="ImplicitIterSS_FrameInputNotSupported">The sampling mode of the signal at input {0,number,integer} is ''Frame-based'' for subsystem ''{1}''. Frame-based input signals are not supported by subsystem ''{2}'' because the subsystem contains a For Each block (''{3}'').</entry>
    <entry key="ImplicitIterSS_FrameOutputNotSupported">The sampling mode of the signal at output {0,number,integer} is ''Frame-based'' for subsystem ''{1}''. Frame-based output signals are not supported by subsystem ''{2}'' because the subsystem contains a For Each block (''{3}'').</entry>
    <entry key="ImplicitIterSS_DifferentLevelDSMRW">Block ''{0}'' is inside subsystem ''{1}'', which contains a For Each block (''{2}''). The corresponding Data Store Memory block ''{3}'' is inside subsystem ''{4}'', which contains a For Each block (''{5}''). Simulink currently does not support this scenario. Block ''{6}'' and the corresponding Data Store Memory block ''{7}'' must be in the same subsystem, which contains a For Each block.</entry>
    <entry key="ImplicitIterSS_DifferentLevelDSMRW_Root">Block ''{0}'' is inside subsystem ''{1}'', which contains a For Each block (''{2}''). The corresponding Data Store Memory block ''{3}'' is not inside subsystem ''{4}''. Simulink currently does not support this scenario. Consider moving Block ''{5}'' outside subsystem ''{6}'' or the corresponding Data Store Memory block ''{7}'' into subsystem ''{8}''.</entry>
    <entry key="ImplicitIterSS_FromWorkspaceWithEmptyTimeNotSupported">The From Workspace block ''{0}'' is inside subsystem ''{1}'', which contains a For Each block (''{2}''). Consequently, the corresponding workspace structure variable must contain time data.</entry>
    <entry key="ImplicitIterSS_NonReusableSFcn">S-Function block ''{0}'' does not have a TLC implementation or does not set either ''SS_OPTION_USE_TLC_WITH_ACCELERATOR'' or ''SS_OPTION_WORKS_WITH_CODE_REUSE'' option. However, this S-function is inside subsystem ''{1}'', which contains a For Each block (''{2}''). Simulink does not support this scenario.</entry>
    <entry key="ImplicitIterSS_NonReusableSF">The particular Stateflow chart ''{0}'' is incompatible with the subsystem code reuse feature. However, this chart is inside subsystem ''{1}'', which contains a For Each block (''{2}''). Simulink does not support this scenario. Consider unchecking the check box ''Export Chart Level Functions'' in the chart Properties dialog.</entry>
    <entry key="ImplicitIterSS_SigObjExpStorageClassNotSupportedInside">The signal at output {0,number,integer} of block ''{1}'' is associated with a Simulink.Signal object ''{2}'', which is not using the auto storage class. Only auto storage class is supported inside subsystem ''{3}'' because the subsystem contains a For Each block (''{4}''). Consider setting the Simulink.Signal object storage class to ''Auto''.</entry>
    <entry key="ImplicitIterSS_DWorkStructuredStorageClassNotSupportedInside">The state ''{0}'' of block ''{1}'' uses a structured storage class. Only unstructured storage class is supported inside a reusable subsystem nested under the non-reusable subsystem ''{2}'' that contains a For Each block (''{3}''). Set the state's storage class to an unstructured one.</entry>
    <entry key="ImplicitIterSS_SignalViewNotSupportedInside">The output {0,number,integer} of block ''{1}'' is connected with a Scope Viewer. However, the block is inside subsystem ''{2}'', which contains a For Each block (''{3}''). Simulink does not support this scenario. Consider disconnecting the viewer (Open the context menu by right-clicking the signal line).</entry>
    <entry key="StateflowDataLoggingNotSupported">Block ''{0}'' is set to log local data. However, the block is inside subsystem ''{1}'', which contains a For Each block (''{2}''). Simulink currently does not support this scenario. Consider turning off logging of local data in block ''{3}''.</entry>
    <entry key="ImplicitIterSS_TestPointNotSupportedInside">The parameter ''Test point'' in the ''Signal Properties...'' dialog for the output {0,number,integer} of block ''{1}'' is selected. Test-pointed signals are not supported inside subsystem ''{2}'', which contains a For Each block (''{3}''). Consider clearing the parameter ''Test point''. (Open the ''Signal Properties...'' dialog by right-clicking the signal line).</entry>
    <entry key="ImplicitIterSS_UnknownExpStorageClassNotSupportedInside">The storage class of the signal at output {0,number,integer} of block ''{1}'' is not using ''Auto''. This setting was set by Simulink internally. Only auto storage class is supported inside subsystem ''{2}'' because the subsystem contains a For Each block (''{3}'').</entry>
    <entry key="ImplicitIterSS_UnknownTestPointNotSupportedInside">Simulink added a hidden test point for the signal at output {0,number,integer} of block ''{1}''. Test-pointed signals are not supported inside subsystem ''{2}'' because the subsystem contains a For Each block (''{3}'').</entry>
    <entry key="ImplicitIterSS_VariableDimsSigNotSupportedInside">Simulink does not support a variable-size signal inside subsystem ''{0}'' because the subsystem contains a For Each block (''{1}''). The signal at output {2,number,integer} of block ''{3}'' is variable-size.</entry>
    <entry key="ImplicitIterSS_WideFcnCallTrig">Subsystem block ''{0}'' is a function-call subsystem with a function-call port that has a width greater than 1. However, this subsystem is inside subsystem ''{1}'', which contains a For Each block (''{2}''). Simulink does not support this scenario.</entry>
    <entry key="ForEachBlockInvalidSpecNumItersParam"><![CDATA[Invalid setting in ''{0}'' for parameter <sldiag objui="blockdlg" objparam="{1}">'Number of iterations'</sldiag>. The parameter must evaluate to either -1 or a positive integer.]]></entry>
    <entry key="ForEachSS_ErrorInOneIter">Subsystem  ''{0}'', which contains a For Each block ''{1}'', has an error in iteration {2,number,integer}.</entry>
    <entry key="ForEachSS_WarningInOneIter">Subsystem  ''{0}'', which contains a For Each block ''{1}'', has a warning in iteration {2,number,integer}</entry>
    <entry key="ForEachSSMaskParamInvalidPartSetting">Invalid setting of ''{0}'' for partitioned mask parameter ''{1}'' of For Each subsystem ''{2}''.</entry>
    <entry key="ForEachSSMaskParamNonScalarPartSetting">The value of ''{0}'' for partitioned mask parameter ''{1}'' of For Each subsystem ''{2}'' is an array of {3,number,integer} element(s). It must be a scalar.</entry>
    <entry key="ForEachSSMaskParamNonPositivePartDim">The value of partition dimension for the mask parameter ''{0}'' of subsystem ''{1}'' is set to {2,number,integer}. It must be a positive integer</entry>
    <entry key="ForEachSSMaskParamNonPositivePartWidth">The value of partition width for the mask parameter ''{0}'' of subsystem ''{1}'' is set to {2,number,integer}. It must be a positive integer</entry>
    <entry key="ForEachSSMaskParamInvalidPartWidth1">The mask parameter ''{0}'' of subsystem ''{1}'' has a size of {2,number,integer} for dimension {3,number,integer}. The value of partition width, {4,number,integer}, is invalid since it is greater than size of dimension {5,number,integer}.</entry>
    <entry key="ForEachSSMaskParamInvalidPartWidth2">The mask parameter ''{0}'' of subsystem ''{1}'' has a size of {2,number,integer} for dimension {3,number,integer}. The value of partition width, {4,number,integer}, is invalid, since it is not a factor of size of dimension {5,number,integer}.</entry>
    <entry key="ForEachSSMaskParamMismatchWithNumIters">The mask parameter ''{0}'' of subsystem ''{1}'' has a size of {2,number,integer} for dimension {3,number,integer}. The partition width is set to {4,number,integer} for this mask parameter. Consequently, subsystem ''{5}'' requires {6,number,integer} iterations. This requirement conflicts with {7,number,integer}, the number of iterations expected by another partitioned mask parameter of this subsystem.</entry>
    <entry key="ForEachSSMaskParamMismatchWithSpecifiedNumIters"><![CDATA[Value of {6,number,integer} for <sldiag objui="blockdlg" objparam="{7}" objname="{8}">'Number of iterations'</sldiag> in For Each block ''{8}'' is invalid. The mask parameter ''{0}'' of subsystem ''{1}'' has a size of {2,number,integer} for dimension {3,number,integer}, and the partition width is set to {4,number,integer} for this mask parameter. Consequently, no more than {5,number,integer} iterations are possible. To perform all possible iterations, specify <sldiag objui="blockdlg" objparam="{7}" objname="{8}">'Number of iterations'</sldiag> as -1.]]></entry>
    <entry key="ForEachLinNoSupportUnconcatenated"> Linearization is not supported for ForEach subsystems that have outports with concatenation disabled.</entry>
    <entry key="ImplicitSelectorIOWidthMismatch"><![CDATA[The input signal to <sldiag objui="inport" objparam="{1,number,integer}" objname="{0}">port {1,number,integer}</sldiag> of subsystem ''{0}'' has a calculated size of {2,number,integer} for the partition dimension {3,number,integer}, based on output width {4,number,integer} from Inport block ''{5}''. The partition dimension size plus the partition offset {6,number,integer} (i.e. {7,number,integer} in total) must be a multiple of {8,number,integer} (i.e. the sum of the partition width {9,number,integer} plus the partition offset {6,number,integer}). This size relationship is necessary because the input is configured to be partitioned.]]></entry>
    <entry key="ImplicitSelectorIOWidthMismatch1"><![CDATA[The input signal to <sldiag objui="inport" objparam="{1,number,integer}" objname="{0}">port {1,number,integer}</sldiag> of subsystem ''{0}'' has a width of {2,number,integer}. This size must be a multiple of the output partial width {3,number,integer} from Inport block ''{4}'' excluding the size of the partition dimension {5,number,integer}. This size relationship is necessary because the input is configured to be partitioned.]]></entry>
    <entry key="ImplicitSelectorIOWidthMismatch2"><![CDATA[The input signal to <sldiag objui="inport" objparam="{1,number,integer}" objname="{0}">port {1,number,integer}</sldiag> of subsystem ''{0}'' has a width of {2,number,integer}. This size conflicts with {3,number,integer}, which is derived from the calculated input signal size {4,number,integer} for the partition dimension {5,number,integer} and the output partial width {6,number,integer} from Inport block ''{7}'' excluding the size of the partition dimension {5,number,integer}. This size relationship is necessary because the input is configured to be partitioned.]]></entry>
    <entry key="ImplicitSelectorIOWidthMismatchWithSpecifiedNumIters"><![CDATA[The input signal to <sldiag objui="inport" objparam="{1,number,integer}" objname="{0}">port {1,number,integer}</sldiag> of subsystem ''{0}'' has a width of {2,number,integer}. This size is less than {3,number,integer}, the minimum required for partition, which is derived from the calculated input signal size {4,number,integer} for the partition dimension {5,number,integer} and the output partial width {6,number,integer} from Inport block ''{7}'' excluding the size of the partition dimension {5,number,integer}. This size relationship is necessary because the input is configured to be partitioned.]]></entry>
    <entry key="ImplicitSelectorIODimMismatch"><![CDATA[The input signal to <sldiag objui="inport" objparam="{1,number,integer}" objname="{0}">port {1,number,integer}</sldiag> of subsystem ''{0}'' has a size of {2,number,integer} for dimension {3,number,integer}. This partition dimension size plus the partition offset {4,number,integer} (i.e. {5,number,integer} in total) must be a multiple of {6,number,integer} (i.e. the sum of output width {7,number,integer} from Inport block ''{8}'' for the same dimension plus the partition offset {4,number,integer}). This size relationship is necessary because the input is configured to be partitioned along dimension {3,number,integer}.]]></entry>
    <entry key="ImplicitSelectorIODimMismatch1"><![CDATA[The input signal to <sldiag objui="inport" objparam="{1,number,integer}" objname="{0}">port {1,number,integer}</sldiag> of subsystem ''{0}'' has a maximum possible size of {2,number,integer} for dimension {3,number,integer}. This partition dimension size plus the partition offset {4,number,integer} (i.e. {5,number,integer} in total) must be a multiple of {6,number,integer} (i.e. the sum of output width {7,number,integer} from Inport block ''{8}'' for the same dimension plus the partition offset {4,number,integer}). This size relationship is necessary because the input is configured to be partitioned along dimension {3,number,integer}.]]></entry>
    <entry key="ImplicitSelectorWidthBasedNumIterMismatch1"><![CDATA[The input signal to <sldiag objui="inport" objparam="{1,number,integer}" objname="{0}">port {1,number,integer}</sldiag> of subsystem ''{0}'' has a calculated size of {2,number,integer} for the partition dimension {3,number,integer}, based on output width {4,number,integer} from Inport block ''{5}''. Given the partition width {6,number,integer} and the partition offset {7,number,integer} for this input, subsystem ''{0}'' requires {8,number,integer} iterations. This requirement conflicts with {9,number,integer}, the number of iterations expected by a partitioned mask parameter of this subsystem.]]></entry>
    <entry key="ImplicitSelectorWidthBasedNumIterMismatchWithSpecifiedNumIters"><![CDATA[Value of {9,number,integer} for <sldiag objui="blockdlg" objparam="{10}" objname="{11}">'Number of iterations'</sldiag> in For Each block ''{11}'' is invalid. The input signal to <sldiag objui="inport" objparam="{1,number,integer}" objname="{0}">port {1,number,integer}</sldiag> of subsystem ''{0}'' has a calculated size of {2,number,integer} for the partition dimension {3,number,integer}, based on output width {4,number,integer} from Inport block ''{5}''. Given the partition width {6,number,integer} and the partition offset {7,number,integer} for this input, no more than {8,number,integer} iterations are possible. To perform all possible iterations, specify <sldiag objui="blockdlg" objparam="{10}" objname="{11}">'Number of iterations'</sldiag> as -1.]]></entry>
    <entry key="ImplicitSelectorWidthBasedNumIterMismatch"><![CDATA[The input signal to <sldiag objui="inport" objparam="{1,number,integer}" objname="{0}">port {1,number,integer}</sldiag> of subsystem ''{0}'' has a calculated size of {2,number,integer} for the partition dimension {3,number,integer}, based on output width {4,number,integer} from Inport block ''{5}''. Given the partition width {6,number,integer} and the partition offset {7,number,integer} for this input, subsystem ''{0}'' requires {8,number,integer} iterations. This requirement conflicts with {9,number,integer}, the number of iterations expected by another input/output signals of this subsystem.]]></entry>
    <entry key="ImplicitSelectorDimBasedNumIterMismatch1"><![CDATA[The input signal to <sldiag objui="inport" objparam="{1,number,integer}" objname="{0}">port {1,number,integer}</sldiag> of subsystem ''{0}'' has a size of {2,number,integer} for dimension {3,number,integer}. Given the partition width {4,number,integer} and the partition offset {5,number,integer} for this input, subsystem ''{0}'' requires {6,number,integer} iterations. This requirement conflicts with {7,number,integer}, the number of iterations expected by a partitioned mask parameter of this subsystem.]]></entry>
    <entry key="ImplicitSelectorDimBasedNumIterMismatchWithSpecifiedNumIters"><![CDATA[Value of {7,number,integer} for <sldiag objui="blockdlg" objparam="{8}" objname="{9}">'Number of iterations'</sldiag> in For Each block ''{9}'' is invalid. The input signal to <sldiag objui="inport" objparam="{1,number,integer}" objname="{0}">port {1,number,integer}</sldiag> of subsystem ''{0}'' has a size of {2,number,integer} for dimension {3,number,integer}. Given the partition width {4,number,integer} and the partition offset {5,number,integer} for this input, no more than {6,number,integer} iterations are possible. To perform all possible iterations, specify <sldiag objui="blockdlg" objparam="{8}" objname="{9}">'Number of iterations'</sldiag> as -1.]]></entry>
    <entry key="ImplicitSelectorDimBasedNumIterMismatch"><![CDATA[The input signal to <sldiag objui="inport" objparam="{1,number,integer}" objname="{0}">port {1,number,integer}</sldiag> of subsystem ''{0}'' has a size of {2,number,integer} for dimension {3,number,integer}. Given the partition width {4,number,integer} and the partition offset {5,number,integer} for this input, subsystem ''{0}'' requires {6,number,integer} iterations. This requirement conflicts with {7,number,integer}, the number of iterations expected by another input/output signal of this subsystem.]]></entry>
    <entry key="ImplicitSelectorInvalidInputWidth"><![CDATA[The input signal to <sldiag objui="inport" objparam="{1,number,integer}" objname="{0}">port {1,number,integer}</sldiag> of subsystem ''{0}'' has a width of {2,number,integer}. This width must be a multiple of {3,number,integer}, the calculated size for the partition dimension {4,number,integer}.]]></entry>
    <entry key="ImplicitSelectorInvalidInputWidth2"><![CDATA[The input signal to <sldiag objui="inport" objparam="{1,number,integer}" objname="{0}">port {1,number,integer}</sldiag> of subsystem ''{0}'' has a width of {2,number,integer}. However, the width must be at least {3,number,integer}.]]></entry>
    <entry key="ImplicitSelectorInvalidInputWidth3"><![CDATA[The input signal to <sldiag objui="inport" objparam="{1,number,integer}" objname="{0}">port {1,number,integer}</sldiag> of subsystem ''{0}'' has a width of {2,number,integer}. However, the width must be {3,number,integer}.]]></entry>
    <entry key="ImplicitSelectorInvalidOutputWidth"><![CDATA[The signal size propagated to <sldiag objui="outport" objparam="{1,number,integer}" objname="{0}">output port {1,number,integer}</sldiag> of block ''{0}'' has a width of {2,number,integer}. This width must instead be a multiple of the derived minimum width {3,number,integer}.]]></entry>
    <entry key="ImplicitSelectorInvalidOutputWidth1"><![CDATA[The signal size propagated to the <sldiag objui="outport" objparam="{1,number,integer}" objname="{0}">output port {1,number,integer}</sldiag> of block ''{0}'' has a width of {2,number,integer}. This width must be a multiple of {3,number,integer} because the input {4,number,integer} of subsystem ''{5}'' is configured to be partitioned with a partition size {6,number,integer}.]]></entry>
    <entry key="ImplicitSelectorInvalidOutputWidth2"><![CDATA[The signal size propagated to <sldiag objui="outport" objparam="{1,number,integer}" objname="{0}">output port {1,number,integer}</sldiag> of block ''{0}'' has a width of {2,number,integer}. This size must be at least {3,number,integer}.]]></entry>
    <entry key="ImplicitSelectorInvalidOutputWidth3"><![CDATA[The signal size propagated to <sldiag objui="outport" objparam="{1,number,integer}" objname="{0}">output port {1,number,integer}</sldiag> of block ''{0}'' has a width of {2,number,integer}. This size must be {3,number,integer}.]]></entry>
    <entry key="ImplicitSelectorInvalidInputSize">The input size propagated for dimension {1,number,integer} to input {3,number,integer} of subsystem ''{2}'' is  {0,number,integer}. Whereas, subsystem ''{2}'' expects an input size {4,number,integer} for dimension {1,number,integer}.</entry>
    <entry key="ImplicitSelectorInvalidOutputSize">The output size propagated for dimension {1,number,integer} to output of block ''{2}'' is {0,number,integer}. Whereas, block ''{2}'' expects output size {3,number,integer} for dimension {1,number,integer}.</entry>
    <entry key="ImplicitSelectorInvalidOutputDimsMode"><![CDATA[The signal at the <sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">output port {0,number,integer}</sldiag> of block ''{1}'' is a variable-size signal. However, Simulink requires that input signals of For Each Subsystems after partitioning be fixed-size signals.]]></entry>
    <entry key="IncomingSignalIsNotABus"><![CDATA[The signal entering <sldiag objui="inport" objparam="{0,number,integer}" objname="{1}">input port {0,number,integer}</sldiag> of block ''{1}'' is not a bus, yet the bus object ''{2}'' is associated with that input port.]]></entry>
    <entry key="IncompatibleSignalDimsMode">The ports of block ''{0}'' must have the same dimension mode (all fixed dimension or all variable dimension)</entry>
    <entry key="IncompatibleSignalFrameMode">The ports of block ''{0}'' must have the same sampling mode (all sample-based or all frame-based)</entry>
    <entry key="IncompatibleSignalWidth">The input ports of block ''{0}'' must have the same width</entry>
    <entry key="IncompatibleSignalWidthRuntime">The input ports of block ''{0}'' have different widths. The variable-size ports of the Reshape block must have the same widths during execution</entry>
    <entry key="InconsistentDemuxInDimsInfo">Invalid dimensions encountered while setting dimensions of input port of ''{0}''. We are attempting to set the dimensions to {1} while the dimensions have already been set to {2}</entry>
    <entry key="InconsistentDemuxOutDimsInfo"><![CDATA[Invalid dimensions encountered while setting dimensions of <sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">output port {0,number,integer}</sldiag> of ''{1}''. We are attempting to set the dimensions to {2} while the dimensions have already been set to {3}]]></entry>
    <entry key="InconsistentMuxInDimsInfo"><![CDATA[Invalid dimensions encountered while setting dimensions of <sldiag objui="inport" objparam="{0,number,integer}" objname="{1}">input port {0,number,integer}</sldiag> of ''{1}''. We are attempting to set the dimensions to {2} while the dimensions have already been set to {3}]]></entry>
    <entry key="InconsistentMuxOutDimsInfo">Invalid dimensions encountered while setting dimensions of output port of ''{0}''. We are attempting to set the dimensions to {1} while the dimensions have already been set to {2}</entry>
    <entry key="InvalidMuxVarSizeSig">The variable-size signal is not supported by Mux block ''{0}''. </entry>
    <entry key="InvalidMuxBusArray">The array of bus signals is not supported by Mux block ''{0}''.</entry>
    <entry key="InvalidMuxMixedRealComplexSigs"><![CDATA[It is not supported when the output of the Mux block ''{0}'' is a complex signal, while the signal to its <sldiag objui="inport" objparam="{1,number,integer}" objname="{0}">input port {1,number,integer}</sldiag> is real.]]></entry>
    <entry key="IncorrectInitialConditionDimension">In ''{0}'', the initial conditions have incorrect dimensions. See the block reference page in the documentation for more information</entry>
    <entry key="IndexBlkInvIndexingEnumFromDialog">The minimal enumerated value of the enumerated class ''{0}'' must be non-negative.</entry>
    <entry key="IndexBlkInvIndexingEnumFromPort"><![CDATA[The minimal enumerated value of the enumerated class ''{0}'' propagated to <sldiag objui="inport" objparam="{1,number,integer}" objname="{2}">input port {1,number,integer}</sldiag> of ''{2}'' must be non-negative.]]></entry>
    <entry key="IndexConventionMismatch">Inconsistent indexing conventions specified for block ''{0}'' connected to input port {1}{2,number,integer} of block ''{3}''. If you enable the ''Use last breakpoint for input at or above upper limit'' parameter on a Prelookup block, you must also enable the ''Valid index input may reach last index'' parameter for the Interpolation Using Prelookup block to which it connects; otherwise, you must disable both parameters.</entry>
    <entry key="IndexConventionMismatch2">Inconsistent indexing conventions specified for block ''{0}'' connected to input port {1}{2,number,integer} of block ''{3}''. The Interpolation Using Prelookup block expects the Prelookup block to use its last breakpoint for indexing; however, the Prelookup block is not configured to do so. To fix this error, disable the ''Valid index input may reach last index'' parameter for the Interpolation Using Prelookup block.</entry>
    <entry key="IndexConventionMismatch4">Inconsistent indexing conventions specified for block ''{0}'' connected to input port {1}{2,number,integer} of block ''{3}''. To fix this error, specify the same indexing convention for both blocks. For more information, see the Prelookup and Interpolation Using Prelookup block reference pages in the Simulink documentation.</entry>
    <entry key="IndexConventionMismatch5">Inconsistent indexing conventions specified for block ''{0}'' connected to input port {1}{2,number,integer} of block ''{3}''. The Interpolation Using Prelookup block expects the Prelookup block to not use its last breakpoint for indexing; however, the Prelookup block is not configured to do so. To fix this error, enable the ''Valid index input may reach last index'' parameter for the Interpolation Using Prelookup block.</entry>
    <entry key="IncorrectIndexConventionSelectionPort">Selection port {0}{1,number,integer} of ''{2}'' does not support the indexing convention specified. To fix this error, enable the ''Use last breakpoint for input at or above upper limit'' in the Prelookup block as well as the ''Valid index input may reach last index'' parameter in the Interpolation Using Prelookup block.</entry>
    <entry key="IndexRangeMismatch">The range of values for input port {0}{1,number,integer} of block ''{2}'' does not match the size of the corresponding table dimension of {3,number, integer}. Specify a different table dimension or modify the range of values for input port {0}{1,number,integer}. </entry>
    <entry key="IndexFromBusRangeMismatch">The range of values for the first signal in the bus object propagated to the input port {0}{1,number,integer} of block ''{2}'' does not match the size of the corresponding table dimension of {3,number, integer}. Specify a different table dimension or modify the range for the first signal in the bus object propagated to the input port {0}{1,number,integer}.</entry>
    <entry key="InportCannotOutputVirtualBusWithVarDimsElement">''{0}'' cannot output a virtual bus with variable-size elements. Change the bus to nonvirtual, or insert a ''Signal Conversion'' block after ''{1}'' with ''Output'' parameter set to ''Signal copy'' or ''Nonvirtual bus''.</entry>
    <entry key="InportCannotSpecifyTSForFcnCallSignal">Input port ''{0}'' is not allowed to change sample time of a function call signal. Consider changing ''Sample time'' option of input port to -1.</entry>
    <entry key="OutportCannotSpecifyTSForFcnCallSignal">Output port ''{0}'' is not allowed to change sample time of a function call signal. Consider changing ''Sample time'' option of output port to -1.</entry>
    <entry key="InportDialogTsIsNotInheritedWhenBusObjHasMultTs">Input port ''{0}'' has a non-inherited sample time setting for its sample time parameter. This parameter must be set to inherited since the specified bus object has multiple sample times.</entry>
    <entry key="InportHasPropedBusTypeButNoBusObj">The output data type for the root Inport block ''{0}'' is being set to the bus data type ''{1}'', but no Bus Object is associated with the Inport block. To eliminate this error, specify the Bus Object in the Inport block dialog.</entry>
    <entry key="InportIterParamMismatch">The number of Inport blocks indicated by parameter ''{0}'' is {1,number,integer}. This value does not match the actual number of Inport blocks {2,number,integer} for subsystem ''{3}''.</entry>
    <entry key="InportMissingMasterInport">The controlling Inport for ''{0}'' does not exist.</entry>
    <entry key="InportRequiresNVBusForAOB"><![CDATA[Inport block ''{0}'' must have dimensions ''1'' to output a virtual bus. Set dimensions to ''1'' or output a nonvirtual bus with dimensions ''{1}''. If you are upgrading a model from a previous version of Simulink, use the <a href="matlab:sl(''upgradeadvisor'', ''{2}'')">Upgrade Advisor</a>.]]></entry>
    <entry key="InportVarDimsCannotInterp">Invalid setting in ''{0}''. When "Dimensions mode" is set to "Variable" in signal specification, deselect the "Interpolate data" checkbox.</entry>
    <entry key="InportVarDimsSettingToZeroWarn">In ''{0}'', the length of variable-size signals loaded in workspace is less than the number of simulation steps. Therefore, the output values will be set to zero after final data, and the current output port dimensions will be set to the maximum output port dimensions.</entry>
    <entry key="InputDimMismatch">The number of partitioned subarrays for input {0,number,integer} is {1,number,integer}. This value does not match the number of partitioned subarrays {2,number,integer} for input {3,number,integer} for subsystem ''{4}''. Adjust the sizes of the input signals or the partition widths such that the number of partitioned subarrays for all input signals are the same.</entry>
    <entry key="InputPortComplexityErr">Error in ''SetInputPortComplexity'' method of ''{0}''. The signal complexity of input port {1,number,integer} should have been set to ''{2}'', but was instead set to ''{3}''.</entry>
    <entry key="InputPortDatatypeErr">Error in ''SetInputPortDatatype'' method of ''{0}''. The data type ID of input port {1,number,integer} should have been set to {2,number,integer}, but was instead set to {3,number,integer}.</entry>
    <entry key="InputPortDimsErr1To1">Error in ''SetInputPortDimensions'' method of ''{0}''. The dimensions of input port {1,number,integer} should have been set to [{2,number,integer}], but was instead set to [{3,number,integer}].</entry>
    <entry key="InputPortDimsErr1To2">Error in ''SetOutputPortDimensions'' method of ''{0}''. The dimensions of input port {1,number,integer} should have been set to [{2,number,integer}], but was instead set to [{3,number,integer}x{4,number,integer}].</entry>
    <entry key="InputPortDimsErr2To1">Error in ''SetOutputPortDimensions'' method of ''{0}''. The dimensions of input port {1,number,integer} should have been set to [{2,number,integer}x{3,number,integer}], but was instead set to [{4,number,integer}].</entry>
    <entry key="InputPortDimsErr2To2">Error in ''SetOutputPortDimensions'' method of ''{0}''. The dimension of input port {1,number,integer} should have been set to [{2,number,integer}x{3,number,integer}], but was instead set to [{4,number,integer}x{5,number,integer}].</entry>
    <entry key="InputPortDimsModeErr">Error in ''SetInputPortDimensionsMode'' method of ''{0}''. The sampling mode of input port {1,number,integer} should have been set to ''{2}'', but was instead set to ''{3}''.</entry>
    <entry key="InputPortFramenessErr">Error in ''SetInputPortSamplingMode'' method of ''{0}''. The sampling mode of input port {1,number,integer} should have been set to ''{2}'', but was instead set to ''{3}''.</entry>
    <entry key="InsertedGlobalDSMMsg">This block is inserted to support a global data store corresponding to the Simulink.Signal object ''{0}'' in the global workspace</entry>
    <entry key="InsertedLocalDSMMsg">This block is inserted to support a local data store corresponding to the Simulink.Signal object ''{0}'' in the model workspace</entry>
    <entry key="InsertedDSMRefMsg">This block is inserted to support a reference to the data store ''{0}'' from a submodel</entry>
    <entry key="InsertedSharedLocalDSMMsg">This block is inserted to support a shared local data store corresponding to a data store named ''{0}'' in ''{1}''</entry>
    <entry key="InsertedSharedLocalDSMForHasBeenInitMsg">This block is inserted to prevent repeated initialization of shared data</entry>
    <entry key="IntegratorStateLimitViolation">The state of block {0} has violated the upper limit and lower limit of block parameter setting. If this is due to perturbation- based linearization algorithm, the user may consider adjusting perturbation level or using analytic linearization algorithm</entry>
    <entry key="IntermediateDTExceedsMaxFxpBits">In block ''{0}'', the number of word length bits in the 'Intermediate results' data type exceeds the supported maximum. The 'Intermediate results' data type derives from the input and output data types.</entry>
    <entry key="IntermediateDTSizeOverSimulationLimit">Invalid internal fixed-point data type is used. Block ''{0}'' is using the data type ''{1}'' which requires {2,number,integer} bits for internal calculations, but the maximum supported by the block is {3,number,integer}.</entry>
    <entry key="IntermediateNotMatching">In block ''{0}'', when both the ''Intermediate results data type'' and the ''Table data type'' are not floating-point data types, they must have the same slope and bias.</entry>
    <entry key="IntermediateNotMatching2">In block ''{0}'', when the ''Table data type'' is floating-point data type and the ''Intermediate results data type'' is fixed-point data type, the ''Intermediate  results data type'' must have trivial slope and bias.</entry>
    <entry key="InvalidInternalDataTypeForFixptMode">The parameter ''{0}'' of block ''{1}'' is of a floating point type, which is not supported. Consider changing the data type or selecting the ''Support floating-point numbers'' option on the Configuration Parameters > Code Generation > Interface pane.</entry>
    <entry key="InterpNDTooBigForCoverage">The table in interpolation block ''{0}'' is too large for coverage reporting. It will be ignored during coverage recording.</entry>
    <entry key="MinMaxCollapseModeVarsizeCoverage">Unable to analyze relational boundary coverage for MinMax block ''{0}''. Relational boundary coverage is not supported for MinMax blocks with variable-sized input when 'Apply over' parameter is set to 'Specified dimension'.</entry>
    <entry key="InterpNdNotMultiFraction">The block ''{0}'' does not support multi-dimensional signals for fraction port f{1,number,integer}.</entry>
    <entry key="InterpNdNotMultiIndex">The block ''{0}'' does not support multi-dimensional signals for index port k{1,number,integer}.</entry>
    <entry key="InterpNdNotMultiOut">The block ''{0}'' does not support multi-dimensional signals for the output port.</entry>
    <entry key="InterpNdNotMultiSelection">The block ''{0}'' does not support multi-dimensional signals for selection port sel{1,number,integer}.</entry>
    <entry key="InterpNdNotMultiBus">The block ''{0}'' does not support multi-dimensional signals for selection port kf{1,number,integer}.</entry>
    <entry key="NoBusWhenNumSelEqualsNumdims">The checkbox ''{0}'' can be enabled in block ''{1}'' only when block dialog parameter ''{2}'' is less than parameter ''{3}''.</entry>
    <entry key="InvActConnection">Port {0,number,integer} of ''{1}'' must directly or indirectly connect to one If Action Subsystem block.</entry>
    <entry key="InvActConnectionNoSrc">The action signal for subsystem ''{0}'' may not be connected to more than one destination block.</entry>
    <entry key="InvActSubsysConnection">The action port on subsystem ''{0}'' can only be connected to an If or Switch-Case and may not be connected to more than one If or Switch-Case</entry>
    <entry key="InvActionPort">A control port already exists in subsystem ''{0}''. Addition of an action port is not allowed.</entry>
    <entry key="InvBlkMatName">Invalid MATLAB variable name ''{2}'' specified in ''{0}'' for parameter ''{1}''</entry>
    <entry key="InvBlkParamLens">Length or dimension of parameter values in ''{0}'' are inconsistent</entry>
    <entry key="InvBusConstruction">When selecting signal ''{0}'' from the bus created by block ''{1}'', objects specified in the construction of that bus in turn specify that the bus object ''{2}'' is associated with the block ''{3}''. The bus object has {4,number,integer} elements, yet the block has {5,number,integer} incoming signals.</entry>
    <entry key="InvBusCreatorInputsParam">Invalid setting for \"Inputs\" parameter in ''{0}''.</entry>
    <entry key="InvBusObjectNumElements">The bus data type ''{0_SLBus}'' specified in ''{1}'' is not valid; the number of signals at the input to the block must match the number of object elements.</entry>
    <entry key="InvBusObjectNumElements2"><![CDATA[The bus object ''{0_SLBus}'' associated with <sldiag objui="inport" objparam="{1,number,integer}" objname="{2}">input port {1,number,integer}</sldiag> of ''{2}'' is invalid. The bus entering that input port has {3,number,integer} signals in it, however the object has {4,number,integer} elements. The number of signals in the bus must match the number of object elements.]]></entry>
    <entry key="InvCaseConditions">Invalid setting for ''{0}'' of ''{1}''. Each cell must be specified by a set of integers within 32-bit signed integer range or enumerated values. Each integer value may only appear in one cell. For enumerated values, all values must be of the same enumerated data type.</entry>
    <entry key="InvCaseConditionsSameEnumType">Invalid setting for ''{0}'' of ''{1}''. Each cell must be specified by a set of integers within 32-bit signed integer range or enumerated values. For enumerated values, all values must be of the same enumerated data type.</entry>
    <entry key="InvCaseConditionsVectorLength">Invalid setting for ''{0}'' of ''{1}''. Each cell must be specified as a vector of integers within 32-bit signed integer range or enumerated values. Vectors for all the cells must have the same length.</entry>
    <entry key="InvCaseDuplicateConditions">The value ''{2}'' is duplicated in ''{0}'' of ''{1}''. Each cell must be specified by a set of integers or enumerated values. Each integer value must be unique.</entry>
    <entry key="InvCaseDuplicateConditionsEnum">Multiple conditions contain the same underlying integer value as ''{2}'' in ''{0}'' of ''{1}''. Each cell must be specified by a set of integers or enumerated values. For enumerated values, each underlying integer value must be unique.</entry>
    <entry key="InvCaseDuplicateConditionsVector">The value ''{2}'' is duplicated in ''{0}'' of ''{1}''. Each cell must be specified as a vector of integers or enumerated values. Each vector value must be unique.</entry>
    <entry key="InvCaseInputPortDataType">Invalid data type setting for input port of ''{0}''. This port accepts built-in and enumerated data types with the exception of boolean</entry>
    <entry key="InvCaseInputPortDataTypeEnum">Invalid data type setting for input port of ''{0}''. This port only accepts an enumerated data type if the case conditions are of that same enumerated data type</entry>
    <entry key="InvClogicTbl">The number of rows for the truth table in ''{0}'' must be a power of two</entry>
    <entry key="InvClogicTblDtype">Non-Boolean values are specified for Parameter {0} of {1}. If the parameter contains non-Boolean values, its data type must be double</entry>
    <entry key="InvConcatConnBusSrcWarn"><![CDATA[Improper bus connection from <sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">output port {0,number,integer}</sldiag> of ''{1}'' to <sldiag objui="inport" objparam="{2,number,integer}" objname="{3}">input port {2,number,integer}</sldiag> of ''{3}''. This bus is being treated as a vector signal. Such improper uses of bus signals will be deprecated in a future release. Please consider using a Concatenate block instead of a Bus Creator to produce a vector signal.]]></entry>
    <entry key="InvDataTypeSettingForGain">Unable to determine the data type of ''Gain'' parameter, for block ''{0}''. However, the ''Parameter data type'' in ''Parameter Attributes'' dialog pane is set to ''Inherit from Gain''. Specify data type for ''Gain'' parameter or select a different option for ''Parameter data type''</entry>
    <entry key="InvDiscDutyCycle">Duty cycle must be between 0 and 100 in ''{0}''</entry>
    <entry key="InvDiscPulseWidth">Pulse width must be less than or equal to the period of the Pulse Generator in ''{0}''</entry>
    <entry key="InvDiscPulseWidthPulsePeriodSetting">The block ''{0}'' has Period and Pulse Width set so that the output is either always 0 or always equal to the amplitude. It is not a pulse signal any longer</entry>
    <entry key="InvDlgPrmTypeForConstantBlockDrivingICPort">Data type mismatch. When the Constant block ''{0}'' is connected to the external initial condition (IC) port of the Integrator block ''{1}'', its output signal data type must be the same as the data type of the ''Constant value'' parameter to ensure correct initialization of the integrator''s states</entry>
    <entry key="InvDlgPrmTypeForInitCondBlockDrivingICPort">Data type mismatch. When the Initial Condition block ''{0}'' is connected to the external initial condition (IC) port of the Integrator block ''{1}'', its output signal data type must be the same as the data type of the ''Initial value'' parameter to ensure correct initialization of the integrator''s states</entry>
    <entry key="InvExpMergeConnMultDst1">The bus signal driving block ''{0}'' at input port {1,number,integer} is unable to propagate through the Merge block. The cause for this is the nonvirtual Inport block ''{2}'' upstream of the Merge block. If your intent is to propagate the bus signal through the merge block, insert a ''Signal Conversion'' block after the Inport block, and configure its Output parameter to ''Signal copy''. Otherwise, check the ''Allow unequal port widths'' checkbox to disallow bus propagation through the Merge block.</entry>
    <entry key="InvExpMergeConnMultDst2"><![CDATA[The connection from ''{0}'' <sldiag objui="outport" objparam="{1,number,integer}" objname="{2}">output port {1,number,integer}</sldiag> to ''{2}'' input port {3,number,integer} is invalid. Signals being merged can only be connected to a Merge input port, must map to a unique element of the Merge block, and should not be connected to any other block input ports]]></entry>
    <entry key="InvVariantMergeUsage"><![CDATA[<sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">Output port {0,number,integer}</sldiag> of the ''{1}'' block is an input to a top-level outport block of the ''{2}'' variant subsystem block. All signals that are input to top-level outport blocks, must originate from a single output port of a nonvirtual block and cannot branch to multiple destination blocks. The output signal from the above port does not meet this requirement.
    <actions exclusiveFixIts="yes">
    <action type="fixit">
    <cmd>slprivate(''variantfixes'',''InsertSignalConversionBlk'',''{3}'')</cmd>
    <txt>You can fix this error by inserting a Signal Conversion block at the input of the corresponding Outport of the ''{3}'' block in the variant child block.</txt>
    </action>
    </actions> ]]></entry>
    <entry key="InvVariantMergeUsage_fix">Signal Conversion block is inserted at input of corresponding Outport. </entry>
    <entry key="InvFcnCallSignalInIteratorSubsys">A function-call initiator inside iterator subsystem ''{0}'' may not call a function-call block that is not contained within the iterator subsystem</entry>
    <entry key="InvFixptBoolAccumDType">Cannot set the accumulator data type of ''{0}'' to ''Boolean''. To fix this problem, do not set the "Accumulator data type" of this block to "Inherit: Same as first input"</entry>
    <entry key="InvForIterVarSizeWidthConn">Port {0,number,integer} of For Iterator ''{1}'' cannot be connected to a width or a probe block whose input is a variable-size signal</entry>
    <entry key="InvForIterPortConn">Port {0,number,integer} of For ''{1}'' must be connected to either an input port, a width block, or the signal width output port of a probe block</entry>
    <entry key="InvIndexPortType"><![CDATA[Invalid data type at <sldiag objui="inport" objparam="{0}" objname="{2}">input port {0}</sldiag>{1,number,integer} of block ''{2}''. Index ports support only built-in floating-point, integer, and fixed-point data types with a slope of 1.0, bias of 0.0, and exponent of 0.]]></entry>
    <entry key="InvIndexPortTypeInBus">Invalid index signal in the bus. The first signal in the bus must be a built-in floating-point, integer, or fixed-point data types with a slope of 1.0, bias of 0.0, and exponent of 0.</entry>
    <entry key="InvFractionPortType">Invalid data type at fraction port {0}{1,number,integer} of block ''{2}''. Should be a built-in floating-point, integer, or fixed-point data type with a slope of 1.0, bias of 0.0, exponent less than or equal to 0, and, a range of [0 1] when the parameter ''{3}'' is ''off'' or a range of [0 1) when the parameter ''{4}'' is ''on''.</entry>
    <entry key="InvFractionPortTypeInBus">Invalid fraction signal in the bus. The second signal in the bus must be a built-in floating-point, integer, or a fixed-point data type with a slope of 1.0, bias of 0.0, exponent less than or equal to 0, and, a range of [0 1] when the parameter ''{0}'' is ''off'' or a range of [0 1) when the parameter ''{1}'' is ''on''.</entry>
    <entry key="InvBusDataType"><![CDATA[Invalid bus object ''{0}'' propagated to the <sldiag objui="inport" objparam="{1}" objname="{3}">input port {1}</sldiag>{2,number,integer} of block ''{3}''.]]></entry>
    <entry key="InvGotoFromTagName">Tag name specified in ''{0}'' is an invalid identifier. Valid identifiers start with a letter, contain no spaces or special characters and are at most {1,number,integer} characters long</entry>
    <entry key="InvGotoFromConnection">Goto/From connections cannot cross boundary of nonvirtual subsystems (''{0}'' and ''{1}'') inside a Variant Subsystem. </entry>
    <entry key="InvInterSysConn1">Goto/From connections cannot cross nonvirtual subsystem boundaries. The only exception is when a goto is connected to a state output port</entry>
    <entry key="InvInterSysConn2">Invalid connection starts with ''{0}''</entry>
    <entry key="InvInterSysConn3">Invalid connection ends with ''{0}''</entry>
    <entry key="InvInterSysConn4">Connection between Goto block ''{0}'' and From block ''{1}'' along a signal originated in a state output port is not allowed because the connection crosses nonvirtual subsystem boundaries that require a rate transition.</entry>
    <entry key="InvInterSysConnImplicitIterSS">The subsystem ''{0}'' contains a For Each block (''{1}'') and has Goto/From connections that cross the subsystem boundaries. Simulink does not permit such crossings.</entry>
    <entry key="InvInterSysIfConnection">The signal from port {0,number,integer} of ''{1}'' cannot cross nonvirtual subsystem boundaries</entry>
    <entry key="InvInterSysActionConnection">Action signal cannot cross nonvirtual subsystem boundaries through Outport block ''{0}''.</entry>
    <entry key="InvInterSysActionConnection2">Action signal cannot cross boundary of nonvirtual subsystem ''{0}''.</entry>
    <entry key="InvIteratorBlock">A control port already exists in subsystem ''{0}''. Addition of a For or While is not allowed.</entry>
    <entry key="InvLinblockFormChange">You cannot change the realization form of the {0} ''{1}'' while the block diagram is running</entry>
    <entry key="InvLinblockSparseChange">You cannot change the zero matrix entries of the {0} ''{1}'' while the block diagram is running</entry>
    <entry key="InvLookup2dDataChange">When running in external or accelerated mode, you cannot change the location or the number of zeros in the row or column indices of the lookup 2-D ''{0}''</entry>
    <entry key="InvMatFile">''{0}'' expects a MAT-file containing a non-empty finite real matrix with at least 2 rows. The elements of the matrix should not include NaN and only have data type of double</entry>
    <entry key="InvMatFileTimeseries">''{0}'' does not support timeseries input in this code generation mode. Consider converting the timeseries data into the array format. For information about the valid array format, see the documentation for the From File block. </entry>
    <entry key="InvFromFileDatatypeSetting">''{0}'' specifies a data type other than auto, double, or an alias type aliased to double. From File block supports non-double data type settings only for RSIM target. For any other code generation target, From File block must use one of the following data type settings: auto, double, or an alias type aliased to double.</entry>
    <entry key="InvFromFileInterpolationBuildConfig">''{0}'' specifies interpolation or extrapolation different from linear. From File block supports interpolation settings different from linear only for RSIM target. For any other code generation target, From File block must use only linear interpolation and extrapolation.</entry>
    <entry key="InvMergeBlockInAlgLoop">Detected an algebraic loop containing a Merge block ''{0}''. Merge blocks are not allowed in algebraic loops</entry>
    <entry key="InvMergeConnBadDst">All elements of the signal from ''{0}'' output port {1,number,integer} must be connected to the same Merge ''{2}'' input port. Signals being merged should completely map onto a contiguous region within a Merge output port</entry>
    <entry key="InvMergeConnBadMdlRefSrc"><![CDATA[The signal from Model block ''{0}'' <sldiag objui="outport" objparam="{1,number,integer}" objname="{0}">output port {1,number,integer}</sldiag> cannot be connected to a Merge block. Use the following steps to address this problem, verifying that the problem still persists after each step before continuing to the next step. First, ensure all connections inside the referenced model comply with the Merge block connection rules. See Merge block documentation for rule details. Second, insert a Signal Conversion block before the Outport block of the top-most conditionally executed subsystem that connects directly to the root Outport. Finally, ensure that the signal driving each root Outport block originates from a single output port without any selection or reordering of elements]]></entry>
    <entry key="InvMergeConnBadMdlRefSrcHasMultiDsts"><![CDATA[The signal from Model block ''{0}'' <sldiag objui="outport" objparam="{1,number,integer}" objname="{0}">output port {1,number,integer}</sldiag> cannot be connected to a Merge block because the source block driving the corresponding root Outport in the referenced model is connected to multiple destinations.]]></entry>
    <entry key="InvMergeConnBadMdlRefSrcLoggedSignal"><![CDATA[The signal from Model block ''{0}'' <sldiag objui="outport" objparam="{1,number,integer}" objname="{0}">output port {1,number,integer}</sldiag> cannot be connected to a Merge block because the signal driving the corresponding root Outport in the referenced model is being logged.]]></entry>
    <entry key="InvMergeConnBadMdlRefSrcSILPIL"><![CDATA[You cannot connect the signal from Model block ''{0}'' <sldiag objui="outport" objparam="{1,number,integer}" objname="{0}">output port {1,number,integer}</sldiag> to a Merge block when the Model block is in Software-in-the-Loop (SIL) or Processor-in-the-Loop (PIL) simulation mode. To work around this limitation, first make sure that no errors occur when the Model block is in Accelerator simulation mode. Next, restore the Model block simulation mode to its previous setting. Then, if the Model block is inside a conditionally executed subsystem that is connected to the Merge block, add a Signal Conversion block (Signal copy) between the Model block and the Outport of the conditionally executed subsystem. Alternatively, if the Model block is connected directly to the Merge block, add an Enabled Subsystem between the Model block and the Merge block that passes the signal straight through. Configure the Enable Port of the new Enabled Subsystem so that only one Merge block input is active at a time.]]></entry>
    <entry key="InvMergeConnBadSrc"> Connecting signal from ''{0}'' output port {1,number,integer} to a Merge block is not supported because the signal is required to be persistent.</entry>
    <entry key="InvMergeConnBadBusSelectionSrc"> Connecting signal from ''{0}'' output port {1,number,integer} to Merge block ''{2}'' is not supported because the signal is selected by a Bus Selector block.</entry>
    <entry key="InvMemLayoutConnBadBusSelectionSrc"> Invalid connection from block ''{0}'' to block ''{1}'' of type ''{2}'' due to bus element selection.</entry>
    <entry key="InvMergeConnCommonBrFcnCallInitDrivingMultMergeInputs"><![CDATA[Invalid connection from function-call blocks ''{0}'' and ''{1}'' to Merge block ''{2}'' input ports {3,number,integer} and {4,number,integer}, respectively. Both function-call blocks are invoked from <sldiag objui="outport" objparam="{5,number,integer}" objname="{6}">output port {5,number,integer}</sldiag> of initiator ''{6}''. Outputs of function-call blocks invoked by the same function-call initiator cannot be merged.]]></entry>
    <entry key="InvMergeConnCondMdlRefDrivingMultMergeInputs">Invalid connection from conditionally executed Model block ''{0}'' to Merge block ''{1}'' input port {2,number,integer} and input port {3,number,integer}. The same conditionally executed Model block cannot be connected to multiple input ports of the same Merge block. This restriction applies when the Model block is connected to the Merge block directly, or indirectly through other Merge blocks</entry>
    <entry key="InvMergeConnCondSubsysDrivingMultMergeInputs">Invalid connection from conditionally executed subsystem ''{0}'' to Merge block ''{1}'' input port {2,number,integer} and input port {3,number,integer}. The same conditionally executed subsystem cannot be connected to multiple input ports of the same Merge block. This restriction applies when the subsystem is connected to the Merge block directly, or indirectly through other Merge blocks</entry>
    <entry key="InvMergeConnDiscontigCondSubsysSrc" context="error">Invalid connection from block ''{0}'' output port {1,number,integer} to Merge block ''{2}'' input port {3,number,integer}. An input signal to a Merge block that has been combined or reordered using Mux, Bus Creator, or Selector blocks must be combined inside of a single conditionally executed subsystem.</entry>
    <entry key="InvMergeConnDiscontigTaskSrc" context="error">Invalid connections from block ''{0}'' output port {1,number,integer} and block ''{2}'' output port {3,number,integer} to Merge block ''{4}'' input port {5,number,integer}. An input signal to a Merge block that has been combined or reordered using Mux, Bus Creator, or Selector blocks must originate from sources in the same task.</entry>
    <entry key="InvMergeConnMultDst"><![CDATA[Branched signals cannot be fed into a Merge block. The signal from ''{0}'' output port {1,number,integer} is connected to both Merge block ''{2}'' input port {3,number,integer} and to ''{4}'' input port {5,number,integer}. To fix this error, either set <sldiag objui="configset" objparam="UnderspecifiedInitializationDetection">Underspecified initialization detection</sldiag> to 'Simplified' or insert a Signal Conversion block in Signal Copy mode and feed the output of the Signal Conversion block to only the Merge block.]]></entry>
    <entry key="InvMergeConnLoggedSignal">Logged signals cannot be fed into a Merge block. To fix this error, turn off signal logging for the signal connected to Merge block ''{0}'' input port {1,number,integer}.</entry>
    <entry key="InvMergeConnMultWrite">Each element of the signal from ''{0}'' output port {1,number,integer} must map to a unique element of the Merge block ''{2}'' input port {3,number,integer}. All elements of a signal connected to a Merge input should completely map onto a unique and contiguous region within the output port of the Merge block</entry>
    <entry key="InvMergeConnNonCondSubsysSrc">
      <![CDATA[
          Block ''{0}'' must be inside a conditionally executed subsystem that is not an Iterator subsystem because its <sldiag objui="outport" objparam="{1,number,integer}" objname="{0}">output port {1,number,integer}</sldiag> is connected to the Merge block ''{2}'' <sldiag objui="inport" objparam="{3,number,integer}" objname="{2}">input port {3,number,integer}</sldiag>.
      ]]>
    </entry>
    <entry key="InvMergeConnMultSrcTs">
      <![CDATA[
          Sample time of block ''{0}'' <sldiag objui="outport" objparam="{1,number,integer}" objname="{0}">output port {1,number,integer}</sldiag> which is currently {2} and sample time of block ''{3}'' <sldiag objui="outport" objparam="{4,number,integer}" objname="{3}">output port {4,number,integer}</sldiag> which is currently {5} must match because they merge to the Merge block ''{6}''.
      ]]>
    </entry>
    <entry key="InvalidMultiTaskMergeLocation" context="error">
      <![CDATA[
          Merge block ''{0}'' must only merge to root Outport block because it has sources in multiple tasks, but it merges to block ''{1}''. Other Merge and Variant Source blocks are valid destinations of the Merge block ''{0}'' if they eventually merge to a root Outport block.
      ]]>
    </entry>
    <entry key="InvalidMultiTaskMergeRootOutport" context="error"> Merge block ''{0}'' with sources in multiple tasks was unable to merge to the root Outport block ''{1}'' with sample time specification.
      <![CDATA[
        <actions exclusiveFixIts="yes">
          <action type="fixit" id="ResetRootOutputTsSpec" retvalue="false">
            <cmd>set_param(''{1}'', ''SampleTime'', ''-1'');</cmd>
            <txt>Set the ''SampleTime'' parameter of root Outport block ''{1}'' to ''-1''.</txt>
          </action>
        </actions>
      ]]>
    </entry>
    <entry key="InvalidMultiTaskMergeModelSetting" context="error">Connecting Merge block ''{0}'' to sources in multiple tasks is not supported.
      <![CDATA[
        <actions exclusiveFixIts="yes">
          <action type="fixit" id="EnableBIMO" retvalue="false">
            <cmd>set_param(''{1}'', ''AllowMultiTaskInputOutput'', ''on'');</cmd>
            <txt>Enable configuration parameter Allow multiple tasks to access inputs and outputs for model ''{1}''.</txt>
          </action>
        </actions>
      ]]>
    </entry>
    <entry key="AllMergeBlocksDoNotSupportPartialWrite">The merge block ''{0}'' has the parameter 'Ensure mutually exclusive and full writes' turned on whereas the merge block ''{1}'' has this parameter turned off. Merge blocks which are part of the same merge tree should have the same setting for this parameter. Therefore, ensure that all merge blocks within this merge tree set the parameter 'Ensure mutually exclusive and full writes' to either 'on' or 'off'.</entry>
    <entry key="InvMergeConnNonScalarSrc"><![CDATA[Signal from ''{0}'' <sldiag objui="outport" objparam="{1,number,integer}" objname="{2}">output port {1,number,integer}</sldiag> must be scalar since it is connected to Merge block ''{2}'', which has only one input port.]]></entry>
    <entry key="InvMergeConnRootInport">Invalid connection to ''{0}'' input port {1,number,integer}, from Inport ''{2}''. External signals from root level inports can not be merged with internal block output signals</entry>
    <entry key="InvMergeConnSrcResetOnDisable">Invalid connection from block ''{0}'' output port {1,number,integer} to Merge block ''{2}'' input port {3,number,integer}. Block ''{4}'' output port {5,number,integer} (or one of its sources) is configured to reset its value when disabled, and therefore cannot connect to a Merge block</entry>
    <entry key="InvMergePortWidths">Port width mismatch. For ''{0}'', the width+offset ({1,number,integer}) of input port {2,number,integer} is greater than the output port width ({3,number,integer})</entry>
    <entry key="InvMergeRunTimeMultipleWriters"><![CDATA[Output of Merge block ''{0}'' is being updated concurrently at t = {1} by both block ''{2}'' <sldiag objui="outport" objparam="{3,number,integer}" objname="{2}">output port {3,number,integer}</sldiag> and block ''{4}'' <sldiag objui="outport" objparam="{5,number,integer}" objname="{4}">output port {5,number,integer}</sldiag>. Ensure that the Merge block output is updated by only one of its input signals at every time step.
      <actions exclusiveFixIts="yes">
        <action type="suggestion" btn="apply">
        <cmd>set_param(''{6}'',''MergeDetectMultiDrivingBlocksExec'',''none'');</cmd>
        <txt>To disable this diagnostic for the model ''{6}'', set <sldiag objui="configset" objparam="MergeDetectMultiDrivingBlocksExec" objname="{6}">Detect multiple driving blocks executing at the same time step</sldiag> to ''none''.</txt>
        </action>
      </actions>
    ]]>
    </entry>
    <entry key="InvMergeRunTimeNoWriter"><![CDATA[Output of Merge block ''{0}'' is not being updated at t = {1} because none of the blocks connected to the input ports of the Merge block are active. Ensure that the Merge block output is updated by one of its input signals at every time step.
      <actions exclusiveFixIts="yes">
        <action type="suggestion" btn="apply">
        <cmd>set_param(''{2}'',''MergeDetectMultiDrivingBlocksExec'',''none'');</cmd>
        <txt>To disable this diagnostic for the model ''{2}'', set <sldiag objui="configset" objparam="MergeDetectMultiDrivingBlocksExec" objname="{2}">Detect multiple driving blocks executing at the same time step</sldiag> to ''none''.</txt>
        </action>
      </actions>
    ]]>
    </entry>
    <entry key="InvMergeUnequalPortWidthsWhenUsingConsistentOutportInit">Invalid parameter ''{0}'' specified for the Merge block ''{1}''. This parameter cannot be set to ''on'' when the parameter ''UnderspecifiedInitializationDetection'' of the model ''{2}'' is set to ''Simplified''</entry>
    <entry key="InvMultidimConcatInputPortDims"><![CDATA[Invalid port dimension {0} has been specified for <sldiag objui="inport" objparam="{1,number,integer}" objname="{2}">input port {1,number,integer}</sldiag> of ''{2}''. In multidimensional array mode, the sizes of dimensions other than the concatenate dimension must match for all input and output ports. This requirement is violated along dimension {3,number,integer} of this input port because the specified size {4,number,integer} is not the same as the size {5,number,integer} specified by some other port.]]></entry>
    <entry key="InfMultidimConcatInputPortDims"><![CDATA[Invalid port dimension {0} has been specified for <sldiag objui="inport" objparam="{1,number,integer}" objname="{2}">input port {1,number,integer}</sldiag> of ''{2}''. In multidimensional array mode, only the concatenate dimension can be unbounded. This requirement is violated along dimension {3,number,integer} of this input port.]]></entry>
    <entry key="InvMultidimConcatInputPortWidth"><![CDATA[Invalid port width has been specified for <sldiag objui="inport" objparam="{0,number,integer}" objname="{1}">input port {0,number,integer}</sldiag> of ''{1}''. In multidimensional array mode, the sizes of dimensions other than the concatenate dimension must match for all input and output ports. The specified width {2,number,integer} for this input port is not a multiple of {3,number,integer}, which is the size of dimension {4,number,integer} implied by one of the ports.]]></entry>
    <entry key="InvMultidimConcatOutputPortDims">Invalid port dimension {0} has been specified for the output port of ''{1}''. In multidimensional array mode, the sizes of dimensions other than the concatenate dimension must match for all input and output ports. This requirement is violated along dimension {2,number,integer} of the output port because the specified size {3,number,integer} is not the same as the size {4,number,integer} specified by some other port.</entry>
    <entry key="InfMultidimConcatOutputPortDims"><![CDATA[Invalid port dimension {0} has been specified for <sldiag objui="inport" objparam="{1,number,integer}" objname="{2}">output port {1,number,integer}</sldiag> of ''{2}''. In multidimensional array mode, only the concatenate dimension can be unbounded. This requirement is violated along dimension {3,number,integer} of this output port.]]></entry>
    <entry key="InvMultidimConcatOutputPortWidth">Invalid port width has been specified for the output port of ''{0}''. In multidimensional array mode, the sizes of dimensions other than the concatenate dimension must match for all input and output ports. The specified width {1,number,integer} for the output port is not a multiple of {2,number,integer}, which is the size of dimension {3,number,integer} implied by one of the ports.</entry>
    <entry key="InvMultidimConcatPortDimsTooLong">Invalid port dimensions for ''{0}''. In multidimensional array mode, the size of the concatenate dimension for the output port must be equal to the sum of the sizes of this dimension for all input ports; however this sum is larger than the maximum allowable 32-bit signed integer value.</entry>
    <entry key="InvMultidimConcatPortDimsMismatch1">Port dimensions mismatch between input and output ports of ''{0}''. In multidimensional array mode, the size of the concatenate dimension for the output port must be equal to the sum of the sizes of this dimension for all input ports. This requirement is violated because this sum is at least {1,number,integer}, which exceeds the size {2,number,integer} of the concatenate dimension for the output port.</entry>
    <entry key="InvMultidimConcatPortDimsMismatch2">Port dimensions mismatch between input and output ports of ''{0}''. In multidimensional array mode, the size of the concatenate dimension for the output port must be equal to the sum of the sizes of this dimension for all input ports. This requirement is violated because this sum is {1,number,integer}, which is not equal the size {2,number,integer} of the concatenate dimension for the output port.</entry>
    <entry key="InvNumSelDimsSpec">Invalid ''Number of sub-table selection dimensions'' parameter specified for block ''{0}''. The number must be greater than or equal to 0 and less than or equal to the ''Number of table dimensions'' parameter value.</entry>
    <entry key="InvPortNumber">Port number specified in ''{0}'' is invalid. Port numbers must be positive integer constants less than or equal to {1,number,integer}.</entry>
    <entry key="InvSFcnBlkName">Invalid S-function name specified in ''{0}''</entry>
    <entry key="InvSelBlkElParam">Invalid parameter ''{0}'' specified in ''{1}'' for dimension {2,number,integer}. This parameter must be in the range {3,number,integer} through {4,number,integer}</entry>
    <entry key="InvSelBlkElParam2">Invalid parameter ''{0}'' specified in ''{1}'' for dimension {2,number,integer} due to integer overflow.</entry>
    <entry key="InvSelBlkElParam3">Invalid parameter ''{0}'' specified in ''{1}'' for dimension {2,number,integer}. This parameter must be no less than {3,number,integer}</entry>
    <entry key="InvSelBlkElParamExpr">The expression of parameter ''{0}'' is invalid for dimension {1,number,integer} in ''{2}''</entry>
    <entry key="InvSelBlkIdxParam">Invalid parameter ''{0}'' specified in ''{1}''</entry>
    <entry key="InvSelBlkMxArrayParam" note="stringDatatypeUpdate">Invalid parameter ''{0}'' specified in ''{1}''. It should be a cell array of character vectors</entry>
    <entry key="InvSelOutWParam"><![CDATA[In ''{0}'', parameter ''{1}'' for dimension {2,number,integer} should be less than or equal to input port width {3,number,integer}]]></entry>
    <entry key="InvSelectionPortType"><![CDATA[Invalid data type at <sldiag objui="inport" objparam="{0}" objname="{2}">input port {0}</sldiag>{1,number,integer} of block ''{2}''. Selection ports support only built-in floating-point, integer, and fixed-point data types with a slope of 1.0, bias of 0.0, and exponent of 0.]]></entry>
    <entry key="InvStateSpaceXform">Inconsistent A,B,C,D matrices obtained in ''{0}'' when using transform "{1}"</entry>
    <entry key="InvToFromFileNameFull">Invalid file name ''{0}'' was specified in ''{1}''</entry>
    <entry key="InvToFromFileNameIncr">Invalid file name</entry>
    <entry key="InvVectSelInpWidth"><![CDATA[Parameter ''{0}'' specified in ''{1}'' is invalid. It should be a positive integer or -1 for inherit from input port <U>]]></entry>
    <entry key="InvWhileICPortConn">The actual source block ''{0}'' feeding the initial condition (IC) port of the While Iterator block ''{1}'' must be located outside the While Iterator subsystem ''{2}''.</entry>
    <entry key="InvalNumOutputPorts">The maximum number of outports for a Switch-Case or If ''{0}'' is 128</entry>
    <entry key="InvalidActSigSize">The width of the Active signal is {0,number,integer}. This value does not match the number of partitioned subarrays {1,number,integer} for subsystem ''{2}''. The number of partitioned subarrays can be adjusted by changing the parameter values specified in the block dialog of the For Each block ''{3}''.</entry>
    <entry key="DidNotOutlineRTBWithForeach">The code for the Rate Transition block ''{0}'' is not generated as separate functions since it is inside a For Each subsystem.</entry>
    <entry key="InvalidAsyncRTBDst">The asynchronous output port of Rate Transition block ''{0}'' connects to another Rate Transition block ''{1}''. An asynchronous output port of a Rate Transition block must connect directly to an asynchronous function call subsystem. Add a Rate Transition block before each input port and after each output port of an asynchronous function call subsystem. If two asynchronous function call subsystems are directly connected without branching, only one Rate Transition block is needed.</entry>
    <entry key="InvalidAsyncRTBSrc">The asynchronous input port of Rate Transition block ''{0}'' connects to another Rate Transition block ''{1}''. An asynchronous input port of a Rate Transition block must connect directly to an asynchronous function call subsystem. Add a Rate Transition block before each input port and after each output port of an asynchronous function call subsystem. If two asynchronous function call subsystems are directly connected without branching, only one Rate Transition block is needed.</entry>
    <entry key="AsyncRateTransBlkNotAllowedNoneInlinedSys">The rate transition block ''{0}'' cannot be placed in non-inlined subsystem. Changing the Code generation function packaging setting of the subsystem ''{1}'' to ''Inlined'' .</entry>
    <entry key="InvalidBlockName">Invalid block name ''{0}''. Block names may not begin or end with /</entry>
    <entry key="InvalidBusSelectorOutputSignals" note="stringDatatypeUpdate">The output signals of ''{0}'' must be a comma separated list of non-empty character vectors.</entry>
    <entry key="InvalidEnumStringCellArray" note="stringDatatypeUpdate">Parameter ''{0}'' specified in block ''{1}'' is invalid. Element {2,number,integer} in the cell array is not a valid character vector.</entry>
    <entry key="InvalidInputDim">The size of dimension {0,number,integer} of input {1,number,integer} to subsystem ''{2}'' must be a multiple of {3,number,integer}, the sum of the partition width {4,number,integer} and the partition offset {5,number,integer}. The subsystem, which contains a For Each block (''{6}''), can only partition an input signal into an integer number of subarrays.</entry>
    <entry key="InvalidIntParam">Parameter ''{0}'' of block ''{1}'' must be a scalar.</entry>
    <entry key="InvalidMxArrayParam" note="stringDatatypeUpdate">Invalid parameter ''{0}'' specified in block ''{1}''. It should be a cell array of character vectors</entry>
    <entry key="InvalidNegOperationDim">Parameter ''{0}'' in ''{1}'' must be a positive integer</entry>
    <entry key="InvalidNumTableDims">Invalid ''Number of table dimensions'' specified for block ''{0}''. Must be an integer between 1 and 30 and match the number of dimensions specified by the ''Table data'' parameter.</entry>
    <entry key="InvalidNumTableDimsForAkima">Invalid ''Number of table dimensions'' specified for block ''{0}'' with Akima spline interpolation method. Must be an integer between 1 and 6.</entry>
    <entry key="InvalidNumWorkspaceCoefficientsForAkima">The number of computed workspace coefficients ({0,number,integer}) in block ''{1}'' exceeds the maximum (2147483647). Specify a smaller 'Number of table dimensions' value or fewer breakpoints in a dimension.</entry>
    <entry key="InvalidNumberOfOperationDim">Parameter ''{0}'' in ''{1}'' must be a scalar</entry>
    <entry key="InvalidDimValueSingletonMatrix">Singleton matrix output is invalid. ''{0}'' in ''{1}'' must be greater than 1.</entry>
    <entry key="InvalidOutputDimensionsSize">Dimensions for parameter ''{0}'' in ''{1}'' must be scalar or two element 2-D vector.</entry>
    <entry key="InvalidSymbDimForIdentityMatrix">Symbolic dimensions for 'Identity Matrix' mode must be a vector of size 2.</entry>
    <entry key="InvalidOperationDimExceedsBound">Parameter ''{0}'' in ''{1}'' is larger than the number of dimensions of the signal at the input port</entry>
    <entry key="InvalidRTBTsMultiple">Rate Transition block ''{0}'' parameter ''Multiple of input port sample time'' must be a positive value</entry>
    <entry key="InvalidRTWFcnName">The function name ''{0}'' for code generation in subsystem ''{1}'' is not a valid function name</entry>
    <entry key="InvalidResetIdentifierName">The event name ''{0}'' is an invalid identifier. Valid identifiers start with a letter and contain no spaces or special characters.</entry>
    <entry key="InvalidResetIdentifierNameReserved">The Event Name ''{0}'' is not a valid function name, as it is a Simulink Coder reserved identifier</entry>
    <entry key="InvalidReinitIdentifierNameReserved">The Event Name ''{0}'' is not a valid function name, as it is a reserved identifier for default reinitialization</entry>
    <entry key="InvalidRTWFileName">The filename ''{0}'' for code generation in subsystem ''{1}'' is not a valid filename</entry>
    <entry key="InvalidResetSigSize">The width of the Reset signal is {0,number,integer}. This value does not match the number of partitioned subarrays {1,number,integer} for subsystem ''{2}''. The number of partitioned subarrays can be adjusted by changing the parameter values specified in the block dialog of the For Each block ''{3}''.</entry>
    <entry key="InvalidRowDimension">In ''{0}'' the number of rows in ''{1}'' must match the length of S.</entry>
    <entry key="InvalidStringCellArray" note="stringDatatypeUpdate">Parameter ''{0}'' specified in block ''{1}'' is invalid. Element {2,number,integer} in the cell array should be a character vector.</entry>
    <entry key="InvalidSumInputNumber">''{0}'' must have at least one input</entry>
    <entry key="IteratedInputDimsModeMismatch1">For subsystem ''{0}'', the dimension mode of all input signals must be the same because the subsystem contains a For Each block (''{1}'').</entry>
    <entry key="IteratorBlockExists">A For, While, or For Each block already exists in subsystem ''{0}''. Addition of another control block is not allowed.</entry>
    <entry key="NeighborhoodBlockExists">A Neighborhood block already exists in subsystem ''{0}''. Addition of another control block is not allowed.</entry>
    <entry key="InvalidCtrlPortAddedToInitTermOrResetSS">Addition of a control port not supported for ''{0}'' because ''{0}'' is an Initialize, Reinitialize, Reset, or Terminate subsystem.</entry>
    <entry key="JacobianTypeNotFound">Unknown Jacobian type for block {0}</entry>
    <entry key="LabelledConnectionNodeHasInvalidLabelString">The label specified for the block ''{0}'' is not a valid MATLAB variable name.</entry>
    <entry key="LinearizeComplexValue">In ''{0}'': Complex part of parameter value is ignored during linearization</entry>
    <entry key="LinearizeIsCustomizableAsGain">The block is analytically linearized. The user may want to linearize the block approximately as gain</entry>
    <entry key="LinearizeIsZeroAndCustomizableAsGain">The block is analytically linearized to zero. The user may want to linearize the block approximately as gain</entry>
    <entry key="LogOfNegative">Log of a negative number in ''{0}''</entry>
    <entry key="LogOfZero">Log of zero in ''{0}''</entry>
    <entry key="LogicBlkNeedsWideInput">''{0}'' when configured with one input port needs a wide vector (except when performing the "NOT", "AND", or "OR" operation). To resolve this error, either make sure that input is a wide vector, or replace this block with a Data Type Conversion block.</entry>
    <entry key="LookupIgnoreDupValues">Ignoring duplicate values at end points of table in ''{0}''</entry>
    <entry key="LookupInputIsNaN">Input to lookup table in ''{0}'' is NaN</entry>
    <entry key="LookupInputMustBeVector">The ''Vector of input values'' in block ''{0}'' must be a real vector that contains at least two elements</entry>
    <entry key="LookupInputVectorAfterDup">The ''Vector of input values'' in block ''{0}'' must be a vector that contains at least two elements after duplicate endpoints are removed</entry>
    <entry key="LookupInvDupEndpointChange">You cannot change the number of duplicate end points of the run-time parameter ''{0}'' in ''{1}'' from {2,number,integer} to {3,number,integer} while the model is simulating</entry>
    <entry key="LookupInvalidChangeToZeroVals">Invalid change made to the value of parameter ''{0}'' in ''{1}. The number of zeros in the vector of values cannot be changed during model execution</entry>
    <entry key="LookupMismatchedParams">The ''Vector of input values'' and ''Table data'' parameters of block ''{0}'' must have the same length</entry>
    <entry key="LookupNDCannotAnalyzeBpMsg">The linear search method in block ''{0}'' cannot compute an index for the breakpoint vector in dimension {1,number,integer}. This might occur, for example, if the block''s input signal contains a NaN. Consider eliminating any NaN values from the block''s input signals or specifying ''Binary search'' as the value of the block''s ''Index search method'' parameter</entry>
    <entry key="LookupNdEvenSpacingSpecificationSplineInvalid" context="error">Block ''{0}'' does not support ''Cubic spline'' and ''Akima spline' interpolation methods when breakpoint specification is set to ''Even spacing''. Use ''Explicit values'' instead.</entry>
    <entry key="LookupNDTooBigForCoverage">The lookup table in block ''{0}'' is too large for coverage reporting. It will be ignored during coverage recording.</entry>
    <entry key="LookupNdOutofRangeInputError">Input value of block ''{0}'' exceeds range of breakpoint vector for dimension {1,number,integer}.</entry>
    <entry key="EnforceLookupNdOutofRangeInputError">Input value of block ''{0}'' exceeds range of breakpoint vector for dimension {1,number,integer}. Either clear  the 'Assume input is within range' parameter or limit input to be within the range of the table dimensions.</entry>
    <entry key="LookupNdOutputDataTypeInheritsUnsupportedType">Output data type of block ''{0}'' is set to "Inherit: Same as first input". The Output data type does not support the inherited type. Either change the Output data type setting from "Inherit: Same as first input" or change the first input data type.</entry>
    <entry key="LookupNdSplineHomogeneousInput">Block ''{0}'' supports ''Cubic spline'' and ''Akima spline'' interpolations only when all the Breakpoints data types are ''Inherit: Same as corresponding input''</entry>
    <entry key="LookupNdSplineHomogeneousInputParameterPort">In block ''{0}'', a data type mismatch occurs between input port {1,number,integer} and input port {2,number,integer}. ''Cubic spline'' and ''Akima spline'' interpolation methods require the input and corresponding breakpoint data types to match.</entry>
    <entry key="LookupNdComparisonDataTypeIsNotIdeal">In block ''{0}'',  there is no ideal comparison data type which can exactly represent both input and breakpoint data for dimension {1,number,integer}. Please change either the input data types or the breakpoint data types.</entry>
    <entry key="LookupNdSplineHomogeneousOutput">Block ''{0}'' supports ''Cubic spline'' and ''Akima spline'' interpolations only when the Table data type is ''Inherit: Same as output''</entry>
    <entry key="LookupNdSplineHomogeneousOutputParameterPort">In block ''{0}'', a data type mismatch occurs between input port {1,number,integer} and the Output data type. ''Cubic spline'' and ''Akima spline'' interpolation methods require the Table and Output data types to match.</entry>
    <entry key="LUTObjDoesNotSupportSpline">Block ''{0}'' specifies data using Lookup Table Object format. Spline interpolation/extrapolation is not supported for this format. Consider using a different method. </entry>
    <entry key="LUTObjDoesNotSupportAkimaSpline">Block ''{0}'' does not support Akima spline interpolation method when 'Data specification' is set to ''Lookup table object''. Consider setting 'Data specification' to 'Table and Breakpoints' or using a different 'Interpolation method'.</entry>
    <entry key="SplineDoesNotSupportEnumBP">In block ''{0}'', the data type of parameter ''{1}'' is an enumerated data type, which is not supported by ''Cubic spline'' and ''Akima spline'' interpolation methods.</entry>
    <entry key="LUTObjectDoesNotMatchBlockDimensions">Value of 'Number of table dimensions' parameter in block ''{0}'' ({1,number,integer}) must match the number of breakpoints of the referenced Simulink.LookupTable object ({2,number,integer}).</entry>
    <entry key="LookupNdMaxIndexIsNotValid">In block ''{0}'', the setting of parameter ''{1}'' is not valid. It should be a real scalar or vector. The individual value represents the maximum index value of corresponding break point data. As for this block, the correct value for this parameter is ''{2}''.</entry>
    <entry key="LookupNdMaxIndexIsNotDefined">The parameter ''{0}'' of ''{1}'' is not defined. When parameter ''{2}'' is checked, ''{3}'' must be defined.</entry>
    <entry key="LookupNdMaxIndexIsNotTunable">The parameter ''{0}'' of ''{1}'' is not tunable. When parameter ''{2}'' is checked, ''{3}'' must be tunable parameter.</entry>
    <entry key="LookupNdMaxIndexDataTypeIsNotSupported">In block ''{0}'', the data type for parameter ''{1}'' is ''{2}'', which is not supported. Only built-in integer types and floating point types are supported. </entry>
    <entry key="LookupTableMustBeVector">The ''Table data'' in block ''{0}'' must be a vector that contains at least two elements</entry>
    <entry key="LookupNdMultidimensionalInputsOutputsNotSupported">Block ''{0}'' does not support multidimensional signals as inputs or outputs.</entry>
    <entry key="LookupTableMismatchEvenspacingSpecification"> Block ''{0}'' uses the Simulink.LookupTable object to specify table data and the ''BreakpointsSpecification'' of the referenced Simulink.LookupTable object is set to ''Even spacing''. However, the 'Index search method' parameter on the Algorithm tab of  block ''{0}'' is not set to ''Evenly spaced points''. The block will ignore this setting. To remove this warning, set the 'Index search method' parameter to ''Evenly spaced points''.</entry>
    <entry key="MATLABFcnBadDataType">Error in ''{0}''. Evaluation of expression resulted in an invalid output. Only finite double vector or matrix outputs are supported</entry>
    <entry key="MATLABFcnEvalErr">Error in ''{0}'' while evaluating expression.</entry>

    <entry key="LockedMATLABFunction">The MATLABFunctionConfiguration object cannot be modified because the library containing the MATLAB Function block is locked. Unlock the library to make changes to the block. </entry>
    <entry key="LinkedMATLABFunction">The MATLABFunctionConfiguration object cannot be modified because the MATLAB Function block is currently linked to a library. Modify the block from the library or break the link to the library to modify this block.</entry>
    <entry key="MATLABFcnIncompleteSimState">The operating point for the MATLAB function block {0} may be incomplete because the operating point does not include any persistent variables in the specified MATLAB function or expression. See the Simulink documentation for the limitations of the operating point save/restore for a detailed description.</entry>
    <entry key="MATLABFcnInv1DCollapse">Invalid setting for parameter ''{0}'' of {1}. The 2-D output dimensions specified contradict the option to collapse the function output into a 1-D vector</entry>
    <entry key="MATLABFcnInvInDims1"><![CDATA[Cannot set <sldiag objui="inport" objparam="1" objname="{0}">input port 1</sldiag> of {0} to have the dimensions {1}. For an input with these dimensions, the MATLAB function or expression specified produces an output with {2,number,integer} elements, whereas the output has already been set to have {3,number,integer} elements]]></entry>
    <entry key="MATLABFcnInvInDims2"><![CDATA[Cannot set <sldiag objui="inport" objparam="1" objname="{0}">input port 1</sldiag> of {0} to have the dimensions {1}. For an input with these dimensions, the MATLAB function or expression specified produces an matrix of dimensions {2}, whereas the output has already been set to be a 1-D vector]]></entry>
    <entry key="MATLABFcnInvInDims3"><![CDATA[Cannot set <sldiag objui="inport" objparam="1" objname="{0}">input port 1</sldiag> of {0} to have the dimensions {1}. For an input with these dimensions, the MATLAB function or expression specified produces an matrix of dimensions {2}, whereas the output has already been set to have the dimensions {3}]]></entry>
    <entry key="MATLABFcnInvMultiDims">Cannot set input dimensions of {0}. The MATLAB function or expression specified returns outputs whose dimensions are greater than 2</entry>
    <entry key="MATLABFcnInvParamSetting">Parameter ''Output dimensions'' specified in ''{0}'' is invalid. Output dimensions must be either -1 (dynamically sized), or a scalar greater than or equal to 0, or a positive, non-zero vector of length 2</entry>
    <entry key="MATLABFcnOutputFcnErr">Error evaluating MATLAB function in ''{0}''</entry>
    <entry key="MATLABFcnOutputIsComplex">The output port signal type of ''{0}'' is real (non-complex), however, the evaluated output is complex. Consider setting the ''{1}'' to complex</entry>
    <entry key="MATLABFcnOutputMatrixTypeErr">Error in ''{0}'' while computing the output. The result was a {1} matrix when a {2} matrix was expected</entry>
    <entry key="MATLABFcnOutputWidthErr">Error in ''{0}'' while computing the output. The width of the result was {1,number,integer} when a width of {2,number,integer} was expected</entry>
    <entry key="MATLABFcnReshapeWarning">''{0}'' generated a {1} matrix data. It automatically reshaped the data to a one dimensional vector with {2,number,integer} elements</entry>
    <entry key="MergeBlockDrivenByConstantSampleTime">In {1}, when the merge block ''{0}'' receives a constant value and non-constant sample times, one of these conditions must hold:
    \n *  The source of the constant value is a grounded signal.
    \n *  The source of the constant value is a constant block with a non-tunable parameter.
    \n     - There is only one constant block that feeds the merge block.
    \n     - All other input signals to the merge block are from conditionally executed subsystems.
    \n     - The merge block and the outport blocks of all conditionally executed subsystems should not specify any initial outputs.</entry>
    <entry key="MPSwitchDeadPorts">The control port data type of block ''{0}'' cannot represent the values ''{1}''. These values are being used as data port indices, the corresponding data ports are dead ports and will never be used in simulation.</entry>
    <entry key="MPSwitchControlInputRangeError">For block ''{0}'', control port value ''{1}'' is out-of-range. The value should be between ''{2}'' and ''{3}'' for this block.</entry>
    <entry key="MPSwitchControlInputOORIndexValue">For block ''{0}'', control port value ''{1}'' is not in between ''{2}'' and ''{3}''. To suppress this message and use the default port, you can change the settings of ''Diagnostic for default case'' to ''None''</entry>
    <entry key="MPSwitchEnumTypeWithContiguousInputs"><![CDATA[The ''Data port order'' for block ''{0}'' is set to be contiguous and the data type of the control port for this block is of enumerated type. If the control port is of enumerated type then the  ''Data port order'' should be set to ''Specify indices''. You can also use <a href="matlab:upgradeadvisor(bdroot)">Upgrade Advisor</a> to update this block]]></entry>
    <entry key="MPSwitchInvalidControlPortValue">The control value ''{0}'' for ''{1}'' does not correspond to any data port indices. To suppress this message and use the default port, you can change the settings of ''Diagnostic for default case'' to ''None''</entry>
    <entry key="MPSwitchInvalidValueForEnumDataType">The input of ''{0}'' is of an enumerated data type that does not include the underlying value {1,number,integer} (the index of data port {2,number,integer})</entry>
    <entry key="MPSwitchNonIntegerControlInput">Non integer control signal truncated in ''{0}''</entry>
    <entry key="MPSwitchDynamicArrayReqScalarControlPort">When the output for ''{0}'' is a dynamic array signal, the input signal to the control port must be a scalar.</entry>
    <entry key="MPSwitchDoesNotSupportVarDimsMode">The input port {1, number, integer} of block ''{0}'' is a variable-size signal, the block does not support variable-size input signals.</entry>
    <entry key="MPSwitchOneDataPortWithIndexSpecification">The option ''Specify indices'' for ''Data port order'' is selected for block ''{0}''. For this option, one data port case is not supported. Please specify values for more than one data port in ''Data port indices''.</entry>
    <entry key="MPSwitchTurnOnVarDimsMode">The signal dimensions of the data input ports of Multiport Switch block ''{0}'' are different. To support a variable-size output signal, on the "Signal Attributes" pane of the block dialog, select the parameter "Allow different data input sizes (Results in variable-size output signal)".</entry>
    <entry key="MPSwitchVarDimsModeFrameReqFirstDimMatch">When the "Allow different data input sizes (Results in variable-size output signal)" parameter is selected for ''{0}'', and the input signals are frame-based signals, the first dimension of all input signals must be the same size.</entry>
    <entry key="SwitchVarDimsModeReqInputFrameMatch">When the "Allow different data input sizes (Results in variable-size output signal)" parameter is selected for ''{0}'', the data input signals must have the same sampling mode.</entry>
    <entry key="MPSwitchVarDimsModeReqMultipleDataPorts">When the "Allow different data input sizes (Results in variable-size output signal)" parameter is selected for ''{0}'', the number of input data ports must be greater than 1.</entry>
    <entry key="MPSwitchVarDimsModeReqOneBranchFitOther">When the "Allow different data input sizes (Results in variable-size output signal)" parameter is selected for ''{0}'', the signal at one input port must have dimensions that are greater than or equal to the corresponding dimensions of any other input signal.</entry>
    <entry key="MPSwitchCtrlPortEnumWithNumTypeDataPorts">For block ''{0}'', the data type of the control port is enumerated type but the data ports specified in ''Data port indices'' are numerical type. Please specify ''Data port indices'' using the corresponding enumerated type.</entry>
    <entry key="MPSwitchCtrlPortNumTypeWithEnumDataPorts">For block ''{0}'', the data type of the control port is numerical type but the data ports specified in ''Data port indices'' are enumerated type. Please specify ''Data port indices'' using the corresponding numerical type or specify the control port data type as enumerated type using upstream blocks.</entry>
    <entry key="MPSwitchControlInputOORDataType">For block ''{0}'', control port value ''{1}'' of floating point data type must be within the data type range of 'int' in production hardware.</entry>
    <entry key="MSFBInAccelerateModeWithoutTLC">The method block.SetAccelRunOnTLC(true) is specified for the MATLAB S-function ''{0}'' in block ''{1}''. However, a corresponding ''{2}.tlc'' file does not exist in the current working directory, the MATLAB S-function directory ''{3}'', or the directory ''{4}''</entry>
    <entry key="MSFBMFileExistsWithoutTLC">The corresponding  ''{0}.tlc'' file for the MATLAB S-function ''{1}'' in block ''{2}'' must be located in the current working directory, the MATLAB S-function directory ''{3}'', or the directory ''{4}''</entry>
    <entry key="MSFB_AutoRegRTPCalledInUnallowedPhase">''{0}'' of MATLAB S-Function ''{1}'' can be called only in the PostPropagationSetup method of ''{2}''</entry>
    <entry key="MSFB_AutoUpdateRTPCalledInUnallowedPhase">''AutoUpdateRuntimePrms'' of MATLAB S-Function ''{0}'' can be called only in the ProcessParameters method of ''{1}''</entry>
    <entry key="MSFB_BlockMethodDoesNotExist">Invalid function handle specified for method ''{0}'' in  MATLAB S-Function ''{1}'' in ''{2}''</entry>
    <entry key="MSFB_BlockMethodFailed">Error evaluating registered method ''{0}'' of MATLAB S-Function ''{1}'' in ''{2}''. The following is the MATLAB call stack (file names and line numbers) that produced this error: {3}</entry>
    <entry key="MSFB_BlockMethodFailed_NoStacktrace">Error evaluating registered method ''{0}'' of MATLAB S-Function ''{1}'' in ''{2}''.</entry>
    <entry key="MSFB_DworkRegComplexDynamic">The Complexity of Dwork {0,number,integer} in ''{1}'' can only be ''Real'' or ''Complex''</entry>
    <entry key="MSFB_DworkRegDatatypeDynamic">The data type of Dwork {0,number,integer} in ''{1}'' cannot be dynamically-typed. Data type of Dwork must be one of the MATLAB ''uint8'', ''uint16'', ''uint32'', ''int8'', ''int16'', ''int32'', ''single'', or ''double'' data types</entry>
    <entry key="MSFB_DworkRegNameEmpty" note="stringDatatypeUpdate">The name of Dwork {0,number,integer} in ''{1}'' cannot be an empty character vector</entry>
    <entry key="MSFB_DworkRegWidthDynamic">The width of Dwork {0,number,integer} in ''{1}'' must be a positive integer</entry>
    <entry key="NoCompiledData">There is no compiled data available. The compiled data is needed to query DWork offset.</entry>
    <entry key="DWorkRecListIsNULL">The DWork record list of the block is null.</entry>
    <entry key="MSFB_InvNumPrms">The number of dialog parameters of ''{0}'' cannot be negative</entry>
    <entry key="MSFB_InvalidDlgPrmTunableSetting">Invalid setting specified for the tunability of the dialog parameters of ''{0}'' in ''{1}''. The tunability for dialog parameters should be a [1x{2,number,integer}] cell array of the form '{'''Tunable'',''Nontunable'',''SimOnlyTunable'',...'}'</entry>
    <entry key="MSFB_InvalidInputIndexForDependencyRuleTerm">Invalid input port indices specified for the second input of method ''AddOutputDimsDependencyRules'' for ''{0}''. The input port indices should be an array of positive integers in the range from 1 to {1,number,integer}</entry>
    <entry key="MSFB_InvalidOutputIndexForDependencyRuleTerm1">Invalid output port index specified for the first input of method ''AddOutputDimsDependencyRules'' for ''{0}''. The output port index should be 1</entry>
    <entry key="MSFB_InvalidOutputIndexForDependencyRuleTerm2">Invalid output port index specified for the first input of method ''AddOutputDimsDependencyRules'' for ''{0}''. The output port index should be in the range from 1 to {1,number,integer}</entry>
    <entry key="MSFB_InvalidSetDimFcnForDependencyRuleTerm">Invalid argument specified for the third input of method ''AddOutputDimsDependencyRules'' for ''{0}''. The third input should be a function handle</entry>
    <entry key="MSFB_InvalidVarSizeTypeSetting">Invalid setting specified for ''SignalSizesComputeType'' of ''{0}''. The ''SignalSizesComputeType'' should be ''FromInputSize'' or ''FromInputValueAndSize''</entry>
    <entry key="MSFB_MFileNotExist">Level-2 MATLAB S-function ''{0}'' does not exist.</entry>
    <entry key="MSFB_NumPrmsError">The expected number of dialog parameters of ''{0}'' ({1,number,integer}) does not match the number of dialog parameters specified in the MATLAB S-Function parameters dialog box ({2,number,integer})</entry>
    <entry key="MSFB_RTWInvPrmName" note="stringDatatypeUpdate">The parameter name of MATLAB S-Function ''{0}'' in ''{1}'' must be a character vector</entry>
    <entry key="MSFB_RTWInvStrPrmVal" note="stringDatatypeUpdate">The parameter ''{0}'' of  MATLAB S-Function ''{1}'' in ''{2}'' must be a character vector</entry>
    <entry key="MSFB_SetDlgPrmPropBeforeSetNumDlgPrms">The number of dialog parameters of MATLAB S-Function ''{0}'' in ''{1}'' should be set before the tunability of the dialog parameters is set</entry>
    <entry key="MSFB_SetOutputDimsMethodFailed">Error evaluating setOutputDims method that is registered using ''AddOutputDimsDependencyRules'' for MATLAB S-Function ''{0}'' in ''{1}''. The following is the MATLAB call stack (file names and line numbers) that produced this error: {2}</entry>
    <entry key="MSFB_SetOutputDimsMethodFailed_NoStacktrace">Error evaluating setOutputDims method that is registered using ''AddOutputDimsDependencyRules'' for MATLAB S-Function ''{0}'' in ''{1}''.</entry>
    <entry key="MSFB_Setup">Error evaluating the initialization for MATLAB S-Function ''{0}''. The following is the MATLAB call stack (file names and line numbers) that produced this error: {1}</entry>
    <entry key="MSFB_Setup_NoStacktrace">Error evaluating the initialization for MATLAB S-Function ''{0}''.</entry>
    <entry key="MSFB_UnknownMethod">Error registering method for ''{0}''. Method ''{1}'' is unknown</entry>
    <entry key="MSFB_WriteRTWPrmCalledInUnallowedPhase">''WriteRTWParam'' of MATLAB S-Function ''{0}'' can be called only in the WriteRTW method of ''{1}''</entry>
    <entry key="MSFCN_NOT_PST_WITH_PSTFCN">In ''{0}'', you have registered either ''SetInputPortSampleTime'' or ''SetOutputPortSampleTime'' method without initializing port sample times in the block setup method</entry>
    <entry key="MSFcnCustomSimStateNotSupported">The ''{0}'' setting for SimStateCompliance in the MATLAB S-function ''{1}'' in block ''{2}'' is not supported</entry>
    <entry key="MSFcnInvCompNonRuntimeRate"> ''{0}'' has an invalid constant sample time. Discrete states are not allowed with constant sample times.</entry>
    <entry key="MSFcnInvTnext">Time of next hit, {0}, specified in S-function ''{1}'' in ''{2}'' must be greater than previous time hit value of {3}</entry>
    <entry key="MSFcnInvalidDWorkIndex">Invalid dwork indices specified for the method ''MSFcnDWorkRequireResetForSignalSize'' for ''{0}''. The input port indices should be an array of positive integers in the range from 1 to {1,number,integer}</entry>
    <entry key="MSFcnInvalidRTPNameSpec" note="stringDatatypeUpdate">Invalid run-time parameter names specified in ''{0}'' when calling ''AutoRegRuntimePrms'' method. The run-time parameter names should be a cell array containing character vectors and of length {1,number,integer}</entry>
    <entry key="MSFcnInvalidSimStateComplianceSetting" note="stringDatatypeUpdate">The setting for SimStateCompliance in the MATLAB S-function ''{0}'' in block ''{1}'' is invalid. This setting should be one of the following character vectors: {2}</entry>
    <entry key="MSFcnMissingSetInputDimsMode">Level-2 MATLAB S-function ''{0}'' in ''{1}'' does not have a ''SetInputPortDimensionsMode'' method. When a Level-2 MATLAB S-function with multiple output ports has inherited dimensions mode setting for any of its ports, it is necessary to register a ''SetInputPortDimensionsMode'' method</entry>
    <entry key="MSFcnMissingSetPortSampleTime">Level-2 MATLAB S-function ''{0}'' in ''{1}'' has port-based sample times, but it does not register ''SetInputPortSampleTime'' or ''SetOutputPortSampleTime'' method</entry>
    <entry key="MSFcnSimViewingDeviceWithOutput">Level-2 MATLAB S-function ''{0}'' in ''{1}'' specifies ''SetSimViewingDevice(true)'' , which prevents an output port from being created for the S-function.</entry>
    <entry key="MSFcnSimStateMethodNotFound">The Level-2 MATLAB S-function ''{0}'' in block ''{1}'' has specified its simulation operating point compliance to ''{2}'', however it does not have the ''{3}'' method</entry>
    <entry key="MSfcnRedundantDimsDepRule">Level-2 MATLAB S-function ''{0}'' in ''{1}'' has registered a redundant output dimension dependency rule for output {2,number,integer}. The input index registered in rule {3,number,integer} is a subset or super-set of an existing rule. For example, a rule that contains input index "1, 2" is redundant if another rule already contains the input index "1", "2" or "1, 2"</entry>
    <entry key="MatCheckPureSingularity"><![CDATA[Input matrix at <sldiag objui="inport" objparam="{0,number,integer}" objname="{1}">input port {0,number,integer}</sldiag> of ''{1}'' at time {2} is singular.<actions exclusiveFixIts="no"><action type="suppression"></action></actions>]]></entry>
    <entry key="MatCheckSingularity"><![CDATA[Input matrix at <sldiag objui="inport" objparam="{0,number,integer}" objname="{1}">input port {0,number,integer}</sldiag> of ''{1}'' at time {2} is close to being singular.]]></entry>
    <entry key="MatDivNoSquareMatrix_1D"><![CDATA[Invalid dimensions specified for the <sldiag objui="inport" objparam="{0,number,integer}" objname="{1}">input port {0,number,integer}</sldiag> of ''{1}''. Matrix division is only supported for square matrices. However, the input signal is a 1-dimensional vector with {2,number,integer} elements]]></entry>
    <entry key="MatDivNoSquareMatrix_2D"><![CDATA[Invalid dimensions specified for the <sldiag objui="inport" objparam="{0,number,integer}" objname="{1}">input port {0,number,integer}</sldiag> of ''{1}''. Matrix division is only supported for square matrices. However, the input signal is a {2} matrix]]></entry>
    <entry key="MatGainInvInDimsKuBasic"><![CDATA[Invalid dimensions specified for <sldiag objui="inport" objparam="1" objname="{0}">input port 1</sldiag> in ''{0}''. The gain specified has dimensions {1}. But the input dimensions are not suitable for generating the matrix product of the gain with the input signal. The first dimension of input signal must match the last dimension of the gain]]></entry>
    <entry key="MatGainInvInDimsuKBasic"><![CDATA[Invalid dimensions specified for <sldiag objui="inport" objparam="1" objname="{0}">input port 1</sldiag> in ''{0}''. The gain specified has dimensions {1}. But the input dimensions are not suitable for generating the matrix product of the input signal with the gain. The last dimension of input signal must match the first dimension of the gain]]></entry>
    <entry key="MatGainInvOutDimsKuBasic"><![CDATA[Invalid dimensions specified for <sldiag objui="outport" objparam="1" objname="{0}">output port 1</sldiag> in ''{0}''. The gain specified has dimensions {1}. But the output dimensions are not suitable for generating the matrix product of the gain with the input signal. The first dimension of output signal must match the first dimension of the gain. And the last dimension of output signal must match the last dimension of the input signal]]></entry>
    <entry key="MatGainInvOutDimsuKBasic"><![CDATA[Invalid dimensions specified for <sldiag objui="outport" objparam="1" objname="{0}">output port 1</sldiag> in ''{0}''. The gain specified has dimensions {1}. But the output dimensions are not suitable for generating the matrix product of the input signal with the gain. The first dimension of output signal must match the first dimension of the input signal. And the last dimension of output signal must match the last dimension of the gain]]></entry>
    <entry key="MatGainInvInDimsKu"><![CDATA[Invalid dimensions specified for <sldiag objui="inport" objparam="1" objname="{0}">input port 1</sldiag> in ''{0}''. The gain specified has dimensions {1}, while the input is being set to have the dimensions {2}. These dimensions are not suitable for generating the matrix product of the gain with the input signal]]></entry>
    <entry key="MatGainInvInDimsuK"><![CDATA[Invalid dimensions specified for <sldiag objui="inport" objparam="1" objname="{0}">input port 1</sldiag> in ''{0}''. The input dimensions are being set to be {1}, while the specified gain has dimensions {2}. These dimensions are not suitable for generating the matrix product of the input signal with the gain]]></entry>
    <entry key="MatGainInvOutDimsKu"><![CDATA[Invalid dimensions specified for <sldiag objui="outport" objparam="1" objname="{0}">output port 1</sldiag> in ''{0}''. The output dimensions are being set to be {1}, while the specified gain has dimensions {2}. These dimensions are not suitable for generating the matrix product of the gain with the input signal]]></entry>
    <entry key="MatGainInvOutDimsuK"><![CDATA[Invalid dimensions specified for <sldiag objui="outport" objparam="1" objname="{0}">output port 1</sldiag> in ''{0}''. The output dimensions are being set to be {1}, while the specified gain has dimensions {2}. These dimensions are not suitable for generating the matrix product of the input signal with the gain]]></entry>
    <entry key="MatGainNoND">Invalid gain parameter specified for ''{0}''. When the block is in one of the matrix gain modes, the gain parameter must have at most two dimensions</entry>
    <entry key="MatMultBadDimsInp"><![CDATA[Matrix multiply dimensions propagation error. Error occurred while setting <sldiag objui="inport" objparam="{0,number,integer}" objname="{1}">input port {0,number,integer}</sldiag> of ''{1}'' to have the dimensions {2}. A possible cause for this error is that these dimensions do not agree with the partial dimensions information present on other ports]]></entry>
    <entry key="MatMultBadDimsOut">Matrix multiply dimensions propagation error. Error occurred while setting output port of ''{0}'' to have the dimensions {1}. A possible cause for this error is that these dimensions do not agree with the partial dimensions information present on other ports</entry>
    <entry key="MatMultDivOnlyDblAndSgl">The product block ''{0}'' is in matrix operations mode, but the block has data type combinations that are not supported in this mode. When matrix inverse is required, the input and output data types must all be double or must all be single.</entry>
    <entry key="MatMultInput2Dims"><![CDATA[Cannot set the dimensions of <sldiag objui="inport" objparam="{0,number,integer}" objname="{1}">input port {0,number,integer}</sldiag> of ''{1}'' to have {2,number,integer} dimensions. It only supports two-dimensional data]]></entry>
    <entry key="MatMultOutput2Dims"><![CDATA[Cannot set the dimensions of <sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">output port {0,number,integer}</sldiag> of ''{1}'' to have {2,number,integer} dimensions. It only supports two-dimensional data]]></entry>
    <entry key="MatSelBadInDims1"><![CDATA[Invalid dimensions being set to input port <U> of ''{0}''. The port is being set to have a width of {1} which is inconsistent with the dimensions {2} obtained by aggregating parameters and port dimensions]]></entry>
    <entry key="MatSelBadInDims2"><![CDATA[Invalid dimensions being set to input port <U> of ''{0}''. The port is being set to have the dimensions {1}, while an aggregation of parameters and port dimensions indicate that the dimensions should be consistent with {2}]]></entry>
    <entry key="MatSelBadOutDims1"><![CDATA[Invalid dimensions being set to output port <Y> of ''{0}''. The port is being set to have a width of {1} which is inconsistent with the dimensions {2} obtained by aggregating parameters and port dimensions]]></entry>
    <entry key="MatSelBadOutDims2"><![CDATA[Invalid dimensions being set to output port <Y> of ''{0}''. The port is being set to have the dimensions {1}, while an aggregation of parameters and port dimensions indicate that the dimensions should be consistent with {2}]]></entry>
    <entry key="MatSelInvDataInpDims"><![CDATA[''{0}'' expects matrix input at input port <U>. The number of dimensions of the input port <U> can not be larger than 2. Attempt to set the number of dimensions to {1,number,integer}.]]></entry>
    <entry key="MatSelbadRowOrColDims"><![CDATA[Invalid dimensions being set to input port <Idx{0,number,integer}> of ''{1}''. The port is being set to have the dimensions {2} even though this port can accept only vector signals]]></entry>
    <entry key="MatchingFromNotFound">Matching "From" for "Goto" ''{0}'' not found</entry>
    <entry key="MatchingGotoNotFound">Matching "Goto" for "From" ''{0}'' not found</entry>
    <entry key="MergeICInconsistency">The {0} parameter specified on ''{1}'' and ''{2}'' are inconsistent. {3} specified on the source ''{4}'' will be ignored. This warning can be avoided either by setting {5} on both to the same value, or by setting {6} on the source to [] (empty matrix)</entry>
    <entry key="MergeInputCrossForEachSSBoundary">Input {0,number,integer} of Merge block ''{1}'' connects to Output {2,number,integer} of block ''{3}''. This connect crosses the boundary of subsystem ''{4}''. This is not supported because subsystem ''{5}'' contains a For Each block (''{6}'').</entry>
    <entry key="MinMaxInputWithDiffBias">''{0}'' has inputs with different biases. In this situation, automatically determining the data type and scaling of the output is not supported. Please, manually set the output''s data type and scaling.</entry>
    <entry key="MinMaxBooleanInputOutputType">When one input or output data type for block {0} is boolean, all data types must be boolean.</entry>
    <entry key="ModuleNameExists">Cannot register module ''{0}''. This module has been registered with Simulink</entry>
    <entry key="MultipleGotoSrcNotAllowed0">Multiple signal sources found for Goto Tag Visibility ''{0}''</entry>
    <entry key="MultipleGotoSrcNotAllowed1">First source is From ''{0}''</entry>
    <entry key="MultipleGotoSrcNotAllowed2">Second source is From ''{0}''</entry>
    <entry key="MultipleGotoTagsFound0">Multiple Gotos found with tag named ''{0}''</entry>
    <entry key="MultipleGotoTagsFound1">First offending Goto ''{0}''</entry>
    <entry key="MultipleGotoTagsFound2">Second offending Goto ''{0}''</entry>
    <entry key="MuxBlkUsedAsBus_ByBusSelector">The output of Mux block ''{0}'' is treated as a bus signal by block ''{1}''.</entry>
    <entry key="MuxBlkUsedAsBus_complexity">Mux block ''{0}'' outputs a bus signal containing signals of different signal types (real/complex).</entry>
    <entry key="MuxBlkUsedAsBus_datatype">Mux block ''{0}'' outputs a nonvirtual bus signal or a virtual bus signal containing signals of different data types.</entry>
    <entry key="MuxBlkUsedAsBus_dimension">Mux block ''{0}'' outputs a bus signal containing signals of different dimensionalities.</entry>
    <entry key="MuxBlkUsedAsBus_frame">Mux block ''{0}'' outputs a bus signal containing signals with different sampling modes (sample-based/frame-based).</entry>
    <entry key="MuxCannotJoinMatrices">Invalid setting for dimensions of input port of ''{0}''. It cannot be used to concatenate matrices</entry>
    <entry key="MuxDimsInfoMismatch1">Invalid setting for dimensions of output port of ''{0}''. The port is being set to have dimensions that correspond to {1,number,integer} multiplexed signals. Not enough information has been specified in the block dialog to determine how the signals at the input generate this multiplexed signal. Try using the cell array format to specify the input port dimensions</entry>
    <entry key="MuxDimsInfoMismatch2">Invalid setting for dimensions of output port of ''{0}''. This port is being set to have dimensions that correspond to {1,number,integer} multiplexed signals, while the input ports have been set to generate {2,number,integer} multiplexed signals</entry>
    <entry key="MuxInValidPortWidths">Invalid setting for output port dimensions of ''{0}''. The dimensions are being set to {1}. This is not valid because the total number of input and output elements are not the same</entry>
    <entry key="MuxInvalidDimsInStrictNonBusMode_Dims">Invalid dimensions {0} encountered from the input ports of Mux block ''{1}''. Mux blocks with multiple input signals can accept only scalars, 1-D vectors, and either row-vectors or column-vectors (but not both). See the documentation for the Mux block for more information.</entry>
    <entry key="MuxInvalidDimsInStrictNonBusMode_Prm">Invalid value was specified for parameter ''{0}'' in Mux block ''{1}''. Mux blocks with multiple input signals can accept only scalars, 1-D vectors, and either row-vectors or column-vectors (but not both). See the documentation for the Mux block for more information.</entry>
    <entry key="MuxMayNotSpecifyPropertiesViaObject">Invalid setting for ''{0}'' parameter in ''{1}''; this option may only be selected for a Bus Creator block.</entry>
    <entry key="MuxNonuniformDistribution">Nonuniform distribution of output to dynamically sized inputs in block ''{0}''</entry>
    <entry key="MuxOrDemuxBadCellParam">Invalid cell array used in parameter {0} of ''{1}'' to specify port information. Each cell array element must either be vector of finite non-zero positive integers or a cell array with only such vector elements. A cell element may be -1 if the corresponding port''s dimensions are unknown</entry>
    <entry key="MuxOrDemuxBadNumPortsParam">Invalid number of ports specified in parameter {0} of ''{1}''. The number of ports must be a finite and positive integer</entry>
    <entry key="MuxOrDemuxBadParam">Invalid entry specified for parameter {0} of ''{1}'' to specify port information. The entry must be a single number, a vector, or a cell array</entry>
    <entry key="MuxOrDemuxBadVectorParam">Invalid vector used in parameter {0} of ''{1}'' to specify port information. The vector must have finite non-zero elements that are positive integers. An element may be -1 if the corresponding port is of unknown dimensions.</entry>
    <entry key="MuxPortLargerThanInDims">Invalid setting for output port dimensions of ''{0}''. The dimensions are being set to {1}. This is not valid because the output has fewer elements than the total number of elements ({2,number,integer}) in the input ports</entry>
    <entry key="MuxSignalNameMismatch">Signal name ''{0}'' doesn''t match with the signal name ''{1}'' specified at port ''{2,number,integer}'' in ''{3}''</entry>
    <entry key="BusCreatorSignalNameMismatch">Bus Creator block "{2}" renames input "{0}" to "{1}", which is not recommended. Set "Inputs" to an integer programmatically.</entry>
    <entry key="MuxBlkNamesPortsMismatch">Specified number of inputs ({0,number,integer}) must match the number of input ports ({2,number,integer}) on Mux block ''{1}''.</entry>
    <entry key="NamePlacementInconsistentState">The NamePlacement parameter is being deprecated. To get the block name location, use the NameLocation parameter.</entry>
    <entry key="NegativeInputIterationDimension">The partition dimension of input {0,number,integer}, specified for the For Each block (''{1}'') in subsystem ''{2}'', must be a positive integer.</entry>
    <entry key="NegativeInputIterationStepSize">The partition width of input {0,number,integer}, specified for the For Each block (''{1}'') in subsystem ''{2}'', must be a positive integer.</entry>
    <entry key="NegativeInputIterationStepSizeWithOffset">The sum of the partition width and the partition offset of input {0,number,integer}, specified for the For Each block (''{1}'') in subsystem ''{2}'', must be a positive integer.</entry>
    <entry key="NegativeOutputConcatenationDimension">The concatenation dimension for output {0,number,integer}, specified for the For Each block (''{1}'') in subsystem ''{2}'', must be a positive integer.</entry>
    <entry key="No1DVarDimsForTranspose">''{0}'' can only process 2-D variable-size signals for Transpose and Hermitian.</entry>
    <entry key="NoInitOutForOutportReset">''{0}'' must be configured to hold its output since no initial output has been specified</entry>
    <entry key="NoInputSignalOrMaskPrmForIteration">Because subsystem ''{0}'' contains a For Each block (''{1}''), at least one Inport or subsystem mask parameter must be set to be partitioned in the block dialog of the For Each block ''{2}''.</entry>
    <entry key="NoRootIteratorBlocks">For Iterator, While Iterator, Neighborhood, and For Each blocks are not allowed in the root window of a block diagram.</entry>
    <entry key="NoSrcForGotoTagVisBlk">No source goto for goto tag visibility ''{0}''</entry>
    <entry key="NonMonotonicEndPointsErr">Parameter values of {0} in ''{1}'' must be strictly monotonic at the end points after conversion to its run-time data type</entry>
    <entry key="NonMonotonicErr">Parameter values of {0} in ''{1}'' must be monotonically increasing before and after conversion to its run-time data type</entry>
    <entry key="NonPositiveIntegerValueSeed">Parameter {0} of ''{1}''specifies a negative or non-integer value. However, this parameter expects an integer value that is greater than or equal to zero. Simulink has converted the specified value of this parameter to data type ''{2}''.</entry>
    <entry key="NonPositiveWeightNotHandled">Negative value for weight parameter of block ''{0}'' is not handled</entry>
    <entry key="NonScalarICNotSupportVarDims">When the input signal of ''{0}'' is variable-size, only scalar is allowed for initial value</entry>
    <entry key="NonTunableParamRefPartitionedMaskParam">Parameter ''{0}'' of block ''{1}'' cannot reference partitioned mask parameter ''{2}'' of For Each subsystem ''{3}'' because parameter ''{4}'' is not tunable.</entry>
    <entry key="NonVirtualBusMustHaveObject">Invalid setting for ''{0}'' parameter in ''{1}''; this option may only be selected when a bus object is specified.</entry>
    <entry key="NormModelRefBlkNotSupported">The parameter ''Simulation mode'' of the Model block ''{0}'' is set to ''Normal''. However, the Model block is inside subsystem ''{1}'', which contains a For Each block (''{2}''). Simulink currently does not support this scenario. Consider changing the parameter ''Simulation mode'' of ''{3}'' to ''Accelerator''.</entry>
    <entry key="NotAValidCellArrayOfStructs">The value being set in the IOSignals parameter for ''{0}'' is not of the proper form. The value must be a cell array of structs. Each struct must have {1,number,integer} fields with the names ''{2}'' and ''{3}'' and the types ''double'' and ''char array'', respectively.</entry>
    <entry key="OnlyExtrapFloat">Block ''{0}'' specifies ''Extrapolation method'' to be ''{1}'', which can extrapolate only when all the input, output, fraction, intermediate, table and breakpoint data types are the same floating-point type. Consider setting ''Extrapolation method'' to 'Clip'.</entry>
    <entry key="OnlyExtrapFloatAndHalf">Block ''{0}'' specifies ''Extrapolation method'' to be ''{1}'', which can extrapolate only when all the input, output, fraction, intermediate, table and breakpoint data types are the same floating-point type, or if the block is in a supported half precision and single precision heterogeneous floating-point mode. Consider setting ''Extrapolation method'' to 'Clip'.</entry>
    <entry key="OutportBlockInconsistentDims">Port dimensions parameter of outport block ''{0}'' is inconsistent with the initial output parameter. If the initial output parameter of this block is non-scalar and not an empty matrix, then the dimensions of this parameter must exactly match the port dimensions parameter.</entry>
    <entry key="OutportConcatParamMismatch">The number of Outport blocks indicated by parameter ''{0}'' is {1,number,integer}. This value does not match the actual number of Outport blocks {2,number,integer} for subsystem ''{3}''.</entry>
    <entry key="OutportRequiresNVBusForAOB"><![CDATA[Outport block ''{0}'' must have dimensions ''1'' to output a virtual bus in the parent model. Set dimensions to ''1'' or output a nonvirtual bus with dimensions ''{1}''. If you are upgrading a model from a previous version of Simulink, use the <a href="matlab:sl(''upgradeadvisor'', ''{2}'')">Upgrade Advisor</a>.]]></entry>
    <entry key="OutputPortComplexityErr">Error in ''SetInputPortComplexity'' method of ''{0}''. The signal complexity of output port {1,number,integer} should have been set to ''{2}'', but was instead set to ''{3}''.</entry>
    <entry key="OutputPortDatatypeErr">Error in ''SetOutputPortDatatype'' method of ''{0}''. The data type ID of output port {1,number,integer} should have been set to {2,number,integer}, but was instead set to {3,number,integer}.</entry>
    <entry key="OutputPortDimsErr1To1">Error in ''SetOutputPortDimensions'' method of ''{0}''. The dimensions of output port {1,number,integer} should have been set to [{2,number,integer}], but was instead set to [{3,number,integer}].</entry>
    <entry key="OutputPortDimsErr1To2">Error in ''SetOutputPortDimensions'' method of ''{0}''. The dimensions of output port {1,number,integer} should have been set to [{2,number,integer}], but was instead set to [{3,number,integer}x{4,number,integer}].</entry>
    <entry key="OutputPortDimsErr2To1">Error in ''SetOutputPortDimensions'' method of ''{0}''. The dimensions of output port {1,number,integer} should have been set to [{2,number,integer}x{3,number,integer}], but was instead set to [{4,number,integer}].</entry>
    <entry key="OutputPortDimsErr2To2">Error in ''SetOutputPortDimensions'' method of ''{0}''. The dimension of output port {1,number,integer} should have been set to [{2,number,integer}x{3,number,integer}], but was instead set to [{4,number,integer}x{5,number,integer}].</entry>
    <entry key="PadeApproximateDelay">''{0}'' linearizes to unit gain with Pade order zero</entry>
    <entry key="ParameterValueMustBeKnown">Block ''{0}'' does not specify a value for parameter ''{1}''.</entry>
    <entry key="PartitionedMaskParamReferencedInMaskInit">The mask variable ''{0}'' of ''{1}'' cannot be used in mask initialization or icon drawing commands because the mask parameter ''{2}'' is referencing a partitioned mask parameter on a parent For Each subsystem.</entry>
    <entry key="PartitionedMaskParamReferencedInMaskInit2">Partitioned mask parameter ''{0}'' of For Each subsystem ''{1}'' cannot be referenced in mask initialization or icon drawing commands.</entry>
    <entry key="EvalFunctionsUsedInMaskInit">Function ''{0}'' cannot be used in mask initialization or icon drawing commands of ''{1}'', because it is (or is inside) a For Each subsystem with one or more partitioned mask parameters.</entry>
    <entry key="PermuteDimsInvPermVectLen">Invalid permutation vector specified for block ''{0}''. The number of elements in the permutation vector must be greater than or equal to the number of dimensions of both the input and the output signals</entry>
    <entry key="PermuteDimsInvPermVector">Invalid permutation vector specified for block ''{0}''. The elements of the permutation vector must be a rearrangement of the values 1 to N</entry>
    <entry key="PortDataTypesMustBeNumeric">Block ''{0}'' supports only numeric data types; it does not support boolean types</entry>
    <entry key="PortIndexBaseInconsistent"><![CDATA[Mismatch found between indexing mode settings of <sldiag objui="inport" objparam="{0,number,integer}" objname="{1}">input port {0,number,integer}</sldiag> of ''{1}'' ({2,number,integer}-based) and <sldiag objui="outport" objparam="{3,number,integer}" objname="{4}">output port {3,number,integer}</sldiag> of ''{4}'' ({5,number,integer}-based)]]></entry>
    <entry key="PortPairDimsMismatch">Corresponding index and fraction ports of block ''{0}'', k{1,number,integer} and f{2,number,integer}, have incompatible dimensions.</entry>
    <entry key="PowResultUndefined">Result of power is undefined in ''{0}''.</entry>
    <entry key="DeprecatedLookupBlock">The Lookup Table and Lookup Table (2-D) block will be removed in a future release. Replace ''{0}'' with the 1-D Lookup Table or 2-D Lookup Table block.</entry>
    <entry key="PrelookupEnumTypeHasNonZeroStoredValueAsDefault">In block ''{0}'', when the Source of ''{1}'' is 'Input port', the enumeration class default must be 0. For enumeration class ''{2}'', default value of enumeration member ''{3}'' must be 0.</entry>
    <entry key="InputBreakpointsDatatypeMismatch">In block ''{0}'', the data type of parameter ''{1}'' is ''{2}'' and the data type of input is ''{3}''. When using enumerated data, the data type of the input and breakpoints must be the same enumerated data type.</entry>
    <entry key="DuplicateEnumDefinitionsNotAllowed">''{0}'' in block ''{1}'' expects each member of enumerated data class ''{2}'' to have a unique underlying integer.</entry>
    <entry key="DuplicateEnumBreakpointElementsNotAllowed">''{0}'' in block ''{1}'' expects each member of enumerated data class ''{2}'' to be a unique enumerated value. A duplicate appears at element {3,number,integer}.</entry>
    <entry key="BreakpointsMustContainEveryDefinedEnumElement">Block ''{0}'' expects every member of enumerated data class ''{1}'' to appear as a value of ''{2}''. Partial sets are not allowed. Use enumeration(''{1}'') to include every member.</entry>
    <entry key="BreakpointsMustContainOneOccurrenceOfDefinedEnumElement">''{0}'' in block ''{1}'' expects one occurrence of each member of enumerated data class ''{2}''.</entry>
    <entry key="InheritedBreakpointsEnumDataTypeMismatch">In block ''{0}'', the data type of ''{1}'' is ''{2}'' on the Main tab and the inherited data type of ''{1}''  is ''{3}'' on the Data Types tab. When using enumerated data, both data types must be the same.</entry>
    <entry key="LookupNDEnumDoesNotSupportTunableTableSize">In block ''{0}'', the data type of ''{1}'' is ''{2}''. The ''Support tunable table size in code generation'' parameter is not supported for enumerated data types.</entry>
    <entry key="EnumDoesNotSupportSymbolicDimensions">In block ''{0}'', the data type of ''{1}'' is ''{2}''. The ''Allow symbolic dimension specification'' parameter is not supported for enumerated data types.</entry>
    <entry key="PreLookupEvenSpacingMsg">Breakpoint data of block ''{0}'' must be evenly spaced to the last precision bit before and after conversion to its run-time data type; either change data to even spacing or select another search method. See help for tips on creating evenly spaced data</entry>
    <entry key="LookupEvenSpacingMsg">Breakpoint data in dimension {0,number,integer} of block ''{1}'' must be evenly spaced to the last precision bit before and after conversion to its run-time data type; either change data to even spacing or select another search method. See help for tips on creating evenly spaced data</entry>
    <entry key="PreLookupEnumNonMonotonicErrRuntimeParam">Values of ''{0}'' in ''{1}'' must be strictly monotonically increasing. For enumerated breakpoints data, if the ''Index search method'' is 'Linear' and the ''Begin index search using previous index result'' check box is selected, the breakpoints data must be strictly monotonically increasing. The values are not strictly monotonically increasing at element {2,number,integer}. Change the breakpoints data or clear the "Begin index search using previous index result" check box.</entry>
    <entry key="PriorityErr" note="stringDatatypeUpdate">Invalid Priority setting ''{0}'' for block ''{1}''. The value must be either an empty character vector ('''') or an integer character vector literal (e.g. ''3'')</entry>
    <entry key="ProbeInvDims1"><![CDATA[Invalid output dimensions specified for <sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">output port {0,number,integer}</sldiag> of ''{1}''. The output signal has been incorrectly specified to have more than 1 dimension]]></entry>
    <entry key="ProbeInvDims2"><![CDATA[Invalid output dimensions specified for <sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">output port {0,number,integer}</sldiag> of Probe block ''{1}''. The width of this output port should be set to {2,number,integer} to match the {3,number,integer}-D signal that is connected to the block''s input. Instead, the output port is already set to have a width of ''{4,number,integer}'']]></entry>
    <entry key="ProbeOutPortSameAsInput"><![CDATA[The <sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">output port {0,number,integer}</sldiag> of ''{1}'' is set to have same data type as input]]></entry>
    <entry key="ProductComplexDivCodeGenOnlyForCollapseAll">Block ''{0}'' does not support code generation for collapse division over specified dimension for complex signals</entry>
    <entry key="ProductInvComplexDivPort">For fixed-point or heterogeneous built-in data types, ''{0}'' does not support complex values at divide input ports</entry>
    <entry key="ProductInvOutputDataType">Inherited output data type of ''{0}'' contains more bits than is supported</entry>
    <entry key="ProductViolateInheritanceRule">Data Type Propagation for ''{0}'' caused violation of inheritance rule. Manually setting the data type and scaling is one way to eliminate this error</entry>
    <entry key="PulseGenComputedTsFixedStepMismatchErr">Error in ''{0}'': The computed sample time ({1}) is not an integer multiple of the fixed step size ({2}). The period, pulse width and phase delay parameters of this block need to be integer multiples of the fixed step size</entry>
    <entry key="PulseGenDelayTsMismatchErr">Error in ''{0}'': The phase delay ({1}) parameter must be an integer multiple of the sample time ({2})</entry>
    <entry key="PulseGenRunTimeTsMismatchErr">Error in ''{0}'': The period ({1}) and pulse width ({2}) must be integer multiples of the sample time ({3})</entry>
    <entry key="PulseGenSampModeNonDClock">Source of the Pulse Generator ''{0}'' must be Digital Clock when the Pulse Generator is operating in Sample based mode</entry>
    <entry key="ToFileNameIsModelName">Data logging file name, ''{0}'' specified in ''{1}'' is the same as the model name ''{2}''. Code generation and rapid accelerator do not support data logging names that are the same as the model name.</entry>
    <entry key="RTWSfcnTargetNotSupported">Model ''{0}'' cannot generate code for the S-function target because the model has one or more subsystems which contain a For Each block</entry>
    <entry key="TrigATAN2NotSupportComplexIN">In block ''{0}'', the function ''atan2'' does not support complex inputs</entry>
    <entry key="RaiseToNegative">Attempt to raise negative value to a non-integer power in ''{0}''.</entry>
    <entry key="RateLimConstantSampleTime">Input signals to Rate Limiter block ''{0}'' are neither discrete nor continuous sample time signals. Only discrete or continuous input signals are supported.</entry>
    <entry key="RateLimFixptContinuousTime">Input signals to Rate Limiter block ''{0}'' are continuous time signals or have zero sample time. These conditions are not allowed when input data types are Integer or Fixed-point data types.</entry>
    <entry key="RateLimInconsistentDataTypes">The parameters ''Rising slew rate'' and ''Falling slew rate'' of the Rate Limiter block ''{0}'' must have the same data type.</entry>
    <entry key="RateLimUnsignedFixPtNotSupported">The parameters ''Rising slew rate'' and ''Falling slew rate'' of the Rate Limiter block ''{0}'' cannot be of an unsigned fixed point data type.</entry>
    <entry key="RateLimFixptInTriggeredSubsystem">Rate Limiter block ''{0}'' is operating at discrete sample time mode. This is not allowed when it is inside a Triggered Subsystem. To fix this problem, move the Rate Limiter block outside of the Triggered Subsystem.</entry>
    <entry key="RateTransMultipleIptsOpts">Illegal rate transition found between ''{0}'' and ''{1}''. Sample time  {2} of ''{3}'' and sample time {4} of ''{5}'' must be integer multiples, but are currently not. You can resolve this by using a rate transition block whose parameter ''Ensure deterministic data transfer'' is unchecked.</entry>
    <entry key="InvalidPrmSampleTimeCauseCodeGenMismatch"> Sample time propagated to block ''{0}'' causes mismatch between simulation and generated executable program results. Insert a Unit Delay block at block ''{0}''output port {1,number,integer} and set the sample time  of that Unit Delay block to {2}. </entry>
    <entry key="ReadOnlyMaskParamRefPartitionedMaskParam">Mask parameter ''{0}'' of subsystem ''{1}'' cannot reference a partitioned mask parameter of a For Each subsystem because parameter ''{2}'' is not set to be tunable.</entry>
    <entry key="RealizationNotSupported">The ''realization'' parameter in ''{0}'' is obsolete. You cannot use the set_param and get_param functions on this parameter. The generated code for this block has been improved to be similar to the former ''sparse'' realization, while maintaining tunability as in the former ''general'' realization.</entry>
    <entry key="RefBlockNoLongerLinked">''{0}'' is no longer linked to ''{1}''.</entry>
    <entry key="RefBlockUnknownParameter">In instantiating linked block ''{0}'' : {1}</entry>
    <entry key="RefIsNotLibrary1">Reference ''{0}'' is linked to ''{1}'' which resides in a model. References should only be linked to the contents of libraries. To fix this problem, either (a) break the link for ''{2}'', or, (b) move ''{3}'' into a library.</entry>
    <entry key="RelayContinuousFrame">Continuous-time input signals are not allowed for ''{0}'' because it is operating in frame-based mode</entry>
    <entry key="RelopComplexNotSupported"><![CDATA[Relational operations ( >, <, <=, >= ) are not supported for complex inputs in ''{0}'']]></entry>
    <entry key="OutputPortSingleHalfNotSupported">Single and half data types are not supported by output port of block ''{0}''.</entry>  
    <entry key="ResetIntegratorDeprecated">ResetIntegrator block ''{0}'' is no longer
    supported. Replace this block with an Integrator configured with 'level' reset and 'external'
    initial condition. If you encounter an algebraic loop when feeding the output back to the reset
    or initial condition input port of the replacement Integrator, then you should use the state
    output port of the Integrator rather than the normal output port.</entry>
    <entry key="RequireHomogeneousPortDataTypes">Port data types for ''{0}'' must be homogeneous. They must be all double, all single, or all fixed-point data types. One way to achieve this is to select an inherited mode for the output data type</entry>
    <entry key="UnderspecifiedFixedPointPortDataTypes">Fixed-point data types are under-specified in ''{0}''. You need to provide fixed-point data type specifications for the input ports</entry>
    <entry key="UnderspecifiedComplexPortDataTypes">Complex data types are incorrectly specified or under-specified in ''{0}''.</entry>
    <entry key="RequireRealInitialConditions">In ''{0}'', the initial conditions must be real</entry>
    <entry key="ResetPortExists">A reset port already exists in subsystem ''{0}''. Addition of a second reset port is not allowed.</entry>
    <entry key="ResetintObsoleteBlock">Obsolete level-based Reset Integrator
    encountered at:\n \n ''{0}''.\n\n   When the output port is fed back to the
    reset port (via some direct feedthrough path), you may encounter consistency
    errors if you enable the Consistency Checking diagnostic. This problem can
    be avoided by using the integrator from the Simulink library configured with
    ''level'' reset and ''external'' IC ports selected. If you encounter an
    algebraic loop when feeding the output back to the reset input, then you
    should use the state output port rather than the normal output port. </entry>
    <entry key="RowMismatch">Number of elements in {0} for ''{1}'' must match number of rows in the output table</entry>
    <entry key="RunTimeModelAPINotSupported">Error executing the model API call because the block ''{0}'' is configured to disallow model API calls for the ''{1}'' method</entry>
    <entry key="slgetcompilerinfIsUNIXorMAC"> 'slgetcompilerinfo is not supported on this platform'</entry>
    <entry key="SFunctionBuilderInvalidParameterSettings"> Error: invalid setting for the S-function parameters: ''{0}''</entry>
    <entry key="SFunctionBuilderInvalidPortName">\n ERROR: Invalid ''{0}'' port name: ''{1}''</entry>
    <entry key="SFunctionBuilderInvalidPortName1">\n ERROR: Invalid name specified for ''{0}'' port: {1}</entry>
    <entry key="SFunctionBuilderInvalidParamName">ERROR: Invalid ''{0}'' port name: ''{1}''</entry>
    <entry key="SFunctionBuilderInvalidSampleTime">\n\n ERROR: Invalid sample time value. The sample time value cannot be empty</entry>
    <entry key="SFunctionBuilderInvalidInput">Invalid Input</entry>
    <entry key="SFunctionBuilderInvalidSlope">Invalid Slope</entry>
    <entry key="SFunctionBuilderCannotOpenFile">Cannot open file ''{0}''</entry>
    <entry key="SFunctionBuilderCreation">### S-function ''{0}'' created successfully</entry>
    <entry key="SFunctionBuilderCreationWSL">### S-function ''{0}'' created successfully with WSL</entry>
    <entry key="SFunctionBuilderCreationWithHyperlinks"><![CDATA[### <a href="matlab:edit(''{0}'')">''{1}''</a> created successfully]]></entry>
    <entry key="SFunctionBuilderInvalidBuilderVersion">Invalid S-function Builder version found in: ''{0}'' Using default parameters</entry>
    <entry key="SFunctionBuilderOverwritingTLC">Overwriting TLC file: ''{0}''</entry>
    <entry key="SFunctionBuilderUnsavedChanges">There are unsaved changes in the S-Function Builder.\nThese changes can either be discarded or saved to the S-function.</entry>
    <entry key="SFunctionBuilderCompileMsg">\n\nCompiling ''{0}'' ....Please wait</entry>
    <entry key="SFunctionBuilderPackageMsg">\n\nGenerating package for ''{0}'' ....Please wait</entry>
    <entry key="SFunctionBuilderPackageSuccess">\n\nPackage generation successful for ''{0}''.</entry>
    <entry key="SFunctionBuilderPackageError">\n\nPackage generation failed for ''{0}''.</entry>
    <entry key="SFunctionBuilderGenerateMsg">\n\nGenerating ''{0}'' ....Please wait</entry>
    <entry key="SFunctionBuilderOverwritingFile">Overwriting file ''{0}''</entry>
    <entry key="SFunctionBuilderReferenceConfigSetWarning">\n\nWarning: Cannot set defines and undefines for code generation with a reference configuration. Please set RTWMakeCommand in the Configuration to ''{0}'' to ensure the defines and undefines are set when building the model.</entry>
    <entry key="SFunctionBuilderInvalidName">Error: Unable to create the S-function file as ''{0}'' because the S-function name is not a valid MATLAB function name.</entry>
    <entry key="SFunctionBuilderBlockError">S-Function Builder Block ''{0}'' has encountered an error.</entry>
    <entry key="SFunctionBuilderPathIsUNC">The given path ''{0}'' is under a network drive location. Map this network drive to a new letter drive, e.g. K:, to get full support of Linux binary generation in WSL.</entry>
    <entry key="SFunctionBuilderCannotMountNetworkDrive">The given path ''{0}'' is under a network drive location, and cannot be mounted in WSL. Use the provided Linux distro or manually mount the network drive in your existing WSL environment to get full support of Linux binary generation in WSL.</entry>
    <entry key="SFunctionBuilderWSLMatlabRootUnknown">The MATLAB installation path for WSL is not provided, required to generate mex for S-Function ''{0}''. Please use the function Simulink.setWSLSettings('WSLMatlabRoot', wslMatlabRoot) to provide its Linux or Windows path. </entry>
    <entry key="SFcnDidnotSetPortComplexSignal">S-function should set the complex signal of {0} port {1,number,integer} of ''{2}'' to the value specified by the input argument of method {3}</entry>
    <entry key="SFcnDidnotSetPortDataType">S-function should set the data type of {0} port {1,number,integer} of ''{2}'' to the data type specified by the input argument of method {3}</entry>
    <entry key="SFcnDidnotSetPortDimensions">S-function should set the dimension of {0} port {1,number,integer} of ''{2}'' to the value specified by the input argument of method {3}</entry>
    <entry key="SFcnDidnotSetPortWidth">S-function should set the width of {0} port {1,number,integer} of ''{2}'' to the value specified  by the input argument of method {3}</entry>
    <entry key="SFcnDisallowsSimState">Unable to access the simulation state because the {0} S-Function ({1}) block ''{2}'' does not allow access to its simulation state</entry>
    <entry key="SSProxyInvalid">Proxy handle must be a valid subsystem</entry>
    <entry key="SampleTimeOffsetMustZero">Determinism of data transfer between ''{0}'' and ''{1}'' cannot be ensured because either or both blocks have non-zero sample time offset. You can resolve this by using a rate transition block whose parameter ''Ensure deterministic data transfer'' is unchecked</entry>
    <entry key="SampleTimePropagationNotCompleted">The parameter ''{0}'' for block ''{1}'' cannot be obtained until after sample time propagation is completed</entry>
    <entry key="SaveAsMsg">Save As ...</entry>
    <entry key="ScopeSignalHasMixedType"><![CDATA[The <sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">output port {0,number,integer}</sldiag> of ''{1}'' could not be viewed because it has a mixed data type. It has been removed from ''{2}''. Reselect signals to be viewed using the signal selector of ''{3}''. ]]></entry>
    <entry key="ScopeSignalHasMixedUnit"><![CDATA[The <sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">output port {0,number,integer}</sldiag> of ''{1}'' could not be viewed because it has a mixed signal unit. It has been removed from ''{2}''. Reselect signals to be viewed using the signal selector of ''{3}''. ]]></entry>
    <entry key="ScopedTagCrossFcnMask">Signal source of Goto Tag Visibility ''{0}'' crosses a functional mask</entry>
    <entry key="DSRWInvalidDataStoreElementsForIndexing1"><![CDATA[Invalid setting ''{0}'' for parameter ''{1}'' for block ''{2}''. Only one element can be specified when the parameter ''{3}'' is set to ''on'' for this block.]]></entry>
    <entry key="DSRWInvalidDataStoreElementsForIndexing2"><![CDATA[Invalid setting ''{0}'' for parameter ''{1}'' for block ''{2}''. The parameter ''{1}'' may not contain any literal indexing expression when the parameter ''{3}'' is set to ''on'' for this block.]]></entry>
    <entry key="DSMDataInputDimMismatch"><![CDATA[The signal dimensions of the data input port of ''{0}'' (or equivalent) is {1}. The width of dimension {2,number,integer} of the input signal ({3,number,integer}) does not match the indexing width for this dimension ({4,number,integer}).]]></entry>
    <entry key="DSMDataOutputDimMismatch"><![CDATA[The signal dimensions of the data output port of ''{0}'' (or equivalent) is {1}. The width of dimension {2,number,integer} of the output signal ({3,number,integer}) does not match the indexing width for this dimension ({4,number,integer}).]]></entry>
    <entry key="DSMDataInputVectorDimMismatch"><![CDATA[The vector size of the data input port of ''{0}'' ({1,number,integer}) does not match the 1-D indexing size for the block ({2,number,integer}).]]></entry>
    <entry key="DSMDataOutputVectorDimMismatch"><![CDATA[The vector size of the data output port of ''{0}'' ({1,number,integer}) does not match the 1-D indexing size for the block ({2,number,integer}).]]></entry>
    <entry key="DSMDataInputNumDimsMismatch"><![CDATA[The number of dimensions of the data input port of ''{0}'' ({1,number,integer}) is greater than the number of dimensions of Data Store Memory ''{2}'' ({3,number,integer}).]]></entry>
    <entry key="DSMDataOutputNumDimsMismatch"><![CDATA[The number of dimensions of the data output port of ''{0}'' ({1,number,integer}) is greater than the number of dimensions of Data Store Memory ''{2}'' ({3,number,integer}).]]></entry>
    <entry key="DSMIndexHasSingleElement"><![CDATA[The Data Store Element ''{0}'' has only one element, so indexing is not supported.]]></entry>
    <entry key="DSMIndexNumDimsMismatch"><![CDATA[The number of dimensions specified in the indexing option for ''{0}'' ({1,number,integer}) does not match the number of dimensions of Data Store Memory ''{2}'' ({3,number,integer}).]]></entry>
    <entry key="DSMIndexVectorPortOutOfBound"><![CDATA[Element {0,number,integer} of input port <Idx{1,number,integer}> in ''{2}'' has a value of {3,number,integer}. This value is not within the range of permissible values ({4,number,integer} through {5,number,integer}) that allows selection of a valid element of Data Store Memory ''{6}''.]]></entry>
    <entry key="DSMIndexVectorDialogOutOfBound"><![CDATA[Element {0,number,integer} of index vector (dialog) for dimension {1,number,integer} in ''{2}'' has a value of {3,number,integer}. This value is not within the range of permissible values ({4,number,integer} through {5,number,integer}) that allows selection of a valid element of Data Store Memory ''{6}''.]]></entry>
    <entry key="DSMStartIndexPortOutOfBound1"><![CDATA[Starting index at input port <Idx{0,number,integer}> for dimension {1,number,integer} of ''{2}'' has a value of {3,number,integer}. This value is not within the range of permissible values ({4,number,integer} through {5,number,integer}) that allows selection of a valid element of Data Store Memory ''{6}''.]]></entry>
    <entry key="DSMStartIndexPortOutOfBound2"><![CDATA[The ending index for dimension {0,number,integer} in ''{1}'' is invalid because it references a nonexistent element of the Data Store Memory ''{2}''. To fix this error, reduce the value of either or both of the following: the starting index at the input port <Idx{3,number,integer}> and the output size for dimension {4,number,integer}, such that the ending index is within the range {5,number,integer} through {6,number,integer}]]></entry>
    <entry key="DSMStartIndexDialogOutOfBound1"><![CDATA[Starting index (dialog) for dimension {0,number,integer} of ''{1}'' has a value of {2,number,integer}. This value is not within the range of permissible values ({3,number,integer} through {4,number,integer}) that allows selection of a valid element of Data Store Memory ''{5}''.]]></entry>
    <entry key="DSMStartIndexDialogOutOfBound2"><![CDATA[The dimensions of ''{0}'' indicate that the width of dimension {1,number,integer} is {2,number,integer}. However, the starting index (dialog) and output size (dialog) of ''{3}'' indicate that the width of this dimension is at least {4,number,integer}.]]></entry>
    <entry key="DSMStartIndexDialogOutOfBound3"><![CDATA[The dimensions of ''{0}'' indicate that the width of dimension {1,number,integer} is {2,number,integer}. However, the starting index (dialog) and the width of this dimension for the data input port of ''{3}'' indicates that the width of this dimension is at least {4,number,integer}.]]></entry>
    <entry key="DSMStartIndexWidthOutOfBound1"><![CDATA[The dimensions of ''{0}'' indicate that the width of dimension {1,number,integer} is {2,number,integer}. The block ''{3}'' is using the starting index option for this dimension but the output size (dialog) is {4,number,integer}, which is greater than the width of this dimension for the data store memory.]]></entry>
    <entry key="DSMStartIndexWidthOutOfBound2"><![CDATA[The dimensions of ''{0}'' indicate that the width of dimension {1,number,integer} is {2,number,integer}. The block ''{3}'' is using the starting index option for this dimension but the width of this dimension for its data input port is {4,number,integer}, which is greater than the width of this dimension for the data store memory.]]></entry>
    <entry key="DSMIndexPortDataTypeNotSupported"><![CDATA[Unsupported data type for index port <Idx{0,number,integer}> of block ''{1}''. Only the following integer data types are supported: int8, uint8, int16, uint16 and int32.]]></entry>
    <entry key="DSMDataStoreElementNotSelected">Please select a data store element from the tree.</entry>
    <entry key="SelDimPropParamEvalError">Incorrect settings for dimension {0,number,integer}, parameter ''{1}'' in ''{2}''.</entry>
    <entry key="SelEmptyIndexOrOutputSizeParam">For dimension {0,number,integer} of ''{1}'', parameter ''Index'' or ''Output Size'' is not set.</entry>
    <entry key="SelEsCellArray">Parameter ''{0}'' specified in ''{1}'' is invalid for dimension {2,number,integer}. It should be a vector of real integer or a real integer</entry>
    <entry key="SelEsMismatch">Parameter ''{0}'' specified in ''{1}'' provides index elements for {2,number,integer} dimensions. It does not match the number of input dimensions, {3,number,integer}</entry>
    <entry key="SelIdxOptMismatch">Parameter ''{0}'' specified in ''{1}'' provides index options for {2,number,integer} dimensions. It does not match the number of input dimensions, {3,number,integer}</entry>
    <entry key="SelIdxOverflow"><![CDATA[Invalid dimensions specified for input port <U> of ''{0}''. The dimensions indicate that the width of dimension {1,number,integer} of the input is {2} even though the parameter ''{3}'' indicates that the width of dimension {4,number,integer} of the input is at least {5}]]></entry>
    <entry key="SelIntegerOutOfBounds"><![CDATA[Element {0,number,integer} of input port <Idx{1,number,integer}> in ''{2}'' has a value of {3,number,integer}. This value is not within the range of permissible values ({4,number,integer} through {5,number,integer}) that allows selection of a valid input data element]]></entry>
    <entry key="SelInvDataInpDims"><![CDATA[The number of dimensions of the input port <U> does not match the number of input dimensions specified in ''{0}''.]]></entry>
    <entry key="SelInvDataInpSize"><![CDATA[The dimension setting of the input port <U> in ''{0}'' is invalid for dimension {1,number,integer}. The value, which is {2,number,integer}, should be no less than the setting of the output port <Y> for this dimension, which is {3,number,integer}]]></entry>
    <entry key="SelInvIdxOpt">The ''{0}'' specification for dimension {1,number,integer} in ''{2}'' is invalid. It should be one of the following: ''Select all'', ''Index vector (dialog)'', ''Index vector (port)'' and ''Starting index (port)''</entry>
    <entry key="SelInvIndexPortElems"><![CDATA[Invalid input dimensions specified for input port <Idx{0,number,integer}> of ''{1}''. The specified number of elements, {2,number,integer}, does not match the expected number of elements, {3,number,integer}]]></entry>
    <entry key="SelInvInputElementE2"><![CDATA[The value of the second element at input port <Idx{0,number,integer}> in ''{1}'' should be no less than the value of the first element]]></entry>
    <entry key="SelInvInputElementE2OutOfBound"><![CDATA[The second element, {0,number,integer}, at input port <Idx{1,number,integer}> in ''{2}'' is not within the range of permissible values ({3,number,integer} through {4,number,integer}) that allows selection of a valid input data element]]></entry>
    <entry key="SelInvInputElementENOutOfBound"><![CDATA[The ending index for dimension {0,number,integer} in ''{1}'' is invalid because it references a nonexistent element at the input port <U>. To fix this error, reduce the value of either or both of the following: the starting index at the input port <Idx{2,number,integer}> and the "Output size" for dimension {3,number,integer}, such that the ending index is within the range {4,number,integer} through {5,number,integer}]]></entry>
    <entry key="SelInvNumDims">Number of input dimensions specified in ''{0}'' is invalid. Number of input dimensions must be a positive integer constant and no larger than 65535.</entry>
    <entry key="SelInvNumElements">In ''{0}'', parameter ''{1}'' is specified as ''Starting index (dialog)'' for dimension {2,number,integer}. Parameter ''{3}'' for this dimension should be a scalar</entry>
    <entry key="SelInvOutDimsLen">Parameter ''{0}'' parameter specified in ''{1}'' provides output sizes for {2,number,integer} dimensions. It does not match the number of input dimensions</entry>
    <entry key="SelInvOutDimsVal">Parameter ''{0}'' for dimension {1,number,integer} is specified as ''Starting index (port)'' in ''{2}''. The corresponding output dimension should be a positive integer</entry>
    <entry key="SelInvVarDimsFrameOutputDims"><![CDATA[Block ''{0}'' outputs a variable-sized frame-based signal. The current size of the first dimension of port <Y> is set to {1,number,integer}, which is not equal to the maximum size, {2,number,integer}. Frame size, i.e., the size of the first dimension, cannot change in variable-sized frame-based signals]]></entry>
    <entry key="SelInvalidSelIdxForEmptyInp"><![CDATA[The current size of dimension {0,number,integer} at input port <U> is 0. Block ''{1}'' requires this size to be at least {2,number,integer}]]></entry>
    <entry key="SelNoBooleanIdxPort"><![CDATA[Invalid data type setting for port <Idx{0,number,integer}> of ''{1}''. This port does not support boolean, half, or non-numeric data type.]]></entry>
    <entry key="SelNoScaledOrBiasedFxpIdxPort"><![CDATA[Invalid data type setting for port <Idx{0,number,integer}> of ''{1}''. For fixed-point to be used in the index port, the data type must have bias equal to 0, fractional length equal to 0, slope equal to 1.0, and word length less than or equal to 128.]]></entry>
    <entry key="SelNonIntegerInput"><![CDATA[Non-integer input truncated at input port <Idx{0,number,integer}> in {1}]]></entry>
    <entry key="SelIntegerInputOverflow"><![CDATA[Integer input overflow at input port <Idx{0,number,integer}> in {1}, the input data exceeds the range of int32 and has resulted in a loss during conversion.]]></entry>
    <entry key="SelIdxInputIsNaN"><![CDATA[Incoming signal to input port <Idx{0,number,integer}> of block ''{1}'' contains NaN. Selector and Assignment blocks do not support NaN signals as index inputs]]></entry>
    <entry key="SelObsoleteSelectAllSetting">''-1'' is used in parameter ''{0}'' to indicate the selection of all elements for dimension {1,number,integer} in {2}. This use of ''-1'' will be deprecated in future releases. Set parameter ''{3}'' to ''Select all'' for this dimension instead.</entry>
    <entry key="SelStringCellArray" note="stringDatatypeUpdate">Parameter ''{0}'' specified in ''{1}'' is invalid for dimension {2,number,integer}. It should be a character vector.</entry>
    <entry key="SelectorIdxPortDoesNotSupportBuses"><![CDATA[Incoming signal to input port <Idx{0,number,integer}> of ''{1}'' is a bus signal, which is invalid. Index ports of Selector blocks must be non-bus signals only.]]></entry>
    <entry key="SelectorRemoveComments">In block ''{0}'', parameter ''{1}'' for dimension {2,number,integer} contains comments. It is disallowed.</entry>
    <entry key="SelectorRemoveComments2">In block ''{0}'', comments have been removed from parameter ''{1}''</entry>
    <entry key="SelectorNonVirtualForImage">The block ''{0}'' does not support image data types since it is non-virtual</entry>
    <entry key="SetAllowMoreThan2DOnlyInEval">''AllowSignalsWithMoreThan2D'' of MATLAB S-Function ''{0}'' in ''{1}'' can be set only within the setup method</entry>
    <entry key="SetExecContextInheritNotAllowed">The parameter ''RequestExecContextInheritance'' can only be set for virtual or atomic subsystems</entry>
    <entry key="SetNextTimeHitInExecOnly">''NextTimeHit'' of MATLAB S-Function ''{0}'' in ''{1}'' can be set only when simulation is running.</entry>
    <entry key="SetNumTicksToNextTimeHitInExecOnly">''NumTicksToNextSampleHit'' of MATLAB S-Function ''{0}'' in ''{1}'' can be set only at major time steps in a simulation.</entry>
    <entry key="GetNumTicksToNextTimeHitInExecOnly">''NumTicksToNextSampleHit'' of MATLAB S-Function ''{0}'' in ''{1}'' can be obtained only at major time steps in a simulation.</entry>
    <entry key="GetNumTicksToNextTimeHitWithControllableSampleTime">''NumTicksToNextSampleHit'' of MATLAB S-Function ''{0}'' in ''{1}'' can be obtained only when it has a controllable sample time.</entry>
    <entry key="SetParamConnPortConnTypeErr">Cannot set parameter ''{0}'' to the specified value ''{1}''. The specified value must name a connection type</entry>
    <entry key="SetParamConnPortErr">Cannot set parameter ''{0}'' for the specified port. The specified port must be a connection port</entry>
    <entry key="SetParamOutPortErr">Cannot set parameter ''{0}'' for the specified port. The specified port must be an output port</entry>
    <entry key="SetSupportsMultipleExecInstancesOnlyInEvalOrPostProp">''SupportsMultipleExecInstances'' of MATLAB S-Function ''{0}'' in ''{1}'' can be set only within the setup method or PostPropagationSetup method.</entry>
    <entry key="ShiftNonIntParam">Parameters of ''{0}'' must be integer values between -2147483648 and 2147483647.</entry>
    <entry key="ShiftNonIntNetShift">In block ''{0}'', the net shift value {1} is not supported. The shift value must be an integer between -2147483648 and 2147483647.</entry>
    <entry key="ShiftResultSaturates">Result of the arithmetic shift saturates to infinity in ''{0}''.</entry>
    <entry key="ShiftInvalidBitShiftValue">In block ''{0}'', the number of 'Bits to shift' is invalid. This block parameter supports finite, non-complex values in scalar, 1-D, or 2-D format</entry>
    <entry key="ShiftInvalidBitShiftOrBinPtShiftType">Unsupported data type for ''{1}'', in block ''{0}''. Data types supported are built-in data types and fixed point data types with slope equal to one and bias equal to zero</entry>
    <entry key="ShiftNonScalarBNP">The parameter ''{0}'' of ''{1}'' must be a scalar</entry>
    <entry key="ShiftViaPortWithNonZeroBias">For ''{0}'', when 'BitShiftSource' is set to 'Input port', data type of input port cannot support non-zero bias</entry>
    <entry key="ShiftNonScalar1D2Dimension"><![CDATA[For ''{0}'', the number of dimensions for <sldiag objui="inport" objparam="1" objname="{1, number, integer}">input port 1</sldiag> is {1, number, integer}. It must be a scalar, 1-D or 2-D]]></entry>
    <entry key="ShiftDimsMismatch"><![CDATA[The <sldiag objui="inport" objparam="{0,number,integer}" objname="{1}">input port {0,number,integer}</sldiag> of ''{1}'' has dimensions ''{2}'', but the input port {3,number,integer} has dimensions ''{4}''. If both dimensions are non-scalar then they should match.]]></entry>
    <entry key="ShiftOutOfRange">In block ''{0}'' the net shift value {1, number, integer} is out of range. The shift value must be between {2, number, integer} and {3, number, integer}.</entry>
    <entry key="ShiftNonScalarParamInFrameMode">When the input signal is frame-based, parameters of ''{0}'' must be scalar</entry>
    <entry key="ShiftNonTrivialBias">The parameter ''{0}'' of ''{1}'' is not a scalar and the input signal has non-zero bias. This mode is not supported since the shift operation need to involve inefficient bias handling that might not be desired. In order to resolve this issue, set the parameter to be a scalar or set input signal''s bias to be 0.0</entry>
    <entry key="SigConvBlockRequiresBusObj">The Signal Conversion block ''{0}'' cannot convert the input bus signal to nonvirtual because no valid bus object has been specified on either the Signal Conversion block or the driving block. Either specify a bus data type on the Signal Conversion block using the ''Data type'' parameter, or if the driving block is a Bus Creator, please specify a bus data type using that block's ''Data type'' parameter.</entry>
    <entry key="SigPropDisabledDupBusCreatorSigNames">Cannot automatically propagate signal labels through Bus Creator ''{0}'' because input signals have duplicate names.</entry>
    <entry key="SigPropDisabledDupMuxSigNames">Cannot automatically propagate signal labels through Mux ''{0}'' because input signals have duplicate names</entry>
    <entry key="SigSpecRequiresNVBusForAOB">Signal Specification block ''{0}'' cannot output a multi-dimensional virtual bus. Please check the ''Require nonvirtual bus'' option in the ''Signal Attributes'' pane of the block dialog.</entry>
    <entry key="SigSpecIgnoresConfigSetDiagnostics"> One or more signal names in the input bus to block ''{0}'' does not match the signal names in the bus specified by the bus object ''{1}'' on the block dialog. Signal Specification blocks always treat element name mismatches as errors, regardless of the ''Element name mismatch'' option setting. Either change the specified bus object or rename the input bus element signals to match the bus object.</entry>
    <entry key="SigViewScopeDimsMismatch"><![CDATA[The <sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">output port {0,number,integer}</sldiag> of ''{1}'' could not be viewed because it is a bus (multiplexed) signal with matrices. It has been removed from ''{2}''. Reselect signals to be viewed using the signal selector of ''{3}''. ]]></entry>
    <entry key="SigViewScopeMessageSignal"><![CDATA[The <sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">output port {0,number,integer}</sldiag> of ''{1}'' could not be viewed because it is a message signal. It has been removed from ''{2}''. Reselect signals to be viewed using the signal selector of ''{3}''. ]]></entry>
    <entry key="SiggenNoRandomWaveForRTW">The random wave of the signal generator ''{0}'' is not supported by Simulink Coder - use the appropriate random noise generator</entry>
    <entry key="SiggenNoRandomWaveForTimePort">When the Signal Generator ''{0}'' has input ports, the random wave is not supported</entry>
    <entry key="SiggenRandomWaveObsolete">The "random" waveform selection of ''{0}'' is provided for backwards compatibility. It will be removed in a future version and should be replaced with the appropriate random number generator</entry>
    <entry key="SignumInfiniteGain">''{0}'' linearizes to infinite gain at current operating point</entry>
    <entry key="SignumInvalidInputDType">''{0}'' does not support input signals of data type ''{1}'' since signals of that type can not represent the real world value 0.0</entry>
    <entry key="SinWaveInvalidTsErr">Invalid sample time in ''{0}''. Sample-based sine wave needs a finite discrete sample time. For continuous or inherited, use the time-based sine type</entry>
    <entry key="SinWaveNegFreqErr">Negative frequencies in ''{0}'' are no longer allowed</entry>
    <entry key="SinWaveSampModeNonDClock">Source of the Sin Wave ''{0}'' must be a Digital Clock when the Sin Wave is operating in Sample based mode</entry>
    <entry key="SingleInstModelRefBlkNotSupported"><![CDATA[In the Configuration Parameters >  Model Referencing pane of referenced model ''{0}'', the parameter ''Total number of instances allowed per top model'' is set to ''One''. The associated Model block ''{1}'' is not supported inside subsystem ''{2}'' because the subsystem contains a For Each block (''{3}''). Consider changing the parameter ''Total number of instances allowed per top model'' to ''Multiple'' for referenced model ''{4}''.]]></entry>
    <entry key="SignalLoggingInModelRefBlkInRapidForEachNotSupported"><![CDATA[The model containing the For Each subsystem is running in accelerated mode, and the referenced model ''{0}'' has a signal selected for logging. Simulink does not support this configuration. To resolve this issue, do not log signals in ''{1}'' or simulate in normal mode. ]]></entry>
    <entry key="SparseMatricesNotSupported">Block ''{0}'' does not support sparse matrices for parameter ''{1}''</entry>
    <entry key="SplineExtrapOnlyForSplineInterp" context="error">Block ''{0}'' supports ''Cubic spline'' as its ''Extrapolation method'' only if its ''Interpolation method''  parameter specifies ''Cubic spline''.</entry>
    <entry key="SplineOnlyFloat" context="error">Block ''{0}'' supports ''Cubic spline'' or ''Akima spline'' interpolation method only when all the input, output, fraction, intermediate, table, and breakpoint data types are the same floating-point type.</entry>
    <entry key="SquareRootOfNegative">Square root of a negative number in ''{0}''</entry>
    <entry key="StateEnabledSubsystemNonComplianceInternal">Block ''{0}'' is not allowed in subsystem ''{1}''. The use of this block in a subsystem with the enable port in hardware enable mode is currently not supported.</entry>
    <entry key="StateEnabledSubsystemNonComplianceModelRef">Model block ''{0}'' is not allowed in subsystem ''{1}''. To find the particular block in the referenced model that is causing this issue, duplicate the content of such model in a subsystem with state enable port and update the resulting block diagram.</entry>
    <entry key="StateEnabledSubsystemNonComplianceStateflowEML">Block ''{0}'' is not allowed in subsystem ''{1}''. The use of Stateflow or MATLAB Function block in subsystem with state enable port is currently not supported.</entry>
    <entry key="StateEnabledSubsystemNonComplianceSubsystem">Subsystem ''{0}'' is not allowed in subsystem ''{1}''. The use subsystem that combines Output and Update method, such as function-call, triggered, or iterator subsystem, in another subsystem with state enable port is not supported.</entry>
    <!-- State Reader / State Writer block -->
    <entry key="StateReadWriteOwnSelectorTreeEmpty">No state owner block in hierarchy.</entry>
    <entry key="StateReadWriteBlockDiagramChanged1">Block diagram has changed; </entry>
    <entry key="StateReadWriteBlockDiagramChanged2"> owner selector tree.</entry>
    <entry key="StateReadWriteBlockStateNameNotSet">No state has been selected. A state of owner block ''{0}'' must be selected.</entry>
    <entry key="StateReadWriteBlockStateNameNotSet2">No state has been selected for State Reader or Writer block ''{0}''. A state of owner block ''{1}'' must be selected.</entry>
    <entry key="StateOwnerResetPort">Block ''{0}'' has a reset port.</entry>
    <entry key="StateOwnerInitCondPort">Block ''{0}'' has an initial condition port.</entry>
    <entry key="StateReadOrWriteHasNoOwnerBlk">Cannot locate state owner block for State Reader or State Writer block ''{0}'' within model ''{1}''.</entry>
    <entry key="StateOwnerNotSingleRate">''{0}'' is set to allow its state to be accessed by State Reader or State Writer blocks. Therefore, this block must execute in a single rate.</entry>
    <entry key="StateOwnerNotInExpFcnMdlRootFcnCall">In a model set up to export functions, the block ''{0}'' is set to allow its state to be accessed by State Reader or State Writer blocks. Therefore, this block must be used inside the function-call context driven by a root-level function-call Inport block.</entry>
    <entry key="StateOwnerHasConstantTs">''{0}'' is set to allow its state to be accessed by State Reader or State Writer blocks. Therefore, this block cannot have a constant sample time, or be placed inside a subsystem with a constant sample time.</entry>
    <entry key="StateOwnerBlkCannotBeInsideForEachSS">''{0}'' is set to allow its state to be accessed by State Reader or State Writer blocks. It can not be placed inside a For Each subsystem.</entry>
    <entry key="StateAccessorAndOwnerInDiffForEach">The state accessor block ''{0}'' cannot access the state owned by ''{1}''. State accessor blocks must be in the same For Each subsystem as state owner blocks. </entry>
    <entry key="AccessorAndOwnerInResetFunction">Both accessor block ''{0}'' and owner block ''{1}'' are inside Reset Functions, which is not allowed. </entry>
    <entry key="StateOwnerICMustBeZeroOrStructForNvBus">Invalid value specified for parameter 'Initial condition' of block ''{0}''. The block is configured to allow its state to be accessed by State Reader or State Writer blocks, and the input signal is a non-virtual bus. The acceptable values for the parameter are zero or a finite numeric MATLAB structure. Specify zero or use Simulink.Bus.createMATLABStruct to create a MATLAB structure from the bus signal.</entry>
    <entry key="StateReadOrWriteNotDrvByFcnCallRootInport">In a model set up to export functions, a State Reader or State Writer block ''{0}'' must be placed either inside the function-call context driven by a root-level Inport block that outputs a function-call signal or inside an Initialize or Terminate Function block.</entry>
    <entry key="StateReadOrWriteHasConstantTs">The State Reader or State Writer ''{0}'' cannot have a constant sample time, or be placed inside a subsystem with a constant sample time.</entry>
    <entry key="StateAccessorAndOwnerInDiffCharts">
      The State Reader or State Writer block ''{0}'' cannot access the state owned by ''{1}''. State accessor blocks must be in the same Stateflow chart as state owner blocks.
    </entry>
    <entry key="StateAccessorInLibraryLink">
      The State Reader or State Writer block ''{0}'' cannot set state owner block since it is a linked block.
    </entry>
    <entry key="ActionPortInSimulinkStateCannotChangeParam">
      The Action Port block ''{0}'' cannot change the value of parameter ''{1}'' if it is used inside Simulink State.
    </entry>
    <entry key="DuplicateStateNamesInSimulinkState">
      The block ''{0}''cannot change its state name from ''{1}'' to ''{2}'', because the new name is already defined in block ''{3}'' and also accessed in Stateflow chart.
    </entry>
    <entry key="StateAccessorAndOwnerInDiffTasks">
      <![CDATA[The State Reader or State Writer block ''{0}'' is accessing the state owned by ''{1}'', which is in a different task with diagnostic <sldiag objui="configset" objparam="MultiTaskRateTransMsg">''Multitask data transfer''</sldiag> set to 'error'.  Consider changing the parameter from ''error'' to ''warning'', or placing the blocks in separate function-call subsystems that are either (1) driven by different root-level Inport blocks inside an export-function model, (2) driven by a branched function-call signal, with different execution orders specified by Function-Call Split blocks, or (3) controlled by a common initiator, an If block, or a Switch Case block.\n Alternatively, consider placing block ''{0}'' in an Initialize or Terminate Function block whose parent subsystem contains the state owner block ''{1}''.]]>
    </entry>
    <entry key="StateAccessorAndOwnerInDiffTasksWarning">
      The State Reader or State Writer block ''{0}'' is accessing the state owned by ''{1}'', which is in a different task. Consider placing them in two function-call subsystems (1) driven by different root-level Inport blocks inside an export function model (2) driven by a branched function-call signal and have different execution orders specified by Function-Call Split blocks, or (3) controlled by a common initiator, an If block, or a Switch Case block.\n Alternatively, consider placing block ''{0}'' in an Initialize or Terminate Function block whose parent subsystem contains the state owner block ''{1}''.
    </entry>
    <!-- State Reader/Writer/Owner in Same Task -->
    <entry key="StateAccessorBlocksInSameCompInfo">
      Blocks ''{0}'' and ''{1}'' cannot be placed in the same non-virtual hierarchy because they access the same state owned by ''{2}''. Consider placing them in two function-call subsystems (1) driven by different root-level Inport blocks inside an export function model (2) driven by a branched function-call signal and having different execution orders specified by Function-Call Split blocks, or (3) controlled by a common initiator, an If block, or a Switch Case block.\n Alternatively, consider placing blocks ''{0}'' and ''{1}'' in Initialize and Terminate Function blocks whose parent subsystem contains the state owner block ''{2}''.
    </entry>
    <entry key="StateAccessorAndOwnerInSameCompInfo">
      Block ''{0}'' accesses the state owned by ''{1}'', and therefore they cannot be placed in the same non-virtual hierarchy. Consider placing them in two function-call subsystems (1) driven by different root-level Inport blocks inside an export function model (2) driven by a branched function-call signal and having different execution orders specified by Function-Call Split blocks, or (3) controlled by a common initiator, an If block, or a Switch Case block.\n Alternatively, consider placing block ''{0}'' in an Initialize or Terminate Function block whose parent subsystem contains the state owner block ''{1}''.
    </entry>
    <entry key="StateReaderAndWriterBlocksInSameTaskError">
      The State Reader or State Writer blocks ''{0}'' and ''{1}'' access the same state owned by ''{2}'', and they are driven by the same root-level Inport block or in the same Simulink Function inside an export function model. To ensure deterministic relative execution order, consider placing them in the same non-virtual subsystem. Otherwise, place them in two subsystems that are (1) driven by a branched function-call signal and have different execution orders specified by Function-Call Split blocks or (2) controlled by a common function-call initiator, an If block, or a Switch Case block. Alternatively, consider placing blocks ''{0}'' and ''{1}'' in Initialize and Terminate Function blocks whose parent subsystem contains the state owner block ''{2}''.
    </entry>
    <entry key="StateReaderAndWriterBlocksInNonExpFcnMdlSameTsError">
      The State Reader or State Writer blocks ''{0}'' and ''{1}'' access the same state owned by ''{2}'', and they have the same sample time. To ensure deterministic relative execution order, consider placing them in the same non-virtual subsystem. Otherwise, place them in two subsystems that are (1) driven by a branched function-call signal and have different execution orders specified by Function-Call Split blocks or (2) controlled by a common function-call initiator, an If block, or a Switch Case block. Alternatively, consider placing blocks ''{0}'' and ''{1}'' in Initialize and Terminate Function blocks whose parent subsystem contains the state owner block ''{2}''.
    </entry>
    <entry key="StateAccessorBlocksInSameTaskError">
      State Reader or State Writer blocks ''{0}'' and ''{1}'' access the same state owned by ''{2}'', and they are driven by the same root-level Inport block or are in the same Simulink Function inside an export function model. To ensure deterministic relative execution order, consider placing them in two subsystems that are (1) driven by a branched function-call signal and have different execution orders specified by Function-Call Split blocks or (2) controlled by a common function-call initiator, an If block, or a Switch Case block. Alternatively, consider placing blocks ''{0}'' and ''{1}'' in Initialize and Terminate Function blocks whose parent subsystem contains the state owner block ''{2}''.
    </entry>
    <entry key="StateAccessorBlocksInNonExpFcnMdlSameTsError">
      State Reader or State Writer blocks ''{0}'' and ''{1}'' access the same state owned by ''{2}'', and they have the same sample time. To ensure deterministic relative execution order, consider placing them in two subsystems that are (1) driven by a branched function-call signal and have different execution orders specified by Function-Call Split blocks or (2) controlled by a common function-call initiator, an If block, or a Switch Case block. Alternatively, consider placing blocks ''{0}'' and ''{1}'' in Initialize and Terminate Function blocks whose parent subsystem contains the state owner block ''{2}''.
    </entry>
    <entry key="StateAccessorAndOwnerInSameTaskError">
      Block ''{0}'' accesses the state owned by ''{1}'', and both blocks are driven by the same root-level Inport block or in the same Simulink Function inside an export function model. To ensure deterministic relative execution order, consider placing them in two subsystems that are (1) driven by a branched function-call signal and have different execution orders specified by Function-Call Split blocks or (2) controlled by a common function-call initiator, an If block, or a Switch Case block. Alternatively, consider placing block ''{0}'' in an Initialize or Terminate Function block whose parent subsystem contains the state owner block ''{1}''.
    </entry>
    <entry key="StateAccessorInSimulinkFunction">
      The State Reader or State Writer block ''{0}'' is inside Simulink Function ''{1}''.
    </entry>
    <entry key="StateAccessorAndOwnerCallerInSameSimulinkFunctionChain">
      The Function Caller blocks ''{0}'' and ''{1}'' are in the same task. They call Simulink Function ''{2}'' which contains ''{3}'', and Simulink Function ''{4}'' which contains ''{5}'', respectively.
    </entry>
    <entry key="StateAccessorAndFcnCallerInSameTask">
      The State Reader or State Writer block ''{0}'' and the Function Caller block ''{1}'' that calls ''{2}'' are driven by the same root-level Inport block or in the same Simulink Function inside an export function model.
    </entry>
    <entry key="StateOwnerInSimulinkFunction">
      The state owner block ''{0}'' is inside Simulink Function ''{1}''.
    </entry>
    <entry key="StateOwnerAndFcnCallerInSameTask">
      Both the state owner block ''{0}'' and the Function Caller block ''{1}'' that calls ''{2}'' are driven by the same root-level Inport block or in the same Simulink Function inside an export function model.
    </entry>
    <entry key="StateAccessorAndOwnerInNonExpFcnMdlSameTsError">
      Block ''{0}'' accesses the state owned by ''{1}'' with the same sample time. To ensure deterministic relative execution order, consider placing them in two subsystems that are (1) driven by a branched function-call signal and have different execution orders specified by Function-Call Split blocks or (2) controlled by a common function-call initiator, an If block, or a Switch Case block. Alternatively, consider placing block ''{0}'' in an Initialize or Terminate Function block whose parent subsystem contains the state owner block ''{1}''.
    </entry>
    <entry key="StateUnnamedForMulStatesBlks">Name the states of the block ''{0}'' before selecting.</entry>
    <entry key="StateUnnamedForMultipleStatesOwner">The block ''{0}'' has one or more states that are not named. Since the block ''{0}'' has multiple states, the states need to be explicitly named before they can be accessed.</entry>
    <entry key="InvalidStateNameForMultipleStatesAccessor">The state ''{0}'' that the block ''{1}'' is attempting to access from the block ''{2}'' does not exist. Ensure that ''{1}'' is configured to access the right state.</entry>
    <entry key="StateUnnamedForMulStatesBlksDropMenu">Cannot create a State Reader or State Writer since the states of the block ''{0}'' are unnamed. Name all the states of the block before creating a State Reader or State Writer.</entry>
    <entry key="StateNameAccessedCanNotBeEmpty">Cannot set state name to empty because the block is being accessed by State Reader/Writer block(s).</entry>
    <entry key="StateReaderOrWriterInvalidStateOwner">Cannot set block ''{0}'' as the state owner block for State Reader, State Writer or Stateflow chart ''{1}''.</entry>
    <entry key="InvalidStateOwnerInitTermResetSS">The State Reader or State Writer block ''{0}'' is placed within the Initialize, Terminate, Reinitialize or Reset Function block ''{1}''. Its state owner block ''{2}'' cannot be outside the parent subsystem of block ''{1}''.</entry>
    <entry key="InvalidStateOwnerReasonGeneric">Block of type ''{0}'' cannot be a state owner block.</entry>
    <entry key="InvalidParameterOwnerReasonGeneric">Block of type ''{0}'' cannot be a parameter owner block.</entry>
    <entry key="ParamAccessorNotWithinIRT">Parameter Writer Block ''{0}'' can only be used within Initialize, Reinitialize, Reset, or Terminate Function blocks. The block ''{0}'' is not being used in such a context.</entry>
    <entry key="ParameterAccessorBlockNotConnected"> Parameter owner block must be specified for Parameter Writer block ''{0}'' before specifying parameter name. </entry>
    <entry key="ParamAccessorParamNameExpired">Unrecognized parameter name ''{2}'' of owner block ''{1}'' specified in Parameter Writer block ''{0}''.</entry>
    <entry key="ParamAccessorParamNameNotUsed">Unused parameter ''{2}'' of Model block ''{1}'' specified in Parameter Writer block ''{0}''.</entry>
    <entry key="ParamAccessorParamBeenPromoted">Parameter ''{2}'' of the Model block ''{1}'' cannot be accessed by the Parameter Writer Block ''{0}'' as it is promoted as an argument by the Model block ''{1}''. Please select a different parameter or clear the ''Argument'' checkbox in the model block dialog to ensure that the parameter is not promoted further.</entry>
    <entry key="ParamAccessorInLibraryLink">Parameter Writer block ''{0}'' cannot set parameter owner block since it is a linked block.</entry>
    <entry key="ParamAccessorAndOwnerInDiffForEach">Parameter Writer block ''{0}'' cannot access the parameter of the block ''{1}''. Parameter writer blocks must be in the same For Each subsystem as parameter owner blocks. </entry>
    <entry key="ParamAccessorParamBusTypeInfoNotAvailable">Parameter Writer block ''{0}'' is unable to write to bus type parameter of block ''{1}'' because bus type information is not available.</entry>
    <entry key="InvalidStateOwnerReasonSFcn">To configure an S-Function block as a state owner block, exactly one data type work vector must be declared as discrete state vector using ssSetDWorkUsedAsDState and named using ssSetDWorkName or ssSetDWorkRTWIdentifier in mdlInitializeSizes.</entry>
    <entry key="InvalidStateOwnerReasonOutport">For a block that represents an output port to be a state owner block, the block must be an Outport block in a conditionally executed subsystem. Out Bus Element blocks are not supported as state owner blocks.</entry>
    <entry key="InvalidStateOwnerReasonTriggerPort">To configure a Trigger Port block as a state owner block, set parameter ''Trigger type'' to ''rising'', ''falling'', or ''either''.</entry>
    <entry key="InvalidStateOwnerReasonDiscreteFilter">To configure a Discrete Filter block as a state owner block, set parameter ''Filter structure'' to ''Direct form II''.</entry>
    <entry key="InvalidStateOwnerReasonSampleBasedInputs">If {0} block is a state owner block with a multi-channel input, and if you set the Input processing parameter on the block dialog to 'Elements as channels (sample based)', the {0} block does not support row-major code generation. To generate code, set the 'Array layout' model configuration parameter under Code Generation > Interface pane to 'Column-major'.</entry>
    <entry key="InvalidStateOwnerInDiffModel">Blocks ''{0}'' and ''{1}'' are not inside the same model.</entry>
    <entry key="InvalidResourceOwnerCommented">Block ''{0}'' is commented.</entry>
    <entry key="InvalidStateOwnerInactiveVariant1">Block ''{0}'' is part of an inactive variant. Consider one of the following solutions:\n (1) If this block is inside a variant subsystem, set the ''Variant activation time'' to ''code compile'' or ''startup'' or ''runtime'' .\n (2) If this block is connected to a Variant Source or a Variant Sink block, set the ''Variant activation time'' to ''code compile'' or ''startup''.\n (3) Change the variant conditions such that this block is active and all corresponding State Reader and State Writer blocks are in the same activeness status.</entry>
    <entry key="InvalidStateOwnerInactiveVariant2">The model ''{2}'' can only update or generate code for ERT targets, but cannot simulate, because the State Reader or State Writer block ''{0}'' has configured to access the state owned by ''{1}'' that is part of an inactive variant. Consider changing the variant conditions such that this block active and all corresponding State Reader and State Writer blocks are in the same activeness status.</entry>
    <entry key="InvalidParameterOwnerInactiveVariant2">The model ''{2}'' can only update or generate code for ERT targets, but cannot simulate, because the Parameter Writer block ''{0}'' has configured to access the parameter owned by ''{1}'' that is part of an inactive variant. Consider changing the variant conditions such that this block active and all corresponding Parameter Writer blocks are in the same activeness status.</entry>
    <entry key="StateAccessorBlockJacobianNotSupported">Linearization of the State Reader and State Writer blocks is not supported.</entry>

    <!-- Parameter Writer blocks (general) -->
    <entry key="ParameterReadOrWriteHasNoOwnerBlk">No parameter specified for Parameter Writer block ''{0}''.</entry>
    <entry key="ParameterReaderWriterSelectorTreeEmpty">No block parameters available for writing.</entry>
    <entry key="MdlWithParamAccessorCannotHaveInlinedParams">Model with Parameter Writer blocks can not have inlined parameters. Change the value of the configset parameter "Default parameter behavior" to be "Tunable".</entry>
    <entry key="InvalidParameterAccessorSimulinkFunction">Using Parameter Writer block ''{0}'' inside Simulink Function block ''{1}'' is not supported.</entry>
    <entry key="ParameterAccessorPromotedParamsOrderMismatch">Parameter Writer block ''{0}'' parameter ''ParameterOwnerBlock'' should be placed before the parameter ''ParameterName'' in Block ''{1}'' mask dialog box.</entry>
    <entry key="ParameterAccessorParamsCannotBeFurtherPromoted">Promoting Parameter Writer block ''{0}'' parameters ''ParameterOwnerBlock'' and ''ParameterName'' to a mask that is at a higher level in the model hierarchy than Block ''{1}'' is not supported.</entry>
    <entry key="ParamWriterWritingToBlockParamUsedOutsideParentSS">Unable to write to parameter ''{1}'' of block ''{2}'' using Parameter Writer block ''{0}'' because block ''{2}'' is outside of subsystem ''{3}''.</entry>
    <entry key="ParamWriterInsideReinitSSWithParamChangeEventOutport">Unable to use Parameter Writer block ''{0}'' in subsystem ''{1}'' because subsystem ''{1}'' has a reinitialize port and contains an Outport block with constant sample time.</entry>
    
    <!-- Parameter Writer to model block argument -->
    <entry key="InvalidParameterAccessToOlderProtectedModel1">Parameter Writer block ''{0}'' is unable to write to parameter ''{1}'' of protected Model block ''{2}'' because model was created in an older version of Simulink. To allow Parameter Writer block to write to Model block parameter, save the protected model in R2019a or later.</entry>
    <entry key="InvalidParameterAccessToOlderProtectedModel2">Parameter Writer block ''{0}'' is attempting to write to the parameter ''{1}'' of the protected function-call Model block ''{2}''. This model was created in an older version of Simulink and does not have the information necessary to allow access of its parameters. Ensure that the protected model was created in R2022a or later.</entry>
    <entry key="MultipleParameterAccessorsInSameIRTSystem">Parameter Writer blocks ''{0}'' and ''{1}'' access the same parameter of ''{2}'', and they have the same sample time. To ensure deterministic relative execution order, consider selecting different parameters for these two writer blocks, or placing them in two subsystems that are (1) controlled by a common function-call initiator, an If block, or a Switch Case block or (2) driven by a branched function-call signal and have different execution orders specified by Function-Call Split blocks.</entry>
    <entry key="InvalidParameterOwnerInitTermResetSS">The Parameter Writer block ''{0}'' is placed within the Initialize, Terminate, Reinitialize or Reset Function block ''{1}''. The Model block it is accessing, ''{2}'', cannot be outside the parent subsystem of block ''{1}''.</entry>
    <entry key="InvalidParameterOwnerInDiffModel">Blocks ''{0}'' and ''{1}'' are not inside the same model.</entry>
    <entry key="InvalidParameterAccessorOutsideIRT">
      <![CDATA[
               The Parameter Writer block ''{0}'' is not within an Initialize, Reinitialize, Reset or Terminate Function block. The Writer block can only be used within such Function blocks. For details, see more about the usage of the <a href="matlab:helpview([docroot ''/simulink/helptargets.map''],''ParameterWriter'')">Parameter writer block</a> in the Simulink documentation.
      ]]>
    </entry>
    <entry key="InvalidParameterAccessorOutsideIRTAndCondSS">
      <![CDATA[
               The Parameter Writer block ''{0}'' is not within an Initialize, Reset, Terminate Function block, or conditionally executed subsystems such as enabled subsystem or function-call subsystem. The Writer block can only be used within such Function blocks. For details, see more about the usage of the <a href="matlab:helpview([docroot ''/simulink/helptargets.map''],''ParameterWriter'')">Parameter writer block</a> in the Simulink documentation.
      ]]>
    </entry>
    <entry key="InvalidParameterOwnerInactiveVariant1">Block ''{0}'' is part of an inactive variant. Consider one of the following solutions:\n (1) If this block is inside a variant subsystem, set the ''Variant activation time'' to ''code compile'' or ''startup''\n (2) If this block is connected to a Variant Source or a Variant Sink block, set the ''Variant activation time'' to ''code compile'' or ''startup''.\n (3) Change the variant conditions such that this block is active and all corresponding Parameter Writer blocks are in the same activeness status.</entry>
    <entry key="ParamAccessorCannotWriteToInvalidStorageClassParam">
      <![CDATA[
               Unable to generate code for model ''{0}'' since a Parameter Writer block is attempting to write to parameter ''{1}'' which does not have ''Auto'' or ''Model default'' Storage Class.
               <actions exclusiveFixIts="yes">
               <action type="suggestion">
               <txt>Set the storage class of the workspace parameter ''{1}'' to ''Auto'' or ''Model default''.
               </txt>
               </action>
               </actions>
      ]]>
    </entry>
    <entry key="ParamAccessorCannotWriteToInvalidStorageClassParam2">Unable to generate code because Parameter Writer block ''{0}'' is writing to parameter ''{1}'' with storage class that is generated as a macro or constant in the code.
    </entry>
    <entry key="ParamAccessorCannotWriteToAutoStorageClassModelParam">
      <![CDATA[
               Unable to generate code for model ''{0}'' since a Parameter Writer block is attempting to write to parameter ''{1}'' which belongs to Model block ''{2}'' and has ''Auto'' Storage Class.
               <actions exclusiveFixIts="yes">
               <action type="fixit">
               <cmd>configset.internal.fixIt(''{0}'','DefaultParameterBehavior','Tunable');</cmd>
               <txt>Set the parameter ''Default parameter behavior'' to ''Tunable''.
               </txt>
               </action>
               <action type="suggestion">
               <txt>Set the storage class of the parameter ''{2}'' within the model to a value other than ''Auto''.
               </txt>
               </action>
               </actions>
      ]]>
    </entry>
    <entry key="ParamAccessWritingToParamWithinIRT">The parameter ''{0}'' of the Model block ''{1}'' which is being written to by the Parameter Writer Block ''{2}'', is being referenced within an Initialize, Reinitialize, Reset or Terminate Function block within ''{1}''. Writing to such parameters is not allowed using the Parameter Writer block. Ensure that the parameter is used outside Initialize, Reinitialize, Reset or Terminate Functions.</entry>
        <entry key="ParamAccessWritingToParamUsedAsInitialValue">Parameter ''{0}'' of Model block ''{1}'' is written to by Parameter Writer block ''{2}'' and is used as an Initial Condition of a block in model ''{1}'', which is not supported.</entry>
        <entry key="ParamAccessWritingToParamUsedAsNonTunableParam">Unable to write to parameter ''{0}'' of Model block ''{1}'' using Parameter Writer block ''{2}'' because the parameter is used by a block parameter in the referenced model that the Parameter Writer block does not support.</entry>
        <entry key="ParamAccessWritingToParamAssociatedWithVariantCond">Parameter Writer block ''{1}'' is unable to write to parameter ''{0}'' of Model block ''{2}'' because the parameter has a variant condition associated with it.</entry>
        <entry key="ParamAccessWritingToParamWhichIsNotSimulinkParameterObj">Parameter Writer block ''{2}'' is unable to write to parameter ''{0}'' of Model block ''{1}'' because the parameter is not a Simulink.Parameter object or matlab variable.</entry>
        <entry key="ParamWriterWritingToParamWhichHasNonAutoParamMapping">Parameter Writer block ''{2}'' is unable to write to parameter ''{0}'' of Model block ''{1}'' because the parameter is from an AUTOSAR target or does not have auto parameter mapping in an AUTOSAR target.</entry>
        <entry key="ParamWriterWritingToParamWithConstTs">Parameter Writer block ''{2}'' is unable to write to the parameter ''{0}'' of Model block ''{1}'' because the parameter is used by a block with constant sample time within the model ''{1}''. Writing to such parameters using the Parameter Writer block outside of Initialize, Reset, and Terminate Functions is not supported.</entry>

    <!-- Param Writer to workspace variable -->
    <entry key="ParamWriterWritingToWSVarNonExisting">Unable to write to workspace variable ''{1}'' using Parameter Writer block ''{0}'' because variable ''{1}'' does not exist in the {2} workspace.</entry>
    <entry key="ParamWriterWritingToWSVarNotUsed">Unable to write to {2} workspace variable ''{1}'' using Parameter Writer block ''{0}'' because {2} workspace variable ''{1}'' is not used by any blocks in the model.</entry>
    <entry key="ParamWriterWritingToWSVarSubField">Unable to write to ''{1}'' using Parameter Writer block ''{0}'' because it is a field of a structure type {2} workspace variable.</entry>
    <entry key="ParamWriterWritingToGWSVarNotUsedInBd">Unable to write to base workspace variable ''{1}'' using Parameter Writer block ''{0}'' because variable ''{1}'' is not used by any blocks in the current model.</entry>
    <entry key="ParamWriterWritingToWSVarUsedByParentSS">Unable to write to workspace variable ''{1}'' using Parameter Writer block ''{0}'' because variable ''{1}'' is used by parent subsystem ''{2}'' of block ''{0}''.</entry>
    <entry key="ParamWriterWritingToModelParamArg1">Unable to write to model workspace variable ''{1}'' in model ''{0}'' using Parameter Writer blocks because it is a model parameter argument.</entry>
    <entry key="ParamWriterWritingToModelParamArg2">Unable to write to model workspace variable ''{0}'' using Parameter Writer blocks because it is a model parameter argument.</entry> 
    <entry key="ParamWriterWritingToWSVarNonSimulinkObj">The Parameter Writer block ''{0}'' is trying to write to the variable ''{1}'' which is not a Simulink.Parameter object. Writing to workspace variables that are not defined as Simulink.Parameter objects using the Parameter Writer block is not supported.</entry>
    <entry key="ParamWriterWritingToWSVarUsedAsInitialValue">The Parameter Writer block ''{0}'' is trying to write to the variable ''{1}'' which is used as an initial condition of a block within the model. Writing to parameters used as initial conditions using the Parameter Writer block is not supported.</entry>
    <entry key="ParamWriterWritingToWSVarUsedAsNonTunableParam">Unable to write to workspace variable ''{2}'' using Parameter Writer block ''{0}'' because variable ''{2}'' is used by a parameter of block ''{1}'' that the Parameter Writer block does not support.</entry>
    <entry key="ParamWriterWritingToWSVarUsedByNonBlock">Unable to write to workspace variable ''{1}'' using Parameter Writer block ''{0}'' because some user of variable ''{1}'' is not a Simulink block.</entry>
    <entry key="ParamWriterWritingToWSVarUsedByPort">Unable to write to workspace variable ''{1}'' using Parameter Writer block ''{0}'' because variable ''{1}'' is used by a port of ''{2}''.</entry>
    <entry key="ParamWriterWritingToWSVarUsedInExpression">Unable to write to workspace variable ''{1}'' using Parameter Writer block ''{0}'' because variable ''{1}'' is used in expression ''{2}''  on block ''{3}''.</entry>
    <entry key="ParamWriterWritingToWSVarWithConstTs">Unable to write to workspace variable ''{1}'' using Parameter Writer block ''{0}'' because variable ''{1}'' is used by a block with constant sample time.</entry>
    <entry key="MultipleParamWriteToSameWSVar">Parameter Writer blocks ''{0}'' and ''{1}'' access the same workspace variable, and they have the same sample time. To ensure deterministic relative execution order, consider selecting different parameters for these two writer blocks, or placing them in two subsystems that are (1) controlled by a common function-call initiator, an If block, or a Switch Case block or (2) driven by a branched function-call signal and have different execution orders specified by Function-Call Split blocks.</entry>
    <entry key="MultipleParamWriteToSameWSVarDiffIRT">Initialize Function, Reset Function, or Reinitialize Function blocks ''{2}'' and ''{3}'' must be in the same atomic subsystem because they contain Parameter Writer blocks ''{0}'' and ''{1}'' which write to the same workspace variable.</entry>
    <entry key="ParamWriterWritingToWSVarUpdatedInSim">Unable to manually change value of workspace/data dictionary variable ''{0}'' during simulation because its value is written by Parameter Writer blocks.</entry>
    <entry key="ParamWriterWritingToGWSVarInMultiModels">Unable to write to base workspace variable ''{0}'' because it is written to by Parameter Writer blocks ''{1}'' and ''{2}'' that are in different models or in the same model that is referenced multiple times.</entry>
    <entry key="ParamWriterWritingToGWSVarUsedInRefMdl">Parameter Writer block ''{0}'' is writing to workspace variable ''{1}''  that can be inlined in generated code of any reference model using the variable ''{1}'' because the variable is not a Simulink.Parameter object with non-auto storage class.</entry>
    <entry key="ParamWriterWritingToGWSVarUsedInRefMdlInlined">Parameter Writer block ''{0}'' is writing to workspace variable ''{1}''  that might be inlined in generated code of the reference model of Model block ''{2}'' because the configuration parameter ''Default parameter behavior'' of the reference model is set to ''Inlined''.</entry>
    <entry key="ParamWriterWritingToGWSVarValidationOff">
        <![CDATA[
                 Unable to set ''IsParameterValidationOn'' parameter of Parameter Writer block ''{0}'' to ''off'' because the block writes to workspace variable ''{1}'' which is used in the model referenced by Model block ''{2}''.
               <actions exclusiveFixIts="yes">
               <action type="fixit">
               <cmd>set_param(''{0}'','IsParameterValidationOn','on');</cmd>
               <txt>Set the Parameter Writer block parameter ''IsParameterValidationOn'' to ''on''.
               </txt>
               </action>
               </actions>
        ]]>
    </entry>
    <entry key="ParamWriterWritingToGWSVarUsedInUpperLevel">Unable to use variable ''{1}'' in block ''{2}'' because a Parameter Writer block writes to workspace variable ''{1}'' in the model referenced by Model block ''{0}''.</entry>
    <entry key="ParamWriterWritingToGWSVarUsedByVariantInUpperLevel">Unable to use variable ''{1}'' in block ''{2}'' because a Parameter Writer block writes to workspace variable ''{1}'' in the model referenced by Model block ''{0}'' and the model block is propagating the variant condition containing this parameter to the top model.</entry>
    <entry key="ParamWriterWritingToGWSVarUsedInXILModelBlock">Unable to set simulation mode of Model block ''{0}'' to be ''Software-in-the-loop (SIL)'' or ''Processor-in-the-loop (PIL)''  because Parameter Writer blocks writing to base workspace variable are used both in the current model and the model referenced by Model block ''{0}''.</entry>
    <entry key="ParamWriterWritingToGWSVarNonWritableInModelBlock">Unable to write to base workspace variable ''{1}'' because it is not set up to be changed during simulation by Parameter Writer in the model referenced by Model block ''{0}'', for example, it is used by block with constant sample time, or used by non-tunable parameter of a block, etc.</entry>
    <entry key="ParamWriterWritingToWSVarUsedOutsideParentSS">Unable to write to workspace variable ''{1}'' using Parameter Writer block ''{0}'' because variable ''{1}'' is used by block ''{2}'' that is outside of subsystem ''{3}''.</entry>
    
    <!-- Param Writer to mask subsystem parameter -->
    <entry key="ParamWriterWritingToVirtualMaskedSubsys">
      <![CDATA[
               Parameter Writer block ''{2}'' is unable to write parameter ''{0}'' of masked Subsystem ''{1}'' because the subsystem is virtual.
               <actions exclusiveFixIts="yes">
               <action type="fixit">
               <cmd>set_param(''{1}'','TreatAsAtomicUnit','on');</cmd>
               <txt>Set the subsystem parameter ''Treat as atomic unit'' to ''on''.
               </txt>
               </action>
               </actions>
      ]]>
    </entry>
    <entry key="ParamWriterWritingToMaskParamNonExisting">Parameter Writer block ''{2}'' is unable to write to the parameter ''{0}'' of the masked subsystem ''{1}'' because the parameter does not exist or is not used by any blocks inside.</entry>
    <entry key="ParamWriterWritingToMaskParamUsedWithinIRT">Parameter Writer block ''{2}'' is unable to write to the parameter ''{0}'' of the masked subsystem ''{1}'' because the parameter is referenced within an Initialize, Reinitialize, Reset or Terminate Function block within the masked subsystem. Writing to such parameters using the Parameter Writer block is not supported.</entry>
    <entry key="ParamWriterWritingToMaskParamUsedAsInitialValue">Parameter Writer block ''{2}'' is unable to write to the parameter ''{0}'' of the masked subsystem ''{1}'' because the parameter is used as an initial condition of a block within the masked subsystem. Writing to parameters used as initial conditions using the Parameter Writer block is not supported.</entry>
    <entry key="ParamWriterWritingToMaskParamUsedAsNonTunableParam">Unable to write to parameter ''{0}'' of masked subsystem ''{1}'' using Parameter Writer block ''{2}'' because the parameter is used by a block parameter in the masked subsystem that the Parameter Writer block does not support.</entry>
    <entry key="ParamWriterWritingToMaskParamAssociatedWithVariantCond">Parameter Writer block ''{2}'' is unable to write to the parameter ''{0}'' of the masked subsystem ''{1}'' because the parameter is associated with a variant condition. Writing to parameters associated with variant condition using the Parameter Writer block is not supported.</entry>
    <entry key="ParamWriterWritingToMaskParamUsedByNonBlock">Parameter Writer block ''{2}'' is unable to write to the parameter ''{0}'' of the masked subsystem ''{1}'' because the parameter is not used by a Simulink block. Writing to such parameters using the Parameter Writer block is not supported.</entry>
    <entry key="ParamWriterWritingToMaskParamUsedInExpression">Parameter Writer block ''{2}'' is unable to write to the parameter ''{0}'' of the masked subsystem ''{1}'' because the parameter is used in the expression ''{3}'' on the block ''{4}''. Writing to the mask parameter used in an expression using the Parameter Writer block is not supported.</entry>
    <entry key="ParamWriterWritingToMaskParamWithConstTs">Parameter Writer block ''{2}'' is unable to write to the parameter ''{0}'' of the masked subsystem ''{1}'' because the parameter is used by a block with constant sample time within the subsystem. Writing to such parameters using the Parameter Writer block outside of Initialize, Reset, and Terminate Functions is not supported.</entry>
    <entry key="ParamWriterWritingToDisabledMaskParam">Unable to write to parameter ''{0}'' of masked subsystem ''{1}'' using Parameter Writer block ''{2}'' because the parameter is not enabled.</entry>
    <entry key="ParamWriterToMaskInitInSimOn">Unable to write to masked block ''{0}'' using Parameter Writer block ''{1}'' because the parameter being written is used by a masked block that has initialization code and configuration parameter ''SkipMaskInitInSimulation'' is set to ''off''.
    <![CDATA[
             <actions exclusiveFixIts="yes">
             <action type="fixit" id="SetSkipMaskInitInSimulation1" retvalue="false">
             <cmd>set_param(''{2}'', ''SkipMaskInitInSimulation'', ''on'')</cmd>
             <txt>Skip mask initialization during simulation.</txt>
             </action>
             </actions>]]>
    </entry>
    <entry key="ParamWriterToMaskInitInSimOnThroughWSVar">Unable to write to workspace variable ''{2}'' using Parameter Writer block ''{1}'' because the workspace variable is used by a masked block that has initialization code and configuration parameter ''SkipMaskInitInSimulation'' is set to ''off''.
    <![CDATA[
             <actions exclusiveFixIts="yes">
             <action type="fixit" id="SetSkipMaskInitInSimulation2" retvalue="false">
             <cmd>set_param(''{0}'', ''SkipMaskInitInSimulation'', ''on'')</cmd>
             <txt>Skip mask initialization during simulation.</txt>
             </action>
             </actions>]]>
    </entry>

    <!-- run first/last block Execution order priority setting -->
    <entry key="RunFirstLastDateTimeBlk"><![CDATA[Block ''{0}'' does not support an ''Execution Order'' value of 'First' or 'Last' because block ''{0}'' is a DateTime Clock or DateTime Clock Reader block.]]></entry>
    <entry key="RunFirstLastDSMBlk"><![CDATA[Block ''{0}'' does not support an ''Execution Order'' value of 'First' or 'Last' because block ''{0}'' is a Data Store Memory block.]]></entry>
    <entry key="RunFirstLastBlockWithFcnCallOutput"><![CDATA[<sldiag objui="outport" objparam="{1,number,integer}" objname="{0}">Output port {1,number,integer}</sldiag> of block ''{0}'' does not support a function-call signal because the block ''Execution Order'' value is set to 'First' or 'Last'.]]></entry>
    <entry key="RunFirstLastBlockWithFcnCallInput"><![CDATA[<sldiag objui="inport" objparam="{1,number,integer}" objname="{0}">Input port {1,number,integer}</sldiag> of block ''{0}'' does not support a function-call signal because the block ''Execution Order'' value is set to 'First' or 'Last'.]]></entry>
    <entry key="RunFirstLastVirtualBlock"><![CDATA[Block ''{0}'' does not support ''Execution Order'' value of 'First' or 'Last' because block ''{0}'' is virtual.]]></entry>
    <entry key="RunFirstLastIRTSubsystemBlock"><![CDATA[Block ''{0}'' does not support an ''Execution Order'' value of 'First' or 'Last' because block ''{0}'' is an Initialize Function, Reset Function, Reinitialize Function, or Terminate Function block.]]></entry>
    <entry key="RunFirstLastActionBlock"><![CDATA[Block ''{0}'' does not support ''Execution Order'' value of 'First' or 'Last' because block ''{0}'' is an If or Switch Case block.]]></entry>
    <entry key="RunFirstLastInportOutportBlk"><![CDATA[Block ''{0}'' with ''Execution Order'' value set to 'First' or 'Last' is not supported because block ''{0}'' is an Inport or Outport block.]]></entry>
    <entry key="RunLastBlockNotConnectedToOutport"><![CDATA[Unable to connect block ''{0}'' to the <sldiag objui="outport" objparam="{1, number, integer}" objname="{0}">output port {1, number, integer}</sldiag> of block ''{2}'' with ''Execution Order'' set to 'Last'. Use the Outport block to connect the output signal from a block with ''Execution Order'' set to 'Last'.]]></entry>
    <entry key="RunFirstBlockNotConnectedToInport"><![CDATA[Unable to connect block ''{0}'' to the <sldiag objui="inport" objparam="{1, number, integer}" objname="{0}">input port {1, number, integer}</sldiag> of block ''{2}'' with ''Execution Order'' set to 'First'. Use the Inport block to connect the input signal to a block with ''Execution Order'' set to 'First'.]]></entry>
    <entry key="RunFirstLastBlockCannotBeHardwareSubsystem">Subsystem block ''{0}'' does not support an ''Execution Order'' value of 'First' or 'Last' because the block contains a State Control block with option set to 'Synchronous'.</entry>
    <entry key="RunFirstLastBlockCannotBeSSHavingControlPorts">Subsystem block ''{0}'' does not support an ''Execution Order'' value of 'First' or 'Last' because the block has a control port that corresponds with a block such as an Enable or Trigger block.</entry>
    <entry key="RunFirstLastBlockInMultiTaskingSystem">Block ''{0}'' with 'Execution Order' set as 'First' or 'Last' must be used in a system that executes in a single task.
    <![CDATA[<actions exclusiveFixIts="yes">
        <action type="fixit">
            <cmd>set_param_action(''{1}'', 'Solver', 'FixedStepDiscrete');set_param_action(''{1}'', ''SolverMode'', ''SingleTasking'');</cmd>
            <txt>Consider configuring model ''{1}'' to execute in single tasking mode.</txt>
        </action>
      </actions>]]>
    </entry>
    <entry key="RunFirstLastBlockInVirtualSystem"> Block ''{0}'' with 'Execution Order' value set to 'First' or 'Last' is not supported because block ''{0}'' is placed inside a Virtual Subsystem block ''{1}''.
    <![CDATA[<actions exclusiveFixIts="yes">
        <action type="fixit">
            <cmd>set_param_action(''{1}'', 'TreatAsAtomicUnit', 'on');</cmd>
            <txt>Consider configuring its parent ''{1}'' to an Atomic subsystem.</txt>
        </action>
      </actions>]]>
    </entry>
    <entry key="RunFirstLastBlockInVariantSystem">Block ''{0}'' with 'Execution Order' value set to 'First' or 'Last' is not supported because block ''{0}'' is placed inside a Variant Subsystem block ''{1}''.</entry>
    <entry key="DupRunFirstLastBlock">Unable to set 'Execution Order' value of block ''{0}'' and block ''{1}'' to 'First' or 'Last' because both the blocks are at the same hierarchy level.</entry>
    <entry key="RunFirstLastBlockWithVariantCondition">Unable to control block ''{0}'' by variant conditions because 'Execution Order' value of block ''{0}'' is set to 'First' or 'Last'. Either set 'Execution Order' value of block ''{0}'' to 'Based on Priority' or avoid using variant condition ''{1}'' to control block ''{0}''.</entry>
    <entry key="RunFirstLastBlockInContinuousTimeSystem">Block ''{0}'' with 'Execution Order' value set to 'First' or 'Last' is not supported inside a system that contains continuous sample time.</entry>
    <entry key="RunFirstLastBlockInConstantRate">Block ''{0}'' with 'Execution Order' value set to 'First' or 'Last' is not supported because it has only constant sample time.</entry>
    <entry key="RunFirstLastBlockWithCState">Block ''{0}'' with 'Execution Order' value set to 'First' or 'Last' is not supported because block ''{0}'' contains continuous state.</entry>

    <entry key="RunFirstLastBlockMinAlgLoop1">Invalid setting in Subsystem block ''{0}'' for parameter 'Minimize artificial algebraic loop occurrences'. This setting is not supported because the subsystem contains block ''{1}'' with 'Execution Order' value set to 'First' or 'Last' inside the subsystem hierarchy. Set the 'Minimize artificial algebraic loop occurrences' parameter to 'off'.
      <![CDATA[<actions exclusiveFixIts="yes">
        <action type="fixit">
            <cmd>set_param_action(''{0}'', 'MinAlgLoopOccurrences', 'off');</cmd>
            <txt>Consider clearing the option ''Minimize artificial algebraic loop occurrences'' for ''{0}''.</txt>
        </action>
      </actions>]]>
    </entry>
    <entry key="RunFirstLastBlockMinAlgLoop2">Invalid setting in Subsystem block ''{0}'' for parameter 'Minimize artificial algebraic loop occurrences'. This setting is not supported because Subsystem block ''{0}'' contains a Model block ''{1}'' that refers to a model containing block ''{2}''. Block ''{2}'' is either a block with 'Execution Order' value set to 'First' or 'Last' or another Model block that refers to a model containing such block further down in the subsystem or model reference hierarchy. Set the 'Minimize artificial algebraic loop occurrences' parameter to 'off'.
      <![CDATA[<actions exclusiveFixIts="yes">
        <action type="fixit">
            <cmd>set_param_action(''{0}'', 'MinAlgLoopOccurrences', 'off');</cmd>
            <txt>Consider clearing the option ''Minimize artificial algebraic loop occurrences'' for ''{0}''.</txt>
        </action>
      </actions>]]>
    </entry>
    <entry key="RunFirstLastBlockMdlRefMinAlgLoop1"><![CDATA[Invalid setting in Model ''{0}'' for Model Configuration Parameter <sldiag objui="configset" objparam="ModelReferenceMinAlgLoopOccurrences">'Minimize artificial algebraic loop occurrences'</sldiag>. This setting is not supported because 'Execution Order' value of block ''{1}'' is set to 'First' or 'Last'. Set the <sldiag objui="configset" objparam="ModelReferenceMinAlgLoopOccurrences">'Minimize artificial algebraic loop occurrences'</sldiag> parameter to 'off'.
      <actions exclusiveFixIts="yes">
        <action type="fixit">
            <cmd>set_param_action(''{0}'', 'ModelReferenceMinAlgLoopOccurrences', 'off');</cmd>
            <txt>Consider clearing configuration parameter <sldiag objui="configset" objparam="ModelReferenceMinAlgLoopOccurrences">''Minimize artificial algebraic loop occurrences''</sldiag> for ''{0}''.</txt>
        </action>
      </actions>]]>
    </entry>
    <entry key="RunFirstLastBlockMdlRefMinAlgLoop2"><![CDATA[Invalid setting in Model ''{0}'' for configuration parameter <sldiag objui="configset" objparam="ModelReferenceMinAlgLoopOccurrences">'Minimize artificial algebraic loop occurrences'</sldiag>. This setting is not supported because Model ''{0}'' contains Model block ''{1}'' that references block ''{2}'' with an 'Execution Order' value set as 'First' or 'Last'. Set the <sldiag objui="configset" objparam="ModelReferenceMinAlgLoopOccurrences">'Minimize artificial algebraic loop occurrences'</sldiag> parameter to 'off'.
      <actions exclusiveFixIts="yes">
        <action type="fixit">
            <cmd>set_param_action(''{0}'', 'ModelReferenceMinAlgLoopOccurrences', 'off');</cmd>
            <txt>Consider clearing configuration parameter <sldiag objui="configset" objparam="ModelReferenceMinAlgLoopOccurrences">''Minimize artificial algebraic loop occurrences''</sldiag> for ''{0}''.</txt>
        </action>
      </actions>]]>
    </entry>
    <entry key="RunFirstLastBlockInAlgebraicLoop1">Unable to solve the algebraic loop containing Subsystem block ''{0}'' because 'Execution Order' value of block ''{1}'' inside Subsystem block ''{0}'' is set to 'First' or 'Last'.
    </entry>
    <entry key="RunFirstLastBlockInAlgebraicLoop2">Unable to solve the algebraic loop containing Subsystem block ''{0}'' because Subsystem Block ''{0}'' contains a Model block ''{1}'' that refers to a model containing block ''{2}''. Block ''{2}'' is either a block with 'Execution Order' value set to 'First' or 'Last' or another Model block that refers to a model containing such block further down in the subsystem or model reference hierarchy.
    </entry>
    <entry key="RunFirstLastBlockInAlgebraicLoop3">Unable to solve algebraic loop containing Model block ''{0}'' because Model block ''{0}'' refers to a model that contains block ''{1}'' which is either a block with 'Execution Order' value set to 'First' or 'Last' or another Model block that refers to a model containing such subsystem further down in the subsystem or model reference hierarchy.
    </entry>

    <!-- Modeling Pattern for SWArch function component: KBI3-->
    <entry key="FcnCallCompBlockWithFcnCallOutput">Block ''{0}'' does not support a function-call signal output because it is either a software architecture component or placed within a software architecture component.</entry>
    <entry key="SWArchCompBlockWithSelfLoop">A software architecture component ''{0}'' does not support self loop.</entry>
    <entry key="SWArchCompBlockWithSelfLoop2">Self loop is not supported for block ''{0}'' because the block is inside a software architecture component.</entry>
    <entry key="SWArchComposationWithFcnSplit">Block ''{0}'' is not supported in a software architecture function composition model because the block is a Function-Call Split block.</entry>
    <entry key="SWArchComposationWithFcnLatch">Block ''{0}'' is not supported in a software architecture function composition model because the block is a Function-Call Feedback Latch block.</entry>




           
    <!-- Param Writer to general block parameter -->
    <entry key="ParamWriterWritingToBlockParamInitWithWSVariable">Parameter Writer block ''{2}'' is unable to write to the parameter ''{0}'' of the block ''{1}'' because the block is initialized with a mask parameter or workspace variable on its dialog. Writing to such parameters using the Parameter Writer block is not supported.</entry>
    <entry key="ParamWriterWritingToBlockParamWithConstTs">Parameter Writer block ''{2}'' is unable to write to the parameter ''{0}'' of the block ''{1}'' because the block has constant sample time. Writing to such block parameters using the Parameter Writer block outside of Initialize, Reset, and Terminate Functions is not supported.</entry>

    <!-- ParamAccessorCannotWriteToInlinedBlockParam TopTester: test/toolbox/simulink/configsets/codegen/constraints/tconfigset_Constraints_FixIt.m -->
    <entry key="ParamAccessorCannotWriteToInlinedBlockParam">
      <![CDATA[
               Code could not be generated for the model ''{0}'' since parameter writer block is used in the model and the parameter behavior of the model is set as "inlined".
               <actions exclusiveFixIts="yes">
               <action type="fixit">
               <cmd>configset.internal.fixIt(''{0}'','DefaultParameterBehavior','Tunable');</cmd>
               <txt>Set the parameter ''Default parameter behavior'' to ''Tunable''.
               </txt>
               </action>
               </actions>
      ]]>
    </entry>
    <entry key="ParameterReaderOrWriterInvalidParameterOwner">Cannot set block ''{0}'' as the parameter owner block for the Parameter Writer block ''{1}''.</entry>
    <entry key="ParamWriterWritingToBlockParamNotTunable">Unable to write to parameter ''{0}'' of block ''{1}'' using Parameter Writer block ''{2}'' because the parameter is not tunable during run-time.</entry>
    <entry key="ParamWriterWritingToBlockParamNoRTP">Unable to write to parameter ''{0}'' of block ''{1}'' using Parameter Writer block ''{2}'' because the parameter does not have a corresponding run-time parameter.</entry>
    <entry key="ParamWriterWritingToBlockParamInvalidTransform">Parameter Writer block ''{2}'' is unable to write to parameter ''{0}'' of block ''{1}'', because the corresponding dialog parameter and run-time parameter do not have a one to one mapping.</entry>
    <entry key="ParamWriterWritingToBlockUnderDiffMask">Unable to write to parameter ''{0}'' of block ''{1}'' using Parameter Writer block ''{2}'' because these blocks do not have the same immediate parent masked subsystem or the mask of block ''{1}'' does not have a parameter named ''{0}''.</entry>
    <entry key="ParamWriterAndOwnerInDiffCharts"> Parameter Writer block ''{0}'' must be in the same Stateflow chart as parameter owner block ''{1}''.</entry>
    <entry key="ParamWriterParameterNameNotSet">No parameter has been selected. A parameter of owner block ''{0}'' must be selected.</entry>
    <entry key="ParamWriterParameterNameNotSet2">No parameter has been selected for Parameter Writer ''{0}''. A parameter of the selected owner block must be selected.</entry>
    <entry key="ParamWriterParameterNameNotValid">Parameter Writer block ''{2}'' is unable to write to the parameter ''{0}'' of the block ''{1}'', which is no longer valid. The parameter ''{0}'' may have been removed or renamed due to recent block configuration.</entry>
    <entry key="ParamWriterWritingToBlockParamArg">Unable to write to parameter ''{0}'' of block ''{1}'' using Parameter Writer block ''{2}'' because the parameter is checked as an argument.</entry>
    <entry key="ParamWriterBlockParameterMultiInstances">
        <![CDATA[The model ''{0}'' or models in its hierarchy directly or indirectly referenced by both Model blocks ''{1}'' and ''{2}'' have Parameter Writer block(s) writing to block, mask, or Model block parameter. Parameter Writer block writing to block, mask, or Model block parameter is not supported in a multiple instanced model.
        <actions exclusiveFixIts="yes">
        <action type="fixit">
        <cmd>Simulink.ModelReference.internal.ModelRefFixes(''MultiInstanceToFile'',''{0}'')</cmd>
        <txt>Set the configuration parameter ''Total number of instances allowed per top model'' to ''One''.</txt>
        </action>
        <action type="suggestion">
        <txt>Edit the model reference hierarchy so that model ''{0}'' is only referenced once.</txt>
        </action>
        </actions>]]>
      </entry>
      <entry key="ParamWriterWritingToSigGenBlock">Unable to write to parameter ''{0}'' of block ''{1}'' using Parameter Writer block ''{2}'' because the parameter's unit is set to "rad/sec".</entry>
      <entry key="ParamWriterWritingToMultiWordParam">Unable to simulate and generate code because the value provided by Parameter Writer block ''{1}'' is converted to parameter ''{0}'' of multi-word type.</entry>
      <entry key="ParamWriterWritingToLongLongParam">Unable to generate code because the value provided by Parameter Writer block ''{1}'' is converted to parameter ''{0}'' of data type ''int64'', which exceeds the supported number of bits.
      <![CDATA[
             <actions>
             <action type="fixit" id="SetLongLongModeForParamWriter">
             <cmd>configset.internal.fixIt(''{2}'','ProdLongLongMode',''on'')</cmd>
             <txt><sldiag objui="configset" objparam="ProdLongLongMode">Specify that your C compiler supports the C long long data type.</sldiag></txt>
             </action>
             </actions>]]>
      </entry>
      <entry key="ParamWriterWritingToBlockParamUpdatedInSim">Unable to manually change value of parameter ''{0}'' of block ''{1}'' during simulation because its value is written by Parameter Writer blocks.</entry>
      
     <!-- Param Writer Speed Optimization -->
   <entry key="ParamWriterWritingToBlockParamValidation">Parameter Writer blocks in ''{0}'' that write to parameter owner block ''{1}'' must have the same parameter validation settings.
    <![CDATA[
             <actions exclusiveFixIts="yes">
             <action type="fixit" id="SetValidationLocalOffForBlockParamWriters" retvalue="false">
             <cmd>Simulink.internal.setParamWriterValidationStatus(''{1}'',''off'')</cmd>
             <txt>Disable parameter validation for all Parameter Writer blocks that write to owner block ''{1}''.</txt>
             </action>
             <action type="fixit" id="SetValidationLocalOnForBlockParamWriters" retvalue="false">
             <cmd>Simulink.internal.setParamWriterValidationStatus(''{1}'',''on'')</cmd>
             <txt>Enable parameter validation for all Parameter Writer blocks that write to owner block ''{1}''.</txt>
             </action>
             <action type="fixit" id="SetValidationGlobalOffForParamWriters1">
             <cmd>configset.internal.fixIt(''{0}'',''ParamWriterValidationControl'',''DisableAll'')</cmd>
             <txt><sldiag objui="configset" objparam="ParamWriterValidationControl">Disable parameter validation for all Parameter Writer blocks.</sldiag></txt>
             </action>
             <action type="fixit" id="SetValidationGlobalOnForParamWriters1">
             <cmd>configset.internal.fixIt(''{0}'',''ParamWriterValidationControl'',''EnableAll'')</cmd>
             <txt><sldiag objui="configset" objparam="ParamWriterValidationControl">Enable parameter validation for all Parameter Writer blocks.</sldiag></txt>
             </action>
             </actions>]]>
   </entry>
   <entry key="ParamWriterWritingToWSParamValidation">Parameter Writer blocks in ''{0}'' that write to workspace variables must have the same parameter validation settings.
    <![CDATA[
             <actions exclusiveFixIts="yes">
             <action type="fixit" id="SetValidationLocalOffForWSParamWriters" retvalue="false"> 
             <cmd>Simulink.internal.setParamWriterValidationStatus(''{0}'',''off'')</cmd>
             <txt>Disable parameter validation for all Parameter Writer blocks that write to workspace variables.</txt>
             </action>
             <action type="fixit" id="SetValidationLocalOnForWSParamWriters" retvalue="false"> 
             <cmd>Simulink.internal.setParamWriterValidationStatus(''{0}'',''on'')</cmd>
             <txt>Enable parameter validation for all Parameter Writer blocks that write to workspace variables.</txt>
             </action>
             <action type="fixit" id="SetValidationGlobalOffForParamWriters2">
             <cmd>configset.internal.fixIt(''{0}'',''ParamWriterValidationControl'',''DisableAll'')</cmd>
             <txt><sldiag objui="configset" objparam="ParamWriterValidationControl">Disable parameter validation for all Parameter Writer blocks.</sldiag></txt>
             </action>
             <action type="fixit" id="SetValidationGlobalOnForParamWriters2">
             <cmd>configset.internal.fixIt(''{0}'',''ParamWriterValidationControl'',''EnableAll'')</cmd>
             <txt><sldiag objui="configset" objparam="ParamWriterValidationControl">Enable parameter validation for all Parameter Writer blocks.</sldiag></txt>
             </action>
             </actions>]]>
   </entry>
   <entry key="ParamWriterToModelArgValidationOff1">
      Unable to disable parameter validation for Parameter Writer block ''{1}'' because it writes to Model block ''{0}''.
      <![CDATA[
             <actions exclusiveFixIts="yes">
             <action type="fixit" id="SetValidationLocalOnForMdlArgParamWriters1" retvalue="false">
             <cmd>Simulink.internal.setParamWriterValidationStatus(''{0}'',''on'')</cmd>
             <txt>Enable parameter validation for all Parameter Writer blocks that write to Model block ''{1}''.</txt>
             </action>
             </actions>]]>           
   </entry>
   <entry key="ParamWriterToModelArgValidationOff2">
      Unable to disable parameter validation for Parameter Writer block ''{2}'' because mask parameter ''{0}'' of block ''{1}'' is used by a Model block.
      <![CDATA[
             <actions exclusiveFixIts="yes">
             <action type="fixit" id="SetValidationLocalOnForMdlArgParamWriters2" retvalue="false">
             <cmd>Simulink.internal.setParamWriterValidationStatus(''{1}'',''on'')</cmd>
             <txt>Enable parameter validation for all Parameter Writer blocks that write to masked block ''{1}''.</txt>
             </action>
             </actions>]]>  
   </entry>
   <entry key="ParamWriterToModelArgValidationOff3">
      Unable to disable parameter validation for Parameter Writer block ''{1}'' because workspace variable ''{0}'' is used by a Model block.
      <![CDATA[
             <actions exclusiveFixIts="yes">
             <action type="fixit" id="SetValidationLocalOnForMdlArgParamWriters3" retvalue="false">
             <cmd>Simulink.internal.setParamWriterValidationStatus(bdroot(''{1}''),''on'')</cmd>
             <txt>Enable parameter validation for all Parameter Writer blocks that write to workspace variables.</txt>
             </action>
             </actions>]]>  
   </entry>
      
   <!-- Param Writer/Owner in Same Task -->
    <entry key="ParamAccessorBlocksInSameCompInfo">
      Blocks ''{0}'' and ''{1}'' cannot be placed in the same non-virtual hierarchy because they access the same parameter owned by ''{2}''. Consider placing them in two function-call subsystems (1) driven by different root-level Inport blocks inside an export function model (2) driven by a branched function-call signal and having different execution orders specified by Function-Call Split blocks, or (3) controlled by a common initiator, an If block, or a Switch Case block.\n Alternatively, consider placing blocks ''{0}'' and ''{1}'' in Initialize and Terminate Function blocks whose parent subsystem contains the parameter owner block ''{2}''.
    </entry>
    <entry key="ParamAccessorBlocksInSameCompInfo2">
      Blocks ''{0}'' and ''{1}'' cannot be placed in the same non-virtual hierarchy because they access the same workspace parameter ''{2}''. Consider placing them in two function-call subsystems (1) driven by different root-level Inport blocks inside an export function model (2) driven by a branched function-call signal and having different execution orders specified by Function-Call Split blocks, or (3) controlled by a common initiator, an If block, or a Switch Case block.\n Alternatively, consider placing blocks ''{0}'' and ''{1}'' in Initialize and Terminate Function blocks whose parent subsystem contains the parameter owner block ''{2}''.
    </entry>
    <entry key="ParamAccessorAndOwnerInSameCompInfo">
      Block ''{0}'' accesses the parameter owned by ''{1}'', and therefore they cannot be placed in the same non-virtual hierarchy. Consider placing them in two function-call subsystems (1) driven by different root-level Inport blocks inside an export function model (2) driven by a branched function-call signal and having different execution orders specified by Function-Call Split blocks, or (3) controlled by a common initiator, an If block, or a Switch Case block.\n Alternatively, consider placing block ''{0}'' in an Initialize or Terminate Function block whose parent subsystem contains the parameter owner block ''{1}''.
    </entry>
    <entry key="ParamAccessorBlocksInSameTaskError">
      Param Writer blocks ''{0}'' and ''{1}'' access the same parameter owned by ''{2}'', and they are driven by the same root-level Inport block or are in the same Simulink Function inside an export function model. To ensure deterministic relative execution order, consider placing them in two subsystems that are (1) driven by a branched function-call signal and have different execution orders specified by Function-Call Split blocks or (2) controlled by a common function-call initiator, an If block, or a Switch Case block. Alternatively, consider placing blocks ''{0}'' and ''{1}'' in Initialize and Terminate Function blocks whose parent subsystem contains the parameter owner block ''{2}''.
    </entry>
    <entry key="ParamAccessorBlocksInSameTaskError2">
      Param Writer blocks ''{0}'' and ''{1}'' access the same workspace parameter ''{2}'', and they are driven by the same root-level Inport block or are in the same Simulink Function inside an export function model. To ensure deterministic relative execution order, consider placing them in two subsystems that are (1) driven by a branched function-call signal and have different execution orders specified by Function-Call Split blocks or (2) controlled by a common function-call initiator, an If block, or a Switch Case block. Alternatively, consider placing blocks ''{0}'' and ''{1}'' in Initialize and Terminate Function blocks whose parent subsystem contains the parameter owner block ''{2}''.
    </entry>
    <entry key="ParamAccessorBlocksInNonExpFcnMdlSameTsError">
      Parameter Writer blocks ''{0}'' and ''{1}'' access the same parameter owned by ''{2}'', and they have the same sample time. To ensure deterministic relative execution order, consider placing them in two subsystems that are (1) driven by a branched function-call signal and have different execution orders specified by Function-Call Split blocks or (2) controlled by a common function-call initiator, an If block, or a Switch Case block. Alternatively, consider placing blocks ''{0}'' and ''{1}'' in Initialize and Terminate Function blocks whose parent subsystem contains the parameter owner block ''{2}''.
    </entry>
    <entry key="ParamAccessorBlocksInNonExpFcnMdlSameTsError2">
      Parameter Writer blocks ''{0}'' and ''{1}'' access the same workspace parameter ''{2}'', and they have the same sample time. To ensure deterministic relative execution order, consider placing them in two subsystems that are (1) driven by a branched function-call signal and have different execution orders specified by Function-Call Split blocks or (2) controlled by a common function-call initiator, an If block, or a Switch Case block. Alternatively, consider placing blocks ''{0}'' and ''{1}'' in Initialize and Terminate Function blocks whose parent subsystem contains the parameter owner block ''{2}''.
    </entry>
    <entry key="ParamAccessorAndOwnerInSameTaskError">
      Block ''{0}'' accesses the parameter owned by ''{1}'', and both blocks are driven by the same root-level Inport block or in the same Simulink Function inside an export function model. To ensure deterministic relative execution order, consider placing them in two subsystems that are (1) driven by a branched function-call signal and have different execution orders specified by Function-Call Split blocks or (2) controlled by a common function-call initiator, an If block, or a Switch Case block. Alternatively, consider placing block ''{0}'' in an Initialize or Terminate Function block whose parent subsystem contains the parameter owner block ''{1}''.
    </entry>
    <entry key="ParamAccessorAndOwnerInNonExpFcnMdlSameTsError">
      Block ''{0}'' accesses the parameter owned by ''{1}'' with the same sample time. To ensure deterministic relative execution order, consider placing them in two subsystems that are (1) driven by a branched function-call signal and have different execution orders specified by Function-Call Split blocks or (2) controlled by a common function-call initiator, an If block, or a Switch Case block. Alternatively, consider placing block ''{0}'' in an Initialize or Terminate Function block whose parent subsystem contains the parameter owner block ''{1}''.
    </entry>
    <entry key="ParamWriteNotDrvByFcnCallRootInport">Parameter Writer block ''{0}'' must be placed either inside the function-call context driven by a root-level Inport block that outputs a function-call signal or inside an Initialize or Terminate Function block because the model is an export-function model.</entry>
    <entry key="ParamOwnerNotInExpFcnMdlRootFcnCall">Block ''{0}'' configured to be accessed by Parameter Writer block ''{1}'' must be inside a function-call subsystem driven by a root-level function-call Inport block because the model is an export-function model.</entry>
        <entry key="ParamOwnerNotSingleRate">Unable to update parameter of block ''{0}'' using Parameter Writer block ''{1}'' because block ''{0}'' is associated with multiple tasks.</entry>
        <entry key="ParamOwnerNotSingleRate2">Parameter Writer block ''{2}'' is unable to write to parameter ''{0}'' of Model block ''{1}'', because the Model block is not an export-function model and has multiple tasks, or the Model block is an export-function model and the parameter is referenced by multiple port groups within the Model block.</entry>
        <entry key="ParamOwnerBlkCannotBeInsideForEachSS">Block ''{0}'' is set to allow its parameter to be accessed by Parameter Writer blocks. It can not be placed inside a For Each subsystem.</entry>
    <entry key="ParamAccessorAndOwnerInDiffTasks">
            <![CDATA[Parameter Writer block ''{0}'' is writing to the parameter owned by ''{1}'', which is in a different task with diagnostic <sldiag objui="configset" objparam="MultiTaskRateTransMsg">''Multitask data transfer''</sldiag> set to 'error'.  Consider changing the parameter from ''error'' to ''warning'', or placing the blocks in separate function-call subsystems that are either (1) driven by different root-level Inport blocks inside an export-function model, (2) driven by a branched function-call signal, with different execution orders specified by Function-Call Split blocks, or (3) controlled by a common initiator, an If block, or a Switch Case block.\n Alternatively, consider placing block ''{0}'' in an Initialize or Terminate Function block whose parent subsystem contains the parameter owner block ''{1}''.]]>
    </entry>
    <entry key="ParamAccessorAndOwnerInDiffTasksWarning">
            Parameter Writer block ''{0}'' is unable to write to the parameter owned by ''{1}'' that is in a different task. Consider placing them in two function-call subsystems (1) driven by different root-level Inport blocks inside an export function model (2) driven by a branched function-call signal and have different execution orders specified by Function-Call Split blocks, or (3) controlled by a common initiator, an If block, or a Switch Case block.\n Alternatively, consider placing block ''{0}'' in an Initialize or Terminate Function block whose parent subsystem contains the parameter owner block ''{1}''.
    </entry>
    <entry key="ParamAccessorAndOwnerCallerInSameSimulinkFunctionChain">
            Function Caller blocks ''{0}'' and ''{1}'' are in the same task. They call Simulink Function ''{2}'' which contains ''{3}'', and Simulink Function ''{4}'' which contains ''{5}'', respectively.
    </entry>
    <entry key="ParamWriteHasConstantTs">Parameter Writer ''{0}'' cannot have a constant sample time, or be placed inside a subsystem with a constant sample time.</entry>
    <entry key="ParamOwnerHasConstantTs">Block ''{0}'' is set to allow its parameter to be accessed by Parameter Writer blocks outside of Initialize, Reinitialize, Reset or Terminate Function block. Therefore, this block cannot have a constant sample time, or be placed inside a subsystem with a constant sample time.</entry>

    <entry key="StateSpaceXformErr">Error from ''{0}'' in ''{1}''.</entry>
    <entry key="StrictMsgIsSetToNonStrict">The ''Mux blocks used to create bus signals'' option in the block diagram ''{0}'' is set to ''warning'' or ''none''. Before getting the compiled bus structure, you should set this option to ''error'' in the Connectivity pane of the Diagnostics page in the Configuration Parameters Dialog. It is assumed all Mux blocks in the model are used to concatenate signals. That is, no Mux block is used to create a bus signal. See Simulink documentation for more information about StrictBusMsg.</entry>
    <entry key="StrictMsgIsSetToNonStrictBusType">The ''Mux blocks used to create bus signals'' option in the block diagram ''{0}'' is set to ''warning'' or ''none''. Before getting the compiled bus data type, you should set this option to ''error'' in the Connectivity pane of the Diagnostics page in the Configuration Parameters Dialog.</entry>
    <entry key="StrictMsgIsSetToNonStrictSigHier">The ''Mux blocks used to create bus signals'' option in the block diagram ''{0}'' is set to ''warning'' or ''none''. Before getting the signal hierarchy, you should set this option to ''error'' in the Connectivity pane of the Diagnostics page in the Configuration Parameters Dialog.</entry>
    <entry key="StrictMsgIsSetToNonStrictBusDesignMinMax">The ''Mux blocks used to create bus signals'' option in the block diagram ''{0}'' is set to ''warning'' or ''none''. Before getting the compiled design minimum or maximum from port with bus signal, you should set this option to ''error'' in the Connectivity pane of the Diagnostics page in the Configuration Parameters Dialog.</entry>
    <entry key="SubscriptOutOfBounds"><![CDATA[Index exceeds table dimensions for <sldiag objui="inport" objparam="{0}" objname="{2}">input port {0}</sldiag>{1,number,integer} of block ''{2}''.]]></entry>
    <entry key="EnforceSubscriptOutOfBounds"><![CDATA[Index exceeds table dimensions for <sldiag objui="inport" objparam="{0}" objname="{2}">input port {0}</sldiag>{1,number,integer} of block ''{2}''. Either clear  the 'Assume index is within range' parameter or limit index to be within the range of the table dimensions.]]></entry>
    <entry key="InterpSubscriptOutOfBoundsIndexFromBus"><![CDATA[Index exceeds table dimensions for the first signal in the bus object propagated to the <sldiag objui="inport" objparam="{0}" objname="{2}">input port {0}</sldiag>{1,number,integer} of block ''{2}''.]]></entry>
    <entry key="EnforceInterpSubscriptOutOfBoundsIndexFromBus"><![CDATA[Index exceeds table dimensions for the first signal in the bus object propagated to the <sldiag objui="inport" objparam="{0}" objname="{2}">input port {0}</sldiag>{1,number,integer} of block ''{2}''. Either clear  the 'Assume index is within range' parameter or limit index to be within the range of the table dimensions.]]></entry>
    <entry key="SubsysDisableFcnCallError">Subsystem ''{0}'' had an error during function-call disabling on function-call input port element {1,number,integer} at time {2}</entry>
    <entry key="SubsysEnableFcnCallError">Subsystem ''{0}'' had an error during function-call enabling on function-call input port element {1,number,integer} at time {2}</entry>
    <entry key="SubsysGndedFCSSCodeGenError">Simulink Coder does not guarantee proper execution of models containing unconnected function-call inputs. Try using the Simulink Function-Call Generator block to drive the function-call input port of block ''{0}''.</entry>
    <entry key="SubsysErrFcnMsg">Error occurred in ''{0}''. {1}</entry>
    <entry key="SubsysErrFcnMsgInvCB" note="stringDatatypeUpdate">Error occurred while attempting to call the error callback function ''{0}'' of subsystem ''{1}''. The callback function should take a block handle and error ID as input arguments, and return a character vector that replaces the error produced within the subsystem. The following error was produced when the error callback function was called: {2}</entry>
    <entry key="SubsysErrFcnMsgInvCBRetVal" note="stringDatatypeUpdate">Error occurred while calling the error callback function ''{0}'' of subsystem ''{1}''. The function incorrectly returns a non-character vector value. The callback function should take a block handle and error ID as input arguments, and return a character vector that replaces the error produced within the subsystem</entry>
    <entry key="SubsysReadProtectErr">An error occurred within the read-protected ''{0}''. This error cannot be displayed unless read permission is turned on.</entry>
    <entry key="SubsysRunFcnCallError">Subsystem ''{0}'' had an error during function-call invocation on function-call input port element {1,number,integer} at time {2}</entry>
    <entry key="SubsysSetAsFcnNotSupported">The parameter ''Code generation function packaging'' of subsystem ''{0}'' is set to ''Function''. However, this subsystem is inside subsystem ''{1}'', which contains a For Each block (''{2}''). Simulink does not support this scenario. Consider changing the parameter ''Code generation function packaging'' of subsystem ''{3}'' to ''Inline'', ''Auto'' or ''Reusable function''.</entry>
    <entry key="DataflowForEachNotSupported">Setting the execution domain of ''{0}'' to ''Dataflow'' is not supported because the subsystem ''{1}'' contains a For Each block (''{2}''). Change the execution domain of subsystem ''{0}'' or remove (''{2}'').</entry>
    <entry key="SubsysSettingSetNotAllowed">Cannot change parameter ''{0}'' of subsystem ''{1}'' when it is being compiled or while the simulation is running</entry>
    <entry key="SubsysWriteProtected">Modifying ''{0}'' is not supported because it is in a write-protected subsystem.</entry>
    <entry key="SumBlockOutputDataTypeIsBool"> Cannot set the output data type of ''{0}'' to ''Boolean''. One way to eliminate the error is to manually set the output data type of this block.</entry>
    <entry key="SwitchEnumTypeAndNonZeroCriteria">Cannot use criteria ''u2 ~= 0'' for ''{0}'' because the control input has an enumerated data type. Either change the criteria or use a Relational Operator block to do the comparison for the control input signal.</entry>
    <entry key="SwitchIgnoringThreshold"><![CDATA[The control input of ''{0}'' is a boolean signal. Input 3 is passed to the output if control input is false (0), otherwise input 1 is passed to the output. The current threshold values are being ignored. To eliminate this warning, set the criteria and threshold to any of the following three combinations: u2 ~= 0, u2 > Threshold with Threshold equal to 0, or u2 >= Threshold with Threshold equal to 1.]]></entry>
    <entry key="SwitchTurnOnVarDimsMode">The signal dimensions of the first and third input ports of Switch block ''{0}'' are different. To support a variable-size output signal, on the "Signal Attributes" pane of the block dialog, select the parameter "Allow different data input sizes (Results in variable-size output signal)".</entry>
    <entry key="TDelayBufferTooSmall">The specified buffer for ''{0}'' was too small. During simulation, the buffer size was temporarily increased to {1,number,integer}. In order to generate code, you need to update the buffer size parameter</entry>
    <entry key="TDelayDirectThroughAutoSet">When delay time is set to zero, the transport delay block ''{0}'' is automatically set to support direct feedthrough. This may cause an algebraic loop. A Memory Block can be used in place of the Transport Delay to break the loop</entry>
    <entry key="TDelayFixedBuffer">Use fixed buffer size in ''{0}'' is not selected. When generating GRT/ERT code, Simulink will automatically use fixed buffer of the initial buffer size set by user. Code generation results and simulation results may differ</entry>
    <entry key="TDelayNegDelayErr">Negative time delays are not supported in ''{0}''</entry>
    <entry key="TDelayNegDelayOutputFcn">Negative time delay in ''{0}'' is not allowed. Delay has been set to zero. The output has been computed using forward extrapolation based on previous input history</entry>
    <entry key="TDelayOverMaximumDelay">At time {0}, the value ({1}) of element {2,number,integer} of the delay input port is greater than the specified maximum delay parameter value ({3}) in block ''{4}''. Limiting delay value to maximum delay. Consider increasing maximum delay parameter value to improve simulation accuracy</entry>
    <entry key="TDelayPadeOrder">Pade order in ''{0}'' must contain non-negative integers</entry>

    <entry key="TDelayTimeTooSmall">The specified delay time for ''{0}'' is
    smaller than the step size of the fixed-step solver. This may cause
    simulation results to be inaccurate. Consider decreasing the step size of
    the solver to improve accuracy</entry>

    <entry key="TDelayUndefinedFixedStep">The time delay parameter has a dependency on the
    fixed step size of the solver and it was unable to get its value.</entry>

    <entry key="TFLMutexEntryNotFound">Code replacement library must provide entries for semaphore/mutex creation.</entry>
    <entry key="CRLAtomicCheckAndSetEntryNotFound">Code Replacement Library registers keyword AtomicCheckAndSet, however, a replacement is not found in this Code Replacement Library for the given input type. Run RTW.viewTfl(get_param(bdroot,'TargetFcnLibHandle')) to identify the possible replacements that did not occur in MissCache. Code Replacement Library table must have an entry that have an input that is a pointer of {0}, or switch to use the default Code Replacement Library</entry>
    <entry key="TableDimAtLeastTwo">Dimension {0,number,integer} of the table in block ''{1}'' has a size of 1. Each table dimension  must have at least 2 elements.</entry>
    <entry key="TableDimExceedsIndexType"><![CDATA[For block ''{2}'', data type of <sldiag objui="inport" objparam="{0}" objname="{2}">input port {0}</sldiag>{1,number,integer} is ''{3}''. The corresponding dimension from the 'Table data' parameter is ({4,number,integer}). The data type does not represent max index ({5,number,integer}) for this dimension. Update the data type so that it can represent the max index.]]></entry>
    <entry key="TableDimExceedsIndexFromBusType"><![CDATA[For block ''{2}'', data type of the first signal in the bus object propagated to <sldiag objui="inport" objparam="{0}" objname="{2}">input port {0}</sldiag>{1,number,integer} is ''{3}''. The corresponding dimension from the 'Table data' parameter is ({4,number,integer}).The data type cannot represent max index ({5,number,integer}) for this dimension. Update the data type so that it can represent the max index.]]></entry>
    <entry key="TableDimensionMismatch">In block ''{0}'', the number of dimensions of ''Table data'' is {1,number,integer}, but the block parameter ''Number of table dimensions'' is {2,number,integer}. The dimensions of ''Table data'' and value of ''Number of table dimensions'' must match.</entry>
    <entry key="LUTObjTableDimensionMismatch">In block ''{0}'', the ''Number of table dimensions'' ({1,number,integer}) must match the number of dimensions of ''Table'' ({2,number,integer}) in Lookup Table Object ''{3}''.</entry>
    <entry key="TablePortDimensionMismatch">In block ''{0}'', the number of dimensions ({1,number,integer}) specified by the table input port must match the ''{2}'' parameter value ({3,number,integer}).</entry>
    <entry key="TableMayNotBeComplex">Complex values specified for ''Table data'' parameter in block ''{0}''. Only real data is supported.</entry>
    <entry key="TableMayNotBeComplexForSpline">Complex values specified for ''Table data'' parameter in block ''{0}''. Only real data is supported for ''Cubic spline'' and ''Akima spline'' interpolation methods.</entry>
    <entry key="TableMustBeNonEmpty">Table data for block ''{0}'' should be nonempty.</entry>
    <entry key="TableMustBeNumeric">Non-numeric values specified for ''Table data'' parameter in block ''{0}''. Only numeric data is supported.</entry>
    <entry key="TimeseriesNotSupportedInRTW">The code generated for ''{0}'' cannot support Timeseries logging format using current target ''{1}''. Consider switching the logging format to Array or selecting a target that supports Timeseries format.</entry>
    <entry key="ToFileInconsistentFormatVsComplexityErr">Data complexity mismatch at the input port of ''{0}''. Only non-complex data can be logged in Array format. Consider using Timeseries format.</entry>
    <entry key="ToFileInconsistentFormatVsDatatypeErr">Data type mismatch at the input port of ''{0}''. Only data of type double or a type aliased to double can be logged in Array format. Consider using Timeseries format.</entry>
    <entry key="ToFileInconsistentFormatVsDimensionErr">Dimension mismatch at the input port of ''{0}''. Only one-dimensional data can be logged in Array format. Consider using Timeseries format.</entry>
    <entry key="ToFileInvalidDimRank">Number of dimensions at the input port of To File block ''{0}'' is {1,number,integer}. To File blocks do not support inputs with number dimensions greater than {2,number,integer}.</entry>
    <entry key="ToFileInvalidFileDir">Directory does not exist for file name ''{0}'' specified in ''{1}''.</entry>
    <entry key="ToFileInvalidInputDataType">The To File block ''{0}'' cannot log the given data type.  Supported types are double, single, int8, uint8, int16, uint16, int32, uint32, and 32-bit signed enum types. However, the input port is driven by a signal of data type ''{1}''</entry>
    <entry key="ToFromFileGeneralErr">Diagnostic reported from block ''{0}''</entry>
    <entry key="ToFromFileLicenseError">Logging and loading of fixed-point data requires a Fixed-Point Designer license.</entry>
    <entry key="ToFromFileMultiwordFiError">Logging and loading fixed-point data with word length greater than 32 bits is not supported.</entry>
    <entry key="TranposeBlkInvDims">Invalid dimensions specified for input port of ''{0}''. The dimensions {1} are not consistent with the output dimensions {2}.</entry>
    <entry key="CordicPositiveNumOfIterations">The number of iterations for block ''{0}'' should be a positive real number greater than zero</entry>
    <entry key="CordicSlopeBiasScaledInputNotSupported">Invalid data type specified for the input port of block ''{0}''. CORDIC approximation supports floating point or fixed-point data types with bias equal to zero and slope power of two.</entry>
    <entry key="CordicViolateInheritOutDType">The output data type of block ''{0}'' should be ''{1}'' as computed, but it is being set to ''{2}''</entry>
    <entry key="TrigfcnSineInvalid">Infinity input is invalid for sin in ''{0}''.</entry>
    <entry key="TrigfcnCosineInvalid">Infinity input is invalid for cos in ''{0}''.</entry>
    <entry key="TrigfcnTanInvalid">Infinity input is invalid for tan in ''{0}''.</entry>
    <entry key="TrigfcnHypsineSaturates">Result of sinh saturates to infinity in ''{0}''.</entry>
    <entry key="TrigfcnHypcosineSaturates">Result of cosh saturates to infinity in ''{0}''.</entry>
    <entry key="TrigfcnArchyptanDivByZero">Division by zero occurred in atanh in ''{0}''.</entry>    
    <entry key="TrigfcnArccosineArgOutOfRange">Argument to arccosine is out of range in ''{0}''. Consider setting the ''Output signal type'' to complex</entry>
    <entry key="TrigfcnArccosineArgOutOfRangeWithoutProtection">Argument to arccosine is out-of-range in ''{0}''. Protection against out-of-range input is disabled.</entry>
    <entry key="TrigfcnArchypcosArgOutOfRange">Argument to arccosh is out of range in ''{0}''. Consider setting the ''Output signal type'' to complex</entry>
    <entry key="TrigfcnArchyptanArgOutOfRange">Argument to arctanh is out of range in ''{0}''. Consider setting the ''Output signal type'' to complex</entry>
    <entry key="TrigfcnArcsineArgOutOfRange">Argument to arcsine is out of range in ''{0}''. Consider setting the ''Output signal type'' to complex</entry>
    <entry key="TrigfcnArcsineArgOutOfRangeWithoutProtection">Argument to arcsine is out-of-range in ''{0}''. Protection against out-of-range input is disabled.</entry>
    <entry key="CordicAngleOutOfRange">The input angle for block ''{0}'' is out-of-range after being recast to double. For CORDIC approximation, this angle must be between [ double(-2pi), double(2pi) ).</entry>
    <entry key="LutAngleOutOfRangeRad">The input angle for block ''{0}'' is out-of-range after being recast to double. For lookup approximation, this angle must be between [ double(-2pi), double(2pi) ).</entry>
    <entry key="LutAngleOutOfRangeRev">The input angle for block ''{0}'' is out-of-range after being recast to double. For lookup approximation, this angle must be between [ double(-1), double(1) ).</entry>
    <entry key="CordicMagnitudeIsInfOrNaN">The magnitude for block ''{0}'' is either Inf or NaN. CORDIC Approximation method does not support Inf or NaN values.</entry>
    <entry key="CordicATan2InputIsInfOrNaN">The input for block ''{0}'' is either Inf or NaN. CORDIC Approximation method does not support Inf or NaN values.</entry>
    <entry key="LUTInputIsInfOrNaN">The input for block ''{0}'' is either Inf or NaN. Inf or NaN values are not supported by Lookup approximation method.</entry>
    <entry key="CordicWordLengthEqualToNumberIterations">The word length of the input fixed point data type for the block ''{0}'' is equal to the number of iterations specified in the block. This word length is not supported for "CORDIC" setting of the "Approximation method" parameter. Choose the number of iterations to be less than the word length of the input data type.</entry>
    <entry key="CordicLutATan2RequireHomogeneousPortDataTypes">Input port data types for ''{0}'' must be homogeneous. Set all ports to the same data type (double, single, or fixed-point)</entry>
    <entry key="CordicInputWLCannotRepresentPi">Invalid data type specified for the input port of block ''{0}''. CORDIC approximation cannot do necessary quadrant correction as the input data type cannot represent Pi and input word length is the maximum limit for simulation</entry>
    <entry key="CordicInputUnsignedMaxWL">Invalid data type specified for the input port of block ''{0}''. CORDIC approximation cannot do necessary quadrant correction as the input data type is unsigned and input word length is the maximum limit for simulation</entry>
    <entry key="CordicOutputWLGreaterThan128"> Input data type word length specified for the input port of block ''{0}'' is large, which requires output data type word length to exceed maximum supported limit.</entry>
    <entry key="CordicIterationsGreaterThanInputWL">The number of specified iterations must be less than the input word length at port {0, number, integer} for CORDIC approximation in block ''{1}''.</entry>
    <entry key="CordicIterationsGreaterThanMax">The number of specified iterations must be less than 127 at port {0, number, integer} for CORDIC approximation in block ''{1}''.</entry>
    <entry key="CordicATan2SignedInputWLGreaterThan126"> For block ''{0}'',  word length specified for signed input data type is 127 or greater. This causes the word length of an internal data type to exceed the maximum supported limit (128). For the input ports, specify a word length of 126 or less.</entry>
    <entry key="CordicATan2UnSignedInputWLGreaterThan125"> For block ''{0}'', word length specified for unsigned input data type is 126 or greater. This causes the word length of an internal data type to exceed the maximum supported limit (128). For the input ports, specify a word length of 125 or less.</entry>
    <entry key="MagAng2CmpxMixedFloatFixed">CORDIC Approximation for block ''{0}'' does not support one port to be fixed point type and other to be floating point type. Input port data types can be homogeneous or heterogeneous fixed point types, or homogeneous floating point types. </entry>
    <entry key="MagAng2CmpxPortMixedFloat">CORDIC Approximation for block ''{0}'' supports fixed point data types and homogeneous floating point data types via input ports </entry>
    <entry key="MagAng2CmpxFloatPortFixedDialog">CORDIC Approximation for block ''{0}'' does not support floating point input port data type and non floating point types for dialog parameter. When the input port type is floating point, the dialog parameter (Angle or Magnitude) must be floating point data type. When the input port type is fixed point, the dialog parameter can be fixed point or floating point data type </entry>
    <entry key="BlockInOutCannotBeBoolean">Input and output data types of block ''{0}'' cannot be boolean. They must be one of the Simulink built-in ''uint8'', ''uint16'', ''uint32'', ''int8'', ''int16'', ''int32'', ''single'', or ''double'' data types, or one of the fixed-point data types.</entry>
    <entry key="CORDICNotSupportedForComplexToMagnitudeBlock">CORDIC Algorithm is not supported for ''{0}'' block.</entry>
    <entry key="TrigfcnSineLookupWordLengthTooSmall">The parameter output word length (OutputWordLength) must be a scalar numeric and an integer value greater than 1 in block ''{0}''.</entry>
    <entry key="TrigfcnSineLookupNumDataPtsTooSmall">The parameter number of data points (NumberOfDataPoints) for block ''{0}'' must be a scalar numeric and must have an exact integer not less than 2.</entry>
    <entry key="TrigfcnSineLookupEitherTooSmall"><![CDATA[In the block ''{0}'', the input data type fraction length is not large enough to hold the number of data points provided by the parameter "Number of data points for lookup table". One alternative is to decrease number of data points from {1,number,integer} to {2,number,integer}. Another alternative is to increase the input data type fraction length from {3,number,integer} to {4,number,integer}.]]></entry>
    <entry key="TrigfcnLookupNumDataPtsTooBigSingle">Number of data points must be less than {1, number, integer} when the input data type is single in block ''{0}''.</entry>
    <entry key="TrigfcnSineLookupWordLengthTooBig">The parameter output word length (OutputWordLength) must be a scalar numeric and an integer value less than 65 in block ''{0}''.</entry>
    <entry key="TrigfcnDoubleOrSingleOnly">Setting data type of input and output ports of ''{0}'' to {1} is not supported. The data type must be double or single.</entry>
    <entry key="TrigfcnRTWComplexInpNotSupported">The block ''{0}'' does not currently support complex signals in Simulink Coder</entry>
    <entry key="TrigfcnLUTHalfNotSupported">In block ''{0}'', half-precision input for lookup approximation method is not supported.</entry>
    <entry key="TrigfcnLUTOutputCannotBeUnsigned">The output of block ''{0}'' must be a signed type.</entry>
    <entry key="TrigFcnLUTSlopeBiasScaledInputNotSupported">Invalid data type specified for the input port of block ''{0}''. 'Lookup' approximation supports floating point or fixed-point data types with bias equal to zero and slope power of two.</entry>
    <entry key="TrigfcnSingularArgument">In block {0}, when Function is set to 'atan', output is undefined when input is +i or -i.</entry>
    <entry key="TriggerPortExists">A trigger port already exists in ''{0}''. Adding another trigger port is not allowed.</entry>
    <entry key="RTBBetweenAsyncWithCommonInitiator"> Rate Transition block ''{0}'' connects two asynchronous function call subsystems with a common initiator. This block cannot ensure data integrity when source task preempts destination task. Consider assigning a lower priority to the source task, or use two separate asynchronous initiators to drive these function call subsystems</entry>
    <entry key="TsMultipleNotWorkWithAsyncTs">Asynchronous sample time is found at {0} port {1,number,integer} of Rate Transition block ''{2}''. When Rate Transition block parameter ''Output port sample time option'' is ''Multiple of input port sample time'', asynchronous sample time is not allowed. Consider changing ''Output port sample time option'' to "Specify" or "Inherit"</entry>

    <entry key="TsMultipleNotWorkWithAperiodicTs">
      <![CDATA[Aperiodic partition is found at {0} port {1,number,integer} of Rate Transition block ''{2}''. Aperiodic partitions are not allowed When Rate Transition block parameter ''Output port sample time option'' is ''Multiple of input port sample time''.
               <actions exclusiveFixIts="yes">
               <action type="fixit" id="Inherit">
               <cmd>set_param_action(''{2}'', ''OutPortSampleTimeOpt'',''Inherit'');</cmd>
               <txt>Change ''Output port sample time option'' to ''Inherit''.</txt>
               </action>
               <action type="fixit" id="Specify">
               <cmd>set_param_action(''{2}'', ''OutPortSampleTimeOpt'',''Specify'',''OutPortSampleTime'',''__ARG1__'');</cmd>
               <cargs>
               <carg name="__ARG1__">
               <txt_prompt>Specify a periodic discrete sample time</txt_prompt>
               </carg>
               </cargs>
               <txt>Specify a periodic discrete sample time.</txt>
               </action>
               </actions>
      ]]>
    </entry>

    <entry key="TsMultipleNotWorkWithContinuousTs">Continuous sample time is found at {0} port {1,number,integer} of Rate Transition block ''{2}''. When Rate Transition block parameter ''Output port sample time option'' is ''Multiple of input port sample time'', continuous sample time is not allowed. Consider changing ''Output port sample time option'' to "Specify" or "Inherit"</entry>
    <entry key="TsMultipleNotWorkWithTrigTs">Triggered sample time is found at {0} port {1,number,integer} of Rate Transition block ''{2}''. When Rate Transition block parameter ''Output port sample time option'' is ''Multiple of input port sample time'', triggered sample time is not allowed. Consider changing ''Output port sample time option'' to "Inherit"</entry>
    <entry key="TsMultipleNotWorkWithZOHContinuousTs">ZOH continuous sample time is found at {0} port {1,number,integer} of Rate Transition block ''{2}''. When Rate Transition block parameter ''Output port sample time option'' is ''Multiple of input port sample time'', ZOH continuous sample time is not allowed. Rate transition block may inherit ZOH continuous sample time in many cases. When source or destination block is continuous or constant, or no sample time is specified, Simulink may set ZOH continuous sample time at Rate Transition block during sample time propagation. To eliminate this error, consider changing ''Output port sample time option'' to "Specify" or "Inherit", or specifying a discrete sample time at one of the source blocks of this Rate Transition block</entry>
    <entry key="TsMultipleNotWorkWithTooSmallTs"> The sample time at {0} port {1,number,integer} of Rate Transition block ''{2}'' is very small. This small sample time causes continuous sample time at output port. The reason is that the block parameter ''Output port sample time option'' is set to ''Multiple of input port sample time'' and the value of ''Sample time multiple'' is less than 1. These conditions propagate continuous sample time to the output port of the block. Rate Transition block doesn't support continuous sample time.</entry>
    <entry key="TwowayConnInvInterSysConn">Two-Way Connection block ''{0}'' cannot cross nonvirtual subsystem boundaries.</entry>
    <entry key="TwowayConnTooManyConnections">Invalid multiple Two-Way Connection block connections, must be a pair: ''{0}'', ''{1}'', ''{2}''.</entry>
    <entry key="UnableToFindSymbolInLibrary">Unable to find symbol ''{0}'' in the shared object file ''{1}''</entry>
    <entry key="UnableToLoadUserData">Unable to load UserData for block ''{0}''. This may be because a folder containing a class definition is missing from the MATLAB path.</entry>
    <entry key="UnifiedAllPortSameDataType">All input and output ports of ''{0}'' are required to have the same data type.</entry>
    <entry key="UnifiedInputDataPortsSameDataType">All data inputs of ''{0}'' are required to have the same data type.</entry>
    <entry key="UnifiedInputDataPortsSameNonNumericDataType">All data inputs of ''{0}'' are required to have the same data type when one of them has a data type that is not numeric.</entry>
    <entry key="UnifiedInputPortSameDataType">All inputs of ''{0}'' are required to have the same data type.</entry>
    <entry key="UnifiedOutputPortSameNonNumericDataType">Output port of ''{0}'' is required to have the same data type as its inputs if their data type is not numeric.</entry>
    <entry key="UnitDelayMixedSamplingModeBusForCodeGen">The nonvirtual bus entering the Delay block ''{0}'' has both frame-based and sample-based elements. Nonvirtual buses with mixed sampling mode is not supported for code generation. </entry>
    <entry key="UnitDelayMixedSamplingModeBusWarning">The bus entering the Delay block ''{0}'' has both frame-based and sample-based elements. Buses with mixed sampling mode will not be supported in a future release.</entry>
    <entry key="UnitDelayFrameNonScalarParameter" context="error">Invalid parameters specified for ''{0}'' which is operating in frame-based mode. For frame-based mode the initial conditions have to be a scalar.</entry>
    <entry key="Unnamed_Library">Unnamed Library Warning</entry>
    <entry key="Unnamed_Library_Message">Library must be saved before configuring subsystem template</entry>
    <entry key="UnsupportedParameterDataType">The value of parameter ''{0}'' in ''{1}'' is of an unsupported data type. This parameter supports floating point data types and fixed-point data types with up to 32 Mantissa bits.</entry>
    <entry key="UserMSFcnBlockDoesNotSupportMultiExecInstances">Simulink does not support block ''{0}'' inside subsystem ''{1}'' because the subsystem contains a For Each block (''{2}''). If this is a user-defined S-Function and it satisfies the multiple execution instances requirements, consider turning on the compliance flag using the ''SupportsMultipleExecInstances'' property in the setup method.</entry>
    <entry key="UserSFcnBlockDoesNotSupportMultiExecInstances">Simulink does not support block ''{0}'' inside subsystem ''{1}'' because the subsystem contains a For Each block (''{2}''). If this is a user-defined S-Function and it satisfies the multiple execution instances requirements, consider turning on the compliance flag using the SimStruct function ''ssSupportsMultipleExecInstances'' in the ''mdlSetWorkWidths'' method.</entry>
    <entry key="UserSystemObjectDoesNotSupportMultiExecInstances">Simulink does not support block ''{0}'' inside subsystem ''{1}'' because the subsystem contains a For Each block (''{2}''). If this is a user-defined System object and it satisfies the multiple execution instances requirements, consider implementing the System object authoring method ''supportsMultipleInstanceImpl'' for ''{3}''.</entry>
    <entry key="VTDelayWrongDirection">Negative value to the input port two of ''{0}'' is not allowed. Its value has been set to infinity.</entry>
    <entry key="VTDelayZeroDelay">Zero delay at time ''{0}'' to input port two of ''{1}'' may result in incorrect simulation results. To ensure proper results, check the ''Handle zero delay'' in the parameter dialog. By doing so, it will turn the Variable Time Delay block to a direct feedthrough block.</entry>
    <entry key="VTDelayZeroMaxDelay">Maximum Delay of Transport delay mode can not be set to zero.</entry>
    <entry key="VarDimsIteratedInputNotSupported">The dimensions mode of the signal at input {0,number,integer} is variable-size for subsystem ''{1}''. Variable-size input signals are not supported by subsystem ''{2}'' because the subsystem contains a For Each block (''{3}'').</entry>
    <entry key="VarDimsModeFrameReqFirstDimMatch">When the "Allow different data input sizes (Results in variable-size output signal)" parameter is selected for ''{0}'', and the signals to input 1 and 3 are frame-based signals, the size of the first dimension of these two signals must be the same. For example, the pair [3x3] and [3x2] is allowed, but the pair [3x3] and [2x2] is disallowed.</entry>
    <entry key="VarDimsModeReqOneBranchFitOther">Simulink does not support the input signals provided to the block ''{0}''. The "Allow different data input sizes (Results in variable-size output signal)" parameter is selected. Therefore, the size of each dimension of one data input must be larger than the size of the corresponding dimension of the other data input. In other words, the maximum dimension sizes for the block must be determined completely from one input.</entry>
    <entry key="VarDimsModeReqScalarTrigPort">When the "Allow different data input sizes (Results in variable-size output signal)" parameter is selected for ''{0}'', the input signal to the control port and the threshold value must both be scalars.</entry>
    <entry key="BlkCannotBeCommented">Block ''{0}'' cannot be commented as it is not supported.</entry>
    <entry key="BlkCannotBeCommentedInCallback">Incorrect to comment or uncomment block “{0}” during callback execution. </entry>
    <entry key="BlkHasNoPorts">Block ''{0}'' cannot be commented through because it does not contain any ports.</entry>
    <entry key="BlkHasMixOfDataAndConnPorts">Block ''{0}'' cannot be commented through because it has a mix of both data and connection ports.</entry>
    <entry key="BlkHasUnequalInAndOutPorts">Block ''{0}'' cannot be commented through because the number of input ports do not match the number of output ports.</entry>
    <entry key="BlkHasControlPorts">Block ''{0}'' cannot be commented through because it contains control ports.</entry>
    <entry key="SimscapeBlkWithoutExactlyTwoConnPorts">Block ''{0}'' cannot be commented through because it does not have exactly two connection ports.</entry>
    <entry key="SimscapeBlkWithPortsFromMultipleDomains">Block ''{0}'' cannot be commented through because it has connection ports from multiple domains.</entry>
    <entry key="BlkIsSimscapeBus">Block ''{0}'' is a Simscape bus which is not supported for comment through.</entry>
    <entry key="InvCommentThroughWireLoop"><![CDATA[Invalid wire loop detected involving block ''{0}'' <sldiag objui="outport" objparam="{1,number,integer}" objname="{0}">output port {1,number,integer}</sldiag> due to one or more blocks that act as pass-through blocks.]]></entry>
    <entry key="VariantMemberInputConnected"><![CDATA[<sldiag objui="inport" objparam="{0,number,integer}" objname="{1}">Input port {0,number,integer}</sldiag> of the variant block ''{1}'' must be unconnected because it is part of a Variant Subsystem block.]]></entry>
    <entry key="VariantMemberOutputConnected"><![CDATA[<sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">Output port {0,number,integer}</sldiag> of the variant block ''{1}'' must be unconnected because it is part of a Variant Subsystem block.]]></entry>
    <entry key="VariantInportConnected">Inport block ''{0}'' must be unconnected because it is part of a Variant Subsystem block.</entry>
    <entry key="VariantInvalidBlock"><![CDATA[Invalid block ''{0}'' found in Variant Subsystem block ''{1}''. Only Inport, Outport, Connection Port, Subsystem and Model blocks are allowed in a Variant Subsystem.
    <actions exclusiveFixIts="yes">
    <action type="fixit">
    <cmd>slprivate(''variantfixes'',''DeleteBlock'',''{1}'', ''{0}'')</cmd>
    <txt>Delete Variant choice block ''{0}'' from ''{1}''.</txt>
    </action>
    </actions>]]></entry>
    <entry key="VariantInvalidBlock_fix">Variant choice block ''{0}'' is deleted.</entry>
    <entry key="CommentedNotSupported">Invalid block ''{0}'' found in Variant Subsystem block ''{1}''. Commenting of blocks in a Variant Subsystem is not allowed.</entry>
    <entry key="VariantInvalidSet">The variant property of a Subsystem block ''{0}'' cannot be changed.</entry>
    <entry key="VariantMultipleVariants">Only one variant control can be active for Variant Subsystem block ''{0}'', yet the following variant controls are active: {1}.</entry>
    <entry key="VariantMultipleDefaultVariants">Only one variant choice block can be default variant for the Variant Subsystem block ''{0}''. There are more than one default variants specified for ''{1}'', which is invalid.</entry>
    <entry key="VariantNoVariants"><![CDATA[Variant Subsystem block ''{0}'' contains no active variant controls.
    <actions exclusiveFixIts="yes">
    <action type="fixit">
    <cmd>slprivate(''variantfixes'',''VariantSubsystemEnableAZVC'',''{0}'')</cmd>
    <txt>'Built-in empty choice' must be selected in Variant Subsystem block ''{0}''.</txt>
    </action>
    </actions>]]></entry>
    <entry key="VariantNoVariantsWithoutFixIt"><![CDATA[Variant Subsystem block ''{0}'' contains no active variant controls.
    <actions>
    <action type="suggestion">
    <txt>To explicitly allow empty choice variant for this block, turn off ''Fast Restart'' and select the ''Built-in empty choice'' check box in the block parameters dialog box.</txt>
    </action>
    </actions> ]]></entry>
    <entry key="EmptyVariantControl">Variant control must be non-empty and uncommented for at least one choice block of Variant Subsystem block ''{0}''.</entry>
    <entry key="VariantNoVariants_fix">The command 'set_param(blkName, 'EmptyChoice', 'on')' is executed for Variant Subsystem block</entry>
    <entry key="VariantNoVariantsFixAll"> <![CDATA[ Fix all nested Variant Subsystem blocks of loaded systems with no active variant controls.
    <actions exclusiveFixIts="yes">
    <action type="fixit">
    <cmd>slprivate(''variantfixes'',''AllVariantSubsystemEnableAZVC'')</cmd>
    <txt>'Built-in empty choice' must be selected in all nested Variant Subsystem blocks.</txt>
    </action>
    </actions>]]></entry>
	<entry key="VariantSubsystemPortsNotSynched"> <![CDATA[Ports of variant choices do not match the ports of containing Variant Subsystem block ''{0}'' .
	<actions exclusiveFixIts="yes">
    <action type="fixit">
	<cmd>slprivate(''variantfixes'',''MatchVariantSubsystemPorts'', ''{0}'')</cmd>
    <txt>Match ports of variant choices with ports of ''{0}''.</txt>
    </action>
	<action type="fixit">
	<cmd>slprivate(''variantfixes'',''EnableFlexibleInterface'', ''{0}'')</cmd>
    <txt>Set ''Allow flexible interface'' of ''{0}'' to ''on''.</txt>
    </action>
    </actions>]]>
	</entry>
    <entry key="PortMatchingPerformedSuccessfully">Variant choices and the containing Variant Subsystem block have the same set of ports.</entry>
    <entry key="UnsupportedBlockPortMatchFixedOthers">Port matching performed on variant choices, but matching the ports with variant subsystem is required for the following failed variant choices.</entry>
    <entry key="UnsupportedBlockOperationFail">Port matching failed for following variant choices.</entry>
    <entry key="TurnFlexibleInterfaceOn">'Allow flexible interface' of Variant Subsystem block ''{0}'' is set to 'on'.</entry>
    <entry key="UnsupportedBlockWarning">''{0}''</entry>
    <entry key="FindSystemFailedForFix">Unable to collect port information from block ''{0}'', either model block is not loaded or fix operation is not supported for this block.</entry>
    <entry key="SamePortNamesDifferentPortTypes">Port matching failed as ''{0}'' block cannot be added to choice block ''{1}'' because there exists ''{2}'' block with same name but different port type.</entry>
    <entry key="AddBlockFailure">Adding a port block ''{0}'' of Variant subsystem to the choice block ''{1}'' is not supported as a block with the same name already exists.</entry>
    <entry key="VariantNoVariantsFixAll_fix">The command 'set_param(blkName, 'EmptyChoice', 'on')' is executed for following Variant Subsystem blocks : {0} </entry>
    <entry key="NotValidSubsystemToConvertToVariant">Unable to convert block ''{0}'' to Variant Subsystem. Only Subsystem or Model blocks can be converted to Variant Subsystem.</entry>
    <entry key="PartitionedSubsystemConvertToVariantInvalid">Unable to convert block ''{0}'' to Variant Subsystem because only a non-partitioned Subsystem can be converted to a Variant Subsystem.</entry>
    <entry key="VariantOutportConnected">Outport block ''{0}'' must be unconnected because it is part of a Variant Subsystem block.</entry>
    <entry key="VectSelInvDataInpDims"><![CDATA[''{0}'' expects vector input at input port <U> when the parameter ''{1}'' is specified to be 1. The number of dimensions of the input port <U> can not be larger than 2. Attempt to set the number of dimensions to {2,number,integer}.]]></entry>
    <entry key="VirtualSelectorCannotSupportVarDims">''{0}'' cannot take 1-D variable sized input signal when its dialog parameter ''{1}'' is set to ''{2}''. To fix the problem, try to change the ''{3}'' setting to ''{4}''</entry>
    <entry key="WSTimeDivideByZero">In block ''{0}'', weight parameter is set to ''zero'' and operation parameter selected is ''/'' or ''1/Ts'', division produces infinity</entry>
    <entry key="WSTimeInfiniteSampleTime">Sample Time of block ''{0}'' needs to be finite</entry>
    <entry key="WSTimeOnlineBiasHandling">For * or / case, online bias handling is not supported by block ''{0}''</entry>
    <entry key="WSTimeTriggeredAndNonPositiveWeight">Block ''{0}'' is being used in a triggered subsystem with an integer elapsed time counter. For this use, the weight value must be strictly positive</entry>
    <entry key="WSTimeTrivialScaling">Block ''{0}'' is attempting to scale data types such as boolean, double, or single that only allow trivial scaling</entry>
    <entry key="WSTimeControllableSampleTime">Controllable sample time is not supported by block ''{0}''</entry>
    <entry key="WSTimeIODifferentBias">Block ''{0}'' requires that the input data type and output data type have same bias when the output data type is not inherited via internal rule.</entry>
    <entry key="WarnBdMuxBlksUsedAsBusCreator"><![CDATA[The block diagram ''{0}'' improperly uses {1,number,integer} Mux blocks as Bus Creators. This can lead to modeling errors (see the Mux block documentation for more information). Use the Upgrade Advisor and slreplace_mux command to fix improper use of Mux blocks. Then set ''Mux blocks used to create bus signals'' (in the Configuration Parameters dialog box -> Diagnostics -> Connectivity) to ''Error''. Please note that the ''None'' and ''Warning'' options for this diagnostic will be removed in a future version of Simulink.\n Individual warnings (up to a maximum of 10) are reported below for each Mux block.]]></entry>
    <entry key="WarnIISSkippedForStateLogging">Model ''{0}'' has blocks with states inside one or more subsystems, which contain a For Each block. Simulink does not log such states.</entry>
    <entry key="WarnMuxUsedAsBusIsSetToNone"><![CDATA[''Mux blocks used to create bus signals'' (in the Configuration Parameters dialog box -> Diagnostics -> Connectivity) is set to ''None'' for block diagram ''{0}''. The ''None'' and ''Warning'' options for this diagnostic will be removed in a future version of Simulink. Please do the following:\n 1. First set the diagnostic to ''Warning'' to uncover improper usage of Mux blocks in your model.\n 2. Use the Upgrade Advisor or the ''slreplace_mux'' command to fix improper usage of Mux blocks.]]></entry>
    <entry key="WarnTuningWhenCoverage">Cannot tune parameters in block ''{0}'' while using the Lookup Table Coverage option. The Coverage tool will ignore the new parameter values.</entry>
    <entry key="WarningMatCheckPureSingularity"><![CDATA[Input matrix at <sldiag objui="inport" objparam="{0,number,integer}" objname="{1}">input port {0,number,integer}</sldiag> of ''{1}'' at time {2} is singular. Matrix inversion results from Simulink Product may be inaccurate. Suppressing additional warnings about singular matrices and continuing simulation<actions exclusiveFixIts="no"><action type="suppression"></action></actions>]]></entry>
    <entry key="WarningMatCheckSingularity"><![CDATA[Input matrix at <sldiag objui="inport" objparam="{0,number,integer}" objname="{1}">input port {0,number,integer}</sldiag> of ''{1}'' at time {2} is close to being singular. Matrix inversion results from Simulink Product may be inaccurate. Suppressing additional warnings about singular matrices and continuing simulation]]></entry>
    <entry key="WhileExceedMaxIters">The number of iterations for ''{0}'' has exceeded the maximum allowable value for the output port data type ''{1}''</entry>
    <entry key="WhileInvalidMaxItersSymbolicParamValue">Parameter ''{0}'' of the While Iterator block has a value of -1 specified using a Simulink.Parameter object, which is not supported in the generated code. For unlimited iterations, specify the ''{0}'' parameter using numeric constant ''-1''.</entry>
    <entry key="WhileInvalidMaxItersParamWithOutputPortOn">The While Iterator block is configured to output iteration number of type {0} in ''{1}'' mode. Under this configuration, the parameter ''{2}'' of the While Iterator block must evaluate to a scalar integer either with value of -1 or within the range from {3} to {4}.</entry>
    <entry key="WhileInvalidMaxItersParamWithOutputPortOff">The While Iterator block is configured to operate in ''{0}'' mode. Under this configuration, the parameter ''{1}'' of the While Iterator block must evaluate to a scalar integer either with value of -1 or within the range from {2} to {3}.</entry>
    <entry key="WideSignalsNotConsistent">Nonscalar input and output signals of block ''{0}'' are inconsistent.</entry>
    <entry key="WidthOverflow">Output overflow in ''{0}''. The signal width {1,number,integer} cannot be represented using the specified output type {2}</entry>
    <entry key="BlockDoesNotSupportVB"><![CDATA[When the Configuration Parameters->Diagnostics->Connectivity->\"Bus signal treated as vector\" diagnostic is set to \"Error\", the ''{0}'' block cannot accept a virtual bus signal. A virtual bus is connected to <sldiag objui="inport" objparam="{1,number,integer}" objname="{2}">input port {1,number,integer}</sldiag> of block ''{2}''. Consider converting the virtual bus into a vector using a Bus to Vector block at the input, or converting the virtual bus to a nonvirtual bus by inserting a Signal Conversion block at the input, with its \"Output\" option set to \"Nonvirtual bus\".]]></entry>
    <entry key="InvalidVirtualBusUsageSelector"><![CDATA[Selector block does NOT support virtual bus input signals. It can only accept vector/matrix/multidimensional non-bus signals or arrays of nonvirtual bus signals.\n\nA virtual bus signal is connected to <sldiag objui="inport" objparam="{0, number, integer}" objname="{1}">input port {0, number, integer}</sldiag> of Selector block ''{1}''. To correct this error, please consider one of the following options: \n\n(1) If the input virtual bus signal consists only of scalar elements, 1-D elements, or either row or column vectors, and all elements have the same data type, signal type, and sampling mode, convert the bus signal into a vector using a Bus to Vector block. \n(2) Otherwise, replace the Selector block with a Bus Selector block. ]]></entry>
    <entry key="InvalidVirtualBusUsageDelay"><![CDATA[Delay block does not support virtual bus input signals when its ''State name'' field is specified and its ''Initial condition'' is of struct type or a zero scalar from dialog, or its ''Initial condition'' is from an input port. The block accepts only vector/matrix/multidimensional non-bus signals or arrays of nonvirtual bus signals.\n\nA virtual bus signal is connected to <sldiag objui="inport" objparam="{0, number, integer}" objname="{1}">input port {0, number, integer}</sldiag> of Delay block ''{1}''. To correct this error, consider converting the bus signal into a vector using a Bus to Vector block.]]></entry>
    <entry key="InvalidVirtualBusUsageOther"><![CDATA[{0} block does NOT support virtual bus input signals. It can only accept vector/matrix/multidimensional non-bus signals or arrays of nonvirtual bus signals.\n\nA virtual bus signal is connected to <sldiag objui="inport" objparam="{1, number, integer}" objname="{3}">input port {1, number, integer}</sldiag> of {2} block ''{3}''. To correct this error, please consider converting the bus signal into a vector using a Bus to Vector block.]]></entry>
    <entry key="InvalidVirtualBusUsageSuggestUA">The virtual bus usage error reported above has a total number of {0, number, integer} occurrences in the model. \n\nTo automatically update the model and insert Bus to Vector blocks, or if you are upgrading from a prior version of Simulink,\n(1) {1} and run the ''Check virtual bus inputs to blocks'' check. \n(2) Follow the recommendations from this check to make your model compliant.</entry>
    <entry key="a0EqualOneCheckboxSelect">In ''{0}'', the ''Optimize by skipping divide by leading denominator coefficient (a0)'' check box must be selected.</entry>
    <entry key="a0MustBeNonZero">In ''{0}'', the leading denominator coefficient must be nonzero</entry>
    <entry key="a0MustBeOne">In ''{0}'', the leading denominator coefficient must equal one</entry>
    <entry key="DisallowSIMOInFrameBasedProcessing">When the 'Input processing' parameter is set to 'Columns as channels (frame based)' in ''{0}'', the filter coefficients must be a scalar or row vector</entry>
    <entry key="a0MustBeReal">In ''{0}'', the leading denominator coefficient must be real for the following cases: when the output is fixed point, when ''MinMaxAndOverflow'' is specified for the model parameter MinMaxOverflowLogging, or when ''Scaled doubles'' is selected for ''Data type override'' in the Fixed-Point Tool</entry>
    <entry key="denOrderGTEnumOrder">In ''{0}'', the order of the denominator must be greater than or equal to the order of the numerator</entry>
    <entry key="unsupportedStructure">In ''{0}'', the transfer function structure must be 'Direct form II'</entry>
    <entry key="dialogDTMustBeFixpt">In ''{0}'', the data type specified on the ''Data Type Attributes'' tab cannot be floating-point. If you choose to specify the data type using a data type expression, that expression must evaluate to a fixed-point data type</entry>
    <entry key="invalidIntermediateDtypeWL">Invalid word length for ''Intermediate results data type'' in block ''{0}''. It needs at least 4 bits.</entry>
    <entry key="CannotEnsureRTBControlDWTypeAtomic">Control flags used by Rate Transition block ''{0}'' may not be atomic because model's ''Number of bits per char in test hardware'' ({1,number,integer}) configuration parameter is not 8, 16, or 32. The next largest data type that is multiple of 8 has been chosen.</entry>
    <entry key="MultiCoreRateTransNotSupportedInRightClickBuild"> Rate Transition block ''{0}'' is in a mode to support concurrent tasks. This mode is not supported for right click build. </entry>
    <entry key="sigLicenseFailed">A DSP System Toolbox license is required in ''{0}'' when the 'Input processing' parameter is set to 'Columns as channels (frame based)', and the filter structure is not set to the default value.</entry>
    <entry key="inNotSampForElemChan">When the input to the ''{0}'' block is a frame-based signal, the 'Input processing' parameter must be set to 'Columns as channels (frame based)'.</entry>
    <entry key="fvtoolCoefficientsPortIIR">Filter response cannot be computed when ''Numerator Source'' or ''Denominator Source'' is set to ''Input port''. \n To view the filter response, set ''Numerator Source'' and ''Denominator Source'' parameters to ''Dialog''.</entry>
    <entry key="fvtoolCoefficientsPortFIR">Filter response cannot be computed when ''Coefficient source'' is set to ''Input ports''. \n To view the filter response, set the ''Coefficient source'' parameter to ''Dialog parameters''.</entry>
    <entry key="prodInvTempMtx">Invalid temp matrix index</entry>
    <entry key="prodResultInOutputPortBuff">Last entry in chain must place result into output port buffer</entry>
    <entry key="BusInputNotAllowed"> Block ''{0}'' does not support nonvirtual bus input signals when you select the 'Allow different data input sizes (Results in variable-size output signal)' parameter.</entry>
    <entry key="PreLookupComparisonDataTypeIsNotIdeal">In block ''{0}'',  there is no ideal comparison data type which can exactly represent both input and breakpoint data. Please change either the input data types or the breakpoint data types.</entry>
    <entry key="PreLookupBadParamValue">Invalid breakpoint data for block ''{0}''. The data should be a 1D finite real numeric vector of width greater than 1</entry>
    <entry key="LookupBadParamValue">Block ''{0}'' has invalid breakpoint data in dimension ({1,number,integer}). The data should be a 1D finite real numeric vector of width greater than 1.</entry>
    <entry key="PreLookupCannotAnalyzeBpMsg">Index search cannot analyze breakpoint set specified in block ''{0}''.</entry>
    <entry key="PreLookupExtrapMethodError">Block ''{0}'' has parameter ''Extrapolation method'' set to 'Linear'. This setting is supported only when the input, breakpoint, and fraction output are all floating-point data types and the index data type specifies a built-in integer. Consider setting ''Extrapolation method'' to 'Clip'.</entry>
    <entry key="PreLookupFractionOverflow">Block ''{0}'' has been assigned an invalid ''Fraction data type''.\nIf parameter ''{1}'' is ''off'', when specifying a signed data type,''Fraction length'' must be less than or equal to ''Word length'' minus 2. When specifying an unsigned data type, the ''Fraction length'' must be less than or equal to the ''Word length'' minus 1.\nIf parameter ''{2}'' is ''on'',  when specifying a signed data type, ''Fraction length'' must be less than or equal to ''Word length'' minus 1. When specifying an unsigned data type, the ''Fraction length'' must be less than or equal to ''Word length''.\nChange the ''Fraction length'' to {3,number,integer} or less to prevent the error.</entry>
    <entry key="PreLookupInvalidBpBoolType">{0} does not accept ''boolean'' breakpoint data type. The breakpoint data type in ''{1}'' must be one of the Simulink built-in ''uint8'', ''uint16'', ''uint32'', ''int8'', ''int16'', ''int32'', ''single'', or ''double'' data types, or one of the fixed-point data types.</entry>
    <entry key="PreLookupNearestUAndBpDataTypeMismatch">The breakpoint data type of block ''{0}'' does not match the corresponding input data type. When interpolation method is ''{1}'', the breakpoint and input data types must match. To fix this error, change the breakpoint data type to ''Inherit: Same as corresponding input''.</entry>
    <entry key="LUTObjNearestUAndBpDataTypeMismatch">The breakpoint data type of block ''{0}'' does not match the corresponding input data type. When interpolation method is ''{1}'', the breakpoint and input data types must match. To fix this error, change the breakpoint data type to be same as the corresponding input data type.</entry>
    <entry key="LUTObjectReferencedBPObjectMismatch">The Simulink.Breakpoint object used in block ''{0}'' is not the same as the Simulink.Breakpoint object referenced by the Simulink.LookupTable object used in block ''{1}''.</entry>
    <entry key="PrelookupInvalidBreakpointsSpecification">The Simulink.LookupTable object used in block ''{0}'' refers to a Simulink.Breakpoint object. Therefore, block ''{1}'' must set 'BreakpointsSpecification' to 'Breakpoint object' and use the same Simulink.Breakpoint object.</entry>
    <entry key="PreLookupInvalidBpTypeBias">The input and breakpoint data types of block ''{0}'' do not have the same bias. The breakpoint data type has a bias of {1} and the input data type has a bias of {2}.</entry>
    <entry key="PreLookupInvalidBpTypeSetting">''{0}'' has incompatible input and breakpoint data types.</entry>
    <entry key="PreLookupInvalidBpTypeSlope">The input and breakpoint data types of block ''{0}'' do not have the same SlopeAdjustmentFactor. The breakpoint data type has a SlopeAdjustmentFactor of {1} and the input data type has a SlopeAdjustmentFactor of {2}.</entry>
    <entry key="PreLookupInvalidExtrapMethod">For ''{0}'' block, when ''Extrapolation method'' is set to ''Linear'', the ''Output selection'' must be set to ''Index and fraction'' or ''Index and fraction as bus''.</entry>
    <entry key="PreLookupInvalidFractionDataType">''{0}'' has been assigned an invalid ''Fraction data type''. Fraction data type only supports ''Binary-point-only'' scaling mode. Also, the ''Fraction length'' must be greater than or equal to zero.</entry>
    <entry key="PreLookupInvalidFractionSetting">''{0}'' has incompatible input and fraction data types.</entry>
    <entry key="PreLookupInvalidIndexDataType">''{0}'' has been assigned an invalid index data type. The index must be an integer.</entry>
    <entry key="PreLookupInvalidIndexType">The specified index data type of ''{0}'' cannot represent the index range of the breakpoint data set.</entry>
    <entry key="PreLookupNonBooleanMsg">The breakpoints data of ''{0}'' does not support Boolean data type.</entry>
    <entry key="PreLookupNonFloatIndexType">Block ''{0}'' does not support double or single data types for the index.</entry>
    <entry key="PreLookupNonMonotonicErr">Values of ''{0}'' in ''{1}'' must be strictly monotonically increasing. The problem occurs at element {2,number,integer}. Change the breakpoints data or use the fixed-point tools such as Auto Scaling or Fixed-Point Advisor to determine a different parameter dialog type.</entry>
    <entry key="PreLookupEnumNonMonotonicErr">Values of ''{0}'' in ''{1}'' must be strictly monotonically increasing. For enumerated breakpoints data, if the ''Index search method'' is 'Linear' and the ''Begin index search using previous index result'' check box is selected, the breakpoints data must be strictly monotonically increasing. The values become not strictly monotonically increasing at element {2,number,integer}. Change the breakpoints data or clear the "Begin index search using previous index result" parameter.</entry>
    <entry key="PreLookupOutOfRangeRemoveInputProtectionChecked">Input value of ''{0}'' exceeds breakpoint range ''{1}'', which might cause undefined behavior in generated code when the 'Assume inputs are within range' option is selected. To prevent this behavior, change the input value to be within breakpoint range before executing generated code.</entry>
    <entry key="PreLookupOutofRangeInputError">Input value of ''{0}'' exceeds breakpoint range.</entry>
    <entry key="EnforcePreLookupOutofRangeInputError">Input value of ''{0}'' exceeds breakpoint range. Either clear  the 'Assume input is within range' parameter or limit input to be within the range of the table dimensions.</entry>
    <entry key="PreLookupOutofRangeInputWarn_Clip">Input of block ''{0}'' exceeds its breakpoint data range. Clipping input to range and continuing the simulation.</entry>
    <entry key="PreLookupOutofRangeInputWarn_Extrap">Input of block ''{0}'' exceeds its breakpoint data range. Extrapolating beyond range and continuing the simulation.</entry>
    <entry key="UdtEmptyDataTypeInBus">Data type string cannot be empty for element ''{0}''</entry>
    <entry key="AlgorithmDescriptorInternalErrorAlgorithmNameInvalid">''{0}'' block 'Algorithm name' ''{1}'' must contain only alphanumeric characters.</entry>
    <entry key="AlgorithmDescriptorInternalErrorAlgorithmParameterNameInvalid">''{0}'' block 'Algorithm parameter name {1,number,integer}' ''{2}'' must contain only alphanumeric characters.</entry>
    <entry key="AlgorithmDescriptorInternalErrorAlgorithmParameterValueInvalid">''{0}'' block 'Algorithm parameter value {1,number,integer}' ''{2}'' must contain only alphanumeric characters.</entry>
    <entry key="AlgorithmDescriptorInternalErrorReferencedBlockNotValidSource"><![CDATA[Block connected to <sldiag objui="inport" objparam="{0,number,integer}" objname="{1}">input port {0,number,integer}</sldiag> of block ''{1}'' must be an Inport block or a Data Store Read block.]]></entry>
    <entry key="AlgorithmDescriptorInternalErrorReferencedBlockNotValidDestination"><![CDATA[Block connected to <sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">output port {0,number,integer}</sldiag> of block ''{1}'' must be an Outport block or a Data Store Write block.]]></entry>
    <entry key="AlgorithmDescriptorInternalErrorReferencedBlockNotAtCorrectGraphicalLevel">''{0}'' block and specified block ''{1}'' must be at the same hierarchical level.</entry>
    <entry key="AlgorithmDescriptorInternalErrorReferencedBlockNotFound">In ''{0}'' block, specified block ''{1}'' not found. ''{1}'' must be a valid block path relative to block ''{0}''. Use '/' to traverse down the hierarchy.</entry>
    <entry key="AlgorithmDescriptorInternalErrorReferencedParameterNotFound">For ''{0}'' block, specified parameter ''{1}'' of block ''{2}'' must be a valid programmatic parameter name.</entry>
    <entry key="AlgorithmDescriptorInternalErrorRTPDoesNotExist">For ''{0}'' block, parameter ''{1}'' of block ''{2}'' not supported because the corresponding run-time parameter (RTP) could not be found.</entry>
    <entry key="AlgorithmDescriptorInternalErrorStateDoesNotExist">For ''{0}'' block, state of block ''{1}'' must be registered.</entry>
    <entry key="AlgorithmDescriptorInternalErrorBlockNotAllowedInSubsystem">Block ''{0}'' is not supported inside Algorithm Descriptor subsystems.</entry>
    <entry key="AlgorithmDescriptorInternalErrorParentSSNotAtomic">Subsystem ''{0}'' must be atomic when it contains ''{1}''.</entry>
    <entry key="AlgorithmDescriptorUnsupportedSampleTime">Subsystem block containing block ''{0}'' supports only discrete, constant, triggered and asynchronous sample times.</entry>
    <entry key="AlgorithmDescriptorSupportsOnlySingleRateSampleTime">Subsystem block containing block ''{0}'' supports only single-rate sample time.</entry>
    <entry key="AlgorithmDescriptorInternalErrorParentNotSS">Block ''{0}'' must be inside an atomic subsystem.</entry>
    <entry key="UdtInvBuiltinInBus">Built-in data type ''{0}'' is not allowed for element ''{1}''</entry>
    <entry key="UdtInvBuiltinInBusWithSuggestion">
      <![CDATA[Data type ''{0}'' is not allowed for element ''{1}''
               <actions exclusiveFixIts="no">
               <action type="fixit">
               <cmd>sl('busUtils','resetprelookupbusindexdatatypefordtoprotection', ''{2}'', ''{3}'')</cmd>
               <txt>This may have been caused by data type overriding(DTO). The first signal of the bus must remain integer. To protect it against DTO, consider redefining the signal type to a fixed point type with zero fraction length and DTO mode 'off'.</txt>
               </action>
               </actions>
      ]]>
    </entry>
    <entry key="UdtInvNoDataTypeOverrideForIndexInVirtualBus">Noninteger built-in data types are not supported for the first signal of the bus specified as the output of ''{0}''. If data type override created this bus, define the signal with a fixed-point data type with a fraction length of zero and data type override set to ''Off''. </entry>
    <entry key="UdtInvInheritInBus">Inheritance rule ''{0}'' is not allowed for element ''{1}''</entry>
    <entry key="UdtNoEnumInBus">Enumerated data type is not allowed for element ''{0}'' of bus ''{1}''</entry>
    <entry key="UdtInvEnumNameInBus">Enumerated data type name ''{0}'' is invalid for element ''{1}''</entry>
    <entry key="UdtNoBusInBus">Bus data types are not allowed for element ''{0}'' of bus ''{1}''</entry>
    <entry key="UdtInvBusNameInBus">Bus data type name ''{0}'' is invalid for element ''{1}''</entry>
    <entry key="UdtInvFixdtInBus">Fixed-point data type ''{0}'' expression has incorrect syntax for element ''{1}''</entry>
    <entry key="InterpInvalidInputBus"><![CDATA[Bus object ''{0}'' specified at <sldiag objui="inport" objparam="{1,number,integer}" objname="{2}">input port {1,number,integer}</sldiag> of block ''{2}'' is invalid.]]></entry>
    <entry key="InterpInvalidInputVirtBusNoName"><![CDATA[Bus signal specified at <sldiag objui="inport" objparam="{0,number,integer}" objname="{1}">input port {0,number,integer}</sldiag> of block ''{1}'' is invalid.]]></entry>
    <entry key="PreLookupInvalidOutputBus">Bus object ''{0}'' specified at output port of Prelookup block ''{1}'' is invalid. Prelookup block only supports bus output with bus objects consisting of two non-bus signals. The data type of the first (index) and the second (fraction) signal in the bus is respectively subject to the same restrictions imposed on individual index and fraction signals (block parameters ''{2}'' and ''{3}''). For more details on these restrictions, refer to the documentation for Prelookup block.</entry>
    <entry key="InterpInputBusWrongNumberOfElements">Bus object ''{0}'' can have only two elements and each element must be scalar.</entry>
    <entry key="InterpInputBusHasBusElements"><![CDATA[<sldiag objui="inport" objparam="{0,number,integer}" objname="{1}">Input port {0,number,integer}</sldiag> of block ''{1}'' connects to a bus signal composed of bus signals. The block input expects a bus signal composed of two non-bus signals.]]></entry>
    <entry key="InterpRequiresBusSignal"><![CDATA[The signal connected to <sldiag objui="inport" objparam="{0,number,integer}" objname="{1}">input port {0,number,integer}</sldiag> of ''{1}'' must be a bus signal when the ''{2}'' checkbox is checked. Note that the port cannot be grounded or unconnected when the ''{2}'' checkbox is checked.]]></entry>
    <entry key="InterpRequiresNonBusSignal"><![CDATA[The signal connected to <sldiag objui="inport" objparam="{0,number,integer}" objname="{1}">input port {0,number,integer}</sldiag> of ''{1}'' must be not a bus signal when the ''{2}'' checkbox is unchecked.]]></entry>
    <entry key="PreLookupOutputBusWrongNumberOfElements">Bus object ''{0}'' can have only two elements.</entry>
    <entry key="PreLookupOutputBusElementIsABus">Element ''{0}'' in bus object ''{1}'' is itself a bus. Bus object ''{1}'' can have only non-bus elements.</entry>
    <entry key="PreLookupBusObjectComplex">Element ''{0}'' in bus object ''{1}'' is complex. Prelookup block only supports real signals.</entry>
    <entry key="InterpInputBusElementIsABus">Element ''{0}'' in bus object ''{1}'' is itself a bus. Bus object ''{1}'' can have only non-bus elements.</entry>
    <entry key="BreakpointsSpacingNoBias">In block ''{0}'', breakpoint spacing data type has a non-zero bias in dimension {1, number, integer}, which is not supported </entry>
    <entry key="BreakpointsSpacingLargerThanZero">In block ''{0}'', value of breakpoint spacing is less than or equal to zero in dimension {1, number, integer} of Simulink.Lookuptable object ''{2}''. Change the breakpoint spacing to a positive value. </entry>
    <entry key="PrelookupBreakpointsSpacingNoBias">In block ''{0}'', breakpoint spacing data type has a non-zero bias, which is not supported </entry>
    <entry key="PreLookupBreakpointsSpacingDoesNotFitInDerivedDatatype">In block ''{0}'', data type ''{2}'' cannot represent parameter ''{1}''. The data type for ''{1}'' is internally computed as the unsigned version of the breakpoint data type with zero bias. The value of ''{1}'' must fit in data type ''{2}'' to the last precision bit. Either change the breakpoint data type or the breakpoint spacing value.</entry>
    <entry key="PreLookupArrayofBusDoesnotSupportJacobian">Block ''{0}'' must not have array of buses as output to run model linearization, select separate index and fraction outputs if input is not a scalar.</entry>
    <entry key="LookupNdBreakpointsSpacingDoesNotFitInDerivedDatatype">In block ''{0}'', data type ''{1}'' cannot represent breakpoint spacing. The data type ''{1}'' is internally computed as the unsigned version of the breakpoint data type with zero bias. The value of breakpoints spacing for dimension {2,number,integer} must fit in data type ''{1}'' to the last precision bit. Either change the breakpoint data type or the breakpoint spacing value.</entry>
    <entry key="LookupNdBreakpointsValueOutOfRange">In block "{0}", the breakpoint data type specified for dimension {1, number, integer} cannot represent all generated breakpoints. Consider changing the data type or the even spacing parameters to generate these breakpoints.</entry>
    <entry key="PreLookupBreakpointsValueOutOfRange">In block ''{0}'', the range of the breakpoint data type specified is not large enough to represent all breakpoints</entry>
    <entry key="PreLookupBreakpointsNumPointsInvalid">In block ''{0}'', the number of breakpoints must be an unsigned integer value greater than or equal to 2 and less than maximum of unsigned 32 bit integer.</entry>
    <entry key="GetInternalDataTypeAPIInvalidParameter">Simulink.Block.getInternalDataType does not support parameter ''{0}'' in block ''{1}''. For a list of supported blocks and parameters, see the Simulink.Block.getInternalDataType reference page.</entry>    
    <entry key="GetInternalDataTypeAPILUTOnlySupportCompiled">n-D Lookup Table block supports only the ''compiled'' mode.</entry>
    <entry key="GetInternalDataTypeAPIPutModelToCompilation">When the mode is set to ''compiled'', the model is in compilation phase.</entry>
    <entry key="SecondOrderIntegrator_ContAttrInconsistentArrayDimension">The number of elements in the arrays for one ''State name'' parameter differs from the other. The arrays for both ''State name'' parameters should have the same number of elements.</entry>
    <entry key="SecondOrderIntegrator_ContAttrInconsistentCharArrayDimension" note="stringDatatypeUpdate">The character array for the ''State name'' parameter ''{0}'' has more than one dimension. It should have only one dimension because it is treated as a character vector.</entry>
    <entry key="SecondOrderIntegrator_ContAttrInvalidType">The ''State name'' parameter for x ''{0}'' is of type ''{1}'' while the ''State name'' parameter for dx/dt ''{2}'' is of type ''{3}''. Both ''State name'' parameters must have identical type and must be string, cell or character arrays.</entry>
    <entry key="SecondOrderIntegrator_ContAttrNotStringOrCellOrCharArray">Both ''State name'' parameters must have identical type and must be string, cell or character arrays.</entry>
    <entry key="SecondOrderIntegrator_ContAttrOnlyxORdxIsSet">Only one of the ''State name'' parameters is specified. Specify all state names or none.</entry>
    <entry key="SecondOrderIntegrator_ContAttrMissingStringSpecified">One of the ''State name'' parameters is specified as one or more missing strings. Missing strings are not supported for state names. </entry>
    <entry key="SecondOrderIntegrator_ICDXDTIgnored">For the block ''{0}'', element {1,number,integer} of state x is saturated at time {2}; whereas, the initial condition for the state dx/dt is {3}. Consequently, the block states are mathematically inconsistent and dx/dt will be initialized to zero. If this behavior is unexpected, ensure that the sign of the initial condition for dx/dt allows x to leave the saturation. You can turn off this warning by using the MATLAB command: warning(''off'', ''Simulink:blocks:SecondOrderIntegrator_ICDXDTIgnored'')</entry>
    <entry key="ContinuousIntegrator_InconsistentParameterOrPortWidth">Either the parameter widths or port widths associated with block ''{0}'' are inconsistent.</entry>
    <entry key="SecondOrderIntegrator_Invalid_dxdt_Bounds">The interval defined by the upper and lower limits of dx/dt does not contain zero. The derivative of x must be zero when x is saturated and must cross zero to enable x to leave saturation. Therefore, adjust your dx/dt limits such that they are nonzero and the corresponding interval includes zero.</entry>
    <entry key="SecondOrderIntegrator_SizeOverflow">The memory requested by block ''{0}'' is expected to exceed the maximum limit of a 32bit integer. Therefore, the memory cannot be allocated.</entry>
    <entry key="CheckPWLBound_LogWriteError">The ''{0}'' block could not pass the logged data to MATLAB.</entry>
    <entry key="invalidblocktype">Not a connection port.</entry>
    <entry key="CrossCorrelationReplacement">The Cross Correlation scope ''{0}'' should be replaced with a new version from the simulink_extras block library.</entry>
    <entry key="OutportOverwritesSignalObjectIC">The ''Initial output'' parameter of Outport block ''{0}'' has been explicitly specified. Therefore, the initial value being specified by the signal object on its signal line will not be honored.
    <![CDATA[
             <actions exclusiveFixIts="yes">
             <action type="fixit">
             <cmd>set_param(''{0}'', ''InitialOutput'',''[]'')</cmd>
             <txt>To avoid this diagnostic, Use ''[]'' as Initial output.</txt>
             </action>
             <action type="suggestion">
             <txt>Alternatively, set ''[]'' as the value for the 'InitialValue' field of the Simulink.Signal object specified on the input signal of the Outport block.</txt>
             </action>
             </actions>
    ]]>
    </entry>
    <entry key="WarnSigObjWithICOutsideOutport">The signal object ''{0}'' has an explicit initial value but has been specified outside the subsystem ''{1}''. In this case, the initial value of the signal object will be ignored. To make sure that the initial value is used, move the signal object specification to within the subsystem ''{1}''. </entry>
    <entry key="WarnSigObjWithICIgnoredDefaultIC">The outport block ''{0}'' will not be using the initial value provided by signal object ''{1}'' since at least one of its other sources is not providing a valid initial condition. Therefore, the outport block will get a default initial value of 0. </entry>
    <entry key="SigObjWithICFoundOnVirtualOutport">The outport block ''{0}'' has a signal object with initial value specified on its input signal line. In certain cases when this happens, Simulink needs to insert a buffer to ensure that the signal correctly gets the initial value from the signal object. However, since the outport block ''{0}'' has the checkbox ''Ensure outport is virtual'' on, Simulink cannot insert any buffer at its input. To fix this, turn off the parameter ''Ensure outport is virtual'' or set the InitialValue field of the signal object on its input to ''''. </entry>
    <entry key="SigObjWithICRootOutportExpFcnMdl">The root outport block ''{0}'' has a signal object with an initial value defined on its input signal line. In such a scenario, Simulink needs to insert a buffer to ensure correct initialization. However, since this is an export-function model,  a buffer cannot be inserted at the root level. To fix this, move the specification of the signal object to an inner subsystem or set its InitialValue field of the signal object to ''''. </entry>
    <entry key="WarnMergeOverwriteSignalObjectICParam"><![CDATA[The ''Initial output'' parameter of Merge block ''{0}'' can no longer be specified by signal object in the simplified initialization mode. You can still use signal objects to initialize the input or the output signals for Merge blocks, but the initialization results may be overwritten by those of the Merge blocks.<actions exclusiveFixIts="no"><action type="suppression"></action></actions>]]></entry>
    <!--Changes -->
    <entry key="InportOutportNameConflict">Member blocks have a name conflict between the inports and outports</entry>
    <entry key="InvalidWrapperMode">Invalid Wrapper mode</entry>
    <entry key="InvalidIOSignalCellArrayDimension">IO signals cell array cannot have more than 2 dimensions</entry>
    <entry key="InvalidIOSignalCellArray">IO signals cell array must be column or row vector</entry>
    <entry key="IOSignalCellArrayLengthMismatch">Length of IO signals cell array must equal number of IO ports</entry>
    <entry key="InvalidIOSignalCell">IO signals cell should have 1 handle per cell</entry>
    <entry key="InvalidConnPortConnection">Connection involving ports of ''{0}'' and ''{1}'' is invalid because the ports are not compatible.</entry>
    <!--errdlg related-->
    <entry key="BlockNameConflict">An ''{0}'' named ''{1}'' cannot be added because an ''{2}'' of the same name already exists. You will need to modify your library to eliminate this conflict</entry>
    <entry key="ConfigSubsysNotInModel">Configurable Subsystem must be placed in a model in order to operate</entry>
    <entry key="SubsysconfigInvalidArg">subsystem_configuration must be called with one of the following five arguments: 'new', 'establish', 'reestablish','copy' or 'update'</entry>
    <entry key="SubsysNotALib">System ''{0}'' is a single block, not a library</entry>
    <entry key="LibraryNotFound">Library ''{0}'' not found on path</entry>
    <entry key="MissingLibraryNameInModel">System ''{0}'' not found in ''{1}''</entry>

    <entry key="MuxedOutputPortWidthMustMatchSignalElementSrcDims">The width {0, number, integer} of the outport of the bus selector block ''{1}'' does not match the sum of the widths {2, number, integer} of the selected signals.</entry>
    <entry key="UnitDelayCouldNotDefineBus">Block ''{1}'' specifies bus object ''{0}'' for its input port. However, the input of this block is not a bus. To use that bus object, connect a Signal Specification block to the input of the block. In the Signal Specification block, use the above bus object for the data type.</entry>
    <entry key="VariantSameInportName">Inport blocks ''{0}'' and ''{1}'' have the same name, ignoring whitespace characters in block names. For a variant subsystem or a variant choice block, use port block names with unique characters excluding whitespace characters.</entry>
    <entry key="VariantModelBlockSameInportName">Input ports {0, number, integer} and {1, number, integer} of variant choice block ''{2}'' have the same name, ignoring whitespace characters in port names. For a variant choice block, use port names with unique characters excluding whitespace characters.</entry>
    <entry key="VariantSameOutportName">Outport blocks ''{0}'' and ''{1}'' have the same name, ignoring whitespace characters in block names. For a variant subsystem or a variant choice block, use port block names with unique characters excluding whitespace characters.</entry>
    <entry key="VariantModelBlockSameOutportName">Output ports {0, number, integer} and {1, number, integer} of variant choice block ''{2}'' have the same name, ignoring whitespace characters in port names. For a variant choice block, use port names with unique characters excluding whitespace characters.</entry>
    <entry key="VariantSameLeftConnPortName">Left connection port blocks ''{0}'' and ''{1}'' have the same name, ignoring whitespace characters in block names. For a variant subsystem or a variant choice block, use port block names with unique characters excluding whitespace characters.</entry>
    <entry key="VariantSameRightConnPortName">Right connection port blocks ''{0}'' and ''{1}'' have the same name, ignoring whitespace characters in block names. For a variant subsystem or a variant choice block, use port block names with unique characters excluding whitespace characters.</entry>
    <entry key="SetModelVariantChoiceNotAllowedInVSS">Setting the Variants parameter of ''{0}'' to ''on'' is not allowed as this Model block is a variant choice of a variant subsystem. Instead, you can create a variant subsystem choice block of ''{1}'' containing multiple Model blocks inside it. </entry>
    <entry key="UniqueName">''{0}'' already exists. Please specify a unique name.</entry>
    <entry key = "UnitConversionError"> Unit Conversion block ''{0}'' has detected an error while calculating conversion factor.</entry>
    <entry key = "UnitConversionTypeMismatch"> Unit Conversion block ''{0}'' determined output port data type to be ''{1}'', but the propagated data type  is ''{2}''. Consider changing 'Output data type' parameter to 'Inherit: Inherit via back propagation'.</entry>
    <entry key="InvalidBlockMaskForCompositionSubDomain">A masked block cannot be converted to a component in an architecture model.</entry>
    <entry key="NonCompositePortBlockNotValidForCompositionSubDomain">Inport and Outport blocks cannot be added to an architecture model. Use In Bus Element and Out Bus Element blocks instead.</entry>
    <entry key="InvalidBlockTypeForCompositionSubDomain">Block of type ''{0}'' cannot be added to an architecture model.</entry>
    <entry key="InvalidBlockServiceComponentForAutosarAdaptiveComposition">AUTOSAR service components cannot be added to an AUTOSAR adaptive architecture model.</entry>
    <entry key="InvalidBlockTypeForActivityDiagram">Unable to add block type ''{0}'' to activity models.</entry>
    <entry key="InvalidBlockAddedToAdapterSubDomain">Block of type ''{0}'' cannot be added to an Adapter block.</entry>
    <entry key="InvalidBlockAddedToMergeSubDomain">Block of type ''{0}'' cannot be added to a Merge component.</entry>
    <entry key="InvalidCrossDomainSubsystemForCompositionSubDomain">A {0} subsystem cannot be converted to a component in an architecture model.</entry>
    <entry key="InvalidSubsystemConversionAttemptForCompositionSubDomain"> Component ''{0}'' in an architecture model cannot be converted into an atomic subsystem.</entry>
    <entry key="InvalidCrossDomainComponentForSimulinkSubDomain">An architecture component cannot be converted to a block in a Simulink model.</entry>
    <entry key="NonEmptyVirtualSubsystemForCompositionSubDomain">A non-empty subsystem cannot be converted to a component in an architecture model.</entry>
    <entry key="InvalidMaskForCompositionSubDomain">A masked block cannot be converted to a component in an architecture model.</entry>
    <entry key="DataPortNotAllowedForCompositionSubDomain">Block of type ''{0}'' cannot be added to architecture ''{1}''. Use Bus Element Ports.</entry>
    <entry key="CannotDisableScheduleRatesInSWArch">Setting the ScheduleRates parameter of the component ''{0}'' to ''off'' in software architectures is not supported.</entry>
    <entry key="CannotChangeScheduleRatesWithInSWArch">Changing the ScheduleRatesWith parameter of the component ''{0}'' in software architectures is not supported.</entry>
    <entry key="ConnectionPortBlockCannotBeAddedAtArchitectureTopLevel">Unable to add physical ports to the root-architecture of the model ''{0}''.</entry>
    <entry key="ConvertToVariantUnsupportedInArchitectureModel">Simulink.VariantUtils.convertToVariantSubsystem is not supported for architecture models. Use systemcomposer.arch.Component.makeVariant instead to convert a component into a variant choice.</entry>

    <!--hot param overrides-->
    <entry key="HPODerivativeCoefficientInTFapproximation" translate="false" note="TranslateFalseBatch;">c</entry>
    <entry key="HPOUDPSendRemoteURL" translate="false" note="TranslateFalseBatch;">IP</entry>

    <!-- Error messages for the Buffer core block -->
    <entry key="bufferOutDimBufSizeMismatch">Error in ''{0}'': Error propagating outport dimensions.</entry>
    <entry key="bufferFrmSizeSpecMismatch">Error in ''{0}'': The output frame size does not match specifications on the block dialog box.</entry>
    <entry key="bufferOverlapTooBig">Error in ''{0}'': The buffer overlap must be less than the buffer size.</entry>
    <entry key="bufferSampTimeNotDiscreteNonConst">Error in ''{0}'': All sample times must be discrete. No continuous or constant sample times are allowed.</entry>
    <entry key="bufferSampTimeAtDFBoundary"><![CDATA[Automatic buffering at dataflow input ports to match required input sizes is not supported for ''{0}'' because the signal at <sldiag objui="inport" objparam="{1, number, integer}" objname="{2}">input port {1, number, integer}</sldiag> of block ''{2}'' has continuous or constant sample time. Adjust the frames sizes of the input signals to match the calculated frame sizes.]]></entry>
    <entry key="bufferUnderlapNotSupported">Error in ''{0}'':Underlap is not supported when unbuffering.</entry>
    <entry key="bufferUnderlapNotSupportFrm">Error in ''{0}'': Underlap is not supported for frame-based inputs.</entry>
    <entry key="bufferInitCondWrongDims">Error in ''{0}'': The initial conditions vector has incorrect dimensions.</entry>
    <entry key="bufferChansInNotChanOut">Error in ''{0}'': The number of channels of the input must equal the number of channel of the output.</entry>
    <entry key="complexICNotAllowed">Error in ''{0}'': The initial conditions must be real when the inputs are real.</entry>
    <entry key="bufferHiddenBufferDataflowBusNotSupported">The signal at the input port {0,number,integer} of Dataflow subsystem ''{1}'' is a bus signal. Buses are not supported for automatic frame-size calculation. Do not use buses or disable automatic frame-size calculation for the ''{1}'' subsystem.
    <![CDATA[
             <actions>
             <action type="fixit" retvalue="yes">
             <cmd>dfs.disableMultirateForSubsystem(''{1}'');</cmd>
             <txt>Disable automatic frame-size calculation for the ''{1}'' subsystem.</txt>
             </action>
             </actions>
    ]]>
    </entry>
    <!-- End error messages for the Buffer core block -->
    <entry key="SystemBlockParameterNameClash">Block ''{0}'' has a property named ''{1}'', which conflicts with a reserved parameter name. Simulink cannot set this property as a parameter on the block. Rename the property.</entry>
    <entry key="SysExtInterfParameterNameClash">Simulink cannot set the value for parameter ''{0}'' on the block ''{1}'' because the parameter name conflicts with a reserved parameter name. Rename the parameter.</entry>
    <entry key="SystemBlockInvalidModification">Invalid to modify block ''{0}'', modify class definition instead. </entry>
    <entry key="SysExtInterfInvalidModification">Simulink is unable to modify the mask on block ''{0}''.</entry>
    <entry key="MatFileWriteError">An error was encountered while writing the cache for MATLAB System blocks in model ''{0}''.
    </entry>
    <entry key="BlockOutsideOfBlockDiagram">Invalid operation detected:''{0}'' is not associated with a block diagram.</entry>
    <entry key="OutportDoesNotSupportReusableCSC">Unsupported storage class ''{0}'' on outport block ''{1}''. To use this storage class, set the storage class on outport block ''{1}'' to ''Auto'' and configure the driving signal with ''{0}'' storage class.</entry>
    <entry key="OutportDoesNotSupportReusableCSC2">Unsupported storage class ''{0}'' on outport block ''{1}''. Since the driving signal is configured with ''{0}'' storage class, set the storage class on outport block to ''Auto''.</entry>
    <entry key="OutportDoesNotSupportCoderDictReusableCSC">Unsupported storage class ''{0}'' on outport block ''{1}''. To use this storage class, configure the driving signal with ''{0}'' storage class.</entry>
    <entry key="OutportDoesNotSupportCSCforMessages">Unsupported storage class on outport block ''{0}''. Outport blocks that receive message signals must have their storage class set to ''Auto''.</entry>
    <entry key="UnifiedOutputPortLargerStringBufferNeeded">Output port of ''{0}'' must have a string type whose maximum length equals or exceeds the maximum length of the largest input string type.</entry>
    <entry key="BlockDoesNotSupportStringInput"><![CDATA[A signal of data type string is not supported on <sldiag objui="inport" objparam="{0,number,integer}" objname="{1}">input port {0,number,integer}</sldiag> of block ''{1}''. For a list of supported data types, see the block documentation page.]]></entry>
    <entry key="HiddenBlockDoesNotSupportStringInput"><![CDATA[A signal of data type string is not supported on <sldiag objui="inport" objparam="{0,number,integer}" objname="{1}">input port {0,number,integer}</sldiag> of inserted hidden block ''{1}''. For a list of supported data types, see the block documentation page.]]></entry>
    <entry key="BlockDoesNotSupportVirtualBusInputContainingStrings"><![CDATA[A virtual bus signal containing string data type is not supported on <sldiag objui="inport" objparam="{0,number,integer}" objname="{1}">input port {0,number,integer}</sldiag> of block ''{1}''. For a list of supported data types, see the block documentation page.]]></entry>
    <entry key="BlockDoesNotSupportNonVirtualBusInputContainingStrings"><![CDATA[A nonvirtual bus signal containing string data type is not supported on <sldiag objui="inport" objparam="{0,number,integer}" objname="{1}">input port {0,number,integer}</sldiag> of block ''{1}''. For a list of supported data types, see the block documentation page.]]></entry>
    <entry key="BlockDoesNotSupportStringOutput"><![CDATA[A signal of data type string is not supported on <sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">output port {0,number,integer}</sldiag> of block ''{1}''. For a list of supported data types, see the block documentation page.]]></entry>
    <entry key="BlockDoesNotSupportNonVirtualBusOutputContainingStrings"><![CDATA[A nonvirtual bus signal containing string data type is not supported on <sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">output port {0,number,integer}</sldiag> of block ''{1}''. For a list of supported data types, see the block documentation page.]]></entry>
    <entry key="BlockDoesNotSupportImageInput"><![CDATA[A signal of data type image is not supported on <sldiag objui="inport" objparam="{0,number,integer}" objname="{1}">input port {0,number,integer}</sldiag> of block ''{1}''. For a list of supported data types, see the block documentation page.]]></entry>
    <entry key="BlockDoesNotSupportImageOutput"><![CDATA[A signal of data type image is not supported on <sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">output port {0,number,integer}</sldiag> of block ''{1}''. For a list of supported data types, see the block documentation page.]]></entry>
    <entry key="BlockDoesNotSupportFMUBinaryInput"><![CDATA[ The ''{0}'' block cannot accept a signal of type FMUBinary. A signal of type FMUBinary is connected to <sldiag objui="inport" objparam="{1,number,integer}" objname="{2}">input port {1,number,integer}</sldiag> of block ''{2}''.]]></entry>
    <entry key="BlockDoesNotSupportFMUBinaryOutput"><![CDATA[The ''{0}'' block cannot produce a signal of type FMUBinary. A signal of type FMUBinary is connected to <sldiag objui="outport" objparam="{1,number,integer}" objname="{2}">output port {1,number,integer}</sldiag> of block ''{2}''.]]></entry>
    <entry key="BlockDoesNotSupportOpaqueInput"><![CDATA[A signal of custom data type is not supported on <sldiag objui="inport" objparam="{0,number,integer}" objname="{1}">input port {0,number,integer}</sldiag> of block ''{1}''. For a list of supported data types, see the block documentation page.]]></entry>
    <entry key="BlockDoesNotSupportOpaqueOutput"><![CDATA[A signal of custom data type is not supported on <sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">output port {0,number,integer}</sldiag> of block ''{1}''. For a list of supported data types, see the block documentation page.]]></entry>
    <entry key="BlockDoesNotSupportOpaqueMatrixInput"><![CDATA[A matrix signal of custom data type is not supported on <sldiag objui="inport" objparam="{0,number,integer}" objname="{1}">input port {0,number,integer}</sldiag> of block ''{1}''. For a list of supported data types, see the block documentation page.]]></entry>
    <entry key="BlockDoesNotSupportOpaqueMatrixOutput"><![CDATA[A matrix signal of custom data type is not supported on <sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">output port {0,number,integer}</sldiag> of block ''{1}''. For a list of supported data types, see the block documentation page.]]></entry>
    <entry key="BlockDoesNotSupportDynamicArrayInput"><![CDATA[A signal of unbounded array type is not supported on <sldiag objui="inport" objparam="{0,number,integer}" objname="{1}">input port {0,number,integer}</sldiag> of block ''{1}''. For a list of supported data types, see the block documentation page.]]></entry>
    <entry key="BlockDoesNotSupportDynamicArrayOutput"><![CDATA[A signal of unbounded array type is not supported on <sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">output port {0,number,integer}</sldiag> of block ''{1}''. For a list of supported data types, see the block documentation page.]]></entry>
 
    <!-- Half precision -->
    <entry key="HalfUnsupportedTypes">Half-precision type can only be combined with other floating-point types for block ''{0}''.</entry>
    <entry key="BlockDoesNotSupportBusInputContainingFMUBinaries"><![CDATA[ A bus containing FMUBinary is connected to <sldiag objui="inport" objparam="{1,number,integer}" objname="{2}">input port {1,number,integer}</sldiag> of block ''{2}''. Inputs containing FMUBinary from a bus are not supported by block ''{0}''.]]></entry>
    <entry key="BlockDoesNotSupportHalfPrecisionInput"><![CDATA[A signal of data type half is not supported on <sldiag objui="inport" objparam="{0,number,integer}" objname="{1}">input port {0,number,integer}</sldiag> of block ''{1}''. For a list of supported data types, see the block documentation page.]]></entry>
    <entry key="BlockDoesNotSupportHalfPrecisionOutput"><![CDATA[A signal of data type half is not supported on <sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">output port {0,number,integer}</sldiag> of block ''{1}''. For a list of supported data types, see the block documentation page.]]></entry>
    <entry key="BlockDoesNotSupportBusInputContainingImages"><![CDATA[A bus signal containing image data type is not supported on <sldiag objui="inport" objparam="{0,number,integer}" objname="{1}">input port {0,number,integer}</sldiag> of block ''{1}''. For a list of supported data types, see the block documentation page.]]></entry>
    <entry key="BlockDoesNotSupportBusInputContainingOpaques"><![CDATA[A bus signal containing custom data types is not supported on <sldiag objui="inport" objparam="{0,number,integer}" objname="{1}">input port {0,number,integer}</sldiag> of block ''{1}''. For a list of supported data types, see the block documentation page.]]></entry>
    <!-- Error messages for general datatype checks -->
    <entry key="BlockDoesNotSupportBusInputContainingOpaqueMatrices"><![CDATA[A bus signal containing custom data type matrices is not supported on <sldiag objui="inport" objparam="{0,number,integer}" objname="{1}">input port {0,number,integer}</sldiag> of block ''{1}''. For a list of supported data types, see the block documentation page.]]></entry>
    <!-- Error messages for general datatype checks -->
    <entry key="InvInputVarDimSignal"><![CDATA[ Variable-size signals are not supported at <sldiag objui="inport" objparam="{0,number,integer}" objname="{1}">input port {0,number,integer}</sldiag> in block ''{1}'' when data type is {2}. ]]></entry>
    <entry key="InvInputFramedSignal"><![CDATA[ Frame-based signals are not supported at <sldiag objui="inport" objparam="{0,number,integer}" objname="{1}">input port {0,number,integer}</sldiag> in block ''{1}'' when data type is {2}. ]]></entry>
    <entry key="InvOutputVarDimSignal"><![CDATA[ Variable-size signals are not supported at <sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">output port {0,number,integer}</sldiag> in block ''{1}'' when data type is {2}. ]]></entry>
    <entry key="InvOutputFramedSignal"><![CDATA[ Frame-based signals are not supported at <sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">output port {0,number,integer}</sldiag> in block ''{1}'' when data type is {2}. ]]></entry>
    <entry key="InvInputContinuousSignal"><![CDATA[ <sldiag objui="inport" objparam="{0,number,integer}" objname="{1}">Input port {0,number,integer}</sldiag> in block ''{1}'' either sets or inherits a non-discrete sample time. However, the input port must have discrete sample time when it is a {2} signal or a bus signal that contains {2} elements. ]]></entry>
    <entry key="InvOutputContinuousSignal"><![CDATA[ <sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">Output port {0,number,integer}</sldiag> in block ''{1}'' either sets or inherits a non-discrete sample time. However, the input port must have discrete sample time when it is a {2} signal or a bus signal that contains {2} elements. ]]></entry>
    <entry key="InvInputNonScalarSignal"><![CDATA[ <sldiag objui="inport" objparam="{0,number,integer}" objname="{1}">Input port {0,number,integer}</sldiag> in block ''{1}'' must be a scalar signal when data type is {2}. ]]></entry>
    <entry key="InvOutputNonScalarSignal"><![CDATA[ <sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">Output port {0,number,integer}</sldiag> in block ''{1}'' must be a scalar signal when data type is {2}. ]]></entry>
    <entry key="InvInputComplexSignal"><![CDATA[Complex signals are not supported at <sldiag objui="inport" objparam="{0,number,integer}" objname="{1}">input port {0,number,integer}</sldiag> in block ''{1}'' when data type is {2}. ]]></entry>
    <entry key="InvOutputComplexSignal"><![CDATA[Complex signals are not supported at <sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">output port {0,number,integer}</sldiag> in block ''{1}'' when data type is {2}. ]]></entry>
    <entry key="InvContinuousSignal"> {0} signal with continuous sample time is not supported. </entry>
    <entry key="InvNonScalarSignal"> Non-scalar {0} signals are not supported. </entry>
    <entry key="InvVarDimSignal"> Variable-size {0} signals are not supported. </entry>
    <entry key="InvComplexSignal"> Complex {0} signals are not supported. </entry>
    <entry key="HomogeneousVirtualBusBecomesVector"> The virtual bus output of block ''{0}'' is treated as a vector because all its elements have the same type. Vectors of type {1} are not supported. </entry>

    <!-- Error messages for Dataflow Subsystem block -->
    <entry key="NoControlBlocksAndDataflowDomain">The subsystem block ''{0}'' specifies a dataflow domain type. Control blocks are not supported in dataflow domains.</entry>
    <entry key="NoEventListenerAndDataflowDomain">The subsystem block ''{0}'' specifies a dataflow domain type. Event Listener blocks are not supported in dataflow domains.</entry>

    <!--- Block description and Title of Matrix Interpolation block -->
    <entry key="matrixInterpolationTitle">Matrix Interpolation</entry>
    <entry key="matrixInterpolationDesc">Perform interpolation or extrapolation between matrix data points. For an n-dimensional interpolation with m-dimensional matrix data points, the table is an (m+n) dimensional matrix. When the data point is a scalar, the table has the same number of dimension as the interpolation dimensions. For example, for an 1-D interpolation with an 2-D data point of size [4,5], the table dimensions are[4,5,9], where 9 is the size of the corresponding breakpoints. The inputs are pre-calculated index and fraction values.</entry>
    <!--- group title and parameters of Matrix Interpolation block -->
    <entry key="TitleParameters">Parameters</entry>
    <entry key="PropInterpMethod">Interpolation method</entry>
    <entry key="PropExtrapMethod">Extrapolation method</entry>
    <entry key="PropInterpolateDimension">Interpolate dimension</entry>
    <entry key="PropTableData">Table data</entry>
    
    <!--- Error messages for Row Major code generation -->
    <entry key="BlockDoesNotSupportRowMajor">Block ''{0}'' at ''{1}'' does not support row major code generation.</entry>
    <entry key="RowMajorSFunctionDoesNotSupportCodeGeneration">S-Function ''{0}'' has SS_ROW_MAJOR configuration and does not support column major code generation.</entry>
    <entry key="BlockDoesNotSupportPreserveDimensionsForBuses">Block ''{0}'' at ''{1}'' does not support bus objects that preserve dimensions for code generation.</entry>
    <entry key="CompiledOutportError">Failed to find the requested compiled port parameter for the block ''{0}'' as the block was optimized during compilation.</entry>
    <entry key="PortValidationInputError"><![CDATA[ Data at <sldiag objui="inport" objparam="{0, number, integer}" objname="{1}">input port {0, number, integer}</sldiag> of block ''{1}'' is invalid.]]></entry>
    <entry key="RunTimeDataConstraintError">Run-time value is ''{1}''. However, run-time value must be ''{0}''.</entry>
    <entry key="PortValidationOutputError"><![CDATA[ Data at <sldiag objui="outport" objparam="{0, number, integer}" objname="{1}">output port {0, number, integer}</sldiag> of block ''{1}'' is invalid.]]></entry>
    <entry key="PortCrossSatisfyMatrixMultiplication">The dimensions of the following ports must be 2D matrix and valid for matrix multiplication.</entry>
    <entry key="PortCrossSameDataType">The following ports or parameters must have same data type.</entry>
    <entry key="PortCrossSameComplexity">The following ports or parameters must have same complexity.</entry>
    <entry key="PortCrossSameDimension">The following ports or parameters must have same dimensions.</entry>
    <entry key="PortCrossSameWordLength">The following two ports must have same word length.</entry>
    <entry key="PortCrossGEIntegerBits">The data type at this port must have greater or equal number of integer bits than the data type at the other port.</entry>
    <entry key="PortCrossGEWordLengthMinusSignBit">The data type at this port must have a greater or equal word length than the data type at the other port. If both have the same word length, a port with an unsigned type is considered greater than a port with a signed type.</entry>
    <entry key="PortCrossValidationInputInputError"><![CDATA[ Data at <sldiag objui="inport" objparam="{0, number, integer}" objname="{4}">input port {0, number, integer}</sldiag> of block ''{4}'' is ''{1}''. However, <sldiag objui="inport" objparam="{2, number, integer}" objname="{4}">input port {2, number, integer}</sldiag> of block ''{4}'' is ''{3}''.]]></entry>
    <entry key="PortCrossValidationError"><![CDATA[ Data at <sldiag objui="port" objparam="{0, number, integer}" objname="{4}">port {0, number, integer}</sldiag> of block ''{4}'', which is ''{1}'' , must be the same as data at <sldiag objui="port" objparam="{2, number, integer}" objname="{4}">port {2, number, integer}</sldiag> of block ''{4}'', which is ''{3}''.]]></entry>
    <entry key="PortCrossValidationInputOutputError"><![CDATA[ Data at <sldiag objui="inport" objparam="{0, number, integer}" objname="{4}">input port {0, number, integer}</sldiag> of block ''{4}'' is ''{1}''. However, <sldiag objui="outport" objparam="{2, number, integer}" objname="{4}">output port {2, number, integer}</sldiag> of block ''{4}'' is ''{3}''.]]></entry>
    <entry key="PortCrossValidationOutputInputError"><![CDATA[ Data at <sldiag objui="outport" objparam="{0, number, integer}" objname="{4}">output port {0, number, integer}</sldiag> of block ''{4}'' is ''{1}''. However, <sldiag objui="inport" objparam="{2, number, integer}" objname="{4}">input port {2, number, integer}</sldiag> of block ''{4}'' is ''{3}''.]]></entry>
    <entry key="PortCrossValidationOutputOutputError"><![CDATA[ Data at <sldiag objui="outport" objparam="{0, number, integer}" objname="{4}">output port {0, number, integer}</sldiag> of block ''{4}'' is ''{1}''. However, <sldiag objui="outport" objparam="{2, number, integer}" objname="{4}">output port {2, number, integer}</sldiag> of block ''{4}'' is ''{3}''.]]></entry>
    <entry key="InputPortInformation"><![CDATA[ Data at <sldiag objui="inport" objparam="{0, number, integer}" objname="{2}">input port {0, number, integer}</sldiag> of block ''{2}'' is ''{1}''. ]]></entry>
    <entry key="OutputPortInformation"><![CDATA[ Data at <sldiag objui="outport" objparam="{0, number, integer}" objname="{2}">output port {0, number, integer}</sldiag> of block ''{2}'' is ''{1}''. ]]></entry>
    <entry key="ParameterInformation"><![CDATA[ Data at parameter <sldiag objui="blockdlg" objparam="{0}" objname="{2}">''{0}''</sldiag> of block ''{2}'' is ''{1}''.]]></entry>
    <entry key="CrossValidationSameDataTypeCanNotSupportStruct"> Validation against same data type rule is not supported for port signals of bus data type and parameter values of struct data type.</entry>
    <entry key="PortValidationFixptError"> Expected data type must be ''{1}''. However, the port data type is ''{0}''.</entry>
    <entry key="PortValidationSignalTypeError"> Expected signal type must be ''{1}''. However, the port signal type is ''{0}''.</entry>
    <entry key="PortValidation2dSquareDimsError"> Expected signal must be a '2-D square matrix'. However, the port dimension is ''{0}''.</entry>
    <entry key="FixedpointConstraintsConflict"> Adding a fixed-point constraint of ''{1}''  to an existing fixed-point constraint of ''{0}'' is not supported.</entry>
    <entry key="PortValidationErrorMsgPlaceHolder"> ''{0}''.</entry>
    <entry key="SameInputPortHasDifferentConstraints"> Input port {1, number, integer} of block ''{0}'' is associated with attribute constraints via port identifiers of ''{3}'' and ''{2}'', which are incompatible. As a result, input port {1, number, integer} takes the union of both attribute constraints. If this is not intended, remove the duplicate port identifier from ''{3}'' or ''{2}''.</entry>
    <entry key="SameOutputPortHasDifferentConstraints"> Output port {1, number, integer} of block ''{0}'' is associated with attribute constraints via port identifiers of ''{3}'' and ''{2}'', which are incompatible. As a result, output port {1, number, integer} takes the union of both attribute constraints. If this is not intended, remove the duplicate port identifier from ''{3}'' or ''{2}''.</entry>
    <entry key="InvalidKeywords">Invalid value specified for 'BlockKeywords' at  block ''{0}''. The value must be character vector, string scalar or string array.</entry>
    <entry key="KeywordUnSupported">Comma(,) is not supported in a keyword.</entry>
    <entry key="SubsystemContainingScopedSimulinkFunctionCallChangedToBeInline">Changing implementation of ''{0}'' to inline function because block ''{1}'' contains scoped Simulink Function caller.</entry>
    <entry key="UninitializedBlockData">Block ''{0}'' has uninitialized data that is being accessed by Simulink.</entry>
    <entry key="ValueTypeMismatch1">Block ''{0}'' expects a signal with value type ''{1}'' but receives a signal with value type ''{2}''.</entry>
    <entry key="ValueTypeShadowWarning">Block ''{0}'' specifies value type ''{1}'', which shadows the ''{2}'' property. </entry>
    <entry key="TransposeUnsupportedForDynamicArraySignals">The Block ''{0}'' does not support Transpose operation for dynamic array signals.</entry>
    <entry key="SingleInputSumUnsupportedForDynamicArraySignals">The Block ''{0}'' does not support single inputs for dynamic array signals.</entry>
    <entry key="FOHInvInitOutPrm">
      The ''{2}'' parameter of the {1} block ''{0}'' must be double and finite.
    </entry>

    <entry key="FOHInvErrTolPrm">
      The ''{2}'' parameter of the {1} block ''{0}'' must be double and non-negative.
    </entry>

    <entry key="FOHInconsitentPrmDims">
      The parameter dimensions of {1} block ''{0}'' are inconsistent.
    </entry>

    <entry key="FOHInputCannotBeContinuous">
      <![CDATA[
               The {1} block ''{0}'' is not configured to allow continuous input.
               <actions exclusiveFixIts="yes">
               <action type="suggestion">
               <cmd>
               load_system(''{0}''); open_system(''{0}'');
               </cmd>
               <txt>
               To allow continuous input, enable the ''Allow continuous input'' parameter of the block and
               set the parameter ''Reset if relative extrapolation error exceeds'' to a finite number (e.g. 0.1) to
               produce a continuous output signal that is a piece-wise linear approximation of the continuous input
               signal. Note that enabling this parameter may lead to numerical inaccuracies in the simulation.
               </txt>
               </action>
               <action type="suggestion">
               <txt> Consider moving this block to a different location in the model where the input signal is discrete signal.  </txt>
               </action>
               </actions>
      ]]>
    </entry>
    <entry key="EntityDelayNonPositiveTi">Input port two of block ''{0}'' expects a positive value, but the input signal is less than or equal to zero. Its value has been set to infinity.</entry>

    <entry key="FOHWarnNumericInaccuracy">
      The input signal of the block ''{0}'' is continuous and the parameter 'ErrorTolerance' is set to 'Inf'. This may lead to numerical inaccuracies in the simulation.
      Consider moving this block to a different location in the model where the input signal is discrete signal.
    </entry>
    <entry key="InvSamplingModeSetting" context="error">
      <![CDATA[
               Block ''{0}'' is not configured to work with a fixed step solver.
               <actions exclusiveFixIts="yes">
               <action type="fixit">
               <cmd>set_param(''{0}'',''RunAtFixedTimeIntervals'',''on'')</cmd>
               <txt>Enable the 'Run at fixed time intervals' parameter for the block</txt>
               </action>
               <action type="fixit">
               <cmd>set_param(''{1}'',''SolverType'',''Variable-step'')</cmd>
               <txt>Consider setting the 'SolverType' to variable step solver.</txt>
               </action>
               </actions>
      ]]>
    </entry>
    <entry key="InvInputDutyCycleForVPG" context="error">
      <![CDATA[
               At time {2}, the duty cycle input {1} of the Variable Pulse Generator block ''{0}'' is invalid. To produce
               a valid output the duty cycle must be greater than 0.
               <actions exclusiveFixIts="yes">
               <action type="fixit">
               <cmd>set_param(''{0}'',''AllowZeroPulseWidth'',''on'');</cmd>
               <txt>Enable the parameter 'Allow zero pulse width' to allow zero duty cycle. Note that
               this may cause algebraic loops.
               </txt>
               </action>
               </actions>
      ]]>
    </entry>
    <entry key="InvInputPeriodForVPG" context="error">
      <![CDATA[
               At time {2}, the period input {1} of the Variable Pulse Generator block ''{0}'' is invalid. To produce a
               valid output the period must be finite and greater than the smallest time resolution in
               Simulink (128*eps).
      ]]>
    </entry>
    <entry key="InvInputPeriodForVPGDiscMode" context="error">
      <![CDATA[
               At time {2}, the period input {1} of the Variable Pulse Generator block ''{0}'' is invalid. To produce a
               valid output the period must be finite and greater than two times the sample time {3}.
      ]]>
    </entry>
    <entry key="InvSamplingRateForVPG" context="error">
      <![CDATA[
               At time {4}, the product of the duty cycle input signal value {2} and the period input signal value {3} for
               the variable pulse generator block ''{0}''is too small. To produce a valid output, this product must be
               greater than the parameter sample time {1}.
               <actions exclusiveFixIts="yes">
               <action type="fixit">
               <cmd>set_param(''{0}'',''AllowZeroPulseWidth'',''on'');</cmd>
               <txt>Enable the parameter 'Allow zero pulse width' to allow small pulse width. Note that
               this may cause algebraic loops.
               </txt>
               </action>
               <action type="suggestion">
               <txt>Decrease the sample time for the block {0}.</txt>
               </action>
               </actions>
      ]]>
    </entry>
    <entry key="OutofBoundSamplingRateForVPG" context="error">
      <![CDATA[
               Invalid value of the parameter 'Sample time' on the block ''{0}''. The sampling rate must be finite and
               greater than the smallest time resolution in Simulink (128*eps).
      ]]>
    </entry>
    <entry key="FailedToCopyPortsForSubsystemBlock">Failed to copy ports for subsystem block ''{0}'', please check the subsystem block, make sure the ports are valid and the model is not corrupted.</entry>
    <entry key="InvPulseWidthForVPG">
      <![CDATA[
               At time {3}, the product of the duty cycle input {1} and period input {2} for variable
               pulse generator block {0} is too small. To produce a valid output, this product must be greater than
               eps {4} of the current time.
      ]]>
    </entry>
    <entry key="warnDutyCycleGreaterThanOne">
      <![CDATA[
               At time {0}, the input duty cycle {1} for the variable pulse generator block {2} is
               greater than 1. To produce a valid signal, the input duty cycle was truncated to 1, at this time and
               whenever this condition occurs for the rest of the simulation.
      ]]>
    </entry>
    <entry key="warnDutyCycleLessThanZero">
      <![CDATA[
               At time {0}, the input duty cycle {1} for the variable pulse generator block {2} is less than zero. To
               produce a valid signal, the input duty cycle was truncated to 0, at this time and
               whenever this condition occurs for the rest of the simulation.
      ]]>
    </entry>
    <entry key="InvInputDutyCycleForPWM" context="error">
      <![CDATA[
               At time {2}, the duty cycle input {1} of the PWM block ''{0}'' is invalid. To produce
               a valid output the duty cycle must be greater than 0.
               <actions exclusiveFixIts="yes">
               <action type="fixit">
               <cmd>set_param(''{0}'',''DisallowZeroDutyCycle'',''off'');</cmd>
               <txt>Disable the parameter 'Disallow zero duty cycle' to allow zero
               duty cycle. Note that this may cause algebraic loops.
               </txt>
               </action>
               </actions>
      ]]>

    </entry>
    <entry key="InvSampleTimeForPWM" context="error">
      <![CDATA[
               At time {4}, the product of the duty cycle input signal value {2} and the parameter period {3} for
               the PWM block ''{0}''is too small. To produce a valid output, this product must be
               greater than the parameter sample time {1}.
               <actions exclusiveFixIts="yes">
               <action type="fixit">
               <cmd>set_param(''{0}'',''DisallowZeroDutyCycle'',''off'');</cmd>
               <txt>Disable the parameter 'Disallow zero duty cycle' to allow small pulse width. Note that
               this may cause algebraic loops.
               </txt>
               </action>
               <action type="suggestion">
               <txt>Decrease the sample time for the block {0}.</txt>
               </action>
               </actions>
      ]]>
    </entry>
    <entry key="InvInitialDelayForPWM" context="error">
        <![CDATA[
                 The initial delay {0} for the PWM block {1} is less than the sample time parameter {2}. To produce a valid PWM signal, 
                 the initial delay must be positive and a multiple of the parameter Sample time value {2}.
        ]]>
    </entry>
    <entry key="VarSizeAoBNotSupportedInPermuteDimensions">Signal containing array of buses with variable size is not supported as input for Permute Dimensions block {0}.</entry>
    <entry key="ZcNotSupportedInFixedStep" context="error">
      <![CDATA[
               The block {0} is not supported for zero crossing detection in fixed-step simulation. Simulink will
               not detect zero crossings associated with this block.
               <actions exclusiveFixIts="no">
               <action type="fixit">
               <cmd>set_param(''{0}'',''ZeroCross'',''off'');</cmd>
               <txt>Disable zero crossing detection for block {0}.
               </txt>
               </action>
               <action type="fixit">
               <cmd>set_param(bdroot(''{0}''),''SolverType'',''Variable-Step'');</cmd>
               <txt>Use a variable-step solver to detect zero crossings associated with block {0}.
               </txt>
               </action>
               </actions>
      ]]>
    </entry>
    <entry key="HitSchedulerRequireVariableStep" context="error">
      <![CDATA[
               Hit Scheduler block ''{0}'' does not support simulation with fixed-step solver.
               <actions exclusiveFixIts="no">
               <action type="fixit">
               <cmd>set_param(bdroot(''{0}''),''SolverType'',''Variable-Step'');</cmd>
               <txt>Select a variable-step solver to use Hit Scheduler block in this model.
               </txt>
               </action>
               </actions>
      ]]>
    </entry>
    <entry key="HitSchedulerInvalidInput" context="error">
      <![CDATA[
               Invalid time delay value ''{1}'' for block ''{0}''. Time delay value must be positive and finite.
      ]]>
    </entry>
    <entry key="warnBufferOverwrite">
      <![CDATA[
               Buffer full for Hit Scheduler block ''{0}''. Removing oldest value from buffer now and any other time the buffer overflows in the rest of the simulation. To avoid buffer overflow, increase the buffer size or do not use a fixed buffer size.
      ]]>
    </entry>
    <entry key="warnDeltaTTooSmall">
      <![CDATA[
               &Delta;t input value {1} for Hit Scheduler block {2} at time {0} is smaller than the minimum step size the solver allows. Using minimum step size determined by solver instead for time {0} and any other time the &Delta;t value is too small in the rest of the simulation.
      ]]>
    </entry>
    <entry key="StructVariableWithInherit">Block ''{0}'' has its variant activation time set to 'inherit from Simulink.VariantControl', but have struct element as variant control variable.</entry>
    <entry key="UseInheritVATWithSlVarCtrl"><![CDATA[Variant conditions of variant block ''{0}'' have variant control variables {1} of type Simulink.VariantControl, but variant activation time of the block is set to ''{2}''. Block ''{0}'' expects to inherit activation time from Simulink.VariantControl variables having the same variant activation times.
        <actions exclusiveFixIts="yes">
            <action type="fixit">
                <cmd>slprivate(''variantfixes'',''ActivationTimeToInheritVATFromSVC'',''{0}'')</cmd>
                <txt>Set variant activation time of block ''{0}'' to ''inherit from Simulink.VariantControl''.</txt>
            </action>
        </actions>]]></entry>
    <entry key="OutportRequiresNVBusForAOBValueType">Outport block ''{0}'' must output an array of nonvirtual buses with dimensions ''{1}'' to match value type ''{2}'' in the parent model. Specify nonvirtual bus output or a different data type.</entry>
    <entry key="InportRequiresNVBusForAOBValueType">Inport block ''{0}'' must output an array of nonvirtual buses with dimensions ''{1}'' to match value type ''{2}''. Specify nonvirtual bus output or a different data type.</entry>
    <entry key="VarSizeConvInconsistentNumDims"><![CDATA[<sldiag objui="inport" objparam="{0,number,integer}" objname="{1}">Input port {0,number,integer}</sldiag> of Bus Creator block ''{1}'' is expecting a variable-size signal whose number of dimensions equals {3,number,integer}, but is driven by a variable-size signal with number of dimensions equal to {2,number,integer}.]]></entry>
    <entry key="VarSizeConvIncompatibleDims"><![CDATA[<sldiag objui="inport" objparam="{0,number,integer}" objname="{1}">Input port {0,number,integer}</sldiag> of Bus Creator block ''{1}'' is expecting a variable-size signal of dimensions ''{3}'', but is driven by a variable-size signal of dimensions ''{2}''.]]></entry>
    <entry key="ConstantValueTypeDimensionsModeMismatchWithValue">Constant block ''{0}'' does not support variable dimensions, but its value type (''{1}'') specifies ''Variable'' dimensions mode.</entry>
    <entry key="ConstantValueTypeComplexityMismatchWithValue">Complexity of Constant block ''{0}'' constant output value is ''{1}'', but the complexity of the block value type (''{2}'') is ''{3}''.</entry>
    <entry key="ConstantValueTypeSymbDimsMismatchWithValue1">Symbolic dimension of Constant block ''{0}'' constant output value is ''{1}'', but the symbolic dimension of the block value type (''{2}'') is ''{3}''.</entry>
    <entry key="ConstantValueTypeSymbDimsMismatchWithValue2">Constant block ''{0}'' constant output value does not specify symbolic dimensions, but the block value type (''{1}'') specifies symbolic dimension ''{2}''.</entry>
    <entry key="ConstantValueTypeSymbDimsMismatchWithValue3">Symbolic dimension of Constant block ''{0}'' constant output value is ''{1}'', but the block value type (''{2}'') does not specify symbolic dimensions.</entry>
    <entry key="ConstantValueTypeDimsMismatchWithValue">Dimension of Constant block ''{0}'' constant output value is ''{1}'', but the dimension of the block value type (''{2}'') is ''{3}''.</entry>
    <entry key="InheritVatActivationTime">The command 'set_param(''{0}'','VariantActivationTime','inherit from Simulink.VariantControl')' is executed for the block.</entry>
    <entry key="InvalidNVB2VConversionAtMultiInputBusCapableBlocks">Block ''{1}'' expects all inputs to have the same data type, but the nonvirtual bus at input port {0, number, integer} has a different data type than another input.</entry>



    <entry key="globalNumberOfFieldsChanged">The number of fields for global struct ''{0}'' cannot be changed during execution.  The number of fields was initially {1,number,integer} and changed to {2,number,integer}.</entry>
    <entry key="globalFieldNamesChanged">The field names for global struct ''{0}'' cannot be changed during execution.  The field name was initially ''{1}'' and changed to ''{2}''.</entry>
    <entry key="globalDimsChanged">The dimensions for global variable ''{0}'' cannot be changed during execution.  Specified dimensions were initially "{1}" and changed to "{2}".</entry>
    <entry key="globalTypeChangedSummary">The data type for global variable ''{0}'' cannot be changed during execution.</entry>
    <entry key="globalTypeChangedDetailed">The data type for global variable ''{0}'' cannot be changed during execution.  Specified data type was initially "{1}" and changed to "{2}".</entry>
    <entry key="globalComplexityChanged">The complexity for global variable ''{0}'' cannot be changed during execution.  Specified complexity was initially "{1}" and changed to "{2}".</entry>
    

    <entry key="SizeOfBitRangeArray">Value must be a scalar or vector of two elements.</entry>    
    <entry key="TunableSizeValueMustBeIntegerGeq2">Tunable size for dimension {0, number, integer} must be an integer greater than or equal to 2.</entry>
    <entry key="TunableSizeCanNotBeDefaultWhenBPFromPort">Invalid tunable size for dimension {0, number, integer}.  When the breakpoints source is "Input port", the tunable size value must be an integer greater than or equal to 2, and less than or equal to the length of the breakpoints array.</entry>
    <entry key="TunableSizeCanNotBeDefaultWhenTableFromPort">Invalid tunable size for dimension {0, number, integer}.  When the breakpoints specification is "Even spacing" and the table source is "Input port", the tunable size value must be an integer greater than or equal to 2, and less than or equal to the length of dimension {0, number, integer} of the lookup table.</entry>
    <entry key="TunableSizeValueMustBeLeqBPArrayLen">Invalid tunable size for dimension {0, number, integer} because the tunable size value exceeds the length of the breakpoint array.  The tunable size value must be less than or equal to {2, number, integer}, but it is set to {1, number, integer}.</entry>
    <entry key="TunableSizeValueMustBeLeqTableDimSize">Invalid tunable size for dimension {0, number, integer} because the tunable size value exceeds the size of the corresponding dimension of the table.  The tunable size value must be less than or equal to {2, number, integer}, but it is set to {1, number, integer}.</entry>
    <entry key="ConflictingTunableSizeParameters">Enabling both ''SupportTunableSize'' and ''SupportTunableTableSize'' is not supported.  Set ''SupportTunableTableSize'' to 'off'.</entry>
	<entry key="CannotChangeMaskHideContentsToOff">Cannot set 'MaskHideContents' to 'off' for MathWorks library block.</entry>
</message>
</rsccat>

<!-- LocalWords:  YMin YMax WS workspaces xn nx arccosine arcsine nonvirtual Raphson Akima AZVC dfs
     LocalWords:  PWork th SIMO mxn Noninteger reinstantiation reinstantiated eg tconfigset CMsg
     LocalWords:  frameness subobject Muxes Mant RSIM Fslope linearizes FCNCALL Underspecified WSL
     LocalWords:  Prelookup subarrays Prms dimensionalities Fors Unlog Subref distro wsl Alg inpurt
     LocalWords:  slgetcompilerinfo im HGain ZBuffer VGain arccosh arctanh datapoints errdlg balue
     LocalWords:  online multicore ICDXDT sltbedit Allpole Underlap unbuffering systemcomposer FMUBinary
     LocalWords:  undefines DState subfolder kf variantfixes tunability
     LocalWords:  Nontunable Nonreusable ZOH RTP
     LocalWords:  resetprelookupbusindexdatatypefordtoprotection Lookuptable
     LocalWords:  subdomain
-->
