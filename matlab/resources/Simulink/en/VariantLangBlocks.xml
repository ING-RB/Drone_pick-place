<?xml version="1.0" encoding="UTF-8" ?>
<!-- Copyright 2023-2024 The MathWorks, Inc. -->
<rsccat version="1.0" locale="en_US" product="Simulink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../../../../matlab/resources/schema/msgcat.xsd">
    <message>
        <entry key="CannotChangeRTWSystemCodeParam">Setting the "Function packaging" (RTWSystemCode) parameter of Variant Subsystem ''{0}'' to a non-auto value is not supported. </entry>
        <entry key="CannotSetActiveChoice">Setting active choice for variant block ''{0}'' with variant control ''{1}'' is not supported.</entry>
        <entry key="InvalidVariantControlForVSSSimCodegenBlock">When Variant block ''{0}'' is in Variant control mode: "sim codegen switching", the variant switch for its choice block ''{1}'' must be one of ''(sim)'' or ''(codegen)''.</entry>
        <entry key="InlineVariantInvalidVC" note="stringDatatypeUpdate">The variant controls specified for variant {0} block ''{1}'' is invalid.</entry>
        <entry key="SimCodegenExpressionOrLabelNotAllowed">Variant block ''{0}'' has its variant control mode set to ''expression'' or ''label'' and uses ''(sim)'' or ''(codegen)'' in its choice condition which is not supported.</entry>
        <entry key="SimCodegenNotAllowedInConnectorBlk">Variant Connector block ''{0}'' does not support ''(sim)'' or ''(codegen)'' variant keyword as a variant control. </entry>
        <entry key="DefaultNotAllowedInConnectorBlk">Variant Connector block ''{0}'' does not support ''(default)'' variant keyword as a variant control. </entry>
        <entry key="VarSrcPort">input</entry>
        <entry key="VarSinkPort">output</entry>
        <entry key="VariantParamOnMdlBlockErr">Setting 'Variant' parameter for Model block ''{0}'' is not supported. Please use Variant Subsystem blocks with a set of Model block as choices to achieve the same functionality.</entry>
        <entry key="VSSFcnCallNonScalarTrigger">The Inport block ''{0}'' corresponding to the Function-Call input port of Variant Subsystem is driven by a non-scalar function call trigger signal. Such a modeling pattern is not supported.</entry>
        <entry key="InvalidConnectorTag">Connector tag name specified in ''{0}'' is not a valid MATLAB identifier. Valid identifiers start with a letter, contain no spaces or special characters and are at most {1,number,integer} characters long.</entry>
        <entry key="InvalidSetParamForVariantBlk">Cannot change ''{0}'' parameter of the Variant block ''{1}'' when model is being compiled or simulation is running.</entry>
        <!-- VAS/VSS related diagnostic messages start -->
        <!-- Internal diagnostic messages start -->
        <entry key="VSSInputMustBeCharArr" note="internal error not visible to customers">When the first input argument to slInternal function is ''{0}'' then all other input arguments must be character vectors.</entry> 
       <entry key="VASInputMustBeAbsPath" note="internal error not visible to customers">When the first input argument to slInternal function is ''VASFilesystemHelper_GetRelativeWrtBaseAbsolute'' then second and third input arguments must be valid absolute paths.</entry>
        <entry key="VASInputMustBeVASBlk" note="internal error not visible to customers">When the first input argument to slInternal function is ''{0}'' then the second input argument must be a valid path to a Variant Assembly Subsystem block.</entry>
        <entry key="VSSInputMustBeVSSBlk" note="internal error not visible to customers">When the first input argument to slInternal function is ''{0}'' then the second input argument must be a valid path to a Variant Subsystem block.</entry>
        <entry key="VAS4thArgMustBeLabelOrExpression" note="internal error not visible to customers">When the first input argument to slInternal function is ''GetVASChoiceFilenamesForAVariantControlMode'' then the fourth input argument must be either ''label'' or ''expression''.</entry>
        <entry key="VAS3rdArgMustBeVCSOrVCEnum" note="internal error not visible to customers">When the first input argument to slInternal function is ''{0}'' then the third input argument must be either ''VariantChoicesSpecifier'' or ''VariantChoicesEnumeration''.</entry>
        <entry key="VAS2ndArgMustBeValidBlkPathOrHndl" note="internal error not visible to customers">When the first input argument to slInternal function is ''{0}'' then the second input argument must be a character vector of valid block path or a double of valid bock handle.</entry>
        <entry key="VASInputMustBeLogical" note="internal error not visible to customers">The {0} input argument for the slInternal function ''{1}'' should be a logical value.</entry>
        <!-- Internal diagnostic messages end -->
        <entry key="VASSimCodeSwtchNotSupp">Variant control mode 'sim codegen switching' not supported on Variant Subsystem block ''{0}'' in variant assembly mode.</entry>
        <entry key="VASNotSuppSSRefToSSConvert">Conversion from Subsystem Reference block ''{0}'' to Subsystem block is not supported because it is a variant choice of a Variant Assembly Subsystem block.</entry>
        <!-- Label Mode related diagnostic messages start -->
        <entry key="UnableToSetLMAC">Unable to change parameter 'LabelModeActiveChoice' of block ''{1}'' to ''{0}''.</entry>
        <entry key="VASEmpLblSetNotAllowed">Setting the value of ''LabelModeActiveChoice'' to an empty string or character vector is not supported because the Variant Subsystem block ''{0}'' is in variant assembly mode and has non-zero number of choices.</entry>
        <entry key="VASNotAModelSubsysOrPattern">The expression evaluates to these character vectors that are not model files, subsystem files, or valid file name patterns on MATLAB path: {0}.</entry>
        <entry key="VASCantMakeCurrModAsVarChoice">Adding a filename ''{0}'' that matches with the current model name in the variant choices specifier is not supported.</entry>
        <entry key="VCSNot1DCellOrStrArr">Evaluated value of the variant choices specifier expression must be either a one-dimensional cell array of non-empty character vectors or a one-dimensional string array with non-missing values.</entry>
        <!-- Label Mode related diagnostic messages end -->
        <!-- Expression Mode related diagnostic messages start -->
        <entry key="VASEnumMemberCurrModName">Enumeration class member name ''{0}'' must be different from the name of the model that uses it.</entry>
        <!-- Expression Mode related diagnostic messages end -->
        <!-- System Composer related diagnostic messages start -->
        <entry key="InvalidVCSParamInArchModel">Setting ''VariantChoicesSpecifier'' or ''VariantChoicesEnumeration'' for Variant Component block ''{0}'' in a System Composer model is not supported.</entry>
        <entry key="SetParamInUnsuppSubDomain">Setting ''VariantChoicesSpecifier'' or ''VariantChoicesEnumeration'' is not supported for Variant Component block ''{0}'' because the block does not belong to Simulink or architecture sub-domain.</entry>
        <!-- System Composer related diagnostic messages end -->
        <!-- VAS/VSS related diagnostic messages end -->
        <entry key="MultipleVariantStartBlocksDetected">Variant Start blocks ''{0}'' and ''{1}'' have same Variant Start End Tag. Variant Start End Tag must be unique for a pair of Variant Start End blocks in a given hierarchy.</entry>
        <entry key="MultipleVariantEndBlocksDetected">Variant End blocks ''{0}'' and ''{1}'' have same Variant Start End Tag. Variant Start End Tag must be unique for a pair of Variant Start End blocks in a given hierarchy.</entry>
        <entry key="VariantStartBlockMissing">Variant End block ''{0}'' has no paired Variant Start block present in the current hierarchy.</entry>
        <entry key="VariantEndBlockMissing">Variant Start block ''{0}'' has no paired Variant End block present in the current hierarchy.</entry>
        <entry key="InvalidSetPrmOnVCMode">Parameter 'VariantControlMode' for the block ''{0}'' has been disabled because 'LabelModeActiveChoice' of block ''{0}'' has been promoted onto a mask.</entry>
        <entry key="UndefinedVariantControlInsideSSRef">Unable to resolve variant control variables in {0} on the block ''{1}''.</entry>
        <entry key="UninitialisedMaskWorkspace">Mask workspace of the block ''{0}'' is not
        initialized due to an issue in the mask parameters or the mask init code of block ''{0}'',
        or any of its parents.</entry>
        <entry key="VariantControlCreatedInMaskWorkspace">Creating or modifying variant control
        variable ''{0}'' of the block ''{1}'' in the mask workspace is not supported when 'Variant
        activation time' is set to 'startup' or 'runtime'. Use mask parameters to create or modify variant control variables.</entry>
        <entry key="AutosarcodegenForSTFromMask">Variant controls on the block ''{0}'' is defined in the mask or model workspace. To generate AUTOSAR code of variant blocks in startup activation time, define variant control variables in the global workspace.</entry>
        <!-- AutomatePortSync related diagnostic messages start -->
        <entry key="AutomatePortSyncAPIInStrictInterface">
            <![CDATA[ This command is supported only when the Variant Subsystem block ''{0}'' is in flexible interface.
                     <actions exclusiveFixIts="yes">
                     <action type="fixit">
                     <cmd>slprivate(''variantfixes'',''EnableFlexibleInterface'',''{0}'')</cmd>
                     <txt> Set ''Allow flexible interface'' of ''{0}'' to ''on''. </txt>
                     </action>
                     </actions>
            ]]>
        </entry>
        <!-- AutomatePortSync related diagnostic messages end -->
    <entry key="ConflictingVAT">Block ''{0}'' contains Simulink.VariantControl objects {1} with conflicting variant activation time.</entry>
    <entry key="NoSVCWithInherit">Variant activation time of block ''{0}'' is set to 'update diagram' during model compile, because none of the variant control variables are of the type Simulink.VariantControl. Block ''{0}'' expects at least one of the variables to be of the type Simulink.VariantControl to use 'inherit from Simulink.VariantControl' activation time.</entry>
    <entry key="StrictExpMultiIndependentVariables">The variant control expression "{0}" associated with the block "{1}" contains multiple independent variables in one of its subexpression "{2}". Only one independent variable in a subexpression is supported in strict variant mode and it must be a Simulink.VariantControl.</entry>
        <entry key="StrictExpSingleVariable">The variant control expression "{0}" associated with the block "{1}" contains one variables "{2}" in one of its subexpression "{3}". "{2}" must be an independent variable in strict variant mode and it must be a Simulink.VariantControl.</entry>    
        <entry key="StrictExpSupprtOnlyVAT"> The variant condition expression "{0}" on block ''{1}'' includes the variable ''{2}'' which is not of type Simulink.VariantControl. In strict expression mode, atleast one variable within a condition expression must be Simulink.VariantControl instance.</entry>
        <entry key="StrictExpSupprtNoSVC"> The variant condition expression "{0}" on block ''{1}'' has no Simulink.VariantControl variable in one of its subexpression "{2}". In strict expression mode, one variable within a subexpression must be a Simulink.VariantControl instance.</entry>

        <entry key="StrictExpInvalidOperators">Invalid operators in variant condition expression ''{1}'' of variant block ''{0}'' because 'StrictExpressionMode' is selected. Supported operators are "==", "~=", "&amp;&amp;", "||", and "~".</entry>

        <entry key="StrictExpInvalidOperatorsVariantObject">Invalid operators in variant condition expression ''{1}'' of variant block ''{0}'' because 'StrictExpressionMode' is selected. Supported operators are "==", "~=", "&amp;&amp;", "||", and "~". ''{1}'' expression is derived from the ''{2}'' 'Simulink.VariantExpression'</entry>
    </message>

</rsccat>

<!-- LocalWords:  GetVASChoiceFilenamesForAVariantControlMode dimentional variantfixes VSS
-->
