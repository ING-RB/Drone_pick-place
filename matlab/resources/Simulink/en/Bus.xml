<?xml version="1.0" encoding="UTF-8" ?>
<!-- Copyright 2009-2024 The MathWorks, Inc. -->
<rsccat version="1.0" locale="en_US" product="Simulink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../../../../matlab/resources/schema/msgcat.xsd">
  <message>
    <entry key="BusTypePropBlockHasUnsetInputInfo">''{0}'' has unset signal bus type information for input port {1,number,integer}. Currently there is not enough information to solve the model. Please consider adding a Signal Specification block with a bus object before the input port. To set the bus type to nonvirtual, check the ''Require nonvirtual bus'' checkbox in the Signal Specification block parameters dialog. </entry>
    <entry key="BusTypePropBlockHasUnsetOutputInfo">''{0}'' has unset signal bus type information for output port {1,number,integer}. Currently there is not enough information to solve the model. Please consider adding a Signal Specification block with a bus object after the output port. To set the bus type to nonvirtual, check the ''Require nonvirtual bus'' checkbox in the Signal Specification block parameters dialog.</entry>
    <entry key="BusTypePropBusConfiguredForNVB"><![CDATA[ <sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">Output port {0,number,integer}</sldiag> of ''{1}'' must connect to a nonvirtual bus or nonbus signal. To convert a virtual bus to a nonvirtual bus or vector, use a Signal Conversion or Bus to Vector block.]]></entry>
    <entry key="BusTypePropBusConfiguredForNVBIn"><![CDATA[ <sldiag objui="inport" objparam="{0,number,integer}" objname="{1}">Input port {0,number,integer}</sldiag> of ''{1}'' must connect to a nonvirtual bus or nonbus signal. To convert a virtual bus to a nonvirtual bus or vector, use a Signal Conversion or Bus to Vector block.]]></entry>
    <entry key="BusTypePropSrcDstMismatchBusSrc"><![CDATA[<sldiag objui="inport" objparam="{2,number,integer}" objname="{3}">Input port {2,number,integer}</sldiag> of ''{3}'' expects a nonbus signal but receives a bus from <sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">output port {0,number,integer}</sldiag> of ''{1}''. To convert a virtual bus to a vector, use a Bus to Vector block. To select an element of the bus, use a Bus Selector block.]]></entry>
    <entry key="BusTypePropSrcDstMismatchBusSrcStateflow"><![CDATA[Cannot propagate bus signal to <sldiag objui="inport" objparam="{0,number,integer}" objname="{1}">input port {0,number,integer}</sldiag> of ''{1}'' because this input port requires a non-bus signal. \n\nIf the destination block is a bus-capable block, ensure that the block configuration and its input signal(s) meet the requirements for bus support. Please see Simulink documentation for further information on composite (i.e. bus) signals and their proper usage. Alternately, if the input bus signal is virtual; consists only of scalar elements, 1-D elements, or either row or column vectors; and all elements have the same data type, signal type, and sampling mode, consider inserting a Bus to Vector conversion block in the signal path. Otherwise, consider using a Bus Selector block in the signal path.]]></entry>
    <entry key="BusTypePropSrcDstMismatchVB">All input signals to the block ''{0}'' must be of the same type (bus or non-bus). The signal at input port {1,number,integer}  is a virtual bus while the signal at input port {2,number,integer} is not a bus signal. If the input bus signal consists only of scalar elements, 1-D elements, or either row or column vectors; and all elements have the same data type, signal type, and sampling mode, consider inserting a Bus to Vector conversion block in the signal path.</entry>
    <entry key="BusTypePropVirtualityMismatchNVToV">All input buses to the block ''{0}'' must be of the same virtuality. The bus at input port {1,number,integer} is nonvirtual, while the bus at input port {2,number,integer} is virtual.</entry>
    <entry key="BusTypePropVirtualityMismatchNVToVVariantMerge">All input buses from Variant Subsystem choices to the Outport block ''{0}'' must be of the same virtuality (all Virtual or all Nonvirtual). To fix this issue the output of ''{1}'' must be a nonvirtual bus which can be created by adding a Signal Conversion block which is configured to convert virtual buses to nonvirtual buses.</entry>
    <entry key="BusTypePropVirtualityMismatchNVToVVariantMergeHier">All input buses from Variant Subsystem choices to the Outport block ''{0}'' must be of the same virtuality. One way to fix this issue, is to set all the Variant choice blocks' outport bus types to be nonvirtual.</entry>
    <entry key="BusTypePropVirtualityMismatchNVToNB">All input buses to the block ''{0}'' must be of the same virtuality. The bus at input port {1,number,integer} is nonvirtual, while the signal at input port {2,number,integer} is not a bus.</entry>
    <entry key="BusTypePropVirtualityMismatchVToNV">All input buses to the block ''{0}'' must be of the same virtuality. The bus at input port {1,number,integer} is virtual, while the bus at input port {2,number,integer} is nonvirtual.</entry>
    <entry key="BusVectorCompilationRequired">Cannot get the list of BusAsVector ports unless the model is in compiled state.</entry>
    <entry key="EditTimeBusPropFailureInputPort"><![CDATA[Unable to determine the signal hierarchy entering <sldiag objui="inport" objparam="{0,number,integer}" objname="{1}">input port {0,number,integer}</sldiag> of ''{1}''. In order to determine the signal hierarchy, Simulink must inspect upstream blocks and propagate information about the signal hierarchy to this block. Simulink encountered an error condition during this process. The specific diagnostic message is:]]></entry>
    <entry key="EditTimeBusPropFailureOutputPort"><![CDATA[Unable to determine the signal hierarchy at the <sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">output port {0,number,integer}</sldiag> of ''{1}''. In order to determine the signal hierarchy, Simulink must inspect upstream blocks and propagate information about the signal hierarchy to this block. Simulink encountered an error condition during this process. The specific diagnostic message is:]]></entry>
    <entry key="SigHierPropBlockBusSettingDoesntMatchPropInfo">Hierarchy of the input bus at block ''{0}'' must match that of the bus object specified by the block.</entry>
    <entry key="SigHierPropBlockBusSettingDoesntMatchPropInfoNonBus">Block ''{0}'' specifies a bus object and must receive a bus that matches the specified bus object.</entry>
    <entry key="SigHierPropBlockBusSettingSubBusDoesntMatchPropInfo"><![CDATA[<sldiag objui="inport" objparam="{0,number,integer}" objname="{1}">Input port {0,number,integer}</sldiag> of block ''{1}'' expects a bus that has the same hierarchy as bus object ''{2}'' specified by the block, but the block receives a bus that does not have an element with data type ''{3}''.]]></entry>
    <entry key="SigHierPropBlockHasUnequalBusInputs">The bus signals feeding into block ''{0}'' do not have the same signal names and hierarchies. All bus input signals to this block must have the same names and hierarchical structure.</entry>
    <entry key="SigHierPropBlockHasUnequalInputs">The signals feeding into block ''{0}'' do not have the same signal names and hierarchies. All input signals to this block must have the same names and hierarchical structure.</entry>
    <entry key="SigHierPropBlockHasUnsetInputInfo">''{0}'' has unset signal name and hierarchy information for input port {1,number,integer}. If this error message references a built-in Simulink block, please contact MathWorks for assistance.</entry>
    <entry key="SigHierPropBlockHasUnsetOutputInfo">''{0}'' has unset signal name and hierarchy information for output port {1,number,integer}. If this error message references a built-in Simulink block, please contact MathWorks for assistance.</entry>
    <entry key="SigHierPropBusAssignOutputDoesNotMatchInput"><![CDATA[Unable to find selected signal ''{0}'' in the input bus at block ''{1}'', <sldiag objui="inport" objparam="{2,number,integer}" objname="{1}">Input port {2,number,integer}</sldiag>.]]></entry>
    <entry key="SigHierPropBusSelOutputDoesNotMatchInput"><![CDATA[Unable to find selected signal ''{0}'' in the input bus at block ''{1}'', <sldiag objui="inport" objparam="{2,number,integer}" objname="{1}">Input port {2,number,integer}</sldiag>.]]></entry>
    <entry key="SigHierPropBusAssignOutputDoesNotMatchInputWithVariants"><![CDATA[Unable to find selected signal ''{0}'' in the input bus signal of block ''{1}'', <sldiag objui="inport" objparam="{2,number,integer}" objname="{1}">Input port {2,number,integer}</sldiag>, because there is an 'always false' condition propagating from the variant block whose variant activation time is set to 'update diagram'.]]></entry>
    <entry key="SigHierPropBusSelOutputDoesNotMatchInputWithVariants"><![CDATA[Unable to find selected signal ''{0}'' in the input bus signal of block ''{1}'', <sldiag objui="inport" objparam="{2,number,integer}" objname="{1}">Input port {2,number,integer}</sldiag>, because there is an 'always false' condition propagating from the variant block whose variant activation time is set to 'update diagram'.]]></entry>
    <entry key="SigHierPropInputToBlockMustBeABus"><![CDATA[<sldiag objui="inport" objparam="{0,number,integer}" objname="{1}">Input port {0,number,integer}</sldiag> for ''{1}'' must be a bus signal.]]></entry>
    <entry key="BusToVectorBlockShouldAcceptVirtualBus">A non-bus signal is connected to the input port of Bus to Vector block ''{0}'', which is functional only when the input signal is a virtual bus. Therefore, please consider removing the Bus to Vector block. </entry>
    <entry key="SigHierPropMaxRecursionExceeded">Hierarchical depth of a bus signal has exceeded the logical limit imposed by the Bus Creator and Out Bus Element blocks in the model.</entry>
    <entry key="SigHierPropNoSolutionLoop">Unable to determine signal hierarchy. The output of ''{0}'' is fed back to the input port of the same block through other bus capable blocks. This loop cannot be resolved because signal hierarchy is defined by a recursive relationship. To resolve this issue, consider breaking the loop by selecting the correct signal with a Bus Selector or an In Bus Element block.</entry>
    <entry key="SigHierPropSrcDstMismatchBusSrc"><![CDATA[<sldiag objui="inport" objparam="{2,number,integer}" objname="{3}">Input port {2,number,integer}</sldiag> of ''{3}'' expects a nonbus signal but receives a bus from <sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">output port {0,number,integer}</sldiag> of ''{1}''. To convert a virtual bus to a vector, use a Bus to Vector block. To select an element of the bus, use a Bus Selector block.]]></entry>
    <entry key="SigHierPropSrcDstMismatch"><![CDATA[<sldiag objui="inport" objparam="{2,number,integer}" objname="{3}">Input port {2,number,integer}</sldiag> of ''{3}'' expects a bus with a different structure than the bus it receives from <sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">output port {0,number,integer}</sldiag> of ''{1}''.]]></entry>
    <entry key="SigHierPropSrcDstMismatchNonBusSrc"><![CDATA[<sldiag objui="inport" objparam="{2,number,integer}" objname="{3}">Input port {2,number,integer}</sldiag> of ''{3}'' expects a bus but receives a nonbus signal from <sldiag objui="outport" objparam="{0,number,integer}" objname="{1}">output port {0,number,integer}</sldiag> of ''{1}''.]]></entry>
    <entry key="SigHierPropSrcDstMismatchNonBusSrcForIVBlocks"> Unable to propagate non-bus signal from output port of block ''{0}'' to input port of destination block ''{1}'' because the destination block requires a bus signal. </entry>
    <entry key="SigHierPropSrcDstMismatchNonBusSrcForMessages"><![CDATA[Cannot propagate non-bus signal to <sldiag objui="inport" objparam="{0,number,integer}" objname="{1}">input port {0,number,integer}</sldiag> of ''{1}'' because the destination block requires a bus signal.]]></entry>
    <entry key="SigHierPropSrcsCannotHaveDynamicSetting">Source ''{0}'' cannot have dynamic signal hierarchy setting for its output port {1,number,integer}. All sources should explicitly set all their signal name and hierarchy in Block Eval params. If this error message references a built-in Simulink block, please contact MathWorks for assistance.</entry>
    <entry key="SigHierPropTooManyOutputs">Block ''{0}'' uses the default set function in the signal hierarchy propagator but it has more than one output. This block must implement a custom set function. If this error message references a built-in Simulink block, please contact MathWorks for assistance.</entry>
    <entry key="SigHierPropSelectIntoMsg">Selected element ''{0}'' in ''{1}'' is part of message data. Use ''{1}'' to select and output the entire message.</entry>
    <entry key="VarDimsNotSupportedForUnconnectedBusSources">The bus object ''{0}'' specified by the unconnected bus source block ''{1}'' contains one or more variable-sized elements. You cannot associate unconnected bus sources with bus objects that contain variable-sized elements. </entry>
    <entry key="VarDimsNotPermittedForAoB1">The bus object ''{0}'' associated with the block ''{1}'' contains both a variable sized element and an array of sub-buses. Arrays of buses cannot be used in conjunction with bus objects that contain variable sized elements. </entry>
    <entry key="VarDimsNotPermittedForAoB2">The bus object ''{0}'' associated with the block ''{1}'' contains a variable sized element and the block specifies non-scalar dimensions. Arrays of buses cannot be used in conjunction with bus objects that contain variable sized elements. </entry>
    <entry key="VarDimsNotPermittedForAoB3">The input non-virtual bus signal to port {0,number,integer} of block ''{1}'', and defined by bus object ''{2}'', contains one or more variable sized bus elements. This block cannot operate on non-virtual bus signals that contain variable sized elements. </entry>
    <entry key="VarDimsNotPermittedForAoB4">Unable to operate on nonvirtual bus signals defined by bus object ''{0}'' at the input port {1,number,integer} of block ''{2}''. This is because the input port {1,number,integer} is configured to receive variable-size signals. </entry>
    <entry key="FramesNotPermittedForAoB1">The bus object ''{0}'' associated with the block ''{1}'' contains both an element with frame based sampling mode and an array of sub-buses. Arrays of buses cannot be used in conjunction with bus objects that contain frame based elements. </entry>
    <entry key="FramesNotPermittedForAoB2">The bus object ''{0}'' associated with the block ''{1}'' contains an element with frame based sampling mode and the block specifies non-scalar dimensions. Arrays of buses cannot be used in conjunction with bus objects that contain frame based elements. </entry>
    <entry key="FramesNotPermittedForAoB3">The input non-virtual bus signal to port {0,number,integer} of block ''{1}'', and defined by bus object ''{2}'', contains one or more elements with frame based sampling mode. This block cannot operate on non-virtual bus signals that contain bus elements with frame based sampling mode. </entry>
    <entry key="ExpansionNotPermittedForAoB1">Input to block ''{0}'' is an array of bus signal or contains an element which is an array of bus. The block's ''Initial condition'' parameter is a non-zero scalar or vector value. Consider using a matching MATLAB structure (see Simulink.Bus.createMATLABStruct) or a scalar zero to initialize the array of buses.</entry>
    <entry key="ExpansionNotPermittedForAoB2">Converting arrays of buses to virtual buses is not supported. Specify a nonvirtual bus output for block ''{0}''.</entry>
    <entry key="ExpansionNotPermittedForAoB3">Input to block ''{0}'' is an array of bus signal. This {1} block's ''Output'' parameter is configured to produce a virtual bus, which is not supported with array of bus inputs.</entry>
    <entry key="NVToVConversionNotSupportAOB"><![CDATA[<sldiag objui="inport" objparam="{0,number,integer}" objname="{1}">Input port {0,number,integer}</sldiag> of block ''{1}'' contains an array of bus signal. This {2} block is configured to require a virtual bus. An array of bus signal is only supported in a non-virtual bus.]]></entry>
    <entry key="SlUpdateArraysOfBusesReason">Incompatible dimensions setting detected for root Inport or Outport block. A model created prior to R2010a cannot have root Inport or Outport blocks with non-scalar dimensions if a bus data type is specified for those blocks.</entry>
    <entry key="VCNVDoesNotSupportAOBWithDiscontiguousIndices">Block ''{0}'' does not support the array of buses, which has discontiguous indices, from block ''{1}''. At the output port of block ''{1}'', insert a signal conversion block that uses the default ''Output'' setting (''Signal Copy'').</entry>
    <entry key="StrictBusMigrationStub2">Open Upgrade Advisor</entry>
    <entry key="ExplicitBusSetupRequiredForSfcnOutput"><![CDATA[S-function block ''{0}'' has a bus data type ''{1}'' propagating out of <sldiag objui="outport" objparam="{2,number,integer}" objname="{0}">output port {2,number,integer}</sldiag>. For S-function blocks to operate with bus signals, bus data type information must be specified in the mdlInitializeSizes method using the ssSetBusOutputObjectName and ssSetBusOutputAsStruct macros.]]></entry>
    <entry key="BusCC_BusCheckFailedShort">The bus object ''{0}'' propagated to the input port of block ''{1}'' does not match the bus object ''{2}'' specified via the block dialog or propagated to other input ports of the block.</entry>
    <entry key="VariantReducerDoesNotSupportVCNV"><![CDATA[The Variant Reducer does not support a virtual bus that contains a nonvirtual bus. Insert a Signal Conversion block at the <sldiag objui="inport" objparam="{0, number, integer}" objname="{1}">input port {0, number, integer}</sldiag> of block ''{1}'' to convert the input to a virtual bus.]]></entry>
    <entry key="VariantReducerDoesNotSupportVCNVOutput"><![CDATA[The Variant Reducer does not support a virtual bus that contains a nonvirtual bus. Insert a Signal Conversion block at the <sldiag objui="outport" objparam="{0, number, integer}" objname="{1}">output port {0, number, integer}</sldiag> of block ''{1}'' to convert the output to a virtual bus.]]></entry>
    <entry key="BusRegisterShadowClassBasedBus">Bus object ''{0}'' has been registered using Simulink.Bus.register, and is not associated with MATLAB class ''{0}''. To use the class as a bus, deregister this bus object by using Simulink.Bus.deregister.</entry>
    <entry key="BusRegisterInvalidInputArgs">Invalid input arguments. Function Simulink.Bus.register expects these inputs: (1) a name, (2) a valid bus object, (3) an optional logical value to force the registration, and (4) a ''blockHandle'' or a ''docLink'' name-value pair.</entry>
    <entry key="BusDeRegisterInvalidInputArgs">Invalid input arguments. Function Simulink.Bus.deregister expects only one input that represents the name of the bus object to be deregistered.</entry>
    <entry key="BusRegisterCannotOverwrite">Bus object ''{0}'' already exists. To overwrite the bus object, set the ''forceRegister'' input argument to true.</entry>
    <entry key="DynamicBusNotResolvable"><![CDATA[Cannot create a valid dynamic bus type at <sldiag objui="outport" objparam="{0, number, integer}" objname="{1}">output port {0, number, integer}</sldiag> of the MATLAB System block  ''{1}''. To fix the issue, please check the getOutputDataTypeImpl method of the block's system object class.]]></entry>
    <entry key="DynamicBusCannotUseNonBusInputs">Cannot create a valid dynamic bus type at the output of the MATLAB System block ''{0}''. The information of an input scalar signal is not allowed to be used to create a dynamic bus. To fix the issue, please check the getOutputDataTypeImpl method of the block's system object class.</entry>
    <entry key="DynamicBusMustHaveNamesAtEachLevel">Cannot create a valid dynamic bus type at the output of the MATLAB System block ''{0}''. The Simulink.SignalDescriptor object used to describe a dynamic bus type must have a valid data type name specified at each level of the bus. To fix the issue, please check the getOutputDataTypeImpl method of the block's system object class.</entry>
    <entry key="DynamicBusTopLevelCannotContainDimensions">The dynamic bus type ''{0}'' created by the MATLAB System block ''{1}'' has its ''dimensions'' property specified. Please set its ''dimensions'' to the default value 1 and use the ''getOutputSizeImpl'' method to specify the dimensions of the output signal instead.</entry>
    <entry key="DynamicBusNameLengthCheck">MATLAB System block ''{0}'' creates bus type ''{1}'' with a name that has ''{2}'' characters. Name length must be less than 64 characters.</entry> 
    <entry key="RootIOPortCannotUseBusesFromBusDictionary">Specifying bus object ''{0}'' as the data type of a root Inport or Outport block (''{1}'') is not supported because the bus object is not in the base workspace or a data dictionary. To create the bus object in the base workspace or a data dictionary, use Simulink.Bus.createObject. </entry>
    <entry key="NdBusInDynamicArrayNotAllowed">Unable to preserve dimension of bus object ''{0}'' because it is used in an unbounded array in block ''{1}''. Clear the preserve dimension property of ''{0}'' or set signal dimension of ''{1}'' to a fixed value.</entry>
    <entry key="NdBusWithColumnMajorNotAllowed">The bus object ''{0}'' is set to preserve dimensions for the block diagram ''{1}'' whose array layout is Column-major. To preserve dimensions, set the array layout parameter to Row-major or clear the preserve dimension property of the bus object ''{0}''.</entry>
    <entry key="NdBusWithUnsupportedTarget">The bus object ''{0}'' is set to preserve dimensions for the block diagram ''{1}'' with unsupported code generation target. Preserving dimensions for bus objects is supported only for ERT target.</entry>
    <entry key="NdBusWithVarDimsNotAllowed">The bus object ''{0}'' used in the model ''{1}'' contains variable-sized elements and it is set to preserve element dimensions. Preserving dimensions for bus elements is not supported when the bus object has variable-sized elements.</entry>
  </message>
</rsccat>

<!-- LocalWords:  virtuality SLbus Hier nonvirtual Subref deregistered
-->
