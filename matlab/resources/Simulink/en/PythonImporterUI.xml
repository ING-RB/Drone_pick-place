<?xml version="1.0" encoding="UTF-8" ?>
<!-- Copyright 2022 The MathWorks, Inc. -->
<rsccat version="1.0" locale="en_US" product="Simulink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../../schema/msgcat.xsd">
  <message>
    <entry key="CustomCodeParsingFailed">Custom code parsing failed with the messages: {0}</entry>
    <!-- Dialog -->
    <entry key="Title">Python Importer</entry>
    <entry key="SaveDialogTitle">Save Code Importer Settings to File</entry>
    <entry key="ConfirmationDialogTitle">Simulink Code Importer</entry>
    <entry key="ConfirmationDialogMsg">Save import settings before closing?</entry>
    <entry key="ConfirmationDialogButtonYesLabel">Yes</entry>
    <entry key="ConfirmationDialogButtonNoLabel">No</entry>
    <entry key="ProjectDialogTitle">Specify Existing Project File</entry>
    <entry key="AddToProjectSuccessDlg">Add to Project</entry>
    <entry key="AddToProjectSuccessMsg">Successfully added to project</entry>
    <entry key="IncludesConfirmationDlgTitle">Auto-fill include files and packages</entry>
    <entry key="IncludesConfirmationDlgMsg">Proceeding further will replace previous values in ''{0}'' with auto-filled include files and packages. Would you like to continue?</entry>
    <entry key="ConfirmationDlgYesLabel">Yes</entry>
    <entry key="ConfirmationDlgNoLabel">No</entry>
    <entry key="ExternalsConfirmationDlgTitle">Auto-fill requirements</entry>
    <entry key="ExternalsConfirmationDlgMsg">Proceeding further will replace previous values in ''{0}'' with auto-filled requirements. Would you like to continue?</entry>

    <!-- Breadcrumbs -->
    <entry key="Topic_Welcome">Welcome</entry>
    <entry key="Topic_SimulinkLib">Settings</entry>
    <entry key="Topic_ConfigCode">Specify Custom Code</entry>
    <entry key="Topic_Analyze">Analyze</entry>
    <entry key="Topic_WhatToImport">Import</entry>
    <entry key="Topic_Options">Options</entry>
    <entry key="Topic_Finish">Create Simulink Library</entry>

    <!-- JavaScript -->
    <entry key="status">Status</entry>
    <entry key="QuestionHelpTitle">What to consider</entry>
    <entry key="OptionHelpTitle">About the selected option</entry>
    <entry key="back">Back</entry>
    <entry key="next">Next</entry>
    <entry key="save">Save</entry>
    <entry key="startNew">Start</entry>
    <entry key="loadButton">Load</entry>
    <entry key="finish">Finish</entry>
    <entry key="empty_selection">You have not selected any answer!</entry>
    <entry key="error">Error</entry>
    <entry key="needNumericValue">Please enter a numeric value.</entry>    
    <entry key="categoryTitle">Category</entry>
    <entry key="parameterTitle">Parameter</entry>
    <entry key="newValueTitle">New Value</entry>
    <entry key="oldValueTitle">Old Value</entry>
	<entry key="sbxupdate">Update Sandbox</entry>
    <entry key="addtoprjBtn">Add</entry>
    <entry key="addtoprjLabel">Add generated Simulink library files to project? </entry>
    <entry key="inferBtnToolTip">Auto-fill includes from specified files and packages</entry>
    <entry key="externalsBtnToolTip">Auto-fill requirements files or external libraries</entry>
    
    <!-- Question: Welcome -->
    <entry key="Question_Start"><![CDATA[
                        <center><b><u>Python Importer</u></b></center><br/><br/>
    <p>The Python Importer allows you to import custom code for modeling, verification, and validation.</p>
    <br/><br/>
    <p>The Python Importer:
    <ul>
    <li>Analyzes the custom code for functions, types and their dependencies.</li>
    <li>Imports custom code into a Simulink library containing callable functions and types.</li>
    </ul>
    </p>]]></entry>
    
    <entry key="Option_Start_New">Start a new import</entry>
    <entry key="Option_Start_Existing">Load a file saved from a previous import</entry>
    <entry key="Option_Start_SelectFile">Select file:</entry>
    <entry key="OptionHint_Start_SelectFile">Select a file saved from previous import.</entry>

    <!-- Question: ConfigCodeImporter -->
    <entry key="Option_ConfigCodeLibrary_ProjectName">Simulink library file name: </entry>
    <entry key="OptionHint_ConfigCodeLibrary_ProjectName">Specify a Simulink library file name. </entry>
    <entry key="Option_ConfigCodeLibrary_ProjectFolder">Output folder: </entry>
    <entry key="OptionHint_ConfigCodeLibrary_ProjectFolder">Specify an output folder that stores created library and other artifacts. </entry>
    <entry key="Option_ConfigCodeLibrary_LibraryBrowserName">Simulink library browser name: </entry>
    <entry key="OptionHint_ConfigCodeLibrary_LibraryBrowserName">Specify the name that shows up in Simulink Library Browser. </entry>
    <entry key="Option_OptionsCreateSLBlocks_Checkbox">Add generated library to Simulink Library Browser.</entry>
    <entry key="OptionHint_OptionsCreateSLBlocks_Checkbox">Select this to add generated library to Simulink Library Browser.</entry>
    <entry key="Question_ConfigCodeImporter"><![CDATA[ <b> Specify the output Simulink library file name and output folder:</b>
    ]]></entry>
    <entry key="QuestionHint_ConfigCodeImporter"><![CDATA[ Simulink library file name: This name will be used to name the Simulink library file and generated artifacts. <br/><br/>
    Output folder: The Simulink library and artifacts will be generated in this folder. <br/><br/>
    ]]></entry>
    
    <entry key="OutputFolderUnspecified">The output folder must be specified. </entry>
    
    <!-- Question: ConfigCodeLibrary -->
    <entry key="Question_ConfigCodeLibrary"><![CDATA[<b>Specify custom code information:</b>]]></entry>
    <entry key="QuestionHint_ConfigCodeLibrary"><![CDATA[<p>For custom code options, path must be full path or relative to the output folder.</p>]]> </entry>
    
    <entry key="Option_ConfigCodeLibrary_SourceFiles">Files to import:</entry>
    <entry key="OptionHint_ConfigCodeLibrary_SourceFiles">Specify source files to be imported.</entry>
    <entry key="Option_ConfigCodeLibrary_SourcePackages">Packages to import:</entry>
    <entry key="OptionHint_ConfigCodeLibrary_SourcePackages">Specify packages to be imported. Use __init__.py file to identify a package.</entry>
    <entry key="Option_ConfigCodeLibrary_PythonFolder">Python project:</entry>
    <entry key="OptionHint_ConfigCodeLibrary_PythonFolder">Specify python project to be imported in Blockset Designer. </entry>
    <entry key="Option_ConfigCodeLibrary_Includes">Include files or packages:</entry>
    <entry key="OptionHint_ConfigCodeLibrary_Includes">Specify dependent directories or files that need to be included with source files or packages.</entry>
    <entry key="Option_ConfigCodeLibrary_Externals">Requirements:</entry>
    <entry key="OptionHint_ConfigCodeLibrary_Externals">Specify requirement.txt file for your python package.</entry>

    <!-- Question: optional: ConfigUpdateMode -->
    <entry key="Question_ConfigUpdateMode"><![CDATA[<b>The specified output Simulink library already exists. You can update the existing library or overwrite it:</b>]]></entry>
    
    <entry key="Option_UpdateExisting">Update</entry>
    
    <entry key="Option_Overwrite">Overwrite</entry>
    
    <!-- Question: WhatToImportAnalyze -->
    <entry key="Question_WhatToImportAnalyze"><![CDATA[<p>Click <b>Next</b> to:</p>
    <ul>
    <li>Analyze the custom code for functions, input and output types and annotations.</li></ul>]]></entry>
	
    <!-- Question: WhatToImportFunction -->
    <entry key="Question_WhatToImportFunction"><![CDATA[<b>Select the functions to import into the Simulink library:</b>]]></entry>
    <entry key="QuestionHint_WhatToImportFunction"><![CDATA[<p>A System object and a System block will be generated for each selected function.</p>
    <p>Select at least one function to import.</p>]]></entry>
    <entry key="Option_WhatToImportFunction_EntryFunctions">Only show entry-point functions</entry>
    <!--<entry key="OptionHint_WhatToImportFunction_EntryFunctions">Select this checkbox to view entry functions only.</entry>-->
    <entry key="OptionHint_WhatToImportFunction_FunctionNameFilter">Find functions by name</entry>

    <!-- Question: PortSpecificationsMapping -->
    <entry key="Question_PortSpecificationsMapping"><![CDATA[<b>Edit the block port specifications for the previously selected functions.</b>]]></entry>
    <entry key="QuestionHint_PortSpecificationsMapping"><![CDATA[<p>System blocks will be generated with default port specifications unless you specify otherwise.</p><p> The block port specifications can also be edited in the generated System object.</p>]]></entry>
    
    <!-- Question: WhatToImportType -->
    <entry key="Question_WhatToImportType"><![CDATA[<b>Select types to import into the output Simulink library:</b>]]></entry>
    <entry key="QuestionHint_WhatToImportType"><![CDATA[ <p> Types required by the previously selected functions are automatically selected.</p>
    <p>All selected types will be imported into a Simulink data dictionary that will be linked to the output Simulink library.</p>]]></entry>
    <entry key="Option_WhatToImportType_ImportToFile">Import types to file</entry>
    <entry key="OptionHint_WhatToImportType_ImportToFile">Select this option to import struct types into ''project_name_types.mat'' file and import enum types into MATLAB class files.</entry>
    <entry key="OptionHint_WhatToImportType_TypeNameFilter">Find types by name</entry>
    
    <!-- Question: OptionsGlobalIO -->
    <entry key="Question_OptionsGlobalIO"><![CDATA[<b>Global variables have been detected in custom code:</b>]]></entry>
    <entry key="QuestionHint_OptionsGlobalIO"><![CDATA[Functions may read and write global variables. If enabled, the global variables accessed by the function will be treated as the function's interface in the output Simulink library. For more information, see  <a href="matlab:helpview('simulink', 'Tag_ConfigSet_Sim_CustomCodeGlobalsAsFunctionIO')">{0}</a>.]]></entry>
    <entry key="Option_OptionsGlobalIO_Checkbox">Enable global variables as function interface</entry>
    <entry key="OptionHint_OptionsGlobalIO_Checkbox">Unselect this when you are sure your functions don't access global variables as function interface.</entry>

    <!-- Question: optional: CreateTestHarness -->
    <entry key="Question_CreateTestHarness"> <![CDATA[<b> Create test harness:</b>]]></entry>
    <entry key="Option_CreateTestHarness_Auto">Automatically create test harness for all imported functions</entry>
    <entry key="Option_CreateTestHarness_Skip">Skip</entry>
        
    <!-- Question: Finish -->
    <entry key="Question_Finish">Specification of the generated library:</entry>
    <!-- Question: NextStep -->
    <entry key="Question_NextStep"><![CDATA[<center><b><u>Code Import Successful</u></b></center><br/><br/>
    <p>A Simulink library has been generated in the output folder.</p><p><b>Next steps:</b></p>{0}]]></entry>
    <entry key="OutputFolderCDHyperlink">Change the MATLAB current folder to the output folder.</entry>
    <entry key="OpenLibraryHyperlink">Open generated Simulink library</entry>
    <entry key="Option_ConfigProject_AddToProject"></entry>
    <entry key="OptionHint_ConfigProject_AddToProject">Specify existing project file</entry>   
    
  </message>
</rsccat>

<!-- LocalWords: -->
