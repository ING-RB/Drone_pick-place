<?xml version="1.0" encoding="UTF-8" ?>
<!-- Copyright 2018-2025 The MathWorks, Inc. -->
<rsccat version="1.0" locale="en_US" product="Simulink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../../../../matlab/resources/schema/msgcat.xsd">
    <message>
        <entry key="InvalidVCDOName">Invalid parameter value ''{0}''. 'VariantConfigurationObject' value for model ''{1}'' must be a valid MATLAB identifier.</entry>
        <entry key="InvalidArgumentLogicalExpected">Input argument to enableVMgrCompileMode function must be a logical value.</entry>
        <entry key="BlockTypeFilterLabel">View Blocks</entry>
        <entry key="SearchFilterLabel">Search Blocks</entry>
        <entry key="SelectConfigLabel">Select Configurations</entry>
        <entry key="ShowBlocksLabel">Show Blocks Activeness</entry>
        <entry key="Title">Variant Analyzer</entry>
        <entry key="ReAnalyze">Rerun the analysis on the model.</entry>
        <entry key="ModelNotLoaded">Model ''{0}'' is not loaded.</entry>
        <entry key="ConfigNotPresent">Specified variant configuration ''{0}'' is not present in the variant configuration data object.</entry>
        <entry key="ConfigNotPresentForBD">Specified variant configuration ''{0}'' is not present in the variant configuration data object associated with ''{1}''.</entry>
        <entry key="ConfigNotAnalyzed">Specified variant configuration ''{0}'' is not analyzed.</entry>
        <entry key="ConfigNotSpec">Variant configurations are not specified for analysis. Specify 'NamedConfigurations' property for providing variant configurations to analyze.</entry>
        <entry key="InvalidBlockHandle">Block handle is invalid.</entry>
        <entry key="SearchPlaceHolder">Search Block</entry>
        <entry key="OpenAndHighlightBlock">Open and Highlight Block</entry>
        <entry key="VariantType">Variant</entry>
        <entry key="HierarchicalType">Hierarchical</entry>
        <entry key="AllBlockType">All Blocks</entry>
        <entry key="AnalyzeTypeAll">All</entry>
        <entry key="AnalyzeTypeAlwaysActive">Always Active</entry>
        <entry key="AnalyzeTypeDiff">Partially Active</entry>
        <entry key="AnalyzeTypeNeverActive">Never Active</entry>
        <entry key="ModelHierarchy">Model Hierarchy</entry>
        <entry key="VariantCondition">Variant Condition</entry>
        <entry key="DiffType">Activeness</entry>
        <entry key="RefreshAnalysis">Model and/or variant configurations have changed and analysis is out of date. Relaunch the analysis to get updated information.</entry>
        <entry key="DifferencesTooltip">Block differs in activeness in analyzed configurations</entry>
        <entry key="AlwaysActiveTooltip">Block is active in all analyzed configurations</entry>
        <entry key="NeverActiveTooltip">Block is inactive in all analyzed configurations</entry>
        <entry key="ConditionLegendButtonText">Show Condition</entry>
        <entry key="CondTableAnnotHeader">Annotation</entry>
        <entry key="CondTableCondHeader">Condition</entry>
        <entry key="CondTableDialogHeader">Variant Condition Legend</entry>
        <entry key="ExpandAll">Expand All</entry>
        <entry key="CollapseAll">Collapse All</entry>
        <entry key="AnnotationPanelHeader">Annotation</entry>
        <entry key="BlockTabHeader">Block Hierarchy</entry>
        <entry key="FilterTabHeader">VARIANT ANALYSIS</entry>
        <entry key="SearchSection">SEARCH</entry>
        <entry key="BlockSection">BLOCK</entry>
        <entry key="LegendSection">LEGEND</entry>
        <entry key="FilterSection">FILTER</entry>
        <entry key="HelpSection">HELP</entry>
        <entry key="HelpButtonLabel">Help</entry>
        <entry key="VariantCondOnInactiveModelRefBlock">Block ''{0}'' is part of an inactive model reference hierarchy. Inactive model reference ''{1}'' does not participate in variant condition propagation. The variant condition is unset in this case.</entry>
        <entry key="NoVariantManager">Variant Manager for model ''{0}'' is not allowed because it is a ''{1}'' block diagram.</entry>
        <entry key="InconsistentSlexprDefinitions">Variant control variable ''{0}'' has inconsistent definitions across configurations. The definitions must be consistent when analyzing for multiple configurations.</entry>
        <entry key="InconsistentVCtrlVAT">Unable to analyze multiple configurations because variant control variable ''{0}'' has different 'Variant activation time' specified across configurations.</entry>
        <entry key="InvalidStructInputSpec">''{0}'' appears both as a variable name and as a structure name in ''{1}'' which is an incorrect specification for control variables.</entry>
        <entry key="ConflictingConfigCtrlVars">Invalid specification of control variables in configuration ''{0}'' for block diagram ''{1}''. These control variables must have consistent values across different sources:{2}</entry>
        <entry key="StateColumnHeader">Activeness</entry>
        <entry key="MultipleConfigSpecified">Cannot specify multiple configurations at the same time.</entry>
        <entry key="InvalidGroupSyntax">'VariableGroups' value is invalid.</entry>
        <entry key="InvalidGroupStruct">'VariableGroups' value must be a struct with 'Name' and 'VariantControls' fields.</entry>
        <entry key="InvalidMaskParamValue">Invalid value ''{0}'' specified for mask parameter ''{1}'' of block ''{2}''.</entry>
        <entry key="InvalidMaskParamName">Block ''{0}'' does not have a mask parameter ''{1}''.</entry>
        <entry key="InvalidAsVarIsMaskInit">Block ''{0}'' defines ''{1}'' in its mask initialization code.</entry>
        <entry key="BlockNotMasked">Block ''{0}'' is not a masked block.</entry>
        <entry key="ParamTypeNotSupported">Mask parameter ''{0}'' is not supported because it is of type ''{1}''.</entry>
        <entry key="InvalidControlVariablesStruct">'ControlVariables' must be supplied an array of structs with 'Name', 'Value', and 'Source' fields.</entry>
        <entry key="IgnoredReadOnlyFieldInControlVariablesStruct">'ReadOnly' field specified in structure array 'ControlVariables' was not used because the field is read-only and indicates if the variable is associated with the configuration of a referenced component.</entry>
        <entry key="InvalidGroup">Variable group ''{0}'' is invalid.</entry>
        <entry key="InvalidGroupName">Group name ''{0}'' is not a valid MATLAB variable name.</entry>
        <entry key="InvalidGroupNameValue">Incorrect number of variant control variable name-value pairs.</entry>
        <entry key="InvalidCtrlVarName">Variant control variable ''{0}'' name is invalid.</entry>
        <entry key="InvalidCtrlVarValue">Variant control variable ''{0}'' value is invalid. Value must be numeric and finite.</entry>
        <entry key="InvalidCtrlVarSource">Invalid source ''{0}'' specified for the variant control variable.</entry>
        <entry key="ControlVariablesMustBeUnique">Control variables of a configuration must have unique names. Control variable ''{0}'' already exists or is added more than once.</entry>
        <entry key="ControlVariableIsReadOnly">Unable to edit control variable ''{0}'' in the variant configuration because the variable is also used by referenced component(s): ''{1}'' </entry>
        <entry key="ComponentNotAssociatedWithConfiguration">Component ''{0}'' is not associated with configuration ''{1}''.</entry>
        <entry key="IncompleteGroup">Variable group ''{0}'' has incomplete list of variant control variables.</entry>
        <entry key="DefaultConfigOverridesControlVars">The following control variable(s) are overwritten by default configuration ''{0}'' in ''{1}'' of model ''{2}'':\n{3}</entry>
        <entry key="VariantManagerUnexportedChanges">Model ''{0}'' has Variant Manager open with unapplied changes. Apply the changes in Variant Manager to update the variant configuration object in the workspace.</entry>
        <entry key="VariantManagerV2ErrorWhileLaunching">Error occurred while launching Variant Manager for model ''{0}''.</entry>
        <entry key="StartupVariantNotSupported">{0} does not support 'startup' value for 'Variant activation time' in the variant block ''{1}''.</entry>

        <entry key="MATLABTimeStampEng" translate="false" note="TranslateFalseBatch;">% -------------------------------------------------------------------\n%  Generated by MATLAB on {0}\n%  MATLAB version: {1}\n% -------------------------------------------------------------------\n\n</entry>
        <entry key="SaveVCDOFileNameisVCDOName">The output MATLAB script name ''{0}'' is same as the variant configuration object name ''{0}''. Select a different MATLAB script name to save the variant configuration object.</entry>
        <entry key="SaveVCDOTmpDirFailure">Unable to write to folder ''{0}''.</entry>
        <entry key="SaveVCDOParamNameisVCDOName">Control variable ''{0}'' of type ''{1}'' in configuration ''{2}'' has the same name as the Variant Configuration Object. Generating MATLAB script for Variant Configuration Object ''{3}'' is not supported in this scenario. Consider renaming the control variable ''{0}''.</entry>
        <entry key="SaveVCDOUnableToValidateCorrectness">Unable to validate correctness of generated MATLAB script.</entry>

        <entry key="UpdateModelFailed">Unable to obtain compiled information because model ''{0}'' failed to update.</entry>
        <entry key="BlockUsesModelWksVarsOutsideConfig">Block ''{0}'' uses a variant control variable ''{1}'' defined in the model workspace of model ''{2}''. Add ''{1}'' to the configuration and then activate the configuration.</entry>
        <entry key="ParamUsesModelWksVarsOutsideConfig">Parameter ''{0}'' uses a variant control variable ''{1}'' which must be defined in the model workspace of model ''{2}''. Add ''{1}'' to the configuration and then activate the configuration.</entry>
        <entry key="BlockUsesModelArgumentWksVars">Activating block ''{0}'' using variant control variable ''{1}'' is not supported because the variable is specified as a model argument in the model workspace of model ''{2}''.</entry>
        <entry key="ParamUsesModelArgumentWksVars">Activating parameter ''{0}'' using variant control variable ''{1}'' is not supported because the variable is specified as a model argument in the model workspace of model ''{2}''.</entry>
        <entry key="BlockUsesMaskWksVarsOutsideConfig">Block ''{0}'' uses a variant control variable ''{1}'' defined in the mask workspace of block ''{2}''. Add ''{1}'' to the configuration and then activate the configuration.</entry>
        <entry key="BlockUsesMaskInitWksVarsMismatchConfig">Block ''{0}'' uses a variant control variable ''{1}'' defined in the mask initialization code of block ''{2}'', but the value of ''{1}'' in the variant configuration({3}) and the mask initialization code({4}) differs.\nTo activate block ''{0}'', update the value of ''{1}'' in the configuration to match the value specified in the mask initialization code.</entry>
        <entry key="BlockUsesMaskWksParamVarsMismatchConfig">Block ''{0}'' uses a variant control variable ''{1}'' defined as a mask parameter in block ''{2}'', but the value of ''{1}'' in the variant configuration({3}) and the mask parameter({4}) differs.\nOne possible cause of this issue is when ''{1}'' is defined as part of the InitFcn callback or mask initialization code.\nTo activate block ''{0}'', update the value of ''{1}'' in the configuration so that the values are consistent.</entry>
        <entry key="BlockUsesMismatchInitFcnVars">Block ''{0}'' uses a variant control variable ''{1}'' whose value changes during the compilation of model ''{2}'', and differs from the value in the variant configuration({3}).
        One possible cause of this issue is when ''{1}'' is defined as part of the InitFcn callback of ''{2}''. To activate block ''{0}'', update the value of ''{1}'' in the configuration to match the value specified in the InitFcn callback({4}).</entry>
        <entry key="ParamUsesMismatchInitFcnVars">Parameter ''{0}'' uses a variant control variable ''{1}'' whose value changes during the compilation of model ''{2}'', and differs from the value in the variant configuration({3}).
        One possible cause of this issue is when ''{1}'' is defined as part of the InitFcn callback of ''{2}''. To activate variant parameter ''{0}'', update the value of ''{1}'' in the configuration to match the value specified in the InitFcn callback({4}).</entry>

        <entry key="ControlVarApplyFailed">Failed to apply value for control variable ''{0}''.</entry>

        <!-- VCD Migration -->
        <entry key="VCDMigrateSubModelMissing">Unable to load variant control variables present in variant configuration ''{0}'' for model ''{1}''.</entry>
        <entry key="VCDMigrateSubModelConflict">Conflicting Submodel configurations ''{0}'', ''{1}'' specified in model hierarchy for model ''{2}''. ''{0}'' is retained for configuration ''{3}''.</entry>
        <entry key="ModelVCDNameIsEmpty">Model ''{0}'' is not associated with a variant configuration data object.</entry>
        <entry key="AnalyzeLibOrSubsysNotSupported">Unable to analyze model ''{0}'' because it is a library or a subsystem.</entry>
        <entry key="ActivationWhileRunningSimulationNotSupported">Activating model ''{0}'' during simulation is not supported.</entry>
        <entry key="ReducingWhileRunningSimulationNotSupported">Reducing model ''{0}'' during simulation is not supported.</entry>
        <entry key="AnalyzingWhileRunningSimulationNotSupported">Analyzing model ''{0}'' during simulation is not supported.</entry>
        <entry key="ReducingWhileCompiledNotSupported">Reducing model ''{0}'' when it is being compiled is not supported.</entry>
        <entry key="AnalyzingWhileCompiledNotSupported">Analyzing model ''{0}'' when it is being compiled is not supported.</entry>
        <entry key="InvalidBlockHandlesInAnalysis">Invalid block handles found when analyzing model. Please save the model before running analysis.</entry>
        <entry key="NoActivationBlockDiagram">Activation of block diagram ''{0}'' is not supported because it is of type ''{1}''.</entry>
        <entry key="HasOpenVMsCompileModeFeat">Unable to enable or disable update diagram functionality in Variant Manager because one or more Variant Manager windows are open. Close all open Variant Manager windows to proceed.</entry>
        <entry key="AutoGenConfigSlexprNotSupported">Simulink.VariantControl object ''{0}'' with value set to a Simulink.Parameter object that uses a mathematical expression is not supported when generating configurations.</entry>
        <entry key="ActivationFailed">Activation of block diagram ''{0}'' failed.</entry>
        <entry key="AutoGenConfigOperatorNotSupported">The Variant control expression ''{0}'' of block ''{1}'' contains operators ''{2}'' that are not supported while generating variant configurations.</entry>
        <entry key="AutoGenConfigParamOperatorNotSupported">Variant condition ''{0}'' of variant parameter ''{1}'' contains operators ''{2}'' that are not supported when generating variant configurations.</entry>
        <entry key="AutoGenConfigElementNotSupported">The Variant control expression ''{0}'' of block ''{1}'' contains ''{2}'' elements that are not supported while generating variant configurations.</entry>
        <entry key="AutoGenConfigParamElementNotSupported">Variant condition ''{0}'' of variant parameter ''{1}'' contains ''{2}'' elements that are not supported when generating variant configurations.</entry>
        <entry key="AutoGenConfigDoubleValueNotSupported">Invalid data type. The Variant control expression ''{0}'' in block ''{1}'' contains noninteger double values ''{2}'' that are not supported while generating variant configurations.</entry>
        <entry key="AutoGenConfigParamDoubleValueNotSupported">Invalid data type. The Variant condition ''{0}'' in variant parameter ''{1}'' contains noninteger double values ''{2}'' that are not supported when generating variant configurations.</entry>
        <entry key="AutoGenConfigEnumDoubleValueNotSupported">Invalid data type. The enumeration ''{0}'' contains noninteger double value ''{1}'' which is not supported while generating variant configurations.</entry>
        <entry key="AutoGenConfigStructVarsNotSupported">Structure members in Variant control expression ''{0}'' of block ''{1}'' are not supported while generating variant configurations.</entry>
        <entry key="ConvertDefaultToPreferredInvalidInputSyntax">Incorrect number of input arguments. Input to the convertDefaultToPreferred method must either be empty or a model name followed by optional name-value arguments.</entry>
        <entry key="ConvertDefaultToPreferredInvalidOutputSyntax">Incorrect number of output arguments. The convertDefaultToPreferred method does not return anything.</entry>
        <entry key="ConvertDefaultToPreferredInvalidProperty">Unrecognized parameter name ''{0}''. See Simulink.VariantConfigurationData.convertDefaultToPreferred documentation for valid parameter names.</entry>
        <entry key="ConvertDefaultToPreferredInvalidPropertyValue">''{0}'' value must be a logical scalar.</entry>
        <entry key="ActivateModelInvalidInputSyntax">Incorrect number of input arguments. Input to Simulink.VariantManager.activateModel method must be a model name followed by optional name-value arguments.</entry>
        <entry key="ApplyConfigInvalidInputSyntax">Incorrect number of input arguments. Input to Simulink.VariantManager.applyConfiguration method must be a model name followed by optional name-value arguments.</entry>
        <entry key="UpdateModelInvalidInputSyntax">Incorrect number of input arguments. Input to Simulink.VariantManager.updateModel method must be a model name followed by optional name-value arguments.</entry>
        <entry key="ActivateModelInvalidOutputSyntax">Incorrect number of output arguments. Simulink.VariantManager.activateModel method does not return anything.</entry>
        <entry key="ApplyConfigInvalidOutputSyntax">Incorrect number of output arguments. Simulink.VariantManager.applyConfiguration method does not return anything.</entry>
        <entry key="UpdateModelInvalidOutputSyntax">Incorrect number of output arguments. Simulink.VariantManager.updateModel method does not return anything.</entry>
        <entry key="ValidateConstraintInvalidInputSyntax">Incorrect number of input arguments. Input to Simulink.VariantManager.validateConstraint method must be a model name followed by 'Constraint' or 'Condition' name-value arguments.</entry>
        <entry key="ValidateConstraintInvalidOutputSyntax">Incorrect number of output arguments. Simulink.VariantManager.validateConstraint method does not return anything.</entry>
        <entry key="GetEvaluableConstraintInvalidInputSyntax">Incorrect number of input arguments. Input to Simulink.VariantManager.getEvaluableConstraint method must be a model name followed by 'Constraint' or 'Condition' name-value arguments.</entry>
        <entry key="GetEvaluableConstraintInvalidOutputSyntax">Incorrect number of output arguments. Simulink.VariantManager.getEvaluableConstraint method returns only a constraint condition that can be evaluated.</entry>
        <entry key="FailedGetEvaluableConstraint">Failed to convert constraint ''{0}'' to an evaluable constraint.</entry>
        <entry key="FailedGetEvaluableSubExpression">Failed to evaluate ''{0}'' in ''{1}''.</entry>
        <entry key="InvalidGetCompNameSyntax">Incorrect number of input arguments. Input to Simulink.VariantConfigurationData.getComponentConfigurationName must specify ConfigurationName and ComponentName as name-value arguments.</entry>
        <entry key="InvalidAddCompConfigSyntax">Incorrect number of input arguments. Input to Simulink.VariantConfigurationData.addComponentConfiguration must specify ConfigurationName, ComponentName and ComponentConfigurationName as name-value arguments.</entry>
        <entry key="InvalidRemoveCompConfigSyntax">Incorrect number of input arguments. Input to Simulink.VariantConfigurationData.removeComponentConfiguration must specify ConfigurationName and ComponentName as name-value arguments.</entry>
        <entry key="CompConfigExists">Configuration ''{0}'' has an existing component configuration ''{1}'' for ''{2}''. Use removeComponentConfiguration() to first disassociate the existing component configuration.</entry>
        <entry key="AddCompConfigCtrlVarConflict">Unable to add configuration ''{0}'' of component ''{1}'' to top configuration ''{2}'' because there is a difference in the value of control variable ''{3}''. Configuration ''{4}'' of component ''{5}'' already defines the value of ''{3}''.</entry>
        <entry key="AddCompConfigDataNotFound">Unable to find variant configuration data ''{0}'' for model ''{1}''.</entry>
        <entry key="ComponentConfigurationsRestoreFailed">Unable to restore 'Component Configurations' property while loading configurations in the VariantConfigurationData object.</entry>
        <entry key="NonStringPropertyName">Parameter name must be a character vector or a string.</entry>
        <entry key="NonStringPropertyValue">''{0}'' value must be a character vector or a string.</entry>
        <entry key="VCDONameCtrlVarNameConflict">Invalid name ''{0}'' specified for variant configuration object. Specifying the same name for the object and any of the control variables is not supported.</entry>
        <entry key="EmptyConfigurationName">Name of variant configuration must be non-empty.</entry>
        <entry key="EmptyConstraintName">Name of variant constraint must be non-empty.</entry>
        <entry key="EmptyConstraintCondition">Variant constraint condition expression must be non-empty.</entry>
        <entry key="DuplicateProperty">Parameter ''{0}'' has already been specified.</entry>
        <entry key="ConstraintNotFoundInVCDOForModel">No variant constraint ''{0}'' found in variant configuration object ''{1}'' that is associated with ''{2}''.</entry>
        <entry key="AutoGenConfigUDActiveChoice">Only the active variant choice is considered for the following blocks with 'Variant activation time' set to 'update diagram'.\n {0}</entry>
        <entry key="AutoGenConfigLabelModeActiveChoice">Only the active variant choice is considered for the following blocks with 'Variant control mode' set to 'label'.\n {0}</entry>
        <entry key="AutoGenConfigSimCodegenActiveChoice">Only the simulation choice is considered for the following blocks with 'Variant control mode' set to 'sim codegen switching'.\n {0}</entry>
        <entry key="AutoGenConfigCodegenHierActiveChoice">Only the active variant choice is considered for the following blocks as they are under the code generation choice hierarchy.\n {0}</entry>
        <entry key="AutoGenConfigInvalidPredicate">Invalid precondition ''{0}''. Value must be a valid Boolean expression.</entry>
        <entry key="AutoGenConfigInvalidModel">Generation of variant configurations not supported for model ''{0}'' because it is a library or a subsystem.</entry>
        <entry key="AutoGenConfigActivateConfig">Activating the model for the current state of the model.</entry>
        <entry key="AutoGenConfigUpdateDiagram">An update diagram operation is required to generate variant configurations.\nPerforming update diagram for the model.</entry>
        <entry key="AutoGenConfigNoControlVariablesFound">Model does not contain any variant control variables. \nNo variant configurations can be generated.</entry>
        <entry key="AutoGenConfigVariableNotInFindVarControlVarsData">Unable to find variant control variable ''{0}'' used by block ''{1}'' in the output of Simulink.VariantManager.findVariantControlVars method for the model.</entry>
        <entry key="AutoGenConfigPossibleCombinations">Evaluating {0} potential combinations to generate...</entry>
        <entry key="AutoGenConfigWrongEnumTypeInExpr">Variant control variable ''{2}'' is defined as an enumeration of type ''{3}'' but is used with a value of different type in Variant control expression ''{0}'' of block ''{1}''.</entry>
        <entry key="AutoGenConfigInvalidValue">Invalid value ''{0}'' for variable ''{1}'' in 'Configure control variables' pane.</entry>
        <entry key="AutoGenConfigMultiSrc">Multiple sources found for these variables in the Configure Control Variables pane: ''{0}''.</entry>
        <entry key="AutoGenConfigBlockMissing">Unable to find block ''{0}''. This may be caused by a model or block callback that modified the model contents.</entry>
        <entry key="AutoGenConfigVariantParameters">The model has Simulink.VariantVariable(s) ''{0}'' which are not supported for generating configurations. Generated configurations will not have variations for variant parameters.</entry>
        <entry key="AutoGenConfigIgnoreConfigNotExist">Configuration Data Object ''{0}'' that must be excluded when generating configurations does not exist in the global workspace or is not an object of type Simulink.VariantConfigurationData.</entry>
        <entry key="SubModelConfigsRemoved">The ''SubModelConfigurations'' property is deprecated and will be removed in a future release.
        \nSolution: Instead, use the ''addComponentConfigurations()'' function to compose variant configurations for the top-level model using referenced components in the model hierarchy.
        \n
        \nExisting control variables in the referenced model configuration will be migrated to the top-level model configuration when you either:
        \n  &#8226; Launch the Simulink.VariantConfigurationData object dialog box by double-clicking the object in the workspace or the Model Explorer.
        \n    or
        \n  &#8226; Launch the Variant Manager user interface.
        \n
        \nSave the variant configuration object after launching the user interface to fix this warning.</entry>
        <entry key="VCDOHasDefaultConfig">Variant configuration object ''{0}'' has DefaultConfiguration set to ''{1}''.</entry>
        <entry key="CtrlVarNotUsedByTopModelMessage">Control variable definitions present either in the named variant configurations or the workspace configuration of the top model do not match with any of the existing variant configurations for the referenced model ''{0}''.</entry>
        <entry key="DefaultConfigurationRemoved">''DefaultConfigurationName'' property will be removed from the Simulink.VariantConfigurationData class. Use 'PreferredConfiguration' property instead.</entry>
        <entry key="ConvertDefaultToPreferredFixitForModel"><![CDATA[Use the {1}.convertDefaultToPreferred({0}, ...) API to convert the default variant configuration ''{2}'' to the preferred variant configuration,
        \nand update PostLoadFcn and/or InitFcn callbacks of ''{0}'' if necessary.
        \nSee <a href="matlab:eval('help Simulink.VariantConfigurationData.convertDefaultToPreferred')">help Simulink.VariantConfigurationData.convertDefaultToPreferred</a>]]></entry>
        <entry key="ConvertDefaultToPreferredFixit"><![CDATA[Use the convertDefaultToPreferred() API to convert the default variant configuration ''{0}'' to the preferred variant configuration,
        \nand update PostLoadFcn and/or InitFcn callbacks of models if necessary.
        \nSee <a href="matlab:eval('help Simulink.VariantConfigurationData.convertDefaultToPreferred')">help Simulink.VariantConfigurationData.convertDefaultToPreferred</a>]]></entry>
        <entry key="LegacyCodeInvoked">Internal Error: Unexpected Variant Manager call</entry>
        <entry key="NeedVariantManagerSPKG">To use {0}, &lt;a href="matlab:matlab.internal.addons.showAddon(''SLVMGR'')&quot;&gt;install Variant Manager for Simulink&lt;/a&gt; support package.\n</entry>
        <entry key="ModelNeedsVariantManagerSPKG">Model ''{0}'' uses variant configuration object ''{1}'' which needs Variant Manager for Simulink support package. &lt;a href="matlab:matlab.internal.addons.showAddon(''SLVMGR'')&quot;&gt;Install Variant Manager for Simulink&lt;/a&gt; support package and then reload the model and its variant configuration object ''{1}''.</entry>
        <entry key="InstallVariantManagerSPKGTitle">Install Variant Manager for Simulink</entry>
        <entry key="InstallVariantManagerSPKGText">Variant Manager for Simulink is now available as a support package. To install, click Add.</entry>
        <entry key="SimplifyConstraintFailed">Unable to simplify constraint condition ''{0}''</entry>
        <entry key="MATLABOnlineNotSupportedTitle">Variant Manager for Simulink Not Supported</entry>
        <entry key="MATLABOnlineNotSupported">{0} is not supported for MATLAB Online. To use this capability, use an installed version of MATLAB on your computer.</entry>
        <entry key="ComponentNameForDiagnosticsMessage">Variant Manager</entry>
        <entry key="AutoGenConfigCategoryForDiagnosticsMessage">Generate Configurations</entry>
        <entry key="AutoGenConfigLogMsg">Current folder contains snapshot generated from the model ''{0}''</entry>
        <entry key="AutoGenConfigLogCautionMsg">The contents of this folder can change. DO NOT PLACE any content in this folder</entry>
        <entry key="AutoGenConfigLogGenCmdMsg">Generated variant configurations by executing:</entry>
        <entry key="AutoGenConfigLogSuccessMsg">Successfully generated variant configurations. Output is saved at ''{0}''</entry>
        <entry key="AutoGenConfigLogFailureMsg">Failed to generate variant configurations</entry>
        <entry key="AutoGenConfigSnapshotLogMsg">Created snapshot of the model at ''{0}''.</entry>
        <entry key="AutoGenConfigModelDirNotWritable">Unable to write to folder ''{0}''.</entry>
        <entry key="AutoGenConfigSnapshotFailed">Failed to create snapshot of the model while generating configurations.</entry>
        <entry key="AutoGenConfigUnsupportedEnum">To generate configurations, the enumeration class ''{0}'' must derive from a numeric type.</entry>
        <entry key="ExternalDataSourcesNotSupported">Variant Manager for Simulink does not support model with external data sources. </entry>
        <entry key="AnalyzerDoesNotSupportMaskModelWks">Analyzing the model ''{0}'' is not supported because it contains variant blocks that use variant control variables defined in the mask or model workspace.\nBelow list shows the usage of control variables in the format &lt;block path (control variable name | mask or model workspace path)&gt;: {1}</entry>
        <entry key="ReducerDoesNotSupportMaskModelWksBlocks">Reducing the model ''{0}'' is not supported because it contains variant blocks that use variant control variables defined in the mask or model workspace.\nBelow list shows the usage of control variables in the format &lt;block path (control variable name | mask or model workspace path)&gt;: {1}</entry>
        <entry key="ReducerDoesNotSupportMaskModelWksParams">Reducing the model ''{0}'' is not supported because it contains variant parameters that use variant control variables defined in the model workspace.\nBelow list shows the usage of control variables in the format &lt;parameter name (control variable name | model workspace path)&gt;: {1}</entry>
        <entry key="AutoGenConfigDoesNotSupportMaskModelWksVarBlks">Generation of variant configurations for the model ''{0}'' is not supported because it contains variant blocks that use variant control variables defined in the mask or model workspace.\nBelow list shows the usage of control variables in the format &lt;block path (control variable name | mask or model workspace path)&gt;: {1}</entry>
        <entry key="AutoGenConfigDoesNotSupportMaskModelWksVarPrms">Generation of variant configurations for the model ''{0}'' is not supported because it contains variant parameters that use variant control variables defined in the model workspace.\nBelow list shows the usage of control variables in the format &lt;parameter name (control variable name | model workspace path)&gt;: {1}</entry>

        <!-- SimulationInput Plugin -->
        <entry key="SimInputMultipleCtrlVarDefinition">These control variables in the variant configuration ''{0}'' are also defined as variables or block parameters in the SimulationInput object.\n{1}\nTo use the variant configuration ''{0}'', remove these variables and block parameters from the SimulationInput object.</entry>
        <entry key="OnlyHarnessVCDNameIsEmpty"><![CDATA[
        Main model ''{1}'' uses variant configuration data object ''{2}'', but the test harness ''{0}'' is not associated with a variant configuration data object.
        <actions exclusiveFixIts="yes">
        <action type="fixit">
        <cmd>slvariants.internal.manager.core.attachMainModelVCDObjWithHarness(''{1}'', ''{0}'', true)</cmd>
        <txt>Create a copy of ''{2}'' and associate it with ''{0}''.</txt>
        </action>
        <action type="fixit">
        <cmd>slvariants.internal.manager.core.attachMainModelVCDObjWithHarness(''{1}'', ''{0}'', false)</cmd>
        <txt>Associate ''{2}'' with ''{0}''.</txt>
        </action>
        <action type="suggestion">
        <txt>Create a new variant configuration data object to use with ''{0}''.</txt>
        </action>
        </actions>
        ]]>
        </entry>
        <entry key="HarnessAndMainModelVCDNameIsEmpty">Test harness ''{0}'' is not associated with a variant configuration data object.</entry>
        <entry key="SimInputUnableToUseVCDObj">Unable to use variant configuration ''{0}'' with model ''{1}''.</entry>
        <entry key="AssociatedCopyOfModelVCDObjWithHarness">Created ''{0}'' in  {1} and associated with ''{2}''.</entry>
        <entry key="AssociatedModelVCDObjWithHarness">Associated ''{0}'' with ''{1}''.</entry>
        <entry key="VariantConfigInSimInFeatureName">''{0}'' property with {1}</entry>
        <entry key="SimInpSettingVCObjMdlPrmAndVCPropDisallowed">Specifying both the ''VariantConfigurationObject'' model parameter and the ''VariantConfiguration'' property in a Simulink.SimulationInput object is not supported.\nTo use the ''VariantConfiguration'' property, remove the ''VariantConfigurationObject'' model parameter from the Simulink.SimulationInput object.</entry>
        <entry key="MultiSimUIValueText"><![CDATA[{1} (<a href="matlab:slvariants.internal.manager.core.VariantConfigSimInpPlugin.launchVariantManager(''{0}'', ''{1}'')">View in Variant Manager</a>)]]></entry>
        <entry key="UnsupportedCtrlVarSrcInSimInput">Simulink.SimulationInput object does not support variant control variable ''{0}'' because it is defined in ''{1}''.</entry>
    </message>
</rsccat>

<!-- LocalWords:  unexported SLVMGR noninteger VMgr slvariants addons Addon
-->
