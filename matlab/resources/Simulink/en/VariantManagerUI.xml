<?xml version="1.0" encoding="UTF-8" ?>
<!-- Copyright 2018-2025 The MathWorks, Inc. -->

<rsccat version="1.0" locale="en_US" product="Simulink">
    <!-- Messages in this file were moved from RES_VariantManger.properties and the translated strings are available with simulink_java component -->
    <message>
        <entry key="CommonName">Name</entry>
        <entry key="CommonDescription">Description</entry>
        <entry key="CommonConfig" note="Configuration refers to a group of variant control variables">Configuration</entry>
        <entry key="CommonVCD" note="VariantConfigurationData refers to a group of configurations(see above)" translate="false">VariantConfigurationData</entry>
        <entry key="CommonSubmodel">Submodel</entry>
        <entry key="CommonSubsystemreference">Subsystem reference</entry>
        <entry key="CommonConnectortag">Tag</entry>
        <entry key="CommonOpen">Open</entry>
        <entry key="CommonHelp">Help</entry>
        <entry key="CommonModel">Model file</entry>
        <entry key="CommonSubsystem">Subsystem file</entry>
        <entry key="CommonInactive">Inactive</entry>
        <entry key="CommonUnused">Unused</entry>
        <entry key="CommonView">View by</entry>
        <entry key="CommonShow">Show</entry>
        <entry key="BaseWksLabel" translate="false">Base workspace</entry>
        <entry key="CommonNavigate">Navigate</entry>

        <entry key="CommonOn" note="binary block param is in on state">on</entry>
        <entry key="CommonOff" note="binary block param is in off state" >off</entry>
        <entry key="CommonValue">Value</entry>
        <entry key="CommonSource">Source</entry>
        <entry key="CommonUsage">Usage</entry>
        <entry key="CommonVarActivationTimeShort">VAT</entry>
        <entry key="CommonVarActivationTimeFull">Variant Activation Time (VAT)</entry>
        <entry key="CommonReadOnly">read-only</entry>

        <entry key="DefaultSearchString">Enter search string</entry>

        <!-- Buttons on dialog prompts -->
        <entry key="ButtonOk">Ok</entry>
        <entry key="ButtonCancel">Cancel</entry>

        <!-- Wait text for progress bar -->
        <entry key="LoadingVariantManagerLabel">Loading Variant Manager ...</entry>
        <entry key="LoadingVariantParametersLabel">Loading Variant Parameters ...</entry>

        <!-- Frame -->
        <entry key="FrameTitlevm">Variant Manager</entry>
        <entry key="FrameTitlestandaloneeditor" translate="false">Simulink.VariantConfigurationData</entry>
        <entry key="FrameDialogTag" translate="false" note="TranslateFalseBatch;">VariantManagerDialogTag</entry>

        <!-- Toolstrip Tabs-->
        <entry key="ManagerTab">Variant Manager</entry>
        <entry key="ReducerTab">Variant Reducer</entry>
        <entry key="AnalysisTab">Variant Analyzer</entry>
        <entry key="VCDTab">Configurations &amp; Constraints</entry>

        <!-- Toolstrip Actions-->
        <entry key="TSSimulinkVCD" translate="false">Simulink.VariantConfigurationData </entry>
        <entry key="TSSimulinkVCDNameTooltip">Simulink.VariantConfigurationData object variable name that contains set of configurations and constraints</entry>
        <entry key="TSModelHierRefresh">Refresh</entry>
        <entry key="TSModelHierExpandAll">Expand All</entry>
        <entry key="TSModelHierSearch">Search</entry>
        <entry key="TSModelHierSearchTooltip">Search in the model hierarchy view</entry>
        <entry key="TSViewBlocksHier">View blocks </entry>
        <entry key="BVModeChoiceDropDownToolTip">Filter by mode</entry>
        <entry key="BVAllVariantMode">all variant</entry>
        <entry key="BVLabelMode">label mode</entry>
        <entry key="BVExpressionMode">expression mode</entry>
        <entry key="BVSimCodegenMode">sim codegen switching mode</entry>
        <entry key="TSNavigateHierLabel">Navigate </entry>
        <entry key="NavigationChoicesDropDownText"> Navigate</entry>
        <entry key="NavigationChoicesDropDownTooltip">Navigate choices</entry>
        <entry key="NavigateVariableUsageEntry">variable usage</entry>
        <entry key="NavigateActiveEntry">active</entry>
        <entry key="NavigateInvalidEntry">invalid</entry>

        <entry key="UpdateModelDiagStage">Updating model</entry>

        <!-- Setup Data Panel -->
        <entry key="VariantManagerSetupTitle">Setup</entry>
        <entry key="ConfigTitle">Variant configuration object</entry>
        <entry key="VariantConfigsTitle">Variant Configurations</entry>
        <entry key="ConfigdataComboTooltip">Name of variant configuration object</entry>

        <entry key="ButtonExportTooltip">Export variant configuration object to ''{0}'' and associate with model</entry>
        <entry key="ButtonExportControlvarsTooltip">Export control variables to workspace(s)</entry>
        <entry key="AddConfigurationSplitBtnEntry"> Add Configuration</entry>
        <entry key="AddControlVarSplitBtnEntry"> Add Control Variable</entry>
        <entry key="AddConstraintSplitBtnEntry"> Add Constraint</entry>
        <entry key="ExportControlvarsNoVCDO">Successfully exported control variables to workspaces.</entry>
        <entry key="ExportControlvarsAndVCDOInSyncCB">Successfully exported variant configuration object ''{0}'' and control variables to workspaces.</entry>
        <entry key="ExportControlvarsAndVCDOOutOfSyncCB">Successfully exported variant configuration object ''{0}'' and control variables to workspaces. Use the Apply changes button to associate ''{0}'' with the model.</entry>

        <!-- Configs Panel -->
        <entry key="ConfigsTitle">Configurations</entry>
        <entry key="GlobalConstraintsTitle">Global Constraints</entry>
        <entry key="ConfigListPlaceholderText">Click "Add" to add variant configurations</entry>
        <entry key="VariantConfigurationsApplyButton">Apply</entry>
        <entry key="VariantConfigurationsApplyDesc">Push variant configuration object changes to workspace</entry>
        <entry key="VariantConfigurationsRefreshButton">Refresh</entry>
        <entry key="VariantConfigurationsReloadButton">Reload</entry>
        <entry key="VariantConfigurationsImportButton">Import</entry>
        <entry key="VariantSetupLoadObjectButton">Import\nfrom file</entry>
        <entry key="VariantConfigurationsImportDesc">Load variant configuration data object from a MAT file or a MATLAB script.\nThis is not necessary when the object is defined in a data dictionary.</entry>
        <entry key="VariantConfigurationsExportButton">Export</entry>
        <entry key="VariantSetupSaveObjectButton">Export\nto file</entry>
        <entry key="VariantConfigurationsExportDesc">Export variant configuration data object to a MAT file or a MATLAB script.\nThis is not necessary when the object is defined in a data dictionary.</entry>
        <entry key="VariantConfigurationsRevertButton">Revert</entry>
        <entry key="VariantConfigurationsRevertDesc">Reload variant configuration object from workspace</entry>
        <entry key="PreferredConfiguration">Preferred Configuration</entry>
        <entry key="PreferredConfigurationTooltip">Select a preferred configuration</entry>
        <entry key="ConfigsTooltip">Edit variant configurations and set/clear default configuration</entry>
        <entry key="ConfigsColdefaultTooltip">Default configuration</entry>
        <entry key="ConfigsColnameTooltip">Name of variant configuration</entry>
        <entry key="ConfigsButtonAdd">Add variant configuration</entry>
        <entry key="ConfigsButtonDelete">Delete variant configuration</entry>
        <entry key="ConfigsButtonCopy">Copy variant configuration</entry>
        <entry key="ConfigsButtonSetcleardefault">Set/Clear default configuration</entry>
        <entry key="CompileMode">Compile mode </entry>
        <entry key="CompileModeTooltip">Select the mode to compile the model as part of reducing it</entry>
        <entry key="GlobalWorkspaceConfigTooltip">Model's External Data source</entry>

        <!-- Variant Constraints panel -->
        <entry key="ConstraintNameLbl">Constraint Name </entry>
        <entry key="ConstraintsListTitle">List of Constraints</entry>
        <entry key="ConstraintDefinitionTitleWithNoConstraint">Constraint Definition</entry>
        <entry key="ConstraintConditionHelpToggleBtnTooltipForShow">Show help</entry>
        <entry key="ConstraintConditionHelpToggleBtnTooltipForHide">Hide help</entry>
        <entry key="ConstraintListPlaceholderText">Click "Add" to add model-wide constraints</entry>
        <entry key="ConstraintConditionPlaceholderText">Ctrl ~= Controller.Experimental</entry>
        <entry key="ConstraintDescriptionPlaceholderText">Ensure only Nonlinear controller is used with an External plant</entry>
        <entry key="ConstraintDefinitionInfoMsg">Specify constraints applicable to all variant configurations of the model as logical expressions using control variables; expressions must evaluate to true for successful model compilation.\nExample: The constraint "~(ctrl == Controller.LINEAR &amp;&amp; plnt == Plant.EXTERNAL)" checks that no variant configuration combines a linear controller with an external plant by comparing 'ctrl' and 'plnt' control variables with their respective enumerated values, Controller.LINEAR and Plant.EXTERNAL.</entry>

        <entry key="VarGrpsButtonAdd">Add variable group</entry>
        <entry key="VarGrpsButtonDelete">Delete variable group</entry>
        <entry key="VarGrpsButtonCopy">Copy variable group</entry>

        <entry key="VariantConfigToWorkSpaceButton">Apply\nchanges</entry>
        <entry key="VariantConfigFromWorkSpaceButton">Reload\nobject</entry>

        <!-- Edit Panel-->
        <entry key="EditTitleVariant">Edit</entry>
        <entry key="CopyPushButtonVariant">Copy</entry>
        <entry key="DeletePushButtonVariant">Delete</entry>
        <entry key="CopyPushButtonTooltip">Copy</entry>
        <entry key="DeletePushButtonToolTip">Delete</entry>

        <!-- View Panel-->
        <entry key="ViewTitleVariant">View</entry>
        <entry key="ConstraintSplitViewText">Split View</entry>
        <entry key="ConstraintTabViewText">Tab View</entry>

        <!-- Variant Manager -->
        <entry key="VariantManagerLoadText">Populating variant control variables</entry>
        <entry key="VariantManagerSuccess">Success</entry>
        <entry key="VariantManagerFailure">Error</entry>
        <entry key="VariantManagerFailures">Error(s)</entry>
        <entry key="FailedConstraint"><![CDATA[Constraint '<a href="matlab:slvariants.internal.manager.ui.config.selectConstraint(''{0}'', ''{1}'')">{1}</a>' failed.{2}]]></entry>
        <entry key="SelectMissingConstraint">Constraint ''{0}'' does not exist.</entry>
        <entry key="VariantManagerModel">Model</entry>
        <entry key="VariantManagerWarnings">Warning(s)</entry>
        <entry key="VariantManagerClearLog">Clear log</entry>
        <entry key="VariantManagerClearLogTooltip">Clear the log window</entry>
        <entry key="PromptUnexportedChangesInVCDO">Variant configuration object ''{0}'' has unexported changes.\nDo you want to export the changes to ''{1}''?</entry>
        <entry key="VariantManagerPromptUnappliedVcdochanges">Variant configuration object ''{0}'' has unsaved changes.\nDo you want to apply or revert the changes to ''{0}'' before proceeding?</entry>

        <entry key="UnappliedVCDOChangesWithEmptyName">Unable to proceed as variant configuration object has unsaved changes and the name of variant configuration object is empty.\nEnter a name in the Simulink.VariantConfigurationData text box and apply the changes before proceeding.</entry>

        <entry key="VariantManagerPromptOverwriteUnsavedVCDO">Changes in the unsaved variant configuration object will be lost if ''{0}'' is loaded.\nDo you want to continue?</entry>

        <entry key="VariantManagerPromptUnexportedChangesEmptyInsync">Variant configuration object has unsaved changes. \nYou can click Cancel and then export the changes. \nClose Variant Manager discarding changes?</entry>

        <entry key="VariantManagerPromptUnexportedChangesEmptyOutofsync">Variant configuration object has unsaved changes. \nTo disassociate the model with any variant configuration object, click Cancel and export the changes. \nClose Variant Manager discarding changes? </entry>

        <entry key="VariantManagerPromptUnexportedVcdoInsync">Variant configuration object ''{0}'' has unexported changes.\nDo you want to export the changes to ''{1}''?</entry>

        <entry key="VariantManagerPromptUnexportedVcdoOutofsync">Variant configuration object ''{0}'' has unexported changes and is not associated with the model.\nDo you want to export the changes to ''{1}''?</entry>

        <entry key="VariantManagerPromptNounexportedVcdoOutofsync">Variant configuration object ''{0}'' is not associated with the model.\nDo you want to associate with the model?</entry>

        <entry key="VariantManagerSldvlicensecheckoutfailed">Unable to check out Simulink Design Verifier license.</entry>
        <entry key="VariantManagerExportExtensionMDescription">Script</entry>
        <entry key="VariantManagerExportExtensionMatDescription">files</entry>
        <entry key="VariantManagerExportSavingMessage">Saving variant configuration object </entry>

        <entry key="VariantManagerImportMessage">Importing variant configuration object </entry>

        <entry key="VariantManagerImportSelectTitle">Select object to import</entry>
        <entry key="VariantManagerImportRequestMessage">Select variant configuration object to import:</entry>

        <entry key="VariantManagerExportItemText">Save As... </entry>

        <entry key="VariantManagerErrorModelrefLoop">Model reference loop detected: </entry>

        <entry key="VariantManagerExportInvalidMatlabFilename">MATLAB file names must start with an alphabetic character and can contain up to 63 alphanumeric characters or underscores.</entry>
        <entry key="VariantManagerExportInvalidFilename">Invalid file name ''{0}'' specified</entry>
        <entry key="VariantManagerExportFilechooserTitle">Save to file</entry>
        <entry key="VariantManagerImportRefreshVcdo">Refresh ''{0}'' from ''{1}''</entry>
        <entry key="VariantManagerImportFilechooserTitle">Import from file</entry>
        <entry key="VariantManagerImportSelectvcdoOkTooltip">Choose the selected variant configuration object</entry>
        <entry key="VariantManagerImportSelectvcdoCancelTooltip">Cancel</entry>
        <entry key="ImportVCDOSyntaxErrorsHeader">Unable to import variant configuration object(s) from ''{0}''.</entry>
        <entry key="ImportVCDOMissingDefinitions">Unable to find variant configuration object(s) in ''{0}''.</entry>
        <entry key="MessageInfoImport">Imported variant configuration object ''{0}'' from ''{1}''.</entry>
        <entry key="VariantManagerImportSuccessfulMessageCreate">Created variant configuration object ''{0}''. Click the 'Apply changes' button to export the changes to ''{1}'' and to associate ''{0}'' with the model.</entry>
        <entry key="VariantManagerDisassociatedVCDOSuccessfulMessage">Variant configuration object ''{0}'' is no longer associated with Variant Manager. Click the 'Apply changes' button to disassociate ''{0}'' from the model.</entry>
        <entry key="VariantManagerUsingNameOfNonVCDObject">''{0}'' is not a Simulink.VariantConfigurationData object. Enter an unused variable name or the name of an existing Simulink.VariantConfigurationData object.</entry>
        <entry key="DisassociatedVCDOFromModelSuccessfulMessage">Variant configuration object ''{0}'' is no longer associated with the model.</entry>
        <entry key="VariantManagerControlVariableUsageLoadText">Gathering usage of variant control variables</entry>
        <entry key="VariantManagerAppsSectionText">APPS</entry>
        <entry key="ConfigurationActivationSuccessMsg">Successfully activated configuration ''{0}''.</entry>
        <entry key="ConfigurationActivationSuccessMsgUsingWorkspace">Successfully activated using {0}.</entry>
        <entry key="ModelHierConfigActivatedFor">Model Hierarchy</entry>
        <entry key="ModelHierToggleSearchTooltip">Search in model hierarchy view</entry>
        <entry key="ModelHierToggleSearchTooltipForVParam">Search in variant parameters view</entry>
        <entry key="VParamsInModelHierarchy">Activated for: ''{0}''.\n&#8226; Variant Parameters in workspaces associated with model hierarchy.\n&#8226; Parameters that are not yet activated are grayed out.\n&#8226; Parameters that are unused for this configuration are italicized.</entry>
        <entry key="VariantParameterSpecification">Specification</entry>
        <entry key="VariantParameterBank">Bank</entry>
        <entry key="VariantParameterPlaceholderText">Model hierarchy does not contain any Simulink.VariantVariable objects with choices.</entry>
        <entry key="VariantParameterNotFound">Unable to find Simulink.VariantVariable ''{0}'' in the ''{1}''.</entry>
        <entry key="VarParamViewChoicePerRow" note="variant parameter choice per row">Choice</entry>
        <entry key="VarParamViewBankPerRow" note="variant parameter bank per row">Bank</entry>
        <entry key="VarParamViewShowAll" note="Show all variant parameters visible to model hierarchy">All</entry>
        <entry key="VarParamViewShowUsedByConfig" note="Show only variant parameters used by model for this configuration">Used by configuration</entry>
        <entry key="VarParamViewTooltip">Select Variant Parameter view to show in hierarchy</entry>
        <entry key="VarBankMissingOrInvalid">Unable to find Simulink.VariantBank ''{0}'' associated with Simulink.VariantVariable ''{1}''.</entry>
        <entry key="ModelNotActivated">''{0}'' is either not activated or is in the inactive model hierarchy</entry>
        <entry key="ModelDoesNotUseParameter">''{0}'' does not use ''{1}'' in an active variant hierarchy</entry>
        <entry key="BlockNotActivated">Block is not in an active variant hierarchy</entry>
        <entry key="VarParamNotWithValidBank">Unable to add these parameters to a bank because they do not have access to the Simulink.VariantBank ''{0}'' defined in ''{1}'':\n ''{2}''</entry>
        <entry key="VarParamsSuccessAssociation">These parameters are successfully associated with the Simulink.VariantBank ''{0}'' defined in ''{1}'':\n ''{2}''</entry>
        <entry key="CreateVarBank">Create Simulink.VariantBank</entry>
        <entry key="CreateVarBankStage">Create Simulink.VariantBank object</entry>
        <entry key="VarBankExistsInSource">Simulink.VariantBank ''{0}'' already exists in ''{1}''.</entry>
        <entry key="AssociateVParamWithVBank">Associate with Simulink.VariantBank</entry>
        <entry key="CreatedVarBankInSource">Simulink.VariantBank ''{0}'' is created in ''{1}''.</entry>

        <!-- Variant Reducer and Variant Analyzer -->
        <entry key="VariableGroupsTabTitle">Variable Groups</entry>
        <entry key="VarGroupCtrlVarValidationInvalidValuePrefix">The following variant control values are invalid: ''{0}''</entry>
        <entry key="VarGroupCtrlVarValidationEmptyValues">The following variant control variable(s) have empty value: ''{0}''</entry>
        <entry key="VarGroupCtrlVarValidationEmptyRefValues">The following full-range variant control variable(s) have empty reference value: ''{0}''</entry>
        <entry key="VarGroupInvalidGroupName">Group name must be a valid MATLAB variable name and must be unique</entry>

        <entry key="VariantReducerLoadText">Launching Variant Reducer</entry>
        <entry key="VariantReducerButtonText">Reduce model...</entry>
        <entry key="VariantReducerButtonTooltip">Generate reduced model with subset of configurations</entry>
        <entry key="VariantReducerButtonTooltipNosldvlicense">Simulink Design Verifier product license is required for reducing the model</entry>
        <entry key="VariantConfigurationAnalysisButtonText">Analyze...</entry>
        <entry key="VariantConfigAnalysisLoadText">Launching Variant Analyzer</entry>
        <entry key="VariantConfigurationAnalysisButtonTooltipNosldvlicense">Simulink Design Verifier product license is required for variant configuration analysis of the model</entry>
        <entry key="VariantConfigurationAnalysisTitle">Variant Analyzer</entry>
        <entry key="VariantConfigurationAnalysisSummaryHeader">Variant Analyzer</entry>
        <entry key="VariantConfigurationAnalysisDescription">Analyze model for subset of variant configurations or variant control values. The analyzed information is configuration specific and includes information on blocks that are active or inactive.</entry>
        <entry key="VariantConfigurationAnalysisDescriptionOnlyNamedConfig">Analyze model for subset of variant configurations. The analyzed information is configuration specific and includes information on blocks that are active or inactive.</entry>
        <entry key="VariantConfigurationAnalysisAnalyzeModelButtonText">Analyze\nModel</entry>
        <entry key="VariantConfigurationAnalysisAnalyzeButtonText">Analyze</entry>
        <entry key="VariantConfigurationAnalysisAnalyzeButtonTooltip">Analyze model for subset of configurations specified in variant configuration object</entry>
        <entry key="VariantConfigurationAnalysisHelpButtonText">Help</entry>
        <entry key="VariantConfigurationAnalysisHelpButtonTooltip">View documentation for Variant Analyzer</entry>
        <entry key="VariantConfigurationAnalysisCancelButtonText">Cancel</entry>
        <entry key="VariantConfigurationAnalysisCancelButtonTooltip">Close</entry>
        <entry key="VariantConfigurationAnalysisPromptUnhandledexception">Error encountered while running Variant Analyzer.</entry>
        <entry key="VariantConfigurationAnalysisAnalyzing">Analyzing variant configurations of model ...</entry>
        <entry key="VariantConfigurationPromptUnsavedmodelSuffix">has unsaved changes. Save the model to analyze it.</entry>

        <entry key="VariantReducerConfigTableConfigcolumnheader">Named configurations</entry>
        <entry key="VariantReducerCtrlvarTableOutertablecolumnheader">Variable groups</entry>
        <entry key="VariantReducerCtrlvarTableNamecolumnheader">Name (read-only)</entry>
        <entry key="VariantReducerCtrlvarTableValuecolumnheader">Values</entry>
        <entry key="VariantReducerCtrlvarTableRefvaluecolumnheader">Reference value</entry>
        <entry key="VariantReducerCtrlvarTableRefvaluecolumnheaderTooltip">Full-range variable reference value that makes model compile</entry>
        <entry key="VariantReducerCurractTableNamecolumnheader">Name (read-only)</entry>
        <entry key="VariantReducerCurractTableValuecolumnheader">Value (read-only)</entry>
        <entry key="VariantReducerCtrlvarValidationInvalidName">The following variant control variable names are not allowed as they are invalid MATLAB variable names:
        </entry>
        <entry key="VariantReducerCtrlvarValidationInvalidValueSuffix">Variant control variables must be integer numeric values, enumerations or Simulink.Parameter objects.</entry>
        <entry key="VariantReducerCtrlvarValidationRepeatedNameSuffix">Use a comma-separated list of values to indicate multiple values of the control variable.</entry>
        <entry key="VariantReducerFilenameText">Reduced model name:</entry>
        <entry key="VariantReducerFilechooserDialog">Output folder</entry>
        <entry key="VariantReducerFoldernameSuffix">reducedModel</entry>
        <entry key="VariantReducerTitle">Variant Reducer:</entry>
        <entry key="VariantReducerModeSection" note="Mode means a type for operation">Mode</entry>
        <entry key="VariantReducerReductionMode" note="Mode means a type for operation">Reduction mode </entry>
        <entry key="VariantReducerReductionModeTooltip">Select a mode to specify the configurations that must be reduced</entry>
        <entry key="VariantConfigurationAnalysisMode" note="Mode means a type for operation">Analysis mode </entry>
        <entry key="VariantConfigurationAnalysisModeTooltip">Select a mode to specify the configurations that must be analyzed</entry>
        <entry key="VariantReducerSummaryHeader">Variant Reducer</entry>
        <entry key="VariantReducerDescription">Generate reduced model for specified variant configurations or variant control values.</entry>
        <entry key="VariantReducerOutputDirectoryText">Output folder </entry>
        <entry key="VariantReducerOutputDirectoryTooltip">Specify the folder to place the reduced models and artifacts</entry>
        <entry key="VariantReducerBrowseButtonTextV1">Browse...</entry>
        <entry key="VariantReducerBrowseButtonText">Browse for the folder to place the reduced models and artifacts</entry>
        <entry key="VariantReducerReduceButtonText">Reduce</entry>
        <entry key="VariantReducerReduceModelButtonText">Reduce\nModel</entry>
        <entry key="VariantReducerOptionsSection">Options</entry>
        <entry key="VariantReducerReduceButtonTooltip">Generate reduced model from selected options</entry>
        <entry key="VariantReducerHelpButtonText">Help</entry>
        <entry key="VariantReducerHelpButtonTooltip">View documentation for reducing model with variants</entry>
        <entry key="VariantReducerCancelButtonText">Cancel</entry>
        <entry key="VariantReducerCancelButtonTooltip">Close</entry>
        <entry key="VariantReducerPromptUnhandledexception">Error encountered while reducing model.</entry>
        <entry key="VariantReducerWarningMessage">These warning(s) occurred: </entry>
        <entry key="VariantReducerReducing">Generating reduced model ...</entry>

        <!-- Stages for Variant Parameter View-->
        <entry key="CollectVParamStage">Collating Variant Parameters</entry>
        <entry key="EditVariantParamPropertyStage">Edit Simulink.VariantVariable Property</entry>
        <entry key="EditVariantBankPropertyStage">Edit Simulink.Bank Property</entry>
        <entry key="CollectVBankStage">Collect Variant Banks</entry>
        <entry key="BankEmptyVarName">Name of Simulink.VariantBank must be nonempty.</entry>


        <!-- Stages for editing Constraint Condition-->
        <entry key="EditConstraintStage">Edit condition for constraint "{0}"</entry>

        <!-- Stages for Edit Control Variable View-->
        <entry key="EditCtrlVarStage">Editing control variable</entry>
        <entry key="MessageExistingVarCtrlValueImported">Value of ''{0}'' has been imported from ''{1}''.</entry>

        <!-- Empty catalog for dummy Error message -->
        <entry key="DummyEmptyError"></entry>
        <entry key="TabChangeDiagStage">''{0}'' Tab</entry>
        <entry key="AnalysisModeDiagStage">Analysis Mode</entry>
        <entry key="ReductionModeDiagStage">Reduction Mode</entry>

        <entry key="ReducingModelDiagStage">Reduce model</entry>
        <entry key="AnalyzeModelDiagStage">Analyze model</entry>
        <entry key="VariantReducerSuccessMessagePrefix">Successfully generated reduced model</entry>
        <entry key="VariantReducerSuccessMessageWithCDCommand"><![CDATA[Successfully generated reduced model <a href="matlab:Simulink.variant.reducer.utils.cdAndOpenReducedModel(''{0}'', true)">{0}</a>.]]></entry>
        <entry key="VariantReducerSuccessMessageWithoutCDCmd"><![CDATA[Successfully generated reduced model <a href="matlab:open_system(''{0}'')">{0}</a>.]]></entry>
        <entry key="VariantReducerPromptUnsavedmodelSuffix">has unsaved changes. Save the model to reduce it.</entry>
        <entry key="UnsavedModelErrorOnTabChange">Model ''{0}'' has unsaved changes. Save the model to switch to ''{1}'' tab.</entry>
        <entry key="VariantReducerCommandrowPrefix">Generating reduced model by executing ...</entry>
        <entry key="VariantReducerCommandrowShowcommand">show command</entry>
        <entry key="VariantReducerCommandrowHidecommand">hide command</entry>
        <entry key="VariantReducerMenuCopymessage">Copy message</entry>
        <entry key="VariantReducerMenuCopycommand">Copy command</entry>
        <entry key="VariantReducerMenuCopymessageTooltip">Copy messages to the clipboard</entry>
        <entry key="VariantReducerMenuCopycommandTooltip">Copy equivalent MATLAB command for reducing the model to the clipboard</entry>
        <entry key="VariantReducerCdAndOpenRedModelPrefixTooltip">Change current working folder to output folder and open the reduced model</entry>
        <entry key="VariantReducerOpenRedModelText">Open reduced model</entry>
        <entry key="VariantReducerCdAndOpenRedModelPrefix">Open reduced model (</entry>
        <entry key="VariantReducerCdAndOpenRedModelSuffix">changes to output folder)</entry>
        <entry key="VariantReducerPreserveSignalAttributesText">Preserve signal attributes</entry>
        <entry key="VariantReducerPreserveSignalAttributesTooltip">Try to preserve compiled signal attributes between original and reduced model by adding signal specification blocks in the reduced model</entry>
        <entry key="VariantReducerRemoveVariantSubsystemLayerText">Remove Variant Subsystem layer</entry>
        <entry key="VariantReducerRemoveVariantSubsystemLayerTooltip">Remove Variant Subsystem layer when only a single choice is active</entry>
        <entry key="VariantReducerModelSuffixText">Model suffix </entry>

        <entry key="VariantReducerModelSuffixTooltip">Suffix to append to reduced models and artifacts</entry>
        <entry key="VariantReducerInvalidModelSuffix">Suffix must be nonempty and must contain only alphanumeric characters or underscores. Maximum allowed length of a model name is {0} characters.</entry>
        <entry key="VariantReducerOutputdirnoreadaccess">Output folder does not have read access</entry>
        <entry key="VariantReducerOutputdirreduced">Existing contents of this folder will be deleted</entry>
        <entry key="VariantReducerOutputdirpublic">Output folder must be empty or an existing reduced model output folder</entry>
        <entry key="VariantReducerOutputdirinstall">Simulink does not permit you to modify the MATLAB installation area</entry>
        <entry key="VariantReducerOutputdirinvalid">Invalid output folder specified</entry>
        <entry key="VariantReducerCurractRadiobuttonText">Current variant control values</entry>
        <entry key="VariantReducerConfigRadiobuttonText">Specify variant configurations</entry>
        <entry key="VariantReducerConfigRadiobuttonTooltip">Specify configurations to be retained in the reduced model</entry>
        <entry key="VariantConfigAnalysisConfigRadiobuttonTooltip">Specify configurations to analyze</entry>
        <entry key="VariantReducerCtrlvarRadiobuttonText">Specify variant control values</entry>
        <entry key="VariantReducerCtrlvarRadiobuttonTooltip">Specify variant control values in comma separated lists</entry>
        <entry key="VariantReducerCtrlvarButtonText">New variable group</entry>
        <entry key="VariantReducerCtrlvarRefvaluePlaceholder">Enter reference value</entry>
        <entry key="VariantReducerCtrlvarValuePlaceholder">Enter Values</entry>
        <entry key="VariantReducerGenerateReportText">Generate detailed summary</entry>
        <entry key="VariantReducerGenerateReportTooltip">Generate detailed summary for the reduced model. This requires Simulink Report Generator license.</entry>
        <entry key="VariantReducerExcludeFilesText">Files to exclude </entry>
        <entry key="VariantReducerExcludeFilesTooltip">Exclude these Simulink data dictionary (*.sldd) or MAT-files (*.mat) during reduction.\nValue must be a character vector, a string array, or a cell array of character vectors or string arrays.</entry>
        <entry key="VariantReducerInvalidExcludeFiles">''Files to exclude'' value must be a character vector, a string array, or a cell array of character vectors or string arrays</entry>
        <entry key="VariantReducerTabPushButtonText">Variant\nReducer</entry>
        <entry key="VariantAnalyzerTabPushButtonText">Variant\nAnalyzer</entry>
        <entry key="VariantReducerCloseTabPushButtonText">Close\nVariant Reducer</entry>
        <entry key="VariantAnalyzerCloseTabPushButtonText">Close\nVariant Analyzer</entry>
        <entry key="VariantReducerTabPushButtonTooltip">Open Variant Reducer</entry>
        <entry key="VariantAnalyzerTabPushButtonTooltip">Open Variant Analyzer</entry>
        <entry key="VariantReducerExitTabPushButtonTooltip">Exit Variant Reducer tab</entry>
        <entry key="VariantAnalyzerExitTabPushButtonTooltip">Exit Variant Analyzer tab</entry>
        <entry key="VariantTabsCloseSection">Close</entry>
        <entry key="VariantConfigAnalysisNamedConfigRadiobuttonTooltip">Specify variant configuration names</entry>
        <entry key="VariantConfigAnalysisCtrlvarRadiobuttonTooltip">Specify variant control values</entry>
        <entry key="ReduceModelForCurrActMode">Reduce model for current active variants defined in workspace</entry>
        <entry key="ReduceOrAnalyzeForSelectedConfigs" note="Verb (Reduce/Analyze) in the input argument comes from another message ID. So, gets translated.">{0} model for selected configuration(s)</entry>
        <entry key="SelectConfigsToReduceOrAnalyze">No configuration is selected. Select configuration(s) to enable {0} button</entry>
        <entry key="ReduceOrAnalyzeForSelectedGroups" note="Verb (Reduce/Analyze) in the input argument comes from another message ID. So, gets translated.">{0} model for selected variable group(s)</entry>
        <entry key="SelectGroupsToReduceOrAnalyze">No group is selected. Select variable group(s) to enable {0} button</entry>

        <!-- Constraints Panel -->
        <entry key="ConstraintsTitle">Constraints</entry>
        <entry key="ConstraintTitle">Constraint</entry>
        <entry key="ConstraintsTooltip">Edit constraints used across all variant configurations</entry>
        <entry key="ConstraintsColnameTooltip">Name of constraint</entry>
        <entry key="ConstraintsColcondTooltip">Boolean expression of constraint</entry>
        <entry key="ConstraintsButtonAdd">Add constraint</entry>
        <entry key="ConstraintsButtonDelete">Delete constraint</entry>
        <entry key="ConstraintsButtonCopy">Copy constraint</entry>
        <entry key="ConstraintsColumnCondition">Condition</entry>

        <!-- Control Variables -->
        <entry key="ControlVariablesTitle">Control Variables</entry>
        <entry key="ControlVarListPlaceholderText">Click "Add/Import" to add control variables</entry>
        <entry key="ControlVariablesTooltip">Control variables of a variant configuration</entry>
        <entry key="ControlVariablesColtypeTooltip">Type of control variable</entry>
        <entry key="ControlVariablesColnameTooltip">Name of control variable</entry>
        <entry key="ControlVariablesColvalueTooltip">Value of control variable</entry>
        <entry key="ControlVariablesColsourceTooltip">Source of control variable</entry>
        <entry key="ControlVariablesButtonAdd">Add control variable</entry>
        <entry key="ControlVariablesButtonDelete">Delete control variable</entry>
        <entry key="ControlVariablesButtonClone">Copy control variable</entry>
        <entry key="ControlVariablesButtonTogglevartype">Convert variable to/from Simulink.Parameter</entry>
        <entry key="ConvertToSLVarCtrlType">Convert to Simulink.VariantControl</entry>
        <entry key="ConvertToNormalCtrlType">Convert to Normal MATLAB variable</entry>
        <entry key="ConvertToType" note="convert variant control variable to given parameter type">Convert to {0}</entry>
        <entry key="ControlVariablesButtonEditparameter">Edit Simulink.Parameter or AUTOSAR.Parameter control variable</entry>
        <entry key="ControlVariablesButtonImport">Import control variables across model hierarchy</entry>
        <entry key="ControlVariablesButtonImportFromDataSource">Import control variables from model data source</entry>
        <entry key="ControlVariablesButtonToggleSLCtrlVar">Convert variable to/from Simulink.VariantControl</entry>
        <entry key="ControlVariablesButtonShowAll">Show All</entry>
        <entry key="ControlVariablesButtonShowEntireModel">Show control variables for entire model</entry>
        <entry key="ControlVariablesButtonShowusage">Show usage of selected control variables</entry>
        <entry key="ControlVariablesButtonHideusage">Hide usage of selected control variables</entry>
        <entry key="ToggleColumnsButtonTooltip">Toggle visibility of columns</entry>
        <entry key="FilterRowsButtonToolTip">Filter based on variable types</entry>
        <entry key="RemoveRowFilterButtonToolTip">Remove all filters from table</entry>
        <entry key="ControlVariablesSSTextFilterToolTip">Filter content in Control Variables table</entry>
        <entry key="ControlVariablesVATTooltip">Variant Activation Time (VAT) is valid when the variant control value is a Simulink.VariantControl</entry>
        <entry key="ControlVariablesColumnSample">Reference value</entry>
        <entry key="ControlVariablesContextCopy">Copy</entry>
        <entry key="ControlVariablesContextDelete">Delete</entry>
        <entry key="ControlVariablesContextShowUsage">Show usage</entry>
        <entry key="ControlVariablesContextHideUsage">Hide usage</entry>
        <entry key="NormalCtrlVarTT">Normal MATLAB variable</entry>
        <entry key="SimulinkVariantControlNormalCtrlVarTT">Simulink.VariantControl with value as normal MATLAB variable</entry>
        <entry key="SimulinkVariantControlParamCtrlVarTT">Simulink.VariantControl with value as {0}</entry>

        <entry key="AddSimulinkVariantControlCtrlVar">Add Simulink.VariantControl</entry>
        <entry key="AddNormalCtrlVar">Add Normal MATLAB variable</entry>
        <entry key="AddCtrlVar">Add {0}</entry>

        <!-- Sub-Model Config Selections -->
        <entry key="SubmodelconfigsTitle">Submodel Configurations</entry>
        <entry key="SubmodelconfigsTooltip">Submodel configuration selections for a variant configuration</entry>
        <entry key="SubmodelconfigsColmodelTooltip">Name of submodel</entry>
        <entry key="SubmodelconfigsColconfigTooltip">Name of submodel variant configuration</entry>
        <entry key="SubmodelconfigsButtonAdd">Add submodel configuration</entry>
        <entry key="SubmodelconfigsButtonDelete">Delete submodel configuration</entry>
        <entry key="SubmodelconfigsColumnConfig" note="Configuration here means a group of variant control variables">Configuration</entry>

        <!-- Component Browser Panel -->
        <entry key="CompBrowserTitle">Component Configurations</entry>
        <entry key="ShowComponentConfigurations">Show Component Configurations</entry>
        <entry key="HideComponentConfigurations">Hide Component Configurations</entry>
        <entry key="CompBrowserComponentColumnTitle">Component</entry>
        <entry key="CompBrowserSelectedConfigurationColumnTitle">Selected Configuration</entry>
        <entry key="CompBrowserUnsetConfig">&lt;unset&gt;</entry>
        <entry key="CompBrowserButtonToolTip">Show or hide Component Configurations view in the model hierarchy</entry>
        <entry key="CtrlVarReadOnlyFromComp">Control variable is derived from a referenced component's selected configuration</entry>
        <entry key="CompHasVariantConfigs">''{0}'' has variant configurations in ''{1}''</entry>
        <entry key="CompBrowserSelectAConfig">&lt;Select a configuration&gt;</entry>
        <entry key="CompBrowserEnableAddToConstraint">Select a configuration to enable adding it to the constraint</entry>
        <entry key="AddCompConfigToConstraintBtnTooltip">Append "&amp;&amp; {0}.isConfigActive(''{1}'')" to the constraint</entry>

        <!-- Configuration Description Panel -->
        <entry key="ConfigdescriptionTitle">Description</entry>
        <entry key="ConfigdescriptionTooltip">Description of a variant configuration</entry>

        <!-- Results View Panel -->
        <entry key="SystemsViewTab">System</entry>
        <entry key="SystemsViewTabTooltip">System view to manage variant entities in the model hierarchy</entry>
        <entry key="BlocksViewTab">Blocks</entry>
        <entry key="BlocksViewTabTooltip">Blocks view to manage variant blocks in the model hierarchy</entry>
        <entry key="StateflowViewTab">Stateflow</entry>
        <entry key="StateflowViewTabTooltip">Stateflow view to manage Stateflow variant transitions in the model hierarchy</entry>
        <entry key="CompBrowserViewTab">Component Configurations</entry>
        <entry key="CompBrowserViewTabTooltip">Select referenced component configurations to populate top-level control variables</entry>
        <entry key="ConstraintCompConfigsHint">Select referenced component configuration to add to the constraint</entry>
        <entry key="VariantParamViewTab">Variant Parameters</entry>
        <entry key="VariantParamViewTabTooltip">Variant Parameters view to manage variant parameters in base workspace or data dictionaries associated with model</entry>
        <entry key="HierarchyTitleVariant">Model hierarchy</entry>
        <entry key="ResultsViewTitleVariant">Results View</entry>
        <entry key="HierarchyButtonActivate">Activate</entry>
        <entry key="HierarchyButtonActivateConfiguration">Activate\nConfiguration</entry>
        <entry key="HierarchyButtonActivateConfigDesc">Activate selected configuration</entry>
        <entry key="HierarchyButtonActivateTooltip">Activate and refresh view for ''{0}''</entry>

        <entry key="HierarchyButtonUpdate">Update</entry>
        <entry key="HierarchyButtonUpdateModel">Update\n Model</entry>
        <entry key="HierarchyButtonUpdateModelDesc">Update model to obtain compiled information</entry>

        <entry key="HierarchyView">View blocks </entry>
        <entry key="HierarchyViewTooltip">Select blocks to show in hierarchy</entry>
        <entry key="HierarchyNavigationTooltip">Select navigation mode</entry>
        <entry key="HierarchyViewFull">hierarchical</entry>
        <entry key="HierarchyViewFullTT">hierarchical blocks</entry>
        <entry key="HierarchyViewModelrefsandvariants">all variant</entry>
        <entry key="HierarchyViewModelrefsandvariantsTT">all variant blocks</entry>
        <entry key="HierarchyViewLabelmodeblocks">label mode</entry>
        <entry key="HierarchyViewLabelmodeblocksTT">label mode variant blocks</entry>
        <entry key="HierarchyViewExpressionmodeblocks">expression mode</entry>
        <entry key="HierarchyViewExpressionmodeblocksTT">expression mode variant blocks</entry>
        <entry key="HierarchyViewSimCodegenmodeblocks">sim codegen switching mode</entry>
        <entry key="HierarchyViewSimCodegenmodeblocksTT">sim codegen switching mode variant blocks</entry>
        <entry key="HierarchyNavigate">Navigate </entry>
        <entry key="HierarchyNavigationVariableusage">variable usage</entry>
        <entry key="HierarchyNavigationActivechoices">active choices</entry>
        <entry key="HierarchyNavigationInvalidchoices">invalid choices</entry>
        <entry key="HierarchyTableNotinsyncTooltip">Model hierarchy view is grayed-out since the configuration being edited does not correspond to the current active configuration ''{0}''</entry>
        <entry key="HierarchyColumnConfig">Submodel Configuration</entry>
        <entry key="HierarchyColumnsControl">Variant control</entry>
        <entry key="HierarchyColumnsControlExpr">expression</entry>
        <entry key="HierarchyColumnsControlLabel">label</entry>
        <entry key="HierarchyColumnsControlSwitch">switch</entry>
        <entry key="HierarchyColumnsCondition">Condition</entry>
        <entry key="HierarchyColnameTooltip">Name of block and/or model</entry>
        <entry key="HierarchyColvarcontrolTooltip">Name of variant object or variant condition</entry>
        <entry key="HierarchyColvarcondTooltip">Variant condition of variant object</entry>

        <entry key="HierarchyButtonNextActive">Select next active</entry>
        <entry key="HierarchyButtonPrevActive">Select previous active</entry>
        <entry key="HierarchyButtonNextInvalid">Select next invalid</entry>
        <entry key="HierarchyButtonPrevInvalid">Select previous invalid</entry>
        <entry key="HierarchyButtonHelp">View documentation for Variant Manager.</entry>
        <entry key="HierarchyButtonUsagePrevTooltip">Show previous variable usage</entry>
        <entry key="HierarchyButtonUsageNextTooltip">Show next variable usage</entry>
        <entry key="HierarchyButtonNousageTooltip">No variable usage exists</entry>
        <entry key="HierarchyLabelFoundUsage">''{0}'' usages for ''{1}''</entry>

        <entry key="HierarchyOpenBlock">Open and Highlight Block</entry>
        <entry key="HierarchyOpenModel">Open Model</entry>
        <entry key="HierarchyOpenChart">Open and Highlight Chart</entry>
        <entry key="HierarchyOpenTransition">Open and Highlight Transition</entry>
        <entry key="HierarchyVarParamDialog">Edit Simulink.VariantVariable</entry>
        <entry key="HierarchyVarBankDialog">Edit Simulink.VariantBank</entry>

        <entry key="HierarchyBlockActivateLabelChoice">Set as Label Mode Active Choice</entry>

        <entry key="HierarchyBlockOpenDdgSelf">Open Block Parameters</entry>
        <entry key="HierarchyBlockOpenDdgParent">Open Parent Block Parameters</entry>
        <entry key="HierarchyChartOpenDdgSelf">Open Chart Parameters</entry>
        <entry key="HierarchyChartOpenDdgParent">Open Parent Chart Parameters</entry>

        <entry key="HierarchyNavigatePairedBlock">Navigate to Paired Block</entry>
        <entry key="HierarchyOpenPairedBlock">Open and Highlight Paired Block</entry>
        <entry key="HierarchyOpenPairedBlockDdg">Open Paired Block Parameters</entry>

        <entry key="Loading" translate="false" note="TranslateFalseBatch;">Loading...</entry>
        <entry key="DerivedVAT">Inherited variant activation time:</entry>

        <!-- Help Document Information -->
        <entry key="HelpTitle">Getting Started</entry>
        <entry key="HelpDocumentHeader">Variant Manager Workflows</entry>
        <entry key="HelpDocumentDescription1">Variant Manager is a tool that allows you to visualize the model hierarchy and centrally manage the usage of variant elements such as variant blocks, variant parameters, and variant transitions across the hierarchy.</entry>

        <entry key="DefineConfigsHelpTabLabel">Configure</entry>
        <entry key="DefineConfigsHelpHeader">Define Configurations</entry>
        <entry key="DefineConfigsHelpText">Define configurations for model hierarchy\n\nA variant configuration is a collection of variant control variables with specific values and represents one of many modes possible for a model.\nYou can define variant configurations for your model hierarchy based on requirements.\n\n1. In the Configurations tab, click the Add button to add a new configuration.\n\n2. In the Control Variables table below, click the Import control variables across model hierarchy button to populate variant controls.\n\n3. Set appropriate values for the variant controls.\n\n4. Repeat steps 1-3 to add more configurations.\n\n5. Specify an object name (e.g. model_vcd) in the Simulink.VariantConfigurationData box. This object stores the collection of configurations and constraints.\n\n6. Click Apply changes to push the variant configuration object to the base workspace or to the Configurations section of the Simulink data dictionary associated with the model.\n\n7. If the object in step 5 is defined in base workspace, you can export it to a MAT-file or MATLAB script for reuse. In case of data dictionary, save changes to the data dictionary.\n\n8. Save the model to associate it with the object specified in step 5.</entry>
        <entry key="DefineConfigsHelpDescription">Define configurations for your model hierarchy based on requirements.\n\nA variant configuration is a collection of variant control variables with specific values and represents one of the modes of operation possible for a system.</entry>
        <entry key="DefineConfigsHelpStep1">Specify an object name (e.g. model_vcd) in the {0} text box. This object stores the collection of configurations and constraints.</entry>
        <entry key="DefineConfigsHelpStep2">In the Configurations tab, click {0} to add a new configuration.</entry>
        <entry key="DefineConfigsHelpStep3">In the Control Variables section, click {0} to populate control variables associated with the model.</entry>
        <entry key="DefineConfigsHelpStep4">Set appropriate values for the control variables.</entry>
        <entry key="DefineConfigsHelpStep5">Repeat steps 1-3 to add more configurations.</entry>
        <entry key="DefineConfigsHelpStep6">Click {0} to push the variant configuration object to the base workspace or to the Configurations section of the Simulink data dictionary associated with the model.</entry>
        <entry key="DefineConfigsHelpStep7">If the object in step 5 is defined in base workspace, you can export it to a MAT-file or a MATLAB script for reuse. In the case of a data dictionary, save the changes to the data dictionary.</entry>
        <entry key="DefineConfigsHelpStep8">Save the model to associate it with the object specified in step 5.</entry>

        <entry key="DefineConstraintsHelpHeader">Define Constraints</entry>
        <entry key="DefineConstraintsHelpText">Define model-wide checks that limit the modes of your model. Model errors on constraint violation.\n\n1. In the Constraints tab, click the Add button to add a new constraint.\nSpecify the condition and description(if any).\n\n2. Follow steps 5-8 above based on your workflow. </entry>
        <entry key="DefineConstraintsHelpDescription">Define model-wide checks to limit the valid variant configurations that can be defined for a model. Model errors on constraint violation.</entry>
        <entry key="DefineConstraintsHelpStep1">In the Constraints tab, click {0} to add a new constraint. Specify the condition and an optional description.</entry>
        <entry key="DefineConstraintsHelpStep2">Follow steps 5-8 in the Define Configurations section based on your workflow.</entry>

        <entry key="ActivateConfigHelpTabLabel">Activate</entry>
        <entry key="ActivateConfigHelpHeader">Activate Configuration</entry>
        <entry key="ActivateConfigHelpText">Activate (apply) variant configuration for model.\n\n1. Select the desired configuration from the list of configurations and click Activate Configuration.\n\n2. Explore the active variant choices in the Blocks or System tab of the model hierarchy view for the configuration.\n\n3. Use the Navigate and View blocks filters to navigate the model hierarchy.\n\n4. Right-click on a row in the model hierarchy to navigate to it in the model.\n\n5. Activation errors are reported in the Diagnostics window.</entry>
        <entry key="ActivateConfigHelpDescription">Activate variant configuration on model.</entry>
        <entry key="ActivateConfigHelpStep1">Select the desired configuration from the list of configurations and click {0}.</entry>
        <entry key="ActivateConfigHelpStep2">Explore the active variant choices for the current configuration in the Blocks or System tab of the model hierarchy.</entry>
        <entry key="ActivateConfigHelpStep3">Use the Navigate filter and buttons to step through the model hierarchy based on control variable usage, active choices, or invalid choices.</entry>
        <entry key="ActivateConfigHelpStep4">Right-click on a row in the model hierarchy to access context-specific options. For example, the {0} option helps you to navigate to the corresponding block in the model.</entry>
        <entry key="ActivateConfigHelpStep5">Activation errors are reported in the Diagnostics window.</entry>

        <entry key="UpdateModelHelpTabLabel">Update</entry>
        <entry key="UpdateModelHelpHeader">Update Model</entry>
        <entry key="UpdateModelHelpText">Update model using a variant configuration.\n\n1. Select the desired configuration from the list of configurations and click Update Model.\n\n2. Compile-time information is obtained and used in different Variant Manager workflows.\n\n3. Validates that the control variable definitions in the configuration are consistent with any InitFcn callbacks or mask initialization code.\n\n4. Variant Parameters view shows parameters unused by the model hierarchy in italics.\n\n5. Compile-time information obtained is reused for subsequent workflows.</entry>
        <entry key="UpdateModelHelpDescription">Update model using a variant configuration.</entry>
        <entry key="UpdateModelHelpStep1">Select the desired configuration from the list of configurations and click {0}.</entry>
        <entry key="UpdateModelHelpStep2">Compile-time information is obtained and used in different Variant Manager workflows.</entry>
        <entry key="UpdateModelHelpStep3">Validates that the control variable definitions in the configuration are consistent with any InitFcn callbacks or mask initialization code.</entry>
        <entry key="UpdateModelHelpStep4">Variant Parameters view shows parameters unused by the model hierarchy in italics.</entry>
        <entry key="UpdateModelHelpStep5">Compile-time information obtained is reused for subsequent workflows.</entry>

        <entry key="GenerateConfigsHelpTabLabel">Generate</entry>
        <entry key="GenerateConfigsHelpHeader">Generate Configurations</entry>
        <entry key="GenerateConfigsHelpText">Generate variant configurations for model\n\n1. Click "Generate Configurations" in the toolstrip.\n\n2. The "Configure Control Variables" pane is populated with the list of variant control names and values (including enumerations).\n\n3. You can specify options for generating:\n\ni. Specify "Precondition" as a cell array of conditions to limit the configurations that are generated (e.g. '{'''engine==1'', ''transmission==1'''}').\n\nii. Use the "Generate Based on Validity" option to generate only valid (successful model compile) or all configurations. Non-unique configurations may occur due to the structure of the model.\n\niii. Specify a Simulink.VariantConfigurationData object name in the "Exclude Configuration Data Object" text box to exclude its configurations.\n\niv. Use Up/Down arrow keys in "Configure Control Variables" pane to order the control variable variations in the generated configurations.\n\n4. Click Generate to populate the Generated Configurations pane with a table of computed configurations. Double-click a configuration name to edit it. Invalid configurations are indicated in red.\n\n5. In the Generated Results section of the toolstrip\ni. Select "Add Precondition as Constraint" to add any nonempty preconditions as global constraints.\nii. Click "Add Selected Configurations" to add the generated configurations to the existing list of configurations present in the Variant Manager tab.\n\nTo return to the Variant Manager tab, click the "Close Generate Configurations" button.</entry>
        <entry key="GenerateConfigsHelpDescription1">Generate variant configurations for model.</entry>
        <entry key="GenerateConfigsHelpDescription2">To return to the Variant Manager tab, click {0}.</entry>
        <entry key="GenerateConfigsHelpStep1">Click {0} in the toolstrip.</entry>
        <entry key="GenerateConfigsHelpStep2">The "Configure Control Variables" pane is populated with the list of variant control names and values (including enumerations).</entry>
        <entry key="GenerateConfigsHelpStep3"><![CDATA[You can specify these options:\n\n<ol type="i"><li>Specify a cell array of conditions in the {0} text box to limit the configurations that are generated (e.g. '{'''engine==1'', ''transmission==1'''}').<li>Use the {1} list to choose whether to generate only valid configurations (for which the model compiles successfully) or all configurations. Non-unique configurations may occur due to the structure of the model.<li>Optionally, specify a Simulink.VariantConfigurationData object name in the {2} text box to exclude configurations present in this object from the result.<li>Use Up/Down arrow buttons in the "Configure Control Variables" pane to order the control variable variations in the generated configurations.</ol>]]></entry>
        <entry key="GenerateConfigsHelpStep4">Click {0} to populate the Generated Configurations pane with a table of computed configurations. Double-click a configuration name to edit it. Invalid configurations are indicated in red.\n\n</entry>
        <entry key="GenerateConfigsHelpStep5"><![CDATA[In the Generated Results section of the toolstrip:\n\n<ol type="i"><li>Select the {0} check box to add any nonempty preconditions as global constraints.<li>Click {1} to add the generated configurations to the existing list of configurations present in the Variant Manager tab.</ol>]]></entry>

        <entry key="ComposeComponentsHelpTabLabel">Compose</entry>
        <entry key="ComposeComponentsHelpHeader">Compose Configurations</entry>
        <entry key="ComposeComponentsHelpText">Compose configurations for a top model from reference models.\n\nYour model might consist of referenced models that already have variant configurations. You can define variant configurations for your top model by using the Component Configurations window to select from referenced model configurations. For example, your top model Vehicle might have a referenced model Chassis with variant configurations.\n\n1. In the Variant Configurations pane of the Variant Manager tab, click the Component Configurations button for the selected configuration to launch the Component Configurations tab in the main hierarchy view.\n\n2. In the Component Configurations tab, you can identify a referenced model that has existing variant configurations by a configuration icon.\n\n3. Click the referenced model row to select from a drop-down list of available referenced model variant configurations. The corresponding control variable values in the top model configuration are assigned these values.</entry>
        <entry key="ComposeComponentsHelpDescription">Compose configurations for a top model from referenced model configurations.\n\nYour model might consist of referenced models that already have variant configurations. For example, your top model Vehicle might have a referenced model Chassis with variant configurations. You can use a variant configuration from a referenced model to set up the variant configuration for a top-level model from the Component Configurations window.</entry>
        <entry key="ComposeComponentsHelpStep1">In the Configurations tab, click {0} for the selected configuration to launch the Component Configurations tab in the model hierarchy pane.</entry>
        <entry key="ComposeComponentsHelpStep2">In the Component Configurations tab, a configuration icon {0} identifies a referenced model that has existing variant configurations.</entry>
        <entry key="ComposeComponentsHelpStep3">You can select from a drop-down list of available referenced model variant configurations to add the control variables in that configuration to the top model configuration.</entry>

        <entry key="ReduceHelpTabLabel">Reduce</entry>
        <entry key="ReduceHelpHeader">Variant Reducer</entry>
        <entry key="ReduceHelpText">Reduce variant model hierarchy including data dependencies.\n\nUse Variant Reducer to generate a simplified, standalone model hierarchy with a subset of variant configurations.\n\n1. Click Variant Reducer in the toolstrip in the Variant Manager tab to open the Variant Reducer tab.\n\n2. Specify settings in the Mode and Options sections of the Variant Reducer toolstrip; point to the options for tooltips.\n\nTo return to the Variant Manager tab, click the Close Variant Reducer button.</entry>
        <entry key="ReduceHelpDescription1">Reduce variant model hierarchy including data dependencies.\n\nUse Variant Reducer to generate a simplified, standalone model hierarchy with a subset of variant configurations.</entry>
        <entry key="ReduceHelpDescription2">To return to the Variant Manager tab, click {0}.</entry>
        <entry key="ReduceHelpStep1">Click {0} in the toolstrip in the Variant Manager tab to open the Variant Reducer tab.</entry>
        <entry key="ReduceHelpStep2">Specify settings in the Mode and Options sections of the Variant Reducer tab in the toolstrip.</entry>
        <entry key="ReduceHelpStep3">Click {0} to reduce the model.</entry>

        <entry key="AnalyzeHelpTabLabel">Analyze</entry>
        <entry key="AnalyzeHelpHeader">Variant Analyzer</entry>
        <entry key="AnalyzeHelpText">Analyze model across variant configurations.\n\nUse the Variant Analyzer to perform an N-way diff across configurations of a model for activeness of blocks.\n\n1. Click Variant Analyzer button in the toolstrip in the Variant Manager tab to open the Variant Analyzer tab.\n\n2. Select from existing variant configurations or set the Analysis mode to "Specify variant control values" to define groups with different variant control values.\n\n3. Click Analyze Model to produce a Variant Analyzer results window containing a table that shows the activeness of all blocks in a model hierarchy across the selected configurations or variable groups.\n\nTo return to the Variant Manager tab, click the Close Variant Analyzer button.</entry>
        <entry key="AnalyzeHelpDescription1">Analyze model across variant configurations.\n\nUse the Variant Analyzer to perform an N-way diff across configurations of a model for activeness of blocks.</entry>
        <entry key="AnalyzeHelpDescription2">To return to the Variant Manager tab, click {0}.</entry>
        <entry key="AnalyzeHelpStep1">Click {0} in the toolstrip in the Variant Manager tab to open the Variant Analyzer tab.</entry>
        <entry key="AnalyzeHelpStep2">Select from existing variant configurations or choose the "Specify variant control values" option in the {0} list to define groups with different variant control values.</entry>
        <entry key="AnalyzeHelpStep3">Click {0} to produce a Variant Analyzer results window containing a table that shows the activeness of all blocks in a model hierarchy across the selected configurations or variable groups.</entry>

        <entry key="TrainingVideos">Training Videos</entry>

        <!-- Import control variables -->
        <entry key="ImportVarCtrlStage">Import control variables</entry>
        <entry key="ImportVCtrlStandaloneVMWarningDialogTitle">Import Variant Controls</entry>

        <!-- Import Variant Configuration Object -->
        <entry key="VarConfigObjStage">Variant configuration object</entry>
        <entry key="BaseWorkspace">base workspace</entry>
        <entry key="DataDictionary">data dictionary</entry>
        <entry key="ModelWorkspace">model workspace</entry>
        <entry key="MaskWorkspace">mask workspace</entry>
        <entry key="MessageInfoLoadedVarConfigObjFromWorkspace">Loaded variant configuration object ''{0}'' from ''{1}''.</entry>

        <!-- Export Variant Configuration Object -->
        <entry key="MessageInfoSaveVarConfigObj">Successfully generated ''{0}'' with variant configuration object ''{1}''</entry>
        <entry key="MessageInfoVarConfigObjToWorkspace">Successfully applied changes to variant configuration ''{0}'' in ''{1}''.</entry>
        <entry key="SaveModelSaveVCDOChanges">Save ''{0}'' to save ''{1}'' as the variant configuration data object for the model.</entry>

        <!-- Stages for hierarchical view Row -->
        <entry key ="EditVariantControl">Edit variant control for ''{0}''</entry>
        <entry key ="EditVariantCondition">Edit variant condition for ''{0}''</entry>
        <entry key ="ExpandHierarchyRow">Loading model references or libraries upon expanding ''{0}''</entry>
        <entry key ="CompConfigChangeStage">Changing component configuration of ''{0}'' to ''{1}''</entry>

        <!-- Validation Summary Panel -->
        <entry key="SummaryTitle" note="Log here means logged diagnostics">Log</entry>
        <entry key="DiagnosticsTitle">Diagnostics</entry>
        <entry key="SummaryDatasource">Data source</entry>
        <entry key="ActivationStage">Activating variant configuration using ''{0}''</entry>
        <entry key="MessageInvalidconstraintname">Name of constraint must be unique and valid MATLAB name.</entry>
        <entry key="MessageEmptyconstraintname">Name of constraint must be nonempty.</entry>
        <entry key="MessageEmptyconstraintvalue">Condition of a constraint must be nonempty.</entry>
        <entry key="MessageInvalidconfigname">Name of configuration must be unique and valid MATLAB name.</entry>
        <entry key="MessageEmptyconfigname">Name of configuration must be nonempty.</entry>
        <entry key="MessageEmptyVarName">Name of control variable must be nonempty.</entry>
        <entry key="MessageEmptyActivationTime">Activation time of control variable must be nonempty.</entry>
        <entry key="MessageInvalidVarName">Name of control variable must be unique and valid MATLAB name.</entry>
        <entry key="MessageInvalidVarValue">Invalid value specified for control variable.</entry>
        <entry key="MessageInvalidVarActivationTime">Invalid activation time specified for control variable.</entry>
        <entry key="MessageInvalidVarSource">Invalid source specified for control variable.</entry>
        <entry key="MessageInvalidParamVarValue">Invalid value specified for control variable.\nThe value must either be a numeric value or a valid MATLAB expression preceding with an "=".</entry>
        <entry key="MessageInvalidvarvaluetoggle">Unable to toggle type of the control variable as assigning this value to the 'Value' property of a Simulink.Parameter object is not supported.</entry>
        <entry key="MessageInvalidvarvaluetoggleslVarCtrl">Unable to toggle type of the control variable as assigning this value to the 'Value' property of a Simulink.VariantControl object is not supported.</entry>
        <entry key="MessageEmptyVarValue">Value of a control variable must be nonempty.</entry>
        <entry key="MessageInvalidmodelname">Name of model must be unique and valid MATLAB name.</entry>
        <entry key="MessageEmptymodelname">Name of model must be nonempty.</entry>

        <entry key="MessageClearassociation">Name of Simulink.VariantConfigurationData object is set to empty. Model will be disassociated with the variant configuration object if exported.</entry>

        <entry key="MessageVCDONameSetToEmpty">Name of Simulink.VariantConfigurationData object is set to empty. Model will be disassociated with the variant configuration object if changes are applied.</entry>

        <entry key="MessageVariantcontrolInsidereadonlyhierarchyTooltip">Variant control is non-editable as the block is inside read-only subsystem hierarchy</entry>
        <entry key="MessageVariantcontrolInsidelockedsubsystemhierarchyTooltip">Variant control is non-editable as the block is inside locked subsystem reference hierarchy</entry>
        <entry key="MessageVariantcontrolInsidelinkedsubsystemhierarchyTooltip">Variant control is non-editable as the block is inside linked subsystem hierarchy</entry>
        <entry key="VASLabelModeVCTT">Variant condition for Variant Assembly Subsystem choice is derived from its 'VariantChoicesSpecifier' parameter</entry>
        <entry key="VASExpressionModeVCTT">Variant condition for Variant Assembly Subsystem choice is derived from its 'VariantControlVariable' and 'VariantChoicesEnumeration' parameters</entry>
        <entry key="MessageErroroneditingvariantcontrol">Error encountered on editing variant control </entry>
        <entry key="MessageErroroneditingvariantcondition">Error encountered on editing variant object condition</entry>
        <entry key="MessageErroronsetactivelabelmodechoice">Error encountered on setting Label mode active choice</entry>

        <entry key="MessageErrOpenmodel">Error encountered on opening model</entry>
        <entry key="MessageErrOpenhilightblock">Error encountered on opening and highlighting block</entry>
        <entry key="MessageCantExportEmptyNameVCDO">Unable to apply changes as name of Simulink.VariantConfigurationData object is empty. \nHowever, model will be disassociated with any variant configuration object.</entry>
        <entry key="MessageCantExportEmptyNameVCDOError">Unable to apply changes as name of Simulink.VariantConfigurationData object is empty. </entry>
        <entry key="MessageReloadEmptyVCDOError">Unable to reload variant configuration object as name of Simulink.VariantConfigurationData object is empty.</entry>
        <entry key="MessageNonVCDOVarExistsInGlobalWks">Variable ''{0}'' already exists in the workspace but is not a Simulink.VariantConfigurationData object. Click OK to overwrite the existing object.</entry>
        <entry key="VCDObjMissingInWks">Unable to reload variant configuration data object ''{0}'' because the object does not exist in the base workspace or data dictionary used by the model.</entry>

        <entry key="MessageExportconfigdatabeforeclose">Variant configuration object has unexported changes. Do you want to export?</entry>
        <entry key="MessageErroronopenblockparametersSelf">Error in opening block parameters</entry>
        <entry key="MessageErroronopenblockparametersParent">Error encountered on opening parent block parameters</entry>

        <entry key="MessageErroronopenchartparametersSelf">Error encountered on opening chart parameters</entry>
        <entry key="MessageErroronopenchartparametersParent">Error encountered on opening parent chart parameters</entry>

        <entry key="MessageInfoNovariables">No control variables found in model which can be imported.</entry>
        <entry key="MessageInfoNovariablesDataSource">Unable to find any Simulink.VariantControl variables in the data source for import.</entry>
        <entry key="MessageErrorImportVariables">Error encountered on importing control variables for model.</entry>
        <entry key="MessageImportVariablesFound">Control variables found and imported successfully.</entry>
        <entry key="MessageImportVariablesDefault">Control variables added with default values</entry>
        <entry key="MessageImportVariablesNone">No control variables found that can be imported.</entry>
        <entry key="MessageImportVariablesNotUpdated">Variant control variables with values already defined in the configuration were not overwritten.\nTo update the definition of these variables, delete them from the control variables table and import them again.\n''{0}''</entry>

        <entry key="MessageActivatingSubmodelFailed">Error(s) while activating submodel ''{0}''.</entry>

        <!-- Auto Generate Configurations-->
        <entry key="AutoGenConfigTabLabel">Generate Configurations</entry>
        <entry key="AutoGenConfigSetupSection">Setup</entry>
        <entry key="AutoGenConfigGenResultsSection">Generated Results</entry>
        <entry key="AutoGenConfigPredicateLabelText">Precondition to Apply </entry>
        <entry key="AutoGenConfigPredicateLabelTextTooltip">Generate configurations that satisfy specified precondition. Value must be a valid Boolean expression.</entry>
        <entry key="AutoGenConfigIgnoreConfigLabelText">Exclude Configuration Data Object </entry>
        <entry key="AutoGenConfigIgnoreConfigLabelTextTooltip">Ignore these configurations and constraints during generation. Value must be name of a Simulink.VariantConfigurationData object.</entry>

        <entry key="AutoGenConfigValidityComboBoxText">Generate Based on Validity </entry>
        <entry key="AutoGenConfigValidityComboBoxTextTooltip">Generate results based on validity of configurations</entry>

        <entry key="AutoGenConfigGenerateConfigsPushButtonText">Generate\nConfigurations</entry>
        <entry key="AutoGenConfigOpenGenerateConfigsPushButtonTextTooltip">Generate configurations and constraints for model</entry>
        <entry key="AutoGenConfigGenerateConfigsPushButtonTextTooltip">Generate configurations based on input specifications</entry>

        <entry key="AutoGenConfigGenerateConfigsClosePushButtonText">Close\nGenerate Configurations</entry>
        <entry key="AutoGenConfigGenerateConfigExitPushButtonTextTooltip">Exit Generate Configurations tab</entry>

        <entry key="AutoGenConfigResetConfigsPushButtonText">Reset</entry>
        <entry key="AutoGenConfigResetConfigsPushButtonTextTooltip">Revert unsaved changes in variant configuration data object, reset control variable values, and clear generated configurations.</entry>
        <entry key="AutoGenConfigAddSelectedConfigsPushButtonText">Add Selected\nConfigurations</entry>
        <entry key="AutoGenConfigAddSelectedConfigsPushButtonTextTooltip">Append selected configurations to the variant configuration data object for the model</entry>
        <entry key="AutoGenConfigAddPredicateCheckBoxText">Add Precondition as Constraint</entry>
        <entry key="AutoGenConfigAddPredicateCheckBoxTextTooltip">Append precondition as constraint while adding selected configurations</entry>

        <entry key="AutoGenConfigDataTypeColumnHeader">Data Type</entry>
        <entry key="AutoGenConfigValuesColumnHeader">Values</entry>
        <entry key="AutoGenConfigValidityStatusColumnHeader">Validity Status</entry>

        <entry key="AutoGenConfigureControlVariablesTitle">Configure Control Variables</entry>
        <entry key="AutoGeneratedConfigsTitle">Generated Configurations</entry>
        <!--Name of DDG components-->
        <entry key="AutoGenConfigureControlVariablesDDG" translate="false" note="TranslateFalseBatch;">ConfigureControlVariables</entry>
        <entry key="AutoGeneratedConfigsDDG" translate="false" note="TranslateFalseBatch;">GeneratedConfigurations</entry>

        <entry key="AutoGenConfigMoveUpButtonToolTip">Move selected control variable up</entry>
        <entry key="AutoGenConfigMoveDownButtonToolTip">Move selected control variable down</entry>

        <entry key="AutoGenConfigSelectAllButtonToolTip">Select all configurations</entry>
        <entry key="AutoGenConfigDeselectAllButtonToolTip">Deselect all configurations</entry>

        <entry key="AutoGenConfigWaitBarLabelText">Please wait while control variables are processed</entry>
        <entry key="AutoGenConfigSettingUpConfigCtrlVars">Populating control variables information in 'Configure Control Variables' pane.</entry>
        <entry key="AutoGenConfigGeneratedConfigsParamInfo">Generating configurations with parameters: ''{0}''.</entry>
        <entry key="AutoGenConfigGeneratedConfigsInfo">Number of generated configurations: {0}</entry>
        <entry key="AutoGenConfigAddConfigsInfo">Added {0} selected configurations to the Simulink.VariantConfigurationData of the model.</entry>
        <entry key="AutoGenConfigAddConstraintInfo">Added constraint ''{0}'' with condition ''{1}'' to the Simulink.VariantConfigurationData of the model.</entry>
        <entry key="AutoGenConfigReset">Completed reset of control variable values and cleared generated results.</entry>
        <entry key="AutoGenConfigRevertUnappliedVCDO">Reverted unsaved changes in the variant configuration data object.</entry>
        <entry key="AutoGenConfigPopulateCtrlVarsCancelled">Populating 'Configure Control Variables' pane cancelled.</entry>
        <entry key="ReducerSummaryDDGComp" translate="false" note="TranslateFalseBatch;">Variant Reducer Summary</entry>
        <!-- Diagnostic stages for auto generate configurations-->
        <entry key="LaunchGenerateConfigsDiagStage">Launch generate configurations</entry>
        <entry key="GenerateConfigsDiagStage">Generate configurations</entry>
        <entry key="AddSelectedConfigsDiagStage">Add selected configurations</entry>
        <entry key="ResetGeneratedConfigsDiagStage">Reset generated configurations</entry>
        <!-- Message to user -->
        <entry key="AutoGenConfigConfigNameAlreadyExist">Configuration with name ''{0}'' already exists.</entry>

        <entry key="VCDComposeConfigs">Compose configurations</entry>
        <entry key="VCDComposeConfigsBtnText">Compose\nconfigurations</entry>
        <entry key="VCDComposeConfigsBtnDesc">Compose top-level configurations using referenced component configurations</entry>
        <entry key="EditVCD">Edit ''{0}'' object</entry>

        <!-- Variant Parameter View-->
        <entry key="VParamsWithoutVariantBankObjects">Unable to display these variant parameters in the "Bank per Row" view because they are not associated with any Simulink.VariantBank objects:\n{0}</entry>
        <entry key="VariantParameterBankPlaceholderText">Model hierarchy does not contain any Simulink.VariantVariable objects associated with valid Simulink.VariantBank objects.</entry>
        <entry key="VParamsNotUsingBank">Variant parameters without a variant bank</entry>
        <entry key="VParamsNameCol">Parameter</entry>
        <entry key="VarUsageStage">Variable Usage</entry>
        <entry key="VBankNameCol">Bank</entry>
        <entry key="VarUsageNoVCtrls">Variable usage highlighting is off.</entry>
        <entry key="VarUsageForVCtrlHeader">Variable usage highlighting is enabled for the following variant control variables:</entry>
        <entry key="VarUsageForVCtrl">&#8226; {0} | {1}</entry>
        <entry key="VarUsageInViewHeader">Variant elements that use the selected variables are highlighted in these tabs:</entry>
        <entry key="VarUsageInViewCB"><![CDATA[&#8226; <a href="matlab:slvariants.internal.manager.ui.mdlhier.setCurrentTab({0}, {1})">{2}</a>]]></entry>
        <entry key="VarUsageNotInViews">No variant elements currently use the selected variant control variables.</entry>
        <entry key="MultipleInconsistentDefinitionsForVBank">Found multiple inconsistent definitions for Simulink.VariantBank ''{0}'' associated with Simulink.VariantVariable ''{1}''.</entry>
    </message>
    <!-- Messages in this file were moved from RES_VariantManger.properties and the translated strings are available with simulink_java component -->
</rsccat>


<!-- LocalWords:  unexported Configs AZVC sldd Analyse vcd Resetted plnt -->
