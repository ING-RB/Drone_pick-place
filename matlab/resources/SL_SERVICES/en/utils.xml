<?xml version="1.0" encoding="UTF-8" ?>
<rsccat version="1.0" locale="en_US" product="SL_SERVICES">
  <message>
    <entry key="CausedBy">Caused by:</entry>
    <entry key="MemoryAllocationError">Memory allocation error.</entry>
    <entry key="TooManyErrorsErr">Too many errors.</entry>
    <entry key="UNKNOWN_DASTUDIO_ID">DAStudio ID ''{0}'' couldn't be found.</entry>
    <entry key="UNKNOWN_COMPONENT_ID" translate="false" note="TranslateFalseBatch;">MATLAB</entry>
    <entry key="MULTIPLE_ERROR_ID" translate="false" note="TranslateFalseBatch;">MultipleErrors</entry>
    <entry key="CNTRL_C_INTERRUPTION">Program interruption (Ctrl-C) has been detected.</entry>
    <entry key="PROGRAM_INTERRUPTION">Program interruption has been detected.</entry>
    <entry key="UNEXPECTED_EXCEPTION">Unexpected exception ({0}) was caught.</entry>
    <entry key="STD_EXCEPTION">STD exception ''{0}'': ''{1}'' was caught.</entry>
    <entry key="STD_NESTED_EXCEPTION">{0}</entry>
    <entry key="DEBUG_QUIT_EXCEPTION">debug session was interrupted.</entry>
    <entry key="DEBUG_QUIT_EXCEPTION0">debug session was interrupted.</entry>
    <entry key="MultipleErrorsMessagePreamble">Error due to multiple causes.</entry>
    <entry key="UNKNOWN_ID_ID" translate="false">UNDEFINED_ID</entry>
    <entry key="InvalidArgument">Arguments provided to the function are not valid</entry>
    <entry key="InvalidHookName">Unknown hook ''{0}''. Either no such hook is registered or the module registering the hook is currently not loaded.</entry>
    <entry key="InvalidCallback">Callback function specified does not exist in slsvInternal</entry>
    <entry key="InvNumberOfOutputArguments" translate="false">The number of output argument(s) specified are not valid.</entry>
    <entry key="InvNumberOfInputArguments" translate="false">The number of input argument(s) specified are not valid.</entry>
    <entry key="NullStackFromMSLException" translate="false">mxArray argument is NULL or doesn't contain MCOS object.</entry>
    <entry key="EmptyStackFromMSLException" translate="false">mxArray argument specified is empty.</entry>
    <entry key="NoMSLExceptionData" translate="false">There exists no MSLExceptionData pointer.</entry>
    <entry key="MessageCreation">Message ''{0}'' can not be created: {1}. </entry>
    <entry key="TestUnicode" translate="false" note="TranslateFalseBatch;">{0}</entry>
    <entry key="HotlinkTemplate" translate="false" note="TranslateFalseBatch;"><![CDATA[<a href="{0}">{1}</a>]]></entry>
    <entry key="HotlinkTemplateArg" translate="false" note="TranslateFalseBatch;"><![CDATA[<a href="{0}({1});">{2}</a>]]></entry>
    <entry key="HotlinkTemplateStyle" translate="false" note="TranslateFalseBatch;"><![CDATA[<a href="{0}" style="{2}">{1}</a>]]></entry>
    <entry key="TestSerializationArgs">First numeric argument ''{0,number,integer}'' second encoded argument ''{1}''</entry>
    <entry key="InvRetForFeature">Invalid number of return values for call to ''slsvInternal'' with the ''slsvFeatureGateway'' option.</entry>
    <entry key="InvCallForFeature">Invalid call to ''slsvInternal'' with the ''slsvFeatureGateway'' option. This option requires a valid string suboption.</entry>
    <entry key="InvOptionForFeatureGetSet">Invalid call to get/set feature.</entry>
    <entry key="InvCallForFeatureName">Invalid feature ''{0}''.</entry>
    <entry key="InvValForFeatureSet">Integer scalar value must be used to turn on/off a feature.</entry>
    <entry key="InvOptionForFeatureStats">Invalid additional input arguments provided for sub-option ''stats'' in call to ''slsvInternal'' with the ''slsvFeatureGateway'' option. No additional arguments are expected.</entry>
    <entry key="InterpreterUnavailable">MATLAB interpreter is not available (''{0}'')</entry>
    <entry key="ShutDown" translate="false" note="TranslateFalseBatch;">{0}: {1}</entry>
    <entry key="ErrorNamedWarningListener">Can't get or create named warning listener ''{0}''.</entry>
    <entry key="NamedWarningListenerAlreadyExist">Named warning listener ''{0}'' already exists.</entry>
    <entry key="ClassNotFound">Couldn''t find class "{0}".</entry>
    <entry key="InternalFailure">Internal failure: "{0}".</entry>
    <entry key="SQLITE2TABLE">File ''{0}'' or table ''{1}'' weren't found</entry>
    <entry key="PRINTFWRAPPER" translate="false" note="TranslateFalseBatch;">{0}</entry>
    <entry key="CAUSED_BY"><![CDATA[&nbsp;Caused by:]]></entry>
    <entry key="SECOND_ARGUMENT_SHOULD_BE_MESSAGE">Second argument should be a message</entry>
    <!--Note to translator: space between holes should be preserved, unless language doesn't allow it (e.g. Chinese) -->
    <entry key="Concatenate" translate="false" note="TranslateFalseBatch;">{0} {1}</entry>

    <entry key="ActionValidationError" translate="false">Diagnostic Action validation error: ''{0}''</entry>
    <entry key="ActionXMLParserProblem" translate="false">XML parser error: ''{0}'' line: {1,number,integer}:{2,number,integer}</entry>
    <entry key="NoActionInBaseMsgID" translate="false">There is no action in XML catalog entry.</entry>
    <entry key="RuntimeValidationActionsError" translate="false">Runtime validation error.Original id: ''{0}''</entry>


    <entry key="TEST_FIXIT1" translate="false"><![CDATA[Here is a way to fix it: <a href="matlab:open_system(''{0}'')"></a>]]></entry>
    <entry key="TEST_SUGGEST1"  translate="false"><![CDATA[We recommend to use the following one way to deal with that problem: <a href="matlab:open_system(''{0}'')"></a>]]></entry>
    <entry key="TEST_FIXIT2" translate="false"><![CDATA[Here is a second way to fix it: <a href="matlab:load_system(''{0}'')"></a>]]></entry>
    <entry key="TEST_SUGGEST2"  translate="false"><![CDATA[We recommend to use the following second way to deal with that problem: <a href="matlab:load_system(''{0}'')"></a>]]></entry>
    <entry key="TEST_SUPPRESS" translate="false"><![CDATA[Suppress that diagnostic <a href="matlab:suppress(''{0}'')"></a>]]></entry>

    <entry key="DEFAULT_SUPPRESS" translate="false"><![CDATA[<a href="matlab:suppress"></a>]]></entry>
    <entry key="EMBEDDED____ACTION____WRAPPER" translate="false">{0}{1}</entry>
    <entry key="TEST_ACTIONS" translate="false">Variant block {0} has "Generate preprocessor conditionals" is set to "on" and one of its port has been overridden.
        <![CDATA[
            <actions exclusiveFixIts="no">
                <action type="fixit" btn="apply">
                    <cmd>vsfixutil(''setGPC'',''{1}'',''{0}'')</cmd>
                    <txt>You can set "Generate preprocessor conditionals" to "off" to eliminate the error</txt>
                </action>
                <action type="suggestion">
                    <cmd>vsfixutil(''disableOverride'',''{0}'')</cmd>
                    <txt>You can disable the override to eliminate the error</txt>
                </action>
                <action type="fixit">
                    <txt>Empty fixit</txt>
                </action>
                <action type="help">
                    <cmd>vsfixutil('help','override')</cmd>
                    <txt>For more information see override help</txt>
                </action>
            </actions>
        ]]>
    </entry>    
     <entry key="SIMPLE_TEST_ACTIONS" translate="false">Variant block {0} has "Generate preprocessor conditionals" is set to "on" and one of its port has been overridden.
        <![CDATA[
            <actions exclusiveFixIts="no">
                <action type="fixit" id="first_fixit" btn="apply"> 
                    <cmd>vsfixutil(''setGPC'',''{1}'',''{0}'')</cmd>
                    <txt>You can set "Generate preprocessor conditionals" to "off" to eliminate the error</txt>
                </action>
                <action type="suggestion" id="first_suggestion" retvalue="false">
                    <cmd>vsfixutil(''disableOverride'',''{0}'')</cmd>
                    <txt>You can disable the override to eliminate the error</txt>
                </action>
                <action type="fixit" id="second_fixit" enabled="false">
                    <cmd>vsfixutil(''disableOverride'',''{0}'')</cmd>
                    <txt>another fixit</txt>
                </action>
            </actions>
        ]]>
    </entry>    
   <entry key="TEST_ACTIONS_PLT" translate="false">【Variant block {0} has "Generate preprocessor conditionals" is set to "on" and one of its port has been overridden.◇
        ◇
            &lt;actions exclusiveFixIts="no"&gt;◇
                &lt;action type="fixit" btn="apply"&gt;◇
                    &lt;cmd&gt;vsfixutil(''setGPC'',''{1}'',''{0}'')&lt;/cmd&gt;◇
                    &lt;txt&gt;You can set "Generate preprocessor conditionals" to "off" to eliminate the error&lt;/txt&gt;◇
                &lt;/action&gt;◇
                &lt;action type="suggestion"&gt;◇
                    &lt;cmd&gt;vsfixutil(''disableOverride'',''{0}'')&lt;/cmd&gt;◇
                    &lt;txt&gt;You can disable the override to eliminate the error&lt;/txt&gt;◇
                &lt;/action&gt;◇
                &lt;action type="fixit"&gt;◇
                    &lt;txt&gt;Empty fixit&lt;/txt&gt;◇
                &lt;/action&gt;◇
                &lt;action type="help"&gt;◇
                    &lt;cmd&gt;vsfixutil('help','override')&lt;/cmd&gt;◇
                    &lt;txt&gt;For more information see override help&lt;/txt&gt;◇
                &lt;/action&gt;◇
            &lt;/actions&gt;◇
        ◇
    ◇】</entry>
    <entry key="TEST_ACTIONS2" translate="false">Variant block {0} has "Generate preprocessor conditionals" is set to "on" and one of its port has been overridden.
        <![CDATA[
            <actions exclusiveFixIts="no">
                <action type="fixit">
                    <cmd>vsfixutil(''setGPC'',''{1}'',''{0}'')</cmd>
                    <txt>You can set "Generate preprocessor conditionals" to "off" to eliminate the error</txt>
                </action>
                <action type="fixit">
                    <cmd>vsfixutil(''disableOverride'',''{0}'', {2,number,integer})</cmd>
                    <txt>You can disable the override to eliminate the error</txt>
                </action>
                <action type="suppression">
                    <txt>Click on the following link:</txt>
                </action>
            </actions>
        ]]>
    </entry>    
    <entry key="TEST_ACTIONS_WITH_DOC" translate="false">Variant block {0} has "Generate preprocessor conditionals" is set to "on" and one of its port has been overridden.
        <![CDATA[
            <actions exclusiveFixIts="no">
                <action id="first_fixit" type="fixit">
                    <cmd>vsfixutil(''setGPC'',''{1}'',''{0}'')</cmd>
                    <txt>You can set "Generate preprocessor conditionals" to "off" to eliminate the error</txt>
                </action>
                <action id="second_fixit" type="fixit">
                    <cmd>vsfixutil(''disableOverride'',''{0}'', {2,number,integer})</cmd>
                    <txt>You can disable the override to eliminate the error</txt>
                </action>
                <action id="first_suggestion" type="suggestion">
                    <txt>If the destination block is a bus-capable block, ensure that the block configuration and its input signal(s) meet the requirements for bus support. Please see Simulink <sldiag objui="doc" objparam="{3}">documentation</sldiag> for further information on composite(i.e bus) signals and their proper usage.</txt>
                </action>
            </actions>
        ]]>
    </entry>    

    <entry key="ParameterTestPoint" translate="false">Component data error: {0}</entry>
    <entry key="ACTION_SUPPRESS">Suppress future instances of this diagnostic from this source.</entry>
    <entry key="Choices">Choices are</entry>
    <entry key="TypeChoice">Type your choice:</entry>
    <entry key="InvalidChoice">Invalid Choice. Please select one of the listed choices</entry>
    <entry key="InputMissing">Missing input. Please enter an input value</entry>
    <entry key="FixedString" note="verb past tense of fix">Fixed</entry>
    <entry key="PREVIOUS_PARAM_VALUE">\nParameter ''{0}'' of ''{1}'' changed from ''{2}'' to ''{3}''.</entry>
    <entry key="ShowStack" note="Hyperlink message to inform user of stack">Show complete stack trace</entry>
    <entry key="DisplayStack" note="message string before displaying stack">\nDisplaying stack trace:\n</entry>
    <entry key="ErrorUsing" note="error using a particular function">Error using</entry>
    <entry key="ErrorInLine" note="In a particular function and line">In {0}</entry>	

    <entry key="TEST_PARSE_ACTION1" translate="true">Action1 without arguments</entry>
    <entry key="TEST_PARSE_ACTION2" translate="true">Action2 with two arguments ''{0}'' and ''{1}''</entry>
    <entry key="TEST_PARSE_ACTION3" translate="true">Action3 with one argument: {0}</entry>

    <entry key="TEST_PARSE_ACTIONS" translate="true" note="content in actions element shouldn't be translated">
        Test action parse, Arg1: {0}; Arg2: {1}; Arg3: {2}
        <![CDATA[
            <actions exclusiveFixIts="no" order="block">
                <action type="fixit" id="parameters_fixit">
                    <params>
                        <prm><obj>{0}</obj><name>Gain</name><val>{2}</val></prm>
                        <prm><obj>{0}</obj><name>Gain</name><val>{2}</val></prm>
                    </params>
                    <msg id="SL_SERVICES:utils:TEST_PARSE_ACTION1"></msg>    
                </action>
                <action type="suggestion">
                    <cmd>load_system(''{0}'');configset.highlightParameter(''{0}'','SolverType');</cmd>        
                    <msg id="SL_SERVICES:utils:TEST_PARSE_ACTION1"></msg>    
                </action>
                <action type="suggestion">
                    <cmd>load_system(''{0}'');configset.highlightParameter(''{0}'',''SystemTargetFile'');</cmd>
                    <msg id="SL_SERVICES:utils:TEST_PARSE_ACTION2"><arg>{0}</arg><arg>{1}</arg></msg>    
                </action>
                <action type="suggestion">
                    <cmd>coder.internal.wizard.slcoderWizard(''{0}'', ''StartWithError'')</cmd>
                    <msg id="SL_SERVICES:utils:TEST_PARSE_ACTION3"><arg>{2}</arg></msg>    
                </action>
                <action type="suggestion" btn="apply" retvalue="false">
                    <cmd>coder.internal.wizard.slcoderWizard(''{0}'', ''StartWithError'')</cmd>
                    <txt>Good Old Action with 2 arguments: ''{0}'' and ''{2}''</txt>
                </action>
                <action type="suggestion" btn="none">        
                    <txt>no callback needed, just advice</txt>
                </action>
            </actions> 
        ]]>
    </entry>
    <entry key="TEST_CUSTOM_HOLE" translate="false">Here is a custom hlink hole: {0_HLink}.</entry>
    <entry key="TEST_CUSTOM_DOUBLE_HOLE" translate="false">Here is a custom double hole: {0_Double}.</entry>
    <entry key="TEST_CUSTOM_DOUBLE_HOLE_MANY" translate="false">Here is a custom double hole: {0_Double} and {1_Double} and {2_Double}.</entry>
    <entry key="testErrorId" translate="false" note="TranslateFalseBatch;">{0}: {1,number,integer}: {2,number,integer}: {3,number,integer}: {4,number,integer}: {5,number,integer}: {6,number,integer}</entry>
    <entry key="TEST_ACTIONS_CUSTOM_HOLE" translate="false">
        Here is\n
        a custom hlink hole: {0_HLink}\n
        and another hlink hole {1_HLink}\n
        and with double hole {3_Double}.\n
        and with yet another double hole {4_Double}.
        <![CDATA[
            <actions exclusiveFixIts="no" order="block">
                <action type="fixit" id="fixit_set_param">
                    <cmd>set_param(''{1_HLink}'', ''{2}'', ''{3_Double}'')</cmd>
                    <txt>fixit with set_param: {0_HLink} </txt>
                </action>
            </actions> 
        ]]>
   </entry>

    <entry key="TEST_SIMPLE_ACTIONS_WITH_INTERACTIVE_ARGS" translate="false">
        Simple actions with interactive arguments ''{0}''.'
        <![CDATA[
            <actions exclusiveFixIts="yes">
                <action id="fixit_second" type="fixit">
                    <cmd>slprivate(''variantfixes'',''CodeVariantConfigExternalMode'',''{0}'', ''__ARG1__'')</cmd>
                    <cargs>
                        <carg translate="false" name="__ARG1__" type="menu">
                            <txt_prompt>Available solvers</txt_prompt>
                            <def_cmd>matlab:get_default_values_test("ode4")</def_cmd>
                            <enum>ode2</enum>
                            <enum>ode23</enum>
                            <enum>ode4</enum>
                            <enum>ode45</enum>
                        </carg>
                    </cargs>
                    <txt>To disable preprocessor conditionals (fixit 2). ''{0}''</txt>
                </action>
            </actions>
        ]]>
    </entry>

    <entry key="TEST_ACTIONS_WITH_INTERACTIVE_ARGS" translate="false">
        You have specified to generate preprocessor conditionals for one or more Variant blocks with  ''ExternalMode'' as the data exchange mode. Preprocessor conditionals are not supported when data exchange is set to ''External mode''. ''{0}''.'
        <![CDATA[
            <actions exclusiveFixIts="yes">
                <action type="fixit" id="first_fixit" retvalue="false">
                    <cmd>''hello''</cmd>
                    <txt>To disable preprocessor conditionals (fixit 1).</txt>
                </action>
                <action id="suggestion_first" type="suggestion">
                    <cmd>slprivate(''variantfixes'',''CodeVariantConfigExternalMode'',''__ARG1__'', ''__ARG2__'')</cmd>
                    <cargs>
                        <carg name="__ARG1__" type="text">
                            <txt_prompt>Text argument for the fix</txt_prompt>
                            <def_cmd>matlab:get_default_values_test(''hello world!'')</def_cmd>
                        </carg>
                        <carg name="__ARG2__" type="menu">
                            <txt_prompt>Popup argument for the fix</txt_prompt>
                            <def_cmd>matlab:get_default_values_test(''{1}'')</def_cmd>
                            <enum_cmd>get_enum_values_test("Condition 1", ''{1}'', {2,number,integer})</enum_cmd>
                        </carg>
                    </cargs>
                    <txt>To disable preprocessor conditionals (suggestion 1).</txt>
                </action>
                <action id="fixit_second" type="fixit">
                    <cmd>slprivate(''variantfixes'',''CodeVariantConfigExternalMode'',''{0}'', ''__ARG1__'')</cmd>
                    <cargs>
                        <carg translate="false" name="__ARG1__" type="menu">
                            <txt_prompt>Available solvers</txt_prompt>
                            <def_cmd>matlab:get_default_values_test("ode4")</def_cmd>
                            <enum>ode2</enum>
                            <enum>ode23</enum>
                            <enum>ode4</enum>
                            <enum>ode45</enum>
                        </carg>
                    </cargs>
                    <txt>To disable preprocessor conditionals (fixit 2). ''{0}''</txt>
                </action>
            </actions>
        ]]>
    </entry>
    <entry key="TEST_SET_PARAM_ACTION" translate="false" note="TranslateFalseBatch;">
        test action with set_param callback
        <![CDATA[
            <actions exclusiveFixIts="yes">
                <action type="fixit" id="fixit_set_param">
                    <cmd>set_param(''{0}'', ''Gain'', ''2'')</cmd>
                    <txt>fixit with set_param</txt>
                </action>
                <action_catalog id="SL_SERVICES:utils:TEST_REUSE_ACTION" ids="suggestion_set_param_2, fixit_set_param_2, suggestion_set_param_1"><arg>{0}</arg><arg>{1}</arg></action_catalog>    
                <action_catalog id="SL_SERVICES:utils:TEST_REUSE_ACTION_SG2"><arg>{0}</arg><arg>{1}</arg></action_catalog>      
                <action_catalog id="SL_SERVICES:utils:TEST_REUSE_ACTION_FIX2"><arg>{0}</arg><arg>{1}</arg></action_catalog>      
                <action_catalog id="SL_SERVICES:utils:TEST_REUSE_ACTION_SG1"><arg>{0}</arg><arg>{1}</arg></action_catalog>      
            </actions>
        ]]>
    </entry>
    <entry key="TEST_CHECKACTION_ENABLING" translate="false" note="TranslateFalseBatch;">
        test action with set_param callback
        <![CDATA[
            <actions exclusiveFixIts="yes" enabled="false">
                <action type="fixit" id="fixit_set_param" enabled="true">
                    <cmd>set_param(''{0}'', ''Gain'', ''2'')</cmd>
                    <txt>fixit with set_param</txt>
                </action>
                <action_catalog id="SL_SERVICES:utils:TEST_REUSE_ACTION" ids="suggestion_set_param_2, fixit_set_param_2, suggestion_set_param_1"><arg>{0}</arg><arg>{1}</arg></action_catalog>    
                <action_catalog id="SL_SERVICES:utils:TEST_REUSE_ACTION_SG2"><arg>{0}</arg><arg>{1}</arg></action_catalog>      
                <action_catalog enabled="true" id="SL_SERVICES:utils:TEST_REUSE_ACTION_FIX2"><arg>{0}</arg><arg>{1}</arg></action_catalog>      
                <action_catalog enabled="false" id="SL_SERVICES:utils:TEST_REUSE_ACTION_SG1_ENABLING"><arg>{0}</arg><arg>{1}</arg></action_catalog>      
            </actions>
        ]]>
    </entry>
    <entry key="TEST_SET_PARAM_ACTION_2" translate="false" note="TranslateFalseBatch;">
        test action with set_param callback
        <![CDATA[
            <actions exclusiveFixIts="yes">
                <action type="fixit" id="fixit_set_param">
                    <cmd>set_param(''{0}'', ''Gain'', ''2'')</cmd>
                    <txt>fixit with set_param</txt>
                </action>
                <action_catalog id="SL_SERVICES:utils:TEST_REUSE_ACTION" ids=" {2}, fixit_set_param_2, {3} "><arg>{0}</arg><arg>{1}</arg></action_catalog>    
            </actions>
        ]]>
    </entry>
     <entry key="TEST_SET_PARAM_ACTION_4" translate="false" note="TranslateFalseBatch;">
        test action with set_param callback
        <![CDATA[
            <actions exclusiveFixIts="yes">
                <action type="fixit" id="fixit_set_param">
                    <cmd>set_param(''{0}'', ''Gain'', ''1'')</cmd>
                    <txt>fixit with set_param</txt>
                </action>
                <action_catalog id="SL_SERVICES:utils:TEST_REUSE_ACTION" ids="{1}"></action_catalog>    
            </actions>
        ]]>
    </entry>
    <entry key="TEST_SET_PARAM_ACTION_3" translate="false" note="TranslateFalseBatch;">
        test action with set_param callback
        <![CDATA[
             <actions exclusiveFixIts="yes">
                <action type="fixit" id="fixit_set_param">
                    <cmd>set_param(''{0}'', ''Gain'', ''2'')</cmd>
                    <txt>fixit with set_param</txt>
                </action>
            </actions>
        ]]>
    </entry>
    <entry key="TEST_REUSE_ACTION" translate="true">
        <![CDATA[
             <actions>
                <action type="fixit" id="fixit_set_param_2">
                    <cmd>set_param(''{0}'', ''Gain'', ''{1}'')</cmd>
                    <txt>ACTION from catalog: fixit with set_param</txt>
                </action>
                <action type="suggestion" id="suggestion_set_param_1">
                    <cmd>set_param(''{0}'', ''Gain'', ''{1}'')</cmd>
                    <txt>ACTION from catalog: suggestion(1) with set_param</txt>
                </action>
                 <action type="suggestion" id="suggestion_set_param_2">
                    <cmd>set_param(''{0}'', ''Gain'', ''{1}'')</cmd>
                    <txt>ACTION from catalog: suggestion(2) with set_param</txt>
                </action>
           </actions>
       ]]>
    </entry>
     <entry key="TEST_REUSE_ACTION_FIX2" translate="true">
        <![CDATA[
             <actions>
                <action type="fixit" id="fixit_set_param_2">
                    <cmd>set_param(''{0}'', ''Gain'', ''{1}'')</cmd>
                    <txt>ACTION from catalog: fixit with set_param</txt>
                </action>
            </actions>
       ]]>
    </entry>
    <entry key="TEST_REUSE_ACTION_SG1" translate="true">
        <![CDATA[
             <actions>
                <action type="suggestion" id="suggestion_set_param_1">
                    <cmd>set_param(''{0}'', ''Gain'', ''{1}'')</cmd>
                    <txt>ACTION from catalog: suggestion(1) with set_param</txt>
                </action>
            </actions>
       ]]>
    </entry>
    <entry key="TEST_REUSE_ACTION_SG1_ENABLING" translate="true">
        <![CDATA[
             <actions>
                <action type="suggestion" id="suggestion_set_param_1" enabled="false">
                    <cmd>set_param(''{0}'', ''Gain'', ''{1}'')</cmd>
                    <txt>ACTION from catalog: suggestion(1) with set_param</txt>
                </action>
            </actions>
       ]]>
    </entry>
    <entry key="TEST_REUSE_ACTION_SG2" translate="true">
        <![CDATA[
             <actions>
                 <action type="suggestion" id="suggestion_set_param_2">
                    <cmd>set_param(''{0}'', ''Gain'', ''{1}'')</cmd>
                    <txt>ACTION from catalog: suggestion(2) with set_param</txt>
                </action>
            </actions>
       ]]>
    </entry>
    <entry key="TEST_REUSE_ACTION_EASY_TRANSLATION_MESSAGE_1" translate="false">
        ACTION from catalog: fixit with set_param
    </entry>
    <entry key="TEST_REUSE_ACTION_EASY_TRANSLATION_MESSAGE_2" translate="false">
        ACTION from catalog: suggestion(1) with set_param
    </entry>
    <entry key="TEST_REUSE_ACTION_EASY_TRANSLATION_MESSAGE_3" translate="false">
        ACTION from catalog: suggestion(2) with set_param
    </entry>
    <entry key="TEST_EASY_TRANSLATION_MSG" translate="true">
        fixit with set_param
    </entry>
    <entry key="TEST_REUSE_ACTION_EASY_TRANSLATION" translate="false">
        <![CDATA[
             <actions>
                <action type="fixit" id="fixit_set_param">
                    <cmd>set_param(''{0}'', ''Gain'', ''{1}'')</cmd>
                    <msg id="SL_SERVICES:utils:TEST_REUSE_ACTION_EASY_TRANSLATION_MESSAGE_1"></msg>
                </action>
                <action type="suggestion" id="suggestion_set_param_1">
                    <cmd>set_param(''{0}'', ''Gain'', ''{1}'')</cmd>
                    <msg id="SL_SERVICES:utils:TEST_REUSE_ACTION_EASY_TRANSLATION_MESSAGE_2"></msg>
                </action>
                 <action type="suggestion" id="suggestion_set_param_2">
                    <cmd>set_param(''{0}'', ''Gain'', ''{1}'')</cmd>
                    <msg id="SL_SERVICES:utils:TEST_REUSE_ACTION_EASY_TRANSLATION_MESSAGE_3"></msg>
                </action>
           </actions>
       ]]>
    </entry>
    <entry key="TEST_REUSE_ACTION_EASY_TRANSLATION_WITH_TEXT" translate="false">
        Hello World!
        <![CDATA[
             <actions>
                <action type="fixit" id="fixit_set_param">
                    <cmd>set_param(''{0}'', ''Gain'', ''{1}'')</cmd>
                    <msg id="SL_SERVICES:utils:TEST_REUSE_ACTION_EASY_TRANSLATION_MESSAGE_1"></msg>
                </action>
                <action type="suggestion" id="suggestion_set_param_1">
                    <cmd>set_param(''{0}'', ''Gain'', ''{1}'')</cmd>
                    <msg id="SL_SERVICES:utils:TEST_REUSE_ACTION_EASY_TRANSLATION_MESSAGE_2"></msg>
                </action>
                 <action type="suggestion" id="suggestion_set_param_2">
                    <cmd>set_param(''{0}'', ''Gain'', ''{1}'')</cmd>
                    <msg id="SL_SERVICES:utils:TEST_REUSE_ACTION_EASY_TRANSLATION_MESSAGE_3"></msg>
                </action>
           </actions>
       ]]>
    </entry>
    <entry key="TEST_EASY_TRANSLATION" translate="false">
        test action with set_param callback
        <![CDATA[
            <actions exclusiveFixIts="yes">
                <action type="fixit" id="fixit_set_param">
                    <cmd>set_param(''{0}'', ''Gain'', ''{1}'')</cmd>
                    <msg id="SL_SERVICES:utils:TEST_EASY_TRANSLATION_MSG"></msg>
                </action>
                <action_catalog id="SL_SERVICES:utils:TEST_REUSE_ACTION_EASY_TRANSLATION" ids="{2}"><arg>ARG1</arg><arg>ARG2</arg></action_catalog>    
            </actions>
        ]]>
    </entry>
    <entry key="GENERAL_USAGE" translate="false" context="diagnostic" note="TranslateFalseBatch;">{0}</entry>
    <entry key="XTESTERS_USAGE" translate="false" note="TranslateFalseBatch;">{0}</entry>
    <entry key="ACTIONS_TEST_SERVICES_USAGE" translate="false" note="TranslateFalseBatch;">{0}</entry>
    <entry key="ACTIONS_TEST_SERVICES_WRONG_ARG_NUMBER">actions_test_services requires at least 2 arguments, but there are only ''{0}''.\n{1}</entry>
    <entry key="ACTIONS_TEST_SERVICES_WRONG_TYPE">actions_test_services supports only instances of the following classes: MSLDiagnostic, MSLException and message.\n{0}</entry>
    <entry key="ACTIONS_TEST_SERVICES_NO_ACTIONS">Can't get actions object from the first argument of the actions_test_services</entry>
    <entry key="ACTIONS_TEST_SERVICES_WRONG_OPERATION">actions_test_services doesn't support operation ''{0}''.\n{1}</entry>
    <entry key="ACTIONS_TEST_SERVICES_WRONG_ID">actions_test_services operation ''{0}'' requires id or there is no id was found.\n{1}</entry>
    <entry key="ACTIONS_TEST_SERVICES_WRONG_INTERACTIVE_ARGS_NUMBER">actions_test_services requires {0} interactive arguments, but got {1}</entry>
    <entry key="ACTIONS_TEST_SERVICES_EVAL_CALLBACK_PROBLEM">Callback with ID ''{0}'' failed or return value of the callback was not set correctly.</entry>
    <entry key="UNASSIGNED_OUTPUT_HELP" translate="false">Add attribute retvalue="false" to the fixit/suggestion with a callback that doesn't return any output.\nSee <![CDATA[<a href="http://inside.mathworks.com/wiki/Slsv_diagnostic_action_api#.3Caction.3E">action element description</a>]]>.</entry>
    <entry key="DUPLICATED_ACTION_ID" translate="false">Duplicated action ID was detected. Please fix it before using actions_test_services, otherwise behavior is undefined.\nPlease use command actions_test_services(. . ., ''dump_actions'') to see actual duplication.</entry>

    <entry key="SubsystemPartition" translate="false">
        <![CDATA[
             <actions exclusiveFixIts="yes">
                 <action type="fixit" id="RemovePartition">
                    <cmd>sltp.internal.removeSubsystemPartitionFixit(''{0}'');</cmd>
                    <txt>Remove the partition.</txt>
                 </action>
             </actions>
        ]]>
    </entry>
    <entry key="InvalidPartitionInternalRate"  translate="false">
        <![CDATA[Invalid sample time of ''{0}'' on block ''{1}'' contained within subsystem ''{2}''.  Only periodic rates can be contained in explicitly partitioned subsystems.
             <actions exclusiveFixIts="yes">
                 <action_catalog id="SL_SERVICES:utils:SubsystemPartition" ids="RemovePartition">
                    <arg>{2}</arg>
                 </action_catalog>
                 <action type="suggestion">
                    <txt>Use periodic rate block in place of ''{0}''.</txt>
                 </action>
             </actions>
        ]]>
    </entry>
    <entry key="RUN_COMMAND_INFO" translate="false" note="translate=false set due no translatable content">{0}</entry>
    <entry key="RUN_COMMAND_ERROR">Command executed with error ({0,number,integer}): {1}</entry>
    <entry key="RUN_COMMAND_EXCEPTION">Run command exception: {0}</entry>
    
    <entry key="ACTION_WITH_GOOD_CALLBACK_WRONG_RESULT" translate="true">
        Test action with wrong callback result
        <![CDATA[
            <actions exclusiveFixIts="yes">
                <action type="fixit" id="first_action">
                    <cmd>disp(''{0}''); disp(''{0}''); disp(''SimulationCommand''); disp(''Update''); disp(''{0}''); disp(''dirty''); disp(''on''); disp(''{0}'');</cmd>
                    <txt>The very first argument of the diagnostic: ''{0}''.</txt>
                </action>
            </actions>
        ]]>
    </entry>
    <entry key="ACTION_WITH_GOOD_CALLBACK_RIGHT_RESULT" translate="true">
        Test action with right callback result
        <![CDATA[
            <actions exclusiveFixIts="yes">
                <action type="fixit" id="first_action" retvalue="false">
                    <cmd>disp(''{0}''); disp(''{0}''); disp(''SimulationCommand''); disp(''Update''); disp(''{0}''); disp(''dirty''); disp(''on''); disp(''{0}'');</cmd>
                    <txt>The very first argument of the diagnostic: ''{0}''.</txt>
                </action>
            </actions>
        ]]>
    </entry>
    <entry key="ACTION_WITH_BAD_CALLBACK_WRONG_RESULT" translate="true">
        Test action with wrong callback result
        <![CDATA[
            <actions exclusiveFixIts="yes">
                <action type="fixit" id="first_action">
                    <cmd>disp(''{0}''); disp(''{0}''); disp(''SimulationCommand''); disp(''Update'', ''{0}''); disp(''dirty''); disp(''on''); disp(''{0}'');</cmd>
                    <txt>The very first argument of the diagnostic: ''{0}''.</txt>
                </action>
            </actions>
        ]]>
    </entry>
    <entry key="ACTION_WITH_BAD_CALLBACK_RIGHT_RESULT" translate="true">
        Test action with right callback result
        <![CDATA[
            <actions exclusiveFixIts="yes">
                <action type="fixit" id="first_action" retvalue="false">
                    <cmd>disp(''{0}''); disp(''{0}''); disp(''SimulationCommand''); disp(''Update'', ''{0}''); disp(''dirty''); disp(''on''); disp(''{0}'');</cmd>
                    <txt>The very first argument of the diagnostic: ''{0}''.</txt>
                </action>
            </actions>
        ]]>
    </entry>

    <entry key="METADATA_CASE_SENSITIVE" context="diagnostic" translate="true">
        Diagnostic metadata keys are case sensitive.
        <![CDATA[
            <actions exclusiveFixIts="yes">
                <action_catalog id="SL_SERVICES:utils:METADATA_RELATED" ids="metadata_suggestion_case_sensitive"><arg>{0}</arg><arg>{1}</arg></action_catalog>    
            </actions>
        ]]>
    </entry>
 
     <entry key="METADATA_WRONG_KEY" context="diagnostic" translate="true">
        Required metadata key(s) ''{0}'' are invalid.
        <![CDATA[
            <actions exclusiveFixIts="yes">
                <action_catalog id="SL_SERVICES:utils:METADATA_RELATED" ids="metadata_invalid_key"><arg/><arg/><arg>{1_List}</arg></action_catalog>    
            </actions>
        ]]>
    </entry>

     <entry key="METADATA_RELATED" translate="true">
        <![CDATA[
             <actions>
                 <action type="suggestion" id="metadata_suggestion_case_sensitive">
                    <txt>You asked for the key(s) ''{0}'', but you should use ''{1}'' instead</txt>
                </action>
                 <action type="suggestion" id="metadata_invalid_key">
                    <txt>Possible replacement keys are: {2_List}</txt>
                </action>
           </actions>
       ]]>
    </entry>
    <entry key="ERROR_ADD_ACTION" note="hole is a method name like addFixit or addSuggestion" context="error">Method ''{0}'' must have 3 string arguments of type string or character vector.\n
                                         For example: mslException.addFixit(user_string, callback_string, action_id_string);\n
                                         or mslDiagnostic.addSuggestion(user_string, callback_string, action_id_string);\n
                                         arguments may not be empty.                             
    </entry>
    <entry key="ActionCatalogCreationProblem" translate="false">Can't create catalog message.</entry>
    <entry key="MIXED_HOLES" context="diagnostic" translate="true">
        String hole:      |''{0}''|\n
        Numeric hole:     |{1,number,integer}|\n
        List hole:        |{2_List}|\n
        Double hole:      |{3_Double}|\n
        Link hole:        |{4_HLink}|\n
        SLObject hole:    |{5_SLObject}|\n
        SLBus hole:       |{6_SLBus}|\n
        File hole:        |{7_File}|\n
        CMsgID hole:      |{8_CMsgID}|\n
        <![CDATA[
            <actions exclusiveFixIts="yes">
                <action type="fixit" id="first_action">
                    <cmd>disp(''{9}'');</cmd>
                    <txt>Just an example: |{10,number,integer}|</txt>
                </action>
            </actions>
        ]]>
    </entry>
    <entry key="OneNumberArgument" translate="false">First number argument: {0,number,integer}.</entry>
    <entry key="TwoNumberArguments" translate="false">First number argument: {0,number,integer} and second number argument: {1,number,integer}.</entry>

    <entry key="MXARRAY_NOT_STRING">mxArray argument is not string or character vector</entry>
    
    <entry key="BOOST_ERROR_INFO">File: {0}\nFunction: {1}\nLine: {2,number,integer}</entry>
    
    <entry key="CODEGEN_MSG_WITH_FALLBACK" translate="false">{0}{1_CMsgID}</entry>

     <entry key="ACTIONS_WITH_DOUBLE_QUOTES" translate="false">
        Test action with double quoted command
        <![CDATA[
             <actions>
                 <action type="suggestion" id="double_quoted_suggestion" retvalue="false">
                    <cmd>set_param("mvdp/Mu", "Gain", "2");</cmd>
                    <txt>Double quoted suggestion command</txt>
                </action>
                 <action type="fixit" id="double_quoted_fixit" retvalue="false">
                    <cmd>set_param("mvdp/Mu", "Gain", "3");</cmd>
                    <txt>Double quoted fixit command</txt>
                </action>
           </actions>
       ]]>
    </entry>
    <entry key="EASTER_EGGS" translate="false">
        Ask Murali Y. He knows everything
    </entry>
</message>
</rsccat>
