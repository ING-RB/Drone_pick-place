<?xml version="1.0" encoding="UTF-8" ?>
<!-- Copyright 1994-2024 The MathWorks, Inc. -->
<rsccat version="1.0" locale="en_US" product="Coder"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../../schema/msgcat.xsd">
    <message>
        <entry key="AssertionMisplaced">Preconditioning: Use assertions only in straight-line code. Do not call assert functions inside conditional constructs, such as if, for, while, and switch statements.</entry>
        <entry key="RunInitializeFcnMultiInstance">The RunInitializeFcn code generation configuration parameter is not supported with the MultiInstanceCode parameter. Ignoring the RunInitializeFcn parameter.</entry>
        <entry key="BuildInfoFailure">Error constructing BuildInfo object.</entry>
        <entry key="TestBenchDebugQuit">The DBQUIT command was used to terminate the test file.</entry>
        <entry key="TestBenchInterrupt">The test file execution was interrupted.</entry>
        <entry key="TestBenchPrepError">Error preparing the test expression ''{0}''.</entry>
        <entry key="TestBenchAdHocPrepError">Error preparing the test code.</entry>
        <entry key="TestBenchEvalError">Error evaluating ''{0}''.</entry>
        <entry key="TestBenchAdHocEvalError">Error evaluating test code.</entry>
        <entry key="TestBenchFcnCallError">Error in entry-point ''{0}'':</entry>
        <entry key="TestBenchTypeError">Error determining types from test file ''{0}''.</entry>
        <entry key="TestBenchTypeCause">Error determining type for input ''{0}''.</entry>
        <entry key="TestBenchEPShadow">Entry-point ''{0}'' is being shadowed by ''{1}''.</entry>
        <entry key="TestBenchEPDuplicate">Entry-point ''{0}'' specified more than once.</entry>
        <entry key="TestBenchMexFcnEpPathsDiffer">Compiled function ''{0}'' is not in the same folder as the MATLAB function ''{1}''.</entry>
        <entry key="TestBenchMexFcnEpNamesSame">Compiled function ''{0}'' has the same name as the MATLAB function ''{1}''.</entry>
        <entry key="TestBenchMexFcnNotValid">MEX function ''{0}'' is not recognized as a MATLAB Coder MEX function.</entry>
        <entry key="TestBenchUnexpectedInterceptor">Delete the MEX function ''{0}'' that is shadowing another function with the same name.</entry>
        <entry key="TestBenchFcnCallArgCount">Function ''{0}'' called with wrong number of arguments: expected {1}, received {2}.</entry>
        <entry key="TestBenchEpNotFoundInMexFcn">MEX function ''{0}'' is not a compiled version of ''{1}''.</entry>
        <entry key="TestBenchFail">Testbench ''{0}'' did not pass or complete due to ''{1}''.</entry>
        <entry key="TestBenchParfor">Launching testbench inside a parfor worker is not supported.</entry>
        <entry key="AutodefineFcnInNamespace">Automatically determining types for entry-point functions in namespaces is not supported.</entry>
        <entry key="GetArgTypesFcnInNamespace">Entry-point functions in namespaces are not supported for use with coder.getArgTypes.</entry>
        <entry key="RunTestFcnInNamespace">coder.runTest is not supported for entry-point functions in namespaces. Move function {0} out of the namespace and regenerate code.</entry>
        <entry key="EntryPointNotCalled">The entry-point ''{0}'' was not invoked by the test file, or it was invoked with no arguments.</entry>
        <entry key="ProfileViewerHyperlinkText">Open Profile Viewer</entry>
        <entry key="PostCodegenCommandError">Error evaluating the post-code-generation command.</entry>
        <entry key="CCodeIndentError">Error indenting generated code.</entry>
        <entry key="CodeFormatErrorWithMsg">Error formatting generated code due to ''{0}''.</entry>
        <entry key="CodeGenError">Error occurred during code generation.</entry>
        <entry key="ComplexNotSupported">Preconditioning: ''{0}'' cannot be complex.</entry>
        <entry key="DuplicatFunctionInputName">Preconditioning: Input name ''{0}'' is already used. Do not use the same name for more than one input to a function.</entry>
        <entry key="DuplicateInputClass">Preconditioning: Class for input ''{0}'' already specified.</entry>
        <entry key="DuplicatePredicate">Preconditioning: Property already specified using function ''{0}'' for function input ''{1}''.</entry>
        <entry key="EntryPointsMissing">Project ''{0}'' has no entry points.</entry>
        <entry key="Explicit" translate="false">{0}</entry>
        <entry key="ExtraneousFimath">Preconditioning: fimath specified for non-fixed-point input ''{0}'' of function ''{1}''. Either remove the fimath specification or define the input as a fixed-point input using assert(isfi(input)).</entry>
        <entry key="ExtraneousNumerictype">Preconditioning: numerictype specified for non-fixed-point input ''{0}'' of function ''{1}''. Either remove the numerictype specification or define the input as a fixed-point input using assert(isfi(input)).</entry>
        <entry key="FileOpenError">Unable to open file ''{0}''.</entry>
        <entry key="FixedPointDTO">Function ''{0}'' does not support fixed-point data type override mode ''{1}''.</entry>
        <entry key="FixedPointDTOEnabled">Function ''{0}'' does not support fixed-point data type override for code generation.</entry>
        <entry key="FixedPointLicense">Project ''{0}'' requires the Fixed-Point Designer license.</entry>
        <entry key="FixedPointLogging">Function ''{0}'' does not support fixed-point logging.  Ignoring the LoggingMode setting of the fixed-point preferences (fipref).</entry>
        <entry key="FIACCELWithoutFixedPoint">Your code does not use fixed-point (embedded.fi) data. FIACCEL cannot accelerate this MATLAB function.</entry>
        <entry key="FIACCELWithoutFixedPointIO">FIACCEL cannot accelerate this MATLAB function because it does not have any fixed-point (embedded.fi or integer) outputs or non-constant inputs.</entry>
        <entry key="EntryPointIsClassdef">''{0}'' is a MATLAB class. MATLAB Coder entry points must be MATLAB functions.</entry>
        <entry key="EntryPointIsMethod">''{0}'' is a MATLAB method. MATLAB Coder entry points must be MATLAB functions.</entry>
        <entry key="EntryPointIsStaticMethod">''{0}'' is a MATLAB static method. MATLAB Coder entry points must be MATLAB functions.</entry>
        <entry key="FunctionNotFound">Unable to locate ''{0}''.</entry>
        <entry key="FunctionOnlyOnMatlabPath">Function ''{0}'' resolved to ''{1}''
        on the MATLAB path, but it is not on the code generation path. To compile this function, add it to the path using the ''-I'' compiler option.</entry>
        <entry key="GlobalUninitialized">Could not find initial value for global variable ''{0}''.</entry>
        <entry key="GlobalInitialValueTypeMismatch">The initial value specified for global variable ''{0}'' is not contained by the global variable''s type.</entry>
        <entry key="ConstantGlobalWritten">Attempt to write to constant global variable ''{0}''.</entry>
        <entry key="TerminateFunctionNonEmpty">The terminate function is not empty, but the configuration setting requests that the terminate function be omitted.</entry>
        <entry key="InitializeFunctionNonEmpty">The initialize function is not empty, but the IncludeInitializeFcn configuration setting requests that the initialize function be omitted.</entry>
        <entry key="IfsInvalid1stChar">Error in {0} identifier format string. The first character specified must be a macro, alphabetic, or an underscore.</entry>
        <entry key="IfsInvalidChar">Error in {0} identifier format string. ''{1}'' is not recognized as a valid macro or C-language identifier.</entry>
        <entry key="IfsInvalidMacro">Error in {0} identifier format string. ''${1}'' is not recognized as a valid macro.</entry>
        <entry key="IfsMacroCount">Error in {0} identifier format string. There must be one and only one mangle macro ({1}).</entry>
        <entry key="IfsTooLong">Incompatible settings among {0} identifier format string, and maximum identifier length. Maximum identifier length must be larger than the sum of the reserved length, i.e. {1,number,integer}, and the length of the string in {2} identifier format string.</entry>
        <entry key="InputLargeDimSize">Preconditioning: Fixed-size dimension of input ''{0}'' is larger than or equal to the maximum integer size (intmax).</entry>
        <entry key="InputLargeStaticMatrix">Preconditioning: Number of elements of fixed-size matrix input ''{0}'' is larger than or equal to the maximum integer size (intmax).</entry>
        <entry key="InterfaceBuildError">Build error: {0} See the interface build log for further details.</entry>
        <entry key="InvalidDefaultNumerictype">Preconditioning: Invalid default numerictype specified for fixed-point input ''{0}'' of function ''{1}''. You must specify the numerictype explicitly for fixed-point inputs. Use assert(isequal(numerictype(input), numerictype_def)).</entry>
        <entry key="LicenseCheckoutFailed">Failed to obtain license "{0}". This license is required to use function {1}.</entry>
        <entry key="LogicalNegationRestriction">Preconditioning: Logical negation (~) can be used only with isreal to specify complex inputs, as in assert(~isreal(input));.</entry>
        <entry key="MexFcnBuildError">Error building MEX function.</entry>
        <entry key="MissingFimath">Preconditioning: No fimath precondition specified for fi input ''{0}'' of function ''{1}''.</entry>
        <entry key="MissingNumericType">Preconditioning: No numerictype precondition specified for fixed-point input ''{0}'' of function ''{1}''. You must specify the numerictype explicitly for fixed-point inputs. Use assert(isequal(numerictype(input), numerictype_def)).</entry>
        <entry key="MissingPreconditionClassFAVInputTypes">Type of input argument ''{0}'' for function ''{1}'' not specified. Use -args, the Define Input Types step in the MATLAB Coder app, preconditioning statements, or an arguments block to specify input types.</entry>
        <entry key="NoFunctionPreconditions">Preconditioning: No properties found for inputs of function ''{0}''. Specify the class, size, and complexity of function inputs programmatically using the assert function, or at the command line using -args.</entry>
        <entry key="NoInputPreconditions">Preconditioning: No properties specified for input ''{0}'' of function ''{1}''. Specify the class, size, and complexity of function inputs programmatically using the assert function, or at the command line using -args</entry>
        <entry key="NonFiniteCheckFailed">Use of non-finite detected but non-finite support is not enabled. Code generation cannot proceed.</entry>
        <entry key="NonFiniteCodeDetected">Non-finite code detected. Set the option ''Support non-finite numbers'' in the configuration object to enable non-finite support.</entry>
        <entry key="NonFiniteCodeDetectedInProject">Non-finite code detected in project ''{0}''. Set the option ''Support non-finite numbers'' in the configuration object to enable non-finite support.</entry>
        <entry key="NonIntegerCodeDetected">Non-integer code detected. Turn off the option ''Support only purely-integer numbers'' in the configuration object to enable floating-point support.</entry>
        <entry key="NonIntegerCodeDetectedInProject">Non-integer code detected in project ''{0}''. Turn off the option ''Support only purely-integer numbers'' in the configuration object to enable floating-point support.</entry>
        <entry key="NonIntegerFunctionInput">Input ''{0}'' of function ''{1}'' is of non-integer type. Turn off the option ''Support only purely-integer numbers'' in the configuration object to enable floating-point support.</entry>
        <entry key="NonIntegerFunctionOutput">Output ''{0}'' of function ''{1}'' is of non-integer type. Turn off the option ''Support only purely-integer numbers'' in the configuration object to enable floating-point support.</entry>
        <entry key="PCodeMessageSuppressed">P-code file problem detected: please compile the corresponding MATLAB code to diagnose the problem</entry>
        <entry key="ParCrossLoopDependence">Could not prove that there is no loop-carried dependence between array accesses.</entry>
        <entry key="ParReductionConflictingOps">Conflicting reduction operations found for the same reduction variable (''{0}'').</entry>
        <entry key="ParReductionIllegalForm">The variable ''{0}'' in a parallel loop could not be classified as it was used in an invalid reduction.</entry>
        <entry key="ParReductionIllegalOp"><![CDATA[Unsupported reduction operation for variable ''{0}''. Supported operations are +,-,*,& or |.]]></entry>
        <entry key="ParReductionNeedsMalloc">A constant thread number must be specified for processing reduction variables if dynamic memory allocation is disabled.</entry>
        <entry key="ParReductionIllegalExpr">Reduction variable must be a scalar variable. Struct fields or arrays elements are not supported.</entry>
        <entry key="ParReductionIllegalStmt">''{0}'' is a reduction variable. Statements involving reduction variables must be reduction assignments.</entry>
        <entry key="ParParforUnclassifiable">A variable in a parfor could not be classified.</entry>
        <entry key="ParUnanalyzable">The parallel loop could not be analyzed.</entry>
        <entry key="AutoParEnableOpenMP">Automatic parallelization of code disabled. Set EnableOpenMP to ‘true’.</entry>
        <entry key="AutoParDisableJIT">Automatic parallelization of code disabled. Set EnableJIT to ‘false’.</entry>
        <entry key="AutoParOneLogicalCore">For automatic parallelization, number of available logical cores must be more than 1.</entry>
        <entry key="AutoParReductionPotentialDifference">This loop contains floating-point reduction operations that are only approximately associative. In some situations, this might cause the parallelized version of this loop to behave differently compared to the sequential version. To prevent automatic parallelization of this loop, use the coder.loop.parallelize('never') directive.</entry>
        <entry key="PreconditionExprNonConstant">      Preconditioning: Encountered a non-constant expression preceding a primary function input specification statement.
        Your MATLAB code might contain a misplaced primary function input specification statement.
        Primary function input specification statements include ASSERT, CODER.VARSIZE and CODER.CSTRUCTNAME.</entry>
        <entry key="ParMultiInstanceCode">Multi-instance code generation is not supported with PARFOR.</entry>
        <entry key="ParExportedDataError">A global struct is being used inside a parallel region. This may be due to using persistent or global data in functions called from within a parfor loop. Another reason might be that local variables take space greater than the specified stack size; these are moved to a static area and accessed by a global pointer. In this case consider increasing the stack size, if possible.</entry>
        <entry key="PreconditionInferenceFailed">Preconditioning: Errors occurred during evaluation of properties for function inputs. Input property specification has certain limitations described in the documentation that might cause these errors. For example, you cannot read or write to a function input before specifying its properties.</entry>
        <entry key="PreconditionInvalid">Preconditioning: Invalid value for argument in ''{0}'' in the assert function.</entry>
        <entry key="PreconditionArgInvalid">Preconditioning: Invalid value for the ''{0}'' argument to the ''{1}'' function.</entry>
        <entry key="PreconditionPropInvalid">Preconditioning: Invalid value for the ''{0}'' property of the ''{1}'' function.</entry>
        <entry key="PreconditionTypeFailed">Preconditioning: Precondition type computation failed.</entry>
        <entry key="PreconditionCStructTypeNameCollision">Preconditioning: Conflicting structure type names for ''{0}''.</entry>
        <entry key="PreconditionCStructPVCollision">Preconditioning: Conflicting ''{0}'' for ''{1}''.</entry>
        <entry key="PreconditionClassesNotSupported">Preconditioning is not supported for ''{0}'' because it is a MATLAB class. Use the ''-args'' option of codegen instead.</entry>
        <entry key="PreconditionFailToParse">Preconditioning: Unable to evaluate name of C structure type to a constant character vector or string.</entry>
        <entry key="PredicateArgCount">Preconditioning: Wrong number of arguments to ''{0}'': expected {1,number,integer}, found {2,number,integer}.</entry>
        <entry key="PredicateArgCountRange">Preconditioning: Wrong number of arguments to ''{0}'': expected between {1,number,integer} and {2,number,integer}, found {3,number,integer}.</entry>
        <entry key="PredicateMisapplied">Preconditioning: Use ''{0}'' in assert function to specify properties for function inputs only.</entry>
        <entry key="PrivateFunctionName">Private function ''{0}'' which resolved to ''{1}'' on the code generation path cannot be used as the name of the entry-point function.</entry>
        <entry key="RefParamsOptimFailed">Unable to apply reference parameter optimization to parameter ''{0}'' of function ''{1}''. Simplify the call site to avoid indexing or rewrite the function signature to avoid naming an output variable the same as this input parameter.</entry>
        <entry key="RelationalRestriction"><![CDATA[Preconditioning: Relational operators (==, >, >=, <, <=) can only be used with ''size''.]]></entry>
        <entry key="ReservedFunctionName">Entry-point function name must not be a reserved name. ''{0}'' is a reserved name. To see the full list of reserved names, use the function RTW.reservedIdentifiers.</entry>
        <entry key="RtwExeBuildError">Error building executable.</entry>
        <entry key="RtwLibBuildError">Error building library.</entry>
        <entry key="CellIndexDimenMismatch">Preconditioning: The form of indexing does not match the dimensions of the array. Use a single index, or the same number of indices as the array dimension.</entry>
        <entry key="CellIndexExceedsArrayNumel">Preconditioning: The index expression specifies an element index that is greater than the number of elements in the array.</entry>
        <entry key="CellIndexExceedsArrayDimen">Preconditioning: The index expression for dimension {0,number,integer} specifies an element index value that is greater than the size of the dimension.</entry>
        <entry key="CellIndexVardimsVector">Preconditioning: The array is variable-size, so all elements must be of the same type. To define the element type for such arrays, use index '{'1'}' of the array.</entry>
        <entry key="CellHeterogeneousVardims">Preconditioning: A heterogeneous cell array cannot be variable size.</entry>
        <entry key="SizeDimenSpec">Preconditioning: Conflicting or invalid specification for dimensions of array ''{0}'', such as specifying that size is greater than 10 and less than 5.</entry>
        <entry key="SizeIncomplete">Preconditioning: Conflicting or incomplete size specifications for ''{0}'', such as specifying a lower bound without an upper bound.</entry>
        <entry key="SizeUnbounded">Preconditioning: Size of ''{0}'' must have an upper bound. To allow unbounded variable-size inputs, turn on dynamic memory allocation</entry>
        <entry key="StructureFieldDeclaration">Preconditioning: Unable to process field ''{0}'' of structure ''{1}''. You must specify the class, size, and complexity of all fields in structure inputs in the order that they appear in the structure definition.</entry>
        <entry key="TargetBuildError">Build error: {0} See the Build Log for further details.</entry>
        <entry key="ExampleBuildError">Build error: {0} See the Example Build Log in the report for details.</entry>
        <entry key="TflLoadLibraryFailed">Failed to load Code Replacement Library ''{0}''</entry>
        <entry key="TopLevelFunctionMissing">Unable to locate the top-level function in file ''{0}''.</entry>
        <entry key="TopLevelFunctionNameInvalid">Unable to locate a valid top-level function name in file ''{0}''.</entry>
        <entry key="TopLevelFunctionNameMissing">Unable to locate the top-level function name in file ''{0}''.</entry>
        <entry key="TopLevelOutputInvalidType">Invalid top-level output type ''{0}'' contained in parameter ''{1}'' for function ''{2}''.</entry>
        <entry key="TopLevelOutputNameInvalid">Invalid top-level function output name in file ''{0}''.</entry>
        <entry key="TopLevelParameterNameInvalid">Invalid top-level function input parameter name in file ''{0}''.</entry>
        <entry key="UnrecognizedAssertionArg">Preconditioning: Unrecognized assertion argument.</entry>
        <entry key="UnrecognizedAssertionPredicate">Preconditioning: Unrecognized assertion predicate ''{0}''.</entry>
        <entry key="UnsupportedDynamicMemoryAllocation">This particular dynamic memory allocation configuration is currently unsupported.</entry>
        <entry key="DynamicMemoryInterfaceIncompatible">DynamicMemoryAllocationInterface setting ''{0}'' is not compatible with TargetLang ''{1}'', DynamicMemoryAllocationInterface value will be ignored.</entry>
        <entry key="UnsupportedEmptyStructures">Unsupported: empty structures (''{0}'').</entry>
        <entry key="UnsupportedFileExtension">Only MATLAB files are supported. Unsupported file extension ''{0}'' for ''{1}''.</entry>
        <entry key="UnsupportedTflCallback">Unsupported code replacement library callback ''{0}''. Code generation cannot proceed.</entry>
        <entry key="UrecognizedIsequalArg">Preconditioning: Unrecognized arguments to 'isequal'. Typically, use for fixed-point inputs to specify numerictype, as in assert(isequal(numerictype(input), numerictype_def)) and fimath as in assert(isequal(fimath(input), fimath_def)).</entry>
        <entry key="VerificationBuildError">Build error: {0} See the verification build log for further details.</entry>
        <entry key="VariableSizedCellArrayGlobalsNotSupported">Code generation does not support global variables that are cell arrays of variable size.</entry>
        <entry key="VariableSizedArrayInGlobalsNotSupported">Code generation does not support global variables that contain classes containing variable-sized arrays.</entry>
        <entry key="FiMathAndNumericTypeInGlobalsNotSupported">Code generation does not support global variables that contain embedded.fimath or embedded.numerictype.</entry>
        <entry key="EmptyHardwareImplementation">Empty HardwareImplementation is not allowed.</entry>
        <entry key="EmptyReplacementTypes">ReplacementTypes must be nonempty.</entry>
        <entry key="ProdAtomicLongLongUnavailable">Project ''{0}'' hardware settings specifies ProdLargestAtomicInteger=''LongLong'' but ProdLongLongMode=false.</entry>
        <entry key="TargetAtomicLongLongUnavailable">Project ''{0}'' hardware settings specifies TargetLargestAtomicInteger=''LongLong'' but TargetLongLongMode=false.</entry>
        <entry key="COSPropertyNotFound">??? There is no ''{0}'' property in the ''{1}'' class.</entry>

        <entry key="JitBailOut" translate="false">JIT bailout detected.</entry>
        <entry key="JitNotSupported">JIT compilation is supported only for MEX generation.</entry>
        <entry key="JitIncompWithGenCodeOnly">JIT compilation is incompatible with "generate code only" option.</entry>
        <entry key="JitUnsupportedFcnCallArgTypes">JIT compilation unable to resolve function call argument type. Generated {0} MEX.</entry>
        <entry key="JitUnsupportedVariableType">JIT compilation unable to resolve variable type. Generated {0} MEX.</entry>
        <entry key="JitUnsupportedBuildInfoUpdated">JIT compilation is incompatible with updating build information. Generated {0} MEX.</entry>
        <entry key="JitUnsupportedPostCodegenCommand">JIT compilation is incompatible with using a post-code-generation command. Generated {0} MEX.</entry>
        <entry key="JitUnsupportedThirdPartyLibrary">JIT compilation is incompatible with using third party libraries. Generated {0} MEX.</entry>
        <entry key="JitUnsupportedIncludeFiles">JIT compilation is incompatible with using include files. Generated {0} MEX.</entry>
        <entry key="JitUnsupportedSourceFiles">JIT compilation is incompatible with adding source files. Generated {0} MEX.</entry>
        <entry key="JitUnsupportedIncludePaths">JIT compilation is incompatible with adding include paths. Generated {0} MEX.</entry>
        <entry key="JitUnsupportedLinkObjects">JIT compilation is incompatible with adding link objects. Generated {0} MEX.</entry>
        <entry key="JitUnsupportedLinkFlags">JIT compilation is incompatible with adding link flags. Generated {0} MEX.</entry>
        <entry key="JitUnsupportedCustomSource">JIT compilation is incompatible with adding custom source files. Generated {0} MEX.</entry>
        <entry key="JitUnsupportedCustomSourceCode">JIT compilation is incompatible with adding custom source code. Generated {0} MEX.</entry>
        <entry key="JitUnsupportedCustomInclude">JIT compilation is incompatible with adding custom include paths. Generated {0} MEX.</entry>
        <entry key="JitUnsupportedCustomHeaderCode">JIT compilation is incompatible with adding custom header code. Generated {0} MEX.</entry>
        <entry key="JitUnsupportedCustomLibrary">JIT compilation is incompatible with adding custom library or object files. Generated {0} MEX.</entry>
        <entry key="JitUnsupportedCustomInitializerCode">JIT compilation is incompatible with using custom initializer code. Generated {0} MEX.</entry>
        <entry key="JitUnsupportedCustomterminatorCode">JIT compilation is incompatible with using custom terminator code. Generated {0} MEX.</entry>
        <entry key="JITUnsupportedLanguage">JIT compilation is incompatible with target language. Generated {0} MEX.</entry>
        <entry key="JitGPUBailout">JIT compilation is incompatible with using GPU Coder. Generated {0} with GPU Coder MEX.</entry>
        <entry key="JitMEXBuiltInDifferentRelease">This JIT MEX was built by using a different version of MATLAB Coder. Rebuild it by using the current version of MATLAB Coder.</entry>

        <entry key="ExampleMainModified">MATLAB Coder cannot generate the example main file ''{0}'' because it detected changes to the previously generated file. If you want to preserve the changes, move the file to a folder outside of the build folder. If you want MATLAB Coder to regenerate the example main file, move or delete the file.</entry>
        <entry key="ExampleMainTooManyNumInput">Example main does not support command line arguments.</entry>
        <entry key="ExampleMainInitializeApplication" translate="false">Initialize the application.\nYou do not need to do this more than one time.</entry>
        <entry key="ExampleMainInitializeAutomatic" translate="false">The initialize function is being called automatically from your entry-point function. So, a call to initialize is not included here.</entry>
        <entry key="ExampleMainDispatchEntryPoints" translate="false">Invoke the entry-point functions.\nYou can call entry-point functions multiple times.</entry>
        <entry key="ExampleMainTerminateApplication" translate="false">Terminate the application.\nYou do not need to do this more than one time.</entry>
        <entry key="ExampleMainInvokeEntryPoint" translate="false">Call the entry-point ''{0}''.</entry>
        <entry key="ExampleMainInitializeFunctionArguments" translate="false">Initialize function ''{0}'' input arguments.</entry>
        <entry key="ExampleMainInitializeNamedArgument" translate="false">Initialize function input argument ''{0}''.</entry>
        <entry key="ExampleMainInitializeDynamicSize" translate="false">Set the size of the array.\nChange this size to the value that the application requires.</entry>
        <entry key="ExampleMainArrayLoop" translate="false">Loop over the array to initialize each element.</entry>
        <entry key="ExampleMainInitializeComplex" translate="false">Set the value of the complex variable.\nChange this value to the value that the application requires.</entry>
        <entry key="ExampleMainInitializeElement" translate="false">Set the value of the array element.\nChange this value to the value that the application requires.</entry>
        <entry key="ExampleMainInitializeStructFields" translate="false">Set the value of each structure field.\nChange this value to the value that the application requires.</entry>
        <entry key="ExampleMainFileBanner" translate="false">
            \n
            This automatically generated example {0} main file shows how to call\n
            entry-point functions that MATLAB Coder generated. You must customize\n
            this file for your application. Do not modify this file directly.\n
            Instead, make a copy of this file, modify it, and integrate it into\n
            your development environment.\n
            \n
            This file initializes entry-point function arguments to a default\n
            size and value before calling the entry-point functions. It does\n
            not store or use any values returned from the entry-point functions.\n
            If necessary, it does pre-allocate memory for returned values.\n
            You can use this file as a starting point for a main function that\n
            you can deploy in your application.\n
            \n
            After you copy the file, and before you deploy it, you must make the\n
            following changes:\n
            * For variable-size function arguments, change the example sizes to\n
            the sizes that your application requires.\n
            * Change the example values of function arguments to the values that\n
            your application requires.\n
            * If the entry-point functions return values, store these values or\n
            otherwise use them as required by your application.\n
            \n
        </entry>
        <entry key="ExeTargetWithoutMain">Trying to generate EXE target without any custom source may cause compilation failure, either set ''GenerateExampleMain''' to ''GenerateCodeAndCompile'' or attach a custom source. </entry>

        <entry key="COSEnumStringNotFound" note="stringDatatypeUpdate">Invalid value ''{0}''. Allowed values are:\n   {1}.
        </entry>
        <entry key="COSEnumStringRequired">A string is required here.
        </entry>
        <entry key="COSInvalidBool">A logical value is required here.  Allowed values are 0, 1, true, false, 'on', and 'off'.</entry>
        <entry key="COSInvalidCellstr">The parameter must be 'character vector', 'cell array of character vector', or 'string array'.</entry>
        <entry key="COSInvalidInstructionSetExtensions">''{0}'' is not a valid value for parameter ''InstructionSetExtensions''. Use one of the following: \n''{1}''</entry>
        <entry key="COSInvalidInstructionSetExtensionsForHardware">''{0}'' is not a valid value for parameter ''InstructionSetExtensions'' on HardwareImplementation ''{1}''. Use one of the following: \n''{2}''</entry>
        <entry key="NoVarSizeSupportInput">The function ''{0}'' has a variable-sized input ({1}). \nIts support requires the variable size feature to be enabled.</entry>
        <entry key="NoVarSizeSupportGlobal">The global ''{0}'' has variable-sized type {1}. \nIts support requires the variable size feature to be enabled.</entry>
        <entry key="EntryPointHasInputs">The entry-point file cannot have inputs when generating a "main" function.</entry>
        <entry key="EntryPointHasOutput">The entry-point file cannot have an output when generating a "main" function.</entry>
        <entry key="DMARequiredDMAOff">The generated code requires the use of dynamic memory allocation. Set configuration parameter ''EnableDynamicMemoryAllocation''.</entry>
        <entry key="ThreadPrivateDetected">The generated code contains usage of OpenMP thread private variable. This can cause the MEX to remain loaded in the memory.</entry>
        <!-- Potential Runtime Errors -->
        <entry key="ElidedRuntimeCheckWrapper">Elided runtime check:{0}</entry>
        <entry key="PotentialRuntimeErrorWrapper">Potential runtime error:{0}</entry>
        <entry key="PotentialExplicitError" translate="false">{0}</entry>
        <entry key="PotentialOutOfBoundRange">Index exceeds matrix dimensions.  Index value exceeds valid range [{0,number,integer}-{1,number,integer}].</entry>
        <entry key="PotentialOutOfBound">Index exceeds matrix dimensions.</entry>
        <entry key="PotentialOutOfBoundRangeNamed">Index exceeds matrix dimensions.  Index value exceeds valid range [{0,number,integer}-{1,number,integer}] of array {2}.</entry>
        <entry key="PotentialOutOfBoundNamed">Index exceeds matrix dimensions of array {0}.</entry>
        <entry key="PotentialOutOfTargetRangeTruncated">Out of range value truncated during conversion to target type range {0,number,integer}-{1,number,integer}.</entry>
        <entry key="PotentialOutOfShiftRangeTruncated">Shifting by unsupported number of bits; truncating result value to 0.</entry>
        <entry key="PotentialValueIsNonInteger">Unexpected non-integer value.</entry>
        <entry key="PotentialValueIsNaN">Value is NaN.</entry>
        <entry key="PotentialValueIsNotGEZero">Value is not greater than or equal to zero.</entry>
        <entry key="PotentialSizesMismatch">Sizes mismatch.</entry>
        <entry key="PotentialSizesMismatchND">Sizes mismatch.</entry>
        <entry key="PotentialSizesMismatchOnDim">Size mismatch error on a dimension.</entry>
        <entry key="PotentialSizesOverflowOnDim">Size overflow error on a dimension.</entry>
        <entry key="PotentialSubsAssignDimsMismatch">Subscripted assignment dimension mismatch.</entry>
        <entry key="PotentialMatrixMatrix_MM">The orientations of the vectors supplied at run time are incompatible with the variable-size inputs that were specified at code generation time. To perform this indexing operation, either force the run-time input vectors to have the same orientation or regenerate the code specifying fixed-sized inputs.</entry>
        <entry key="PotentialMatrixMatrix_MV">The orientations of the vectors supplied at run time are incompatible with the variable-size inputs that were specified at code generation time. To perform this indexing operation, either force the run-time input vectors to have the same orientation or regenerate the code specifying fixed-sized inputs.</entry>
        <entry key="PotentialMatrixMatrix_VM">The orientations of the vectors supplied at run time are incompatible with the variable-size inputs that were specified at code generation time. To perform this indexing operation, either force the run-time input vectors to have the same orientation or regenerate the code specifying fixed-sized inputs.</entry>
        <entry key="PotentialMatrixMatrix_MM_Logical1">The orientations of the vectors supplied at run time are incompatible with the variable-size inputs that were specified at code generation time. To perform this indexing operation, either force the index vector to be a column vector at run time or regenerate the code specifying fixed-sized inputs.</entry>
        <entry key="PotentialMatrixMatrix_MM_Logical2">The orientations of the vectors supplied at run time are incompatible with the variable-size inputs that were specified at code generation time. To perform this indexing operation, either force the data vector to be a column vector at run time or regenerate the code specifying fixed-sized inputs.</entry>
        <entry key="PotentialMatrixMatrix_VV_Logical">The orientations of the vectors supplied at run time are incompatible with the variable-size inputs that were specified at code generation time. To perform this indexing operation, either force both vectors to have the same orientation at run time or regenerate the code specifying fixed-sized inputs.</entry>
        <entry key="PotentialVectorVector">The sizes of the inputs supplied at run time are incompatible with the variable-size inputs that were specified at code generation time. To perform this indexing operation, do not attempt to index a scalar by a vector at run-time. Alternatively, regenerate the code and specify variable-size input vectors that have the same orientation.</entry>
        <entry key="PotentialForLoopVector">Cannot determine the exact number of iterations for a loop.</entry>
        <entry key="PotentialIntegerOverflow">Integer overflow detected.\nEarly termination due to integer overflow.</entry>
        <entry key="PotentialDivisionByZero">Division by zero detected.\nEarly termination due to division by zero.</entry>
        <entry key="PotentialParallelNumThreads">The maximum number of threads must be zero, a positive integer or Inf.</entry>
        <entry key="PotentialErrorPlaceHolder">&lt;runtime value&gt;</entry>
        <entry key="MEXProfilingNotSupported">MEX profiling is supported only for MEX generation.</entry>
        <entry key="GPUProfilingNotSupported">GPU Profiling is supported only for CUDA code generation.</entry>
        <entry key="CPUProfilingNotSupported">MEX profiling using MATLAB Profiler is not supported for GPU code generation.</entry>
        <entry key="ProfilingAlreadyOn">Profiling is currently on. Save your profiling results and turn off profiling before proceeding.</entry>
        <entry key="ProfilingMinGWCpp">Profiling C++ MEX build with MinGW is not supported.</entry>
        <!-- CGEL Support: Internal use only -->
        <entry key="ErrorReadingCgelFile" translate="false">CGEL file ''{0}'' is non-existent, empty, or otherwise bad.</entry>
        <entry key="UnsupportedCoderCgelTagClass" translate="false">Coder CGEL tag on line {0,number,integer} is not supported.</entry>
        <entry key="UnsupportedCoderCgelTag" translate="false">Coder CGEL tag ''{0}'' is not supported.</entry>
        <entry key="CgelParseFailedWithCause" translate="false">Parsing CGEL file ''{0}'' failed.\nCause: {1}.</entry>
        <entry key="CgelParseFailedWithoutCause" translate="false">Parsing CGEL file ''{0}'' failed.\nCause: Unknown.</entry>
        <!-- licenses -->
        <entry key="EMLMEXLicensesRequired">EMLMEX requires one of the following licenses: Fixed-Point Designer, Simulink, or MATLAB Coder.</entry>
        <entry key="BadAlignment">Cannot align variable ''{0}'' on {1,number,integer} byte boundary.</entry>
        <entry key="BadAlignmentUnknownVar">Cannot align a variable on {0,number,integer} byte boundary.</entry>
        <entry key="CoderReplaceReplacementNotFound">No function replacement was found for the function ''{0}'' in code replacement library.</entry>
        <entry key="FIACCELLicenseRequired">FIACCEL requires a Fixed-Point Designer license.</entry>
        <entry key="SIMBIOLicenseRequired">This operation requires a SimBiology license.</entry>
        <entry key="EMLCLicenseRequired">EMLC requires a MATLAB Coder license.</entry>
        <entry key="CODEGENLicenseRequired">CODEGEN requires a MATLAB Coder license.</entry>
        <entry key="MATLABCoderInstallRequired">CODEGEN requires a MATLAB Coder installation.</entry>
        <entry key="EmbeddedCoderLicenseRequired">Project ''{0}'' requires an Embedded Coder license.</entry>
        <entry key="EmbeddedCoderNotInstalled">Code generation is using a coder.EmbeddedCodeConfig object. Because Embedded Coder is not installed, this might cause some Embedded Coder features to fail.</entry>
        <entry key="AudioSystemToolboxRequired">Project ''{0}'' requires an Audio Toolbox license.</entry>
        <entry key="SimscapeRequired">Project ''{0}'' requires a Simscape license.</entry>
        <entry key="AlgorithmAnalyzerRequired">Project ''{0}'' requires a SoC Blockset license.</entry>
        <entry key="MATLABHDLCoderLicenseRequired">Project ''{0}'' requires a MATLAB HDL Coder license.</entry>
        <entry key="GPUCoderLicenseRequired">Project ''{0}'' requires a GPU Coder license.</entry>
        <entry key="PCTLicenseRequired">Project ''{0}'' requires a Parallel Computing Toolbox license.</entry>
        <entry key="PSTestLicenseRequired">This operation requires a Polyspace Test license.</entry>
        <entry key="ReqsInCodeNeedsRequirementsToolbox">Code generation is unable to include requirements traceability comments in the generated code. Generating requirements traceability comments requires a Requirements Toolbox license.</entry>
        <!-- end of licenses -->
        <entry key="OC_NameAndDescription" translate="false"></entry>
        <entry key="OC_Report">Report</entry>
        <entry key="OC_Debugging">Debugging</entry>
        <entry key="OC_CodeGen">Code Generation</entry>
        <entry key="OC_Language">Language And Semantics</entry>
        <entry key="OC_Cpp">C++ Language Features</entry>
        <entry key="OC_Safety">Safety (disable for faster execution)</entry>
        <entry key="OC_InlineAndStack">Function Inlining and Stack Allocation</entry>
        <entry key="OC_Optimizations">Optimizations</entry>
        <entry key="OC_Comments">Comments</entry>
        <entry key="OC_CustomCode">Custom Code</entry>
        <entry key="OC_THIRD_LIB">Third Party Library</entry>
        <entry key="OC_Style">Code Style</entry>
        <entry key="OC_ExtMode">External Mode</entry>
        <entry key="OC_Hardware">Hardware</entry>
        <entry key="OC_Hdl_General">General</entry>
        <entry key="OC_Hdl_Optimizations">Optimizations</entry>
        <entry key="OC_Hdl_AdvancedCoding">Advanced Coding</entry>
        <entry key="OC_Hdl_FloatingPoint">Floating Point</entry>
        <entry key="OC_Hdl_TargetToolSelection">Target Tool Selection</entry>
        <entry key="OC_Hdl_Workflow">Workflow</entry>
        <entry key="OC_Hdl_CodeStyle">Code Style</entry>
        <entry key="OC_Hdl_Clocks">Clocks</entry>
        <entry key="OC_Hdl_Ports">Ports</entry>
        <entry key="OC_Hdl_TestBench">TestBench</entry>
        <entry key="OC_Hdl_CompilationScript">Compilation Script</entry>
        <entry key="OC_Hdl_SimulationScript">Simulation Script</entry>
        <entry key="OC_Hdl_SynthesisScript">Synthesis Script</entry>
        <entry key="OC_Hdl_FrameToSampleConversion">Frame to Sample Conversion</entry>
        <entry key="OC_Hdl_LintScript">Lint Script</entry>
        <entry key="OC_FPC_General">General</entry>
        <entry key="OC_FPC_FloatingPointSimulation">Floating-Point Simulation</entry>
        <entry key="OC_FPC_FixedPointTypeProposal">Fixed-Point Type Proposal</entry>
        <entry key="OC_FPC_FixedPointConversion">Fixed-Point Type conversion </entry>
        <entry key="OC_FPC_Miscellaneous">Miscellaneous</entry>
        <entry key="OC_VersionControl">Version Control</entry>
        <entry key="OC_LastCategory" translate="false"></entry>
        <entry key="OC_PLC_General">General</entry>
        <entry key="OC_DeepLearning">Deep Learning</entry>
        <entry key="OC_GPU">GPU Code</entry>
        <!-- LAPACK -->
        <entry key="LAPACKCallbackIllegalReturn" note="stringDatatypeUpdate">LAPACK callback function ''{0}'' must return the LAPACK header file name.</entry>
        <entry key="LAPACKCallbackExecError">LAPACK callback function ''{0}'' failed: {1}.</entry>
        <entry key="LAPACKCallbackClassInvalid">LAPACK callback class ''{0}'' must be a derived class of coder.LAPACKCallback.</entry>
        <entry key="LAPACKCallbackClassNotExist">Unable to find LAPACK callback class ''{0}''.</entry>
        <!-- FFTW -->
        <entry key="FFTCallbackExecError">FFT callback function ''{0}'' failed: {1}.</entry>
        <entry key="FFTCallbackClassInvalid">FFT callback class ''{0}'' must be a derived class of coder.FFTCallback.</entry>
        <entry key="FFTCallbackClassNotExist">Unable to find FFT callback class ''{0}''.</entry>
        <entry key="FFTNumThreadsNonConst">Unable to reduce number of threads in FFTW callback class to a constant value.</entry>
        <!-- Below error will be removed after g2815900 is fixed -->
        <entry key="FFTWCallbackParallelError">Built-in FFTW Callback does not support code generation for multi threaded environments.</entry>
        <entry key="CustomFFTCallbackSettingConflict">Conflicting code configuration settings 'Custom FFT library callback' (CustomFFTCallback) and 'Use built-in FFTW library' (UseBuiltinFFTWLibrary) are both enabled. The code generator will ignore the CustomFFTCallback setting.</entry>
        <!-- BLAS -->
        <entry key="BLASCallbackIllegalReturn" note="stringDatatypeUpdate">BLAS callback function ''{0}'' must return the BLAS header file name.</entry>
        <entry key="BLASCallbackExecError">BLAS callback function ''{0}'' failed: {1}.</entry>
        <entry key="BLASCallbackClassInvalid">BLAS callback class ''{0}'' must be a derived class of coder.BLASCallback.</entry>
        <entry key="BLASCallbackClassNotExist">Unable to find BLAS callback class ''{0}''.</entry>
        <!-- RunTest -->
        <entry key="RunTestOnlySupportMexOrSIL">Option -test supported only for MEX function configurations or SIL configuration.</entry>
        <entry key="RunTestMustCompile">Option -test does not support generate code only mode.</entry>
        <entry key="RunTestBenchWithMex">Running test file: ''{0}'' with MEX function ''{1}''.</entry>
        <entry key="RunTestBenchWithMexProfileOn">Running test file: ''{0}'' with MEX function ''{1}'' (Profile ''on'').</entry>
        <entry key="TestBenchNameIsNotString">Test file name must be a character vector.</entry>
        <!-- MISRA -->
        <entry key="MISRANeedECoder">coder.setupMISRAConfig is supported for only Embedded Coder configuration objects.</entry>
        <entry key="MISRACppNamespace">To improve C++ MISRA compliance, a default namespace was added to the configuration object. Review the ''CppNamespace'' property before using this configuration object.</entry>
        <!-- Output Type -->
        <entry key="OutputFcnNameInvalid">Function ''{0}'' in coder.OutputType is not recognized as a valid entry-point function name.</entry>
        <entry key="OutputFcnIndexErr">Index specified in coder.OutputType exceeds the number of outputs of entry-point function ''{0}''.</entry>
        <entry key="OutputCycleErr">Circular dependency detected among entry-point functions: ''{0}''. This dependency might be caused by coder.OutputType specifications.</entry>
        <entry key="OutputInvalidIndex">Index specified in coder.OutputType must not be less than one.</entry>
        <entry key="OutputFcnNameEmpty">Function name specified in coder.OutputType must not be empty.</entry>
        <entry key="OutputIndexNotInt">Index specified in coder.OutputType is not representable as an integer.</entry>
        <entry key="OutputTypeCstructName">Applying coder.cstructname on a variable associated with coder.OutputType is not supported.</entry>
        <entry key="OutputTypeVarsize">Applying coder.varsize on a variable associated with coder.OutputType is not supported.</entry>
        <entry key="OutputTypeIsa">Applying preconditioning on a variable associated with coder.OutputType is not supported.</entry>
        <!-- Encapsulated C++ -->
        <entry key="GPUConfig">Generate C++ class interface with GPU code is not supported.</entry>
        <entry key="LangNotCPP">Generate C++ class interface with C code is not supported.</entry>
        <entry key="InvalidClassName">C++ interface class name is not a valid C++ type name.</entry>
        <entry key="ClassNameTooLong">C++ interface class name exceeds maximum identifier length. C++ compiler may fail to compile the generated code.</entry>
        <entry key="ClassNameCollidesWithEntryPoint">C++ interface class name must not match an entry-point function name.</entry>
        <entry key="emptyClassName">To generate C++ class interface, a non-empty class name is required.</entry>
        <entry key="HasCppSettingForC">Target language for code generation is set to C. All C++ settings ignored.</entry>
        <entry key="NonEmptyClassNameStyleFcn">C++ interface class name (CppInterfaceClassName) ''{0}'' is ignored unless C++ interface style (CppInterfaceStyle) is set to 'Methods'.</entry>
        <entry key="ClassNameCollidesWithNamespace">C++ interface class name (CppInterfaceClassName) ''{0}'' collides with namespace for MathWorks code.</entry>
        <!-- Namespace -->
        <entry key="InvalidNamespace">C++ namespace ''{0}'' in ''{1}'' is not a valid C++ identifier.</entry>
        <!-- File name mangle -->
        <entry key="FileNameTooLong">File name ''{0}'' exceeds current file system limitations.</entry>
        <entry key="CppDestructorGenerationFailed_MultiInstance">Code generator failed to produce C++ destructor for MATLAB class ''{0}''. Generated code is not exception-safe. To enable generation of C++ destructor, disable 'Generate Re-entrant code (MultiInstanceCode)' configuration parameter.</entry>
        <entry key="CppDestructorGenerationFailed_Unknown">Code generator failed to produce C++ destructor for MATLAB class ''{0}''. Generated code is not exception-safe.</entry>
        <!-- Git -->
        <entry key="CannotFindGit">Cannot find git on system path. Git support will be disabled.</entry>
        <entry key="CannotReinitGit">Cannot initialize a Git repository under root of another Git repository.</entry>
        <!-- Always false check node-->
        <entry key="AlwaysFalseCheckNode" translate="false">A check that is always false is detected at compile-time. Eliminating code that follows.</entry>
        <entry key="NoHandleClassEpMEXXIL">Handle classes are not supported as entry points for MEX, SIL, and PIL code generation.</entry>
        <entry key="ClassFlagFirst">The "-flag" argument must come before any entry-point functions.</entry>
        <entry key="ClangFormatFallbackWarning">File {0} is too large and will not be formatted by clang-format.</entry>
        <entry key="LLVMException">{0}</entry> <!-- Never displayed to user directly -->
        <entry key="ClangInvalidCWD">Unable to read current working directory.</entry>
        <entry key="ClangInvocationFailed">Clang invocation failed with message: {0}</entry>
        <entry key="ClangUnavailable">Clang is not available in this product configuration.</entry>
        <entry key="ClangDiagnosticsEmitted">Clang invocation completed with the following diagnostics:\n{0}</entry>

        <entry key="MachOUpdateSignatureFailed">Failed to update code signature on Mach-O binary.</entry>
        <entry key="MachONoCodeDirectoryBlob">No code directory blob in Mach-O binary.</entry>
        <entry key="MachOInvalidHashAlgorithm">Invalid hash id ({0}) in Mach-O code directory.</entry>
        <entry key="MachOContainsSpecialHashSlots">Mach-O code directory contains special hash slots.</entry>
        <entry key="MachOContainsCryptographicSignature">Mach-O contains cryptographically signed checksum.</entry>

        <entry key="AliasTypeInvalidWrappedType">Object of type {0} cannot be stored in a coder.AliasType. Only scalar coder.Type objects may be stored in coder.AliasType.</entry>
        <entry key="AliasCycleInAggregate">Cannot update element in aggregate because it would introduce a cycle.</entry>
        <entry key="AliasOf">Alias of {0}\n</entry>

        <!-- FAV Input Type Messages -->
        <!-- Holes for arguments or properties block -->
        <entry key="FAVFunction">entry-point function</entry>
        <entry key="FAVArgument">argument</entry>
        <entry key="FAVArgumentsBlock">arguments block</entry>
        <entry key="FAVArgumentAlternative">Use the -args option of the ''codegen'' command, manually define input types in the MATLAB Coder app, or use preconditioning statements.</entry>
        <entry key="FAVClass">class</entry>
        <entry key="FAVProperty">property</entry>
        <entry key="FAVPropertiesBlock">properties block</entry>
        <entry key="FAVPropertyAlternative">Use the -args option of the ''codegen'' command or manually define input types in the MATLAB Coder app.</entry>
        <!-- Holes for alternative when cell input is used -->
        <entry key="FAVCellAlternative">To specify a cell input type, use the -args option of the ''codegen'' command or manually define input types in the MATLAB Coder app.</entry>
        <entry key="FAVCellAlternativeWithPrecondition">To specify a cell input type, use the -args option of the ''codegen'' command, manually define input types in the MATLAB Coder app, or use preconditioning statements.</entry>
        <!-- Only for arguments block -->
        <entry key="FAVNonPrimitiveClass" note="{3}:FAVArgumentAlternative">Code generation does not support using the arguments block to specify non-primitive class ''{0}'' as the input type for argument ''{1}'' in entry-point function ''{2}''. {3}</entry>
        <entry key="FAVRepeatingNotSupported" note="{2}:FAVArgumentAlternative">Code generation does not support using the arguments block to specify the input types for repeating argument ''{0}'' in entry-point function ''{1}''. {2}</entry>
        <entry key="FAVTildeNotSupported">Code generation does not support using ''~'' inside arguments blocks to indicate ignored input arguments for input type specification in entry-point functions. Provide a name for the input argument, or remove the input argument.</entry>
        <entry key="FAVNameValueNotSupported">Code generation does not support using arguments blocks to specify the input type for name-value argument ''{0}.{1}'' in entry-point function ''{2}''. Use a positional argument instead.</entry>
        <entry key="FAVGPUIncorrectType">Value must be a ''{0}'' or a gpuArray that has ''{0}'' as the underlying type.</entry>
        <!-- For arguments or properties block -->
        <entry key="FAVInsufficientClass" note="{0}:FAVArgument/FAVProperty, {2}:FAVFunction/FAVClass, {4}:FAVArgumentsBlock/FAVPropertiesBlock">Unable to determine the class of {0} ''{1}'' in {2} ''{3}'' from the {4}. Specify the class of this {0} in the {4} using class specification or the ''{5}'' validator.</entry>
        <entry key="FAVInsufficientSize" note="{0}:FAVArgument/FAVProperty, {2}:FAVFunction/FAVClass, {4}:FAVArgumentsBlock/FAVPropertiesBlock">Unable to determine the size of {0} ''{1}'' in {2} ''{3}'' from the {4}. Specify the size of this {0} in the {4} using size specification.</entry>
        <entry key="FAVInsufficientClassAndSize" note="{0}:FAVArgument/FAVProperty, {2}:FAVFunction/FAVClass, {4}:FAVArgumentsBlock/FAVPropertiesBlock">Unable to determine the size or class of {0} ''{1}'' in {2} ''{3}'' from the {4}. Specify the size of this {0} in the {4} using the size specification, and the class using the class specification or the ''{5}'' validator.</entry>
        <entry key="FAVCellsNotSupported" note="{0}:FAVArgumentsBlock/FAVPropertiesBlock, {2}:FAVArgument/FAVProperty, {4}:FAVFunction/FAVClass, {5}:=FAVArgumentAlternative/FAVPropertyAlternative">Using the {0} to specify a ''cell'' input type for {1} ''{2}'' in {3} ''{4}'' is not supported for code generation. {5} Alternatively, convert the cell array to a class with property validation.</entry>
        <entry key="FAVStructsNotSupported" note="{0}:FAVArgumentsBlock/FAVPropertiesBlock, {2}:FAVArgument/FAVProperty, {4}:FAVFunction/FAVClass, {5}:=FAVArgumentAlternative/FAVPropertyAlternative">Using the {0} to specify a ''struct'' input type for {1} ''{2}'' in {3} ''{4}'' is not supported for code generation. {5} Alternatively, convert the struct to a class with property validation.</entry>
        <entry key="FAVUnsupportedType" note="{0}:FAVArgumentsBlock/FAVPropertiesBlock, {2}:FAVArgument/FAVProperty, {4}:FAVFunction/FAVClass, {6}:=FAVArgumentAlternative/FAVPropertyAlternative">For code generation, using the {0} to specify the ''{1}'' input type for {2} ''{3}'' in {4} ''{5}'' is not supported. {6}</entry>
        <entry key="FAVInternalEPError">Unable to determine the input type for argument ''{0}'' in entry-point function ''{1}''. To specify input types for this entry-point function, use the -args option of the ''codegen'' command or manually define input types in the MATLAB Coder app.</entry>
        <entry key="FAVMultipleClasses">Specifying multiple classes with the ''{0}'' validator is not supported for input type specification for code generation. To specify multiple entry-point signatures, use the -args option of the ''codegen'' command or manually define input types in the MATLAB Coder app.</entry>
        <entry key="FAVClassError" note="{1}:FAVArgument/FAVProperty, {3}:FAVFunction/FAVClass">Using class ''{0}'' of {1} ''{2}'' in {3} ''{4}'' caused this error during code generation:\n{5}</entry>
        <entry key="FAVNonScalarString" note="{0}:FAVArgumentsBlock/FAVPropertiesBlock, {2}:FAVArgument/FAVProperty, {4}:FAVFunction/FAVClass, {5}:=FAVCellAlternative/FAVCellAlternativeWithPrecondition">Using the {0} to specify a non-scalar size for the ''string'' type {1} ''{2}'' in {3} ''{4}'' is not supported for code generation. Specify the size of the ''string'' array to be scalar or specify the input to be a cell array of character vectors. {5}</entry>
        <entry key="FAVNonScalarClass" note="{0}:FAVArgumentsBlock/FAVPropertiesBlock, {2}:FAVArgument/FAVProperty, {4}:FAVFunction/FAVClass, {6}:FAVCellAlternative">Using the {0} to specify a non-scalar size for the ''{1}'' type {2} ''{3}'' in {4} ''{5}'' is not supported for code generation. Specify the size of the ''{1}'' array to be scalar or specify the input to be a cell array of ''{1}'' objects. {6}</entry>
        <!--  For arguments or properties block - Validators -->
        <entry key="FAVComplexityOnNonNumericClass" note="{2}:FAVArgument/FAVProperty, {4}:FAVFunction/FAVClass">Applying ''{0}'' validator to the ''{1}'' type {2} ''{3}'' in {4} ''{5}'' is not supported. Remove the ''{0}'' validator or change the class from ''{1}'' to a numeric type.</entry>
        <entry key="FAVSparsityOnUnsupportedClass" note="{2}:FAVArgument/FAVProperty, {4}:FAVFunction/FAVClass">Applying ''{0}'' validator to the ''{1}'' type {2} ''{3}'' in {4} ''{5}'' is not supported. Remove the ''{0}'' validator or change the class from ''{1}'' to double or logical type.</entry>
        <entry key="FAVGPUOnUnsupportedClass" note="{2}:FAVArgument/FAVProperty, {4}:FAVFunction/FAVClass">Applying ''{0}'' validator to the ''{1}'' type {2} ''{3}'' in {4} ''{5}'' is not supported. Remove the ''{0}'' validator or change the class from ''{1}'' to integer, double, single, or logical type.</entry>
        <entry key="FAVGPUOnUnsupportedClassSimple">The ''className'' argument to the ''coder.specifyAsGPU'' validator must be the name of a class that gpuArray supports. Supported class names are: {0}.</entry>
        <entry key="FAVGPUAndClassSpec" note="{1}:FAVArgument/FAVProperty, {3}:FAVFunction/FAVClass">Applying ''{0}'' validator to the {1} ''{2}'' in {3} ''{4}'' is not compatible with class specification or the ''{5}'' validator. Remove the ''{0}'' validator or remove both the class specification and the ''{5}'' validator.</entry>
        <entry key="FAVValidatorSecondArgMustBeString">For code generation input type specification, the ''{0}'' validator must take a character vector or string scalar literal as the second argument. For example, ''{0}(in1, ''double'')'', or ''{0}(in1, "double")''.</entry>
        <entry key="FAVInvalidArgCount">For code generation input type specification, the ''{0}'' validator must take ''{1,number,integer}'' arguments.</entry>
        <entry key="FAVFirstArgNotCurrent">The first input to the ''{0}'' validator must be the current argument being validated.</entry>

        <entry key="TooManyInputArguments">Too many input arguments. Expected at most {0,number,integer} but found {1,number,integer}.</entry>
        <entry key="TooFewInputArguments">Too few input arguments. Expected at least {0,number,integer} but found {1,number,integer}.</entry>
        <entry key="TooManyOutputArguments">Too many output arguments. Expected at most {0,number,integer} but found {1,number,integer}.</entry>

        <entry key="MCOSPropertyAccessorsInvalidObject">Input is not a scalar MCOS object or it is a deleted handle.</entry>
        <entry key="MCOSPropertyAccessorsInvalidClassName">''{0}'' does not denote a fully namespace qualified MATLAB class.</entry>
        <entry key="MCOSPropertyAccessorsInvalidPropertyName">''{0}'' does not denote a property within class ''{1}''</entry>
        <entry key="MCOSPropertyAccessorsObjectNotDerivedFromClass">Input object of class ''{0}'' does not inherit from class ''{1}''</entry>
        <entry key="MCOSPropertyAccessorsAmbiguousPropertyName">Cannot access stored property named ''{0}'' because multiple properties in class ''{1}'' are named ''{0}''.</entry>
        <entry key="MCOSPropertyAccessorsNonStatefulProperty">Cannot access stored value on property ''{0}'' defined in class ''{1}'' because the property is either abstract, dependent, or static.</entry>

        <!-- Used for testing only -->
        <entry translate="false" key="MCOSPropertyAccessorsTestClassesPositiveIntegerNotInteger">Cannot convert mxArray to positive integer data type.</entry>
        <entry translate="false" key="MCOSPropertyAccessorsTestClassesPositiveIntegerNotPositive">Converted mxArray to positive integer is not positive.</entry>
        <entry translate="false" key="MCOSPropertyAccessorsTestClassesPositiveIntegerNullValue">Cannot convert null positive integer data type to mxArray.</entry>

        <entry key="OpenmpOnMacOSWithC89Warning">The header "omp.h" provided with this MATLAB installation on macOS is not compatible with the C89/C90 (ANSI) standard. To generate C89/C90 (ANSI) compliant code, disable the configuration option Enable OpenMP Library if Possible ('EnableOpenMP').</entry>
        <entry key="EntryPointDuplicateSanitizedQualifiedName">Entry-point functions ''{0}'' and ''{1}'' attempt to use the same generated file name (''{2}''). Rename one of the functions.</entry>
        <entry key="EntryPointDuplicateQualifiedSignatureName">Entry-point functions ''{0}'' and ''{1}'' have the same name in the generated code (''{2}''). Rename one of the functions.</entry>
        <entry key="EntryPointDuplicateSanitizedQualifiedSignatureName">Entry-point functions ''{0}'' and ''{1}'' have the same name in the generated code (''{2}''). Rename one of the functions.</entry>
        <entry key="EntryPointResolvedToUnexpectedFile">Resolved function {0} to file ''{2}'', but MATLAB found function {0} in file ''{1}''. Specify the entry-point function {0} instead of the file path.</entry>
        <entry key="EntryPointFailedToResolveToExpectedFile">Unable to find function {0}. Add file ''{1}'' to the MATLAB or code generation path, and specify the entry-point function {0} instead of the file path.</entry>
        <entry key="UnableToDeterminedExpectedResolvedFilePath">Unable to find file ''{0}''. Specify the entry-point function name {1} instead of the file.</entry>
        <entry key="ImplicitlyInferredExpectedResolvedFilePath">Unable to find file ''{0}'' relative to the MATLAB current folder. Using near-match file ''{1}'' on the MATLAB path. To avoid this warning, specify the entry-point function name {2} instead of the file.</entry>
        <entry translate="false" key="ExpectedResolvedFilePathMustBeAbsolute">The specified expected resolved file path ''{0}'' is not an absolute path.</entry>
    </message>
</rsccat>

<!-- LocalWords:  FIACCEL VARSIZE Subscripted LAPACK BLAS varsize GW FAV omp
-->
