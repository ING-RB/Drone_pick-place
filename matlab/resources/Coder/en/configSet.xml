<?xml version="1.0" encoding="UTF-8" ?>
<!-- Copyright 1994-2024 The MathWorks, Inc. -->
<rsccat version="1.0" locale="en_US" product="Coder" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../../schema/msgcat.xsd">
  <message>
    <entry key="MEXReportName">Generate Code Generation report</entry>
    <entry key="MEXReportToolTip">Document the generated code in an HTML report.</entry>
    <entry key="MEXLaunchReportName">Launch report automatically</entry>
    <entry key="MEXLaunchReportToolTip">Automatically open HTML report after code generation completes.</entry>
    <entry key="MEXDebugBuildName">Enable debug build</entry>
    <entry key="MEXDebugBuildToolTip">Compile the generated code in debug mode.</entry>
    <entry key="MEXEchoName">Echo expressions without semicolons</entry>
    <entry key="MEXEchoToolTip">Echo expressions without semicolons.</entry>
    <entry key="MEXBuildProName">Code Generation Options</entry>
    <entry key="MEXPageName">Automatic C-MEX Generation</entry>
    <entry key="RTWAdvancedTabName">Advanced</entry>
    <entry key="CompilerOptionsTabName">MEX Configuration</entry>
    <entry key="inlineThresholdName">Inline threshold:</entry>
    <entry key="inlineThresholdToolTip">Specify the maximum size of functions to be inlined</entry>
    <entry key="inlineThresholdMaxName">Inline threshold max:</entry>
    <entry key="inlineThresholdMaxToolTip">Specify the maximum size of functions after inlining</entry>
    <entry key="inlineStackLimitName">Inline stack limit:</entry>
    <entry key="inlineStackLimitToolTip">Specify the stack size limit on inlined functions</entry>
    <entry key="stackUsageMaxName">Stack usage max:</entry>
    <entry key="stackUsageMaxToolTip">Specify the maximum stack usage per function</entry>
    <entry key="constFoldTimeoutName">Constant folding timeout:</entry>
    <entry key="constFoldTimeoutToolTip">Specify the maximum number of instructions to be executed by the constant folder</entry>
    <entry key="inlineName">Function Inlining Control</entry>
    <entry key="miscName">Miscellaneous Transform Control</entry>
    <entry key="generalName">General</entry>
    <entry key="SatOnIntOverflowName">Saturate on integer overflow</entry>
    <entry key="SatOnIntOverflowToolTip">Add additional checks in the generated code to detect integer overflow or underflow.</entry>
    <entry key="VariableSizingName">Enable variable-sizing</entry>
    <entry key="VariableSizingToolTip">Enable support for variable-sized arrays</entry>
    <entry key="DynamicMemoryName">Dynamic memory allocation</entry>
    <entry key="DynamicMemoryTooltip">Choose when to use dynamic memory allocation</entry>
    <entry key="DynamicMemoryOff">Never</entry>
    <entry key="DynamicMemoryVariableSizeArrays">For variable size arrays</entry>
    <entry key="DynamicMemoryUnknownUpperBoundsOnly">For variable size arrays with unknown upper bounds only</entry>
    <entry key="DynamicMemoryAllVariableSizeArrays">For all variable size arrays</entry>
    <entry key="DynamicMemoryThresholdName">Dynamic memory allocation threshold in bytes</entry>
    <entry key="DynamicMemoryThresholdTooltip">Use dynamic memory allocation when data exceeds number of bytes as specified here</entry>
    <entry key="RuntimeCheckName">Runtime Checks</entry>
    <entry key="RuntimeCheckIntegrityName">Ensure memory integrity</entry>
    <entry key="RuntimeCheckIntegrityToolTip">Detects violations of memory integrity in generated code and stops execution with a diagnostic.\nWithout these checks, violations will lead to unpredictable behavior. The most likely cause\nof memory integrity issues is accessing an array out of bounds.</entry>
    <entry key="RuntimeCheckExtrinsicName">Extrinsic calls</entry>
    <entry key="RuntimeCheckExtrinsicToolTip">Allow calls out to MATLAB.  When disabled, attempts to remove extrinsic calls.</entry>
    <entry key="RuntimeCheckCtrlcName">Ensure responsiveness</entry>
    <entry key="RuntimeCheckCtrlcToolTip">Periodically checks for Ctrl-C breaks and refreshes graphics. Without\nthese checks the only way to end a long-running execution may be to\nterminate MATLAB.</entry>
    <entry key="RTWGeneralTabName">General</entry>
    <entry key="RTWDescriptionName">Description:</entry>
    <entry key="RTWTargetLangName">Language:</entry>
    <entry key="RTWTargetLangToolTip">Select code generation language</entry>
    <entry key="RTWCompOptsName">Compiler optimization level:</entry>
    <entry key="RTWCompOptsToolTip">Choose compiler optimization level</entry>
    <entry key="RTWCompOptsLevelOff">Optimizations off (faster builds)</entry>
    <entry key="RTWCompOptsLevelOn">Optimizations on (faster runs)</entry>
    <entry key="RTWCompOptsLevelCustom">Custom</entry>
    <entry key="RTWCustomCompOptsName">Custom compiler optimization flags:</entry>
    <entry key="RTWCustomCompOptsToolTip">Specify compiler optimizations flags, e.g. -O2</entry>
    <entry key="RTWMakeCommName">Make command:</entry>
    <entry key="RTWMakeCommToolTip">Make command with optional arguments.</entry>
    <entry key="RTWGenMakefileName">Generate makefile</entry>
    <entry key="RTWGenMakefileToolTip">Enables generation of makefile for compiling generated code.</entry>
    <entry key="RTWTempMakeName">Template makefile:</entry>
    <entry key="RTWTempMakeToolTip">Current template makefile for building code generation target.</entry>
    <entry key="RTWBuildToolConfigName">Configuration:</entry>
    <entry key="RTWBuildToolConfigToolTip">Select the configuration to be used for building the generated code</entry>
    <entry key="RTWGenerateMainName">Generate main</entry>
    <entry key="RTWGenerateMainToolTip">Select to create a "main" function.\nOtherwise, you must provide a "main" function</entry>
    <entry key="RTWBuildToolCustomizeName">Customize...</entry>
    <entry key="RTWBuildToolCustomizeToolTip">Launches the XMakefile User Configuration dialog</entry>
    <entry key="RTWGenCodeName">Generate code only</entry>
    <entry key="RTWGenCodeToolTip">Do not execute makefile when generating code.</entry>
    <entry key="RTWCodeGenOptionsName">Code generation options</entry>
    <entry key="RTWFilePartitionName">Generated file partitioning method:</entry>
    <entry key="RTWFilePartitionToolTip">Choose the generated file partitioning method</entry>
    <entry key="RTWFilePartitionMapMFileToCFile">Generate one file for each MATLAB file</entry>
    <entry key="RTWFilePartitionSingleFile">Generate all functions into a single file</entry>
    <entry key="RTWDebugTabName">Debug</entry>
    <entry key="RTWVerboseName">Verbose build</entry>
    <entry key="RTWVerboseToolTip">Show code generation stages and compiler output.</entry>
    <entry key="RTWTargetSelName">Target selection</entry>
    <entry key="RTWBuildProName">Build process</entry>
    <entry key="RTWMakefileConfigName">Makefile configuration</entry>
    <entry key="RTWRtwDebugName">Build process</entry>
    <entry key="RTWReportTabName">Report</entry>
    <entry key="RTWCommentTabName">Comments</entry>
    <entry key="genCommentGroupName">Overall control</entry>
    <entry key="genCommentName">Include comments</entry>
    <entry key="genCommentToolTip">Include comments in generated code</entry>
    <entry key="autoGenName">Auto generated comments</entry>
    <entry key="MATLABSourceCommentsName">MATLAB source code as comments</entry>
    <entry key="MATLABSourceCommentLineNumbersName">MATLAB source code as comments</entry>
    <entry key="MATLABSourceCommentsToolTip">Insert MATLAB source code into the generated code as comments.</entry>
    <entry key="customComments">Custom comments</entry>
    <entry key="MATLABFcnDescName">MATLAB user comments</entry>
    <entry key="MATLABFcnDescToolTip">Insert MATLAB function descriptions (help text) into the generated code as\npart of the function banner.</entry>
    <entry key="RTWReportGenerateReportName">Create code generation report</entry>
    <entry key="RTWReportGenerateReportToolTip">Document the generated C code in a code generation report.</entry>
    <entry key="RTWReportLaunchReportName">Launch report automatically</entry>
    <entry key="RTWReportLaunchReportToolTip">Automatically open code generation report after build process completes.</entry>
    <entry key="srcCodeName">Source file:</entry>
    <entry key="srcCodeToolTip"><![CDATA[Enter code to appear at the top of the generated <project>.c source file.]]></entry>
    <entry key="headerCodeName">Header file:</entry>
    <entry key="headerCodeToolTip"><![CDATA[Enter code to appear at the top of the generated <project>.h header file.]]></entry>
    <entry key="includePathName">Include directories:</entry>
    <entry key="includePathToolTip">Enter a space-separated list of include directories to be added to\nthe include path when compiling the generated code.</entry>
    <entry key="sourceFileName">Source files:</entry>
    <entry key="sourceFileToolTip">Enter a space-separated list of source files to be compiled and linked\nwith the generated code.</entry>
    <entry key="libraryName">Libraries:</entry>
    <entry key="libraryToolTip">Enter a space-separated list of static library files to be linked\nwith the generated code.</entry>
    <entry key="initializerName">Initialize function:</entry>
    <entry key="initializerToolTip">Enter code to appear in the generated project initialize function.</entry>
    <entry key="terminatorName">Terminate function:</entry>
    <entry key="terminatorToolTip">Enter code to appear in the generated project terminate function.</entry>
    <entry key="customCodeListToolTip">Select one of the items to be edited in the right panel.</entry>
    <entry key="customCodeListSourceFile">Source file</entry>
    <entry key="customCodeListHeaderFile">Header file</entry>
    <entry key="customCodeListInitializeFunction">Initialize function</entry>
    <entry key="customCodeListTerminateFunction">Terminate function</entry>
    <entry key="customIncludeListIncludeDirectories">Include directories</entry>
    <entry key="customIncludeListSourceFiles">Source files</entry>
    <entry key="customIncludeListLibraries">Libraries</entry>
    <entry key="customCodeName">Include custom c-code in generated:</entry>
    <entry key="customIncludeName">Include list of additional:</entry>
    <entry key="customCodeTabName">Custom Code</entry>
    <entry key="sfsGroupName">Identifier format control</entry>
    <entry key="sfsglobalvarName">Global variables:</entry>
    <entry key="sfsglobalvarToolTip">Symbol format rule for global variables.  Rule may contain valid C-identifier\ncharacters and these macros:\n$M - Mangle\n$R - Root project name\n$N - Name of object being identified</entry>
    <entry key="sfsLocalVarName">Local temporary variables:</entry>
    <entry key="sfsLocalVarToolTip">Symbol format rule for local temporary variables.  Rule may contain valid C-identifier\ncharacters and these macros:\n$M - Mangle\n$R - Root project name\n$N - Name of object being identified</entry>
    <entry key="sfsConstMacroName">Constant macros:</entry>
    <entry key="sfsConstMacroToolTip">Symbol format rule for constant macros.  Rule may contain valid C-identifier\ncharacters and these macros:\n$M - Mangle\n$R - Root project name\n$N - Name of object being identified</entry>
    <entry key="sfsGlobalTypeName">Global types:</entry>
    <entry key="sfsGlobalTypeToolTip">Symbol format rule for global types.  Rule may contain valid C-identifier\ncharacters and these macros:\n$M - Mangle\n$R - Root project name\n$N - Name of object being identified</entry>
    <entry key="sfsGlobalFieldName">Field name of global types:</entry>
    <entry key="sfsGlobalFieldToolTip">Symbol format rule for field name of global types.  Rule may contain valid C-identifier\ncharacters and these macros:\n$M - Mangle\n$R - Root project name\n$N - Name of object being identified</entry>
    <entry key="sfsLocalFunctionName">Local functions:</entry>
    <entry key="sfsLocalFunctionToolTip">Symbol format rule for local functions.  Rule may contain valid C-identifier\ncharacters and these macros:\n$M - Mangle\n$R - Root project name\n$N - Name of object being identified</entry>
    <entry key="sfsEMXArrayName">EMX Arrays:</entry>
    <entry key="sfsEMXArrayToolTip">Symbol format rule for EMX Arrays.  Rule may contain valid C-identifier\ncharacters and these macros:\n$M - Mangle\n$R - Root project name\n$N - Name of object being identified</entry>
    <entry key="maxIdName">Maximum identifier length:</entry>
    <entry key="maxIdToolTip">Maximum identifier length for variable, typedef, and function names.</entry>
    <entry key="reservedName">Reserved names:</entry>
    <entry key="reservedToolTip">Enter a space-separated list of reserved names to be excluded\nfrom generated code.</entry>
    <entry key="autoIdName">Auto-generated identifier naming rules</entry>
    <entry key="reservedNames">Reserved names</entry>
    <entry key="symbols">Symbols</entry>
    <entry key="hardwarePageName">Hardware Implementation</entry>
    <entry key="hardwareGroup1Name">Embedded hardware (simulation and code generation)</entry>
    <entry key="hardwareGroup2Name">Emulation hardware (code generation only)</entry>
    <entry key="hardwareGroup3Name">Largest atomic size</entry>
    <entry key="hardwareWProdVendorLblName">Device vendor:</entry>
    <entry key="hardwareWProdTypeLblName">Device type:</entry>
    <entry key="ProdHWToolTip">Select a predefined hardware device to specify the C language constraints \nfor your microprocessor or "{0}" if your microprocessor is not \nlisted.  Select "{1}" for no constraints.</entry>
    <entry key="TargetHWToolTip">Select a predefined hardware device to specify the C language constraints \nfor your microprocessor or "{0}" if your microprocessor is not \nlisted.  Select "{1}" to target current MATLAB\n host machine.</entry>
    <entry key="hardwareNumOfBitsName">Number of bits</entry>
    <entry key="hardwareNumBitsName">Hardware word sizes.</entry>
    <entry key="hardwareCharToolTip">Number of bits used to represent C type char.</entry>
    <entry key="hardwareShortToolTip">Number of bits used to represent C type short.</entry>
    <entry key="hardwareIntToolTip">Number of bits used to represent C type int.</entry>
    <entry key="hardwareLongToolTip">Number of bits used to represent C type long.</entry>
    <entry key="hardwareFloatToolTip">Number of bits used to represent C type float (for information only, not settable).</entry>
    <entry key="hardwareDoubleToolTip">Number of bits used to represent C type double (for information only, not settable).</entry>
    <entry key="hardwarePointerToolTip">Number of bits used to represent C type pointer (for information only, not settable).</entry>
    <entry key="hardwareSizeTToolTip">Number of bits used to represent C type size_t (for information only, not settable).</entry>
    <entry key="hardwarePtrDiffTToolTip">Number of bits used to represent C type ptrdiff_t pointer (for information only, not settable).</entry>
    <entry key="hardwareProdBitPerCharName" translate="false" note="TranslateFalseBatch;">char:   </entry>
    <entry key="hardwareProdBitPerShortName" translate="false" note="TranslateFalseBatch;">short:  </entry>
    <entry key="hardwareProdBitPerIntName" translate="false" note="TranslateFalseBatch;">int:    </entry>
    <entry key="hardwareProdBitPerLongName" translate="false" note="TranslateFalseBatch;">long:   </entry>
    <entry key="hardwareProdBitPerFloatName" translate="false" note="TranslateFalseBatch;">float:   </entry>
    <entry key="hardwareProdBitPerDoubleName" translate="false" note="TranslateFalseBatch;">double:   </entry>
    <entry key="hardwareProdBitPerPointerName">pointer:   </entry>
    <entry key="hardwareProdBitPerSizeTName" translate="false" note="TranslateFalseBatch;">size_t:   </entry>
    <entry key="hardwareProdBitPerPtrDiffTName" translate="false" note="TranslateFalseBatch;">ptrdiff_t:   </entry>
    <entry key="hardwareIntegerAtomicLabelName">integer:   </entry>
    <entry key="hardwareFloatAtomicLabelName">floating-point:   </entry>
    <entry key="hardwareLargestAtomicIntegerToolTip">Specify the largest integer data type that can be atomically loaded and stored. All smaller integer data types will be considered atomic.</entry>
    <entry key="hardwareLargestAtomicFloatToolTip">Specify the largest floating-point data type that can be atomically loaded and stored. If Double is specified, Float will be considered atomic as well.</entry>
    <entry key="hardwareProdEndianName">Byte ordering:</entry>
    <entry key="hardwareProdWordName">native word size:</entry>
    <entry key="hardwareIntDivRoundToName">Signed integer division rounds to:</entry>
    <entry key="hardwareIntDivisionToolTip">Specify how your C compiler rounds the result of dividing two signed\nintegers.  This information enables efficient C code to be generated\nfrom this project.</entry>
    <entry key="hardwareShiftRightName">Shift right on a signed integer as arithmetic shift</entry>
    <entry key="hardwareArithmeticShiftToolTip">Specify that your C compiler implements a right shift of a signed integer\nas an arithmetic right shift. Virtually all compilers do this.</entry>
    <entry key="hardwareEndianToolTip">Specify if the byte ordering of the target is Big Endian (most\nsignificant byte first) or Little Endian (least significant byte\nfirst).  If left unspecified, the generated code computes the result.</entry>
    <entry key="hardwareNativeWordToolTip">The number of bits that the target processor can process at one time.\nProviding the processor''s native word size allows for more efficient\ncode to be generated when converting the endian byte order of data types.</entry>
    <entry key="hardwareSyncWithAboveToolTip">Specify that the hardware to be used to test code generated from this project\nis the same as the hardware on which the code will finally run. If this option\nis not selected, additional code is generated to emulate the final hardware\non the test hardware.</entry>
    <entry key="hardwareProdEqTargetName">None</entry>
    <entry key="hardwareInstructionSetExtensionsText">Leverage target hardware instruction set extensions</entry>
    <entry key="hardwareInstructionSetExtensions_Tooltip">Optimize generated code with instruction set extensions:</entry>
    <entry key="hardwareInstructionSetExtensionsDisabled_Tooltip">Optimize generated code with instruction set extensions:  Disabled</entry>
    <entry key="hardwareOptimizeReductionsText">Optimize reductions</entry>
    <entry key="hardwareOptimizeReductions_Tooltip">Optimize generated code by enabling reduction support</entry>
    <entry key="hardwareFMAText">FMA</entry>
    <entry key="hardwareFMA_Tooltip">Selecting FMA extension will generate code with FMA intrinsics</entry>
    <entry key="InstructionSets_None">None</entry>
    <entry key="Hardware_Prod_CharGTShort">Error in embedded hardware settings: word length for "char" is longer than that for "short". Word length for "char" is {0,number,integer}, while that for "short" is {1,number,integer}</entry>
    <entry key="Hardware_Prod_CharNonPos">Error in embedded hardware settings: "char" specifies a value of {0,number,integer}, but it must be a positive value</entry>
    <entry key="Hardware_Prod_CharOutOfRange">Error in embedded hardware settings: "char" specifies a value of {0,number,integer}, but it must be a value between 8 and 32</entry>
    <entry key="Hardware_Prod_ShortOutOfRange">Error in embedded hardware settings: "short" specifies a value of {0,number,integer}, but it must be a value between 8 and 32</entry>
    <entry key="Hardware_Prod_IntOutOfRange">Error in embedded hardware settings: "int" specifies a value of {0,number,integer}, but it must be a value between 8 and 32</entry>
    <entry key="Hardware_Prod_LongLongOutOfRange">Error in embedded hardware settings: "long long" specifies a value of {0,number,integer}, but it must be at least 64</entry>
    <entry key="Hardware_Prod_No32BitType">Error in embedded hardware settings: at least one of "char", "short", "int" or "long" must have a value of 32</entry>
    <entry key="Hardware_Prod_AtomicLongLongUnavailable">Error in embedded hardware settings: ProdLargestAtomicInteger=''LongLong'' but ProdLongLongMode is ''off''</entry>
    <entry key="Hardware_Prod_IntGTLong">Error in embedded hardware settings: word length for "int" is longer than that for "long". Word length for "int" is {0,number,integer}, while that for "long" is {1,number,integer}</entry>
    <entry key="Hardware_Prod_LongGTLongLong">Error in embedded hardware settings: word length for "long" is longer than that for "long long". Word length for "long" is {0,number,integer}, while that for "long long" is {1,number,integer}</entry>
    <entry key="Hardware_Prod_LongTooBig">Error in embedded hardware settings: "long" specifies a value of {0,number,integer}, but the maximum supported value is {1,number,integer}</entry>
    <entry key="Hardware_Prod_LongLongTooBig">Error in embedded hardware settings: "long long" specifies a value of {0,number,integer}, but the maximum supported value is {1,number,integer}</entry>
    <entry key="Hardware_Prod_ShortGTInt">Error in embedded hardware settings: word length for "short" is longer than that for "int". Word length for "short" is {0,number,integer}, while that for "int" is {1,number,integer}</entry>
    <entry key="Hardware_Prod_WordSizeNotMatch">Error in embedded hardware settings: "native word size" specifies a value of {0,number,integer}, but it must match one of the values specified by the {1} parameters.</entry>
    <entry key="Hardware_Prod_WordSizeNotMultipleOf8">Error in embedded hardware settings: All word sizes must be multiples of 8.  Illegal word size: {0,number,integer}.</entry>
    <entry key="Hardware_Target_CharGTShort">Error in test hardware settings: word length for "char" is longer than that for "short". Word length for "char" is {0,number,integer}, while that for "short" is {1,number,integer}</entry>
    <entry key="Hardware_Target_CharNonPos">Error in test hardware settings: "char" specifies a value of {0,number,integer}, but it must be a positive value</entry>
    <entry key="Hardware_Target_CharOutOfRange">Error in test hardware settings: "char" specifies a value of {0,number,integer}, but it must be a value between 8 and 32</entry>
    <entry key="Hardware_Target_ShortOutOfRange">Error in test hardware settings: "short" specifies a value of {0,number,integer}, but it must be a value between 8 and 32</entry>
    <entry key="Hardware_Target_IntOutOfRange">Error in test hardware settings: "int" specifies a value of {0,number,integer}, but it must be a value between 8 and 32</entry>
    <entry key="Hardware_Target_No32BitType">Error in test hardware settings: at least one of "char", "short", "int" or "long" must have a value of 32</entry>
    <entry key="Hardware_Target_AtomicLongLongUnavailable">Error in test hardware settings: TargetLargestAtomicInteger=''LongLong'' but TargetLongLongMode is ''off''</entry>
    <entry key="Hardware_Target_IntGTLong">Error in test hardware settings: word length for "int" is longer than that for "long". Word length for "int" is {0,number,integer}, while that for "long" is {1,number,integer}</entry>
    <entry key="Hardware_Target_LongGTLongLong">Error in test hardware settings: word length for "long" is longer than that for "long long". Word length for "long" is {0,number,integer}, while that for "long long" is {1,number,integer}</entry>
    <entry key="Hardware_Target_LongTooBig">Error in test hardware settings: "long" specifies a value of {0,number,integer}, but the maximum supported value is {1,number,integer}</entry>
    <entry key="Hardware_Target_LongLongTooBig">Error in test hardware settings: "long long" specifies a value of {0,number,integer}, but the maximum supported value is {1,number,integer}</entry>
    <entry key="Hardware_Target_LongLongOutOfRange">Error in test hardware settings: "long long" specifies a value of {0,number,integer}, but it must be at least 64</entry>
    <entry key="Hardware_Target_ShortGTInt">Error in test hardware settings: word length for "short" is longer than that for "int". Word length for "short" is {0,number,integer}, while that for "int" is {1,number,integer}</entry>
    <entry key="Hardware_Target_WordSizeNotMatch">Error in test hardware settings: "native word size" specifies a value of {0,number,integer}, but it must match one of the values specified by the {1} parameters.</entry>
    <entry key="Hardware_Target_WordSizeNotMultipleOf8">Error in test hardware settings: All word sizes must be multiples of 8.  Illegal word size: {0,number,integer}.</entry>

    <entry key="Hardware_RegisteredDevice"><![CDATA[If a registered device does not fulfill this requirement, update "{0}" to 'Generic->Custom' and specify a valid value. Alternatively <a href="matlab:helpview(fullfile(docroot,'toolbox','ecoder','helptargets.map'),'RegisterAdditionalDevice')">register a new hardware device</a>.]]></entry>
    <entry key="Hardware_SizeTPtrDiffTNotMatch">Error in hardware settings: "{0}" specifies a value of {1,number,integer}. Value must be  8, 16, 24, 32, 40, 64, or 128. {2}</entry>
    <entry key="Hardware_SizeTPtrDiffTLessThanInt">Error in hardware settings: "{0}" specifies a value of {1,number,integer}. Must be greater than or equal to value of "{2}", which is {3,number,integer}. {4}</entry>
    <entry key="HardwareDeviceVendorUnknown">Incorrect hardware device setting. Device vendor ''{0}'' is not supported.</entry>
    <entry key="HardwareDeviceUnknown">Incorrect hardware device settings. Device ''{0}'' is not supported.</entry>
    <entry key="UnsupportedHeliumISEForArchitecture">"{0}" does not support "{1}". Select "ARM Cortex-M55 (MPS3)" or "None".</entry>
    <entry key="RTWInterfaceTabName">Interface</entry>
    <entry key="targetSoftwareMathTargetName">Code replacement library:</entry>
    <entry key="targetSoftwareMathTargetToolTip">Specify a code replacement library available to your target.\n{0}\nSelected code replacement library contains these tables:{1}\n</entry>
    <entry key="targetSoftwareMathTargetNoneToolTip">Specify the code replacement library available to your target.</entry>
    <entry key="ERTDialogSupportName">Support:</entry>
    <entry key="ERTDialogSupportFloatToolTip">Support floating point data types in the generated code.</entry>
    <entry key="ERTDialogSupportFloatName">floating-point numbers</entry>
    <entry key="ERTDialogSupportNonFiniteToolTip">Support non-finite values (inf, nan, -inf) in the generated code.</entry>
    <entry key="ERTDialogSupportNonFinited1ToolTip">Support non-finite values (inf, nan, -inf) in the generated code.\nThis option is forced off when "Support floating-point numbers" is off.</entry>
    <entry key="ERTDialogSupportNonFiniteName">non-finite numbers</entry>
    <entry key="GRTDialogSupportNonFiniteName">Support non-finite numbers</entry>
    <entry key="ERTDialogTermFunToolTip">Generate a project terminate function.</entry>
    <entry key="ERTDialogTermFunName">Terminate function required</entry>
    <entry key="ERTDialogCodeReuseName">Generate reusable code</entry>
    <entry key="ERTDialogCodeReuseToolTip">Generate reusable/reentrant code.</entry>
    <entry key="ERTDialogTargetName">Software environment</entry>
    <entry key="ERTDialogInterfaceName">Code interface</entry>
    <entry key="RTWCodeStyleTabName">Code Style</entry>
    <entry key="ERTTargetcodeStyleParentLevelName">Parentheses level:</entry>
    <entry key="ERTTargetcodeStyleParentLevelToolTip">Specify the level of parenthesization in the code.</entry>
    <entry key="ERTTargetcodeStyleParentLevelMinimum">Minimum (Rely on C/C++ operators for precedence)</entry>
    <entry key="ERTTargetcodeStyleParentLevelNominal">Nominal (Optimize for readability)</entry>
    <entry key="ERTTargetcodeStyleParentLevelMaximum">Maximum (Specify precedence with parentheses)</entry>
    <entry key="ERTTargetcodeStyleConvertIfToSwitch">Convert if-elseif-else patterns to switch-case statements</entry>
    <entry key="ErtTargetcodeStyleConvertIfToSwitchToolTip">Improve readability by converting if-elseif-else patterns to switch-case statements, when possible.</entry>
    <entry key="ERTTargetcodeStylePreserveExternInFcnDeclsName">Preserve extern keyword in function declarations</entry>
    <entry key="ERTTargetcodeStylePreserveExternInFcnDeclsToolTip">Specify whether the declarations of external functions generated by\nMATLAB Coder will include the "extern" keyword.</entry>
    <entry key="OptimizationTabName">Optimization</entry>
    <entry key="TgtSpecOptimization">Target specific optimizations</entry>
    <entry key="AdditionalExtensions">Additional extensions:</entry>
    <entry key="optCodeGenName">Code generation</entry>
    <entry key="optMemcpyName">Use memcpy for vector assignment</entry>
    <entry key="optMemcpyToolTip">Optimize code by replacing for-loops with memcpy for vector assignment.</entry>
    <entry key="optMemcpyThresholdName">Memcpy threshold (bytes):</entry>
    <entry key="optMemcpyThresholdToolTip">Use memcpy if (number of elements)  *  (number of bytes per element) is\nequal to or greater than this threshold. One byte is the width of a char\nin this context.  </entry>
    <entry key="optInitFloatDoubleName">Use memset to initialize floats and doubles to 0.0</entry>
    <entry key="optInitFloatDoubleToolTip">Optimize initialization of storage for floats and doubles. Select\nthis option if the representation of floating point zero used by\nyour compiler and target CPU is identical to the integer bit pattern 0.</entry>
    <entry key="ExampleInputDynamicEmpty">Dimension with size zero at {0} is always treated as static.</entry>
    <entry key="ExampleInputDynamicSizeNotVector">Error: Example input {0}: Variable-size dimension specification must be a vector.</entry>
    <entry key="ExampleInputDynamicSizeNotReal">Error: Example input {0}: Variable-size dimension specification must be real.</entry>
    <entry key="ExampleInputDynamicSizeNotLogical">Error: Example input {0}: Variable-size dimension specification must be logical.</entry>
    <entry key="ExampleInputSizeNaN">Error: Example input {0}: Size {1} on dimension {2}. This is not supported.</entry>
    <entry key="ExampleInputLargeDimSize">Error: Example Input {0}: Fixed size {1} at dimension {2} is larger than or equal to intmax(). This is not supported.</entry>
    <entry key="ExampleInputLargeStaticMatrix">Error: Example input {0}: Fixed-size matrix with numel larger than or equal to intmax(). This is not supported.</entry>
    <entry key="ExampleSparseNotSupported">Function input {0} cannot be sparse.  Sparse arrays are not supported.</entry>
    <entry key="ExampleSysObjNotSupported">Function input at {0} cannot be a System object.</entry>
    <entry key="ExampleClassNotSupported">Expecting example input: found unsupported class {0} at {1}.</entry>
    <entry key="ExampleFiModeNotSupported">Example input {0} contains an unsupported ''{1}'' embedded.fi object.</entry>
    <entry key="ExampleFiWordLength">Example input {0} fixed-point type exceeds {1} bits. This is not supported.</entry>
    <entry key="ExampleEmptyStruct">Example input {0} contains a structure with no fields. This is not supported.</entry>
    <entry key="ExampleEmptyStructArray">Example input {0} contains an empty array of structures. This is not supported.</entry>
    <entry key="ExampleSizeEmpty">Example input {0} size does not have a non-empty example value.</entry>
    <entry key="ExampleSizeNumeric">Example input {0}: Size dimension specification must be numeric.</entry>
    <entry key="ExampleSizeReal">Example input {0}: Size dimension specification must be real.</entry>
    <entry key="ExampleSizeVector">Example input {0}: Size dimension specification must be a vector.</entry>
    <entry key="ExampleSizeNegative">Example input {0}: Negative size {1} on dimension {2}. This is not supported.</entry>
    <entry key="ExampleUnequalClasses">Unequal classes for example input {0} ({1}) and {2} ({3}).</entry>
    <entry key="ExampleUnequalSizes">Unequal sizes for example input {0} and {1}.</entry>
    <entry key="ExampleUnequalComplexity">Mixed real and complex examples for example input {0} and {1}.</entry>
    <entry key="ExampleUnequalNumerictype">Unequal embedded.numericType for example input {0} and {1}.</entry>
    <entry key="ExampleUnequalFimath">Unequal embedded.fimath for example input {0} and {1}.</entry>
    <entry key="ExampleUnequalNumFields">Unequal number of fields for example input {0} and {1}.</entry>
    <entry key="ExampleUnequalFieldName">Example input field {0}.{1} has a different name than {2}.{3}.  Note, field order is significant.</entry>
    <entry key="globalSyncName">Global data synchronization mode:</entry>
    <entry key="globalSyncToolTip">This mode controls when global data is synchronized with the MATLAB global workspace.</entry>
    <entry key="globalSyncNever">Disabled</entry>
    <entry key="globalSyncEntryExit">At MEX-function entry and exit</entry>
    <entry key="globalSyncFull">At MEX-function entry, exit and extrinsic calls</entry>
    <entry key="lccNotCPPcompiler">The specified code generation target is configured to generate C++, but the C-only compiler, LCC, is the default compiler. To allow code generation, you can deselect the ''Generate makefile'' option. Or, to specify a C++ compiler, enter ''mex -setup'' at the command prompt.  To generate C code, set the target language to C in the configuration object.</entry>
    <entry key="lccNotMexCPPcompiler">The specified MEX target is configured to generate C++, but the C-only compiler, LCC, is the default compiler.\nTo specify a C++ compiler, enter ''mex -setup'' at the command prompt.\nTo generate C code, set the target language to C in the configuration object.</entry>
    <entry key="watcomNotCPPDLLcompiler">The specified code generation target is configured to generate a C++ dynamic library, but Watcom is the default compiler. To specify a C++ compiler that supports dynamic library generation, enter ''mex -setup'' at the command prompt.  To generate a C dynamic library, set the target language to C in the configuration object.</entry>
    <entry key="MissingParameterOption">Missing parameter to option ''{0}''.</entry>
    <entry key="InvalidParameterOption">Invalid parameter to option ''{0}''.</entry>
    <entry key="InvalidVarName">''{0}'' is not a valid MATLAB variable name.</entry>
    <entry key="UnrecognizedOption">Unrecognized option ''{0}''.</entry>
    <entry key="NonScalarOption">Option ''{0}'' must be scalar text. To specify multiple values, pass the option more than once.</entry>
    <entry key="UnsupportedOptionForCurrentConfig">Option ''{0}'' not supported for current code generation configuration object.</entry>
    <entry key="UnsupportedClassForMultiSignatureMex">MEX function generation for multiple signatures does not support ''{0}''.</entry>
    <entry key="UnsupportedConfigForMultiSignatureMex">Multi-signature MEX function generation does not support the ''{0}'' value for the configuration property ''{1}''.</entry>
    <entry key="UnsupportedConstantInMultiSignatureMex">Multi-signature code generation does not support coder.Constant input arguments when constant input checking is disabled. For details, see config options ConstantInputs and SILPILCheckConstantInputs.</entry>
    <entry key="UnsupportedOutputTypeInMultiSignatureMex">Multi-signature code generation does not support coder.OutputType input arguments.</entry>
    <entry key="UnusedOption">Unused option ''{0}''.</entry>
    <entry key="DuplicateOption">Duplicate option ''{0}''.</entry>
    <entry key="UnrecognizedProject">File ''{0}'' is not a recognized project.</entry>
    <entry key="IncompatibleProjectPlatform">Project file ''{0}'' was created on a different platform, and cannot be processed.</entry>
    <entry key="CannotProcessOptions">Cannot process options.</entry>
    <entry key="CoderProjectIgnoresArgs">Invocations that specify project files will ignore any other options that are specified.</entry>
    <entry key="NoFunctionNameSpecified">No function name specified.</entry>
    <entry key="CannotCreateDirectory">Cannot create directory ''{0}'': {1}</entry>
    <entry key="CannotAccessDirectory">Cannot access directory ''{0}''.</entry>
    <entry key="DirectoryNameHasBadChar">Directory name ''{0}'' contains unsupported character ''{1}''.</entry>
    <entry key="FolderBadUTF162LCPCompat" note="stringDatatypeUpdate">Unable to convert some characters of the folder name ''{0}'' to local code page.</entry>
    <entry key="UnrecognizedConfigArg">Unrecognized configuration argument{0}</entry>
    <entry key="InvalidGlobalDataName">Invalid global data name in initialization argument.</entry>
    <entry key="GlobalInitOnlyHasType">Missing initialization value for global ''{0}''. \nThe initialization value should be specified in the global workspace or on the command line in the format ''-globals '{'name, '{'type, value'}}'''.</entry>
    <entry key="MissingGlobalInitialValue">Missing initialization value for global ''{0}''.</entry>
    <entry key="MultipleExampleInputs">Multiple example inputs specified for a single function.</entry>
    <entry key="EmptyCmdLineArgument">Empty command-line arguments are not supported.</entry>
    <entry key="FailedToEvalArgument">Failed to evaluate ''{0}'' to non-empty array in the base workspace.</entry>
    <entry key="UnrecognizedFileExtension">Unrecognized file extension ''{0}''.</entry>
    <entry key="UnsupportedFileExtensionWithoutGPUCoder">Invalid file extension '.cu' or '.cuh'.\nCUDA file is only supported with GPU Coder.</entry>
    <entry key="UnsupportConfigObject">Unsupported configuration ''{0}''.</entry>
    <entry key="InvalidFunctionNameType">Function name must be character vector or string scalar.</entry>
    <entry key="InvalidMethodNameWithNamespace">Invalid parameter name ''{0}''. First argument of addMethod must be a method name. Do not add the namespace name ''{1}''. </entry>
    <entry key="EntryPointNameInvalid">''{0}'' is not a valid MATLAB function name.</entry>
    <entry key="MissingFunctionName">No function name specified in ''{0}''.</entry>


    <!-- Client types for code generation. May be used as a hole in other errors. -->
    <entry key="ClientFiaccel" translate="false" note="no translation because proper noun.">fiaccel</entry>
    <entry key="ClientHDLCoder" translate="false" note="no translation because proper noun.">HDL Coder</entry>
    <entry key="ClientGPUCoder" translate="false" note="no translation because proper noun">GPU Coder</entry>
    <entry key="ClientFixedPointConversion">fixed point conversion</entry>
    <entry key="ClientSingleConversion">double to single conversion</entry>
    <entry key="ClientPLCCoder" translate="false" note="no translation because proper noun">PLC Coder</entry>
    <entry key="ClientDVO">derived ranges</entry>
    <entry key="ClientBuildInstrumentedMex" translate="false" note="no translation because proper noun">buildInstrumentedMex</entry>

    <entry key="MultipleEntryPointsNotSupportedByClient" note="Hole {2} is one of the above clients.">Multiple entry-point functions specified: ''{0}'' and ''{1}''. Multiple entry-point functions are not supported for {2}.</entry>
    <entry key="MultipleEntryPointSignaturesNotSupportedByClient" note="Hole {1} is one of the above clients.">Multiple entry-point signatures specified for function ''{0}''. Multiple entry-point signatures are not supported for {1}.</entry>

    <entry key="BuildInstrumentedMexMultipleEntryPointsNotSupported">Multiple entry-point functions or signatures specified. To generate code for multiple entry-point functions or signatures using the buildInstrumentedMex command, include the -coder option. You must have a MATLAB Coder license to use this option.</entry>

    <entry key="EntryPointsInNamespacesNotSupportedByClient" note="Hole {1} is one of the above clients.">Entry-point function ''{0}'' is in a namespace. Entry-point functions in namespaces are not supported for {1}.</entry>

    <entry key="UnsupportedExtension">Output file extension ''{0}'' is not supported.</entry>
    <entry key="OutputFileNameHasBadChar">Output file name ''{0}'' contains unsupported character ''{1}''.</entry>
    <entry key="OutputFileNameNotMexFcnName">Output name ''{0}'' is not a valid MEX function name.</entry>
    <entry key="DirectoryNotFound">Output file directory ''{0}'' does not exist.</entry>
    <entry key="InvalidCodingTarget">Invalid coding target specification ''{0}''.\nUse the format ''-T type'', where ''type'' is one of ''mex'', ''rtw'', ''rtw:lib'', or ''rtw:exe''.</entry>
    <entry key="InvalidOptimizationRestrict">Invalid optimization specification ''{0}''.\nUse the format ''enable:optimization'' or ''disable:optimization'',\nwhere ''optimization'' is ''inline''.</entry>
    <entry key="InvalidOptimization">Invalid optimization specification ''{0}''.\nUse the format ''enable:optimization'' or ''disable:optimization'',\nwhere ''optimization'' is one of ''inline'' or ''openmp''.</entry>
    <entry key="ProjectNumerictypeInvalid">Numerictype specification for ''{0}'' is not valid: ''{1}''</entry>
    <entry key="ProjectFimathInvalid">Fimath specification for ''{0}'' is not valid: ''{1}''</entry>
    <entry key="ProjectConstantInvalid">Constant specification for ''{0}'' is not valid: ''{1}''</entry>
    <entry key="GlobalInitialValueTypeMismatch">The initial value specified for global variable ''{0}'' is not contained by the global variable''s type.</entry>
    <entry key="DeprecatedOption">The option ''{0}'' is not supported. Please use ''{1}'' instead.</entry>
    <entry key="RequireFeatureControl">A feature control object is required by the ''-feature'' option.</entry>
    <entry key="InvalidCodingTargetConfig">Invalid coding target specification ''{0}''.\nUse the format ''-config type'', where ''type'' is a configuration object or one of ''coder:mex'', ''coder:lib'', or ''coder:exe''.</entry>
    <entry key="NonScalarConfig">The supplied configuration object must be a scalar.</entry>
    <entry key="EntryPointNotSpecified">No entry-point functions specified.</entry>
    <entry key="EntryPointNotFound">The entry-point file ''{0}'' cannot be located.</entry>
    <entry key="MexFunctionNotFound">Unable to locate the generated MEX function ''{0}'' on the MATLAB path. Either add the directory containing this file to the path, or move this file to a location already on the path.</entry>
    <entry key="TestBenchNotFound">The test file ''{0}'' cannot be located.</entry>
    <entry key="InputTypesNotSpecified">Provide a test bench or input types for HDL code generation.</entry>
    <entry key="ProjectToScriptNoHDLSuport">Creating script file from MATLAB HDL Coder Projects is not supported.</entry>
    <entry key="ExtractHelpTestUndef">Definition of ''{0}'' is not contained by matlabroot/toolbox/coder/coder or matlabroot/toolbox/coder/coder/+coder. No help is supposed to be extracted.</entry>
    <entry key="ExtractHelpTestNoMFile">File ''{0}''.p does not have a MATLAB file definition.</entry>
    <entry key="ExtractHelpTestNoPCode">The definition of class/command/function ''{0}'' is not p-coded. No help is supposed to be extracted.</entry>
    <entry key="ExtractHelpTestNoDefn">The class/command/function ''{0}'' is not defined in ''{1}''. No help is supposed to be extracted.</entry>
    <entry key="InValid_CustomToolchainOptions">''{0}'' must be a cell array of tools and options specified in name-value pairs.</entry>
    <entry key="InValid_CustomToolchainOptions_EmptyCellWithSpecify">''{0}'' cannot be set to an empty cell array when the BuildConfiguration property is set to ''{1}''.</entry>
    <entry key="Invalid_CustomToolchainOptions_NumberOfTools_Invalid">''{0}'' must be a cell array of tools and options specified in name-value pairs. Please specify valid configurations for the following build tools: {1}</entry>
    <entry key="InValid_CustomToolchainOptions_Name_Rep">''{0}'' is specified multiple times. Tool must not be specified more than once.</entry>
    <entry key="InValid_CustomToolchainOptions_Name_Unknown">''{0}'' is an unknown tool. Tool can be one of the following: {1}</entry>
    <entry key="Invalid_MultiSignatureMexSignature">Duplicate signatures encountered while generating multi-signature MEX function. Remove duplicate signatures.</entry>
    <entry key="NoBuildConfigurations">Could not get list of Build Configurations for the current toolchain. Check if the toolchain is registered.</entry>
    <entry key="BadBuildConfigurationString">Illegal characters in build configuration value.</entry>
    <entry key="Invalid_ToolchainName">''{0}'' is not a valid Toolchain name. Use one of the following: {1}</entry>
    <entry key="MultipleMatchingToolchainName">''{0}'' matches multiple Toolchain names. Specify one of these toolchains:\n{1}</entry>
    <entry key="NoToolchains">Could not get list of toolchains. Check if any toolchain is registered.</entry>
    <entry key="BadToolchainString">Illegal characters in toolchain value.</entry>
    <entry key="BadCRLString">Illegal characters in code replacement library value.</entry>
    <entry key="BadSymbolString">Illegal characters in custom symbol value.</entry>
    <entry key="crlsWithLangBaseTflDeprecated">The ''{0}'' code replacement library will be removed in a future release. Please select ''{1}'' instead and use the ''TargetLangStandard'' setting to specify the language standard library.</entry>
    <entry key="crlDeprecatedGCCCortexA">The ''{0}'' code replacement library is not recommended. Set code replacement library to 'ARM Cortex-A CMSIS' CRL.</entry>
    <entry key="InvalidHardwareProperty">The Hardware property must have class ''{0}''.</entry>
    <entry key="UpdateHardwareFailed">Failed to apply the ''{0}'' method to the Hardware property.</entry>
    <entry key="UpdateHardwareFailedWithCause">Failed to apply the ''{0}'' method to the Hardware property: {1}</entry>
    <entry key="InvalidDataTypeAliasName" translate="false" note="translate=false set due no translatable content">{0}</entry>
    <entry key="InvalidCustomReplacementType">''{0}'' is not a valid custom data type replacement name.</entry>
    <entry key="EditConfigObj"><![CDATA[<a href="matlab:open {0};">Edit Configuration Object</a>]]></entry>
    <entry key="EditTypeObj"><![CDATA[<a href="matlab:open {0};">Edit Type Object</a>]]></entry>
    <entry key="ecufRepTypeMustBeCIdentifier">Replacement type ''{0}'' must be a valid C identifier.</entry>
    <entry key="ecufRepTypeIsCKeyword">''{0}'' is a C keyword and cannot be used as a replacement type.</entry>
    <entry key="ecufRepTypeIsCppKeyword">''{0}'' is a C++ keyword and cannot be used as a replacement type.</entry>
    <entry key="ecufRepTypeIsDefDataType">''{0}'' is a keyword reserved for code generation and cannot be used as a replacement type. </entry>
    <entry key="ecufInvalidDupRepType">''{0}'' is an invalid duplicate replacement type for ''{1}''</entry>
    <entry key="NoLangStandard">There is no TargetLangStandard parameter for ''{0}''.</entry>
    <entry key="NoLang">There is no TargetLang C or C++ parameter for ''{0}''.</entry>
    <entry key="BadFileNameStr">CustomFileNameStr value ''{0}'' is invalid.</entry>
    <entry key="InvalidEmptyInstructionSetExtensions">''InstructionSetExtensions'' value must be ''None'' or a valid instruction set extension, specified as a string.</entry>
    <entry key="InvalidMultipleInstructionSetExtensions">Array of multiple elements is not supported for ''InstructionSetExtensions''. The value must be a string or a character vector.</entry>
    <entry key="ConstantSerializationWithoutDma">Setting LargeConstantGeneration configuration setting to 'WriteOnlyDNNConstantsToDataFiles' requires dynamic memory allocation configuration setting to be enabled.</entry>
    <!-- MATLAB Online -->
    <entry key="MODialogError">MATLAB Online does not support the GUI for code generation configuration objects. Edit configuration properties from a command line or script.</entry>
    <entry key="InvalidLangStandard">Target language standard ''{0}'' is not compatible with target language ''{1}''.</entry>
    <entry key="InvalidNargoutParam">Incorrect input argument ''{0}'' for -nargout. Input argument must be a nonnegative integer or -1.</entry>
    <!-- Docker Integration -->
    <entry key="FailedToPullBaseImage">Unable to pull Base Image ''{0}'':''{1}''.</entry>
    <entry key="BadPermissions">Unable to create docker file ''{0}''.</entry>
    <entry key="FailedToGenerateDockerImage">Unable to build docker image ''{0}'':''{1}''.</entry>
    <entry key="DockerIsMissing">To create a docker image, you must have Docker installed on your Linux machine.</entry>
    <entry key="OnlyInLinux">Code generation for docker is supported only in Linux platforms.</entry>
    <entry key="PermissionDenied">Authentication failed. Add yourself to the docker group.</entry>
    <entry key="SILDebuggingDeprecated">SILDebugging configuration parameter will be removed in a future release. Use SILPILDebugging instead.</entry>
    <entry key="DeprecateCppPackagesToNamespaces">CppPackagesToNamespaces configuration parameter will be removed in a future release. Use CppPreserveNamespaces instead.</entry>
  </message>
</rsccat>

<!-- LocalWords:  XMakefile EMX endian reentrant parenthesization openmp cuh SILPIL
     LocalWords:  toolchain toolchains ptrdiff TYPEOF fiaccel
-->
