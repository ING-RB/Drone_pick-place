<?xml version="1.0" encoding="UTF-8"?>
<!--Copyright 2024 The MathWorks, Inc.-->

<rsccat xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.0" locale="zh_CN" product="Coder" xsi:noNamespaceSchemaLocation="../../resources/schema/msgcat.xsd">
  <message>
    <entry key="DomainError">生成的代码假设实数输入值会产生实数输出。如果需要复数输出，请使用 '复数' 函数为输入提供零虚部。</entry>
    <entry key="UnsupportedSpecialEmpty">生成的代码假设可变大小矩阵输入的大小不会是 0×0。</entry>
    <entry key="diag_varsizedMatrixVector">生成的代码提取矩阵 X 的对角线并返回向量。如果输入 X 应为向量，传递 X(:) 而不是 X。</entry>
    <entry key="UnsupportedNaN">在生成的代码中，NaN 值不会从输入中删除。</entry>
    <entry key="eml_all_or_any_specialEmpty">生成的代码假设可变大小矩阵输入的大小不会是 0×0。</entry>
    <entry key="eml_min_or_max_varDimZero">生成的代码假设要运算的维度具有非零长度。</entry>
    <entry key="NonIncreasing">生成的代码假设网格值严格递增。</entry>
    <entry key="eml_assert_valid_dim_dimTooLarge">生成的代码假设大小可以用 C 类型 'int' 来表示。</entry>
    <entry key="MustBeFiniteAndStrictlyIncreasing">生成的代码假设输入 X 是有限值并且严格递增。</entry>
    <entry key="mtimes_noDynamicScalarExpansion">生成的代码执行一般矩阵乘法。如果可变大小矩阵操作数在运行时变为标量，维度仍必须一致。不会自动切换到标量乘法。</entry>
    <entry key="autoDimIncompatibility">在生成的代码中，要运算的维度是自动选择的，可能与 MATLAB 不同。请考虑将工作维度显式指定为常量值。</entry>
    <entry key="VectorVector">对于使用向量对向量进行索引的方式 vector1(vector2)，代码生成器假设结果的方向与 vector1 相同。如果 vector1 在运行时是标量，则 vector2 的方向必须与 vector1 匹配。</entry>
    <entry key="MatrixMatrix">对于使用矩阵对矩阵进行索引的方式 matrix1(matrix2)，代码生成器假设结果的大小与 matrix2 相同。如果 matrix1 和 matrix2 在运行时是向量，其方向必须匹配。</entry>
    <entry key="OutOfTargetRangeTruncated">生成的代码假设索引值在有效范围内。</entry>
    <entry key="SizesOverflowOnDim">生成的代码假设数组运算将在每个维度的上界内。</entry>
    <entry key="OutOfBoundRange">生成的代码假设索引在数组边界内。如果索引超出界限，数组将不会扩展。要扩展数组，请考虑预分配内存或使用串联。例如，[X A]。</entry>
    <entry key="NontunableHandleProp">生成的代码假设不可调属性的值在运行时不变。</entry>
    <entry key="ForLoopVector">生成的代码假设循环的迭代次数可以用 C 类型 'int' 来表示。</entry>
    <entry key="ValueIsNonInteger">生成的代码假设该值可以用 C 类型 'int' 来表示。</entry>
    <entry key="SizesMismatch">生成的代码假设左侧和右侧的大小匹配。</entry>
    <entry key="eml_assert_valid_size_arg_invalidSizeVector">生成的代码假设大小向量是行向量，其有限整数元素小于 intmax('int32')，并且合乎在目标硬件上 C 数据类型 'int' 的表示范围。</entry>
    <entry key="int_forloop_overflow">生成的代码假设循环索引不会在循环的最后一次迭代中溢出。如果循环索引溢出，可能会出现无限循环。</entry>
  </message>
</rsccat>
