<?xml version="1.0" encoding="UTF-8"?>
<!--Copyright 2025 The MathWorks, Inc.-->

<rsccat xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.0" locale="ja_JP" product="Coder" xsi:noNamespaceSchemaLocation="../../resources/schema/msgcat.xsd">
  <message>
    <entry key="andOrXor_sizeMismatch">入力は同じサイズでなければなりません。</entry>
    <entry key="sxfun_arrayDimensionsMustMatch">非スカラーの入力配列の次元は、互いに一致しなければなりません。</entry>
    <entry key="dimNotConst">次元の引数は定数でなければなりません。</entry>
    <entry key="autoDimIncompatibility">Generated code expects a variable-size matrix but receives a variable-length vector. Specify the operating dimension explicitly or specify a variable-length vector at code generation time.</entry>
    <entry key="unsupportedClass">関数 ''{0}'' は、クラス ''{1}'' の値に対して定義されません。</entry>
    <entry key="eml_primes_core_InputOutOfRange">入力値が大きすぎます。入力クラス ''{0}'' に対して許可される最大値は {1} です。</entry>
    <entry key="conv_2">入力は、最大 1 つの可変長次元、最初の次元、または 2 番目の次元のベクトルでなければなりません。他のすべての次元は固定長 1 をもたなければなりません。</entry>
    <entry key="conv_3">A と B はベクトルでなければなりません。</entry>
    <entry key="conv_6">SHAPE は ''full''、''same''、''valid'' のいずれかでなければなりません。</entry>
    <entry key="conv_8">SHAPE は ''full''、''same''、''valid'' のいずれかでなければなりません。</entry>
    <entry key="conv_dynamicVectorOrientation">出力ベクトルの方向は変更できません。このエラーを回避するには両方の入力ベクトルが同じ方向であることを確認してください。</entry>
    <entry key="conv2_3">SHAPE は ''full''、''same''、''valid'' のいずれかでなければなりません。</entry>
    <entry key="convn_2">SHAPE は ''full''、''same''、''valid'' のいずれかでなければなりません。</entry>
    <entry key="corrcoef_2">パラメーター名が必要です。</entry>
    <entry key="corrcoef_3">入力は 2 次元でなければなりません。</entry>
    <entry key="corrcoef_5">入力は 2 次元でなければなりません。</entry>
    <entry key="corrcoef_7">複素数入力に対して p 値を計算できません。</entry>
    <entry key="corrcoef_unsupportedRowVector">行ベクトルの入力は最初の 2 つの入力がベクトルと非スカラーである場合にのみサポートされます。</entry>
    <entry key="corrcoef_xyMismatch">X と Y の入力は同じ要素数でなければなりません。</entry>
    <entry key="cov_3">3 番目の入力は固定サイズのスカラーでなければなりません。</entry>
    <entry key="cov_thirdInputRequired">3 番目の入力はスカラー x とスカラー y の共分散で必要です。''cov(x,y,0)'' を使用してください。</entry>
    <entry key="cov_vsizeMatrixIsVector">COV への可変サイズの行列の入力が実行時にベクトルの入力に変換されてはいけません。代わりに可変長のベクトルを使用してください。</entry>
    <entry key="cumtrapz_6">DIM の引数は定数でなければなりません。</entry>
    <entry key="Dec2HexInvalidDecimalArg">10 進数入力引数は数値でなければなりません。</entry>
    <entry key="Dec2HexDecimalArgMustBeReal">10 進数入力引数は実数でなければなりません。</entry>
    <entry key="Dec2HexInvalidBitArg">2 番目の入力引数は正のスカラー数値でなければなりません。</entry>
    <entry key="deconv_3">1 番目の引数は、最大 1 つの可変長次元、最初の次元、または 2 番目の次元のベクトルでなければなりません。他のすべての次元は固定長 1 をもたなければなりません。</entry>
    <entry key="deconv_4">1 番目の引数はベクトルでなければなりません。</entry>
    <entry key="deconv_6">2 番目の引数は、最大 1 つの可変長次元、最初の次元、または 2 番目の次元のベクトルでなければなりません。他のすべての次元は固定長 1 をもたなければなりません。</entry>
    <entry key="deconv_7">2 番目の引数はベクトルでなければなりません</entry>
    <entry key="deconv_secondInputNotVector">2番目の引数は空でないベクトルでなければなりません。</entry>
    <entry key="del2_2">1 番目の入力は ''double'' または ''single''でなければなりません。</entry>
    <entry key="detrend_5">BP のベクトルは実数で数値でなければなりません。</entry>
    <entry key="detrend_inputsMustBe2D">入力の引数は 2 次元でなければなりません。</entry>
    <entry key="detrend_rowVecSpecialCase">入力は実行時に行ベクトルになる可変サイズの行列です。代わりに可変長の行ベクトルを使用してください。</entry>
    <entry key="diff_2">入力は数値、論理値、または文字でなければなりません。</entry>
    <entry key="diff_3">N は定数でなければなりません。</entry>
    <entry key="diff_differenceOrderMustBePositiveInteger">微分の次数 N は 1 から intmax(''{0}'') の範囲の正の整数のスカラーでなければなりません。</entry>
    <entry key="diff_orderLimitForVariableSizedX">使用する次元の長さは入力が可変サイズの場合または微分の次数が定数でない場合には、微分の次数よりも大きくなければなりません。</entry>
    <entry key="fft_2">入力引数が多すぎます。</entry>
    <entry key="fft2_2">MROWS を指定する場合、NCOLS も指定しなければなりません。</entry>
    <entry key="filter_3">1 番目の引数は、最大 1 つの可変長次元、最初の次元、または 2 番目の次元のベクトルでなければなりません。他のすべての次元は固定長 1 をもたなければなりません。</entry>
    <entry key="filter_4">1 番目の引数はベクトルでなければなりません。</entry>
    <entry key="filter_7">2 番目の引数は、最大 1 つの可変長次元、最初の次元、または 2 番目の次元のベクトルでなければなりません。他のすべての次元は固定長 1 をもたなければなりません。</entry>
    <entry key="filter_8">2 番目の引数はベクトルでなければなりません。</entry>
    <entry key="filter_notVectorInputB">1 番目の引数は、空でないベクトルでなければなりません。</entry>
    <entry key="filter_secondInputNotVector">2 番目の引数は、空でないベクトルでなければなりません。</entry>
    <entry key="filter2_2">不明な shape パラメーターです。</entry>
    <entry key="fscanfConstFormat">コード生成では書式指定子が定数でなければなりません。</entry>
    <entry key="fscanfTooLong">形式接頭辞 'l' は、ターゲット ハードウェアではサポートされていません。64 ビット数用の十分なスペースがないためです。</entry>
    <entry key="fscanfInvalidConversion">書式変換指定子 ''{0}'' はコード生成でサポートされていません。</entry>
    <entry key="fscanfRecommendChar">Format conversion specifier ''{0}'' is not supported for code generation. Use %c.</entry>
    <entry key="fscanfIncompltete"> 書式が不完全です。コード生成では、書式指定子は変換指定子を含まなければなりません。</entry>
    <entry key="fscanfDollar">コード生成では、書式指定子内で ''$'' はサポートされていません。</entry>
    <entry key="fscanfIllegalL">コード生成の場合、形式接頭辞 ''l'' は変換指定子 d、i、u、o、および x とのみ使用してください。</entry>
    <entry key="getfieldConstFields">非定数のフィールド名はコード生成でサポートされていません。コードを生成するには、代わりに定数のフィールド名を使用してください。</entry>
    <entry key="gradient_2">1 番目の入力は ''double'' または ''single'' でなければなりません。</entry>
    <entry key="gradient_tooManyOutputArguments">出力引数の数が入力配列内の次元数を超えています。</entry>
    <entry key="hist_2">出力引数が不足しています。ヒストグラムのバープロットはサポートされていません。</entry>
    <entry key="hist_4">X は固定サイズのスカラーまたはベクトルでなければなりません。X がベクトルの場合、最大 1 つの可変長次元、最初の次元、または 2 番目の次元をもつことができます。他のすべての次元は固定長 1 をもたなければなりません。</entry>
    <entry key="hist_5">X はスカラーまたはベクトルでなければなりません。</entry>
    <entry key="hist_6">入力引数は ''double''、''single''、または ''logical'' でなければなりません。</entry>
    <entry key="hist_7">入力は実数でなければなりません。</entry>
    <entry key="hist_8">スカラー X は定数でなければなりません。</entry>
    <entry key="hist_variableSizeScalarX">X が可変長ベクトルの場合、長さ 1 をもってはいけません:スカラー X は固定サイズでなければなりません。</entry>
    <entry key="hist_vsizeMatrixBecameRowVec">可変サイズの入力行列または N 次元配列は実行時に行ベクトルに変換されてはいけません。</entry>
    <entry key="histc_2">すべての入力は実数でなければなりません。</entry>
    <entry key="histc_3">1 番目の入力は、非スパースの数値配列でなければなりません。</entry>
    <entry key="histc_4">2 番目の入力は数値でなければなりません。</entry>
    <entry key="histc_6">2 番目の入力は列挙値を受け入れません。</entry>
    <entry key="ifft_2">入力引数が多すぎます。</entry>
    <entry key="ifft_4">MATLAB コード生成では ''nonsymmetric'' オプションのみがサポートされます。</entry>
    <entry key="ifft2_2">入力引数が多すぎます。</entry>
    <entry key="ifft2_3">MATLAB コード生成では ''nonsymmetric'' オプションのみがサポートされます。</entry>
    <entry key="ifft2_4">MROWS を指定する場合、NCOLS も指定しなければなりません。</entry>
    <entry key="ifftn_2">入力引数が多すぎます。</entry>
    <entry key="ifftn_3">MATLAB コード生成では ''nonsymmetric'' オプションのみがサポートされます。</entry>
    <entry key="issorted_2">''rows'' が指定されない場合、入力は最大 1 つの可変長次元、最初の次元、または 2 番目の次元のベクトルでなければなりません。他のすべての次元は固定長 1 をもたなければなりません。</entry>
    <entry key="issorted_3">入力はベクトルでなければなりません。あるいは、''rows'' を指定しなければなりません。</entry>
    <entry key="issorted_4">不明なフラグです</entry>
    <entry key="InvalidTypeNameInFAV">''{0}'' はデータ型またはクラス名のいずれでもないため、関数またはプロパティの検証に使用できません。</entry>
    <entry key="max_2">入力引数が多すぎます。</entry>
    <entry key="mean_specialEmpty">1 つの可変サイズの行列入力 [] をもつ MEAN はサポートされていません。</entry>
    <entry key="MeanFlagNotSupported">コード生成は、MEAN への ''flag'' 引数をサポートしません。</entry>
    <entry key="median_specialEmpty">1 つの可変サイズの行列入力 [] をもつ MEDIAN はサポートされていません。</entry>
    <entry key="min_2">入力引数が多すぎます。</entry>
    <entry key="mode_2">3 番目の出力はサポートされていません。</entry>
    <entry key="mode_specialEmpty">1 つの可変サイズの行列引数 [] をもつ MODE はサポートされていません。</entry>
    <entry key="now_unsupported">NOW is not supported in code generation. Use datetime('now') instead.</entry>
    <entry key="prod_6">''native'' および ''double'' フラグはサポートされていません。</entry>
    <entry key="prod_7">複素数の整数の乗算はサポートされていません。</entry>
    <entry key="prod_8">最後の入力は ''double'' または ''native'' でなければなりません。</entry>
    <entry key="prod_specialEmpty">1 つの可変サイズの行列入力 [] をもつ PROD はサポートされていません。</entry>
    <entry key="setfieldConstFields">非定数のフィールド名はコード生成でサポートされていません。コードを生成するには、代わりに定数のフィールド名を使用してください。</entry>
    <entry key="sort_2">入力引数が多すぎます。</entry>
    <entry key="sort_4">SORT への複素数入力は ''double'' または ''single'' でなければなりません。</entry>
    <entry key="sortrows_3">SORTROWS への複素数入力は ''double'' または ''single'' でなければなりません。</entry>
    <entry key="sortrows_5">列挙値は COL 入力に対してサポートされていません。</entry>
    <entry key="sortrows_6">COL は数値でなければなりません。</entry>
    <entry key="std_2">入力引数が多すぎます。</entry>
    <entry key="inputSizeError">入力は同じ行数をもつ 2 次元の行列でなければなりません。</entry>
    <entry key="sum_6">文字配列に対するネイティブな累積はサポートされません。</entry>
    <entry key="sum_7">複素数の整数の和はサポートされていません。</entry>
    <entry key="sum_8">最後の入力は ''double'' または ''native'' でなければなりません。</entry>
    <entry key="sum_specialEmpty">1 つの可変サイズの行列入力 [] をもつ SUM はサポートされていません。</entry>
    <entry key="trapz_specialEmpty">1 つの可変サイズの行列入力 [] をもつ TRAPZ はサポートされていません。</entry>
    <entry key="var_specialEmpty">1 つの可変サイズの行列入力 [] をもつ VAR はサポートされていません。</entry>
    <entry key="int64_1">''int64'' クラスへのキャストは MATLAB コード生成でサポートされていません。</entry>
    <entry key="typecast_2">1 番目の入力引数は、非スパースで複素数でない数値でなければなりません。</entry>
    <entry key="typecast_3">1 番目の引数は、最大 1 つの可変長次元、最初の次元、または 2 番目の次元のベクトルでなければなりません。他のすべての次元は固定長 1 をもたなければなりません。</entry>
    <entry key="typecast_4">1 番目の入力引数は、ベクトルでなければなりません。</entry>
    <entry key="typecast_6">サポートされていないクラスです。</entry>
    <entry key="TypecastNativeType">Class {1} does not map to a {0,number,integer}-bit C type.</entry>
    <entry key="uint64_1">''uint64'' クラスへのキャストは MATLAB コード生成でサポートされていません。</entry>
    <entry key="ElFunDomainError">定義域エラーです。実数 x から複素数の結果を計算するには、''{0}(complex(x))'' を使用してください。</entry>
    <entry key="reallog_3">入力は実数でなければなりません。</entry>
    <entry key="realpow_4">入力は実数でなければなりません。</entry>
    <entry key="realsqrt_3">入力は実数でなければなりません。</entry>
    <entry key="unwrap_2">1 番目の入力は ''double'' または ''single'' でなければなりません。</entry>
    <entry key="unwrap_3">2 番目の入力は浮動小数点のスカラーまたは [] でなければなりません。</entry>
    <entry key="bsxfun_2">1 番目の引数は関数ハンドルでなければなりません。</entry>
    <entry key="bsxfun_dynamicExpansion">拡張は、いずれかの入力引数が 1 の長さをもつ次元に沿ってのみサポートされます。</entry>
    <entry key="cat_10">列挙クラスへの暗黙の変換はサポートされていません。すべての入力は同じ列挙型でなければなりません。</entry>
    <entry key="cat_6">入力が列挙値の場合、すべての入力は同じ列挙型でなければなりません。</entry>
    <entry key="cat_8">logical から char へ変換できません。</entry>
    <entry key="cat_9">列挙型から文字への変換はサポートされていません。</entry>
    <entry key="cat_UnsupportedEmptyEnumArray">この関数は、空の列挙配列の作成をサポートしていません。</entry>
    <entry key="cat_UnsupportedVariableSizeEmpty">CAT の引数を可変サイズの空の配列にはできません。</entry>
    <entry key="cat_IncompatibleTypes">可変サイズの cell 配列型は、連結のために互換性がなければなりません。</entry>
    <entry key="cat_cellAndRuntimeEmptyNonCell"> コード生成で cell 配列と可変サイズの非 cell 引数が連結された場合、非 cell 引数が実行時に空の配列になってはなりません。</entry>
    <entry key="circshift_InvalidShiftType">無効な shift 引数:入力は -intmax(''{0}'') から intmax(''{1}'') の区間にある有限で、実数の整数ベクトルでなければなりません。</entry>
    <entry key="compan_2">compan への入力は float、すなわち single か double でなければなりません。</entry>
    <entry key="diag_2">最初の入力は 2 次元でなければなりません。</entry>
    <entry key="diag_3">1 番目の入力は数値、論理値、または文字でなければなりません。</entry>
    <entry key="diag_4">K 番目の対角の入力は、定数でなければなりません。</entry>
    <entry key="diag_KmustBeRealIntScalar">K 番目の対角の入力は、実数で整数のスカラーでなければなりません。</entry>
    <entry key="diag_varsizedMatrixVector">DIAG へのベクトル入力に含めることができる可変長の次元は 1 つだけです。他のすべての次元は固定長 1 でなければなりません。</entry>
    <entry key="spdiagsScalarSize">出力の次元 ''{0}'' はスカラーでなければなりません。</entry>
    <entry key="spdiagsBadSize">出力の次元 ''{0}'' は実数で非負の整数でなければなりません。</entry>
    <entry key="eps_1">クラスは ''single'' または ''double'' でなければなりません。</entry>
    <entry key="eye_1">引数が多すぎます。</entry>
    <entry key="eye_3">この入力は有効な数値クラス名でなければなりません。</entry>
    <entry key="eye_rowVectorMustBeLength2">サイズ ベクトルの入力は長さ 2 のベクトルでなければなりません</entry>
    <entry key="find_1">To use 'find', enable variable sizing.</entry>
    <entry key="find_4">検索オプションが無効です。''first'' または ''last'' でなければなりません。</entry>
    <entry key="FindVectorOrientationMismatch">FIND への可変サイズの配列の入力が実行時に行ベクトルに変換されました。コード生成では、FIND の出力は列ベクトルです。</entry>
    <entry key="flipdim_1">2 つの引数が必要です。</entry>
    <entry key="freqspace_2">N は固定サイズでなければなりません。</entry>
    <entry key="freqspace_3">N はスカラーまたは 2 要素をもつベクトルでなければなりません。</entry>
    <entry key="freqspace_4">単精度の出力では、入力 N はスカラーでなければなりません。</entry>
    <entry key="freqspace_5">1 番目の入力は定数でなければなりません。</entry>
    <entry key="freqspace_6">N は実数でなければなりません。</entry>
    <entry key="freqspace_8">2 番目の引数は文字ベクトルでなければなりません。</entry>
    <entry key="hadamard_2">1 番目の引数は定数でなければなりません。</entry>
    <entry key="hadamard_3">1 番目の引数はスカラーでなければなりません</entry>
    <entry key="hadamard_NmustBePosInt">1 番目の引数はインデックス範囲内の正の整数でなければなりません。</entry>
    <entry key="hankel_2">1 番目の入力は数値でなければなりません。</entry>
    <entry key="hankel_4">2 番目の入力は数値でなければなりません。</entry>
    <entry key="hankel_5">整数は、同じクラスの整数、あるいはスカラーの倍精度とのみ結合できます。</entry>
    <entry key="hankel_emptyC">1 番目の入力を空にはできません。</entry>
    <entry key="hankel_emptyR">2 番目の入力を空にはできません</entry>
    <entry key="hilb_2">1 番目の引数は定数でなければなりません。</entry>
    <entry key="hilb_3">1 番目の引数は実数で整数のスカラーでなければなりません。</entry>
    <entry key="hilb_5">2 番目入力は ''double'' または ''single'' でなければなりません。</entry>
    <entry key="hilb_argMustBeRealIntScalar">1 番目の引数は実数で整数のスカラーでなければなりません。</entry>
    <entry key="ind2sub_2">1 番目の入力は固定サイズでなければなりません。</entry>
    <entry key="ind2sub_3">サイズの引数は数値でなければなりません。</entry>
    <entry key="ind2sub_4">出力引数が多すぎます。</entry>
    <entry key="intmax_1">入力は整数クラスの名前でなければなりません。</entry>
    <entry key="intmax_2">クラス名が無効です。</entry>
    <entry key="intmin_1">入力は整数クラスの名前でなければなりません。</entry>
    <entry key="intmin_2">クラス名が無効です。</entry>
    <entry key="invhilb_2">1 番目の引数は定数でなければなりません。</entry>
    <entry key="invhilb_3">1 番目の引数は実数で整数のスカラーでなければなりません。</entry>
    <entry key="invhilb_5">2 番目の入力は ''double'' または ''single'' でなければなりません。</entry>
    <entry key="invhilb_argMustBeRealIntScalar">1 番目の引数は実数で整数のスカラーでなければなりません。</entry>
    <entry key="ipermute_2">データ型が無効です。列挙値は次元の順序のベクトルではサポートされません。</entry>
    <entry key="ipermute_3">次元の順序は定数でなければなりません。</entry>
    <entry key="ipermute_invalidPermutation">次元の順序のベクトルに、無効な置換インデックスが含まれています。次元の順序は 1 ～ N の整数の順列でなければなりません。ここで、N は入力配列の次元数以上の値です。</entry>
    <entry key="ipermute_orderNeedsNElements">次元の順序のベクトルは、N 次元配列に対して少なくとも N 個の要素がなければなりません。</entry>
    <entry key="linspace_2">入力 d1 はスカラーの浮動小数点値でなければなりません。</entry>
    <entry key="linspace_3">入力 d2 はスカラーの浮動小数点値でなければなりません。</entry>
    <entry key="linspace_4">Number of points must be constant when variable sizing is disabled.</entry>
    <entry key="linspace_5">N は実数で数値のスカラーでなければなりません。</entry>
    <entry key="logspace_2">入力 d1 はスカラーの浮動小数点値でなければなりません。</entry>
    <entry key="logspace_3">入力 d2 はスカラーの浮動小数点値でなければなりません。</entry>
    <entry key="logspace_4">点数 N は定数でなければなりません。</entry>
    <entry key="logspace_invalidN">点数 N は正の整数で実数でなければなりません。</entry>
    <entry key="piSpecialSupported">pi に対する特例はサポートされていません。必要であれは、logspace(a,log10(pi),n) を使用してください。</entry>
    <entry key="ltitr_inputsMustBe2D">入力の引数は 2 次元でなければなりません。</entry>
    <entry key="magic_2">引数は定数でなければなりません。MAGIC は可変サイズの出力をサポートしていません。</entry>
    <entry key="magic_3">引数は定数でなければなりません。</entry>
    <entry key="magic_argMustBeRealIntScalar">引数は実数で整数のスカラーでなければなりません。</entry>
    <entry key="ndgrid_2">出力引数が多すぎます。</entry>
    <entry key="pascal_2">3 番目の入力は ''double'' または ''single'' でなければなりません。</entry>
    <entry key="pascal_nMustBeNonNegativeInteger">''pascal'' の 1 番目の引数は非負の整数でなければなりません。</entry>
    <entry key="permute_2">データ型が無効です。列挙値は次元の順序のベクトルではサポートされません。</entry>
    <entry key="permute_3">次元の順序は定数でなければなりません。</entry>
    <entry key="permute_4">Dimension order vector must be fixed size.</entry>
    <entry key="permute_5">次元の順序のベクトルは、N 次元配列に対して少なくとも N 個の要素がなければなりません。</entry>
    <entry key="permute_invalidPermutation">Dimension order vector contains an invalid permutation index. Dimension order must be a permutation of the integers 1:N, where N is greater than or equal to the number of dimensions of the input array.</entry>
    <entry key="permute_heterogenousCell">異種混合 cell 配列入力の次元の順序は定数でなければなりません。</entry>
    <entry key="rand_1">入力引数が多すぎます。</entry>
    <entry key="rand_10">出力クラスは ''single'' または ''double'' でなければなりません。</entry>
    <entry key="rand_2">出力引数が多すぎます。</entry>
    <entry key="rand_3">入力は数値でなければなりません。</entry>
    <entry key="rand_4">コマンド オプションは定数の文字ベクトルでなければなりません。</entry>
    <entry key="rand_5">swb2712 (''state'') の一様に分布した乱数発生はコード生成に対してサポートされていません。</entry>
    <entry key="rand_6">状態は固定サイズでなければなりません。</entry>
    <entry key="rand_8">不明なコマンド オプションです。</entry>
    <entry key="rand_9">出力クラスの最後の引数は定数の文字ベクトルでなければなりません。</entry>
    <entry key="randn_1">入力引数が多すぎます。</entry>
    <entry key="randn_10">出力クラスは ''single'' または ''double'' でなければなりません。</entry>
    <entry key="randn_2">出力引数が多すぎます。</entry>
    <entry key="randn_3">入力は数値でなければなりません。</entry>
    <entry key="randn_4">コマンド オプションは定数の文字ベクトルでなければなりません。</entry>
    <entry key="randn_5">シードまたは状態の入力は固定サイズでなければなりません。</entry>
    <entry key="randn_6">シードの入力は double のスカラーでなければなりません。</entry>
    <entry key="randn_7">状態は double のスカラー、または RANDN(''state'') の出力でなければなりません。</entry>
    <entry key="randn_8">不明なコマンド オプションです。</entry>
    <entry key="randn_9">出力クラスの最後の引数は定数の文字ベクトルでなければなりません。</entry>
    <entry key="RandStreamPropNotImplemented">コード生成は、RandStream プロパティ ''{0}'' をサポートしません。</entry>
    <entry key="RandStreamConstType">''Type'' 引数は定数の文字ベクトルでなければなりません。</entry>
    <entry key="RandStreamConstNormalTransform">''NormalTransform'' 引数は定数の文字ベクトルでなければなりません。</entry>
    <entry key="RandStreamNoShuffle">コード生成で ''shuffle'' の ''シード'' をもつ RandStream オブジェクトを作成することはできません。</entry>
    <entry key="RandStreamUndefined">メソッド ''{0}'' の呼び出しはタイプ RandStream の入力に使用できません。</entry>
    <entry key="RandStreamFixedSizeState">コード生成では、RandStream の ''State'' プロパティを可変サイズの配列に設定することはできません。状態の設定には、別の RandStream インスタンスから取得した固定サイズの配列を使用してください。</entry>
    <entry key="realmax_1">入力はクラス名でなければなりません。</entry>
    <entry key="realmax_2">入力は ''single'' または ''double'' でなければなりません。</entry>
    <entry key="realmin_1">入力はクラス名でなければなりません。</entry>
    <entry key="realmin_2">入力は ''single'' または ''double'' でなければなりません。</entry>
    <entry key="reshape_4">size 引数は整数のスカラーでなければなりません。</entry>
    <entry key="reshape_emptyReshapeLimit">要素数を RESHAPE するために変更してはいけません。入力が空の場合、出力サイズが固定されていない限り最大次元長は増加しません。</entry>
    <entry key="rot90_2">列挙値は k の入力に対してサポートされていません。</entry>
    <entry key="rot90_3">k はスカラーでなければなりません。</entry>
    <entry key="rot90_4">k は定数でなければなりません。</entry>
    <entry key="shiftdim_3">列挙値は 2 番目の引数に対してサポートされていません。</entry>
    <entry key="shiftdim_4">2 番目の引数は定数でなければなりません。</entry>
    <entry key="shiftdim_autoDimIncompatibility">生成されたコードには可変サイズの行列が必要ですが、受け取ったのは可変長のベクトルです。明示的にシフトする位置の数を指定します。</entry>
    <entry key="shiftdim_invalidNshifts">2 番目の引数は空または実数の整数のスカラーでなければなりません。</entry>
    <entry key="shiftdim_wrongNDims">1 番目の入力引数は、シフト数が与えられその数が正の場合は常に同じ次元数をもたなければなりません。</entry>
    <entry key="sub2ind_2">サイズの引数は数値でなければなりません。</entry>
    <entry key="sub2ind_3">1 番目の入力は固定サイズでなければなりません。</entry>
    <entry key="vander_argNotVector">引数はベクトルでなければなりません。</entry>
    <entry key="wilkinson_2">1 番目の引数は定数でなければなりません。</entry>
    <entry key="wilkinson_3">1 番目の引数は実数で整数のスカラーでなければなりません。</entry>
    <entry key="wilkinson_5">2 番目の入力は ''double'' または ''single'' でなければなりません。</entry>
    <entry key="wilkinson_argMustBeRealIntScalar">1 番目の引数は実数で整数のスカラーでなければなりません。</entry>
    <entry key="eml_refblas_xgemv_2">EML_REFBLAS_XGEMV:いずれかの入力が複素数である場合、Y は複素数でなければなりません。</entry>
    <entry key="eml_refblas_xrotg_2">A と B はクラスと実数/複素数が同じでなければなりません。</entry>
    <entry key="eml_reflapack_xzlartg_1">F と G は同じクラスでなければなりません。</entry>
    <entry key="eml_all_or_any_2">1 番目の入力は ''all'' または ''any'' でなければなりません。</entry>
    <entry key="eml_all_or_any_6">行列の入力は HDL ターゲットに対してサポートされていません。</entry>
    <entry key="eml_all_or_any_autoDimIncompatibility">Generated code expects a variable-size matrix but receives a variable-length vector. Specify the operating dimension explicitly or specify a variable-length vector at code generation time.</entry>
    <entry key="eml_all_or_any_specialEmpty">1 つの可変サイズの行列入力 [] をもつ ALL または ANY はサポートされていません。</entry>
    <entry key="AllConstInputs">すべての入力は定数でなければなりません。</entry>
    <entry key="eml_assert_valid_dim_1">列挙型は次元の引数に対してサポートされていません。</entry>
    <entry key="eml_assert_valid_dim_2">次元は固定サイズのスカラーでなければなりません。</entry>
    <entry key="eml_assert_valid_dim_dimTooLarge">次元が intmax(''{0}'') を超えています。</entry>
    <entry key="eml_assert_valid_size_arg_1">列挙型はサイズの引数に対してサポートされていません。</entry>
    <entry key="eml_assert_valid_size_arg_2">サイズの引数は定数でなければなりません。</entry>
    <entry key="eml_assert_valid_size_arg_3">サイズの引数は数値でなければなりません。</entry>
    <entry key="eml_assert_valid_size_arg_4">size 引数は複素数にはできません。</entry>
    <entry key="eml_assert_valid_size_arg_6">サイズの引数はスカラーでなければなりません。</entry>
    <entry key="eml_assert_valid_size_nohalf">size 引数は half にできません。別の数値型を使用してください。</entry>
    <entry key="eml_assert_valid_size_nonsparse">サイズ引数はフル (非スパース) でなければなりません。</entry>
    <entry key="eml_assert_valid_size_arg_invalidSizeVector">サイズ ベクトルは {0,number,integer} から {1,number,integer} の範囲の有限の整数要素をもつ行ベクトルでなければなりません。</entry>
    <entry key="AssertValidSizeArgFixedSize">コード生成では、サイズのベクトルを可変長にできません。</entry>
    <entry key="eml_div_1">複素数の整数演算はサポートされていません。</entry>
    <entry key="eml_div_2">整数は、同じクラスの整数、あるいはスカラーの倍精度とのみ結合できます。</entry>
    <entry key="eml_fft_4">DIM は定数でなければなりません。</entry>
    <entry key="eml_fft_sizeMustBePower2">変換次元は 2 のべき乗でなければなりません。</entry>
    <entry key="FFTInvalidAlgorithmString">無効なアルゴリズム名です。''radix2''、''bluestein''、''rader''、''auto'' のいずれかでなければなりません</entry>
    <entry key="FFTRaderNonPrime">Rader アルゴリズムでは、変換の長さは素数でなければなりません。</entry>
    <entry key="eml_guarded_inf_1">サポートされていないクラスです。</entry>
    <entry key="eml_guarded_nan_1">サポートされていないクラスです。</entry>
    <entry key="eml_int_nbits_1">認識可能な整数のクラスではありません。</entry>
    <entry key="eml_isequal_core_2">1 番目の入力はスカラーの ''logical'' でなければなりません。</entry>
    <entry key="eml_min_or_max_2">複素数の整数 ''{0}'' はサポートされていません。</entry>
    <entry key="eml_min_or_max_4">比較のための 2 つの行列と 2 つの出力引数をもつ関数 ''{0}'' は、サポートされていません。</entry>
    <entry key="eml_min_or_max_5">複素数の整数 ''{0}'' はサポートされていません。</entry>
    <entry key="eml_min_or_max_6">混合した入力は、単精度と倍精度、あるいは整数とスカラーの倍精度のいずれかでなければなりません。他のすべての組み合わせは許可されません。</entry>
    <entry key="eml_min_or_max_7">比較のための 2 つの行列と使用する次元をもつ関数 ''{0}'' は、サポートされていません。</entry>
    <entry key="eml_min_or_max_varDimZero">MAX または MIN の使用する次元が可変長である場合、実行時に長さゼロにしてはいけません。</entry>
    <entry key="eml_ndims_varsized_1">内部エラー</entry>
    <entry key="eml_pad_array_2">PADVAL の入力はスカラーでなければなりません。</entry>
    <entry key="eml_pad_or_truncate_matrix_NMustBeConst">N は定数でなければなりません。</entry>
    <entry key="eml_pad_or_truncate_matrix_XMustBe2D">X は空でない 2 次元の数値行列でなければなりません。</entry>
    <entry key="eml_parse_parameter_inputs_10">Parse オプションの入力は [] または構造体でなければなりません。</entry>
    <entry key="eml_parse_parameter_inputs_11">CaseSensitivity は true または false でなければなりません。</entry>
    <entry key="eml_parse_parameter_inputs_12">StructExpand は true または false でなければなりません。</entry>
    <entry key="eml_parse_parameter_inputs_13">PartialMatching は ''最初''、''なし'' または ''固有'' でなければなりません。</entry>
    <entry key="eml_parse_parameter_inputs_14">Options input must be [] or a struct with fields selected from ''CaseSensitivity'', ''StructExpand'', ''IgnoreNulls'', and ''PartialMatching''.</entry>
    <entry key="ParameterNamesMustBeConstant">Parameter names must be constant character vectors or string scalars.</entry>
    <entry key="UnmatchedParameter">''{0}'' は認識されたパラメーターではありません。名前と値の有効なペア引数のリストは、この関数のドキュメンテーションを参照してください。</entry>
    <entry key="eml_parse_parameter_inputs_2">{0} 入力は構造体か、文字ベクトルまたは string スカラーからなる定数 cell 配列でなければなりません。</entry>
    <entry key="eml_parse_parameter_inputs_3">VARARGIN の長さは 65535 を超えることはできません。</entry>
    <entry key="eml_parse_parameter_inputs_4">パラメーター名が多すぎます。オプションの引数およびパラメーター名のサポートされる最大数は 65535 です。</entry>
    <entry key="eml_parse_parameter_inputs_5">NVPairNames の入力構造体の各フィールドの値は実数でスカラーの ''uint32'' でなければなりません。</entry>
    <entry key="ParamMissingValue">''{0}'' に値が指定されていません。名前と値のペアの引数では、名前の後に値がくる必要があります。</entry>
    <entry key="ExpectedParameterNameOrOptionStruct">パラメーター名またはパラメーター名と値の構造体が必要です。</entry>
    <entry key="ExpectedParameterName">パラメーター名が必要です。</entry>
    <entry key="eml_parse_parameter_inputs_9">Parse オプションの入力は定数でなければなりません。struct(...) を使用して定義してください。</entry>
    <entry key="UnmatchedOption">''{0}'' is not a valid input in this context.</entry>
    <entry key="eml_rand_mcg16807_1">シードは double のスカラーでなければなりません。</entry>
    <entry key="eml_rand_mcg16807_2">範囲の入力は固定サイズでなければなりません。</entry>
    <entry key="eml_rand_mcg16807_3">範囲の入力はスカラーにするか 2 つの要素を含めなければなりません。</entry>
    <entry key="eml_rand_mt19937ar_3">シード値は固定サイズの double のスカラーでなければなりません。</entry>
    <entry key="eml_rand_mt19937ar_4">範囲の入力は固定サイズでなければなりません。</entry>
    <entry key="eml_rand_mt19937ar_5">範囲の入力はスカラーにするか 2 つの要素を含めなければなりません。</entry>
    <entry key="eml_rand_shr3cong_1">シードは double のスカラーでなければなりません。</entry>
    <entry key="eml_rand_shr3cong_2">範囲の入力は固定サイズでなければなりません。</entry>
    <entry key="eml_rand_shr3cong_3">範囲の入力はスカラーにするか 2 つの要素を含めなければなりません。</entry>
    <entry key="eml_rcond_1">入力は、single または double でなければなりません。</entry>
    <entry key="eml_safe_eq_1">1 番目の入力は浮動小数点にはできません。</entry>
    <entry key="eml_safe_eq_2">サポートされていないクラス: ''{0}''.</entry>
    <entry key="UnsupportedEmptyArrayType">あいまいな構造体タイプの空の配列はサポートされていません。</entry>
    <entry key="eml_scalar_eg_2">引数が列挙値の場合、すべての引数は同じ列挙型でなければなりません。</entry>
    <entry key="eml_sort_2">並べ替えの方向は、''ascend'' または ''descend'' でなければなりません。</entry>
    <entry key="SortDirMustBeConstant">並べ替えの方向は定数で、''ascend'' または ''descend'' のいずれかでなければなりません。</entry>
    <entry key="SortCellstrHomogenizationFailed"> 入力 cell 配列を同種化できません。coder.varsize を使用して 'X' を同種化してください。</entry>
    <entry key="eml_unsigned_class_1">認識可能な整数のクラスではありません。</entry>
    <entry key="fzero_11">ユーザー関数は常に実数を返さなければなりません。</entry>
    <entry key="fzero_14">ユーザー関数は常に実数を返さなければなりません。</entry>
    <entry key="fzero_2">出力引数が多すぎます。コード生成の場合、FZERO は出力構造体引数をサポートしていません。</entry>
    <entry key="fzero_4">1 番目の入力は関数ハンドルでなければなりません。</entry>
    <entry key="fzero_5">FZERO は少なくとも 2 つの入力引数が必要です。</entry>
    <entry key="fzero_6">FZERO は、double のデータ型の入力のみ受け入れます。</entry>
    <entry key="fzero_7">2 番目の引数は固定サイズでなければなりません。</entry>
    <entry key="fzero_8">2 番目の引数は、長さ 1 または 2 でなければなりません。</entry>
    <entry key="fzero_9">3 番目の引数はオプション構造体または [] でなければなりません。</entry>
    <entry key="quad2d_2">1 番目の入力引数は関数ハンドルでなければなりません。</entry>
    <entry key="quad2d_7">MATLAB:quad2d:invalidSingularSingular オプションは true または false でなければなりません。</entry>
    <entry key="quad2d_invalidFailurePlot">FailurePlot オプションは MATLAB コード生成でサポートされていません。</entry>
    <entry key="quadgk_2">1 番目の入力引数は関数ハンドルでなければなりません。</entry>
    <entry key="quadgk_3">A と B はスカラーの浮動小数点でなければなりません。</entry>
    <entry key="quadgk_4">サポートするクラスは、''double'' と ''single'' です。</entry>
    <entry key="quadgk_8">MaxIntervalCount は定数でなければなりません。</entry>
    <entry key="quadgk_9">MaxIntervalCount は、インデックス範囲内の正の整数のスカラーでなければなりません。</entry>
    <entry key="quadgk_MaxIntervalCountTooSmall">MaxIntervalCount は最初の反復に対して小さすぎます。</entry>
    <entry key="quadgk_WaypointsTypeMismatch">MATLAB コード生成は、Waypoints が ''single'' の場合、少なくとも 1 つのエンドポイントを ''single'' にする必要があります。</entry>
    <entry key="mustBeAInput">引数 ''ClassNames'' は、空でない定数の string、文字ベクトル、または文字ベクトルの cell 配列でなければなりません。</entry>
    <entry key="mustBeLike">2 つの入力引数を指定する場合、最初の引数は ''like'' である必要があります。</entry>
    <entry key="constTypename">型名を指定する char または string 引数は定数でなければなりません。</entry>
    <entry key="nargchk_2">入力は定数でなければなりません。</entry>
    <entry key="nargchk_3">4 番目の入力は ''struct'' または ''string'' でなければなりません。</entry>
    <entry key="nargchk_4">1 番目の 3 つの入力はスカラーでなければなりません。</entry>
    <entry key="nargchk_5">1 番目の 3 つの入力は数値でなければなりません。</entry>
    <entry key="nargchk_6">スカラーの整数値が必要ですが、値が整数ではありません。</entry>
    <entry key="nargoutchk_2">入力は定数でなければなりません。</entry>
    <entry key="nargoutchk_3">4 番目の入力は ''struct'' または ''string'' でなければなりません。</entry>
    <entry key="nargoutchk_4">1 番目の 3 つの入力はスカラーでなければなりません。</entry>
    <entry key="nargoutchk_5">1 番目の 3 つの入力は数値でなければなりません。</entry>
    <entry key="nargoutchk_6">スカラーの整数値が必要ですが、値が整数ではありません。</entry>
    <entry key="chol_3">2 番目の入力は定数 ''upper'' または ''lower'' でなければなりません。</entry>
    <entry key="chol_4">入力行列は nargout == 2 の場合、両方の次元で可変サイズでなければなりません。</entry>
    <entry key="cond_3">利用可能な唯一の行列のノルムは、1、2、inf、および ''fro'' です。</entry>
    <entry key="cond_inputMustBe2D">入力行列は 2 次元でなければなりません。</entry>
    <entry key="qr_inputMustBe2D">引数 A は 2 次元行列でなければなりません。</entry>
    <entry key="qr_invalidArguments">オプションの組み合わせが無効です。</entry>
    <entry key="expm_3">入力は、single または double でなければなりません。</entry>
    <entry key="linsolve_2">MATLAB コード生成は 1 つのオプション構造体引数のみサポートします。</entry>
    <entry key="linsolve_5">3 番目の引数は構造体配列でなければなりません</entry>
    <entry key="linsolve_6">MATLAB コード生成はスカラーの構造体入力のみサポートします。</entry>
    <entry key="linsolve_7">3 番目の引数は定数でなければなりません。オプション構造体を作成するには、関数STRUCT を使用してください。</entry>
    <entry key="linsolve_8">構造体のフィールドは、論理スカラーを含まなければなりません。</entry>
    <entry key="lsqminnormInputTypes">最初と 2 番目の引数は double 行列または single 行列でなければなりません。</entry>
    <entry key="lsqminnormInvalidTol">許容誤差は、double 型または single 型の非負のスカラー数でなければなりません。</entry>
    <entry key="lsqminnormInvalidReg">正則化係数は非負のスカラーでなければなりません</entry>
    <entry key="lsqminnormUnrecognizedInput">Option inputs must be either "warn", "nowarn", a real numeric scalar tolerance, or "RegularizationFactor" followed by a corresponding value.</entry>
    <entry key="lu_4">2 番目の引数は ''vector'' または ''matrix'' でなければなりません</entry>
    <entry key="lu_inputMustBe2D">行列は 2 次元でなければなりません。</entry>
    <entry key="norm_4">利用可能な唯一の行列のノルムは、1、2、inf、および ''fro'' です。</entry>
    <entry key="norm_inputMustBe2D">入力 x はベクトルまたは 2 次元行列でなければなりません。</entry>
    <entry key="normest_5">許容誤差は実数でなければなりません。</entry>
    <entry key="normest_inputMustBe2D">入力行列は 2 次元でなければなりません。</entry>
    <entry key="null_2">2 番目の入力 (有理基底オプション) はサポートされていません。</entry>
    <entry key="pinv_4">TOL はスカラーの浮動小数点でなければなりません。</entry>
    <entry key="pinv_inputMustBe2D">入力行列は 2 次元でなければなりません。</entry>
    <entry key="planerot_4">入力は 2 要素の列ベクトルでなければなりません。</entry>
    <entry key="qr_2">無駄のないサイズに分解するために qr(X,0) を使用してください。</entry>
    <entry key="rank_4">指定する場合、tol はスカラーでなければなりません。</entry>
    <entry key="rcond_2">入力は、single または double でなければなりません。</entry>
    <entry key="rsf2csf_2">入力は ''double'' または ''single'' でなければなりません。</entry>
    <entry key="rsf2csf_3">入力は実数でなければなりません。</entry>
    <entry key="schur_5">2 番目の引数は、''real'' または ''complex'' でなければなりません。</entry>
    <entry key="schur_failed">SCHUR が失敗しました。</entry>
    <entry key="schur_input2D">入力は 2 次元でなければなりません。</entry>
    <entry key="sqrtm_rootEigenCancel">2 つ以上の固有値の主平方根は約分されます。結果は不正確になる可能性があります。</entry>
    <entry key="svd_4">コード生成では、2 番目の引数は 0 または ''econ'' の定数でなければなりません。</entry>
    <entry key="svd_5">無駄のないサイズに分解するには、svd(X,0) または svd(X,''econ'') を使用してください。</entry>
    <entry key="bitAndXorOrUnsupportedClasses">入力は同じクラスの符号付き整数または符号なしの整数でなければなりません。あるいは、一方の入力を double のスカラーにすることは可能です。</entry>
    <entry key="bitIntegersOnly">最初の引数は符号付き整数または符号なしの整数でなければなりません。</entry>
    <entry key="bitshiftAssumedTypeMustBeConstant">Assumedtype の入力は定数でなければなりません。</entry>
    <entry key="colon_6">オペランドは定数でなければなりません。</entry>
    <entry key="colon_7">コロン オペランドは実数のスカラーでなければなりません。</entry>
    <entry key="colon_8">コロン オペランドは、すべて同じ型、または実数のスカラーの double が混合していなければなりません。</entry>
    <entry key="colon_9">文字のオペランドをもつコロン演算子に対して、1 番目と最後のオペランドは文字でなければなりません。</entry>
    <entry key="colon_10">文字のオペランドをもつコロン演算子に対して、2 番目のオペランドは、文字、または実数のスカラーの double でなければなりません。</entry>
    <entry key="expectHomogeneousHalfInputs">1 つの入力が半精度である場合、すべての入力が半精度でなければなりません。</entry>
    <entry key="colon_operandsMustBeScalars">コロン オペランドは実数のスカラーでなければなりません。</entry>
    <entry key="eml_setop_12">入力は 2 次元でなければなりません。</entry>
    <entry key="eml_setop_2">入力引数が多すぎます。</entry>
    <entry key="eml_setop_3">1 番目の入力はオペレーション名でなければなりません。</entry>
    <entry key="eml_setop_4">複素数の入力は ''single'' または ''double'' でなければなりません。</entry>
    <entry key="eml_setop_5">1 番目の 2 つの入力は同じ列挙クラスに属していなければなりません。</entry>
    <entry key="eml_setop_6">OP は ''intersect''、''setdiff''、''setxor''、または ''union'' でなければなりません。</entry>
    <entry key="eml_setop_7">入力は数値、論理値、または文字でなければなりません。</entry>
    <entry key="eml_setop_8">不明なフラグです。</entry>
    <entry key="eml_setop_9">''rows'' が指定されない場合、入力は行ベクトルでなければなりません。可変サイズの入力では、最初の次元は定数の長さ 1 でなければなりません。入力 [] はサポートされていません。空の設定を表すには、1 行 0 列の入力 (zeros(1,0) など) を使用してください。</entry>
    <entry key="eml_setop_10">クラス {0} の入力 A とクラス {1} の入力 B は、一方が倍精度でない限り、同じクラスでなければなりません。</entry>
    <entry key="setopInputsMustBeVectors">''rows'' が指定されない限り、入力はベクトルでなければなりません。可変サイズの入力では、最初または 2 番目の次元が定数長 1 でなければなりません。入力 [] はサポートされていません。空集合を表すには、1 行 0 列または 0 行 1 列の入力 (例: zeros(1,0) または zeros(0,1)) を使用してください。</entry>
    <entry key="vectorOrientationMustMatch">入力は両方とも行ベクトルか、列ベクトルでなければなりません。</entry>
    <entry key="eml_setop_unsortedA">1 番目のオペランドは昇順の並びになりません。最初に SORT を使用してください。</entry>
    <entry key="eml_setop_unsortedB">2 番目のオペランドは昇順の並びになりません。最初に SORT を使用してください。</entry>
    <entry key="eml_setop_unsortedRowsA">1 番目のオペランドは昇順の並びになりません。最初に SORTROWS を使用してください。</entry>
    <entry key="eml_setop_unsortedRowsB">2 番目のオペランドは昇順の並びになりません。最初に SORTROWS を使用してください。</entry>
    <entry key="idivide_2">認識されない丸めオプションです。小文字の ''fix''、''floor''、''round''、または ''ceil'' を使用してください。</entry>
    <entry key="idivide_3">少なくとも 1 つの引数は整数クラスに属していなければなりません。</entry>
    <entry key="idivide_4">複素数の整数演算はサポートされていません。</entry>
    <entry key="idivide_5">整数は、同じクラスの整数、あるいはスカラーの倍精度とのみ結合できます。</entry>
    <entry key="idivide_divideByZero">ゼロ除算です。</entry>
    <entry key="intersect_2">入力引数が多すぎます。</entry>
    <entry key="ismember_2">入力引数が多すぎます。</entry>
    <entry key="ismember_3">1 番目の 2 つの入力は同じ列挙クラスに属していなければなりません。</entry>
    <entry key="ismember_4">入力は数値、論理値、または文字でなければなりません。</entry>
    <entry key="ismember_5">複素数の入力は ''single'' または ''double'' でなければなりません。</entry>
    <entry key="ismember_6">不明なフラグです。</entry>
    <entry key="ismember_7">入力は 2 次元でなければなりません。</entry>
    <entry key="ismember_unsortedRowsS">2 番目のオペランドは昇順の並びになりません。最初に SORTROWS を使用してください。</entry>
    <entry key="ismember_unsortedS">2 番目のオペランドは昇順の並びになりません。最初に SORT を使用してください。</entry>
    <entry key="kron_1">入力引数 ''A'' は未定義です。</entry>
    <entry key="kron_2">入力引数 ''B'' は未定義です。</entry>
    <entry key="mpower_4">オペランドはどちらもスカラーでなければなりません。</entry>
    <entry key="mpower_5">整数は、同じクラスの整数、あるいはスカラーの倍精度とのみ結合できます。</entry>
    <entry key="mpower_6">少なくとも 1 つのオペランドはスカラーでなければなりません。</entry>
    <entry key="mpower_inputsMustBe2D">入力の引数は 2 次元でなければなりません。</entry>
    <entry key="mpower_needComplexInput">行列を非整数のスカラーのべき乗にする場合、少なくとも 1 つの引数は複素数でなければなりません。</entry>
    <entry key="mtimes_noDynamicScalarExpansion">内部の次元が同じでないため、スカラーを非スカラーで乗算することはできません。スカラー拡張を使用するには、コード生成時にスカラーを固定値として指定します。</entry>
    <entry key="power_4">複素数の整数演算はサポートされていません。</entry>
    <entry key="power_5">整数は、同じクラスの整数、あるいはスカラーの倍精度とのみ結合できます。</entry>
    <entry key="power_7">整数は、同じクラスの整数、あるいはスカラーの倍精度とのみ結合できます。</entry>
    <entry key="power_9">HDL ターゲットに対し、両方の入力は同じ整数のクラスに属していなければなりません。</entry>
    <entry key="power_domainError">定義域エラーです。複素数の結果を計算するには、少なくとも 1 つの入力を ''power(complex(a),b)'' などの複素数にします。</entry>
    <entry key="unique_3">1 番目の入力は数値、論理値、または文字でなければなりません。</entry>
    <entry key="unique_4">複素数の入力は ''single'' または ''double'' でなければなりません。</entry>
    <entry key="unique_5">オプションは定数の文字ベクトルでなければなりません。</entry>
    <entry key="unique_6">認識されないオプションです。</entry>
    <entry key="unique_7">同じオプションに対して、複数の値を指定できません。</entry>
    <entry key="unique_8">''rows'' が指定されない場合、最初の入力は行ベクトルでなければなりません。ベクトルが可変サイズの場合、最初の次元は固定長 1 でなければなりません。入力 [] はサポートされていません。空の設定を表すには、1 行 0 列の入力 (zeros(1,0) など) を使用してください。</entry>
    <entry key="unique_9">入力は 2 次元でなければなりません。</entry>
    <entry key="unique_InputMustBeVector">First or second dimension of input array must have a fixed size of 1 when "rows" option is not specified.</entry>
    <entry key="unique_cellInputMustBeVector">入力セル配列は、ベクトルでなければなりません。ベクトルが可変サイズの場合、最初の次元または 2 番目の次元は固定長 1 でなければなりません。入力 '{}' はサポートされていません。空のセットを表すには、cell(1,0) または cell(0,1) を使用してください。</entry>
    <entry key="unique_cellInputMustBeRowForLegacyOption">関数 unique にオプション 'legacy' が指定されている場合、入力 cell 配列は行ベクトルでなければなりません。ベクトルが可変サイズの場合、最初の次元は固定長 1 でなければなりません。入力 '{}' はサポートされていません。空のセットを表すには、cell(1,0) を使用してください。</entry>
    <entry key="xor_2">オペランドは実数でなければなりません。</entry>
    <entry key="interp1_14">サポートされないメソッドです。サポートされているメソッドは ''cubic''、''linear''、''nearest''、''next''、''pchip''、''previous''、''spline'' および ''v5cubic'' です。</entry>
    <entry key="interp1_2">テーブル V には数値のみを使用しなければなりません</entry>
    <entry key="interp1_3">データの横座標は実数でなければなりません。</entry>
    <entry key="interp1_5">外挿メソッドが無効です。</entry>
    <entry key="interp1_6">インデックス Xq には実数のみを使用しなければなりません</entry>
    <entry key="interp1_arrayXItoVector">可変サイズの Xq は必ずベクトルにするか、絶対にベクトルにしないでください。</entry>
    <entry key="interp1_nonMonotonicX">データの横座標は一意で厳密に単調でなければなりません。</entry>
    <entry key="interp1_vsizeMatrixBecameRowVec">可変サイズの入力行列または N 次元配列は実行時に行ベクトルに変換されてはいけません。</entry>
    <entry key="interp1q_1">入力引数 Xq は未定義です。</entry>
    <entry key="interp1q_2">データの横座標は実数でなければなりません。</entry>
    <entry key="interp1q_3">テーブル V には数値のみを使用しなければなりません。</entry>
    <entry key="interp1q_4">インデックス Xq には実数のみを使用しなければなりません。</entry>
    <entry key="interp1q_5">入力引数 X は列ベクトルでなければなりません。</entry>
    <entry key="interp1q_6">入力引数 Xq は列ベクトルでなければなりません。</entry>
    <entry key="interp1q_7">Y は length(x) 行でなければなりません。</entry>
    <entry key="nMustBeRealPosIntScalar">N は実数で正の整数のスカラーでなければなりません。</entry>
    <entry key="padecoef_2">N は定数でなければなりません。</entry>
    <entry key="padecoef_4">T はスカラーでなければなりません。</entry>
    <entry key="padecoef_5">T は浮動小数点でなければなりません。</entry>
    <entry key="nonfiniteValuesNotSupported">X には Inf または NaN を含めてはいけません。</entry>
    <entry key="poly_3">入力は 2 次元でなければなりません。</entry>
    <entry key="poly_vsizeMatrixIsVector">POLY への可変サイズの行列の入力は実行時にベクトルの入力に変換されてはいけません。代わりに可変長のベクトルを使用してください。</entry>
    <entry key="polyfit_2">N は定数でなければなりません。</entry>
    <entry key="polyfit_3">N はスカラー、数値、および実数でなければなりません。</entry>
    <entry key="polyfit_4">X と Y は、最大 1 つの可変長次元、最初の次元、または 2 番目の次元のベクトルでなければなりません。他のすべての次元は固定長 1 をもたなければなりません。</entry>
    <entry key="polyfit_5">POLYFIT データの入力はベクトルでなければなりません。</entry>
    <entry key="polyval_6">S は、誤差推定を計算するために必要です。</entry>
    <entry key="polyval_7">S は POLYFIT によって返される構造体でなければなりません。</entry>
    <entry key="polyval_invalidMu">MU は少なくとも 2 つの要素をもつ浮動小数点配列でなければなりません。</entry>
    <entry key="roots_1">ROOTS は可変サイズが必要です。</entry>
    <entry key="roots_3">入力は ''double'' または ''single'' でなければなりません。</entry>
    <entry key="roots_4">入力は、最大 1 つの可変長次元、最初の次元、または 2 番目の次元のベクトルでなければなりません。他のすべての次元は固定長 1 でなければなりません。</entry>
    <entry key="roots_5">入力はベクトルでなければなりません。</entry>
    <entry key="nnz_2">入力は数値、文字、または論理値でなければなりません。</entry>
    <entry key="nonzeros_2">入力は数値、文字、または論理値でなければなりません。</entry>
    <entry key="betainc_2">入力は、single または double でなければなりません。</entry>
    <entry key="betainc_3">入力は実数でなければなりません。</entry>
    <entry key="betainc_4">TAIL は ''lower'' または ''upper'' でなければなりません。</entry>
    <entry key="betaincinv_2">入力は、single または double でなければなりません。</entry>
    <entry key="betaincinv_3">入力は実数でなければなりません。</entry>
    <entry key="betaincinv_4">TAIL は ''lower'' または ''upper'' でなければなりません。</entry>
    <entry key="cross_1">入力引数 A は未定義です。</entry>
    <entry key="cross_2">入力引数 B は未定義です。</entry>
    <entry key="cross_4">入力のクラスはサポートされません。single または double でなければなりません。</entry>
    <entry key="variableSizeMatrixToVector">実行時にベクトルになる可変サイズの配列の入力は同じ方向でなければなりません。</entry>
    <entry key="ellipke_4">入力引数は実数でなければなりません。</entry>
    <entry key="ellipke_5">TOL はスカラーの浮動小数点でなければなりません。</entry>
    <entry key="eml_erfcore_2">入力は、single または double でなければなりません。</entry>
    <entry key="eml_erfcore_3">入力は実数でなければなりません。</entry>
    <entry key="eml_erfcore_4">2 番目の入力は定数でなければなりません。</entry>
    <entry key="eml_primes_core_1">1 番目の入力は定数でなければなりません。</entry>
    <entry key="eml_primes_core_4">サポートされていないクラスです。</entry>
    <entry key="expint_2">入力は、single または double でなければなりません。</entry>
    <entry key="factor_2">N は浮動小数点のスカラーでなければなりません。</entry>
    <entry key="factor_3">FACTOR は可変サイズのサポートが必要です。このオプションは現在サポートされていません。</entry>
    <entry key="factorial_1">N は、非負の浮動小数点整数の行列でなければなりません。</entry>
    <entry key="gamma_2">入力は、single または double でなければなりません。</entry>
    <entry key="gamma_3">入力は実数でなければなりません。</entry>
    <entry key="gammainc_2">入力は実数の非スパースで、倍精度または単精度でなければなりません。</entry>
    <entry key="gammainc_3">TAIL は ''lower'' または ''upper'' でなければなりません。</entry>
    <entry key="gammaincinv_1">入力が不足しています。</entry>
    <entry key="gammaincinv_2">入力は実数の非スパースで、倍精度または単精度でなければなりません。</entry>
    <entry key="gammaln_2">入力は、single または double でなければなりません。</entry>
    <entry key="gcd_4">入力は実数の整数でなければなりません。</entry>
    <entry key="isprime_2">入力は ''double'' または ''single'' でなければなりません。</entry>
    <entry key="isprime_3">ISPRIME は可変サイズのサポートが必要です。このオプションは現在サポートされていません。</entry>
    <entry key="lcm_4">入力は実数でなければなりません。</entry>
    <entry key="nchoosek_3">1 番目の引数は、スカラーかベクトルでなければなりません。</entry>
    <entry key="nchoosek_4">2 番目の入力は非負の整数でなければなりません。</entry>
    <entry key="primes_2">N は浮動小数点のスカラーでなければなりません。</entry>
    <entry key="primes_3">PRIMES は可変サイズのサポートが必要です。このオプションは現在サポートされていません。</entry>
    <entry key="bin2dec_InputOutOfRange">入力は {0} ビット以下でなければなりません。</entry>
    <entry key="bin2dec_inputMustBe2D">入力は 2 次元でなければなりません。</entry>
    <entry key="blanks_2">入力は数値でなければなりません。</entry>
    <entry key="hex2dec_inputMustBe2D">入力は 2 次元でなければなりません。</entry>
    <entry key="structfun_maxrhs">STRUCTFUN は、コード生成で最大 3 つの出力をサポートします。</entry>
    <entry key="structfun_noErrorHandler">ErrorHandler オプションはコード生成でサポートされていません。</entry>
    <entry key="int_forloop_overflow">クラス {0} のループの変数が for ループの最後の反復でオーバーフローする可能性があります。無限ループを引き起こす可能性があります。</entry>
    <entry key="colonIndexOverflow">Numerical overflow occurred when performing colon operation on values of class {0}.</entry>
    <entry key="internal_invariant_arg1">条件の入力引数は論理スカラーでなければなりません。</entry>
    <entry key="internal_invariant_arg2">2 番目の入力はメッセージ識別子でなければなりません。</entry>
    <entry key="rng_stringInputNotConst">この入力は定数でなければなりません。</entry>
    <entry key="rng_shuffleNotSupported">'shuffle' 入力はサポートされていません。</entry>
    <entry key="rng_unsupportedGenerator">ジェネレーターは 'twister'、'v5normal'、または 'v4' でなければなりません。</entry>
    <entry key="badGeneratorState">ジェネレーターの状態は有効ではありません。</entry>
    <entry key="sum_hdlRequiresFlag">入力が ''{0}'' でターゲットが ''hdl'' の場合、''native'' または ''double'' フラグを指定しなければなりません。</entry>
    <entry key="indexIntRelop_unsupportedInput">エミュレーションの整数型とクラス ''{0}'' との比較はサポートされていません。エミュレーションの整数型に類似する組み込み整数型にオペランドをキャストしてください。</entry>
    <entry key="indexIntRelop_floatOverflow">エミュレーションの整数型はクラス ''{0}'' の範囲を超えています。浮動小数点オペランドを適切な整数クラスにキャストしてください。</entry>
    <entry key="unsupportedString">この入力には、0 から {0,number,integer} までの範囲の文字のみを含めることができます。</entry>
    <entry key="hex2num_invalidInput">入力は最大 {0,number,integer} 列をもつ文字ベクトルまたは行列でなければなりません。</entry>
    <entry key="environmentUnknown">関数 ''{0}'' は ''{1}'' ターゲットでサポートされていません。</entry>
    <entry key="mfmt2cfmt_unsupportedChar">エスケープ シーケンスは 0 ～ 127 の範囲内の文字コードでなければなりません。</entry>
    <entry key="mfmt2cfmt_invalidFormat">文字列形式が無効です。</entry>
    <entry key="mfmt2cfmt_dollarNotSupported">変換仕様 ''{0}'' は、変数の識別子として ''$'' を使用します。これはコード生成でサポートされていません。''formatSpec'' パラメーターからこの使用を省略してください。</entry>
    <entry key="mfmt2cfmt_btNotSupported">変換仕様 ''{0}'' は、コード生成でサポートされていないサブタイプの修飾子 ''b'' や ''t'' を使用しています。''formatSpec'' パラメーターからこれらの修飾子を省略してください。</entry>
    <entry key="NothingToRead">ファイルには読み取り対象が残っていません。このエラーを回避するには、'fgets' または 'fgetl' を使用する前に、'feof' を呼び出して、ファイルの終わりに達したかどうかをチェックしてください。</entry>
    <entry key="fgetslIllegalCharacter">整数値 {0} をもつ無効な非 ASCII 文字を読み取りました。コード生成では、すべての文字の値が 128 未満でなければなりません。</entry>
    <entry key="fopenFidInputNotSupported">FID の入力はコード生成でサポートされていません。</entry>
    <entry key="fopenMsgOutputNotSupported">MESSAGE の出力はコード生成でサポートされていません。</entry>
    <entry key="fopenAllNotSupported">fopen(''all'') はコード生成でサポートされていません。</entry>
    <entry key="fopenMfNotSupported">MACHINEFORMAT と ENCODING の入力はコード生成でサポートされていません。</entry>
    <entry key="FopenNoTextMode">コード生成では、permission で 't' を fopen に渡し、ファイルをテキスト モードで開くことはサポートされていません。</entry>
    <entry key="FopenInvalidPerm">コード生成では、fopen の permission は最大 3 文字とし、2 番目と 3 番目の文字は '+' と 'b' から、繰り返しなしで選択しなければなりません。</entry>
    <entry key="xprintfCharFmt">''{0}'' に与えられた ''formatSpec'' パラメーターの型は ''{1}'' です。これは文字ベクトルでなければなりません。</entry>
    <entry key="xprintfConstFmt">''{0}'' に与えられる ''formatSpec'' パラメーターは定数でなければなりません。</entry>
    <entry key="xprintfFixedSzFid">''{0}'' に与えられた ''fileID'' パラメーターは可変サイズです。これは固定サイズでなければなりません。</entry>
    <entry key="xprintfFmtTypeMismatchChar">''{1}'' 型の入力引数が ''formatSpec'' の変換文字 ''{0}'' と一致しません。コード生成では、この入力引数の型は ''char'' または ''string'' でなければなりません。</entry>
    <entry key="xprintfFmtTypeMismatchFloat">''{1}'' 型の入力引数が ''formatSpec'' の変換文字 ''{0}'' と一致しません。コード生成では、この入力引数の型は ''single'' または ''double'' でなければなりません。</entry>
    <entry key="xprintfFmtTypeMismatchSigned">''{1}'' 型の入力引数が ''formatSpec'' の変換文字 ''{0}'' と一致しません。コード生成では、この入力引数の型は ''int8''、''int16''、''int32'' または ''int64'' でなければなりません。</entry>
    <entry key="xprintfFmtTypeMismatchUnsigned">''{1}'' 型の入力引数が ''formatSpec'' の変換文字 ''{0}'' と一致しません。コード生成では、この入力引数の型は ''uint8''、''uint16''、''uint32'' または ''uint64'' でなければなりません。</entry>
    <entry key="xprintfNumericStar">コード生成では、sprintf または fprintf への引数 ''*'' はコード生成時に固定サイズのスカラーまたは定数でなければなりません。</entry>
    <entry key="xprintfScalarArg">コード生成では、sprintf または fprintf への引数 ''{0}'' はコード生成時に固定サイズのスカラーまたは定数でなければなりません。</entry>
    <entry key="XprintfIntegerTypeTooLarge">コード生成において、変換文字 ''%{0}'' に対応する整数引数は、ターゲット ハードウェアで表現可能でなければなりません。指定された引数は {1,number,integer} ビットですが、指定されたハードウェアの最大整数は {2,number,integer} ビットです。</entry>
    <entry key="sprintfErrmsg">エラー メッセージの出力はコード生成でサポートされていません。</entry>
    <entry key="fixedSzFid">与えられた ''fileID'' パラメーターは可変サイズです。これは固定サイズのスカラーでなければなりません。</entry>
    <entry key="unrecognizedRelop">関係演算子名 ''{0}'' はサポートされていません。これは、''lt''、''gt''、''le''、''ge''、''eq''、''ne'' のいずれかでなければなりません。</entry>
    <entry key="eml_i64relops_need64BitInt">''a'' または ''b'' は uint64 または int64 であり、その一方がプリミティブ数値型でなければなりません。ただし、渡される型は a が {0}、b が {1} です。</entry>
    <entry key="int64DoubleDivisionNotSupported">''{0}'' を ''{1}'' で除算することはコード生成でサポートされていません。除算する前にデータ型が一致するように、オペランドのいずれかをキャストしてください。</entry>
    <entry key="InputMustBeConstant">{0} 入力は定数でなければなりません。</entry>
    <entry key="CodegenOnly">この関数は、コード生成ターゲットのみでサポートされます。</entry>
    <entry key="NotSupportedForCodegen">入力 {0} はコード生成ではサポートされません。</entry>
    <entry key="randgIterLimitExceeded">RANDG が棄却の反復制限に達しました。</entry>
    <entry key="mod_int64MixedDoubleNotSupported">関数 ''{0}'' はタイプ ''{1}'' と ''{2}'' を組み合わせた入力をサポートしません。''{3}'' を呼び出す前に、型が一致するように引数のいずれかをキャストしてください。</entry>
    <entry key="Int64NotSupported">この関数は ''uint64'' または ''int64'' 型の入力をサポートしません。この関数を呼び出す前に、引数を別の整数型または浮動小数点型にキャストしてください。</entry>
    <entry key="InputMustBeFixedSizeScalar">入力 {0} は固定サイズのスカラーでなければなりません。</entry>
    <entry key="bitAndXorOrMustBeIntegers">コード生成では、少なくとも 1 つの入力が整数クラスに属していなければなりません。</entry>
    <entry key="SetOpUnsortedRealAWithComplexB">B が複素数の場合、A は複素数の昇順で並べ替えなければなりません。sort(complex(A)) を使用するか、''stable'' オプションを使用します。</entry>
    <entry key="SetOpUnsortedRealBWithComplexA">A が複素数の場合、B は複素数の昇順で並べ替えなければなりません。sort(complex(B)) を使用するか、''stable'' オプションを使用します。</entry>
    <entry key="SetOpUnsortedRowsRealAWithComplexB">B が複素数の場合、A は複素数の昇順で並べ替えなければなりません。sortrows(complex(A)) を使用するか、''stable'' オプションを使用します。</entry>
    <entry key="SetOpUnsortedRowsRealBWithComplexA">A が複素数の場合、B は複素数の昇順で並べ替えなければなりません。sortrows(complex(B)) を使用するか、''stable'' オプションを使用します。</entry>
    <entry key="PolyderNeedsVariableSizing">出力配列の先頭にゼロがあり、EnableVariableSizing が false に設定されています。POLYDER は、先頭のゼロを削除するためサイズ可変であることが必要です。</entry>
    <entry key="InputsMustBeFloats">入力は float、つまり single か double でなければなりません。</entry>
    <entry key="InputsMustBeFourColumnRealMatrices">入力は、実数で 4 列の数値行列でなければなりません。</entry>
    <entry key="FileReadBadFile">ファイル {0} を開けません。</entry>
    <entry key="FreadMachineFormatNotSupported">コード生成には ''machineformat'' 入力引数を使用できません。</entry>
    <entry key="FreadReadTruncated">コード生成では、''sizeA'' が有限の場合、FREAD は ''sizeA'' で指定された数の要素を読み取らなければなりません。この呼び出しで要求された要素の数は {0, number, integer} 個ですが、実際に読み取られたのは {1, number, integer} 個です。</entry>
    <entry key="FreadConstPrecision">コード生成では、''precision'' 引数は定数でなければなりません。</entry>
    <entry key="FreadBitNUnsupported">コード生成では、precision に ''bitN'' または 'ubitN' を指定することはできません。</entry>
    <entry key="FreadLongUnsupported">コード生成では、precision パラメーターの型に ''long''、''ulong'' または ''unsigned long'' を使用できません。</entry>
    <entry key="IntNbitsUnknownNbits">MATLAB 整数は 8、16、32 または 64 ビットでなければなりません。{0, number, integer} ビットの整数が要求されました。</entry>
    <entry key="FreadCSizeMismatch">コード生成では、precision で C の型を指定する場合、ターゲット ハードウェアと製品ハードウェアでその型のサイズが一致しなければなりません。型 {0} は、ターゲット ハードウェアでは {1, number, integer} ビットですが、製品ハードウェアでは {2, number, integer} ビットになっています。</entry>
    <entry key="FreadNonStandardInteger">コード生成では、precision に C の型を指定する場合、その型のハードウェア サイズが組み込み MATLAB 整数と一致しなければなりません。指定されたサイズ {0, number, integer} は組み込み MATLAB 整数と一致しません。</entry>
    <entry key="FreadUseMalloc">コード生成では、sizeA が定数でないか、非有限値を含む場合に、FREAD で動的メモリ割り当てが必要です。</entry>
    <entry key="FreadNativeSrcType">コード生成時には、FREAD のソース タイプはターゲット ハードウェアのタイプに直接マップしなければなりません。クラス {1} は {0,number,integer} ビットの C の型にマップしません。</entry>
    <entry key="FgetsTooBig">コード生成では、2 番目の fgets 入力は Inf、またはターゲット ハードウェアの表現可能な最大配列サイズ intmax 未満に設定しなければなりません。</entry>
    <entry key="InputMustBeFixedSize">入力 {0} は固定サイズでなければなりません。</entry>
    <entry key="NoVarSizeInputs">入力 {0} には固定サイズの次元が指定されなければなりません。</entry>
    <entry key="OptimsetPrintFieldUnsupported">コード生成は、使用可能なフィールドをリストする OPTIMSET の入力と出力のない構文をサポートしません。</entry>
    <entry key="OptimFunctionUnsupported">コード生成を行うには、OPTIMFUNCTION 入力で指定された関数がコード生成でサポートされていなければなりません。関数 ''{0}'' はサポートされていません。</entry>
    <entry key="OptimsetgetFixedSizeFields">パラメーター ''{0}'' に指定された値は可変サイズです。コード生成では、OPTIMSET または OPTIMGET に渡される構造体のフィールドは固定サイズでなければなりません。</entry>
    <entry key="OptimgetConstName">コード生成では、OPTIMGET の ''name'' 引数は定数でなければなりません。指定された値は定数ではありません。</entry>
    <entry key="OptimNoProblemStruct">MATLAB コード生成では {0} の最初の入力引数の構造体はサポートされません。</entry>
    <entry key="OptimfunFcnOrStr">コード生成では、{0} の最初の引数は関数ハンドルまたは関数名でなければなりません。</entry>
    <entry key="OptimfunFixedSizeX">2 番目の引数は固定サイズでなければなりません。</entry>
    <entry key="OptimfunOptArg">3 番目の引数はオプション構造体または [] でなければなりません。</entry>
    <entry key="OptimfunCheckFunNaNVal">ユーザー関数は {0} での評価時に NaN を返しました。\n {1} は続行できません。</entry>
    <entry key="OptimfunCheckFunComplexVal">ユーザー関数は {0} での評価時に複素数値を返しました。\n {1} は続行できません。</entry>
    <entry key="OptimfunConstStr">コード生成では、関数名の入力は定数でなければなりません。</entry>
    <entry key="OptimfunRealX">コード生成では、{0} で開始点 ''x0'' が実数であることが必要です。</entry>
    <entry key="OptimFunScalarObjFcn">コード生成の {0} では、FUN は固定サイズのスカラーを返さなければなりません。これを解決するには、FUN の出力として ''y(1)'' を代入することを検討してください。</entry>
    <entry key="MustBeFiniteAndStrictlyIncreasing">X は有限で厳密に増加しなければなりません。</entry>
    <entry key="NDIMSError">ndims(Y)={0} が必要ですが ndims(Y)={1} が見つかりました。コード生成では、ndims(Y) を変更しないでください。</entry>
    <entry key="NDIMSSizeConstantLength">コード生成では、クラス ''{0}'' のメソッド ''size'' から返される値は定数長をもたなければなりません。</entry>
    <entry key="UnsupportedNaN">Y の NaN 値はコード生成に対してサポートされていません。</entry>
    <entry key="InvalidD">D は固定サイズで、非負のエントリの数値行ベクトルでなければなりません。</entry>
    <entry key="PPNumberMismatchCoeffs">入力が一致しません。</entry>
    <entry key="MKPPSizeMismatch">入力引数のサイズが一致しません。</entry>
    <entry key="InputStructNotPP">入力構造体は有効な PP 構造体ではありません。MKPP を使用して有効な PP 構造体を作成してください。</entry>
    <entry key="PPDataMustBeNumeric">pp.breaks フィールドと pp.coefs フィールドは数値でなければなりません。</entry>
    <entry key="PWCHSizeMismatch">入力引数のサイズが一致しません。</entry>
    <entry key="OrderOneRequiresColumnVector">区分的定数多項式を定義するには、2 番目の入力を coefs(:) にしてください。</entry>
    <entry key="OrderDimMustBeFixed">次数を決定する COEFS の次元は固定サイズでなければなりません。</entry>
    <entry key="SizeCoefsAndDNotConsistent">COEFS の N 次元の入力で、3 番目の入力 D は指定されなければならず、これは size(COEFS) の先頭要素と一致しなければなりません。</entry>
    <entry key="PWCHInvalidX">最初の引数 X は浮動小数点ベクトルでなければなりません。</entry>
    <entry key="MATLABPPNotSupported">MATLAB で作成された PP フォームは、PPVAL によって直接コード生成に使用することはできません。UNMKPP を使用してデータを抽出し、MKPP を使用して MATLAB Coder 互換の PP フォームを作成してください。</entry>
    <entry key="InputMustBeNumeric">{0} は数値でなければなりません。</entry>
    <entry key="interp2_minrhs">コード生成用の INTERP2 には少なくとも 5 つの入力が必要です。</entry>
    <entry key="interp3_minrhs">コード生成用の INTERP3 には少なくとも 7 つの入力が必要です。</entry>
    <entry key="interp2_invalidXYClass">入力 X、Y、Xq および Yq は ''double'' または ''single'' でなければなりません。</entry>
    <entry key="interp3_invalidXYZClass">入力 X、Y、Z、Xq、Yq および Zq は ''double'' または ''single'' でなければなりません。</entry>
    <entry key="interp2_nonrealXY">入力 X、Y、Xq および Yq は実数でなければなりません。</entry>
    <entry key="interp3_nonrealXYZ">入力 X、Y、Z、Xq、Yq および Zq は実数でなければなりません。</entry>
    <entry key="interp2_sizeXIandYIMustMatch">Arguments Xq and Yq must be the same size.</entry>
    <entry key="interp3_sizeXIYIandZIMustMatch">Arguments Xq, Yq, and Zq must be the same size.</entry>
    <entry key="interp2_ZMustBeFloat">入力 V は ''double'' または ''single'' でなければなりません。</entry>
    <entry key="interp3_VMustBeFloat">入力 V は ''double'' または ''single'' でなければなりません。</entry>
    <entry key="interp2_extrapvalNotReal">外挿値 extrapval は、V が複素数でない限り、複素数にすることはできません。</entry>
    <entry key="interp3_extrapvalNotReal">外挿値 extrapval は、V が複素数でない限り、複素数にすることはできません。</entry>
    <entry key="interpn_extrapvalNotReal">外挿値 extrapval は、V が複素数でない限り、複素数にすることはできません。</entry>
    <entry key="NonIncreasing">グリッドの値は厳密に増加しなければなりません。</entry>
    <entry key="NotEnoughPoints">内挿には、各次元に少なくとも 2 つのサンプル点が必要です。</entry>
    <entry key="interp2_mixedTypeGrid">グリッド座標は同じ型 (single または double) でなければなりません。</entry>
    <entry key="interp3_mixedTypeGrid">グリッド座標は同じ型 (single または double) でなければなりません。</entry>
    <entry key="interp2_classXIandYIMustMatch">入力 Xq および Yq はどちらも ''double'' であるか、どちらも ''single'' でなければなりません。</entry>
    <entry key="interp3_classXIYIandZIMustMatch">入力 Xq、Yq および Zq はいずれも ''double'' であるか、いずれも ''single'' でなければなりません。</entry>
    <entry key="interp2_unsupportedMethod">内挿法は、''cubic''、''linear''、''nearest''、''spline'' のいずれかでなければなりません。</entry>
    <entry key="interp3_unsupportedMethod">内挿法は、''cubic''、''linear''、''nearest''、''spline'' のいずれかでなければなりません。</entry>
    <entry key="interp3_gridToValuesSizeMismatch">V のサイズは X、Y および Z のサイズと同じでなければなりません。</entry>
    <entry key="interp2_VMustBe2D">V は行列でなければなりません。</entry>
    <entry key="interp3_VMustBe3D">V は 3 次元配列でなければなりません。</entry>
    <entry key="IsStrProp">コード生成では、'isstrprop' の 'ForceCellOutput' オプションをサポートしていません。</entry>
    <entry key="GridMustBeVectorsOrPlaid">グリッドの入力はベクトルであるか MESHGRID の出力でなければなりません。</entry>
    <entry key="ExtrapvalNotNumeric">外挿値は数値でなければなりません。</entry>
    <entry key="ExtrapvalRequired">出力の型が ''single'' または ''double'' でない場合は外挿値を指定しなければなりません</entry>
    <entry key="CubicGridMustBeUniform">''3 次法'' の場合はグリッドのデータを等間隔にしなければなりません。等間隔でないグリッドには ''スプライン法'' を使用してください。</entry>
    <entry key="MethodMustBeConstant">メソッドの入力は定数の文字ベクトルでなければなりません。</entry>
    <entry key="NMustBeANumericScalar">N は数値のスカラーでなければなりません。</entry>
    <entry key="AmbiguousPartialMatch">あいまいなプロパティ名 ''{0}'' ({1}) です。</entry>
    <entry key="NonNegativeRequiresReal">ソリューション コンポーネントを非負にするには、出力のデータ型が実数でなければなりません。y0 が実数であることと、ODE 関数が必ず実数の結果を返すことを確認します。</entry>
    <entry key="MassMustBeConstant">Mass オプションは定数の文字ベクトルまたは関数ハンドルでなければなりません。</entry>
    <entry key="RequiresNInputs">コード生成では、{0} には少なくとも {1,number,integer} 個の入力が必要です。これより少ない入力に対応するオプションはサポートされていません。</entry>
    <entry key="RequiresNOutputs">コード生成では、{0} には少なくとも {1,number,integer} 個の出力が必要です。これより少ない出力に対応するオプションはサポートされていません。</entry>
    <entry key="OdegetConstName">コード生成では、ODEGET の ''name'' 引数は定数でなければなりません。指定された値は定数ではありません。</entry>
    <entry key="OdeprintRequiresMATLAB">関数 ODEPRINT は MEX ターゲットの場合または Simulink で実行される場合にのみサポートされます。</entry>
    <entry key="RequiresAllConstantInputs">すべての入力は定数でなければなりません。</entry>
    <entry key="DynamicMemoryNeeded">イベントの位置には動的なメモリ割り当てが必要です。動的なメモリ割り当てを有効にするか、イベント関数を削除します。</entry>
    <entry key="InconsistentTypes">tspan および y0 入力と ODE 関数の出力は同じ型 (すべて single またはすべて double) でなければなりません。</entry>
    <entry key="UnsupportedSolver">ソルバー名は ''ode23'' または ''ode45'' でなければなりません。</entry>
    <entry key="UnsupportedODEFunction">コード生成では、最初の入力は関数ハンドルまたは文字ベクトルでなければなりません。</entry>
    <entry key="TspanMustBeReal">tspan 入力は実数でなければなりません。</entry>
    <entry key="RequiresVariableSizing">{0} のコードを生成するには可変サイズを有効にしなければなりません。</entry>
    <entry key="ODEInconsistentTypes">tspan および y0 入力と ODE 関数の出力は同じ型 (すべて single またはすべて double) でなければなりません。</entry>
    <entry key="FOMustReturnCol">ODE 関数の出力は列ベクトルでなければなりません。</entry>
    <entry key="SizeIC">y0 のサイズと ODE 関数の出力のサイズは一致しなければなりません。</entry>
    <entry key="SizeAbsTol">AbsTol はスカラー、または長さが {0,number,integer} のベクトルでなければなりません。</entry>
    <entry key="EventsRequireDynamicMemoryAllocation">{0} でイベント関数を使用するには、可変サイズと動的なメモリ割り当てを有効にしなければなりません。</entry>
    <entry key="VarsizeTspanHasLengthTwo">tspan 入力は可変サイズで、実行時に 2 要素の配列となりました。この場合、結果は MATLAB と一致しません。</entry>
    <entry key="NoPrintStats">出力統計の印刷はコード生成でサポートされていません。</entry>
    <entry key="ODEOptionMustBeConstant">オプション {0} はコード生成時に定数でなければなりません。</entry>
    <entry key="ODEJacobianMustBeMatrixOrFunction">ヤコビアンは、行列または関数ハンドルでなければなりません。</entry>
    <entry key="CellArraysNotSupported">コード生成では、''{0}'' へのセル配列入力はサポートされていません。</entry>
    <entry key="LeftEigenvectorsNotSupported">左固有ベクトルはコード生成でサポートされていません。</entry>
    <entry key="EigCholUnsupported">''chol'' オプションはコード生成でサポートされていません</entry>
    <entry key="EigNobalanceNotSupported">''nobalance'' オプションはコード生成でサポートされていません。</entry>
    <entry key="UnsupportedSpecialEmpty">入力が可変サイズ配列の場合、実行時に 0 行 0 列であることはできません。</entry>
    <entry key="UnsupportedNativeIntegerMean">コード生成では、整数型での ''native'' フラグはサポートされていません。</entry>
    <entry key="UnknownSumProdMeanFlag">この入力は、''double''、''native''、''default'' のいずれかでなければなりません。</entry>
    <entry key="TrailingStringInputMustBeConstant">文字列の入力の終わりは定数でなければなりません。</entry>
    <entry key="UnsupportedCharWithNative">''native'' フラグは文字入力ではサポートされていません。</entry>
    <entry key="InvalidOutputSel">odeset(''OutputSel'',idx) 内で指定されるすべてのインデックスは 1 &lt;= idx &lt;= neq の範囲の整数でなければなりません。</entry>
    <entry key="FieldNamesConstStringOpt">FIELDNAMES のオプション引数は定数の string または文字ベクトルでなければなりません。</entry>
    <entry key="FieldNamesStructOnly">コード生成では、FIELDNAMES への引数は構造体でなければなりません。</entry>
    <entry key="HalfWithUnsupportedType">関数 ''{0}'' では、片方の引数が半精度のデータ型である場合、もう一方の引数は half、double、または single でなければなりません。</entry>
    <entry key="HeterogeneousCellConstSize">コード生成では、入力がセル配列でその要素がすべて同じ型ではないときには、''{0}'' へのサイズ入力は定数でなければなりません。</entry>
    <entry key="ReshapeEmptyCellConst">コード生成では、''{0}'' への入力が空のセル配列のときには、サイズ入力は定数または [] でなければなりません。</entry>
    <entry key="NullAssignHomogeneousCell">コード生成では、要素がすべて同じ型ではないセル配列の要素を削除することはできません。</entry>
    <entry key="NullAssignNDCell">コード生成では、2 次元を超えるセル配列の要素を削除することはできません。また、N-D インデックスを使用してセル配列の要素を削除することもできません。</entry>
    <entry key="NullAssignSparse">コード生成では、スパース行列要素の空行列への代入はサポートされていません。要素を削除するには、0 の値を代入してください。</entry>
    <entry key="pcaInvalidAlgorithm">''{0}'' は ''Algorithm'' 引数に対して無効な値です。値は、''svd''、''eig'' または ''als'' でなければなりません。</entry>
    <entry key="pcaInvalidRows">''{0}'' は ''Rows'' 引数に対して無効な値です。値は、''complete''、''pairwise'' または ''all'' でなければなりません。</entry>
    <entry key="pcaWeightsMustBeReal">Weights および VariableWeights は実数でなければなりません。</entry>
    <entry key="pcaDisplayNotSupported">コード生成では、表示オプションを ''off'' に設定しなければなりません。</entry>
    <entry key="statgetConstName">コード生成では、''Name'' の入力は定数でなければなりません。</entry>
    <entry key="STATSFUNCTIONMustBeConstant">STATSFUNCTION 引数は、定数の関数ハンドル、定数の string、文字ベクトルのいずれかでなければなりません。</entry>
    <entry key="Struct2cellHomogeneousVarsize">コード生成では、STRUCT2CELL への入力が可変サイズの配列の場合、すべてのフィールドは同じ型でなければなりません。</entry>
    <entry key="Struct2cellHeterogeneousLimit">コード生成では、STRUCT2CELL への入力の構造体配列に異なるタイプのフィールドが含まれる場合、結果のセル配列に {0,number,integer} 個を超える要素を含めることはできません。この呼び出しは、{1,number,integer} 個の要素をもつセル配列を作成しようとします。</entry>
    <entry key="CoderdataNoEdit">Opening coderdata files using the edit command is not supported. Use coder.read to read coderdata files and coder.write to write them.</entry>
    <entry key="CoderReadBigEndian">coder.read はリトル エンディアンのターゲットでのみサポートされます。指定された HardwareImplementation はビッグ エンディアンです。</entry>
    <entry key="CoderReadBadTypeHeader">タイプ ヘッダーに {0} が含まれています。coder.read を使用してこの型のデータを読み取ることはサポートされていません。</entry>
    <entry key="CoderReadCouldNotOpen">coderdata ファイル ''{0}'' を開けません。</entry>
    <entry key="CoderReadCouldNotOpenTypeHeader">ファイル ''{0}'' を開くことができません。このファイルはコンパイル時の関数 coder.read の呼び出しの出力型を決定します。</entry>
    <entry key="CoderReadProblemReading">coderdata ファイルからの読み取り中に問題が発生しました。</entry>
    <entry key="CoderReadUnexpectedValue">coderdata ファイルに予期しない値があります。</entry>
    <entry key="CoderReadWrongHeader">coderdata ファイルに、必要なメタデータが含まれていませんでした。破損しているか、または coderdata ファイルではない可能性があります。''coder.write'' を使用して coderdata ファイルを作成してください。</entry>
    <entry key="CoderReadUnexpectedComplex">.coderdata ファイルに複素数値が含まれていますが、実数値が必要です。複素数値を読み取るには複素数型のヘッダーを使用しなければなりません</entry>
    <entry key="CoderReadWrongVersion">.coderdata ファイルはこのリリースの MATLAB Coder と互換性がありません。データをこのバージョンの MATLAB で再保存し、互換性のあるファイルを生成してください。</entry>
    <entry key="CoderReadTypeOnly">指定された .coderdata ファイルを読み取ることができません。タイプ ヘッダーのみを含み、データがないためです。coder.write を使用してこのファイルを作成したときに、引数 TypeHeaderOnly を true に設定していた可能性があります。</entry>
    <entry key="CoderReadMATFile">''coder.read'' only reads .coderdata files. To convert your .mat file to .coderdata format, run this command in MATLAB: coder.write(''myFile.coderdata'', load(''{0}''))</entry>
    <entry key="CoderReadWrongType">coder.read は .coderdata ファイルに ''{1}'' があることを想定していますが、代わりに ''{0}'' が見つかりました。このファイルを読み取るには、異なるタイプ ヘッダーを使用してください。指定された .coderdata ファイルとタイプ ヘッダーの互換性を確認するには、ファイルの書き込み時に名前と値のペア TypeHeader を指定してください。</entry>
    <entry key="CoderReadWrongNdims">.coderdata ファイルには {0} 次元の行列が含まれていますが、必要な次元数は {1} です。</entry>
    <entry key="FileSpecFilepathType">coder.FileSpec へのファイル名入力はすべて、文字の行ベクトルまたは string スカラーである必要があります</entry>
    <entry key="FileSpecMerge">指定された .coderdata ファイル内の型をマージできません。</entry>
    <entry key="FileSpecType">TypeInfo プロパティは coder.Type である必要があります</entry>
    <entry key="CoderWriteMustBeTypeIsh">TypeHeader の入力引数は coder.Type オブジェクトである必要があります</entry>
    <entry key="CoderWriteDiscardingConstant">TypeHeader 入力引数に coder.Constant オブジェクトが含まれてます。関連付けられている定数値が v の場合、coder.write はこの定数の型を、生成された .coderdata ファイルのタイプ ヘッダーの coder.typeof(v) により返される非定数の型に置き換えます。</entry>
    <entry key="CoderWriteDiscardingStructInfo">TypeHeader 入力引数に、関数 coder.read により無視される情報をもつ coder.StructType オブジェクトが含まれています。関数 coder.read は .coderdata ファイルから構造データを読み取る際に、タイプ ヘッダーの coder.StructType オブジェクトのフィールド名とフィールド タイプのみを使用します。coder.read は StructName、Extern、Alignment および HeaderFile プロパティを無視します。</entry>
    <entry key="CoderWriteEnum">The enumeration class ''{0}'' is not supported for coder.write. All enumerations must inherit from one of int8, uint8, int16, uint16, or int32.</entry>
    <entry key="CoderWriteNonASCII">.coderdata files cannot contain non-ASCII characters. The following non-ASCII characters were detected: ''{0}''. They were found in the string: ''{1}''.</entry>
    <entry key="CoderWriteObject">オブジェクトは coder.write でサポートされていません。</entry>
    <entry key="CoderWriteExtension">File name must end in '.coderdata' or omit file extension.</entry>
    <entry key="CoderWriteNotify">ファイル ''{0}'' を書き込みました。''coder.read'' を使用してこのファイルを読み取ることができます。</entry>
    <entry key="CoderWriteFileType">coder.write へのファイル名入力は、char 行ベクトルまたは string スカラーでなければなりません。</entry>
    <entry key="CoderWriteWrongHeader">''TypeHeader'' で指定されたタイプが、書き込むデータと一致しません。データと一致するように引数 ''TypeHeader'' を調整するか、ファイルの作成時に ''TypeHeaderOnly=true'' を使用してデータを無視してください。</entry>
    <entry key="CoderWriteNoName">ファイル名を空にすることはできません。</entry>
    <entry key="CoderReadFname">coder.read への最初の入力は、文字行ベクトルまたは string スカラーでなければなりません。</entry>
    <entry key="CoderReadNotConst">coder.read にファイル名のみを指定する場合、ファイル名は定数でなければなりません。非定数のファイル名から読み取るには、名前と値のペア ''TypeHeaderFrom'' を使用してください。</entry>
    <entry key="CoderReadTypeHeader">タイプ ヘッダー ファイル名は、定数の文字行ベクトルまたは string スカラーでなければなりません。</entry>
    <entry key="RepmatCellHeterogeneousLimit">コード生成では、REPMAT への入力が異種混合セル配列である場合、結果として得られるセル配列に {0,number,integer} 個を超える要素を含めることはできません。この呼び出しは、{1,number,integer} 個の要素をもつセル配列を作成しようとします。</entry>
    <entry key="StructConversionDimensionMismatchArray">入力 ''{0,number,integer}'' の配列の次元は入力 ''{1,number,integer}'' の配列の次元と一致するか、またはスカラーでなければなりません。</entry>
    <entry key="StrjoinRowVectorString">コード生成では、STRJOIN に渡されるすべての空でない文字ベクトルは行ベクトルでなければなりません。引数 {1,number,integer} の要素 {0,number,integer} は行ベクトルではありません。</entry>
    <entry key="strjust_inputMustBe2D">入力は 2 次元でなければなりません。</entry>
    <entry key="LAPACKNoStandaloneReplacement">関数 ''{0}'' にはスタンドアロンの置換がありません。coder.internal.use_lapack を使用して、この呼び出しに条件を付けてください。</entry>
    <entry key="LAPACKCallErrorInfo">LAPACK による ''{0}'' の呼び出しが失敗し、情報 {1,number,integer} が返されました。このエラーを再現できる場合は、MathWorks テクニカル サポートに連絡してください。</entry>
    <entry key="LAPACKOnlyComplex">''{0}'' の配列入力は複素数でなければなりません。</entry>
    <entry key="LAPACKOnlyReal">''{0}'' の配列入力は実数でなければなりません。</entry>
    <entry key="LAPACKXunormqrArgTypes">Q が実数かつ C が複素数である場合を除いて、''{0}'' の複数の入力は、すべて複素数、あるいはすべて実数に統一しなければなりません。</entry>
    <entry key="StrcmpCharMatrix">コード生成で、{0} の入力の一方がセル配列で、もう一方が文字配列である場合、文字配列の最初の次元は固定長 1 でなければなりません。複数の文字ベクトルを比較するには、文字配列ではなく、文字の行ベクトルからなるセル配列を渡します。</entry>
    <entry key="UnsupBesNegNonIntNu">コード生成では、{0} への負の NU 入力は整数値でなければなりません。</entry>
    <entry key="invalidCovNormOption">コード生成では、2 番目の入力の固定サイズのスカラー値は常に正規化オプションとして解釈されます。これは 0 または 1 でなければなりません。</entry>
    <entry key="FlagMustBeConst">フラグ入力は定数の文字ベクトルでなければなりません。</entry>
    <entry key="InterpnUnsupportedMethod">コード生成の場合、INTERPN は ''linear''、''nearest''、''spline'' および ''cubic'' メソッドのみをサポートします。</entry>
    <entry key="gInterpNdUnsupportedMethod">For code generation, griddedInterpolant supports the ''makima'' method only for 1-dimensional interpolation.</entry>
    <entry key="QueryPointsMustBeReal">クエリ点は実数でなければなりません。</entry>
    <entry key="GridPointsMustBeReal">グリッド点は実数でなければなりません。</entry>
    <entry key="OutOfTargetRange">値が、サポートされているターゲットの型の範囲 {0,number,integer} ～ {1,number,integer} 内ではありません。</entry>
    <entry key="OutOfTargetRangeNoBounds">値が、サポートされているターゲットの型の範囲内ではありません。</entry>
    <entry key="StringClassNotSupported">文字列のクラスはコード生成でサポートされていません。</entry>
    <entry key="SparseNotSupported">コード生成では、''{0}'' に対してスパース行列はサポートされていません。</entry>
    <entry key="ValidateattributesBadClassList">クラスは文字ベクトル、string、または文字ベクトルの cell 配列である必要があります。</entry>
    <entry key="ValidateattributesNeedConstClasses">Classes は定数の文字ベクトルのセル配列でなければなりません。</entry>
    <entry key="ValidateattributesNeedFunctionName">コード生成では、4 番目の引数は文字ベクトルとして指定された関数名でなければなりません。</entry>
    <entry key="ValidateattributesNeedConstFunctionName">関数名は定数でなければなりません。</entry>
    <entry key="ValidateattributesNeedConstVariableName">変数名は定数でなければなりません。</entry>
    <entry key="ValidateattributesNeedConstAttributes">属性は定数でなければなりません。</entry>
    <entry key="ValidateattributesBadVariableName">5 番目の引数は文字ベクトルとして指定された入力変数名でなければなりません。</entry>
    <entry key="ValidateattributesNeedConstArgumentPosition">入力引数の位置は定数でなければなりません。</entry>
    <entry key="Validateattributesexpected2D">{0} は 2 次元にする必要があります。</entry>
    <entry key="Validateattributesexpected3D">{0} は 3 次元にする必要があります。</entry>
    <entry key="ValidateattributesexpectedSquare">{0} を正方行列にする必要があります。</entry>
    <entry key="ValidateattributesexpectedDiag">{0} は対角行列にする必要があります。</entry>
    <entry key="ValidateattributesexpectedScalar">{0} はスカラーにする必要があります。</entry>
    <entry key="ValidateattributesexpectedScalartext">{0} は string スカラーまたは文字ベクトルにする必要があります。</entry>
    <entry key="ValidateattributesexpectedVector">{0} はベクトルにする必要があります。</entry>
    <entry key="ValidateattributesexpectedRow">{0} は行ベクトルにする必要があります。</entry>
    <entry key="ValidateattributesexpectedColumn">{0} は列ベクトルにする必要があります。</entry>
    <entry key="ValidateattributesexpectedNonempty">{0} を空にはできません。</entry>
    <entry key="ValidateattributesexpectedNonsparse">{0} は非スパースにする必要があります。</entry>
    <entry key="ValidateattributesexpectedNonZero">{0} は非ゼロでなければなりません。</entry>
    <entry key="ValidateattributesexpectedBinary">{0} はバイナリにする必要があります。</entry>
    <entry key="ValidateattributesexpectedInteger">{0} は整数値にする必要があります。</entry>
    <entry key="ValidateattributesexpectedReal">{0} は実数にする必要があります。</entry>
    <entry key="ValidateattributesexpectedIncreasing">{0} は増加する値にする必要があります。</entry>
    <entry key="ValidateattributesexpectedNonIncreasing">{0} は増加していない値にする必要があります。</entry>
    <entry key="ValidateattributesexpectedDecreasing">{0} は減少する値にする必要があります。</entry>
    <entry key="ValidateattributesexpectedNonDecreasing">{0} は減少していない値にする必要があります。</entry>
    <entry key="ValidateattributesexpectedOdd">{0} は奇数にする必要があります。</entry>
    <entry key="ValidateattributesexpectedEven">{0} は偶数にする必要があります。</entry>
    <entry key="ValidateattributesexpectedPositive">{0} は正にする必要があります。</entry>
    <entry key="ValidateattributesexpectedNonnegative">{0} は非負にする必要があります。</entry>
    <entry key="ValidateattributesexpectedFinite">{0} は有限にする必要があります。</entry>
    <entry key="ValidateattributesexpectedNonNaN">{0} は NaN 以外にする必要があります。</entry>
    <entry key="ValidateattributesincorrectSize">{0} は必要なサイズではありません。</entry>
    <entry key="ValidateattributesBadNumel">引数 numel の後には非負の実数のスカラー整数を指定しなければなりません。</entry>
    <entry key="ValidateattributesincorrectNumel">{0} は、要素数が {1, number, integer} と等しい配列にする必要があります。</entry>
    <entry key="ValidateattributesBadNrows">引数 nrows の後には非負の実数のスカラー整数を指定しなければなりません。</entry>
    <entry key="ValidateattributesincorrectNumrows">{0} は、行数が {1, number, integer} と等しい配列にする必要があります。</entry>
    <entry key="ValidateattributesBadNcols">引数 ncols の後には非負の実数のスカラー整数を指定しなければなりません。</entry>
    <entry key="ValidateattributesincorrectNumcols">{0} は、列数が {1, number, integer} と等しい配列にする必要があります。</entry>
    <entry key="ValidateattributesBadNDims">引数 ''ndims'' の後に 1 より大きい実数の整数値を指定しなければなりません。</entry>
    <entry key="ValidateattributesincorrectNDims">{0} は、次元数が {1, number, integer} と等しい配列にする必要があります。</entry>
    <entry key="ValidatestringInvalidStringList">VALID_STRINGS は string の cell 配列でなければなりません。</entry>
    <entry key="ValidatestringNeedConstStrings">VALID_STRINGS は定数の string の cell 配列でなければなりません。</entry>
    <entry key="ValidatestringNeedFunctionName">コード生成では、3 番目の入力引数は関数名の string でなければなりません。</entry>
    <entry key="ValidatestringNeedConstFunctionName">関数名は定数でなければなりません。</entry>
    <entry key="ValidatestringBadFunctionName">関数名は文字ベクトルでなければなりません。</entry>
    <entry key="ValidatestringNeedConstVariableName">VARIABLE_NAME は定数でなければなりません。</entry>
    <entry key="ValidatestringBadVariableName">VARIABLE_NAME は string または文字ベクトルでなければなりません。</entry>
    <entry key="ValidatestringNeedConstArgumentPosition">ARGUMENT_POSITION は定数でなければなりません。</entry>
    <entry key="ValidatestringBadArgumentPosition">ARGUMENT_POSITION は正の整数でなければなりません。</entry>
    <entry key="ValidatestringAmbiguousStringChoice">{0} は次のいずれかの string と一致する必要があります: {1}。入力{2} は複数の有効な string と一致しました。</entry>
    <entry key="ValidatestringUnrecognizedStringChoice">{0} は次のいずれかの string と一致する必要があります: {1}。入力{2} は有効な string のいずれとも一致しません。</entry>
    <entry key="ValidatestringUnrecogonizedStringChoiceExpectedChar">{0} は次のいずれかの string と一致する必要があります: {1}。入力 {2} は有効な string のいずれとも一致しません。入力は次のいずれかの型である必要があります: char、string。実際の型は {3} でした。</entry>
    <entry key="ValidatestringUnrecognizedStringChoiceExpectedRow">{0} は次のいずれかの string と一致する必要があります: {1}。入力 {2} は有効な string のいずれとも一致しません。入力は行ベクトルにする必要があります。</entry>
    <entry key="RepelemUnsupportedND">コード生成では、要素配列は 2 次元でなければなりません。</entry>
    <entry key="TooManyFilesOpen">コード生成では、開いているファイルの最大数は {0, number, integer} です。</entry>
    <entry key="SparseNumelTooBig">要素数が表現可能な最大値を超えています。</entry>
    <entry key="SparseNzmaxTooSmall">非ゼロの数は、sparse の最初の 3 つの引数で指定された要素数と少なくとも同じ大きさでなければなりません。</entry>
    <entry key="SparseNeedsMalloc">スパース行列を作成するには、動的メモリ割り当てを有効にしなければなりません。</entry>
    <entry key="SparseC99">TargetLangStandard が ''{0}'' です。コード生成では、スパース行列の因数分解関数と mldivide には C99 以降が必要です。生成されたコードは一部のスパース入力についてコンパイルされない場合があります。</entry>
    <entry key="SparseDoubleBackslash">コード生成では、バックスラッシュが使用されたスパース行列の入力は double でなければなりません。</entry>
    <entry key="SparseCholOption">コード生成では、スパース行列でサポートされる chol 構文オプションは 'upper' および 'lower' のみです。</entry>
    <entry key="SparseCholSyntax">コード生成では、スパース行列での 'chol' は 1 つの出力引数のみをサポートし、'vector' オプションは許可されません。</entry>
    <entry key="scalarSizeDims">次元引数 ''{0}'' がスカラーではありません。複数の次元を別々の引数として size に指定する場合、これらの引数はすべてスカラーでなければなりません。</entry>
    <entry key="StringUnsupportedType">コード生成では、入力引数は string スカラー、文字の行ベクトル、または単一文字の行ベクトルを含むセル配列でなければなりません。</entry>
    <entry key="StringMustBeRowVector">コード生成では、入力文字配列は行ベクトルでなければなりません。</entry>
    <entry key="StringMustBeRowVectorInCell">コード生成では、入力セル配列内の文字配列は行ベクトルでなければなりません。</entry>
    <entry key="StringMustBeScalarCellArray">コード生成では、入力セル配列は単一文字の行ベクトルを含まなければなりません。</entry>
    <entry key="StringUnrecognizedParameterName">パラメーター名は ''{0}'' でなければなりません。</entry>
    <entry key="StringParameterNameMustBeRightType">パラメーター名は string スカラーまたは文字ベクトルでなければなりません。</entry>
    <entry key="StringParameterMustHaveAssociatedValue">入力引数の数が正しくありません。各パラメーター名の後には対応する値が必要です。</entry>
    <entry key="StringValueArgMustBeScalar">''{0}'' 値は論理スカラーでなければなりません。</entry>
    <entry key="StringValueArgMustBeChar">''{0}'' の値は ''{1}'' または ''{2}'' でなければなりません。</entry>
    <entry key="StringIndexMustBePositiveInteger">位置の数値は正の整数スカラーでなければなりません。</entry>
    <entry key="StringIndexMustNotExceedLength">位置の数値が入力 string の長さを超えています。</entry>
    <entry key="StringOptionMustBeOneOf">オプションは ''left''、''right''、または ''both'' であるか、厳密に 1 文字でなければなりません。</entry>
    <entry key="StringOptionMustBeOneOfSideOnly">オプションは ''left''、''right''、または ''both'' でなければなりません。</entry>
    <entry key="StringStripCharOrString">取り除く文字は string スカラーまたは文字ベクトルでなければなりません。</entry>
    <entry key="StringStripCharacterSize">取り除く文字は厳密に 1 文字でなければなりません。</entry>
    <entry key="StringStartPositionAfterEndPosition">開始位置の数値は終了位置の数値より前になければなりません。</entry>
    <entry key="SscanfTwoOutputs">出力引数が多すぎます。コード生成では、sscanf の出力を、書式設定された配列と、その配列に正常に読み込まれた要素の数に限定してください。 </entry>
    <entry key="SscanfInvalidInput">最初の引数はテキスト スカラーでなければなりません。</entry>
    <entry key="TooManyElementsToIndex">現在のインデックス クラスでは、任意の配列における要素の最大数が {0,number,integer} に制限されています。</entry>
    <entry key="EnumMustBeScalar">コード生成では、''{0}'' への列挙型入力はコンパイル時のスカラーでなければなりません。</entry>
    <entry key="MustBeCharOrString">入力番号 {0} は、string スカラー、文字ベクトル、文字ベクトルを 1 つ含む cell 配列のいずれかでなければなりません。</entry>
    <entry key="MustBeCharCellArrayOrString">入力番号 {0} は、string スカラー、文字ベクトル、文字ベクトルのセル配列のいずれかでなければなりません。</entry>
    <entry key="StringScalarsOnly">コード生成では、''{1}'' への {0} 入力はコンパイル時のスカラーでなければなりません。</entry>
    <entry key="SprintfCallFailed">C sprintf の呼び出しは {0,number,integer} のステータスで失敗しました。</entry>
    <entry key="StringNumericIntegerInf">コード生成では、string 配列に変換される数値は整数値であるか、または無限大でなければなりません。</entry>
    <entry key="StringNumericNoNaN">コード生成では、string 配列に変換される数値は NaN 以外でなければなりません。</entry>
    <entry key="StringNoMissing">コード生成では string 内の欠損値をサポートしません。</entry>
    <entry key="StringReturnMissing">関数 {0} により欠損 string 値を返すことが試みられましたが、これはコード生成ではサポートされていません。</entry>
    <entry key="SamplePointsNotSupported">コード生成では {0} において ''SamplePoints'' はサポートされません。</entry>
    <entry key="SamplePointsMustBeFloat">コード生成では、''SamplePoints'' は double または single でなければなりません。</entry>
    <entry key="AmbiguousName">名前は次の値のいずれか 1 つと一致する必要があります:\n\n{1}\n\n入力 ''{0}'' は複数の有効な値と一致しています。</entry>
    <entry key="InvalidName">名前は次の値のいずれか 1 つと一致する必要があります:\n\n{1}\n\n入力 ''{0}'' は有効な値のいずれとも一致しません。</entry>
    <entry key="BadIgnoreNulls">IgnoreNulls の値は true または false でなければなりません。</entry>
    <entry key="BadSupportOverrides">SupportOverrides の値は true または false でなければなりません。</entry>
    <entry key="InvalidMixedOptions">選択したオプションは互換性がありません。</entry>
    <entry key="InvalidSparseDimensions">関数 ''sparse'' への配列引数は 2 次元でなければなりません。</entry>
    <entry key="PWSHostTargetIntegerSize">書式指定子 ''%{0}'' により提供されるデータは printf、fprintf などの呼び出しにおいて、ターゲット ハードウェア上では C/C++ の ''{1}'' 型として扱われ、ホスト ハードウェア上では ''{2}'' 型として扱われます。移植可能なワード サイズの機能が有効である場合、データはホスト ハードウェアとターゲット ハードウェアの両方で同様に解釈されなければなりません。入力を浮動小数点型に、またはターゲット ハードウェアとホスト ハードウェアの両方で同様に解釈される MATLAB 整数型にキャストしてください。整数型の ''char''、''short''、''int''、および符号なしのそれらの型はすべて ''int'' として解釈されます。''long'' 型、''long long'' 型および符号なしのそれらの型は明確に扱われます。</entry>
    <entry key="InvalidDimInput">次元の入力は入力データの次元数を超えることはできません。</entry>
    <entry key="SortedBufferFull">バッファーがいっぱいです。値は挿入されませんでした。</entry>
    <entry key="RandLikeConst">コード生成では、''like'' 引数は定数の文字ベクトルまたは string スカラーでなければなりません。</entry>
    <entry key="FFTWPlanMethodMustBeConst">fftw の計画用メソッドは定数でなければなりません。</entry>
    <entry key="FFTWLargeRankWithoutMalloc">動的メモリ割り当てが無効になっている場合、{0,number,integer} (fft/ifft)、{1,number,integer} (fft2/ifft2)、または {2,number,integer} (fftn/ifftn) より大きい次元数をもつ入力配列の FFT の計算に FFTW を使用することはサポートされていません。動的メモリ割り当てを有効にしてから、次元数の大きい入力配列を処理する FFT 関数のコードを生成してください。</entry>
    <entry key="NarginNargoutMismatch">出力引数の数は入力引数の数と一致しなければなりません。</entry>
    <entry key="DataVariablesNotSupported">コード生成は、DataVariables 入力をサポートしません。</entry>
    <entry key="OptionStringsMustBeConstant">string スカラーと文字ベクトルの入力は定数でなければなりません。</entry>
    <entry key="mustBeMember">値は指定されたセットのメンバーでなければなりません。</entry>
    <entry key="SparseConcatenation2D">スパース行列と 2 より大きい次元をもつ配列の連結はサポートされていません。</entry>
    <entry key="ConcatenationDimensionMismatch">連結に対する入力行列 {1,number,integer} の次元 {0,number,integer} が前のオペランドの対応するサイズ {2,number,integer} と一致しません。</entry>
    <entry key="SparseConcatenationUnsupportedType">{0} 型のスパース行列はサポートされていません。</entry>
    <entry key="SparseSanityCheckPropError">内部エラー: スパース行列のプロパティ ''{0}'' は {1} でなければなりません。</entry>
    <entry key="SparseSanityCheckZeros">{1}(=nzmax) のインデックス {0} のデータ ベクトルで 0 が検出されました。インデックス nnz ({2}) の後で 0 は使用できません。</entry>
    <entry key="StackPopEmpty">空のスタックからポップすることはできません。</entry>
    <entry key="StackPeekEmpty">空のスタックをピークすることはできません。</entry>
    <entry key="StackPushLimit">最大容量に達している固定サイズのスタックにプッシュすることはできません。</entry>
    <entry key="SparseConstructor2D">スパース コンストラクターへの入力は 2 次元でなければなりません。</entry>
    <entry key="SparseNot">含まれる非ゼロ要素が多すぎるため、''~'' の結果を表現できません。</entry>
    <entry key="SparseNegativeSize">スパース行列のサイズは、非負の整数でなければなりません。</entry>
    <entry key="SparseMaxSize">コード生成では、スパース行列のサイズが intmax(''int32'') とターゲット ハードウェアで指定されている次の ''int'' の最大値より小さくなければなりません: {0,number,integer}。</entry>
    <entry key="ShapeParameterMustBeConstant">形状の引数は定数でなければなりません。</entry>
    <entry key="SparseAssertTrailing">関数 ''assert'' の条件引数のみをスパースにできます。</entry>
    <entry key="SparseColonOverflow">線形インデックス演算を実行できません。結果の行列が表現可能な最大サイズを超えています。</entry>
    <entry key="SparseFuncAlmostFull">この演算の結果は、表現可能な配列の最大サイズを超える可能性があります。</entry>
    <entry key="SparseTooBig">結果のスパース行列のサイズが列の最大数 intmax を超えています。</entry>
    <entry key="SparseCatTooBig">連結の結果が {0} の表現可能な最大数 intmax を超えています。</entry>
    <entry key="SparseLogicalIndexingNotSupported">コード生成では、logical 配列をもつスパース行列へのインデックス付けはサポートされません。FIND を使用して、logical 値を数値に変換することを検討してください。</entry>
    <entry key="FunctionDoesNotSupportDatatype">The function {0} does not support {1} inputs for code generation.</entry>
    <entry key="MinMaxFullDim">コード生成は、''{0}'' への DIM 引数のスパース行列入力をサポートしていません。</entry>
    <entry key="RankDefVarSizeRequired">ランクが欠落した入力が検出されました。この問題を解決するには、可変サイズを有効にしてください。</entry>
    <entry key="Num2CellDim">コード生成は、num2cell に対する ''dim'' 引数をサポートしていません。</entry>
    <entry key="Str2NumNotSupported">コード生成は STR2NUM をサポートしていません。代わりに STR2DOUBLE を使用してください。</entry>
    <entry key="ClearNoEffect">''clear'' はコード生成中に無視されます。</entry>
    <entry key="CovAmbiguousMLEArg">2 番目の入力が Y データまたは正規化入力のいずれであるかを判断できません。 </entry>
    <entry key="SparseOptionMustBeConstant">6 番目の入力 ISSPARSE は、定数でなければなりません。</entry>
    <entry key="ArrayfunUnequalSize">前の入力は次元 {1,number,integer} でのサイズが {0,number,integer} でした。入力 {2,number,integer} のサイズは {3,number,integer} です。</entry>
    <entry key="UniformOutputMustBeTrue">コード生成では、UniformOutput が true でなければなりません。</entry>
    <entry key="FullDims">コード生成では、次元引数は非スパースでなければなりません。</entry>
    <entry key="DimMustBeConstant">コード生成では、次元引数は定数でなければなりません。</entry>
    <entry key="NotAScalarOutput">コード生成では、arrayfun に指定された関数は、それへの入力が固定サイズのスカラーの場合、固定サイズのスカラー出力を返さなければなりません。出力 {0,number,integer} はこの要件を満たしていません。</entry>
    <entry key="QRUpdateChangesComplexity">コード生成では、いずれかの更新ベクトルが複素数の場合、qrupdate への Q 入力と R 入力の両方が複素数でなければなりません。</entry>
    <entry key="QRUpdateChangesClass">コード生成では、いずれかの更新ベクトルが single の場合、qrupdate への Q 入力と R 入力の両方が single でなければなりません。</entry>
    <entry key="QRUpdateRequiresSameClass">コード生成では、qrupdate への Q 入力と R 入力は、ともに single であるかともに double である同じクラスに属していなければなりません。</entry>
    <entry key="QRUpdateRequiresSameComplexity">コード生成では、qrupdate への Q 入力と R 入力は、ともに実数であるか、ともに複素数でなければなりません。</entry>
    <entry key="InputsMustBe2D">入力は 2 次元でなければなりません。</entry>
    <entry key="InvalidTolInput">tol 入力は非負の浮動小数点スカラーでなければなりません。</entry>
    <entry key="InvalidColumnSortingVector">列の並べ替えの入力はベクトルでなければなりません。</entry>
    <entry key="InputMustBe2DFloat">入力 {0} は single 行列または double 行列でなければなりません。</entry>
    <entry key="FillValueRequired">コード生成では、''fun'' が cell 配列を返す場合、accumarray への fillval 入力が必要です。</entry>
    <entry key="InconsistentCellArrays">コード生成では、fun の出力と fillval 入力の型が一致していなければなりません。</entry>
    <entry key="PausePARFOR">MEX コードの生成またはシミュレーションでは、関数 PAUSE は parfor ループ内でサポートされていません。</entry>
    <entry key="CoderTimeCallFailed">''{0}'' の呼び出しが戻り値 {1,number,integer} で失敗しました。</entry>
    <entry key="CellInputNotSupported">コード生成では、''{0}'' への cell 配列入力はサポートされていません。</entry>
    <entry key="SizeSubs2MustBeConstant">コード生成では、size(SUBS,2) は定数でなければなりません。</entry>
    <entry key="SizeSZMustBeConstant">コード生成では、SZ 入力は固定サイズの行ベクトルでなければなりません。</entry>
    <entry key="CoderInternalRandstreamNoGlobalStream">コード生成では、グローバルの RandStream の設定および取得がサポートされていません。</entry>
    <entry key="TocInputType">コード生成の場合、toc は uint64 の入力をサポートしていません。前回の tic の呼び出しの出力を toc への入力として渡してください。</entry>
    <entry key="TypeCastDataTypeMustBeConstant">コード生成では、データ型入力は定数でなければなりません。</entry>
    <entry key="SVDParametersMustBeConstant">内部 SVD 関数の job パラメーターは定数でなければなりません。</entry>
    <entry key="BuildConfigCacheNoConfig">現在の BuildConfig は設定されていません。</entry>
    <entry key="BuildConfigCacheInconsitentConfig">BuildConfig のキャッシュを矛盾した BuildConfig で更新しようとしています。</entry>
    <entry key="DimCannotBeHalf">コード生成では、DIM 引数は half にできません。</entry>
    <entry key="XzgetrsUnimplemented">LAPACK のルーチン xGETRS の呼び出しサイトには、参照実装の未実装機能が必要です。現在は、ia0=1、lda=size(A,1)、ib0=1 および ldb=size(B,1) のみがサポートされています。</entry>
    <entry key="FunctionNotSupportedForStandalone">関数 ''{0}'' はスタンドアロン コード生成に対してサポートされていません。</entry>
    <entry key="IschangeVarSizeNeeded">メソッドが ''linear'' である場合、ischange には 2 番目と 3 番目の出力を計算するための可変サイズ サポートが必要です。</entry>
    <entry key="IschangeTableNotSupported">コード生成では、table 入力がサポートされていません。</entry>
    <entry key="ListCannotBeExpanded">リストはサイズが静的であり、いっぱいになっているため、新たな要素を追加できません。</entry>
    <entry key="FixedCapPropertyMustBeConstant">FixedCapacity の値が指定されている場合、その値は定数で、 true または false のいずれかでなければなりません。</entry>
    <entry key="FixedCapListRequiresInitCap">固定容量のリスト オブジェクトを構成するために、初期容量を指定しなければなりません。</entry>
    <entry key="DataVarsMustBeConstant">コード生成では、''DataVariables'' に関連付けられる値が定数でなければなりません。</entry>
    <entry key="TablesNotSupported">コード生成では、''{0}'' への table 入力はサポートされていません。</entry>
    <entry key="SupportPackageNotInstalledCRL">''{0}'' がインストールされていません。コード置換が生成コードで無効になっています。</entry>
    <entry key="ConvhullUnsupportedDim">コード生成では、convhull は 2 次元入力のみをサポートしています。</entry>
    <entry key="MustBeSameClass">{0} と {1} は同じクラスに属していなければなりません。</entry>
    <entry key="IfComplexBThenComplexA">{1} が複素数の場合、{0} も複素数でなければなりません。</entry>
    <entry key="MustBeUpperTriangular">{0} は上三角行列でなければなりません。</entry>
    <entry key="EigOptionRequiresLAPACK">オプション ''{0}'' をスタンドアロン コード生成で使用するには、LAPACK ライブラリを構成する必要があります。LAPACK コールバック クラスを指定してください。</entry>
    <entry key="LeftEigVecRequiresLAPACK">左固有ベクトルをスタンドアロン コード生成で計算するには、LAPACK ライブラリを構成する必要があります。LAPACK コールバック クラスを指定してください。 </entry>
    <entry key="PcgInvalidInput">引数は倍精度行列または関数ハンドルでなければなりません。</entry>
    <entry key="PcgRHSInvalidType">右辺は非スパースの倍精度列ベクトルでなければなりません。</entry>
    <entry key="PcgInitGuessInvalidType">初期推定は非スパースの倍精度列ベクトルでなければなりません。</entry>
    <entry key="PcgNonSparsePreconditioner">前処理行列は非スパースでなければなりません。</entry>
    <entry key="PcgVarSizeInputEmpty">pcg への可変サイズ入力は、実行時に空になってはなりません。</entry>
    <entry key="PcgInvalidTolerance">入力の許容誤差は実数のスカラーでなければなりません。</entry>
    <entry key="PcgInvalidMaxit">入力の maxit は実数のスカラーでなければなりません。</entry>
    <entry key="MustNotBeNaN">コード生成では、{0} が NaN であってはなりません。</entry>
    <entry key="BoundedStr2FuncUnexpectedInput">関数名 ''{0}'' が、サポートされている関数のリストにありません。</entry>
    <entry key="BoundedStr2FuncNamesNotCellString">2 番目の引数 (関数名) は文字ベクトルの cell 配列でなければなりません。</entry>
    <entry key="BoundedStr2FuncNamesNotConstant">2 番目の引数 (関数名) は定数でなければなりません。</entry>
    <entry key="ParameterSuppliedTwice">パラメーター ''{0}'' が複数回定義されています。</entry>
    <entry key="FirstArgumentMustBeLessThan">最初の引数は {0} より小さくなければなりません。</entry>
    <entry key="OptionInputsMustBeConstant">コード生成では、{0} へのオプション入力は定数でなければなりません。</entry>
    <entry key="SetEnvPARFOR">関数 setenv は、parfor ループ内ではサポートされていません。</entry>
    <entry key="InvalidOrNonConstantNaNFlag">Invalid option combination. Option must be ''omitnan'' or ''includenan'', and for code generation it must be a constant.</entry>
    <entry key="LimitedExpansionWithTarget">コード生成ターゲットが ''{1}'' の場合、関数 ''{0}'' は固定サイズで 1 行 1 列の入力の拡張のみをサポートします。入力のサイズが異なっている場合、その 1 つはスカラーでなければなりません。</entry>
    <entry key="QhullInternalError">Qhull の呼び出し中に内部エラーが発生しました。</entry>
    <entry key="ParallelNotSupported">コード生成では、並列領域において関数 ''{0}'' はサポートされません。</entry>
    <entry key="IntegralWayPointsTypeMismatch">コード生成では、ウェイポイントが ''single'' である場合、少なくとも 1 つの終了点が ''single'' である必要があります。</entry>
    <entry key="IntegralArrayValuedMustBeConstant">オプション ''ArrayValued'' は定数である必要があります。</entry>
    <entry key="IntegralOutputSizeOfFunMustBeConstant">FUN は、コード生成中に固定サイズの配列を返す必要があります。</entry>
    <entry key="IntegralTooManyInitialIntervals">Integration cannot start as the number of intervals exceeds the limit allowed by static memory allocation. Consider enabling dynamic memory allocation.</entry>
    <entry key="IntegralSparseNotSupported">Code generation for integral does not support function handles that return sparse matrix outputs.</entry>
    <entry key="NullInvalidTolerance"> コード生成の場合、null への 2 番目の入力は実数の数値スカラーの許容誤差である必要があります。</entry>
    <entry key="InterpftDimMustBeConst">DIM は定数でなければなりません。</entry>
    <entry key="InterpftNyMustBePositiveInteger"> 入力 ''ny'' は正の整数スカラーである必要があります。</entry>
    <entry key="EncodingInvalidEncoding">Invalid encoding name.</entry>
    <entry key="EncodingConversionError">Unable to convert string from UTF-16 to the MATLAB code generation character encoding ''{0}''.</entry>
    <entry key="EncodingSizeConsistencyError">Conversion of string from UTF-16 to MATLAB code generation character encoding (''{0}'') changes the number of characters. This behavior is not supported for code generation.</entry>
    <entry key="EncodingUnknown">An unknown error occurred while changing the encoding of a string.</entry>
    <entry key="EncodingVarsize">文字列 ''{0}'' を UTF-8 エンコードに変換したことで、文字列のバイト数が変更されました。可変サイズ配列のサポートが無効になっている場合、この動作はコード生成でサポートされていません。可変サイズ配列のサポートを有効にするか (動的メモリ割り当ては無効にしてください)、127 を超える文字値をもつ文字列のエンコードは避けてください。</entry>
    <entry key="Integral2maxRectanglesFail">四角形の数が、静的メモリ割り当てで許可されている制限を超えました。メッシュの調整を向上させられるよう、動的メモリ割り当てを有効にすることを検討してください。結果は大域的な誤差のテストをパスしませんでした。</entry>
    <entry key="Integral2maxRectanglesPass">四角形の数が、静的メモリ割り当てで許可されている制限を超えました。メッシュの調整を向上させられるよう、動的メモリ割り当てを有効にすることを検討してください。結果は大域的な誤差のテストをパスしました。</entry>
    <entry key="Integral3UnsupportedClass">入力関数は ''double'' または ''single'' の値を返さなければなりません。''{0}'' が見つかりました。</entry>
    <entry key="Integral3InvalidXMin">XMIN は浮動小数点のスカラーでなければなりません。</entry>
    <entry key="Integral3InvalidXMax">XMAX は浮動小数点のスカラーでなければなりません。</entry>
    <entry key="PolySimplifyNotSupported">多角形状に対して 'simplify' を true に設定することは、コード生成ではサポートされていません。</entry>
    <entry key="WarnPolyDefaultSimplifyFalse">コード生成では、'simplify' フラグは既定で 'false' に設定されます。多角形状に対して 'simplify' を true に設定することは、コード生成ではサポートされていません。</entry>
    <entry key="PolyVertDotAssgnFail">Code generation does not allow setting vertices using dot assign.</entry>
    <entry key="PolyUnsupportedMethod">Function ''{0}'' in class polyshape is not supported for code generation.</entry>
    <entry key="EmptyInteroplantObjectErr">Creation of empty griddedInterpolant objects is not supported for code generation.</entry>
    <entry key="gridInterp1Donly">Sample points must be 1-dimensional for code generation.</entry>
    <entry key="Next1Donly">Sample points must be 1-dimensional for ''next'' method.</entry>
    <entry key="Pchip1Donly">Sample points must be 1-dimensional for ''pchip'' method.</entry>
    <entry key="Previous1Donly">Sample points must be 1-dimensional for ''previous'' method.</entry>
    <entry key="CannotUseSetOnMethod">コード生成では、プロパティの set メソッドを使用して ''Method'' と ''ExtrapolationMethod'' に値を代入することはできません。''Method'' と ''ExtrapolationMethod'' のプロパティを設定するには、値をコンストラクターに渡してください。</entry>
    <entry key="griddedInterpolantCannotBeEntryPoint">コード生成では、griddedInterpolant クラスのオブジェクトを入力引数としてエントリポイント関数に渡すことはサポートされていません。</entry>
    <entry key="MessageStringNotSupported">コード生成ではメッセージ クラスの string メソッドはサポートされません。</entry>
    <entry key="MessageGetStringNotSupported">コード生成ではメッセージ クラスの getString メソッドはサポートされません。</entry>
    <entry key="IssueWarningsWithNoOutputs">コード生成では、警告を表示する場合に関数 ''warning'' への出力はサポートされません。</entry>
    <entry key="FirstInputMustBeAConstant">''{0}'' への最初の入力は定数でなければなりません。</entry>
    <entry key="CdInputMustBeEmpty">入力を使用した ''cd'' のコード生成はサポートされていません。</entry>
    <entry key="FuncNeedsDynamic">To generate code, in configuration settings, enable dynamic memory allocation and support for variable-size arrays/signals. To perform Simulink simulation, enable dynamic memory allocation only. Alternately, remove the function ''{0}''.</entry>
    <entry key="mustBeFile">入力パスはファイルである必要があります。</entry>
    <entry key="mustBeFolder">入力パスはフォルダーである必要があります。</entry>
    <entry key="PolyCPP03">TargetLangStandard が ''{0}'' です。コード生成では、polyshape クラスには C++11 以降が必要です。一部のオブジェクト関数の生成コードは、コンパイルされない場合があります。</entry>
    <entry key="CurrentDirDeleted">現在のディレクトリにアクセスできないか、ディレクトリが存在しません。</entry>
    <entry key="AppendStringCellArray">''append'' へのいずれかのセル入力が非スカラーの場合、いずれの入力も string にすることはできません。コード生成では、出力として string 配列はサポートされていません。代わりに char() を使用して string を文字配列に変換してください。</entry>
    <entry key="Cell2StructConstFields">''cell2struct'' のコード生成では、''fields'' 入力は定数でなければなりません。 </entry>
    <entry key="Cell2StructdimNotConst">異種混合 cell 入力の次元の引数は定数でなければなりません。</entry>
    <entry key="Cell2StructHeterogeneousLimit">''cell2struct'' のコード生成では、cell2struct への入力 cell 配列が異種混合の場合、cell 配列に {0,number,integer} を超える要素を含めることはできません。</entry>
    <entry key="Cell2StructUnsupportedSpecialEmpty">入力が可変サイズの場合、実行時に空にすることはできません。</entry>
    <entry key="Cell2MatCellInput">''cell2mat'' への入力は cell でなければなりません。</entry>
    <entry key="PolyIndexError">境界インデックス要素は、正の整数でなければなりません。</entry>
    <entry key="mustBeUnderlyingType">Value must have one of the specified underlying types.</entry>
    <entry key="mustBeUnderlyingTypeInput">引数 ''ClassNames'' は、空でない string、文字ベクトル、または文字ベクトルの cell 配列でなければなりません。</entry>
    <entry key="ClockTwoOutUnsupported">2 つの出力引数をもつ ''clock' では、コード生成はサポートされていません。</entry>
    <entry key="Cell2MatSparseUnboundInput">スパース配列を含む非有界または可変サイズの cell をもつ ''cell2mat'' は、コード生成でサポートされていません。</entry>
    <entry key="Cell2MatNdUnboundInput">次元が 2 を超える非有界または可変サイズの cell をもつ ''cell2mat'' は、コード生成でサポートされていません。</entry>
    <entry key="assigninOnlyBaseSupported">C/C++ コード生成では、入力ワークスペースの値は ''base'' でなければなりません。</entry>
    <entry key="AssigninPARFOR">C/C++ コード生成では、parfor ループ内での関数 ''assignin'' はサポートされません。</entry>
    <entry key="FilepartsMustBeChar">入力は、文字の行ベクトル、string スカラー、または cellstr でなければなりません。</entry>
    <entry key="CellfunNoErrorHandler">''ErrorHandler'' が指定されている場合、''cellfun'' のコード生成はサポートされません。</entry>
    <entry key="CellfunAtleastOneInput">''cellfun'' の関数シグネチャには少なくとも 1 つの入力 cell 配列が必要です。</entry>
    <entry key="CellfunExpectCell">入力 #{0} は cell 配列にする必要がありますが、代わりに {1} が見つかりました。</entry>
    <entry key="CellfunStructFieldClassMismatch">出力 {2} のインデックス {1} のフィールド ''{0}'' のデータ型が一致しません ({3} と {4})。</entry>
    <entry key="CellfunNonConstInput">C/C++ コード生成の場合、''UniformOutput'' オプションの値は定数でなければなりません。</entry>
    <entry key="CellfunOutputMxArray">''cellfun'' の出力 (#{0}) を外部関数から返すことはできません。</entry>
    <entry key="iofunURLInputsNotSupported">Standalone code generation does not support URL inputs.</entry>
    <entry key="iofunNonEmptyInput">すべての引数は空でない文字ベクトルまたは string スカラーでなければなりません。</entry>
    <entry key="iofunWritePermissionError">Cannot write to destination. Use the 'f' option to attempt an override.</entry>
    <entry key="iofunPermissionError">Permission denied error. One or more permissions missing from source or destination.</entry>
    <entry key="iofunFilePathTooLong">The filename or extension is too long.</entry>
    <entry key="iofunResourceNotFound">The specified location was not found.</entry>
    <entry key="iofunDirNotEmpty">The specified path is a non-empty folder.</entry>
    <entry key="iofunResourceIsDir">Destination is not a folder. When moving a source folder, the destination must also be a folder.</entry>
    <entry key="iofunErrorInPlatformAPI">Error occurred while performing move or copy operation.</entry>
    <entry key="iofunWildcardOpsNotSupported">Wildcard operations are not supported for standalone code generation of movefile and copyfile.</entry>
    <entry key="iofunCrossVolumeDirMoveNotSupported">Standalone code generation does not supporting moving folder across volumes.</entry>
    <entry key="iofunForceFlagMustBeCompileTimeConstant">スタンドアロンのコード生成では、オプションのフラグ ''f'' はコンパイル時の定数でなければなりません。</entry>
    <entry key="FunctionNeedsNonFiniteSupport">コードを生成するには、構成オプション 'SupportNonFinite' を true に設定するか、関数 ''{0}'' を削除します。</entry>
    <entry key="SystemMissingValue">環境変数名に続く値が必要です。'-echo' フラグは、スタンドアロン コード生成のコンパイル時の定数でなければなりません。そうでない場合は、環境変数の名前として扱われます。</entry>
    <entry key="coderPadResizeFixedSizeM">M は固定サイズでなければなりません。</entry>
    <entry key="coderPadResizeNeedNonEmptyInput">{0} 入力を空にすることはできません。</entry>
    <entry key="coderPadResizeDefaultFillValNotSupportedForStruct">struct 入力では、既定の埋め込み値を使用することはサポートされていません。代わりに適切な埋め込み値を指定してください。</entry>
    <entry key="coderPadResizeTrimTabularUnknownNumberOfVariables"> コード生成中は、出力 {0} 内の変数の数は定数でなければなりません。</entry>
    <entry key="coderPadResizeTimeTableWithUserData">{0} のコード生成は、ユーザー データを含む表形式入力をサポートしていません。</entry>
    <entry key="coderPadResizeNeedConstantString">''{0}'' は定数の文字ベクトルまたは string スカラーでなければなりません。</entry>
    <entry key="dictionaryConstFormat">関数 entries の format オプションは定数でなければなりません。</entry>
    <entry key="dictionaryTableEmpty">コード生成では、関数 entries は空の table を返すことができません。</entry>
    <entry key="dictionaryEQ">コード生成は、ディクショナリを引数にもつ関数 isequal をサポートしていません。ディクショナリを比較するには、関数 entries の出力を使用してください。</entry>
    <entry key="dictionaryEQN">コード生成は、ディクショナリを引数にもつ関数 isequaln をサポートしていません。ディクショナリを比較するには、関数 entries の出力を使用してください。</entry>
    <entry key="dictionaryStringArrayLookup">Code generation does not support non-scalar arrays of objects, including strings. Return scalar objects only.</entry>
    <entry key="dictionaryEmptyCell">For code generation, cell inputs to the dictionary function cannot be both constant and empty.</entry>
    <entry key="dictionaryCharRow">コード生成では、関数 dictionary へのすべての文字入力が行ベクトルでなければなりません。</entry>
    <entry key="dictionaryParfor">コード生成では、parfor ループ内でディクショナリを作成または変更することはサポートされていません。</entry>
    <entry key="dictionaryCharRowIsKey">コード生成では、isKey 関数へのすべての文字入力が行ベクトルでなければなりません。</entry>
    <entry key="dictionaryTableEntries">To generate code for the entries function when the key or value is an object, string, or enumeration, specify struct format using the "struct" argument.</entry>
    <entry key="dictionaryCellEntries">Code generation does not support the "cell" argument to the entries function when keys and values are of different types.</entry>
    <entry key="dictionaryEntriesFormat">'format' 引数は 'cell'、'struct'、または 'table' でなければなりません。</entry>
    <entry key="dictionaryUnconfiguredEntries">型が未設定のキーおよび値のあるディクショナリからエントリを返すことはできません。ディクショナリにエントリを追加してください。</entry>
    <entry key="dictionaryUnconfiguredKeys">型が未設定のキーおよび値のあるディクショナリからキーを返すことはできません。ディクショナリにエントリを追加してください。</entry>
    <entry key="dictionaryUnconfiguredValues">型が未設定のキーおよび値のあるディクショナリから値を返すことはできません。ディクショナリにエントリを追加してください。</entry>
    <entry key="dictionaryUnconfiguredTypes">型が未設定のキーおよび値のあるディクショナリから型を返すことはできません。ディクショナリにエントリを追加してください。</entry>
    <entry key="dictionaryUnconfiguredRedirect">未構成のディクショナリは、エントリポイント関数の入力、あるいは coder.typeof、外部関数呼び出しまたは coder.load の引数としてサポートされていません。</entry>
    <entry key="dictionaryCastFailedLookup">コード ジェネレーターで {0} 型の変数を {1} 型に変換できないため、クラス {1} のキーをもつディクショナリで、クラス {0} のキーをルックアップできません。</entry>
    <entry key="dictionaryCastFailedRemove">コード ジェネレーターで {0} 型の変数を {1} 型に変換できないため、クラス {1} のキーをもつディクショナリからクラス {0} のキーを削除できません。</entry>
    <entry key="dictionaryCastFailedInsert">コード ジェネレーターで {0} 型の変数を {1} 型に変換できないため、クラス {0} のキーまたは値をもつエントリを、クラス {1} のキーまたは値をもつディクショナリに挿入できません。</entry>
    <entry key="dictionaryStringArrayCastLookup">string のキーをもつディクショナリで、クラス {0} のキーをルックアップできません。コード生成では、string のキーを使用するディクショナリで検索されるためには、キーはクラス {0} の文字の行ベクトルかスカラーでなければなりません。</entry>
    <entry key="dictionaryStringArrayCastRemove">string のキーを使用するディクショナリから、クラス {0} のキーを削除できません。コード生成では、string のキーをもつディクショナリから削除できるようにするためには、キーがクラス {0} の文字の行ベクトルまたはスカラーでなければなりません。</entry>
    <entry key="dictionaryStringArrayCastInsert">クラス {0} のキーまたは値をもつエントリを、string のキーまたは値をもつディクショナリに挿入できません。コード生成では、string のキーまたは値をもつディクショナリに挿入されるキーや値は、クラス {0} の文字の行ベクトルかスカラーでなければなりません。</entry>
    <entry key="dictionaryComplexLookup">コード生成では、実数の数値キーをもつディクショナリで複素数のキーを検索することはサポートされていません。虚数部をもつキーを使用して、複素数のディクショナリを構築してください。</entry>
    <entry key="dictionaryComplexRemove">コード生成では、実数の数値キーを使用するディクショナリから複素数のキーを削除することはサポートされていません。虚数部をもつキーを使用して、複素数のディクショナリを構築してください。</entry>
    <entry key="dictionaryComplexInsert">コード生成では、複素数のキーまたは値を実数の数値ディクショナリに挿入することはサポートされていません。虚数部をもつキーまたは値を使用して、複素数のディクショナリを構築してください。</entry>
    <entry key="dictionaryKeysArg">''{0}'' 型のキーの配列を返せません。これらのキーを cell 配列として返すには、"cell" を指定してください。</entry>
    <entry key="dictionaryKeysArgCell">引数が認識されません。使用する場合、keys 関数の 2 番目の引数は定数文字列 "cell" でなければなりません。</entry>
    <entry key="dictionaryValuesArg">''{0}'' 型の値の配列を返せません。これらの値を cell 配列として返すには、"cell" を指定してください。</entry>
    <entry key="dictionaryValuesArgCell">引数が認識されません。使用する場合、values 関数の 2 番目の引数は定数文字列 "cell" でなければなりません。</entry>
    <entry key="dictionaryBadKeytype">Invalid key type. For code generation, key must be a string, enumeration, logical, cell, structure, or non-fi numeric value. Aggregate types can only contain other valid types.</entry>
    <entry key="dictionaryAggregateNonscalar">コード生成では、関数 dictionary へのすべての {0} の入力がスカラーでなければなりません。</entry>
    <entry key="dictionaryFunctionHandle">コード生成は、ディクショナリのキーまたは値として関数ハンドルをサポートしていません。</entry>
    <entry key="dictionaryCategorical">コード生成では、categorical キーまたは値をサポートしていません。</entry>
    <entry key="dictionaryHetKeys">コード生成では、cell 配列のすべてのキーが同じパターンのデータ型を含まなければなりません。</entry>
    <entry key="dictionaryHetValues">コード生成では、cell 配列のすべての値が同じパターンのデータ型を含まなければなりません。</entry>
    <entry key="dictionaryEnum">コード生成では、ディクショナリのキーとして、またはキー内で使用されるすべての列挙は int8、uint8、int16、uint16、int32 または uint32 の基本型をもたなければなりません。</entry>
    <entry key="dictionaryTypeScalar">すべてのディクショナリのキーと値はスカラーでなければなりません。</entry>
    <entry key="dictionaryNoCurly">ディクショナリでは中かっこによるインデックス付け '{}' はサポートされません。</entry>
    <entry key="dictionaryNeedsMalloc">ディクショナリを作成できません。動的メモリ割り当てを有効化してください。</entry>
    <entry key="KeyValueDimsMustMatch">キーと値のサイズが一致しません ([{0}x{1}] と [{2}x{3}])。キーと値の次元を一致させるか、値をスカラーにしなければなりません。</entry>
    <entry key="configureDictionaryConst">コード生成では、configureDictionary のすべての入力は定数でなければなりません。</entry>
    <entry key="configureDictionaryText">configureDictionary への入力はすべて、文字の行ベクトルまたは string スカラーでなければなりません</entry>
    <entry key="configureDictionaryUnsupportedType">コード生成では、configureDictionary は ''{0}'' 型の入力をサポートしません。このタイプのディクショナリを作成するには、''{0}'' 型の要素を未構成のディクショナリに挿入するか、''{0}'' 型の入力をもつ関数 dictionary を呼び出してください。</entry>
    <entry key="pagelsqminnormInvalidTolerance">許容誤差は、すべてのページに対して非負のスカラーとして指定するか、または入力行列 A の各ページに異なる許容誤差を指定する、サイズ [1 1 size(A,3:ndims(A)] の非負の許容誤差の配列として指定してください。</entry>
    <entry key="lsNotSupportedUseSystem">''ls'' はコード生成でサポートされていません。''system'' 関数を使用してオペレーティング システムを呼び出し、代わりに ''ls'' コマンドを実行してください。</entry>
    <entry key="partialParamParsertRuntimeEmpty">オプション''{0}'' は空にすることはできません。''{1}'' に渡される struct 入力の可変サイズのフィールドは、実行時に空の配列まで削減してはなりません。</entry>
    <entry key="indexIntRelop_unrecognizedRelop">The first argument of ''coder.internal.indexIntRelop'' must be one of the following: ''eq'', ''neq'', ''lt'', ''le'', ''gt'' or ''ge''.</entry>
    <entry key="indexIntRelop_neitherIsIndexInt">Neither of the operands to coder.internal.indexIntRelop is ''coder.internal.indexInt''. Expected one of them to be an indexInt.</entry>
    <entry key="indexIntRelop_bothAreIndexInt">Both of the operands to coder.internal.indexIntRelop are ''coder.internal.indexInt''. This routine relies on built-in support for indexInt to indexInt comparisons.</entry>
    <entry key="indexIntRelop_nonBinaryFP">Non-binary floating-point types are not supported in coder.internal.indexIntRelop. Found base = {0,number,integer} for class ''{1}''.</entry>
    <entry key="testErrorId">{0}: {1,number,integer}: {2,number,integer}: {3,number,integer}: {4,number,integer}: {5,number,integer}: {6,number,integer}</entry>
    <entry key="TestMsgWithPercent">This is just a test message that contains an fprintf format specifier: %f to verify that we don't format the text passed to it.</entry>
  </message>
</rsccat>
