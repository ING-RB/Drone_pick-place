<?xml version="1.0" encoding="UTF-8"?>
<!--Copyright 2025 The MathWorks, Inc.-->

<rsccat xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.0" locale="ja_JP" product="Coder" xsi:noNamespaceSchemaLocation="../../resources/schema/msgcat.xsd">
  <message>
    <entry key="MEXReportName">コード生成レポートを生成</entry>
    <entry key="MEXReportToolTip">HTML レポートに生成されたコードを記録します。</entry>
    <entry key="MEXLaunchReportName">レポートを自動的に起動</entry>
    <entry key="MEXLaunchReportToolTip">コード生成が終了した後に HTML レポートを自動的に開きます。</entry>
    <entry key="MEXDebugBuildName">デバッグ ビルドを有効化</entry>
    <entry key="MEXDebugBuildToolTip">デバッグ モードで生成コードをコンパイルしてください。</entry>
    <entry key="MEXEchoName">セミコロンなしの式をエコー</entry>
    <entry key="MEXEchoToolTip">セミコロンなしの式をエコー。</entry>
    <entry key="MEXBuildProName">コード生成オプション</entry>
    <entry key="MEXPageName">自動 C-MEX 生成</entry>
    <entry key="RTWAdvancedTabName">詳細設定</entry>
    <entry key="CompilerOptionsTabName">MEX コンフィギュレーション</entry>
    <entry key="inlineThresholdName">インラインしきい値:</entry>
    <entry key="inlineThresholdToolTip">インラインする関数の最大サイズを指定してください</entry>
    <entry key="inlineThresholdMaxName">最大インラインしきい値:</entry>
    <entry key="inlineThresholdMaxToolTip">インライン後の関数の最大サイズを指定してください</entry>
    <entry key="inlineStackLimitName">インライン スタック制限:</entry>
    <entry key="inlineStackLimitToolTip">インラインされた関数のスタック サイズ制限を指定してください</entry>
    <entry key="stackUsageMaxName">最大スタック使用量:</entry>
    <entry key="stackUsageMaxToolTip">関数ごとの最大のスタック使用量を指定してください</entry>
    <entry key="constFoldTimeoutName">定数畳み込みタイムアウト:</entry>
    <entry key="constFoldTimeoutToolTip">定数畳み込みにより実行される指示の最大数を指定してください</entry>
    <entry key="inlineName">関数インライン化コントロール</entry>
    <entry key="miscName">その他の変換コントロール</entry>
    <entry key="generalName">一般</entry>
    <entry key="SatOnIntOverflowName">整数オーバーフローで飽和</entry>
    <entry key="SatOnIntOverflowToolTip">整数オーバーフローまたはアンダーフローを検出するために、生成されたコード内にさらにチェックを追加してください。</entry>
    <entry key="VariableSizingName">可変サイズを有効化</entry>
    <entry key="VariableSizingToolTip">可変サイズの配列のサポートを有効化</entry>
    <entry key="DynamicMemoryName">動的メモリ割り当て</entry>
    <entry key="DynamicMemoryTooltip">動的メモリ割り当てを使用する場合を選択します</entry>
    <entry key="DynamicMemoryOff">行わない</entry>
    <entry key="DynamicMemoryVariableSizeArrays">可変サイズの配列の場合</entry>
    <entry key="DynamicMemoryUnknownUpperBoundsOnly">不明の上限をもつ可変サイズの配列の場合のみ</entry>
    <entry key="DynamicMemoryAllVariableSizeArrays">すべての可変サイズの配列の場合</entry>
    <entry key="DynamicMemoryThresholdName">動的メモリ割り当てしきい値 (バイト単位)</entry>
    <entry key="DynamicMemoryThresholdTooltip">データがここで指定したバイト数を超える場合、動的メモリ割り当てを使用します</entry>
    <entry key="RuntimeCheckName">実行時チェック</entry>
    <entry key="RuntimeCheckIntegrityName">メモリの整合性を確保</entry>
    <entry key="RuntimeCheckIntegrityToolTip">生成コード内のメモリの整合性の違反を検出し、診断で実行を停止します。\nこれをチェックしないと、違反は予期しない動作をもたらす可能性があります。範囲外の配列に\nアクセスしていることがメモリの整合性の違反の原因として考えられます。</entry>
    <entry key="RuntimeCheckExtrinsicName">外部の呼び出し</entry>
    <entry key="RuntimeCheckExtrinsicToolTip">MATLAB 外での呼び出しを許可します。無効の場合、外部の呼び出しを削除しようとします。</entry>
    <entry key="RuntimeCheckCtrlcName">応答性を確保</entry>
    <entry key="RuntimeCheckCtrlcToolTip">Ctrl-C の中断に対して定期的にチェックを行い、グラフィックスを更新します。これらを\nチェックしなければ、長時間の実行を終了するのに MATLAB 自体を終了させなければ\nならなくなります。</entry>
    <entry key="RTWGeneralTabName">一般</entry>
    <entry key="RTWDescriptionName">説明:</entry>
    <entry key="RTWTargetLangName">言語:</entry>
    <entry key="RTWTargetLangToolTip">コード生成言語の選択</entry>
    <entry key="RTWCompOptsName">コンパイラ最適化レベル:</entry>
    <entry key="RTWCompOptsToolTip">コンパイラ最適化レベルを選択</entry>
    <entry key="RTWCompOptsLevelOff">最適化オフ (高速にビルド)</entry>
    <entry key="RTWCompOptsLevelOn">最適化オン (高速に実行)</entry>
    <entry key="RTWCompOptsLevelCustom">カスタム</entry>
    <entry key="RTWCustomCompOptsName">カスタム コンパイラ最適化フラグ:</entry>
    <entry key="RTWCustomCompOptsToolTip">コンパイラ最適化フラグを指定。例. -O2</entry>
    <entry key="RTWMakeCommName">Make コマンド:</entry>
    <entry key="RTWMakeCommToolTip">追加引数をもつ make コマンド。</entry>
    <entry key="RTWGenMakefileName">makefile の生成</entry>
    <entry key="RTWGenMakefileToolTip">生成コードをコンパイルするために makefile の生成を有効にします。</entry>
    <entry key="RTWTempMakeName">テンプレート makefile:</entry>
    <entry key="RTWTempMakeToolTip">コード生成ターゲットをビルドするための現在のテンプレート makefile。</entry>
    <entry key="RTWBuildToolConfigName">設定:</entry>
    <entry key="RTWBuildToolConfigToolTip">生成コードの作成に使用する設定を選択します。</entry>
    <entry key="RTWGenerateMainName">メイン関数の生成</entry>
    <entry key="RTWGenerateMainToolTip">"メイン" 関数の作成を選択します。\n選択しない場合は、"メイン" 関数を指定しなければなりません。</entry>
    <entry key="RTWBuildToolCustomizeName">カスタマイズ...</entry>
    <entry key="RTWBuildToolCustomizeToolTip">[XMakefile ユーザー設定] ダイアログを起動します。</entry>
    <entry key="RTWGenCodeName">コード生成のみ</entry>
    <entry key="RTWGenCodeToolTip">コードの生成時に makefile を実行しません。</entry>
    <entry key="RTWCodeGenOptionsName">コード生成オプション</entry>
    <entry key="RTWFilePartitionName">生成されたファイルの分割法:</entry>
    <entry key="RTWFilePartitionToolTip">生成されたファイルの分割法を選択してください</entry>
    <entry key="RTWFilePartitionMapMFileToCFile">MATLAB ファイルごとに 1 つのファイルを生成</entry>
    <entry key="RTWFilePartitionSingleFile">すべての関数を 1 つのファイルに生成</entry>
    <entry key="RTWDebugTabName">デバッグ</entry>
    <entry key="RTWVerboseName">詳細なビルド</entry>
    <entry key="RTWVerboseToolTip">コード生成の段階とコンパイラの出力を表示します。</entry>
    <entry key="RTWTargetSelName">ターゲットの選択</entry>
    <entry key="RTWBuildProName">ビルド プロセス</entry>
    <entry key="RTWMakefileConfigName">makefile の設定</entry>
    <entry key="RTWRtwDebugName">ビルド プロセス</entry>
    <entry key="RTWReportTabName">レポート</entry>
    <entry key="RTWCommentTabName">コメント</entry>
    <entry key="genCommentGroupName">すべてのコントロール</entry>
    <entry key="genCommentName">コメントを含める</entry>
    <entry key="genCommentToolTip">生成コードにコメントを含める</entry>
    <entry key="autoGenName">自動生成されるコメント</entry>
    <entry key="MATLABSourceCommentsName">コメントとして MATLAB ソース コードを含める</entry>
    <entry key="MATLABSourceCommentLineNumbersName">コメントを示す MATLAB ソース コード</entry>
    <entry key="MATLABSourceCommentsToolTip">MATLAB ソース コードを生成コード内にコメントとして挿入します。</entry>
    <entry key="customComments">カスタム コメント</entry>
    <entry key="MATLABFcnDescName">MATLAB ユーザー コメント</entry>
    <entry key="MATLABFcnDescToolTip">MATLAB 関数の説明 (ヘルプ テキスト) を生成コード内に関数バナーの\n一部として挿入します。</entry>
    <entry key="RTWReportGenerateReportName">コード生成レポートを作成</entry>
    <entry key="RTWReportGenerateReportToolTip">コード生成レポート内の生成した C コードをドキュメンテーション化します。</entry>
    <entry key="RTWReportLaunchReportName">レポートを自動的に起動</entry>
    <entry key="RTWReportLaunchReportToolTip">ビルド プロセスが完了した後に自動的にコード生成レポートを開きます。</entry>
    <entry key="srcCodeName">ソース ファイル:</entry>
    <entry key="srcCodeToolTip">生成された &lt;project&gt;.c のソース ファイルの一番上に表示するためのコードを入力します。</entry>
    <entry key="headerCodeName">ヘッダー ファイル:</entry>
    <entry key="headerCodeToolTip">生成された &lt;project&gt;.h のソース ファイルの一番上に表示するためのコードを入力します。</entry>
    <entry key="includePathName">インクルード ディレクトリ:</entry>
    <entry key="includePathToolTip">生成されたコードのコンパイル中に、インクルード パスを追加するために\nインクルード ディレクトリのスペース区切りのリストを入力します。</entry>
    <entry key="sourceFileName">ソース ファイル:</entry>
    <entry key="sourceFileToolTip">生成されたコードをコンパイルしてリンクするためにソース ファイルの\nスペース区切りのリストを入力します。</entry>
    <entry key="libraryName">ライブラリ:</entry>
    <entry key="libraryToolTip">生成されたコードにリンクするためにスタティック ライブラリの\nスペース区切りのリストを入力します。</entry>
    <entry key="initializerName">初期化関数:</entry>
    <entry key="initializerToolTip">生成されたプロジェクトの初期化関数に表示するためのコードを入力します。</entry>
    <entry key="terminatorName">終了関数:</entry>
    <entry key="terminatorToolTip">生成されたプロジェクトの終了関数に表示するためのコードを入力します。</entry>
    <entry key="customCodeListToolTip">右側のパネルで編集するために項目の 1 つを選択してください。</entry>
    <entry key="customCodeListSourceFile">ソース ファイル</entry>
    <entry key="customCodeListHeaderFile">ヘッダー ファイル</entry>
    <entry key="customCodeListInitializeFunction">初期化関数</entry>
    <entry key="customCodeListTerminateFunction">終了関数</entry>
    <entry key="customIncludeListIncludeDirectories">インクルード ディレクトリ</entry>
    <entry key="customIncludeListSourceFiles">ソース ファイル</entry>
    <entry key="customIncludeListLibraries">ライブラリ</entry>
    <entry key="customCodeName">生成時に含めるカスタム C コード:</entry>
    <entry key="customIncludeName">追加で含めるリスト:</entry>
    <entry key="customCodeTabName">カスタム コード</entry>
    <entry key="sfsGroupName">識別子の書式の制御</entry>
    <entry key="sfsglobalvarName">グローバル変数:</entry>
    <entry key="sfsglobalvarToolTip">グローバル変数のシンボル形式のルールです。ルールは有効な C の識別子の\n文字とこれらのマクロを含みます:\n$M - マングル\n$R - ルートのモデル名\n$N - 識別されるオブジェクト名</entry>
    <entry key="sfsLocalVarName">ローカルな一時変数:</entry>
    <entry key="sfsLocalVarToolTip">ローカルな一時変数のシンボル形式のルールです。ルールは有効な C の識別子の\n文字とこれらのマクロを含みます:\n$M - マングル\n$R - ルートのモデル名\n$N - 識別されるオブジェクト名</entry>
    <entry key="sfsConstMacroName">定数のマクロ:</entry>
    <entry key="sfsConstMacroToolTip">定数のマクロのシンボル形式のルールです。ルールは有効な C の識別子の\n文字とこれらのマクロを含みます:\n$M - マングル\n$R - ルートのモデル名\n$N - 識別されるオブジェクト名</entry>
    <entry key="sfsGlobalTypeName">グローバルなタイプ:</entry>
    <entry key="sfsGlobalTypeToolTip">グローバルなタイプのシンボル形式のルールです。ルールは有効な C の識別子の\n文字とこれらのマクロを含みます:\n$M - マングル\n$R - ルートのモデル名\n$N - 識別されるオブジェクト名</entry>
    <entry key="sfsGlobalFieldName">グローバルなタイプのフィールド名:</entry>
    <entry key="sfsGlobalFieldToolTip">グローバルなタイプのフィールド名のシンボル形式のルールです。ルールは有効な C の識別子の\n文字とこれらのマクロを含みます:\n$M - マングル\n$R - ルートのモデル名\n$N - 識別されるオブジェクト名</entry>
    <entry key="sfsLocalFunctionName">ローカル関数:</entry>
    <entry key="sfsLocalFunctionToolTip">ローカル関数に対するシンボル形式のルールです。ルールは有効な C の識別子の\n文字とこれらのマクロを含みます:\n$M - マングル\n$R - ルートのモデル名\n$N - 識別されるオブジェクト名</entry>
    <entry key="sfsEMXArrayName">EMX 配列:</entry>
    <entry key="sfsEMXArrayToolTip">EMX 配列に対するシンボル形式のルールです。ルールは有効な C の識別子の\n文字とこれらのマクロを含みます:\n$M - マングル\n$R - ルートのモデル名\n$N - 識別されるオブジェクト名</entry>
    <entry key="maxIdName">識別子の最大の長さ:</entry>
    <entry key="maxIdToolTip">変数 typedef と関数名に対する識別子の最大の長さです。</entry>
    <entry key="reservedName">予約名:</entry>
    <entry key="reservedToolTip">生成コードから排除する予約名のスペース区切りのリストを\n入力してください。</entry>
    <entry key="autoIdName">自動生成される識別子の命名規則</entry>
    <entry key="reservedNames">予約名</entry>
    <entry key="symbols">シンボル</entry>
    <entry key="hardwarePageName">ハードウェア実行</entry>
    <entry key="hardwareGroup1Name">組み込みハードウェア (シミュレーションとコード生成)</entry>
    <entry key="hardwareGroup2Name">エミュレーション ハードウェア (コード生成のみ)</entry>
    <entry key="hardwareGroup3Name">最大 Atomic サイズ</entry>
    <entry key="hardwareWProdVendorLblName">デバイス ベンダー:</entry>
    <entry key="hardwareWProdTypeLblName">デバイス タイプ:</entry>
    <entry key="ProdHWToolTip">事前定義されたハードウェア デバイスを選択しマイクロプロセッサの C 言語の制約を指定するか、\nマイクロプロセッサがリストされていない場合は "{0}" を選択してください。\n制約がない場合は "{1}" を選択してください。</entry>
    <entry key="TargetHWToolTip">事前定義されたハードウェア デバイスを選択しマイクロプロセッサの C 言語の制約を指定するか、\nマイクロプロセッサがリストされていない場合は "{0}" を選択してください。現在の MATLAB ホスト マシンをターゲットにする場合は\n"{1}" を選択してください。</entry>
    <entry key="hardwareNumOfBitsName">ビット数</entry>
    <entry key="hardwareNumBitsName">ハードウェアのワード サイズです。</entry>
    <entry key="hardwareCharToolTip">C の char 型を表すのに使用されるビット数です。</entry>
    <entry key="hardwareShortToolTip">C の short 型を表すのに使用されるビット数です。</entry>
    <entry key="hardwareIntToolTip">C の int 型を表すのに使用されるビット数です。</entry>
    <entry key="hardwareLongToolTip">C の long 型を表すのに使用されるビット数です。</entry>
    <entry key="hardwareFloatToolTip">C の float 型を表すのに使用されるビット数です (情報のみで、設定可能ではありません)。</entry>
    <entry key="hardwareDoubleToolTip">C の double 型を表すのに使用されるビット数です (情報のみで、設定可能ではありません)。</entry>
    <entry key="hardwarePointerToolTip">C のポインター型を表すのに使用されるビット数です (情報のみで、設定可能ではありません)。</entry>
    <entry key="hardwareSizeTToolTip">C の size_t 型を表すのに使用されるビット数です (情報のみで、設定可能ではありません)。</entry>
    <entry key="hardwarePtrDiffTToolTip">C の ptrdiff_t ポインター型を表すために使用されるビット数です (情報のみで、設定可能ではありません)。</entry>
    <entry key="hardwareProdBitPerPointerName">ポインター:   </entry>
    <entry key="hardwareIntegerAtomicLabelName">整数:   </entry>
    <entry key="hardwareFloatAtomicLabelName">浮動小数点:   </entry>
    <entry key="hardwareLargestAtomicIntegerToolTip">アトミックに読み込みおよび保存が可能な最大整数データ型を指定します。小さい整数データ型はすべて Atomic と見なされます。</entry>
    <entry key="hardwareLargestAtomicFloatToolTip">アトミックに読み込みおよび保存が可能な最大浮動小数点データ型を指定します。Double が指定されている場合、Float も Atomic と見なされます。</entry>
    <entry key="hardwareProdEndianName">バイト順:</entry>
    <entry key="hardwareProdWordName">ネイティブなワード サイズ:</entry>
    <entry key="hardwareIntDivRoundToName">符号付き整数の除算の丸め:</entry>
    <entry key="hardwareIntDivisionToolTip">2 つの符号付き整数の除算結果を C コンパイラでどのように丸めるかを指定します。\nこの情報は、このプロジェクトから効率的な C コードを生成するために有効です。</entry>
    <entry key="hardwareShiftRightName">算術シフトとして符号付き整数を右にシフト</entry>
    <entry key="hardwareArithmeticShiftToolTip">C コンパイラが算術右シフトとして符号付き整数を右にシフトすることを\n指定します。実質的にはすべてのコンパイラはこの操作を行います。</entry>
    <entry key="hardwareEndianToolTip">ターゲットのバイト順として [ビッグ エンディアン] (最初が最上位バイト)\nまたは [リトル エンディアン] (最初が最下位バイト) を指定します。\nこのオプションが指定されない場合、生成済みコードが結果を算出します。</entry>
    <entry key="hardwareNativeWordToolTip">ターゲット プロセッサが一度に処理することのできるビット数。\nプロセッサのネイティブ ワード サイズを与えると、データ型の\nバイト順を変換するときにより効果的なコードを生成できます。</entry>
    <entry key="hardwareSyncWithAboveToolTip">このプロジェクトから生成されたコードをテストするために使用されるハードウェアが、コードを最終的に\n実行するハードウェアと同じであることを指定します。このオプションが\n選択されていない場合、テスト ハードウェア上で最終ハードウェアをエミュレートするための\n追加コードが生成されます。</entry>
    <entry key="hardwareProdEqTargetName">なし</entry>
    <entry key="hardwareInstructionSetExtensionsText">ターゲット ハードウェアの命令セット拡張を活用</entry>
    <entry key="hardwareInstructionSetExtensions_Tooltip">命令セット拡張を使用した生成コードの最適化:</entry>
    <entry key="hardwareInstructionSetExtensionsDisabled_Tooltip">命令セット拡張を使用した生成コードの最適化: 無効</entry>
    <entry key="hardwareOptimizeReductionsText">リダクションの最適化</entry>
    <entry key="hardwareOptimizeReductions_Tooltip">リダクションのサポートを有効にすることで、生成コードを最適化</entry>
    <entry key="hardwareFMAText">FMA</entry>
    <entry key="hardwareFMA_Tooltip">FMA 拡張を選択すると、FMA 内部パラメーターをもつコードが生成されます</entry>
    <entry key="InstructionSets_None">なし</entry>
    <entry key="Hardware_Prod_CharGTShort">組み込みハードウェアの設定のエラー: "char" の語長が "short" の語長より長くなっています。[short] の語長は {1,number,integer} ですが [char] の語長は {0,number,integer} です。</entry>
    <entry key="Hardware_Prod_CharNonPos">組み込みハードウェアの設定のエラー: "char" に値 {0,number,integer} が指定されていますが、正の値でなければなりません</entry>
    <entry key="Hardware_Prod_CharOutOfRange">組み込みハードウェアの設定のエラー: "char" に値 {0,number,integer} が指定されていますが、8 ～ 32 の範囲の値でなければなりません</entry>
    <entry key="Hardware_Prod_ShortOutOfRange">組み込みハードウェアの設定のエラー: "short" に値 {0,number,integer} が指定されていますが、8 ～ 32 の範囲の値でなければなりません</entry>
    <entry key="Hardware_Prod_IntOutOfRange">組み込みハードウェアの設定のエラー: "int" に値 {0,number,integer} が指定されていますが、8 ～ 32 の範囲の値でなければなりません</entry>
    <entry key="Hardware_Prod_LongLongOutOfRange">組み込みハードウェアの設定のエラー: "long long" に値 {0,number,integer} が指定されていますが、64 以上の値でなければなりません</entry>
    <entry key="Hardware_Prod_No32BitType">組み込みハードウェアの設定のエラー: "char"、"short"、"int" または "long" の少なくとも 1 つの値が 32 でなければなりません</entry>
    <entry key="Hardware_Prod_AtomicLongLongUnavailable">組み込みハードウェアの設定のエラー: ProdLargestAtomicInteger=''LongLong'' ですが、ProdLongLongMode が ''off'' になっています</entry>
    <entry key="Hardware_Prod_IntGTLong">組み込みハードウェアの設定のエラー: "int" の語長が "long" の語長より長くなっています。[long] の語長は {1,number,integer} ですが [int] の語長は {0,number,integer} です。</entry>
    <entry key="Hardware_Prod_LongGTLongLong">組み込みハードウェアの設定のエラー: "long" の語長が "long long" の語長より長くなっています。"long long" の語長は {1,number,integer} ですが "long" の語長は {0,number,integer} です。</entry>
    <entry key="Hardware_Prod_LongTooBig">組み込みハードウェアの設定のエラー: "long" に値 {0,number,integer} が指定されていますが、サポートされる最大値は {1,number,integer} です</entry>
    <entry key="Hardware_Prod_LongLongTooBig">組み込みハードウェアの設定のエラー: "long long" に値 {0,number,integer} が指定されていますが、サポートされる最大値は {1,number,integer} です</entry>
    <entry key="Hardware_Prod_ShortGTInt">組み込みハードウェアの設定のエラー: "short" の語長が "int" の語長より長くなっています。[int] の語長は {1,number,integer} ですが [short] の語長は {0,number,integer} です。</entry>
    <entry key="Hardware_Prod_WordSizeNotMatch">組み込みハードウェアの設定のエラー: "ネイティブなワード サイズ" に値 {0,number,integer} が指定されていますが、{1} パラメーターで指定されたいずれかの値と一致しなければなりません。</entry>
    <entry key="Hardware_Prod_WordSizeNotMultipleOf8">組み込みハードウェアの設定のエラー: ワード サイズはすべて 8 の倍数でなければなりません。ワード サイズ {0,number,integer} は無効です。</entry>
    <entry key="Hardware_Target_CharGTShort">テスト ハードウェアの設定のエラー: "char" の語長が "short" の語長より長くなっています。[short] の語長は {1,number,integer} ですが [char] の語長は {0,number,integer} です。</entry>
    <entry key="Hardware_Target_CharNonPos">テスト ハードウェアの設定のエラー: "char" に値 {0,number,integer} が指定されていますが、正の値でなければなりません</entry>
    <entry key="Hardware_Target_CharOutOfRange">テスト ハードウェアの設定のエラー: "char" に値 {0,number,integer} が指定されていますが、8 ～ 32 の範囲の値でなければなりません</entry>
    <entry key="Hardware_Target_ShortOutOfRange">テスト ハードウェアの設定のエラー: "short" に値 {0,number,integer} が指定されていますが、8 ～ 32 の範囲の値でなければなりません</entry>
    <entry key="Hardware_Target_IntOutOfRange">テスト ハードウェアの設定のエラー: "int" に値 {0,number,integer} が指定されていますが、8 ～ 32 の範囲の値でなければなりません</entry>
    <entry key="Hardware_Target_No32BitType">テスト ハードウェアの設定のエラー: "char"、"short"、"int" または "long" の少なくとも 1 つの値が 32 でなければなりません</entry>
    <entry key="Hardware_Target_AtomicLongLongUnavailable">テスト ハードウェアの設定のエラー: TargetLargestAtomicInteger=''LongLong'' ですが、TargetLongLongMode が ''off'' になっています</entry>
    <entry key="Hardware_Target_IntGTLong">テスト ハードウェアの設定のエラー: "int" の語長が "long" の語長より長くなっています。[long] の語長は {1,number,integer} ですが [int] の語長は {0,number,integer} です。</entry>
    <entry key="Hardware_Target_LongGTLongLong">テスト ハードウェアの設定のエラー: "long" の語長が "long long" の語長より長くなっています。"long long" の語長は {1,number,integer} ですが "long" の語長は {0,number,integer} です。</entry>
    <entry key="Hardware_Target_LongTooBig">テスト ハードウェアの設定のエラー: "long" に値 {0,number,integer} が指定されていますが、サポートされる最大値は {1,number,integer} です</entry>
    <entry key="Hardware_Target_LongLongTooBig">テスト ハードウェアの設定のエラー: "long long" に値 {0,number,integer} が指定されていますが、サポートされる最大値は {1,number,integer} です</entry>
    <entry key="Hardware_Target_LongLongOutOfRange">テスト ハードウェアの設定のエラー: "long long" に値 {0,number,integer} が指定されていますが、64 以上の値でなければなりません</entry>
    <entry key="Hardware_Target_ShortGTInt">テスト ハードウェアの設定のエラー: "short" の語長が "int" の語長より長くなっています。[int] の語長は {1,number,integer} ですが [short] の語長は {0,number,integer} です。</entry>
    <entry key="Hardware_Target_WordSizeNotMatch">テスト ハードウェアの設定のエラー: "ネイティブなワード サイズ" に値 {0,number,integer} が指定されていますが、{1} パラメーターで指定されたいずれかの値と一致しなければなりません。</entry>
    <entry key="Hardware_Target_WordSizeNotMultipleOf8">テスト ハードウェアの設定のエラー: ワード サイズはすべて 8 の倍数でなければなりません。ワード サイズ {0,number,integer} は無効です。</entry>
    <entry key="Hardware_RegisteredDevice">登録済みのデバイスがこの要件を満たさない場合、"{0}" を 'Generic から Custom' に更新し、有効な値を指定してください。あるいは、&lt;a href="matlab:helpview(fullfile(docroot,'toolbox','ecoder','helptargets.map'),'RegisterAdditionalDevice')"&gt;新しいハードウェア デバイスを登録してください&lt;/a&gt;。</entry>
    <entry key="Hardware_SizeTPtrDiffTNotMatch">ハードウェア設定のエラー: "{0}" に値 {1,number,integer} が指定されています。値は 8、16、24、32、40、64、または 128 でなければなりません。{2}</entry>
    <entry key="Hardware_SizeTPtrDiffTLessThanInt">ハードウェア設定のエラー: "{0}" に値 {1,number,integer} が指定されています。"{2}" の値、すなわち {3,number,integer} 以上でなければなりません。{4}</entry>
    <entry key="HardwareDeviceVendorUnknown">ハードウェア デバイスの設定が正しくありません。デバイス ベンダー ''{0}'' はサポートされていません。</entry>
    <entry key="HardwareDeviceUnknown">ハードウェア デバイスの設定が正しくありません。デバイス ''{0}'' はサポートされていません。</entry>
    <entry key="UnsupportedHeliumISEForArchitecture">"{0}" は "{1}" をサポートしていません。[ARM Cortex-M55 (MPS3)] または [None] を選択します。</entry>
    <entry key="RTWInterfaceTabName">インターフェイス</entry>
    <entry key="targetSoftwareMathTargetName">コード置換ライブラリ: </entry>
    <entry key="targetSoftwareMathTargetToolTip">利用可能なコード置換ライブラリを指定してください。\n{0}\n選択したコード置換ライブラリにはこれらのテーブルが含まれています:{1}\n</entry>
    <entry key="targetSoftwareMathTargetNoneToolTip">ターゲットで利用可能なコード置換ライブラリを指定します。</entry>
    <entry key="ERTDialogSupportName">サポート:</entry>
    <entry key="ERTDialogSupportFloatToolTip">生成コード内の浮動小数点データ型をサポートします。</entry>
    <entry key="ERTDialogSupportFloatName">浮動小数点数</entry>
    <entry key="ERTDialogSupportNonFiniteToolTip">生成コード内の非有限値 (inf, nan, -inf) をサポートします。</entry>
    <entry key="ERTDialogSupportNonFinited1ToolTip">生成コード内の非有限値 (inf, nan, -inf) をサポートします。\nこのオプションは、"浮動小数点のサポート" がオフの場合は強制的にオフになります。</entry>
    <entry key="ERTDialogSupportNonFiniteName">非有限数</entry>
    <entry key="GRTDialogSupportNonFiniteName">非有限値をサポートしています</entry>
    <entry key="ERTDialogTermFunToolTip">プロジェクトの終了関数を生成してください。</entry>
    <entry key="ERTDialogTermFunName">終了関数が必要</entry>
    <entry key="ERTDialogCodeReuseName">再利用可能なコードの生成</entry>
    <entry key="ERTDialogCodeReuseToolTip">再利用可能/再呼び出し可能なコードを生成します。</entry>
    <entry key="ERTDialogTargetName">ソフトウェア環境</entry>
    <entry key="ERTDialogInterfaceName">コード インターフェイス</entry>
    <entry key="RTWCodeStyleTabName">コード スタイル</entry>
    <entry key="ERTTargetcodeStyleParentLevelName">かっこのレベル:</entry>
    <entry key="ERTTargetcodeStyleParentLevelToolTip">コード内のかっこのレベルを指定します。</entry>
    <entry key="ERTTargetcodeStyleParentLevelMinimum">最小 (C/C++ の演算子の優先度に依存)</entry>
    <entry key="ERTTargetcodeStyleParentLevelNominal">ノミナル (可読性のために最適化)</entry>
    <entry key="ERTTargetcodeStyleParentLevelMaximum">最大 (かっこで優先度を指定)</entry>
    <entry key="ERTTargetcodeStyleConvertIfToSwitch">if-elseif-else のパターンを switch-case ステートメントに変換する</entry>
    <entry key="ErtTargetcodeStyleConvertIfToSwitchToolTip">可能であれば、if-elseif-else のパターンを switch-case ステートメントに変換することで可読性を上げてください。</entry>
    <entry key="ERTTargetcodeStylePreserveExternInFcnDeclsName">関数の宣言で extern キーワードを保持する</entry>
    <entry key="ERTTargetcodeStylePreserveExternInFcnDeclsToolTip">MATLAB Coder で生成された外部関数の宣言に "extern" キーワードを\n含めるかどうかを指定します。</entry>
    <entry key="OptimizationTabName">最適化</entry>
    <entry key="TgtSpecOptimization">ターゲット固有の最適化</entry>
    <entry key="AdditionalExtensions">その他の拡張:</entry>
    <entry key="optCodeGenName">コード生成</entry>
    <entry key="optMemcpyName">ベクトルの割り当てに対して memcpy を使用</entry>
    <entry key="optMemcpyToolTip">ベクトルの割り当てに対する memcpy で for ループを置き換えることでコードを最適化します。</entry>
    <entry key="optMemcpyThresholdName">memcpy しきい値 (バイト):</entry>
    <entry key="optMemcpyThresholdToolTip">(要素数)  *  (要素当たりのバイト数) がこのしきい値以上の場合に\nmemcpy を使用します。1 バイトはこのコンテキスト内の\n文字幅です。  </entry>
    <entry key="optInitFloatDoubleName">float と double を 0.0 に初期化するために memset を使用</entry>
    <entry key="optInitFloatDoubleToolTip">float と double に対するストレージの初期化を最適化します。\nコンパイラとターゲット CPU で使われる浮動小数点 0 の表現が整数ビット パターン 0 と\n同一の場合、このオプションを選択してください。</entry>
    <entry key="ExampleInputDynamicEmpty">{0} でのサイズ 0 の次元は常に静的として扱われます。</entry>
    <entry key="ExampleInputDynamicSizeNotVector">エラー:入力例 {0}:可変サイズの次元にはベクトルを指定しなければなりません。</entry>
    <entry key="ExampleInputDynamicSizeNotReal">エラー:入力例 {0}:可変サイズの次元には実数を指定しなければなりません。</entry>
    <entry key="ExampleInputDynamicSizeNotLogical">エラー:入力例 {0}:可変サイズの次元には論理値を指定しなければなりません。</entry>
    <entry key="ExampleInputSizeNaN">エラー:入力例 {0}:次元 {2} のサイズ {1}。これはサポートされていません。</entry>
    <entry key="ExampleInputLargeDimSize">エラー:入力例 {0}:次元 {2} の固定サイズ {1} が intmax() 以上です。これはサポートされていません。</entry>
    <entry key="ExampleInputLargeStaticMatrix">エラー:入力例 {0}:intmax() 以上の numel をもつ固定サイズの行列。これはサポートされていません。</entry>
    <entry key="ExampleSparseNotSupported">関数入力 {0} をスパースにはできません。スパース配列はサポートされていません。</entry>
    <entry key="ExampleSysObjNotSupported">{0} の関数の入力を System object にすることはできません。</entry>
    <entry key="ExampleClassNotSupported">入力例が必要ですが、{1} でサポートされていないクラス {0} が見つかりました。</entry>
    <entry key="ExampleFiModeNotSupported">入力例 {0} にはサポートされていない ''{1}'' embedded.fi オブジェクトが含まれています。</entry>
    <entry key="ExampleFiWordLength">入力例 {0} 固定小数点型は {1} ビットを超えています。これはサポートされていません。</entry>
    <entry key="ExampleEmptyStruct">入力例 {0} にフィールドのない構造体が含まれています。これはサポートされていません。</entry>
    <entry key="ExampleEmptyStructArray">入力例 {0} には、構造体の空の配列が含まれています。これはサポートされていません。</entry>
    <entry key="ExampleSizeEmpty">入力例 {0} のサイズには、空でない例の値がありません。</entry>
    <entry key="ExampleSizeNumeric">入力例 {0}:サイズ次元には数値を指定しなければなりません。</entry>
    <entry key="ExampleSizeReal">入力例 {0}:サイズ次元には実数を指定しなければなりません。</entry>
    <entry key="ExampleSizeVector">入力例 {0}:サイズ次元にはベクトルを指定しなければなりません。</entry>
    <entry key="ExampleSizeNegative">入力例 {0}:次元 {2} に負のサイズ {1} があります。これはサポートされていません。</entry>
    <entry key="ExampleUnequalClasses">入力例 {0} ({1}) と {2} ({3}) のクラスが異なります。</entry>
    <entry key="ExampleUnequalSizes">入力例 {0} と {1} のサイズが異なります。</entry>
    <entry key="ExampleUnequalComplexity">入力例 {0} と {1} で実数と複素数の例が混在しています。</entry>
    <entry key="ExampleUnequalNumerictype">入力例 {0} と {1} の embedded.numericType が異なります。</entry>
    <entry key="ExampleUnequalFimath">入力例 {0} と {1} の embedded.fimath が異なります。</entry>
    <entry key="ExampleUnequalNumFields">入力例 {0} と {1} のフィールド数が異なります。</entry>
    <entry key="ExampleUnequalFieldName">入力例フィールド {0}.{1} に {2}.{3} とは異なる名前があります。フィールド順序は重要です。</entry>
    <entry key="globalSyncName">グローバルなデータ同期モード:</entry>
    <entry key="globalSyncToolTip">このモードは、グローバル データが MATLAB グローバル ワークスペースといつ同期されるかを制御します。</entry>
    <entry key="globalSyncNever">無効</entry>
    <entry key="globalSyncEntryExit">MEX 関数エントリ時と終了時</entry>
    <entry key="globalSyncFull">MEX 関数エントリ時、終了時、および外部の呼び出し時</entry>
    <entry key="lccNotCPPcompiler">指定されているコード生成ターゲットは、C++ を生成するよう設定されていますが、C のみのコンパイラ (LCC) が既定のコンパイラになっています。コード生成を可能にするために、''makefile の生成'' オプションの選択を解除できます。または、C++ コンパイラを指定するために、コマンド プロンプトで ''mex -setup'' と入力してください。C コードを生成するために、ターゲット言語を構成オブジェクトの C に設定してください。</entry>
    <entry key="lccNotMexCPPcompiler">指定した MEX ターゲットは、C++ を生成するよう設定されていますが、C のみのコンパイラ、LCC が既定のコンパイラになっています。\nC++ コンパイラを指定するには、コマンド プロンプトで ''mex -setup'' と入力してください。\nC コードを生成するために、ターゲット言語を構成オブジェクトの C に設定してください。</entry>
    <entry key="watcomNotCPPDLLcompiler">指定したコード生成ターゲットは C++ ダイナミック ライブラリを生成するように構成されていますが、既定のコンパイラは Watcom です。ダイナミック ライブラリ生成をサポートする C++ コンパイラを指定するには、コマンド プロンプトで ''mex -setup'' と入力してください。C ダイナミック ライブラリを生成するために、ターゲット言語を構成オブジェクトの C に設定してください。</entry>
    <entry key="MissingParameterOption">オプション ''{0}'' に対するパラメーターが見つかりません。</entry>
    <entry key="InvalidParameterOption">オプション ''{0}'' に対するパラメーターが無効です。</entry>
    <entry key="InvalidVarName">''{0}'' は、有効な MATLAB 変数名ではありません。</entry>
    <entry key="UnrecognizedOption">オプション ''{0}'' が認識されません。</entry>
    <entry key="NonScalarOption">オプション ''{0}'' はスカラー テキストでなければなりません。複数の値を指定するには、オプションを複数回渡してください。</entry>
    <entry key="UnsupportedOptionForCurrentConfig">オプション ''{0}'' は現在のコード生成構成オブジェクトではサポートされていません。</entry>
    <entry key="UnsupportedClassForMultiSignatureMex">複数シグネチャの MEX 関数の生成は、''{0}'' をサポートしていません。</entry>
    <entry key="UnsupportedConfigForMultiSignatureMex">複数シグネチャの MEX 関数の生成は、構成プロパティ ''{1}'' に ''{0}'' の値をサポートしていません。</entry>
    <entry key="UnsupportedConstantInMultiSignatureMex">Multi-signature code generation does not support coder.Constant input arguments when constant input checking is disabled. For details, see config options ConstantInputs and SILPILCheckConstantInputs.</entry>
    <entry key="UnsupportedOutputTypeInMultiSignatureMex">Multi-signature code generation does not support coder.OutputType input arguments.</entry>
    <entry key="UnusedOption">未使用のオプション ''{0}''。</entry>
    <entry key="DuplicateOption">重複するオプション ''{0}''。</entry>
    <entry key="UnrecognizedProject">ファイル ''{0}'' は、認識されているプロジェクトではありません。</entry>
    <entry key="IncompatibleProjectPlatform">プロジェクト ファイル ''{0}'' は異なるプラットフォームで作成されているため、処理できません。</entry>
    <entry key="CannotProcessOptions">オプションを処理できません。</entry>
    <entry key="CoderProjectIgnoresArgs">プロジェクト ファイルを指定する呼び出しでは、指定された他のすべてのオプションが無視されます。</entry>
    <entry key="NoFunctionNameSpecified">関数名が指定されていません。</entry>
    <entry key="CannotCreateDirectory">ディレクトリ ''{0}'' を作成できません: {1}</entry>
    <entry key="CannotAccessDirectory">ディレクトリ ''{0}'' にアクセスできません。</entry>
    <entry key="DirectoryNameHasBadChar">ディレクトリ名 ''{0}'' はサポートされていない文字 ''{1}'' を含んでいます。</entry>
    <entry key="FolderBadUTF162LCPCompat">フォルダー名 ''{0}'' の一部の文字をローカル コード ページに変換できません。</entry>
    <entry key="UnrecognizedConfigArg">認識されない設定引数 {0}</entry>
    <entry key="InvalidGlobalDataName">初期化引数に無効なグローバル データ名があります。</entry>
    <entry key="GlobalInitOnlyHasType">グローバル ''{0}'' に対する初期化値が見つかりません。\n初期化値はグローバル ワークスペースで指定するか、またはコマンド ラインで ''-globals '{'name, '{'type, value'}}''' という形式で指定しなければなりません。</entry>
    <entry key="MissingGlobalInitialValue">グローバル ''{0}'' に対する初期化値が見つかりません。</entry>
    <entry key="MultipleExampleInputs">1 つの関数に対して複数の入力例が指定されています。</entry>
    <entry key="EmptyCmdLineArgument">空のコマンド ライン引数はサポートされていません。</entry>
    <entry key="FailedToEvalArgument">''{0}'' はベース ワークスペースの空でない配列になりません。</entry>
    <entry key="UnrecognizedFileExtension">ファイル拡張子 ''{0}'' が認識されません。</entry>
    <entry key="UnsupportedFileExtensionWithoutGPUCoder">ファイル拡張子 '.cu' または '.cuh' が無効です。\nCUDA ファイルは GPU Coder でのみサポートされています。</entry>
    <entry key="UnsupportConfigObject">サポートされていない設定 ''{0}'' です。</entry>
    <entry key="InvalidFunctionNameType">関数名は文字ベクトルまたは string スカラーでなければなりません。</entry>
    <entry key="InvalidMethodNameWithNamespace">無効なパラメーター名 ''{0}''。addMethod の最初の引数はメソッド名でなければなりません。名前空間の名前 ''{1}'' を追加してはなりません。 </entry>
    <entry key="EntryPointNameInvalid">''{0}'' は有効な MATLAB 関数名ではありません。</entry>
    <entry key="MissingFunctionName">''{0}'' で関数名が指定されていません。</entry>
    <entry key="ClientFixedPointConversion">固定小数点の変換</entry>
    <entry key="ClientSingleConversion">double から single への変換</entry>
    <entry key="ClientDVO">派生範囲</entry>
    <entry key="MultipleEntryPointsNotSupportedByClient">複数のエントリポイント関数が指定されています: ''{0}'' および ''{1}''。{2} では複数のエントリポイント関数はサポートされません。</entry>
    <entry key="MultipleEntryPointSignaturesNotSupportedByClient">関数 ''{0}'' について、複数のエントリポイント シグネチャが指定されています。{1} では複数のエントリポイント シグネチャはサポートされません。</entry>
    <entry key="BuildInstrumentedMexMultipleEntryPointsNotSupported">複数のエントリポイント関数またはエントリポイント シグネチャが指定されています。buildInstrumentedMex コマンドを使用して、複数のエントリポイント関数またはエントリポイント シグネチャ用のコードを生成するには、-coder オプションを含めてください。このオプションを使用するには、MATLAB Coder のライセンスが必要です。</entry>
    <entry key="EntryPointsInNamespacesNotSupportedByClient">エントリポイント関数 ''{0}'' は名前空間内にあります。名前空間内のエントリポイント関数は、{1} ではサポートされていません。</entry>
    <entry key="UnsupportedExtension">出力ファイル拡張子 ''{0}'' はサポートされていません。</entry>
    <entry key="OutputFileNameHasBadChar">出力ファイル名 ''{0}'' はサポートされていない文字 ''{1}'' を含んでいます。</entry>
    <entry key="OutputFileNameNotMexFcnName">出力名 ''{0}'' は、有効な MEX 関数名ではありません。</entry>
    <entry key="DirectoryNotFound">出力ファイル ディレクトリ (''{0}'') は存在しません。</entry>
    <entry key="InvalidCodingTarget">コーディングのターゲットの指定 ''{0}'' が無効です。\n''-T type'' の形式を使用してください。ただし、''type'' は ''mex''、''rtw''、''rtw:lib''、''rtw:exe'' のいずれかです。</entry>
    <entry key="InvalidOptimizationRestrict">最適化の指定 ''{0}'' が無効です。\n''enable:optimization'' または ''disable:optimization'' の形式を使用してください。\nただし、''optimization'' は ''inline'' です。</entry>
    <entry key="InvalidOptimization">最適化の指定 ''{0}'' が無効です。\n''enable:optimization'' または ''disable:optimization'' の形式を使用してください。\nただし、''optimization'' は ''inline'' または ''openmp'' です。</entry>
    <entry key="ProjectNumerictypeInvalid">''{0}'' の numerictype の指定は有効な ''{1}'' ではありません。</entry>
    <entry key="ProjectFimathInvalid">''{0}'' の fimath の指定は有効な ''{1}'' ではありません。</entry>
    <entry key="ProjectConstantInvalid">''{0}'' の定数の指定は有効な ''{1}'' ではありません。</entry>
    <entry key="GlobalInitialValueTypeMismatch">グローバル変数 ''{0}'' に指定された初期値は、グローバル変数のタイプに含まれていません。</entry>
    <entry key="DeprecatedOption">オプション ''{0}'' はサポートされていません。代わりに ''{1}'' を使用してください。</entry>
    <entry key="RequireFeatureControl">feature コントロール オブジェクトは ''-feature'' オプションで必要です。</entry>
    <entry key="InvalidCodingTargetConfig">コーディングのターゲットの指定 ''{0}'' が無効です。\n''-config type'' の形式を使用してください。ただし、''type'' は構成オブジェクトまたは ''coder:mex''、''coder:lib''、''coder:exe'' のいずれかです。</entry>
    <entry key="NonScalarConfig">与えられた構成オブジェクトは、スカラーでなければなりません。</entry>
    <entry key="EntryPointNotSpecified">エントリ ポイント関数が指定されていません。</entry>
    <entry key="EntryPointNotFound">エントリポイント ファイル ''{0}'' が見つかりません。</entry>
    <entry key="MexFunctionNotFound">生成された MEX 関数 ''{0}'' が MATLAB パスで見つかりません。このファイルを含むディレクトリをパスに追加するか、このファイルをパス上の既存の場所に移動させてください。</entry>
    <entry key="TestBenchNotFound">テスト ファイル ''{0}'' が見つかりません。</entry>
    <entry key="InputTypesNotSpecified">Provide a test bench or input types for HDL code generation.</entry>
    <entry key="ProjectToScriptNoHDLSuport">MATLAB HDL Coder プロジェクトからのスクリプト ファイルの生成はサポートされていません。</entry>
    <entry key="ExtractHelpTestUndef">''{0}'' の定義は matlabroot/toolbox/coder/coder または matlabroot/toolbox/coder/coder/+coder には含まれていません。ヘルプは抽出されません。</entry>
    <entry key="ExtractHelpTestNoMFile">ファイル ''{0}'' .p には MATLAB ファイル定義がありません。</entry>
    <entry key="ExtractHelpTestNoPCode">クラス/コマンド/関数の定義 ''{0}'' は P コードではありません。ヘルプは抽出されません。</entry>
    <entry key="ExtractHelpTestNoDefn">クラス/コマンド/関数 ''{0}'' が ''{1}'' で定義されていません。ヘルプは抽出されません。</entry>
    <entry key="InValid_CustomToolchainOptions">''{0}'' は名前と値のペアで指定されたツールとオプションのセル配列でなければなりません。</entry>
    <entry key="InValid_CustomToolchainOptions_EmptyCellWithSpecify">BuildConfiguration プロパティが ''{1}'' に設定されているとき、''{0}'' を空のセル配列には設定できません。</entry>
    <entry key="Invalid_CustomToolchainOptions_NumberOfTools_Invalid">''{0}'' は名前と値のペアで指定されたツールとオプションのセル配列でなければなりません。次のビルド ツールに対して有効な構成を指定してください: {1}</entry>
    <entry key="InValid_CustomToolchainOptions_Name_Rep">''{0}'' は複数回指定されています。ツールを複数回指定しないでください。</entry>
    <entry key="InValid_CustomToolchainOptions_Name_Unknown">''{0}'' は不明なツールです。ツールは、次のいずれかになります:  {1}</entry>
    <entry key="Invalid_MultiSignatureMexSignature">複数シグネチャの MEX 関数の生成中に、重複するシグネチャが見つかりました。重複するシグネチャを削除してください。</entry>
    <entry key="NoBuildConfigurations">現在のツールチェーンのビルド構成のリストを取得できません。このツールチェーンが登録されているかどうかを確認してください。</entry>
    <entry key="BadBuildConfigurationString">ビルド構成値に無効な文字があります。</entry>
    <entry key="Invalid_ToolchainName">''{0}'' は有効なツールチェーン名ではありません。次のいずれかを使用してください: {1}</entry>
    <entry key="MultipleMatchingToolchainName">''{0}'' は複数のツールチェーン名と一致します。次のいずれかのツールチェーンを指定します:\n{1}</entry>
    <entry key="NoToolchains">ツールチェーン リストを取得できません。登録されているツールチェーンがあるかどうかを確認してください。</entry>
    <entry key="BadToolchainString">ツールチェーン値に無効な文字があります。</entry>
    <entry key="BadCRLString">コード置換ライブラリの値に無効な文字があります。</entry>
    <entry key="BadSymbolString">カスタム シンボルの値に無効な文字があります。</entry>
    <entry key="crlsWithLangBaseTflDeprecated">''{0}'' コード置換ライブラリは将来のリリースで削除される予定です。代わりに ''{1}'' を選択し、''TargetLangStandard'' 設定を使用して言語の標準ライブラリを指定してください。</entry>
    <entry key="crlDeprecatedGCCCortexA">''{0}'' コード置換ライブラリは推奨されません。コード置換ライブラリを 'ARM Cortex-A CMSIS' CRL に設定してください。</entry>
    <entry key="InvalidHardwareProperty">Hardware プロパティは ''{0}'' クラスでなければなりません。</entry>
    <entry key="UpdateHardwareFailed">''{0}'' メソッドを Hardware プロパティに適用できませんでした。</entry>
    <entry key="UpdateHardwareFailedWithCause">''{0}'' メソッドを Hardware プロパティに適用できませんでした: {1}</entry>
    <entry key="InvalidCustomReplacementType">''{0}'' は有効なカスタム データ型置換名でありません。</entry>
    <entry key="EditConfigObj">&lt;a href="matlab:open {0};"&gt;構成オブジェクトの編集&lt;/a&gt;</entry>
    <entry key="EditTypeObj">&lt;a href="matlab:open {0};"&gt;Edit Type Object&lt;/a&gt;</entry>
    <entry key="ecufRepTypeMustBeCIdentifier">置き換えタイプ ''{0}'' は有効な C の識別子でなければなりません。</entry>
    <entry key="ecufRepTypeIsCKeyword">''{0}'' は C のキーワードであり、置換タイプとして使うことはできません。</entry>
    <entry key="ecufRepTypeIsCppKeyword">''{0}'' は C++ のキーワードであり、置換タイプとして使うことはできません。</entry>
    <entry key="ecufRepTypeIsDefDataType">''{0}'' はコード生成のために予約されたキーワードであり、置換タイプとしては使用できません。 </entry>
    <entry key="ecufInvalidDupRepType">''{0}'' は ''{1}'' に対して無効な重複している置き換えタイプです。</entry>
    <entry key="NoLangStandard">''{0}'' の TargetLangStandard パラメーターがありません。</entry>
    <entry key="NoLang">''{0}'' の TargetLang C または C++ パラメーターがありません。</entry>
    <entry key="BadFileNameStr">CustomFileNameStr 値 ''{0}'' が無効です。</entry>
    <entry key="InvalidEmptyInstructionSetExtensions">''InstructionSetExtensions'' の値は ''None'' か、または string として指定された有効な命令セット拡張でなければなりません。</entry>
    <entry key="InvalidMultipleInstructionSetExtensions">複数の要素の配列は、''InstructionSetExtensions'' ではサポートされていません。値は string または文字ベクトルでなければなりません。</entry>
    <entry key="ConstantSerializationWithoutDma">Setting LargeConstantGeneration configuration setting to 'WriteOnlyDNNConstantsToDataFiles' requires dynamic memory allocation configuration setting to be enabled.</entry>
    <entry key="MODialogError">MATLAB Online はコード生成構成オブジェクトの GUI をサポートしていません。構成プロパティはコマンド ラインまたはスクリプトから編集してください。</entry>
    <entry key="InvalidLangStandard">ターゲットの言語標準 ''{0}'' はターゲットの言語 ''{1}'' と互換性がありません。</entry>
    <entry key="InvalidNargoutParam">-nargout の入力引数 ''{0}'' が正しくありません。入力引数は非負の整数または -1 でなければなりません。</entry>
    <entry key="FailedToPullBaseImage">ベース イメージ ''{0}'' をプルできません:''{1}''。</entry>
    <entry key="BadPermissions">Docker ファイル ''{0}'' を作成できません。</entry>
    <entry key="FailedToGenerateDockerImage">Docker イメージ ''{0}'' をビルドできません:''{1}''。</entry>
    <entry key="DockerIsMissing">Docker イメージを作成するには、お使いの Linux マシンに Docker がインストールされていなければなりません。</entry>
    <entry key="OnlyInLinux">Docker 用のコード生成は、Linux プラットフォームでのみサポートされています。</entry>
    <entry key="PermissionDenied">認証できませんでした。Docker グループに自身を追加してください。</entry>
    <entry key="SILDebuggingDeprecated">SILDebugging 構成パラメーターは将来のリリースで削除される予定です。代わりに SILPILDebugging を使用してください。</entry>
    <entry key="DeprecateCppPackagesToNamespaces">CppPackagesToNamespaces 構成パラメーターは将来のリリースで削除される予定です。代わりに CppPreserveNamespaces を使用してください。</entry>
    <entry key="hardwareProdBitPerCharName">char:   </entry>
    <entry key="hardwareProdBitPerShortName">short:  </entry>
    <entry key="hardwareProdBitPerIntName">int:    </entry>
    <entry key="hardwareProdBitPerLongName">long:   </entry>
    <entry key="hardwareProdBitPerFloatName">float:   </entry>
    <entry key="hardwareProdBitPerDoubleName">double:   </entry>
    <entry key="hardwareProdBitPerSizeTName">size_t:   </entry>
    <entry key="hardwareProdBitPerPtrDiffTName">ptrdiff_t:   </entry>
    <entry key="ClientFiaccel">fiaccel</entry>
    <entry key="ClientHDLCoder">HDL Coder</entry>
    <entry key="ClientGPUCoder">GPU Coder</entry>
    <entry key="ClientPLCCoder">PLC Coder</entry>
    <entry key="ClientBuildInstrumentedMex">buildInstrumentedMex</entry>
    <entry key="InvalidDataTypeAliasName">{0}</entry>
  </message>
</rsccat>
