<?xml version="1.0" encoding="UTF-8"?>
<!--Copyright 2024 The MathWorks, Inc.-->

<rsccat xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.0" locale="ja_JP" product="Coder" xsi:noNamespaceSchemaLocation="../../resources/schema/msgcat.xsd">
  <message>
    <entry key="DomainError">生成されるコードでは、実数入力値の結果は実数出力になると仮定されます。複素数出力が必要な場合は、関数 'complex' を使用して入力にゼロの虚数部を与えてください。</entry>
    <entry key="UnsupportedSpecialEmpty">生成されたコードでは、可変サイズの行列入力はサイズが 0 行 0 列にならないと仮定されます。</entry>
    <entry key="diag_varsizedMatrixVector">生成されたコードでは、行列 X の対角要素を抽出してベクトルを返します。入力 X がベクトルと考えられる場合は、X の代わりに X(:) を渡してください。</entry>
    <entry key="UnsupportedNaN">生成されたコードでは、NaN 値は入力から削除されません。</entry>
    <entry key="eml_all_or_any_specialEmpty">生成されたコードでは、可変サイズの行列入力はサイズが 0 行 0 列にならないと仮定されます。</entry>
    <entry key="eml_min_or_max_varDimZero">生成されたコードでは、動作する対象の次元の長さは非ゼロであると仮定されます。</entry>
    <entry key="NonIncreasing">生成されたコードでは、グリッドの値は厳密に増加していると仮定されます。</entry>
    <entry key="eml_assert_valid_dim_dimTooLarge">生成されたコードでは、サイズは C の 'int' 型を使用して表現可能であると仮定されます。</entry>
    <entry key="MustBeFiniteAndStrictlyIncreasing">生成されたコードでは、入力 X は有限で、厳密に増加していると仮定されます。</entry>
    <entry key="mtimes_noDynamicScalarExpansion">生成されたコードでは、一般的な行列の乗算が行われます。可変サイズの行列のオペランドが実行時にスカラーになる場合でも、次元は一致しなければなりません。スカラー乗算への自動的な切り替えはありません。</entry>
    <entry key="autoDimIncompatibility">生成されたコードでは、動作する対象の次元は自動的に選択され、MATLAB とは異なっている場合があります。使用する次元を明示的に定数値として指定することを検討してください。</entry>
    <entry key="VectorVector">ベクトルによるベクトルのインデックス付け vector1(vector2) において、コード ジェネレーターは結果の向きが vector1 と同じになると仮定しました。vector1 が実行時にスカラーである場合、vector2 の向きは vector1 と一致しなければなりません。</entry>
    <entry key="MatrixMatrix">行列による行列のインデックス付け matrix1(matrix2) において、コード ジェネレーターは結果のサイズが matrix2 と同じになると仮定しました。matrix1 と matrix2 が実行時にベクトルである場合、両者の向きは一致しなければなりません。</entry>
    <entry key="OutOfTargetRangeTruncated">生成されたコードでは、インデックスの値が有効な範囲内にあると仮定されます。</entry>
    <entry key="SizesOverflowOnDim">生成されたコードでは、配列演算が各次元の上限に収まると仮定されます。</entry>
    <entry key="OutOfBoundRange">生成されたコードでは、インデックスが配列範囲内に収まると仮定されます。インデックスが範囲を超えた場合、配列は拡大されません。配列を拡大するには、メモリを事前に割り当てるか、連結を使用することを検討してください。たとえば、[X A] のようにします。</entry>
    <entry key="NontunableHandleProp">生成されたコードでは、調整不可プロパティの値は実行時に変化しないと仮定されます。</entry>
    <entry key="ForLoopVector">生成されたコードでは、ループの反復回数は C の 'int' 型を使用して表現可能であると仮定されます。</entry>
    <entry key="ValueIsNonInteger">生成されたコードでは、値は C の 'int' 型を使用して表現可能であると仮定されます。</entry>
    <entry key="SizesMismatch">生成されたコードでは、左辺と右辺のサイズが一致すると仮定されます。</entry>
    <entry key="eml_assert_valid_size_arg_invalidSizeVector">生成されたコードでは、サイズ ベクトルは、intmax('int32') 未満かつターゲット ハードウェア上で C データ型 'int' に適合する有限の整数要素をもつ行ベクトルであると仮定されます。</entry>
    <entry key="int_forloop_overflow">生成されたコードでは、ループの最後の反復でループ インデックスがオーバーフローしないと仮定されます。ループ インデックスがオーバーフローすると、無限ループが発生する可能性があります。</entry>
  </message>
</rsccat>
