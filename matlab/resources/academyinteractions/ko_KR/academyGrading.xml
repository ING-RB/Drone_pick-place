<?xml version="1.0" encoding="UTF-8"?>
<!--Copyright 2025 The MathWorks, Inc.-->

<rsccat xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.0" locale="ko_KR" product="academyinteractions" xsi:noNamespaceSchemaLocation="../../resources/schema/msgcat.xsd">
  <message>
    <entry key="zeroth">0번째</entry>
    <entry key="first">1번째</entry>
    <entry key="second">2번째</entry>
    <entry key="third">3번째</entry>
    <entry key="fourth">4번째</entry>
    <entry key="fifth">5번째</entry>
    <entry key="sixth">6번째</entry>
    <entry key="seventh">7번째</entry>
    <entry key="eighth">8번째</entry>
    <entry key="ninth">9번째</entry>
    <entry key="tenth">10번째</entry>
    <entry key="MINUS">뺄셈 연산자</entry>
    <entry key="MUL">행렬 곱셈 연산자</entry>
    <entry key="DIV">나눗셈 연산자</entry>
    <entry key="LDIV">백슬래시 연산자</entry>
    <entry key="EXP">지수 연산자</entry>
    <entry key="DOTMUL">점 곱셈 연산자</entry>
    <entry key="DOTDIV">점 나눗셈 연산자</entry>
    <entry key="DOTLDIV">점 백슬래시 연산자</entry>
    <entry key="DOTEXP">점 지수 연산자</entry>
    <entry key="ANDAND">논리 AND 연산자</entry>
    <entry key="OROR">논리 OR 연산자</entry>
    <entry key="LT">보다 작음 연산자</entry>
    <entry key="GT">보다 큼 연산자</entry>
    <entry key="LE">작거나 같음 연산자</entry>
    <entry key="GE">크거나 같음 연산자</entry>
    <entry key="PLUS">덧셈 연산자</entry>
    <entry key="AND">논리 AND 연산자</entry>
    <entry key="OR">논리 OR 연산자</entry>
    <entry key="EQ">등호 연산자</entry>
    <entry key="NE">부등호 연산자</entry>
    <entry key="NOT">논리 NOT 연산자</entry>
    <entry key="UMINUS">단항 마이너스 연산자</entry>
    <entry key="UPLUS">단항 플러스 연산자</entry>
    <entry key="DOTTRANS">전치 연산자</entry>
    <entry key="TRANS">전치 연산자</entry>
    <entry key="AT">함수 핸들 연산자</entry>
    <entry key="BANG">bang 연산자</entry>
    <entry key="syntaxError">구문 오류입니다. </entry>
    <entry key="correct">정답입니다! </entry>
    <entry key="incorrect">오답입니다! </entry>
    <entry key="example">예: </entry>
    <entry key="missingSingleQuotes">문자열 &lt;code&gt;{0}&lt;/code&gt;을(를) MATLAB 문자형 배열로 처리하려면 작은 따옴표('')로 묶으십시오. </entry>
    <entry key="squareBracketForArrayAccess">배열 요소에 액세스하기 위해 []를 사용하려는 경우 MATLAB에서는 ()를 사용한다는 점을 명심하십시오. </entry>
    <entry key="shouldCallAFunction">&lt;code&gt;{0}&lt;/code&gt; 함수를 사용해야 합니다. </entry>
    <entry key="shouldNotCallAFunction">&lt;code&gt;{0}&lt;/code&gt; 함수를 사용할 필요가 없습니다. </entry>
    <entry key="shouldIndexIntoVariable">&lt;code&gt;{0}&lt;/code&gt; 변수의 요소를 참조해야 합니다. </entry>
    <entry key="shouldNotIndexIntoVariable">&lt;code&gt;{0}&lt;/code&gt; 변수의 요소를 참조할 필요가 없습니다. </entry>
    <entry key="shouldUseVariable">&lt;code&gt;{0}&lt;/code&gt; 변수에 액세스해야 합니다. </entry>
    <entry key="shouldNotUseVariable">&lt;code&gt;{0}&lt;/code&gt; 변수에 액세스할 필요가 없습니다. </entry>
    <entry key="shouldModifyVariable">&lt;code&gt;{0}&lt;/code&gt; 변수를 수정해야 합니다. </entry>
    <entry key="shouldNotModifyVariable">&lt;code&gt;{0}&lt;/code&gt; 변수를 수정할 필요가 없습니다. </entry>
    <entry key="shouldExtractContentFrom">중괄호를 사용하여 &lt;code&gt;{0}&lt;/code&gt; 배열에서 내용을 추출해야 합니다. </entry>
    <entry key="shouldNotExtractContentFrom">&lt;code&gt;{0}&lt;/code&gt; 배열에서 내용을 추출할 필요가 없습니다. </entry>
    <entry key="shouldModifyContentWithin">중괄호를 사용하여 &lt;code&gt;{0}&lt;/code&gt; 배열 내 내용을 수정해야 합니다. </entry>
    <entry key="shouldNotModifyContentWithin">중괄호를 사용하여 &lt;code&gt;{0}&lt;/code&gt; 배열 내 내용을 수정해야 합니다. </entry>
    <entry key="functionCallShouldUseParentheses">&lt;code&gt;{0}&lt;/code&gt;에 대한 호출에서는 소괄호 &lt;code&gt;()&lt;/code&gt;를 사용하여 인수를 전달해야 합니다. </entry>
    <entry key="indexShouldUseParentheses">&lt;code&gt;{0}&lt;/code&gt;의 요소를 참조할 경우 소괄호 &lt;code&gt;()&lt;/code&gt;를 사용해 보십시오. </entry>
    <entry key="indexShouldUseCurlyBraces">&lt;code&gt;{0}&lt;/code&gt;의 요소를 참조할 경우 중괄호 &lt;code&gt;'{''}'&lt;/code&gt;를 사용해 보십시오. </entry>
    <entry key="callShouldHaveDifferentNumberOfInputs">&lt;code&gt;{0}&lt;/code&gt; 함수에 대한 호출은 {1}개 입력값을 포함해야 합니다. </entry>
    <entry key="indexShouldHaveDifferentNumberOfInputs">&lt;code&gt;{0}&lt;/code&gt;의 요소를 참조할 경우 {1}개 입력값을 사용해 보십시오. </entry>
    <entry key="inputsAreIncorrect">&lt;code&gt;{0}&lt;/code&gt;에 대한 입력값이 올바르지 않습니다. </entry>
    <entry key="inputWasExpectedToBeDifferent">{0} 입력값에는 값 &lt;code&gt;{1}&lt;/code&gt;이(가) 필요합니다. </entry>
    <entry key="inputArgumentIsNotInCorrectSpot">&lt;code&gt;{0}&lt;/code&gt;은(는) {2}이(가) 아니라 {1} 입력값이어야 합니다. </entry>
    <entry key="noNeedToObtainMultipleOutputArguments">여러 개의 출력값을 구할 필요가 없습니다. </entry>
    <entry key="shouldObtainMultipleOutputArguments">대괄호(&lt;code&gt;[]&lt;/code&gt;)를 사용하여 여러 개의 출력값을 구해 보십시오. </entry>
    <entry key="noNeedToManuallyCreateArray">대괄호(&lt;code&gt;[]&lt;/code&gt;)를 사용하여 배열을 수동으로 생성할 필요가 없습니다. </entry>
    <entry key="shouldManuallyCreateArray">대괄호를 사용하여 배열을 수동으로 입력해 보십시오(&lt;code&gt;[3 5 8]&lt;/code&gt;). </entry>
    <entry key="noNeedToRemoveArrayElements">배열 요소를 제거할 필요가 없습니다(&lt;code&gt;... = []&lt;/code&gt;). </entry>
    <entry key="shouldRemoveArrayElements">빈 배열을 할당하여 배열의 요소를 제거해 보십시오(&lt;code&gt;... = []&lt;/code&gt;). </entry>
    <entry key="noNeedToCreateAnEmptyArray">빈 배열(&lt;code&gt;[]&lt;/code&gt;)을 생성할 필요가 없습니다. </entry>
    <entry key="shouldCreateAnEmptyArray">빈 배열(&lt;code&gt;[]&lt;/code&gt;)을 사용해 보십시오. </entry>
    <entry key="noNeedToManuallyCreateCellArray">중괄호(&lt;code&gt;'{''}'&lt;/code&gt;)를 사용하여 셀형 배열을 수동으로 생성할 필요가 없습니다. </entry>
    <entry key="shouldManuallyCreateCellArray">중괄호를 사용하여 셀형 배열을 수동으로 생성해 보십시오(&lt;code&gt;'{'3 'foo' 8'}'&lt;/code&gt;). </entry>
    <entry key="noNeedToCreateEmptyCellArray">빈 셀형 배열(&lt;code&gt;'{''}'&lt;/code&gt;)을 생성할 필요가 없습니다. </entry>
    <entry key="shouldCreateEmptyCellArray">빈 셀형 배열(&lt;code&gt;'{''}'&lt;/code&gt;)을 사용해 보십시오. </entry>
    <entry key="incorrectUseOfMultipleOutputArgs">출력 인수 표현식에 문제가 있을 수 있습니다. </entry>
    <entry key="incorrectUseOfManuallyCreatingArrays">대괄호(&lt;code&gt;[]&lt;/code&gt;)를 사용하여 생성된 배열에 문제가 있을 수 있습니다. </entry>
    <entry key="incorrectUseOfRemovingArrayElements">배열 요소가 제거된 방식에 문제가 있습니다. </entry>
    <entry key="incorrectUseOfCreatingEmptyArray">빈 배열이 생성된 방식에 문제가 있습니다. </entry>
    <entry key="incorrectUseOfManuallyCreatingCellArrays">중괄호(&lt;code&gt;'{''}'&lt;/code&gt;)를 사용하여 생성된 셀형 배열에 문제가 있을 수 있습니다. </entry>
    <entry key="incorrectUseOfCreatingEmptyCellArray">빈 셀형 배열이 생성된 방식에 문제가 있습니다. </entry>
    <entry key="expectedMRows">{0}개 행이 있어야 합니다. </entry>
    <entry key="rowSeparationTip">세미콜론(&lt;code&gt;;&lt;/code&gt;)을 사용하여 행을 구분할 수 있음을 기억하십시오. </entry>
    <entry key="expectedNColumns">{0} 행에는 {1}개 열이 있어야 합니다. </entry>
    <entry key="columnSeparationTip">쉼표(&lt;code&gt;,&lt;/code&gt;) 또는 공백을 사용하여 열을 구분할 수 있음을 기억하십시오. </entry>
    <entry key="expectedDifferentRowArgument">{1} 행의 {0} 값은 &lt;code&gt;{2}&lt;/code&gt;이어야 합니다. </entry>
    <entry key="switchedArgumentOrderInRow">{0} 행에서 &lt;code&gt;{1}&lt;/code&gt;은(는) {2} 인수여야 합니다. </entry>
    <entry key="shouldNotUseColon">콜론(&lt;code&gt;:&lt;/code&gt;) 연산자를 사용할 필요가 없습니다. </entry>
    <entry key="useColonToAccessAllElements">콜론 연산자(&lt;code&gt;{0}&lt;/code&gt;)를 사용하여 배열의 모든 요소에 액세스해 보십시오. </entry>
    <entry key="useColonToAccessAllRows">콜론 연산자(&lt;code&gt;{0}&lt;/code&gt;)를 사용하여 모든 행에 액세스해 보십시오. </entry>
    <entry key="useColonToAccessAllColumns">콜론 연산자(&lt;code&gt;{0}&lt;/code&gt;)를 사용하여 모든 열에 액세스해 보십시오. </entry>
    <entry key="useColonToAccessAllElementsOfADimension">콜론 연산자(&lt;code&gt;{0}&lt;/code&gt;)를 사용하여 특정 차원의 모든 요소에 액세스해 보십시오. </entry>
    <entry key="useColonToCreateVector">콜론 연산자(&lt;code&gt;{0}&lt;/code&gt;)를 사용하여 벡터를 생성해 보십시오. </entry>
    <entry key="needToUseALoneColon">첨자 내에 단일 콜론(&lt;code&gt;{0}&lt;/code&gt;)을 사용하여 전체 행 또는 열을 선택하십시오. </entry>
    <entry key="needToSpecifyInitialAndFinalValue">벡터의 초기값 및 최종 값은 콜론(&lt;code&gt;{0}&lt;/code&gt;) 연산자로 지정해야 합니다. </entry>
    <entry key="badStartValueInColonExpression">벡터의 초기값은 &lt;code&gt;{0}&lt;/code&gt;이어야 합니다. </entry>
    <entry key="badSpacingValueInColonExpression">벡터의 간격은 &lt;code&gt;{0}&lt;/code&gt;이어야 합니다. </entry>
    <entry key="badEndValueInColonExpression">벡터의 최종 값은 &lt;code&gt;{0}&lt;/code&gt;이어야 합니다. </entry>
    <entry key="unnecessaryStatement">&lt;code&gt;{0}&lt;/code&gt; 문을 사용할 필요가 없습니다. </entry>
    <entry key="missingStatement">&lt;code&gt;{0}&lt;/code&gt; 문을 사용하십시오. </entry>
    <entry key="noNeedToUseDotOperator">점 연산자(&lt;code&gt;a.b&lt;/code&gt;)를 사용할 필요가 없습니다. </entry>
    <entry key="shouldUseDotOperator">점 연산자(&lt;code&gt;a.b&lt;/code&gt;)를 사용해 보십시오. </entry>
    <entry key="useDotOperatorOnVariable">변수 &lt;code&gt;{0}&lt;/code&gt;의 필드를 참조해야 합니다(점 연산자를 사용해 보십시오).</entry>
    <entry key="checkVariableNameCapitalization">변수 이름의 대/소문자를 확인하십시오. </entry>
    <entry key="useDotOperatorForField">점 연산자(&lt;code&gt;.&lt;/code&gt;)를 사용하여 속성 &lt;code&gt;{0}&lt;/code&gt;을(를) 참조하십시오. </entry>
    <entry key="noAssignmentNecessary">출력 변수에 값을 할당할 필요가 없습니다. </entry>
    <entry key="shouldUseAssignment">&lt;code&gt;{0}&lt;/code&gt;에 값을 할당해야 합니다. </entry>
    <entry key="valueAssignedIncorrect">할당된 값이 올바르지 않습니다. </entry>
    <entry key="wrongVariableInAssignment">&lt;code&gt;{0}&lt;/code&gt;에 값을 할당해야 합니다. </entry>
    <entry key="switchedAssignmentOrder">대입식의 입력값이 바뀌었습니다. 입력값은 &lt;code&gt;{0}&lt;/code&gt;이어야 합니다. </entry>
    <entry key="valueBeingAssignedShouldBeOutput">할당되는 값(&lt;code&gt;{0}&lt;/code&gt;)은 출력 인수여야 합니다. </entry>
    <entry key="outputShouldBeValueBeingAssigned">대입식의 출력 인수(&lt;code&gt;{0}&lt;/code&gt;)는 할당되는 값이어야 합니다. </entry>
    <entry key="anonymousFunction">익명 함수</entry>
    <entry key="anonymousFunctionUnnecessary">{0}을(를) 사용할 필요가 없습니다. </entry>
    <entry key="tryUsingAnonymousFunction">{0}을(를) 사용해 보십시오. </entry>
    <entry key="anonFunctionHasWrongNumInputs">익명 함수는 {0}개 입력값을 포함해야 합니다. </entry>
    <entry key="noNeedToUseOperator">{0}(&lt;a target="_blank" href="{1}"&gt;{2}&lt;/a&gt;)을(를) 사용할 필요가 없습니다. </entry>
    <entry key="shouldUseOperator">{0}(&lt;a target="_blank" href="{1}"&gt;{2}&lt;/a&gt;)을(를) 사용해야 합니다. </entry>
    <entry key="left">왼쪽</entry>
    <entry key="right">오른쪽</entry>
    <entry key="badOperatorArgument">{1}에 대한 {0} 입력값은 &lt;code&gt;{2}&lt;/code&gt;이어야 합니다. </entry>
    <entry key="switchedBothOperatorArguments">{0}에 대한 입력값이 바뀌었습니다. 입력값은 &lt;code&gt;{1}&lt;/code&gt;이어야 합니다. </entry>
    <entry key="switchedOneOperatorArgument">{1}(&lt;code&gt;{2}&lt;/code&gt;)에 대한 {0} 입력값은 {3} 입력값이어야 합니다. </entry>
    <entry key="shouldUseInt">값 &lt;code&gt;{0}&lt;/code&gt;을(를) 갖는 정수를 포함해야 합니다. </entry>
    <entry key="noNeedToUseInt">값 &lt;code&gt;{0}&lt;/code&gt;을(를) 갖는 정수를 포함할 필요가 없습니다. </entry>
    <entry key="shouldUseDouble">값 &lt;code&gt;{0}&lt;/code&gt;을(를) 갖는 숫자를 포함해야 합니다. </entry>
    <entry key="noNeedToUseDouble">값 &lt;code&gt;{0}&lt;/code&gt;을(를) 갖는 숫자를 포함할 필요가 없습니다. </entry>
    <entry key="shouldUseString">값 &lt;code&gt;{0}&lt;/code&gt;을(를) 갖는 문자형 배열을 포함해야 합니다. </entry>
    <entry key="noNeedToUseString">값 &lt;code&gt;{0}&lt;/code&gt;을(를) 갖는 문자형 배열을 포함할 필요가 없습니다. </entry>
    <entry key="shouldUseId">식별자 &lt;code&gt;{0}&lt;/code&gt;에 대한 참조를 포함해야 합니다. </entry>
    <entry key="noNeedToUseId">식별자 &lt;code&gt;{0}&lt;/code&gt;에 대한 참조를 포함할 필요가 없습니다. </entry>
    <entry key="variableHasIncorrectDimensions">변수 &lt;code&gt;{0}&lt;/code&gt;의 차원이 잘못되었습니다. &lt;br/&gt;필요한 크기: [{1}] &lt;br/&gt;실제 크기: [{2}]</entry>
    <entry key="variableHasIncorrectDataType">변수 &lt;code&gt;{0}&lt;/code&gt;의 데이터형이 잘못되었습니다. &lt;br/&gt;필요한 유형: [{1}] &lt;br/&gt;실제 유형: [{2}]</entry>
    <entry key="variableIsIncorrect">변수 &lt;code&gt;{0}&lt;/code&gt;이(가) 올바르지 않은 것으로 보입니다. </entry>
    <entry key="checkCapitalizationOfCharacters">문자열 &lt;code&gt;{0}&lt;/code&gt;에서 각 문자의 대/소문자를 확인하십시오. </entry>
    <entry key="stateDesiredValue">&lt;code&gt;{0}&lt;/code&gt;에 대해 원하는 값: {1} &lt;br/&gt;실제 값: {2}</entry>
    <entry key="variableWasNotCreated">변수 &lt;code&gt;{0}&lt;/code&gt;이(가) 생성되지 않았습니다. </entry>
    <entry key="checkMisspelledVariableName">변수 이름 &lt;code&gt;{0}&lt;/code&gt;의 철자를 잘못 입력했는지 확인하십시오. </entry>
    <entry key="scalarValueDifference">이 값은 원하는 값과 대략 &lt;code&gt;{0}&lt;/code&gt; 정도 차이가 납니다. </entry>
    <entry key="nonscalarValueDifference">한 개 이상의 요소가 원하는 값과 대략 &lt;code&gt;{0}&lt;/code&gt; 정도 차이가 납니다. </entry>
    <entry key="missingStructField">구조체에서 필드 &lt;code&gt;{0}&lt;/code&gt;이(가) 누락되었습니다. </entry>
    <entry key="missingSeveralStructFields">구조체에서 다음 필드가 누락되었습니다: &lt;code&gt;{0}&lt;/code&gt;. </entry>
    <entry key="checkMisspelledFieldName">필드 이름 {0}의 철자를 잘못 입력했는지 확인하십시오. </entry>
    <entry key="checkMisspelledFieldNameGeneric">필드 이름의 철자를 잘못 입력했는지 확인하십시오. </entry>
    <entry key="checkFieldValue">다음 필드의 값을 확인하십시오: {0}</entry>
    <entry key="incorrectTableVariableOrder">테이블의 변수가 올바른 순서가 아닙니다. </entry>
    <entry key="tableVariableCapitalizationIssue">테이블의 변수 이름은 대/소문자를 구분합니다. 변수 이름의 대/소문자가 올바른지 확인하십시오. </entry>
    <entry key="checkTableVariableValues">테이블의 다음 변수 값을 확인하십시오: {0}</entry>
  </message>
</rsccat>
