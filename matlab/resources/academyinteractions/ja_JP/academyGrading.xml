<?xml version="1.0" encoding="UTF-8"?>
<!--Copyright 2025 The MathWorks, Inc.-->

<rsccat xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.0" locale="ja_JP" product="academyinteractions" xsi:noNamespaceSchemaLocation="../../resources/schema/msgcat.xsd">
  <message>
    <entry key="zeroth">0 番目</entry>
    <entry key="first">1 番目</entry>
    <entry key="second">2 番目</entry>
    <entry key="third">3 番目</entry>
    <entry key="fourth">4 番目</entry>
    <entry key="fifth">5 番目</entry>
    <entry key="sixth">6 番目</entry>
    <entry key="seventh">7 番目</entry>
    <entry key="eighth">8 番目</entry>
    <entry key="ninth">9 番目</entry>
    <entry key="tenth">10 番目</entry>
    <entry key="MINUS">減算演算子</entry>
    <entry key="MUL">行列乗算演算子</entry>
    <entry key="DIV">除算演算子</entry>
    <entry key="LDIV">バックスラッシュ演算子</entry>
    <entry key="EXP">指数演算子</entry>
    <entry key="DOTMUL">ドット積演算子</entry>
    <entry key="DOTDIV">ドット商演算子</entry>
    <entry key="DOTLDIV">ドット バックスラッシュ演算子</entry>
    <entry key="DOTEXP">ドット指数演算子</entry>
    <entry key="ANDAND">論理 AND 演算子</entry>
    <entry key="OROR">論理 OR 演算子</entry>
    <entry key="LT">左不等演算子</entry>
    <entry key="GT">右不等演算子</entry>
    <entry key="LE">等価左不等演算子</entry>
    <entry key="GE">等価右不等演算子</entry>
    <entry key="PLUS">加算演算子</entry>
    <entry key="AND">論理 AND 演算子</entry>
    <entry key="OR">論理 OR 演算子</entry>
    <entry key="EQ">等号演算子</entry>
    <entry key="NE">不等演算子</entry>
    <entry key="NOT">論理 NOT 演算子</entry>
    <entry key="UMINUS">単項マイナス演算子</entry>
    <entry key="UPLUS">単項プラス演算子</entry>
    <entry key="DOTTRANS">転置演算子</entry>
    <entry key="TRANS">転置演算子</entry>
    <entry key="AT">関数ハンドル演算子</entry>
    <entry key="BANG">感嘆符演算子</entry>
    <entry key="syntaxError">構文エラー。 </entry>
    <entry key="correct">正解です。 </entry>
    <entry key="incorrect">不正解です。 </entry>
    <entry key="example">例: </entry>
    <entry key="missingSingleQuotes">string &lt;code&gt;{0}&lt;/code&gt; を MATLAB 文字配列として扱うには、一重引用符 ('') で囲みます。 </entry>
    <entry key="squareBracketForArrayAccess">[] を使用して配列要素にアクセスしようとしている場合、MATLAB では () が使用されることに注意してください。 </entry>
    <entry key="shouldCallAFunction">解答では、&lt;code&gt;{0}&lt;/code&gt; 関数を使用する必要があります。 </entry>
    <entry key="shouldNotCallAFunction">解答では、&lt;code&gt;{0}&lt;/code&gt; 関数を使用する必要はありません。 </entry>
    <entry key="shouldIndexIntoVariable">解答では、&lt;code&gt;{0}&lt;/code&gt; 変数にインデックス付けする必要があります。 </entry>
    <entry key="shouldNotIndexIntoVariable">解答では、&lt;code&gt;{0}&lt;/code&gt; 変数にインデックス付けする必要はありません。 </entry>
    <entry key="shouldUseVariable">解答では、&lt;code&gt;{0}&lt;/code&gt; 変数にアクセスする必要があります。 </entry>
    <entry key="shouldNotUseVariable">解答では、&lt;code&gt;{0}&lt;/code&gt; 変数にアクセスする必要はありません。 </entry>
    <entry key="shouldModifyVariable">解答では、&lt;code&gt;{0}&lt;/code&gt; 変数を変更する必要があります。 </entry>
    <entry key="shouldNotModifyVariable">解答では、&lt;code&gt;{0}&lt;/code&gt; 変数を変更する必要はありません。 </entry>
    <entry key="shouldExtractContentFrom">解答では、中かっこを使用して &lt;code&gt;{0}&lt;/code&gt; 配列の内容を抽出する必要があります。 </entry>
    <entry key="shouldNotExtractContentFrom">解答では、&lt;code&gt;{0}&lt;/code&gt; 配列の内容を抽出する必要はありません。 </entry>
    <entry key="shouldModifyContentWithin">解答では、中かっこを使用して &lt;code&gt;{0}&lt;/code&gt; 配列の内容を変更する必要があります。 </entry>
    <entry key="shouldNotModifyContentWithin">解答では、中かっこを使用して &lt;code&gt;{0}&lt;/code&gt; 配列の内容を変更する必要があります。 </entry>
    <entry key="functionCallShouldUseParentheses">&lt;code&gt;{0}&lt;/code&gt; の呼び出しでは、かっこ &lt;code&gt;()&lt;/code&gt; を使用して引数を渡す必要があります。 </entry>
    <entry key="indexShouldUseParentheses">&lt;code&gt;{0}&lt;/code&gt; にインデックス付けする際は、かっこ &lt;code&gt;()&lt;/code&gt; を使用してみてください。 </entry>
    <entry key="indexShouldUseCurlyBraces">&lt;code&gt;{0}&lt;/code&gt; にインデックス付けする際は、中かっこ &lt;code&gt;'{''}'&lt;/code&gt; を使用してみてください。 </entry>
    <entry key="callShouldHaveDifferentNumberOfInputs">&lt;code&gt;{0}&lt;/code&gt; 関数の呼び出しには {1} 個の入力が含まれている必要があります。 </entry>
    <entry key="indexShouldHaveDifferentNumberOfInputs">&lt;code&gt;{0}&lt;/code&gt; へのインデックス付けでは、{1} 個の入力を使用することを検討してください。 </entry>
    <entry key="inputsAreIncorrect">&lt;code&gt;{0}&lt;/code&gt; への入力が正しくありません。 </entry>
    <entry key="inputWasExpectedToBeDifferent">{0}の入力は値は &lt;code&gt;{1}&lt;/code&gt; でなければなりません。 </entry>
    <entry key="inputArgumentIsNotInCorrectSpot">&lt;code&gt;{0}&lt;/code&gt; は、{2}ではなく {1}の入力である必要があります。 </entry>
    <entry key="noNeedToObtainMultipleOutputArguments">解答では、複数の出力を取得する必要はありません。 </entry>
    <entry key="shouldObtainMultipleOutputArguments">大かっこ (&lt;code&gt;[]&lt;/code&gt;) を使用して、複数の出力を取得してみてください。 </entry>
    <entry key="noNeedToManuallyCreateArray">解答では、大かっこ (&lt;code&gt;[]&lt;/code&gt;) を使用して手動で配列を作成する必要はありません。 </entry>
    <entry key="shouldManuallyCreateArray">大かっこを使用して、配列を手動で入力してみてください (&lt;code&gt;[3 5 8]&lt;/code&gt;) 。 </entry>
    <entry key="noNeedToRemoveArrayElements">解答では、配列要素を削除する必要はありません (&lt;code&gt;... = []&lt;/code&gt;)。 </entry>
    <entry key="shouldRemoveArrayElements">空の配列に代入して (&lt;code&gt;... = []&lt;/code&gt;) 配列要素を削除してみてください。 </entry>
    <entry key="noNeedToCreateAnEmptyArray">解答では、空の配列 (&lt;code&gt;[]&lt;/code&gt;) を作成する必要はありません。 </entry>
    <entry key="shouldCreateAnEmptyArray">解答では、空の配列 (&lt;code&gt;[]&lt;/code&gt;) を使用してみてください。 </entry>
    <entry key="noNeedToManuallyCreateCellArray">解答では、中かっこ (&lt;code&gt;'{''}'&lt;/code&gt;) を使用して手動で cell 配列を作成する必要はありません。 </entry>
    <entry key="shouldManuallyCreateCellArray">中かっこを使用して、手動で cell 配列を作成してみてください (&lt;code&gt;'{'3 'foo' 8'}'&lt;/code&gt;)。 </entry>
    <entry key="noNeedToCreateEmptyCellArray">解答では、空の cell 配列 (&lt;code&gt;'{''}'&lt;/code&gt;) を作成する必要はありません。 </entry>
    <entry key="shouldCreateEmptyCellArray">解答では、空の cell 配列 (&lt;code&gt;'{''}'&lt;/code&gt;) を使用してみてください。 </entry>
    <entry key="incorrectUseOfMultipleOutputArgs">出力引数式が正しくないようです。 </entry>
    <entry key="incorrectUseOfManuallyCreatingArrays">大かっこ (&lt;code&gt;[]&lt;/code&gt;) を使用して作成した配列が正しくないようです。 </entry>
    <entry key="incorrectUseOfRemovingArrayElements">配列要素の削除方法に問題があります。 </entry>
    <entry key="incorrectUseOfCreatingEmptyArray">空の配列の作成方法に問題があります。 </entry>
    <entry key="incorrectUseOfManuallyCreatingCellArrays">中かっこ (&lt;code&gt;'{''}'&lt;/code&gt;) を使用して作成した cell 配列が正しくないようです。 </entry>
    <entry key="incorrectUseOfCreatingEmptyCellArray">空の cell 配列の作成方法に問題があります。 </entry>
    <entry key="expectedMRows">{0} 行なければなりません。 </entry>
    <entry key="rowSeparationTip">セミコロン (&lt;code&gt;;&lt;/code&gt;) を使用して行を区切ることができます。 </entry>
    <entry key="expectedNColumns">{0}の行には {1} 列なければなりません。 </entry>
    <entry key="columnSeparationTip">コンマ (&lt;code&gt;,&lt;/code&gt;) またはスペースを使用して列を区切ることができます。 </entry>
    <entry key="expectedDifferentRowArgument">{1}の行の {0}の値は &lt;code&gt;{2}&lt;/code&gt; でなければなりません。 </entry>
    <entry key="switchedArgumentOrderInRow">{0}の行の &lt;code&gt;{1}&lt;/code&gt; は {2}の引数でなければなりません。 </entry>
    <entry key="shouldNotUseColon">解答では、コロン (&lt;code&gt;:&lt;/code&gt;) 演算子を使用する必要はありません。 </entry>
    <entry key="useColonToAccessAllElements">コロン演算子 (&lt;code&gt;{0}&lt;/code&gt;) を使用して、配列のすべての要素にアクセスしてみてください。 </entry>
    <entry key="useColonToAccessAllRows">コロン演算子 (&lt;code&gt;{0}&lt;/code&gt;) を使用して、すべての行にアクセスしてみてください。 </entry>
    <entry key="useColonToAccessAllColumns">コロン演算子 (&lt;code&gt;{0}&lt;/code&gt;) を使用して、すべての列にアクセスしてみてください。 </entry>
    <entry key="useColonToAccessAllElementsOfADimension">コロン演算子 (&lt;code&gt;{0}&lt;/code&gt;) を使用して、特定の次元のすべての要素にアクセスしてみてください。 </entry>
    <entry key="useColonToCreateVector">コロン演算子 (&lt;code&gt;{0}&lt;/code&gt;) を使用して、ベクトルを作成してみてください。 </entry>
    <entry key="needToUseALoneColon">添字の中で単一のコロン (&lt;code&gt;{0}&lt;/code&gt;) を使用して、すべての行または列を選択してください。 </entry>
    <entry key="needToSpecifyInitialAndFinalValue">ベクトルの最初の値と最後の値をコロン (&lt;code&gt;{0}&lt;/code&gt;) 演算子で指定する必要があります。 </entry>
    <entry key="badStartValueInColonExpression">ベクトルの最初の値は &lt;code&gt;{0}&lt;/code&gt; でなければなりません。 </entry>
    <entry key="badSpacingValueInColonExpression">ベクトルの間隔は &lt;code&gt;{0}&lt;/code&gt; でなければなりません。 </entry>
    <entry key="badEndValueInColonExpression">ベクトルの最後の値は &lt;code&gt;{0}&lt;/code&gt; でなければなりません。 </entry>
    <entry key="unnecessaryStatement">解答では、&lt;code&gt;{0}&lt;/code&gt; ステートメントを使用する必要はありません。 </entry>
    <entry key="missingStatement">解答では、&lt;code&gt;{0}&lt;/code&gt; ステートメントを使用してください。 </entry>
    <entry key="noNeedToUseDotOperator">解答では、ドット演算子 (&lt;code&gt;a.b&lt;/code&gt;) を使用する必要はありません。 </entry>
    <entry key="shouldUseDotOperator">解答では、ドット演算子 (&lt;code&gt;a.b&lt;/code&gt;) を使用してみてください。 </entry>
    <entry key="useDotOperatorOnVariable">解答では、変数 &lt;code&gt;{0}&lt;/code&gt; のフィールドを参照する必要があります (ドット演算子を使用してみてください)。</entry>
    <entry key="checkVariableNameCapitalization">変数名の大文字と小文字の区別を確認してください。 </entry>
    <entry key="useDotOperatorForField">ドット演算子 (&lt;code&gt;.&lt;/code&gt;) を使用してプロパティ &lt;code&gt;{0}&lt;/code&gt; を参照してください。 </entry>
    <entry key="noAssignmentNecessary">解答では、値を出力変数に代入する必要はありません。 </entry>
    <entry key="shouldUseAssignment">解答では、値を &lt;code&gt;{0}&lt;/code&gt; に代入する必要があります。 </entry>
    <entry key="valueAssignedIncorrect">代入された値が正しくありません。 </entry>
    <entry key="wrongVariableInAssignment">解答では、値を &lt;code&gt;{0}&lt;/code&gt; に代入する必要があります。 </entry>
    <entry key="switchedAssignmentOrder">代入の入力が入れ替わっています。それらは &lt;code&gt;{0}&lt;/code&gt; でなければなりません。 </entry>
    <entry key="valueBeingAssignedShouldBeOutput">代入される値 ( &lt;code&gt;{0}&lt;/code&gt; ) は出力引数でなければなりません。 </entry>
    <entry key="outputShouldBeValueBeingAssigned">代入 ( &lt;code&gt;{0}&lt;/code&gt; ) において、出力引数は代入する側ではなく、代入される側でなければなりません。 </entry>
    <entry key="anonymousFunction">無名関数</entry>
    <entry key="anonymousFunctionUnnecessary">解答では、{0} を使用する必要はありません。 </entry>
    <entry key="tryUsingAnonymousFunction">解答では、{0} を使用してみてください。 </entry>
    <entry key="anonFunctionHasWrongNumInputs">無名関数には {0} 個の入力が含まれていなければなりません。 </entry>
    <entry key="noNeedToUseOperator">解答では、{0} (&lt;a target="_blank" href="{1}"&gt;{2}&lt;/a&gt;) を使用する必要はありません。 </entry>
    <entry key="shouldUseOperator">解答では、{0} (&lt;a target="_blank" href="{1}"&gt;{2}&lt;/a&gt;) を使用する必要があります。 </entry>
    <entry key="left">左</entry>
    <entry key="right">右</entry>
    <entry key="badOperatorArgument">{1} への {0}の入力は &lt;code&gt;{2}&lt;/code&gt; でなければなりません。 </entry>
    <entry key="switchedBothOperatorArguments">{0} への入力が入れ替わっています。それらは &lt;code&gt;{1}&lt;/code&gt; でなければなりません。 </entry>
    <entry key="switchedOneOperatorArgument">{1} への {0}の入力 ( &lt;code&gt;{2}&lt;/code&gt; ) は {3}の入力でなければなりません。 </entry>
    <entry key="shouldUseInt">解答では、値が &lt;code&gt;{0}&lt;/code&gt; の整数が含まれている必要があります。 </entry>
    <entry key="noNeedToUseInt">解答では、値が &lt;code&gt;{0}&lt;/code&gt; の整数が含まれている必要はありません。 </entry>
    <entry key="shouldUseDouble">解答では、値が &lt;code&gt;{0}&lt;/code&gt; の数値が含まれている必要があります。 </entry>
    <entry key="noNeedToUseDouble">解答では、値が &lt;code&gt;{0}&lt;/code&gt; の数値が含まれている必要はありません。 </entry>
    <entry key="shouldUseString">解答では、値が &lt;code&gt;{0}&lt;/code&gt; の文字配列が含まれている必要があります。 </entry>
    <entry key="noNeedToUseString">解答では、値が &lt;code&gt;{0}&lt;/code&gt; の文字配列が含まれている必要はありません。 </entry>
    <entry key="shouldUseId">解答では、識別子 &lt;code&gt;{0}&lt;/code&gt; への参照が含まれている必要があります。 </entry>
    <entry key="noNeedToUseId">解答では、識別子 &lt;code&gt;{0}&lt;/code&gt; への参照が含まれている必要はありません。 </entry>
    <entry key="variableHasIncorrectDimensions">変数 &lt;code&gt;{0}&lt;/code&gt; の次元数が正しくありません。 &lt;br/&gt;必要なサイズ: [{1}] &lt;br/&gt;実際のサイズ: [{2}]</entry>
    <entry key="variableHasIncorrectDataType">変数 &lt;code&gt;{0}&lt;/code&gt; のデータ型が正しくありません。 &lt;br/&gt;必要な型: [{1}] &lt;br/&gt;実際の型: [{2}]</entry>
    <entry key="variableIsIncorrect">変数 &lt;code&gt;{0}&lt;/code&gt; が正しくないようです。 </entry>
    <entry key="checkCapitalizationOfCharacters">string &lt;code&gt;{0}&lt;/code&gt; の各文字の大文字と小文字の区別を確認してください。 </entry>
    <entry key="stateDesiredValue">&lt;code&gt;{0}&lt;/code&gt; の望ましい値: {1} &lt;br/&gt;実際の値: {2}</entry>
    <entry key="variableWasNotCreated">変数 &lt;code&gt;{0}&lt;/code&gt; が作成されませんでした。 </entry>
    <entry key="checkMisspelledVariableName">変数名 &lt;code&gt;{0}&lt;/code&gt; のスペルが間違っていないか確認してください。 </entry>
    <entry key="scalarValueDifference">値が、望ましい値から &lt;code&gt;{0}&lt;/code&gt; の単位で離れています。 </entry>
    <entry key="nonscalarValueDifference">1 つ以上の要素が、望ましい値から &lt;code&gt;{0}&lt;/code&gt; の単位で離れています。 </entry>
    <entry key="missingStructField">フィールド &lt;code&gt;{0}&lt;/code&gt; が構造体にありません。 </entry>
    <entry key="missingSeveralStructFields">次のフィールドが構造体にありません: &lt;code&gt;{0}&lt;/code&gt;。 </entry>
    <entry key="checkMisspelledFieldName">フィールド名 {0} のスペルが間違っていないか確認してください。 </entry>
    <entry key="checkMisspelledFieldNameGeneric">いずれかのフィールド名のスペルが間違っていないか確認してください。 </entry>
    <entry key="checkFieldValue">フィールドの値を確認してください: {0}</entry>
    <entry key="incorrectTableVariableOrder">table の変数の順序が正しくありません。 </entry>
    <entry key="tableVariableCapitalizationIssue">table の変数名は大文字と小文字を区別します。変数名の大文字と小文字の区別が適切であることを確認してください。 </entry>
    <entry key="checkTableVariableValues">table の次の変数の値を確認してください: {0}</entry>
  </message>
</rsccat>
