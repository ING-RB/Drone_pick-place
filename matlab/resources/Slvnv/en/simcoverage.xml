<?xml version="1.0" encoding="UTF-8"?>
<!-- Copyright 2009-2024 The MathWorks, Inc. -->
<rsccat xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.0" locale="en_US" product="Slvnv" xsi:noNamespaceSchemaLocation="../../schema/msgcat.xsd">
  <message>
    <entry key="ignoreArgument">Too many input arguments, ignoring argument {0}</entry>
    <entry key="subsysSelTitle">Subsystem Selection</entry>
    <entry key="coverageTab">Coverage</entry>
    <entry key="resultsTab">Results</entry>
    <entry key="subSysBrowse">Select Subsystem...</entry>
    <entry key="modelRefEnable">Coverage for referenced models</entry>
    <entry key="modelRefBrowse">Select Models...</entry>
    <entry key="groupMetrics">Coverage metrics</entry>
    <entry key="options">Options</entry>
	<entry key="RepOptShowReport">Show report</entry>	
	<entry key="RepOptGenerateWebViewReport">Generate Web View Report</entry>
	<entry key="RepOptEachTest">Include each test in the model summary</entry>	
	<entry key="RepOptAggregatedTests">Show aggregated tests information</entry>	
    <entry key="RepOptBarGraphs">Produce bar graphs in the model summary</entry>		
	<entry key="RepOptTwoColorGraphs">Use two color bar graphs (red,blue)</entry>		
    <entry key="RepOptNoFullCoverage">Exclude fully covered model objects from report</entry>		
    <entry key="RepOptNoFullCoverageDetails">Exclude fully covered model object details from report</entry>		
    <entry key="RepOptDisplayRatio">Display hit/count ratio in the model summary</entry>		
	<entry key="RepOptCycInSummary">Include cyclomatic complexity numbers in summary</entry>		
	<entry key="RepOptCycInDetails">Include cyclomatic complexity numbers in block details</entry>		
	<entry key="RepOptFilterEvents">Filter Stateflow events from report</entry>		
    <entry key="RepOptFilterExec">Filter Execution metric from report</entry>		
    <entry key="RepOptShowReqTable">Include linked requirements in aggregated coverage report</entry>
	<entry key="TimeWindow">Restrict recording to interval</entry>		
	<entry key="StartTime">Start time:</entry>		
	<entry key="StopTime">Stop time:</entry>		
    <entry key="BoundaryTolerance">Boundary Tolerance</entry>		
	<entry key="RelativeTolerance">Relative</entry>		
	<entry key="AbsoluteTolerance">Absolute</entry>		
    <entry key="htmlReport">Generate report</entry>
    <entry key="htmlSettings">Settings</entry>
	<entry key="htmlReport1">Detailed Report</entry>
	<entry key="htmlReport2">Model Web View</entry>
    <entry key="covEnableCumulative">Enable cumulative data collection</entry>
    <entry key="covCompData">Additional data to include in report (cvdata objects):</entry>
    <entry key="saveCumulativeToWorkspaceVar">Save cumulative results in workspace variable</entry>
    <entry key="cumulativeVarName">cvdata object name:</entry>
    <entry key="saveSingleToWorkspaceVar">Save last run in workspace variable</entry>
    <entry key="covSaveName">cvdata object name:</entry>
    <entry key="incVarName">Increment variable name with each simulation (var1, var2, ...)</entry>
    <entry key="Output">Output</entry>
    <entry key="showResultsViewer">Show Results Viewer</entry>
    <entry key="covOutputDir">Output folder:</entry>
    <entry key="covSaveOutputData">Save coverage data to file</entry>
    <entry key="covDataFileName">Data file name:</entry>
    <entry key="covReportOnPause">Update results on pause</entry>
    <entry key="modelDisplay">Display coverage results using model coloring</entry>
    <entry key="logicBlkShortcircuit">Treat Simulink logic blocks as short-circuited</entry>
    <entry key="checkUnsupportedBlocks">Warn when unsupported blocks exist in model</entry>
    <entry key="forceBlockReductionOff">Force block reduction off</entry>
    <entry key="decisionMetric">Decision</entry>
    <entry key="conditionMetric">Condition</entry>
    <entry key="mcdcMetric" translate="false" note="TranslateFalseBatch;">MCDC</entry>
    <entry key="tableMetric">Lookup Table</entry>
    <entry key="sigrangeMetric">Signal Range</entry>
    <entry key="sigsizeMetric">Signal Size</entry>
    <entry key="sldvMetric" translate="false" note="TranslateFalseBatch;">Simulink Design Verifier</entry>
    <entry key="overflowMetric">Saturation on integer overflow</entry>
    <entry key="relationalBoundaryMetric">Relational Boundary</entry>
	<entry key="blockCoverageMetric">Execution</entry>
    <entry key="lineCoverageMetric">Line Coverage</entry>
    <entry key="simscapeModeMetric">Simscape Mode</entry>
    <entry key="TestObjective" translate="false" note="TranslateFalseBatch;">Test Objective</entry>
    <entry key="ProofObjective" translate="false" note="TranslateFalseBatch;">Proof Objective</entry>
    <entry key="TestCondition" translate="false" note="TranslateFalseBatch;">Test Condition</entry>
    <entry key="ProofAssumption" translate="false" note="TranslateFalseBatch;">Proof Assumption</entry>
    <entry key="mdlRefUITitle">Select Models for Coverage Analysis</entry>
    <entry key="mdlRefUILegacyInstructions"><![CDATA[
              <p>To enable or disable coverage for a model, select or clear the check box next to the model''s name.</p>
              <p>To enable or disable coverage for all models in a hierarchy,
              right-click the topmost model in the hierarchy and then select <B>Select All</B> or <B>Deselect All</B>.
              Right-click a model and select <B>Open</B> to open that model.</p>
              <p>Note that you can record model coverage for models that operate in Normal mode or code coverage 
              for models that operate in Software-in-the-Loop (SIL) or Processor-in-the-Loop (PIL) modes. 
              You cannot enable coverage for models whose <B>Simulation mode</B> parameter specifies ''Accelerator''.</p>
              <p>For more information, click Help.</p>
    ]]></entry>
    <entry key="mdlRefUIInstructions"><![CDATA[
              <p>To enable or disable coverage for a model, select or clear the check box next to the model name.</p>
              <p>To enable or disable coverage for all models in a hierarchy,
              right-click the top model in the hierarchy and then select <B>Select All</B> or <B>Deselect All</B>.
              Right-click a model and select <B>Open</B> to open that model.</p>
              <p>You can collect model coverage for models in normal or accelerator simulation mode. 
              You can collect code coverage for models in software-in-the-loop (SIL) or processor-in-the-loop (PIL) simulation mode.
              You cannot collect model coverage for a referenced model in both normal and accelerator mode in one simulation.</p>
              <p>For more information, click Help.</p>
    ]]></entry>
    <entry key="mdlRefUIOpenCallback"><![CDATA[&Open]]></entry>
    <entry key="mdlRefUIOpenTooltip">Open</entry>
    <entry key="mdlRefUISelectAllCallback"><![CDATA[&Select All]]></entry>
    <entry key="mdlRefUISelectAllTooltip">Enable All</entry>
    <entry key="mdlRefUIDeselectAllCallback"><![CDATA[&Deselect All]]></entry>
    <entry key="mdlRefUIDeselectAllTooltip">Disable All</entry>
    <entry key="covFilterModelTab">Model</entry>
    <entry key="covFilterCodeTab">Code</entry>
    <entry key="covFilterCodeFileExcludedDesc">The file "{0}" and all its contents are excluded</entry>
    <entry key="covFilterCodeFileJustifiedDesc">The file "{0}" and all its contents are justified</entry>
    <entry key="covFilterCodeFunExcludedDesc">The function "{0}" and all its contents are excluded\n(in file "{1}")</entry>
    <entry key="covFilterCodeFunJustifiedDesc">The function "{0}" and all its contents are justified\n(in file "{1}")</entry>
    <entry key="covFilterCodeDecExcludedDesc">The decision expression "{0}" is excluded\n(in file "{1}", function "{2}")</entry>
    <entry key="covFilterCodeDecJustifiedDesc">The decision expression "{0}" is justified\n(in file "{1}", function "{2}")</entry>
    <entry key="covFilterCodeDecOutcomeJustifiedDesc">The decision outcome {3} in expression "{0}" is justified\n(in file "{1}", function "{2}")</entry>
    <entry key="covFilterCodeCondExcludedDesc">The condition expression "{0}" is excluded\n(in file "{1}", function "{2}")</entry>
    <entry key="covFilterCodeCondJustifiedDesc">The condition expression "{0}" is justified\n(in file "{1}", function "{2}")</entry>
    <entry key="covFilterCodeCondOutcomeJustifiedDesc">The condition outcome {3} in expression "{0}" is justified\n(in file "{1}", function "{2}")</entry>
    <entry key="covFilterCodeDecCondOutcomeJustifiedDesc">The outcome {3} of condition {4} in expression "{0}" is justified\n(in file "{1}", function "{2}")</entry>
    <entry key="covFilterCodeMCDCOutcomeJustifiedDesc">The MCDC condition {3} in expression "{0}" is justified\n(in file "{1}", function "{2}")</entry>
    <entry key="covFilterCodeRelBoundOutcomeJustifiedDesc">The relational boundary outcome {3} in expression "{0}" is justified\n(in file "{1}", function "{2}")</entry>
    <entry key="covFilterCodeCondRelBoundOutcomeJustifiedDesc">The relational boundary outcome {3} of condition {4} in expression "{0}" is justified\n(in file "{1}", function "{2}")</entry>
    <entry key="covFilterSFunCodeFileExcludedDesc">S-function ''{1}'':\nthe file "{0}" and all its contents are excluded</entry>
    <entry key="covFilterSFunCodeFileJustifiedDesc">S-function ''{1}'':\nthe file "{0}" and all its contents are justified</entry>
    <entry key="covFilterSFunCodeFunExcludedDesc">S-function ''{2}'':\nthe function "{0}" and all its contents are excluded\n(in file "{1}")</entry>
    <entry key="covFilterSFunCodeFunJustifiedDesc">S-function ''{2}'':\nthe function "{0}" and all its contents are justified\n(in file "{1}")</entry>
    <entry key="covFilterSFunCodeDecExcludedDesc">S-function ''{3}'':\nthe decision expression "{0}" is excluded\n(in file "{1}", function "{2}")</entry>
    <entry key="covFilterSFunCodeDecJustifiedDesc">S-function ''{3}'':\nthe decision expression "{0}" is justified\n(in file "{1}", function "{2}")</entry>
    <entry key="covFilterSFunCodeDecOutcomeJustifiedDesc">S-function ''{3}'':\nthe decision outcome {4} in expression "{0}" is justified\n(in file "{1}", function "{2}")</entry>
    <entry key="covFilterSFunCodeCondExcludedDesc">S-function ''{3}'':\nthe condition expression "{0}" is excluded\n(in file "{1}", function "{2}")</entry>
    <entry key="covFilterSFunCodeCondJustifiedDesc">S-function ''{3}'':\nthe condition expression "{0}" is justified\n(in file "{1}", function "{2}")</entry>
    <entry key="covFilterSFunCodeCondOutcomeJustifiedDesc">S-function ''{3}'':\nthe condition outcome {4} in expression "{0}" is justified\n(in file "{1}", function "{2}")</entry>
    <entry key="covFilterSFunCodeDecCondOutcomeJustifiedDesc">S-function ''{3}'':\nthe outcome {4} of condition {5} in expression "{0}" is justified\n(in file "{1}", function "{2}")</entry>
    <entry key="covFilterSFunCodeMCDCOutcomeJustifiedDesc">S-function ''{3}'':\nthe MCDC condition {4} in expression "{0}" is justified\n(in file "{1}", function "{2}")</entry>
    <entry key="covFilterSFunCodeRelBoundOutcomeJustifiedDesc">S-function ''{3}'':\nthe relational boundary outcome {4} in expression "{0}" is justified\n(in file "{1}", function "{2}")</entry>
    <entry key="covFilterSFunCodeCondRelBoundOutcomeJustifiedDesc">S-function ''{3}'':\nthe relational boundary outcome {4} of condition {5} in expression "{0}" is justified\n(in file "{1}", function "{2}")</entry>
    <entry key="covFilterUnsupportedCodeSelector">Unsupported code selector {0}.</entry>
    <entry key="covFilterTab">Filter</entry>
    <entry key="covFilterOpenInEditor">Open in Filter Viewer</entry>
    <entry key="covFilterUITitle">Coverage Filter Viewer in context of</entry>
    <entry key="covFilterNewRuleHelp">Add new rule by right clicking in the model</entry>
    <entry key="covFilterViewInModel">View in model</entry>
    <entry key="covFilterAttachToModel">Attach file to model</entry>
    <entry key="covFilterUpdateReport">Update Report</entry>
    <entry key="covFilterAttachToData">Attach to current data</entry>
    <entry key="covFilterFilename">Filename:</entry>
    <entry key="covFilterRules">Rules</entry>
    <entry key="covFilterSave">Save</entry>
    <entry key="covFilterBrowse">Browse...</entry>
    <entry key="covFilterRemoveRule">Remove rule</entry>
    <entry key="covFilterPropertyValue">Name</entry>
    <entry key="covFilterRationale">Rationale</entry>
    <entry key="covFilterPropertyType">Type</entry>
    <entry key="covFilterEditRationaleText">(double-click here to edit rationale)</entry>
    <entry key="covFilterSelectedRule">Selected rule</entry>
    <entry key="covMenusExplorer">Open Results Explorer</entry>
    <entry key="covMenusCoverageSettings">Co&amp;verage Settings</entry>
    <entry key="covMenusCoverage">&amp;Coverage</entry>
    <entry key="covMenusFilterParent">Show filtering parent</entry>
    <entry key="covMenusShowFilterViewer">Open Filter Explorer</entry>
    <entry key="covMenusRemoveFilter">Remove from filter</entry>
    <entry key="covMenusAddFilter">Exclude {0}</entry>    
    <entry key="covMenusReport">Report</entry>    
    <entry key="covMenusMouseOver">Display details on mouse-over</entry>    
    <entry key="covMenusMouseClick">Display details on mouse click</entry>
    <entry key="covMenusRemoveInfo">Remove Highlighting</entry>    
    <entry key="covMenusSettings">Settings...</entry>  
<!--Resource entries for toolbox/slvnv-->
    <entry key="decisionMetricExplanation">Record the execution of model decisions</entry>
    <entry key="conditionMetricExplanation">Record the execution of conditions, the predicates used in decisions and boolean equations</entry>
    <entry key="mcdcMetricExplanation">Record the execution of conditional combinations used within boolean equations</entry>
    <entry key="tableMetricExplanation">Record the execution of table lookups to determine the frequency of each interpolation interval</entry>
    <entry key="sigrangeMetricExplanation">Record the maximum and minimum values assigned to signals and Stateflow variables</entry>
    <entry key="sigsizeMetricExplanation">Record the maximum and minimum values of signal sizes and Stateflow variables</entry>
    <entry key="sldvMetricExplanation">Record the execution of Design Verifier objectives</entry>
    <entry key="overflowMetricExplanation">Record saturation on integer overflow</entry>
    <entry key="blockCoverageMetricExplanation">Record block coverage</entry>
    <entry key="simscapeModeCoverageMetricExplanation">Record coverage for simscape mode</entry>
    <entry key="relationalBoundaryMetricExplanation">Record relational operator coverage</entry>
  </message>
</rsccat>
