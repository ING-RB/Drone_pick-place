<?xml version="1.0" encoding="UTF-8"?>
<!--Copyright 2025 The MathWorks, Inc.-->

<rsccat xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.0" locale="ja_JP" product="vision" xsi:noNamespaceSchemaLocation="../../resources/schema/msgcat.xsd">
  <message>
    <entry key="BlobAnalysisDescription">バイナリ イメージ BW 内の連結領域について、統計値を計算します。</entry>
    <entry key="DataTypesTab"> [統計出力のデータ型] パラメーターが double または single に設定されている場合、\n固定小数点パラメーターは適用できません。</entry>
    <entry key="NoteAreaAndBoundingBoxOutputs">メモ: [面積] と [境界ボックス] の出力データ型は int32 となります。[長軸の長さ]、[短軸の長さ]、[方向] および [離心率] は、固定小数点モードでは利用できません。</entry>
    <entry key="NoteAreaAndBoundingBoxOutputs1">メモ: [面積] と [境界ボックス] の出力データ型は int32 となります。</entry>
    <entry key="SpecifyMinimumBlobAreaInPixels">最小ブロブの面積をピクセル単位で指定:</entry>
    <entry key="SpecifyMinimumBlobAreaInPixels1">最小ブロブの面積をピクセル単位で指定</entry>
    <entry key="SpecifyMaximumBlobAreaInPixels">最大ブロブの面積をピクセル単位で指定:</entry>
    <entry key="SpecifyMaximumBlobAreaInPixels1">最大ブロブの面積をピクセル単位で指定</entry>
    <entry key="BlobProperties">ブロブ プロパティ</entry>
    <entry key="Area">面積</entry>
    <entry key="Centroid">重心</entry>
    <entry key="BoundingBox">境界ボックス</entry>
    <entry key="MajorAxisLength">長軸の長さ</entry>
    <entry key="MinorAxisLength">短軸の長さ</entry>
    <entry key="Orientation">方向</entry>
    <entry key="Eccentricity">離心率</entry>
    <entry key="EquivalentDiameterSquared">相当直径の 2 乗</entry>
    <entry key="Extent">割合</entry>
    <entry key="Perimeter">周囲長</entry>
    <entry key="StatisticsOutputDataType">統計出力のデータ型:</entry>
    <entry key="Connectivity">連結性:</entry>
    <entry key="OutputLabelMatrix">ラベル行列の出力</entry>
    <entry key="MaximumNumberOfBlobs">最大ブロブ数:</entry>
    <entry key="WarnIfMaximumNumberOfBlobs">最大ブロブ数を超えた場合に警告</entry>
    <entry key="OutputNumberOfBlobsFound">検出されたブロブの数を出力</entry>
    <entry key="ExcludeBlobsTouchingImageBorder">イメージ境界に接しているブロブを除外</entry>
    <entry key="OutputBlobStatisticsAsAVariable">ブロブ統計を可変サイズ信号として出力</entry>
    <entry key="FillEmptySpacesInOutputs">出力の空白部分を塗りつぶす</entry>
    <entry key="FillValues">塗りつぶしの値:</entry>
    <entry key="Statistics">統計</entry>
    <entry key="LabelParameters">ラベル パラメーター</entry>
    <entry key="Parameters">パラメーター</entry>
    <entry key="ProductOutput">乗算出力</entry>
    <entry key="Accumulator">アキュムレータ</entry>
    <entry key="CentroidOutput">重心出力</entry>
    <entry key="EquivDiam2Output">相当直径の 2 乗出力</entry>
    <entry key="ExtentOutput">割合出力</entry>
    <entry key="PerimeterOutput">周囲長出力</entry>
    <entry key="SpecifyViaDataTypesTab">[データ型] タブで指定</entry>
    <entry key="NoDataTypesblob">[統計出力のデータ型] パラメーターが double または single に設定されている場合、固定小数点パラメーターは適用できません。</entry>
    <entry key="ThresholdingOperator">しきい値処理演算子:</entry>
    <entry key="OutputThreshold">しきい値の出力</entry>
    <entry key="OutputEffectivenessMetric">有効性メトリクスの出力</entry>
    <entry key="SpecifyDataRange">データ範囲の指定</entry>
    <entry key="MinimumValueOfInput">入力の最小値:</entry>
    <entry key="MaximumValueOfInput">入力の最大値:</entry>
    <entry key="WhenDataRangeIsExceeded">データ範囲を超えた場合:</entry>
    <entry key="ScaleThreshold">しきい値のスケーリング</entry>
    <entry key="ScaleThreshold_MP">しきい値のスケーリング:</entry>
    <entry key="ThresholdScalingFactor">しきい値のスケーリング係数:</entry>
    <entry key="Ignore">無視</entry>
    <entry key="Saturate">飽和</entry>
    <entry key="WarnAndSaturate">警告と飽和</entry>
    <entry key="Error">エラー</entry>
    <entry key="Product1">乗算器 1</entry>
    <entry key="Product2">乗算器 2</entry>
    <entry key="Product3">乗算器 3</entry>
    <entry key="Product4">乗算器 4</entry>
    <entry key="Accumulator1">アキュムレータ 1</entry>
    <entry key="Accumulator2">アキュムレータ 2</entry>
    <entry key="Accumulator3">アキュムレータ 3</entry>
    <entry key="Accumulator4">アキュムレータ 4</entry>
    <entry key="EffMetric">有効性メトリクス</entry>
    <entry key="Quotient">商</entry>
    <entry key="OpenDataTypeDiagram">データ型ダイアグラムを開く</entry>
    <entry key="SameAs">{0} と同じ</entry>
    <entry key="SameAsProduct1">乗算器 1 と同じ</entry>
    <entry key="SameAsProduct2">乗算器 2 と同じ</entry>
    <entry key="SameAsProduct3">乗算器 3 と同じ</entry>
    <entry key="SameAsProduct4">乗算器 4 と同じ</entry>
    <entry key="AutoThresholdDescription">強度イメージをバイナリ イメージに自動変換します。このブロックでは Otsu 法が使用されています。Otsu 法では、各ピクセル グループの分散が最小限になるように入力イメージのヒストグラムを分割することで、しきい値を決定します。\n\nオプションとして、ブロックはメトリクスの出力により、入力イメージのしきい値処理の有効性を示すことができます。メトリクスが下限値 (0) になるのは、単一のグレー レベルをもつイメージのみであり、上限値 (1) になるのは 2 値イメージのみです。</entry>
    <entry key="AutocorrelationDescription">入力行列の 2 次元自己相関を計算します。</entry>
    <entry key="NoMainTabParamsDescription">このブロックに指定するメイン パラメーターはありません。</entry>
    <entry key="BlockMatchingDescription">ブロック マッチング法を使用して、2 つのイメージ間または 2 つのビデオ フレーム間の動きを推定します。</entry>
    <entry key="TwoImages">2 つのイメージ</entry>
    <entry key="Exhaustive">網羅</entry>
    <entry key="MeanSquareErrorMSE">平均二乗誤差 (MSE)</entry>
    <entry key="HorizontalAndVerticalComponentsI">複素数形式の水平成分と垂直成分</entry>
    <entry key="CurrentFrameAndNthFrameBack">現在のフレームと N 個前のフレーム</entry>
    <entry key="Threestep">3 ステップ</entry>
    <entry key="MeanAbsoluteDifferenceMAD">平均絶対差 (MAD)</entry>
    <entry key="Magnitudesquared">振幅の 2 乗</entry>
    <entry key="EstimateMotionBetween">次の間の動きを推定:</entry>
    <entry key="SearchMethod">探索方法:</entry>
    <entry key="BlockMatchingCriteria">ブロックのマッチング条件:</entry>
    <entry key="BlockSizeheightWidth">ブロック サイズ [height width]:</entry>
    <entry key="OverlaprC">オーバーラップ [r c]:</entry>
    <entry key="MaximumDisplacementrC">最大変位 [r c]:</entry>
    <entry key="VelocityOutput">速度出力:</entry>
    <entry key="Output">出力</entry>
    <entry key="Operation">演算: </entry>
    <entry key="OpacityFactorsSource">不透明度係数のソース:</entry>
    <entry key="MaskSource">マスクのソース:</entry>
    <entry key="OpacityFactors">不透明度係数:</entry>
    <entry key="Mask">マスク:</entry>
    <entry key="LocationSource">場所のソース:</entry>
    <entry key="LocationxY">場所 [x y]:</entry>
    <entry key="FixedpointParameters">固定小数点パラメーターは、[演算] パラメーターが [ブレンド] に設定されている場合にのみ適用できます。</entry>
    <entry key="Blend">ブレンド</entry>
    <entry key="SpecifyViaDialog">ダイアログにより指定</entry>
    <entry key="BinaryMask">バイナリ マスク</entry>
    <entry key="InputPort">入力端子</entry>
    <entry key="HighlightSelectedPixels">選択したピクセルの強調表示</entry>
    <entry key="OpacityFactor">不透明度係数</entry>
    <entry key="CompositingDescription">2 つのイメージのピクセル値を組み合わせるか、一方のイメージを他方に重ね合わせるか、あるいは選択したピクセルを強調表示します。\n\n[演算] パラメーターに [ブレンド] を選択する場合は、[不透明度係数] パラメーターを使用して、ブロックが Image2 のピクセル値をどれだけスケーリングするかを定義し、その後 Image1 のピクセル値と組み合わせます。このパラメーターは、ブロックがすべてのピクセルに使用するスカラー値にするか、各ピクセルの係数を定義する値の行列にすることができます。\n\n[演算] パラメーターに [バイナリ マスク] を選択する場合は、マスク係数パラメーターを使用して、Image1 のどのピクセルが Image2 のピクセル値によって上書きされるかを定義できます。このパラメーターは、ブロックがすべてのピクセルに使用するスカラー値にするか、各ピクセルの係数を定義する値の行列にすることができます。</entry>
    <entry key="FullInputDataRangeminMax">入力データの全範囲 [min max]</entry>
    <entry key="FullDataTypeRange">データ型の全範囲</entry>
    <entry key="UserdefinedRange">ユーザー定義の範囲</entry>
    <entry key="RangeDeterminedBySaturating">外れ値のピクセルを飽和させることで決定される範囲</entry>
    <entry key="AdjustPixelValuesFrom">ピクセル値の調整元:</entry>
    <entry key="RangelowHigh">範囲 [low high]:</entry>
    <entry key="PercentageOfPixelsToSaturatelowH">飽和させるピクセルの割合 [low high]:</entry>
    <entry key="SpecifyNumberOfHistogramBinsused">ヒストグラム ビンの数を指定 (外れ値が除外される際の範囲の計算に使用)</entry>
    <entry key="NumberOfHistogramBins">ヒストグラム ビンの数:</entry>
    <entry key="AdjustPixelValuesTo">ピクセル値の調整先:</entry>
    <entry key="ContrastAdjustmentDescription">上限と下限の間でピクセル値を線形的にスケーリングすることにより、イメージのコントラストを調整します。この範囲を超える、または下回るピクセル値は、それぞれ上限値または下限値に飽和されます。</entry>
    <entry key="Full">完全</entry>
    <entry key="SameAsInputPortI1">入力端子 I1 と同じ</entry>
    <entry key="Valid">有効</entry>
    <entry key="OutputSize">出力サイズ:</entry>
    <entry key="NormalizedOutput">正規化された出力</entry>
    <entry key="ConvolutionDescription">2 つの入力に対し 2 次元畳み込みを実行します。\n\n[出力サイズ] パラメーターを使用して出力の次元を指定します。端子 I1 での入力の次元は (Ma, Na)、端子 I2 での入力の次元は (Mb, Nb) であると仮定します。[完全] を選択した場合、出力は次元 (Ma+Mb-1, Na+Nb-1) での完全な 2 次元畳み込みとなります。[入力端子 I1 と同じ] を選択した場合、出力は端子 I1 での入力と同じ次元での畳み込みの中央部分となります。[有効] を選択した場合、出力は任意の入力の畳み込みのうち、ゼロがパディングされたエッジなしで計算される部分のみとなります。この出力の次元は (Ma-Mb+1, Na-Nb+1) です。\n\n入力が浮動小数点である場合にのみ、この出力を正規化できます。</entry>
    <entry key="HarrisCornerDetectionHarrisSteph">Harris のコーナー検出 (Harris・Stephens)</entry>
    <entry key="MinimumEigenvalueShiTomasi">最小固有値 (Shi・Tomasi)</entry>
    <entry key="LocalIntensityComparisonRostenDr">局所強度比較 (Rosten・Drummond)</entry>
    <entry key="LocalIntensityComparisonRosenDr">局所強度比較 (Rosen・Drummond)</entry>
    <entry key="CornerLocation">コーナー位置</entry>
    <entry key="CornerLocationAndMetricMatrix">コーナー位置とメトリクス行列</entry>
    <entry key="MetricMatrix">メトリクス行列</entry>
    <entry key="Coefficients">係数</entry>
    <entry key="Memory">メモリ</entry>
    <entry key="MetricOutput">メトリクス出力</entry>
    <entry key="Method">メソッド:</entry>
    <entry key="SensitivityFactor">感度係数 (0&lt;k&lt;0.25):</entry>
    <entry key="CoefficientsSeparableSmoothing">分離可能な平滑化フィルターの係数:</entry>
    <entry key="IntensityComparisonThreshold">強度比較のしきい値:</entry>
    <entry key="MaximumAngleToBeConsidered">コーナーとみなす最大角 (度単位):</entry>
    <entry key="Output1">出力:</entry>
    <entry key="MaximumNumberOfCorners">コーナーの最大数:</entry>
    <entry key="MinimumMetricValueThatIndicates">コーナーを示す最小のメトリクス値:</entry>
    <entry key="NeighborhoodSizesuppressRegion">近傍サイズ (検出されたコーナー周辺の領域の非表示):</entry>
    <entry key="OutputVariableSizeSignal">可変サイズ信号の出力</entry>
    <entry key="CornerDetectionDescription">イメージ内のコーナーを検出します。\n\nこのブロックを使用して、コーナーの位置とコーナー メトリクス値を検出できます。コーナーの位置は、1 ベースの [x y] 座標からなる M 行 2 列の行列として返されます。M は検出されたコーナーの数です。</entry>
    <entry key="LineRepetition">ラインの反復</entry>
    <entry key="LinearInterpolation">線形内挿</entry>
    <entry key="VerticalTemporalMedianFiltering">垂直方向の時間的メディアン フィルター処理</entry>
    <entry key="DeinterlacingMethod">デインターレース法:</entry>
    <entry key="InputImageIsTransposeddataOrder">入力イメージは転置されている (データ順は行優先)</entry>
    <entry key="FixedpointParametersLinearInterp"> 固定小数点パラメーターは線形内挿法にのみ適用できます。</entry>
    <entry key="DeinterlacingDescription">インターレース信号の先頭と末端のフィールドを結合して構成されるイメージから、モーション アーチファクトを削除します。</entry>
    <entry key="Bilinear">双一次</entry>
    <entry key="OneMultidimensionalSignal">1 つの多次元信号</entry>
    <entry key="GradientcorrectedLinear">勾配補正線形</entry>
    <entry key="SeparateColorSignals">個別のカラー信号</entry>
    <entry key="Obsolete">旧式</entry>
    <entry key="InterpolationAlgorithm">内挿アルゴリズム:</entry>
    <entry key="InterpolationAlgorithmObs">内挿アルゴリズム (旧式):</entry>
    <entry key="SensorAlignment">センサー配置:</entry>
    <entry key="OutputImageSignal">出力イメージ信号:</entry>
    <entry key="DemosaicDescription">このブロックは、指定のアライメントを使って Bayer 形式で入力イメージのデモザイク処理を実行します。アライメントは、イメージ左上にある 4 つのピクセルでの、行方向に並んだ R、G、B ピクセルのシーケンスとして識別されます。</entry>
    <entry key="Intensity">強度</entry>
    <entry key="Circle">円</entry>
    <entry key="Black">黒</entry>
    <entry key="EntireImage">イメージ全体</entry>
    <entry key="Xmark">x 印</entry>
    <entry key="White">白</entry>
    <entry key="SpecifyRegionOfInterestViaPort">関心領域を端子により指定</entry>
    <entry key="Plus">プラス</entry>
    <entry key="UserspecifiedValue">ユーザー指定の値</entry>
    <entry key="Star">星印</entry>
    <entry key="Square">正方形</entry>
    <entry key="InputImageType">入力イメージのタイプ:</entry>
    <entry key="ImageSignal">イメージ信号:</entry>
    <entry key="MarkerShape">マーカー形状:</entry>
    <entry key="MarkerSize">マーカー サイズ:</entry>
    <entry key="Filled">塗りつぶし</entry>
    <entry key="FillColorSource">塗りつぶし色のソース:</entry>
    <entry key="FillColor">塗りつぶし色:</entry>
    <entry key="BorderColorSource">境界線の色のソース:</entry>
    <entry key="BorderColor">境界線の色:</entry>
    <entry key="ColorValues">カラー値:</entry>
    <entry key="OpacityFactorsbetween0And1">不透明度係数 (0 ～ 1):</entry>
    <entry key="DrawMarkersIn">マーカーの描画領域:</entry>
    <entry key="UseAntialiasing">アンチエイリアシングの使用</entry>
    <entry key="DataTypesParametersAreApplicable">[データ型] パラメーターは、形状が塗りつぶされる場合、またはアンチエイリアシングが使用される場合にのみ適用できます。</entry>
    <entry key="Opacity">不透明度</entry>
    <entry key="DrawMarkersDescription">円、x 印、プラス記号、星印または正方形を描画することより、イメージ上での位置をマークします。\n\nPts 端子を使用して、x と y のペアからなる M 行 2 列の行列を指定します。ここで、M はマーカーの合計数であり、x と y の各ペアはマーカーの中心を定義します。[マーカー サイズ] パラメーターを使用して、マーカーのサイズをピクセル単位で定義します。[マーカーの描画領域] パラメーターを使用して、マーカーを描画する領域を定義します。</entry>
    <entry key="DataTypeParametersApply"> [データ型] パラメーターは、形状を塗りつぶす場合、アンチエイリアシングを使用する場合、あるいは \n ラインまたは多角形のライン幅を 1 より大きい値に設定する場合に適用されます。</entry>
    <entry key="TheInputToThePtsPortMustBeAnMby4">Pts 端子への入力は、各行が [x y width height] の形式で異なる四角形を指定する M 行 4 列の行列でなければなりません。</entry>
    <entry key="TheInputToThePtsPortMustBeAnMby2">Pts 端子への入力は、各行が異なるポリラインを指定する M 行 2L 列の行列でなければなりません。各行は [x1,y1,x2,y2...xL,yL] の形式でなければならず、これによって順に連結される点が指定されます。</entry>
    <entry key="TheInputToThePtsPortMustBeAnMb2">Pts 端子への入力は、各行が異なる多角形を指定する M 行 2L 列の行列でなければなりません。各行は [x1,y1,x2,y2...xL,yL] の形式でなければならず、これによって順に連結される点が指定されます。この場合、[x1,y1] は [xL,yL] にも連結されます。</entry>
    <entry key="TheInputToThePtsPortMustBeAnMby3">Pts 端子への入力は、各行が [x y radius] の形式で異なる円を指定する M 行 3 列の行列でなければなりません。</entry>
    <entry key="Shape">形状:</entry>
    <entry key="FillShapes">形状の塗りつぶし</entry>
    <entry key="LineWidth">ライン幅:</entry>
    <entry key="OpacityFactorbetween0And1">不透明度係数 (0 ～ 1):</entry>
    <entry key="DrawShapesIn">形状の描画領域:</entry>
    <entry key="Rectangles">四角形</entry>
    <entry key="Lines">ライン</entry>
    <entry key="Polygons">多角形</entry>
    <entry key="Circles">円</entry>
    <entry key="LineWidth_1">ラインの幅</entry>
    <entry key="BorderIntensity">境界線の強度:</entry>
    <entry key="IntensityValue">強度値:</entry>
    <entry key="RGBValues">RGB 値:</entry>
    <entry key="DrawAntialiasedLines">アンチエイリアス処理したラインの描画:</entry>
    <entry key="DrawShapesDescription">ピクセル値を上書きすることによって、イメージ上に複数の四角形、ライン、多角形または円を描画します。\n\nPts 端子を使用して、形状の適切な座標を指定します。形状の境界線のカラー値を定義できます。また、形状を塗りつぶしてその不透明度を指定するよう選択することも可能です。</entry>
    <entry key="ThresholdScaleFactor">しきい値のスケール係数:(しきい値の自動計算に使用)</entry>
    <entry key="ApproximatePercentageOfWeakEdge">弱いエッジのピクセルと非エッジ ピクセルのおよその割合:(しきい値の自動計算に使用)</entry>
    <entry key="OutputType">出力タイプ:</entry>
    <entry key="UserdefinedThreshold">ユーザー定義のしきい値</entry>
    <entry key="ThresholdSource">しきい値のソース:</entry>
    <entry key="Threshold">しきい値:</entry>
    <entry key="EdgeThinning">エッジ細線化</entry>
    <entry key="ThresholdlowHigh">しきい値 [low high]:</entry>
    <entry key="StandardDeviationOfGaussian">ガウス フィルターの標準偏差:</entry>
    <entry key="FixedpointInputIsNotSupported"> 固定小数点入力は、キャニー エッジ検出法ではサポートされていません。</entry>
    <entry key="Gradients">勾配</entry>
    <entry key="Sobel">ソーベル</entry>
    <entry key="BinaryImage">バイナリ イメージ</entry>
    <entry key="Prewitt">プレウィット</entry>
    <entry key="GradientComponents">勾配成分</entry>
    <entry key="Roberts">ロバーツ</entry>
    <entry key="BinaryImageAndGradientComponents">バイナリ イメージと勾配成分</entry>
    <entry key="Canny">キャニー</entry>
    <entry key="EdgeDetectionDescription">ソーベル法、プレウィット法、ロバーツ法またはキャニー法を使用して、入力イメージ内のエッジを検出します。\n\nブロックは、ブール値の行列であるバイナリ イメージを出力します。ピクセル値 1 がエッジに対応します。あるいは、最初の 3 つの手法の場合、ブロックはイメージの 2 つの勾配成分を出力することができます。</entry>
    <entry key="ThetaResolutionradians">theta 解像度 (ラジアン):</entry>
    <entry key="RhoResolution">rho 解像度:</entry>
    <entry key="OutputThetaAndRhoValues">theta 値と rho 値の出力</entry>
    <entry key="OutputDataType">出力データ型:</entry>
    <entry key="WhenTheOutputDataTypeParameterIs"> [出力データ型] パラメーターが double または single に設定されている場合、固定小数点パラメーターは適用できません。</entry>
    <entry key="SineTable">正弦表</entry>
    <entry key="HoughOutput">ハフ出力</entry>
    <entry key="ThetaOutput">theta 出力</entry>
    <entry key="SpecifyViaFixedPointTab">[固定小数点] タブで指定</entry>
    <entry key="HoughTransformDescription">ハフ変換を実行して直線を検出します。\n\nブロックは、次の方程式を使用してパラメーター空間行列を生成します。\n\n rho = x*cos(theta) + y*sin(theta)\n\n ブロックはこの行列を Hough 端子で出力します。この行列の行と列は、rho 値と theta 値にそれぞれ対応します。この行列のピーク値は、入力イメージ内に存在する可能性のある直線を表します。</entry>
    <entry key="SineValueComputationMethod">正弦値の計算法:</entry>
    <entry key="SineTable1">正弦表</entry>
    <entry key="TrigonometricFunction">三角関数</entry>
    <entry key="TableLookup">テーブル ルックアップ</entry>
    <entry key="HoughLinesDescription">rho と theta のペアで記述されるラインの直交座標を検出します。\n\nブロック入力はラインの theta 値と rho 値、および参照イメージです。ブロックは、ラインが参照イメージの境界線 2 本と交わる交点の、1 ベースの [x y] 座標を出力します。境界線は、参照イメージの左右にある垂直方向の境界と、上下にある水平方向の境界です。</entry>
    <entry key="NeighborhoodSize">近傍サイズ:</entry>
    <entry key="PaddingOptions">パディング オプション:</entry>
    <entry key="PadValueSource">パディング値のソース:</entry>
    <entry key="PadValue">パディング値:</entry>
    <entry key="WhenBothNeighborhoodDimensions"> 両方の近傍次元が奇数である場合、固定小数点パラメーターは適用できません。</entry>
    <entry key="SameAsInputPortI">入力端子 I と同じ</entry>
    <entry key="Constant">定数</entry>
    <entry key="Replicate">複製</entry>
    <entry key="Symmetric">対称</entry>
    <entry key="Circular">循環</entry>
    <entry key="MedianFilterDescription">入力行列 I のメディアン フィルター処理を実行します。\n\n[近傍サイズ] パラメーターを使用して、ブロックが中央値を計算する近傍のサイズを指定します。 </entry>
    <entry key="FixedpointInputSupportedLucasKanade"> 固定小数点入力は、Lucas・Kanade (差分フィルター) 法でサポートされています。</entry>
    <entry key="TemporalGradientFilter">時間勾配フィルター:</entry>
    <entry key="ComputeOpticalFlowBetween">次の範囲のオプティカル フローを計算:</entry>
    <entry key="SmoothnessFactor">平滑度係数:</entry>
    <entry key="StopIterativeSolution">反復法の停止:</entry>
    <entry key="VelocityDifferenceThreshold">速度差のしきい値:</entry>
    <entry key="MaximumNumberOfIterations">最大反復回数:</entry>
    <entry key="NumberOfFramesToBuffer">時間的平滑化のためにバッファリングするフレームの数:</entry>
    <entry key="SDForImageSmoothing">イメージ平滑化フィルターの標準偏差:</entry>
    <entry key="SDForGradientSmoothing">勾配平滑化フィルターの標準偏差:</entry>
    <entry key="DiscardNormalFlowEstimates">拘束方程式が悪条件である場合は通常のフロー推定を破棄</entry>
    <entry key="OutputImageCorrespondingToMotion">動きベクトルに対応するイメージを出力 (ブロックの遅延の要因)</entry>
    <entry key="ThresholdForNoiseReduction">ノイズ除去のしきい値:</entry>
    <entry key="Threshold1">しきい値</entry>
    <entry key="HornSchunck">Horn・Schunck</entry>
    <entry key="DerivativeOfGaussian">ガウス導関数</entry>
    <entry key="WhenVelocityDifferenceFallsBelow">速度差がしきい値未満になったとき</entry>
    <entry key="LucasKanade">Lucas・Kanade</entry>
    <entry key="DifferenceFilter">差分フィルター [-1 1]</entry>
    <entry key="WhenMaximumNumberOfIterations">最大反復回数に到達したとき</entry>
    <entry key="WhicheverComesFirst">先に該当した方</entry>
    <entry key="OpticalFlowDescription">2 つ以上のビデオ フレームにわたるオプティカル フローを推定します。</entry>
    <entry key="PyramidLevel">ピラミッド レベル:</entry>
    <entry key="CoefficientSource">係数のソース: </entry>
    <entry key="CoefficientsForSeparableFilter">分離可能フィルターの係数:</entry>
    <entry key="HiddenCoefficients">非表示係数</entry>
    <entry key="Reduce">縮小</entry>
    <entry key="DefaultSeparableFilter">既定の分離可能フィルター [1/4-a/2 1/4 a 1/4 1/4-a/2]</entry>
    <entry key="Expand">拡張</entry>
    <entry key="GaussianPyramidDescription">このブロックは、ガウス ピラミッドの縮小または拡張を計算します。入力はアップサンプリングまたはダウンサンプリングされ、ローパス フィルターがサンプリングの前または後に適用されます。</entry>
    <entry key="Specify">指定:</entry>
    <entry key="ResizeFactorIn">リサイズ係数 (%):</entry>
    <entry key="NumberOfOutputColumns">出力列の数:</entry>
    <entry key="NumberOfOutputRows">出力行の数:</entry>
    <entry key="NumberOfOutputRowsAndColumns">出力行と出力列の数:</entry>
    <entry key="InterpolationMethod">内挿法:</entry>
    <entry key="PerformAntialiasingWhenResize">リサイズ係数が 0 ～ 100 のときにアンチエイリアシングを実行</entry>
    <entry key="EnableROIProcessing">ROI の処理を有効にする</entry>
    <entry key="OutputFlagIndicatingIfAnyPart">ROI の一部がイメージの境界外にあるかどうかを示す出力フラグ</entry>
    <entry key="FixedpointParametersAreNotApplic"> 固定小数点パラメーターは適用できません。</entry>
    <entry key="ROIProcessing">ROI の処理</entry>
    <entry key="InterpolationweightsTable">内挿\n重みテーブル</entry>
    <entry key="OutputSizeAsAPercentageOfInput">入力サイズの割合で表した出力サイズ</entry>
    <entry key="NearestNeighbor">最近傍</entry>
    <entry key="FullImage">完全なイメージ</entry>
    <entry key="NumberOfOutputColumnsAndPreserve">出力列の数と縦横比保持</entry>
    <entry key="Userdefined">ユーザー定義</entry>
    <entry key="NumberOfOutputRowsAndPreserveAspectR">出力行の数と縦横比保持</entry>
    <entry key="Bicubic">双三次</entry>
    <entry key="NumberOfOutputRowsAndColumns1">出力行と出力列の数</entry>
    <entry key="OutputFlagROIImageBound">ROI がイメージの範囲内であるかどうかを示す出力フラグ</entry>
    <entry key="ResizeDescription">イメージのサイズまたはイメージ内の関心領域のサイズを変更します。\n\n[指定] パラメーターを使用して、イメージのサイズ変更に使用するパラメーターを指定します。行と列の両方に適用されるスカラーのパーセント値を指定するか、あるいは行と列を別々にスケーリングするための 2 要素ベクトルを指定することができます。出力イメージに適用する行数や列数を指定し、イメージの縦横比を保持または変更することができます。\n\n[内挿法] パラメーターを使用して、ブロックがイメージをサイズ変更する際に実行される内挿のタイプを指定します。[リサイズ係数が 0 ～ 100 のときにアンチエイリアシングを実行] チェック ボックスをオンにした場合、ブロックは入力イメージを縮小する前にローパス フィルター処理を実行します。</entry>
    <entry key="RotationAngleSource">回転角のソース:</entry>
    <entry key="Angleradians">角度 (ラジアン):</entry>
    <entry key="MaximumAngleenterPiRadiansToAcco">最大角 (正負の角度すべてに対応させるには pi ラジアンを入力):</entry>
    <entry key="DisplayRotatedImageIn">回転したイメージの表示場所:</entry>
    <entry key="BackgroundFillValue">背景の塗りつぶしの値:</entry>
    <entry key="AngleValues">角度の値</entry>
    <entry key="ExpandedToFitRotatedInputImage">回転した入力イメージに合わせて拡張</entry>
    <entry key="TopleftCorner">左上隅</entry>
    <entry key="SameAsInputImage">入力イメージと同じ</entry>
    <entry key="Center">中央</entry>
    <entry key="AngleUnits">角度の単位:</entry>
    <entry key="SineValueCalcMethod">正弦値の計算法:</entry>
    <entry key="RotateDescription">イメージをラジアン単位の角度によって回転させます。この角度は、ブロック パラメーター ダイアログ ボックスまたは入力端子 Angle を使用して指定できます。\n\n[出力サイズ] パラメーターを使用して出力のサイズを決定します。[回転した入力イメージに合わせて拡張] を選択した場合、ブロックは、回転したイメージのすべての値とそれ以外の場所の 0 を含む行列を出力します。[入力イメージと同じ] を選択した場合、ブロックは、回転したイメージの中央部分とそれ以外の場所の 0 を含む行列を出力します。その結果、回転したイメージのエッジはトリミングされる可能性があります。\n\nAngle 端子を使用して回転角度を指定する際、角度の最大値は 0 より大きく pi ラジアン以下でなければなりません。</entry>
    <entry key="ShearDirection">せん断方向:</entry>
    <entry key="OutputSizeAfterShear">せん断後の出力サイズ:</entry>
    <entry key="ShearValuesSource">せん断値のソース:</entry>
    <entry key="RowcolumnShearValuesfirstLast">行/列のせん断値 [first last]: </entry>
    <entry key="MaximumShearValue">最大せん断値:</entry>
    <entry key="ShearValues">せん断値</entry>
    <entry key="Horizontal">水平方向</entry>
    <entry key="Vertical">垂直方向</entry>
    <entry key="RowColumnShear">行/列のせん断値 [first last]:</entry>
    <entry key="ShearDescription">距離を線形的に長くまたは短くして、イメージの各行または各列をシフトさせます。\n\n[せん断方向] パラメーターを使用して、行または列を水平方向と垂直方向のいずれにシフトするかを指定します。[行/列のせん断値 [first last]] パラメーターまたは S 端子を使用して、2 要素ベクトルを指定します。最初の要素は、最初の行または列をシフトさせるピクセル数を表し、2 番目の要素は、最後の行または列をシフトさせるピクセル数を表します。\n\nS 端子を使用してせん断値を指定する場合は、[最大せん断値] パラメーターを使用して、行または列をシフトさせる最大のピクセル数を指定します。\n\n[せん断後の出力サイズ] パラメーターに対し [完全] を選択した場合、ブロックはせん断したイメージ全体を出力します。[入力イメージと同じ] を選択した場合、ブロックは入力イメージと同じ次元によって、せん断した完全なイメージから左上部分を出力します。</entry>
    <entry key="OutputSizeAfterTranslation">平行ランニング後の出力サイズ:</entry>
    <entry key="OffsetSource">オフセットのソース:</entry>
    <entry key="Offset">オフセット:</entry>
    <entry key="MaximumOffset">最大オフセット:</entry>
    <entry key="OffsetValues">オフセット値</entry>
    <entry key="TranslateDescription">イメージを上または下に、左または右に、あるいは両者を組み合わせて動かします。2 要素オフセット ベクトルは、ダイアログ ボックスまたは Offset 端子を使用して指定できます。最初の要素は、イメージを上下にシフトするピクセル数を表します。正の値を入力すると、ブロックはイメージを下方向に動かします。2 番目の要素は、イメージを左右にシフトするピクセル数を表します。正の値を入力すると、ブロックはイメージを右方向に動かします。</entry>
    <entry key="MatchMetric">一致メトリクス:</entry>
    <entry key="OutputNxNMatrixOfMetricValues">最適一致付近のメトリクス値からなる N 行 N 列の行列を出力</entry>
    <entry key="OutputFlagIndicatingIfROIIsValid">ROI が有効であるかどうかを示す出力フラグ</entry>
    <entry key="OutputOptions">出力オプション</entry>
    <entry key="SumOfAbsoluteDifferences">差の絶対値の和</entry>
    <entry key="SumOfSquaredDifferences">差の二乗和</entry>
    <entry key="BestMatchLocation">最適一致の位置</entry>
    <entry key="MaximumAbsoluteDifference">最大の差の絶対値</entry>
    <entry key="TemplateMatchingDescription">イメージ I の内部全体において 1 ピクセルのインクリメントでテンプレートをシフトすることにより、テンプレート マッチングを実行します。\n\n関心領域 (ROI) を定義するために、ROI 端子を使用してテンプレート マッチングを実行します。ROI 端子の書式は [x y width height] であり、[x y] は四角形の左上隅の 1 ベースの座標です。\n\nブロックは、一致メトリクス値を Metric 端子で出力するか、テンプレート最適一致の 1 ベースの [x y] 座標を Loc 端子で出力します。オプションとして、ブロックは最適一致位置周辺を中心とする一致メトリクス値からなる N 行 N 列の行列を NMetric 端子で出力できます。</entry>
    <entry key="Gamma">ガンマ</entry>
    <entry key="DeGamma">デガンマ</entry>
    <entry key="GammaPrompt">ガンマ:</entry>
    <entry key="LinearSegment">線形セグメント</entry>
    <entry key="BreakPoint">ブレークポイント:</entry>
    <entry key="GammaCorrectionDescription">ガンマ補正を適用または除去します。</entry>
    <entry key="NeighborhoodOrStructuringElementSrc">近傍または構造化要素のソース:</entry>
    <entry key="NeighborhoodOrStructuringElement">近傍または構造化要素:</entry>
    <entry key="ErosionDescription">強度イメージまたはバイナリ イメージに対しモルフォロジー収縮を実行します。\n\n[近傍または構造化要素] パラメーターを使用して、ブロックがイメージに適用する近傍または構造化要素を定義します。近傍を指定するには、1 および 0 からなる行列またはベクトルを入力します。構造化要素を指定するには、関数 strel を使用します。あるいは、Nhood 端子を使用して近傍の値を指定することもできます。\n\n構造化要素の詳細については、MATLAB コマンド プロンプトで「doc strel」と入力してください。</entry>
    <entry key="DilationDescription">強度イメージまたはバイナリ イメージに対しモルフォロジー膨張を実行します。\n\n[近傍または構造化要素] パラメーターを使用して、ブロックがイメージに適用する近傍または構造化要素を定義します。近傍を指定するには、1 および 0 からなる行列またはベクトルを入力します。構造化要素を指定するには、関数 strel を使用します。あるいは、Nhood 端子を使用して近傍の値を指定することもできます。\n\n構造化要素の詳細については、MATLAB コマンド プロンプトで「doc strel」と入力してください。</entry>
    <entry key="OpeningDescription">強度イメージまたはバイナリ イメージに対しモルフォロジー オープニングを実行します。\n\n[近傍または構造化要素] パラメーターを使用して、ブロックがイメージに適用する近傍または構造化要素を定義します。近傍を指定するには、1 および 0 からなる行列またはベクトルを入力します。構造化要素を指定するには、関数 strel を使用します。あるいは、Nhood 端子を使用して近傍の値を指定することもできます。\n\n構造化要素の詳細については、MATLAB コマンド プロンプトで「doc strel」と入力してください。</entry>
    <entry key="ClosingDescription">強度イメージまたはバイナリ イメージに対しモルフォロジー クロージングを実行します。\n\n[近傍または構造化要素] パラメーターを使用して、ブロックがイメージに適用する近傍または構造化要素を定義します。近傍を指定するには、1 および 0 からなる行列またはベクトルを入力します。構造化要素を指定するには、関数 strel を使用します。あるいは、Nhood 端子を使用して近傍の値を指定することもできます。\n\n構造化要素の詳細については、MATLAB コマンド プロンプトで「doc strel」と入力してください。</entry>
    <entry key="Conversionobsoleted">変換 (旧式):</entry>
    <entry key="Conversion">変換:</entry>
    <entry key="WhitePoint">ホワイト ポイント:</entry>
    <entry key="UseConversionSpecifiedBy">使用する変換の指定元:</entry>
    <entry key="ScanningStandard">スキャン標準:</entry>
    <entry key="ColorSpaceDescription">複数の色空間の間で色情報を変換します。\n\nすべての変換で、倍精度浮動小数点と単精度浮動小数点の入力がサポートされます。R'G'B' から強度、R'G'B' から B'G'R'、B'G'R' から R'G'B'、B'G'R' から強度への変換や、R'G'B' 色空間と Y'CbCr 色空間の間の変換では、8 ビット符号なし整数の入力もサポートされます。</entry>
    <entry key="Resampling">リサンプリング:</entry>
    <entry key="Interpolation">内挿:</entry>
    <entry key="AntialiasingFilter">アンチエイリアシング フィルター:</entry>
    <entry key="HorizontalFilterCoefficients">水平フィルター係数:</entry>
    <entry key="VerticalFilterCoefficients">垂直フィルター係数:</entry>
    <entry key="PixelReplication">ピクセルの複製</entry>
    <entry key="Linear">線形</entry>
    <entry key="Default">既定</entry>
    <entry key="None">なし</entry>
    <entry key="ChromaResamplingDescription">YCbCr 信号の色差成分をダウンサンプリングまたはアップサンプリングして、帯域幅やストレージの要件を減らします。</entry>
    <entry key="ImageComplementDescription">バイナリ イメージまたは強度イメージの補数を計算します。\n\nバイナリ イメージの場合、ブロックは 0 を 1 に、1 を 0 に置き換えます。出力イメージでは白と黒が逆転します。強度イメージの場合、ブロックは入力データ型で表現可能な最大値から各ピクセル値を減算し、その差を出力します。出力イメージでは暗い領域がより明るくなり、明るい領域がより暗くなります。</entry>
    <entry key="ImageDataTypeConversionDescription">入力イメージを指定の出力データ型に変換し、スケーリングを行います。\n\n浮動小数点データ型間で変換を行う場合、ブロックは入力を出力データ型にキャストし、範囲外の値を 0 または 1 に合わせてクリップします。他のすべてのデータ型間で変換を行う場合、ブロックは入力を出力データ型にキャストし、データ型の値を出力データ型のダイナミック レンジにスケーリングします。倍精度と単精度の浮動小数点データ型では、ダイナミック レンジは 0 と 1 の間になります。固定小数点データ型では、ダイナミック レンジはそのデータ型で表現可能な最小値と最大値の間になります。</entry>
    <entry key="IfLabelExceedsDataTypeSize">ラベルがデータ型のサイズを超える場合は、次を使用して残りの領域をマーク:</entry>
    <entry key="LabelMatrixAndNumberOfLabels">ラベル行列とラベルの数</entry>
    <entry key="LabelMatrix">ラベル行列</entry>
    <entry key="NumberOfLabels">ラベルの数</entry>
    <entry key="Automatic">自動</entry>
    <entry key="MaximumValueOfTheOutputDataType">出力データ型の最大値</entry>
    <entry key="Zero">0</entry>
    <entry key="LabelDescription">バイナリ イメージ内の連結された成分にラベルを付け、カウントします。\n\nLabel 端子で、ブロックはラベル行列を出力します。この行列では、0 に等しいピクセルが背景を表し、1 に等しいピクセルが最初のオブジェクトを表し、2 に等しいピクセルが 2 番目のオブジェクトを表す、という形で表します。Count 端子で、ブロックはラベルの付いたオブジェクトの数を表すスカラーを出力します。\n\n [連結性] パラメーターを使用して、どのピクセルが互いに連結されるかを定義します。</entry>
    <entry key="Binary">バイナリ</entry>
    <entry key="TopHatDescription">強度イメージまたはバイナリ イメージに対しモルフォロジー トップ ハット フィルター処理を実行します。\n\n[近傍または構造化要素] パラメーターを使用して、ブロックがイメージに適用する近傍または構造化要素を定義します。近傍を指定するには、1 および 0 からなる行列またはベクトルを入力します。構造化要素を指定するには、関数 strel を使用します。あるいは、Nhood 端子を使用して近傍の値を指定することもできます。\n\n 構造化要素の詳細については、MATLAB コマンド プロンプトで「doc strel」と入力してください。</entry>
    <entry key="BottomHatDescription">強度イメージまたはバイナリ イメージに対しモルフォロジー ボトム ハット フィルター処理を実行します。\n\n[近傍または構造化要素] パラメーターを使用して、ブロックがイメージに適用する近傍または構造化要素を定義します。近傍を指定するには、1 および 0 からなる行列またはベクトルを入力します。構造化要素を指定するには、関数 strel を使用します。あるいは、Nhood 端子を使用して近傍の値を指定することもできます。\n\n 構造化要素の詳細については、MATLAB コマンド プロンプトで「doc strel」と入力してください。</entry>
    <entry key="Main">メイン</entry>
    <entry key="Font">フォント</entry>
    <entry key="Text">テキスト: </entry>
    <entry key="ColorValueSource">カラー値のソース:</entry>
    <entry key="ColorValue">カラー値:</entry>
    <entry key="OpacitySource">不透明度のソース:</entry>
    <entry key="Opacity1">不透明度:</entry>
    <entry key="InputImageIsTransposed">入力イメージは転置されている (データ順は行優先)</entry>
    <entry key="FontFace">フォントフェース:</entry>
    <entry key="FontSizepoints">フォント サイズ (ポイント):</entry>
    <entry key="Antialiased">アンチエイリアス</entry>
    <entry key="InputType">入力タイプ:</entry>
    <entry key="IntensitySource">強度ソース:</entry>
    <entry key="Intensity_1">強度:</entry>
    <entry key="Dummy2">ダミー 2</entry>
    <entry key="Dummy3">ダミー 3</entry>
    <entry key="Dummy4">ダミー 4</entry>
    <entry key="Dummy1">ダミー 1</entry>
    <entry key="InsertTextDescription">書式設定されたテキストをイメージまたはビデオ ストリーム上に抽出します。\n\n[テキスト] パラメーターを使用して、イメージまたはビデオ ストリーム上に入力するテキスト文字列を指定します。このパラメーターには単一のテキスト文字列か文字列のセル配列を指定できます。セル配列を入力する場合は、Select 端子を使用してどのテキスト文字列を表示するかを指定します。\n\n [テキスト] パラメーターは、%04d、%4.2f などの、ANSI C の printf スタイルの書式仕様も受け入れます。ブロックは、[テキスト] パラメーターの書式仕様を Variables 端子でのベクトル入力の要素で置き換えます。</entry>
    <entry key="TargetHistogram">ターゲット ヒストグラム:</entry>
    <entry key="NumberOfBins">ビンの数:</entry>
    <entry key="HistogramSource">ヒストグラムのソース:</entry>
    <entry key="Histogram">ヒストグラム:</entry>
    <entry key="Uniform">一様</entry>
    <entry key="HistogramEqualizationDescription">ヒストグラム均等化を使用して入力イメージのコントラストを高めます。</entry>
    <entry key="InitialSearchDirection">初期探索方向:</entry>
    <entry key="TraceDirection">トレース方向:</entry>
    <entry key="MaximumNumberOfBoundaryPixels">境界ピクセルの最大数:</entry>
    <entry key="OutputNumberOfBoundaryPixels">検出された境界ピクセルの出力数</entry>
    <entry key="ActionToTakeForEmptyOutputPoints">空の出力点に対するアクション:</entry>
    <entry key="North">北</entry>
    <entry key="East">東</entry>
    <entry key="South">南</entry>
    <entry key="West">西</entry>
    <entry key="Northeast">北東</entry>
    <entry key="Southeast">南東</entry>
    <entry key="Southwest">南西</entry>
    <entry key="Northwest">北西</entry>
    <entry key="Clockwise">時計回り</entry>
    <entry key="Counterclockwise">反時計回り</entry>
    <entry key="FillWithLastPointFound">最後に検出された点で埋める</entry>
    <entry key="FillWithUserdefinedValues">ユーザー定義値で埋める</entry>
    <entry key="TraceBoundaryDescription">バイナリ イメージ BW 内のオブジェクトの境界を追跡します。非ゼロのピクセルはオブジェクトに属し、0 値のピクセルは背景を構成します。\n\nStart Pt は 2 要素ベクトルであり、オブジェクトの境界上にある初期点の 1 ベースの [x y] 座標を指定します。Pts は 1 ベースの [x y] 点座標からなる M 行 2 列の行列であり、M は境界点の数です。M は、マスクで指定される [境界ピクセルの最大数] 以下になります。</entry>
    <entry key="SeparableFilterCoefficients">分離可能なフィルター係数</entry>
    <entry key="Coefficients1">係数: </entry>
    <entry key="VerticalCoefficientsacrossHeight">垂直係数 (高さ方向):</entry>
    <entry key="HorizontalCoefficientsacrossWidth">水平係数 (幅方向):</entry>
    <entry key="FilteringBasedOn">フィルター処理の方法:</entry>
    <entry key="Convolution">畳み込み</entry>
    <entry key="Correlation">相関</entry>
    <entry key="FIRFilterDescription">フィルター係数行列 H を使用して、入力行列 I の 2 次元 FIR フィルター処理を実行します。\n\n[フィルター処理の方法] パラメーターを使用して、畳み込みと相関のどちらに基づいたフィルター処理を行うかを指定します。 \n\n [出力サイズ] パラメーターを使用して、出力の次元を指定します。端子 I での入力の次元が (Mi, Ni) であり、端子 H での入力の次元が (Mh, Nh) であると仮定します。[完全] を選択した場合、出力の次元は (Mi+Mh-1, Ni+Nh-1) となります。[入力端子 I と同じ] を選択した場合、出力の次元は端子 I での入力と同じになります。[有効] を選択した場合、ブロックは係数行列が完全に適合する場所でのみ入力イメージをフィルター処理するため、パディングは不要になります。出力の次元は (Mi-Mh+1, Ni-Nh+1) となります。</entry>
    <entry key="LocationAndSizeOfRectangleROI">四角形 ROI の位置とサイズ [x y width height]:</entry>
    <entry key="VerticesOfPolygonROI">多角形 ROI の頂点 [x1 y1 x2 y2 ... xL yL]:</entry>
    <entry key="LocationOfTheUpperLeftCorner">左上隅の位置 [x y]:</entry>
    <entry key="TransformationMatrixSource">変換行列のソース:</entry>
    <entry key="TransformationMatrix">変換行列:</entry>
    <entry key="UseQuadraticApproximation">射影変換では、二次近似を使用してピクセルの位置を計算</entry>
    <entry key="ErrorToleranceinPixels">許容誤差 (ピクセル単位):</entry>
    <entry key="ProcessPixelsIn">ピクセル処理の場所:</entry>
    <entry key="ROISource">ROI のソース:</entry>
    <entry key="OutputFlagROI">ROI の一部が入力イメージの外部にあるかどうかを示す出力フラグ</entry>
    <entry key="InterpolationMethodPixelValue">ピクセル値を計算するための内挿法:</entry>
    <entry key="OutputImageSizeAndPosition">出力イメージのサイズと位置:</entry>
    <entry key="MaximumSizeheightWidth">最大サイズ [height width]:</entry>
    <entry key="SizeheightWidth">サイズ [height width]:</entry>
    <entry key="OutputFlagTransformedPixels">変換後のピクセルのいずれかが切り捨てられているかどうかを示す出力フラグ</entry>
    <entry key="WholeInputImage">入力イメージ全体</entry>
    <entry key="RectangleROI">四角形 ROI</entry>
    <entry key="SpecifiedValue">指定された値</entry>
    <entry key="DesiredConfidence">目的とする信頼度</entry>
    <entry key="RANSAC">ランダム サンプル コンセンサス (RANSAC)</entry>
    <entry key="LMS">最小二乗中央値</entry>
    <entry key="NonreflectiveSimilarity">無反射相似</entry>
    <entry key="Affine">アフィン</entry>
    <entry key="Projective">射影</entry>
    <entry key="EstimateGeoTransfotrmDescription">Pts1 から Pts2 までの点の最大数をマッピングする変換行列を見つけます。\n\nPts1 と Pts2 の入力は、2 つのイメージにおける点の位置を指定します。配列 Pts1 および配列 Pts2 の各行は [x y] という形式です。配列内の点は、対応する位置のペアを形成するよう並べられなければなりません。[外れ値を検出して除外] オプションを選択した場合、ブロックは指定数のインライアに適合する変換行列を算出するまで、あるいはユーザー指定の停止条件に達するまで、一致する点のペアをランダムに選択します。続いて、最初のステップで見つかったすべてのインライアを使用して、この変換行列を調整します。</entry>
    <entry key="CalculateAndDisplayRate">レートの計算と表示を行う頻度:</entry>
    <entry key="UpdateRate">更新頻度:</entry>
    <entry key="FrameRateDisplayDescription">入力信号のフレーム レートを計算し、表示します。\n\n[レートの計算と表示を行う頻度] パラメーターを使用して、ブロックが表示を更新する頻度を制御します。このパラメーターが 1 より大きい場合、ブロックは指定数のフレームに対する平均フレーム レートを表示します。</entry>
    <entry key="WindowSize">ウィンドウ サイズ:</entry>
    <entry key="OpenAtStartOfSimulation">シミュレーションの開始時に開く</entry>
    <entry key="FullscreenEscToExit">全画面表示 (Esc キーを押して終了)</entry>
    <entry key="RememberVideoWindowSize">ビデオ ウィンドウのサイズを記憶</entry>
    <entry key="InputColorFormat">入力色形式</entry>
    <entry key="VideoOutputDevice">ビデオの出力デバイス:</entry>
    <entry key="DataOrganization">データ編成:</entry>
    <entry key="IsWindowOpen">ウィンドウが開いている</entry>
    <entry key="Normal">標準</entry>
    <entry key="TrueSize11">真のサイズ (1:1)</entry>
    <entry key="OnscreenVideoMonitor">オンスクリーン ビデオ モニター</entry>
    <entry key="Columnmajor">列優先</entry>
    <entry key="Rowmajor">行優先</entry>
    <entry key="View">ビュー</entry>
    <entry key="Settings">設定</entry>
    <entry key="ToVideoDisplayDescription">このブロックは、RGB 形式と YCbCr 形式のビデオに対応している、軽量で高性能なディスプレイを提供します。また、コード生成も行います。</entry>
    <entry key="VariableName">変数名:</entry>
    <entry key="NumberOfInputs">入力数:</entry>
    <entry key="LimitDataPointsToLast">直近のデータ点数に制限:</entry>
    <entry key="Decimation">間引き:</entry>
    <entry key="InputPortLabels">入力端子のラベル:</entry>
    <entry key="LogFixedpointDataAsAFiObject">fi オブジェクトとして固定小数点データのログを記録する</entry>
    <entry key="VideoToWorkspaceDescription">MATLAB ワークスペースで、入力を指定の配列に書き込みます。シミュレーションが停止するまで配列を利用できません。\n\nビデオ信号が強度値で表されている場合、その信号は 3 次元の M x N x T 配列としてワークスペースに表示されます。ここで、M と N は単一のビデオ フレームにおける行と列の数であり、T はビデオ信号におけるフレームの数です。カラー ビデオ信号の場合は、4 次元の M x N x C x T 配列としてワークスペースに表示されます。ここで、M と N は単一のビデオ フレームにおける行と列の数、C はブロックへの入力の数、T はビデオ ストリームにおけるフレームの数です。</entry>
    <entry key="Component1">成分 1:</entry>
    <entry key="Component2">成分 2:</entry>
    <entry key="Component3">成分 3:</entry>
    <entry key="Component4">成分 4:</entry>
    <entry key="FourCharacterCode">4 文字コード:</entry>
    <entry key="FileName">ファイル名:</entry>
    <entry key="VideoFormat">ビデオ形式:</entry>
    <entry key="BitStreamFormat">ビット ストリーム形式:</entry>
    <entry key="NumberOfInputComponents">入力成分の数:</entry>
    <entry key="InheritSizeOfComponentsFromInput">入力データ型から成分のサイズを継承</entry>
    <entry key="Bits">ビット数:</entry>
    <entry key="ComponentOrderInBinaryFile">バイナリ ファイルでの成分の順序:</entry>
    <entry key="InterlacedVideo">インターレース ビデオ</entry>
    <entry key="LineOrdering">行の順序:</entry>
    <entry key="WriteSignedDataToOutputFile">出力ファイルへの符号付きデータの書き込み</entry>
    <entry key="ByteOrderInBinaryFile">バイナリ ファイルでのバイト順:</entry>
    <entry key="SaveAs">名前を付けて保存...</entry>
    <entry key="Components">成分</entry>
    <entry key="FourCharacterCodes">4 文字コード</entry>
    <entry key="TopLineFirst">先頭の行から</entry>
    <entry key="Packed">パック</entry>
    <entry key="LittleEndian">リトル エンディアン</entry>
    <entry key="Custom">カスタム</entry>
    <entry key="BottomLineFirst">最後の行から</entry>
    <entry key="Planar">平面</entry>
    <entry key="BigEndian">ビッグ エンディアン</entry>
    <entry key="VideoFileFormatLabel">ビデオ ファイル形式ラベル:</entry>
    <entry key="ComponentOrderInBitStreamEgYCbCr">ビット ストリームでの成分順序 (例: Y' | Cb | Cr):</entry>
    <entry key="InheritComponentSizeFromInput">入力データ型から成分サイズを継承:</entry>
    <entry key="Component1_1">成分 1:</entry>
    <entry key="Component2_1">成分 2:</entry>
    <entry key="Component3_1">成分 3:</entry>
    <entry key="Component4_1">成分 4:</entry>
    <entry key="Bits1">ビット数 1:</entry>
    <entry key="Bits2">ビット数 2:</entry>
    <entry key="Bits3">ビット数 3:</entry>
    <entry key="Bits4">ビット数 4:</entry>
    <entry key="WriteSignedDataToOutputFile_1">出力ファイルへの符号付きデータの書き込み:</entry>
    <entry key="EndiannessOfFile">ファイルのエンディアン:</entry>
    <entry key="WriteBinaryFileDescription">バイナリ ビデオ データを指定の形式でファイルに書き込みます。</entry>
    <entry key="Signal">信号:</entry>
    <entry key="SampleTime">サンプル時間:</entry>
    <entry key="FormOutputAfterFinalValue">最終値の後の出力フォーム (旧式):</entry>
    <entry key="FormOutputAfterFinalValueBy">最終値の後の出力フォーム:</entry>
    <entry key="OutputPortLabels">出力端子のラベル:</entry>
    <entry key="SettingToZero">0 に設定</entry>
    <entry key="HoldingFinalValue">最終値を保持</entry>
    <entry key="CyclicRepetition">周期的に繰り返す</entry>
    <entry key="VideoFromWorkspaceDescription">連続するサンプル時間で、ビデオ フレームを MATLAB ワークスペースから出力します。\n\nビデオ信号が M x N x T のワークスペース配列である場合、ブロックは強度ビデオ信号を出力します。ここで、M と N は単一のビデオ フレームにおける行と列の数、T はビデオ信号におけるフレームの数です。ビデオ信号が M x N x C x T のワークスペース配列である場合、ブロックはカラー ビデオ信号を出力します。ここで、M と N は単一のビデオ フレームにおける行と列の数、C はブロックからの出力の数、T はビデオ ストリームにおけるフレームの数です。</entry>
    <entry key="Value">値:</entry>
    <entry key="Signed">符号付き</entry>
    <entry key="WordLength">語長:</entry>
    <entry key="SetFractionLengthInOutputTo">出力での小数部の長さを次に設定:</entry>
    <entry key="FractionLength">小数部の長さ:</entry>
    <entry key="Fixedpoint">固定小数点</entry>
    <entry key="InheritViaBackPropagation">逆伝播による継承</entry>
    <entry key="BestPrecision">最高精度</entry>
    <entry key="InheritFromValue">[値] から継承</entry>
    <entry key="UserdefinedDataType">ユーザー定義のデータ型 (例: sfix(16)、uint(8)、float('single')):</entry>
    <entry key="ImageFromWorkspaceDescription">MATLAB ワークスペースからイメージをインポートします。\n\n[値] パラメーターを使用して、モデルにインポートするイメージを含む MATLAB ワークスペース変数か、またはそれを指定する式を指定します。[サンプル時間] パラメーターを使用して、ブロックのサンプル周期を設定します。</entry>
    <entry key="DataTypes">データ型</entry>
    <entry key="UserdefinedDataType1">ユーザー定義のデータ型 (例: sfix(16)、uint(8)、float(''single'')):</entry>
    <entry key="Browse">参照...</entry>
    <entry key="InheritFromInputImage">入力イメージから継承</entry>
    <entry key="FileName_MP">ファイル名:</entry>
    <entry key="ImageFromFileDescription">ファイルからイメージを読み取ります。\n\n[ファイル名] パラメーターを使用して、モデルにインポートするイメージ ファイルを指定します。[サンプル時間] パラメーターを使用して、ブロックのサンプル周期を設定します。</entry>
    <entry key="FrameSizeRows">フレーム サイズの行:</entry>
    <entry key="Cols">列:</entry>
    <entry key="NumberOfOutputComponents">出力成分の数:</entry>
    <entry key="Rows">行:</entry>
    <entry key="InputFileHasSignedData">入力ファイルに符号付きデータがある</entry>
    <entry key="Loop">ループ</entry>
    <entry key="NumberOfTimesToPlayFile">ファイルを再生する回数:</entry>
    <entry key="OutputEndoffileIndicator">出力のファイル終端インジケーター</entry>
    <entry key="FrameSize">フレーム サイズ</entry>
    <entry key="Rows1">行 1:</entry>
    <entry key="Rows2">行 2:</entry>
    <entry key="Rows3">行 3:</entry>
    <entry key="Rows4">行 4:</entry>
    <entry key="Cols1">列 1:</entry>
    <entry key="Cols2">列 2:</entry>
    <entry key="Cols3">列 3:</entry>
    <entry key="Cols4">列 4:</entry>
    <entry key="SizeOfYCompoenetRows">Y' 成分行のサイズ:</entry>
    <entry key="SizeOfYComponentCols">Y' 成分列のサイズ:</entry>
    <entry key="InputFileHasSignedData_1">入力ファイルに符号付きデータがある:</entry>
    <entry key="OutputEndoffileIndicator_1">出力のファイル終端インジケーター:</entry>
    <entry key="ReadBinaryFileDescription">ファイルからバイナリ ビデオ データを指定の形式で読み取ります。</entry>
    <entry key="CorrelationDescription">2 つの入力間で 2 次元相互相関を実行します。\n\n[出力サイズ] パラメーターを使用して出力の次元を指定します。端子 I1 での入力の次元は (Ma, Na)、端子 I2 での入力の次元は (Mb, Nb) であると仮定します。[完全] を選択した場合、出力は次元 (Ma+Mb-1, Na+Nb-1) の完全な 2 次元相互相関となります。[入力端子 I1 と同じ] を選択した場合、出力は端子 I1 での入力と同じ次元の相互相関の中央部分となります。[有効] を選択した場合、出力は任意の入力の相互相関のうち、ゼロがパディングされたエッジなしで計算される部分のみとなります。この出力の次元は (Ma-Mb+1, Na-Nb+1) です。\n\n入力が浮動小数点である場合にのみ、この出力を正規化できます。</entry>
    <entry key="LowerLimitOfHistogram">ヒストグラムの下限:</entry>
    <entry key="UpperLimitOfHistogram">ヒストグラムの上限:</entry>
    <entry key="Normalized">正規化</entry>
    <entry key="RunningHistogram">ランニング ヒストグラム</entry>
    <entry key="ResetPort">リセット端子</entry>
    <entry key="TriggerType">トリガー タイプ:</entry>
    <entry key="FindTheHistogramOver">ヒストグラムを求める対象</entry>
    <entry key="Dimension">次元</entry>
    <entry key="ColumnCompatibility">列の互換性</entry>
    <entry key="ShowAdditionalParameters">--------------- 追加パラメーターの表示 ---------------</entry>
    <entry key="AllowOverridesFromDSPAttributes">DSP Attributes ブロックからのオーバーライドを許可</entry>
    <entry key="RisingEdge">立ち上がりエッジ</entry>
    <entry key="FallingEdge">立ち下がりエッジ</entry>
    <entry key="EitherEdge">両エッジ</entry>
    <entry key="NonzeroSample">非ゼロのサンプル</entry>
    <entry key="EntireInput">入力全体</entry>
    <entry key="EachColumn">各列</entry>
    <entry key="InheritedWillBeRemoved">継承 (この選択肢は削除予定 - リリース ノートを参照)</entry>
    <entry key="HistogramDescription">入力の指定次元または時系列における要素のヒストグラム (ランニング ヒストグラム) を生成します。</entry>
    <entry key="InAdditionFixptAttriApplyWhenBlkInputsAreComplex">さらに、固定小数点データ型の属性は、ブロックの入力が複素数の固定小数点信号である場合にのみ適用されます。</entry>
    <entry key="Mode">モード:</entry>
    <entry key="ResetPortPrompt">リセット端子:</entry>
    <entry key="InputProcessing">入力処理:</entry>
    <entry key="IndexBase">インデックス ベース</entry>
    <entry key="OperateOver">演算の対象</entry>
    <entry key="OperationPrompt">演算</entry>
    <entry key="ROIType">ROI のタイプ:</entry>
    <entry key="ROIPortionToProcess">処理対象となる ROI の部分:</entry>
    <entry key="OutputFlagROIOutOfBounds">ROI が完全にイメージの境界外にあるかどうかを示す出力フラグ</entry>
    <entry key="ValueAndIndex">値とインデックス</entry>
    <entry key="ValueOption">値</entry>
    <entry key="Index">インデックス</entry>
    <entry key="Running">ランニング</entry>
    <entry key="ColumnsAsChannels">チャネルとしての列 (フレーム ベース)</entry>
    <entry key="ElementsAsChannels">チャネルとしての要素 (サンプル ベース)</entry>
    <entry key="ZeroValue">0</entry>
    <entry key="One">1</entry>
    <entry key="EachRow">各行</entry>
    <entry key="SpecifiedDimension">指定した次元</entry>
    <entry key="Maximum">最大値</entry>
    <entry key="EntireROI">ROI 全体</entry>
    <entry key="ROIPerimeter">ROI の周囲長</entry>
    <entry key="IndividualStatisticsForEachROI">各 ROI に関する個別の統計</entry>
    <entry key="SingleStatisticForAllROIs">すべての ROI に関する単一の統計</entry>
    <entry key="FindTheMaximumValueOver">最大値を求める対象</entry>
    <entry key="MaximumBlockDescription">入力の指定次元または時系列における最大値 (ランニング最大値) を計算します。</entry>
    <entry key="MinimumBlockDescription">入力の指定次元または時系列における最小値 (ランニング最小値) を計算します。</entry>
    <entry key="IndexBase_MP">インデックス ベース</entry>
    <entry key="OutputFlagIndicatingIfInputLabelNumAreValid">入力ラベル番号が有効かどうかを示す出力フラグ</entry>
    <entry key="FindTheMinimumValueOver">最小値を求める対象:</entry>
    <entry key="WhenTheBlockInputIsFloatingPoint">ブロックの入力が浮動小数点の場合、すべてのブロックのデータ型は入力と一致します。</entry>
    <entry key="UserDefined">ユーザー定義</entry>
    <entry key="RunningMean">ランニング平均</entry>
    <entry key="FindTheMeanValueOver">平均値を求める対象:</entry>
    <entry key="TreatSamplebasedRowInputAsAColumn">サンプルベースの行入力を列として処理</entry>
    <entry key="MeanBlockDescription">入力の指定次元または時系列における平均値 (ランニング平均) を計算します。</entry>
    <entry key="SortAlgorithm">並べ替えアルゴリズム:</entry>
    <entry key="FindTheMedianValueOver">中央値を求める対象:</entry>
    <entry key="QuickSort">簡易並べ替え</entry>
    <entry key="InsertionSort">挿入並べ替え</entry>
    <entry key="MedianBlockDescription">入力の指定次元における中央値、または時系列における中央値 (ランニング中央値) を計算します。\n\n[乗算出力] パラメーターと [アキュムレータ] パラメーターは、複素数固定小数点入力にのみ適用されます。</entry>
    <entry key="RunningStandardDeviation">ランニング標準偏差</entry>
    <entry key="FindTheStandardDeviationValue">標準偏差値を求める対象:</entry>
    <entry key="SDBlockDescription">入力の指定次元または時系列における標準偏差 (ランニング標準偏差) を計算します。</entry>
    <entry key="RunningVariance">ランニング分散</entry>
    <entry key="InputSumSquaredProduct">入力合計二乗積</entry>
    <entry key="InputSquaredProduct">入力二乗積</entry>
    <entry key="SameAsInputSquaredProduct">入力二乗積と同じ</entry>
    <entry key="FindTheVarianceValueOver">分散値を求める対象:</entry>
    <entry key="VarianceBlockDescription">入力の指定次元または時系列における分散 (ランニング分散) を計算します。</entry>
    <entry key="PSNRBlockDescription">2 つのイメージ間のピーク S/N 比 (PSNR) をデシベル単位で計算します。</entry>
    <entry key="MaximumNumberOfLocalMaxima">局所的最大値の最大数:</entry>
    <entry key="MaximumNumberOfLocalMaxima_MP">局所的最大値の最大数 (N):</entry>
    <entry key="SourceOfThresholdValue">しきい値のソース:</entry>
    <entry key="InputIsHoughMatrix">入力は theta の全範囲にわたるハフ行列</entry>
    <entry key="IndexOutputDataType">インデックス出力のデータ型:</entry>
    <entry key="CountOutputDataType">カウント出力のデータ型:</entry>
    <entry key="FindLocalMaximaDescription">入力行列における局所的最大値を検出します。\n\n探索領域のサイズは、[近傍サイズ] パラメーターを使用して指定できます。Idx 出力端子の次元は M 行 2 列であり、M は局所的最大値の最大数です。この出力端子では、局所的最大値の 1 ベースの [x y] 座標が保持されます。有効な局所的最大値を検出するために、しきい値が入力行列に適用されます。\n\n 入力が、Hough Transform ブロックで生成されたハフ行列である場合は、[入力は theta の全範囲にわたるハフ行列] チェック ボックスをオンにする必要があります。この場合、ブロックでは、入力ハフ行列が rho 軸について反対称であり、theta は -pi/2 ～ pi/2 ラジアンの範囲であると見なされます。局所的最大値が境界の近傍で見つかり、隣接するウィンドウがハフ行列の外にある場合、ブロックは 1 つのピークのみを検出して対応する反対称のピークは無視します。</entry>
    <entry key="AddColumnsTo">列を次に追加:</entry>
    <entry key="OutputRowMode">出力行のモード:</entry>
    <entry key="NumberOfAddedColumns">追加列の数:</entry>
    <entry key="AddRowsTo">行を次に追加:</entry>
    <entry key="OutputColumnMode">出力列のモード:</entry>
    <entry key="NumberOfAddedRows">追加行の数:</entry>
    <entry key="ActionWhenTruncationOccurs">切り捨てが発生した場合のアクション:</entry>
    <entry key="PadSize">パディング サイズ</entry>
    <entry key="OutputSizeValue">出力サイズ</entry>
    <entry key="Left">左</entry>
    <entry key="Right">右</entry>
    <entry key="BothLeftAndRight">左右両方</entry>
    <entry key="NoPadding">パディングなし</entry>
    <entry key="Userspecified">ユーザー指定</entry>
    <entry key="NextPowerOfTwo">次の 2 のべき乗</entry>
    <entry key="Top">上</entry>
    <entry key="Bottom">下</entry>
    <entry key="BothTopAndBottom">上下両方</entry>
    <entry key="Warning">警告</entry>
    <entry key="ImagePadDescription">2 次元イメージのパディングを行います。\n\nイメージを、行、列、または行と列両方の追加によってパディングします。イメージのパディングは、定数値の使用 ([定数])、境界値の反復 ([複製])、鏡像の使用 ([対称])、または要素の巡回的な繰り返しの使用 ([循環]) によって実行できます。</entry>
    <entry key="AddPortToSupplySubsystemParam">サブシステム パラメーターを指定するための端子を追加</entry>
    <entry key="NumberOfOutputs">出力数:</entry>
    <entry key="BlockSize">ブロック サイズ:</entry>
    <entry key="OverlapSize">オーバーラップ サイズ:</entry>
    <entry key="OrderOfTraversing">処理順序:</entry>
    <entry key="Rowwise">行方向</entry>
    <entry key="Columnwise">列方向</entry>
    <entry key="ClickTheOpenSubsystemButton">[サブシステムを開く] ボタンをクリックして、ブロックのサブシステムを開きます。ブロックをクリックしてこのサブシステムにドラッグし、ブロックが部分行列に対して行う処理演算を定義します。</entry>
    <entry key="Overlap">オーバーラップ:</entry>
    <entry key="TraverseOrder">処理順序:</entry>
    <entry key="OpenSubsystem">サブシステムを開く</entry>
    <entry key="Subsystem">サブシステム</entry>
    <entry key="BlockProcessingDescription">ユーザー指定の演算を、入力行列の部分行列で繰り返します。\n\nこのブロックは、ユーザー指定のサイズの部分行列を入力行列から抽出します。各部分行列は処理を行うためにサブシステムに送られ、各サブシステムの出力は出力行列へと再構築されます。\n\n [ブロック サイズ] パラメーターと [オーバーラップ] パラメーターを使用して、各部分行列のサイズとオーバーラップをセル配列形式で指定します。</entry>
    <entry key="SineAndCosineComputation">正弦と余弦の計算:</entry>
    <entry key="Dimensions">次元:</entry>
    <entry key="OptimizeTwiddleTableFor">回転テーブルを最適化する対象:</entry>
    <entry key="OutputInBitreversedOrder">ビット反転順での出力</entry>
    <entry key="SkipDividebytwoOnButterflyOutput">固定小数点信号で、バタフライ出力に対する 2 での除算をスキップ</entry>
    <entry key="FixedpointSineTableAttributes">固定小数点正弦表の属性:</entry>
    <entry key="SineTableWordLength">正弦表の語長:</entry>
    <entry key="SineTableFractionLength">正弦表の小数部の長さ:</entry>
    <entry key="SineTableDataTypeString">正弦表データ型 string:</entry>
    <entry key="LastSineTableDataTypeString">最後の正弦表データ型 string:</entry>
    <entry key="FixedpointOutputAttributes">固定小数点出力の属性:</entry>
    <entry key="OutputWordLength">出力語長:</entry>
    <entry key="OutputFractionLength">出力の小数部の長さ:</entry>
    <entry key="OutputDataTypeString">出力データ型 string:</entry>
    <entry key="LastOutputDataTypeString">最後の出力データ型 string:</entry>
    <entry key="OutputMinimum">出力の最小値:</entry>
    <entry key="OutputMaximum">出力の最大値:</entry>
    <entry key="FixedpointAccumulatorAttributes">固定小数点アキュムレータの属性:</entry>
    <entry key="FixedpointAccumulatorAttributes_MP">固定小数点アキュムレータの属性</entry>
    <entry key="AccumulatorWordLength">アキュムレータの語長:</entry>
    <entry key="AccumulatorFractionLength">アキュムレータの小数部の長さ:</entry>
    <entry key="AccumDataTypeString">アキュムレータ データ型 string:</entry>
    <entry key="LastAccumDataTypeString">最後のアキュムレータ データ型 string:</entry>
    <entry key="FixedpointProductOutputAttribute">固定小数点乗算出力の属性:</entry>
    <entry key="ProductOutputWordLength">乗算出力の語長:</entry>
    <entry key="ProductOutputFractionLength">乗算出力の小数部の長さ:</entry>
    <entry key="ProdOutputDataTypeString">prodOutput データ型 string:</entry>
    <entry key="LastProdOutputDataTypeString">最後の prodOutput データ型 string:</entry>
    <entry key="RoundIntegerCalculationsToward">整数計算の丸め方向:</entry>
    <entry key="SaturateOnIntegerOverflow">整数オーバーフローで飽和</entry>
    <entry key="LockScaling">スケーリングのロック:</entry>
    <entry key="TrigonometricFcn">三角関数</entry>
    <entry key="Speed">速度</entry>
    <entry key="SameWordLengthAsInput">入力と同じ語長</entry>
    <entry key="DCTDescription">実数入力信号の 2 次元離散コサイン変換 (2-D DCT) を出力します。入力行列の行と列の数は 2 のべき乗でなければなりません。      </entry>
    <entry key="WhenTheBlockInputIsFixedPoint">ブロックの入力が固定小数点の場合、すべての内部データ型は符号付き固定入力になります。</entry>
    <entry key="IDCTDescription">実数入力信号の 2 次元逆離散コサイン変換 (2-D IDCT) を出力します。入力行列の行と列の数は 2 のべき乗でなければなりません。\n\n</entry>
    <entry key="OptimizeTwiddleTableObosleted">回転テーブルを最適化する対象 (旧式):</entry>
    <entry key="FFTImplementation">FFT の実装:</entry>
    <entry key="ScaleResultByFFTLength">FFT の長さによって結果をスケーリング</entry>
    <entry key="BlockDoesNotSupportFixedpoint">このブロックは、[メイン] ペインで [FFT の実装] パラメーターに [FFTW] が選択されている場合、固定小数点データ型をサポートしません。</entry>
    <entry key="Auto">自動</entry>
    <entry key="FFTDescription">実数入力または複素数入力の複素数 2 次元高速フーリエ変換 (2-D FFT) を出力します。\n\n[FFT の実装] パラメーターが [Radix-2] に設定されている場合、入力行列の行と列の数は 2 のべき乗でなければなりません。</entry>
    <entry key="DataTypeAssistant">データ型アシスタント</entry>
    <entry key="Minimum">最小値</entry>
    <entry key="InAdditionToFixptTrump">さらに、固定小数点正弦表の値の場合、小数部の長さは常に語長から 1 を引いた値と等しくなります。</entry>
    <entry key="InputIsInBitreversedOrder">入力はビット反転順</entry>
    <entry key="InputIsConjugateSymmetric">入力は共役対称</entry>
    <entry key="SkipScaling">スケーリングをスキップ</entry>
    <entry key="DivideOutputByProductOfFFTLength">出力を各入力次元の FFT 長の積で除算</entry>
    <entry key="IFFTDescription">実数入力または複素数入力の 2 次元逆高速フーリエ変換 (2-D IFFT) を出力します。[入力は共役対称] オプションを選択した場合、出力は実数になり、それ以外の場合は複素数になります。\n\n [FFT の実装] パラメーターが [Radix-2] に設定されている場合、入力行列の行と列の数は 2 のべき乗でなければなりません。</entry>
    <entry key="FromMultiMediaFileDescription">オーディオ データ、ビデオ データ、またはオーディオとビデオ両方のデータを含むマルチメディア ファイルを読み取ります。\n\nWindows プラットフォームでは、このブロックは圧縮または非圧縮のマルチメディア ファイルを読み取ります。\n\nWindows 以外のプラットフォームでは、このブロックはオーディオとビデオの非圧縮 AVI ファイルと、ビデオのみの圧縮または非圧縮のファイルを読み取ります。</entry>
    <entry key="ToMultiMediaFileDescription">ビデオ フレームやオーディオ サンプルをマルチメディア ファイルに書き込みます。Windows では、オーディオとビデオの圧縮プログラムを利用して、オーディオやビデオのストリームを出力ファイルに圧縮することができます。指定の出力ファイルが存在している場合、そのファイルは上書きされます。</entry>
    <entry key="TransformationType">変換タイプ:</entry>
    <entry key="FindAndExcludeOutliers">外れ値を検出して除外</entry>
    <entry key="DetermineNumberOfRandomSampling">次を使用して無作為抽出の数を特定:</entry>
    <entry key="AlgebraicDistanceThreshold">インライア特定用の代数距離しきい値:</entry>
    <entry key="DistanceThresholdForDetermining">インライア特定用の距離しきい値 (ピクセル単位):</entry>
    <entry key="NumberOfRandomSamplings">無作為抽出の数:</entry>
    <entry key="MaximumNumberOfRandomSamplings">無作為抽出の最大数:</entry>
    <entry key="DesiredConfidencePerc">目的とする信頼度 (%):</entry>
    <entry key="StopSamplingEarlier">指定した割合の点のペアがインライアと特定された場合にサンプリングを早期に停止</entry>
    <entry key="InlierPercentage">インライアの割合:</entry>
    <entry key="PerformAdditionalIterative">変換行列の反復調整を追加で実行</entry>
    <entry key="WhenPts1AndPts2AreBuiltin">Pts1 と Pts2 が組み込み整数の場合に変換行列のデータ型を次に設定:</entry>
    <entry key="OutputBooleanSignalIndicating">どの点のペアがインライアかを示す boolean 信号を出力</entry>
    <entry key="AllowVariablesizeSignalInput">可変サイズの信号入力を許可</entry>
    <entry key="Outputs">出力</entry>
    <entry key="MatchMetric1">一致メトリクス:</entry>
    <entry key="SizeNOfSquareMatrix">正方行列のサイズ (N):</entry>
    <entry key="OutputFractionalLength">出力の小数部の長さ:</entry>
    <entry key="FixedpointProductAttributes">固定小数点乗算器の属性</entry>
    <entry key="ProductWordLength">乗算器の語長:</entry>
    <entry key="ProductFractionLength">乗算器の小数部の長さ:</entry>
    <entry key="RoundIntegerCalculationsTowards">整数計算の丸め方向:</entry>
    <entry key="LockScaling1">スケーリングのロック</entry>
    <entry key="ThresholdScaleFactor_1">しきい値のスケール係数:</entry>
    <entry key="ThresholdLowHigh">しきい値、[Low High]:</entry>
    <entry key="PercentOfPixelsNotEdges">エッジではなくピクセルの割合</entry>
    <entry key="Sigma">シグマ</entry>
    <entry key="OverlapSizerC">オーバーラップ サイズ [r c]:</entry>
    <entry key="Product1Attributes">乗算器 1 の属性:</entry>
    <entry key="Product1WordLength">乗算器 1 の語長:</entry>
    <entry key="Product1FractionLength">乗算器 1 の小数部の長さ:</entry>
    <entry key="Product2Attributes">乗算器 2 の属性:</entry>
    <entry key="Product2WordLength">乗算器 2 の語長:</entry>
    <entry key="Product2FractionLength">乗算器 2 の小数部の長さ:</entry>
    <entry key="GradientMethod">勾配法:</entry>
    <entry key="NumberOfInputFramesToBuffer">バッファリングする入力フレーム数:</entry>
    <entry key="EigenThresholdAttributes">固有しきい値の属性:</entry>
    <entry key="EigenThresholdWordLength">固有しきい値の語長:</entry>
    <entry key="EigenThresholdFractionLength">固有しきい値の小数部の長さ:</entry>
    <entry key="ProductOutputAttributes">乗算器出力の属性:</entry>
    <entry key="AccumulatorAttributes">アキュムレータの属性:</entry>
    <entry key="GradientAttributes">勾配の属性:</entry>
    <entry key="GradientWordLength">勾配の語長:</entry>
    <entry key="GradientFractionLength">勾配の小数部の長さ:</entry>
    <entry key="OutputAttributes">出力の属性:</entry>
    <entry key="MemoryAttributes">メモリの属性:</entry>
    <entry key="MemoryWordLength">メモリの語長:</entry>
    <entry key="MemoryFractionLength">メモリの小数部の長さ:</entry>
    <entry key="FirstCoefficientAttributes">最初の係数の属性:</entry>
    <entry key="FirstCoefficientWordLength">最初の係数の語長:</entry>
    <entry key="FirstCoefficientFractionLength">最初の係数の小数部の長さ:</entry>
    <entry key="FixedpointCoefficientAttributes">固定小数点係数の属性:</entry>
    <entry key="CoefficientWordLength">係数の語長:</entry>
    <entry key="CoefficientFractionLength">係数の小数部の長さ:</entry>
    <entry key="CoefficientSignedness">係数の符号属性</entry>
    <entry key="CoefficientsDataTypeString">係数のデータ型 string:</entry>
    <entry key="LastCoefficientsDataTypeString">最後の係数のデータ型 string:</entry>
    <entry key="CoefficientsMinimum">係数の最小値:</entry>
    <entry key="CoefficientsMaximum">係数の最大値:</entry>
    <entry key="OutputSignedness">出力の符号属性:</entry>
    <entry key="ParameterSetToTrue">このパラメーターはテスト以外では true に設定する必要があります</entry>
    <entry key="FixedpointInputsquaredProduct">固定小数点の入力二乗積出力の属性:</entry>
    <entry key="InputsquaredProductWordLength">入力二乗積の語長:</entry>
    <entry key="InputsquaredProductFractionLength">入力二乗積の小数部の長さ:</entry>
    <entry key="FixedpoingInputsumsquaredProduct">固定小数点の入力合計二乗積の属性:</entry>
    <entry key="InputsumsquaredProductWordLength">入力合計二乗積の語長:</entry>
    <entry key="InputsumsquaredProductFractionLen">入力合計二乗積の小数部の長さ:</entry>
    <entry key="OutputActualNumberOfBlobs">実際のブロブ数を出力</entry>
    <entry key="TreatOutputAsVariableDimensiona">出力を可変次元として扱う</entry>
    <entry key="FillEmptySpacesInOutput">出力の空白部分を塗りつぶす</entry>
    <entry key="FixedpointCentroidAttributes">固定小数点の重心の属性:</entry>
    <entry key="CentroidWordLength">重心の語長:</entry>
    <entry key="CentroidFractionLength">重心の小数部の長さ:</entry>
    <entry key="FixedpointDiamAttributes">固定小数点の直径の属性:</entry>
    <entry key="DiamWordLength">直径の語長:</entry>
    <entry key="DiamFractionLength">直径の小数部の長さ:</entry>
    <entry key="FixedpointExtentAttributes">固定小数点の割合の属性:</entry>
    <entry key="ExtentWordLength">割合の語長:</entry>
    <entry key="ExtentFractionLength">割合の小数部の長さ:</entry>
    <entry key="FixedpointPerimeterAttributes">固定小数点の周囲長の属性:</entry>
    <entry key="PerimeterWordLength">周囲長の語長:</entry>
    <entry key="PerimeterFractionLength">周囲長の小数部の長さ:</entry>
    <entry key="OutputDataTypeMode">出力データ型モード:</entry>
    <entry key="SineValueAttributes">正弦値の属性:</entry>
    <entry key="SineValue">正弦値 </entry>
    <entry key="RhoValuesAttributes">rho 値の属性:</entry>
    <entry key="RhoValuesWordLength">rho 値の語長:</entry>
    <entry key="RhoValuesFractionLength">rho 値の小数部の長さ:</entry>
    <entry key="OutputHAttributes">出力 (H) の属性:</entry>
    <entry key="OutputHWordLength">出力 (H) の語長:</entry>
    <entry key="OutputHFractionLength">出力 (H) の小数部の長さ:</entry>
    <entry key="ThetaOutputAttributes">theta 出力の属性:</entry>
    <entry key="ThetaValuesWordLength">theta 値の語長:</entry>
    <entry key="ThetaValuesFractionLength">theta 値の小数部の長さ:</entry>
    <entry key="BinaryPointScaling">2 進小数点スケーリング</entry>
    <entry key="SlopeAndBiasScaling">傾きとバイアスのスケーリング</entry>
    <entry key="FixptOpParams">固定小数点が使用可能なパラメーター</entry>
    <entry key="RoundingMode">丸めモード:</entry>
    <entry key="FixptDataTypes">固定小数点データ型</entry>
    <entry key="SpecifyWordLength">語長の指定</entry>
    <entry key="SameAsInput">入力と同じ</entry>
    <entry key="Double">double</entry>
    <entry key="Single">single</entry>
    <entry key="Obsolete9b">Obsolete9b</entry>
    <entry key="RGB">RGB</entry>
    <entry key="Rho">Rho</entry>
    <entry key="Lanczos2">Lanczos2</entry>
    <entry key="Lanczos3">Lanczos3</entry>
    <entry key="WindowX">windowX</entry>
    <entry key="WindowY">windowY</entry>
    <entry key="WindowWidth">windowWidth</entry>
    <entry key="WindowHeight">windowHeight</entry>
    <entry key="FourCCpane">FourCCpane</entry>
    <entry key="Radix2">Radix-2</entry>
    <entry key="FFTW">FFTW</entry>
    <entry key="N">N:</entry>
    <entry key="MinArea">minArea</entry>
    <entry key="MaxArea">maxArea</entry>
  </message>
</rsccat>
