<?xml version="1.0" encoding="UTF-8"?>
<!--Copyright 2024 The MathWorks, Inc.-->

<rsccat xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.0" locale="ko_KR" product="vision" xsi:noNamespaceSchemaLocation="../../resources/schema/msgcat.xsd">
  <message>
    <entry key="ClassNamesWeightsMismatch">''ClassNames'' and ''ClassWeights'' must have the same number of elements.</entry>
    <entry key="ClassesWeightsMismatch">''Classes''와 ''ClassWeights''는 요소 개수가 동일해야 합니다.</entry>
    <entry key="ClassesRequired">''ClassWeights''를 지정하려면 ''Classes''도 지정해야 합니다. ''ClassWeights''를 지정할 경우 ''Classes''는 'auto'가 아니어야 합니다.</entry>
    <entry key="SolutionToModifyClasses">클래스 개수를 변경하려면 ''ClassWeights''를 ''none''으로 설정하십시오.</entry>
    <entry key="OneLineDispName">픽셀 분류 계층</entry>
    <entry key="oneLineDisplay">교차 엔트로피 손실 {0}</entry>
    <entry key="oneLineDisplayWeighted">클래스 가중 교차 엔트로피 손실 {0}</entry>
    <entry key="oneLineDisplayOneClass">(클래스: ''{0}'')</entry>
    <entry key="oneLineDisplayTwoClasses">(클래스: ''{0}'' 및 ''{1}'')</entry>
    <entry key="oneLineDisplayNClasses">(클래스: ''{0}'', ''{1}'' 및 기타 {2}개)</entry>
    <entry key="InvalidClassNames">''ClassNames'' value must be a vector of strings, a cell array of character vectors, or ''auto''.</entry>
    <entry key="NonUniqueClassNames">''ClassNames'' must have unique names.</entry>
    <entry key="ClassesAndClassNamesNVP">Incompatible arguments. To set the Classes property of the layer, use the ''Classes'' argument only.</entry>
    <entry key="diceOneLineDispName">다이스 픽셀 분류 계층</entry>
    <entry key="diceOneLineDisplay">일반화된 다이스 손실 {0}</entry>
    <entry key="MultiClass">''Classes'' must have 2 or more elements.</entry>
    <entry key="invalidLocationInput">첫 번째 입력값은 문자형 벡터, string형 또는 문자형 벡터로 구성된 셀형 배열이어야 합니다.</entry>
    <entry key="invalidClassNamesInput">두 번째 입력값은 문자형 벡터, string형 또는 문자형 벡터로 구성된 셀형 배열이어야 합니다.</entry>
    <entry key="pxdsNonUniqueClassNames">클래스 이름은 고유해야 합니다.</entry>
    <entry key="pxidNotVectorOrMatrix">The pixel label IDs must be a vector or M-by-3 matrix.</entry>
    <entry key="pxidNotColVectorOrMatrix">The cell array of pixel label IDs must be column vectors or M-by-3 matrices.</entry>
    <entry key="pxidNotAllSameFormat">All pixel label IDs must be either column vectors or M-by-3 matrices.</entry>
    <entry key="pxidDuplicateIDs">픽셀 레이블 ID는 고유해야 합니다.</entry>
    <entry key="gTruthWithTimeStamps">타임스탬프를 갖는 groundTruth 객체는 지원되지 않습니다.</entry>
    <entry key="gTruthWithNoPixelLabels">groundTruth 객체는 PixelLabel 유형의 레이블 정의 테이블을 포함해야 합니다.</entry>
    <entry key="pxdsFilesNotSettable">Files 속성을 설정하는 것은 지원되지 않습니다. 새 pixelLabelDatastore를 대신 만드십시오.</entry>
    <entry key="invalidCustomReadFcnOutput">사용자 지정 ReadFcn의 출력값은 categorical형 행렬이어야 합니다.</entry>
    <entry key="unexpectedClassNames">사용자 지정 ReadFcn의 categorical형 출력값에는 다음 범주가 있어야 합니다:\n\n{0}.</entry>
    <entry key="invalidNumelClassesLabels">클래스 이름의 개수는 pixelLabelID의 개수와 같아야 합니다.</entry>
    <entry key="gTruthNotSameName">All input groundTruth objects must define the same pixel label names in their label definitions table.</entry>
    <entry key="pixelValueNotUint8">기본적으로 pixelLabelDatastore는 uint8형 데이터가 있는 픽셀 레이블 영상 파일만 지원합니다. uint8형이 아닌 영상 데이터에서 categorical형 레이블을 반환하는 사용자 지정 읽기 함수를 지정하려면 ReadFcn을 사용하십시오.</entry>
    <entry key="expectedRGBLabels">RGB 3색 픽셀 레이블 ID가 지정된 경우 픽셀 레이블 영상에는 3개의 채널이 있어야 합니다.</entry>
    <entry key="invalid4DImage">4차원 영상 입력값의 세 번째 차원은 1 또는 3이어야 합니다.</entry>
    <entry key="invalidNumChannels">입력 영상에는 신경망에 필요한 채널 개수인 {0}개의 채널이 있어야 합니다.</entry>
    <entry key="noPixelClassificationLayer">신경망에 픽셀 분류 계층이 있어야 합니다.</entry>
    <entry key="tooManyPixelClsLayers">A network with more than one pixel classification layer is not supported.</entry>
    <entry key="imdsROIInvalid">Input roi is not supported when the first input is a datastore.</entry>
    <entry key="dirDoesNotExist">''WriteLocation'' 값은 디렉터리여야 합니다.</entry>
    <entry key="verboseHeader">의미론적 분할 신경망 실행 중</entry>
    <entry key="verboseProgressTxt">* {0}개의 영상을 처리했습니다.</entry>
    <entry key="onlyApplyWithImds">WriteLocation, NamePrefix, Verbose 및 UseParallel은 입력값이 데이터저장소인 경우에만 지원됩니다.</entry>
    <entry key="tooLargeNumClasses">''OutputType'' value must be ''categorical'' or ''double'' when the number of classes is greater than 255.</entry>
    <entry key="invalidImageNumDims">Label images must be 2D or 3D.</entry>
    <entry key="invalidDatastoreReadOutput">The input datastore read output must be a numeric array, an M-by-N cell array, or an M-by-N table.</entry>
    <entry key="outputROISizeMismatch">When segmenting an image ROI, the network output size ({0}) must equal the size of the ROI ({1}). Use semanticseg with a manually cropped image when the network output size does not match the size of the ROI.</entry>
    <entry key="invalidClassesInputSize">The number of classes in ''Classes'' input must be equal to the Classes property of the pixel classification layer.</entry>
    <entry key="invalidClassesInputSizeDlnetwork">The number of classes in ''Classes'' input must be equal to the number of channels in the output layer of the dlnetwork input.</entry>
    <entry key="missingInputLayer">Invalid network: Missing input layer. The network must have at least one input layer.</entry>
    <entry key="tooManyOutputLayers">A network with more than one output layer is not supported.</entry>
    <entry key="tooManyInputLayers">입력값이 여러 개인 신경망은 지원되지 않습니다.</entry>
    <entry key="UnableToCreateOutputFolder">출력 폴더 {0}을(를) 생성할 수 없습니다.</entry>
    <entry key="evaluationHeader">의미론적 분할 결과 평가 중</entry>
    <entry key="selectedMetrics">* 선택한 메트릭:</entry>
    <entry key="processingNImages">* {0}개 영상을 처리하는 중...</entry>
    <entry key="finalizingResults">* 완료 중...</entry>
    <entry key="dataSetMetrics">* 데이터 세트 메트릭:</entry>
    <entry key="done">완료.</entry>
    <entry key="mustHaveSameClasses">{0}과(와) {1}에서 반환된 categorical형 데이터는 범주가 동일해야 합니다.</entry>
    <entry key="mustHaveSameNumOfFiles">{0}과(와) {1}은(는) 파일 개수가 동일해야 합니다.</entry>
    <entry key="mustHaveSameSize">{0}과(와) {1}에서 반환된 categorical형 데이터의 크기는 동일해야 합니다.</entry>
    <entry key="readMustReturnCategorical">{0}과(와) {1}은(는) categorical형 데이터를 반환해야 합니다.</entry>
    <entry key="mustBePXDSOrCell">{0}과(와) {1}은(는) 모두 셀형 배열 또는 데이터저장소여야 합니다.</entry>
    <entry key="parallelNotSupported">UseParallel is only supported when the input datastores are a pixelLabelDatastore or a pixelLabelImageDatastore.</entry>
    <entry key="mustBeCellArrayOfDatastores">입력 셀형 배열은 데이터저장소를 포함해야 합니다.</entry>
    <entry key="tableMustHaveConfusionMatrix">The input table must have a variable, 'ConfusionMatrix'. If the table has additional variables, 'BlockInfo' and 'ImageNumber', the function can output BlockMetrics.</entry>
    <entry key="tableNonUniqueClassNames">The input table must have a variable, 'ConfusionMatrix'. If the table has additional variables, 'BlockInfo' and 'ImageNumber', the function can output BlockMetrics.</entry>
    <entry key="confusionMatrixMustBeSameSize">The input confusion matrices must be the same size.</entry>
    <entry key="confusionMatrixAndClassMustBeConsistent">The size of the input confusion matrices must be C-by-C where C is the number of classes.</entry>
    <entry key="expectedNonEmpty">입력값은 비어 있지 않아야 합니다.</entry>
    <entry key="imageSizeIncorrect">imageSize는 요소를 2개 또는 3개 가진 벡터여야 합니다. </entry>
    <entry key="imageTooSmallForDepth">imageSize는 적어도 {0}이어야 합니다. imageSize는 인코더/디코더 신경망의 심도 D에 의해 제약되며 적어도 2^D이어야 합니다.</entry>
    <entry key="vggNeedsRGB">VGG-16 또는 VGG-19를 기반으로 SegNet을 생성할 때 imageSize는 세 개의 요소를 가져야 하고 세 번째 요소는 3이어야 합니다.</entry>
    <entry key="missingVGGAddon">이 함수에는 {0}이(가) 필요합니다. &lt;a href="matlab: matlab.internal.addons.showAddon(''{1}'')"&gt;애드온 탐색기&lt;/a&gt;를 사용하여 설치하십시오.</entry>
    <entry key="notSupportedWithPretrained">FilterSize, NumConvolutionLayers, and NumOutputChannels are not supported when 'vgg16' or 'vgg19' is used to create SegNet.</entry>
    <entry key="segnetLayersDeprecation">segnetLayers는 향후 릴리스에서 제거될 예정입니다. 대신 dlnetwork(Deep Learning Toolbox) 객체를 사용하여 SegNet 신경망을 생성하십시오.</entry>
    <entry key="fcnlayersDeprecation">fcnLayers는 향후 릴리스에서 제거될 예정입니다. 대신 dlnetwork(Deep Learning Toolbox) 객체를 사용하여 FCN 신경망을 생성하십시오.</entry>
    <entry key="imageSizeIncompatible"> 영상의 너비와 높이는 2^EncoderDepth의 배수여야 합니다. 영상 크기를 {0} 대신 {1}(으)로 지정할 수 있습니다.</entry>
    <entry key="unetLayersDeprecation">unetLayers는 향후 릴리스에서 제거될 예정입니다. 대신 unet 함수를 사용하십시오.</entry>
    <entry key="encoderDecoderMismatch"> 인코더에는 지정된 현재 깊이에 대해 출력값이 {0}개 있어야 합니다.</entry>
    <entry key="encoderImageInputMissing"> 인코더에는 영상 입력 계층이 있어야 합니다.</entry>
    <entry key="imageSizeIncompatible3d"> 영상의 너비, 높이 및 깊이는 2^EncoderDepth의 배수여야 합니다. 영상 크기를 {0} 대신 {1}(으)로 지정할 수 있습니다.</entry>
    <entry key="imageSizeIncompatibleValidConv"> 입력 크기는 인코더/디코더 신경망의 유효한 컨벌루션 및 심도에 의해 제약됩니다. 입력 크기를 {0} 대신 {1}(으)로 지정할 수 있습니다.</entry>
    <entry key="imageSizeIncorrect3d">입력 크기는 요소를 3개 또는 4개 가진 벡터여야 합니다. </entry>
    <entry key="unet3dLayersDeprecation">unet3dLayers는 향후 릴리스에서 제거될 예정입니다. 대신 unet3d 함수를 사용하십시오.</entry>
    <entry key="imageSizeThirdDimMustBeThree">imageSize의 세 번째 차원은 3이어야 합니다.</entry>
    <entry key="imageSizeInvalidForNetwork">{1}의 경우 imageSize의 처음 두 값은 {0}보다 크거나 같아야 합니다.</entry>
    <entry key="invalidDownsamplingFactor">''DownsamplingFactor'' 값은 8 또는 16이어야 합니다.</entry>
    <entry key="deeplabv3plusLayersDeprecation">deeplabv3plusLayers는 향후 릴리스에서 제거될 예정입니다. 대신 deeplabv3plus 함수를 사용하십시오.</entry>
    <entry key="ChannelRatioMustBePow2">''ChannelRatio'' value must be a power of 2.</entry>
    <entry key="IncompatibleChannelRatioAndMultiplier">When the ''ChannelRatio'' value is {0}, the ''ChannelMultiplier'' value must be one of the following: {1}.</entry>
    <entry key="missingPixelLabelData">모든 groundTruth 객체는 픽셀 레이블 데이터를 포함해야 합니다.</entry>
    <entry key="inconsistentPixelLabelNames">All groundTruth objects must define the same set of pixel label names in the label definitions table.</entry>
    <entry key="unequalNumelFiles">imds와 pxds는 파일 개수가 동일해야 합니다.</entry>
    <entry key="aug3dNotSupported">pixelLabelImageDatastore는 2차원 영상에 대해서만 ColorPreprocessing, DataAugmentation 및 OutputSize 속성을 지원합니다. 3차원 데이터를 크기 조정, 증강 또는 수정하려면 &lt;a href="matlab:doc matlab.io.datastore.ImageDatastore/transform"&gt;transform&lt;/a&gt; 메서드를 참조하십시오.</entry>
    <entry key="augOutSizeNotSupported">DataAugmentation이 지정되거나 OutputSizeMode가 ''randcrop'' 또는 ''centercrop''인 경우 영상과 이에 대응하는 픽셀 레이블이 지정된 영상은 높이와 너비가 같아야 합니다.</entry>
    <entry key="outOfData">더 이상 읽을 데이터가 없습니다. reset 메서드를 사용하여 데이터의 시작 위치로 재설정하십시오. 읽을 수 있는 데이터가 있는지 확인하려면 hasdata 메서드를 사용하십시오.</entry>
    <entry key="pixelLabelImageDatastoreDeprecation">pixelLabelImageDatastore는 향후 릴리스에서 제거될 예정입니다. 대신 imageDatastore 객체 및 pixelLabelDatastore 객체와 combine 함수를 사용하십시오.</entry>
    <entry key="cannotOutputBlockMetrics">Block Metrics can be calculated only when the input table has BlockInfo and ImageNumber.</entry>
    <entry key="roiConstant">코드 생성 시 파라미터 'roi'는 coder.Constant 유형이어야 합니다.</entry>
    <entry key="roiIncorrectNumel">ROI는 4개 요소로 구성된 행 배열이어야 합니다. </entry>
    <entry key="VariableSizeMiniBatch">predict 메서드에 전달된 MiniBatchSize 이름-값 쌍은 코드 생성 시 고정 크기여야 합니다.</entry>
    <entry key="IgnoreInputArg">코드 생성 시 ''{0}'' 메서드에 전달되는 인수 ''{1}''은(는) 지원되지 않습니다. 이 인수는 무시됩니다.</entry>
    <entry key="datastoreNotSupported">코드 생성 시 입력 데이터저장소는 지원되지 않습니다. </entry>
    <entry key="codegenUnsupported">함수 semanticseg에 대해서는 코드 생성이 지원되지 않음</entry>
    <entry key="IgnoreDatastoreNV">코드 생성 시 인수 ''{0}''은(는) 지원되지 않습니다. 이 인수는 무시됩니다.</entry>
  </message>
</rsccat>
