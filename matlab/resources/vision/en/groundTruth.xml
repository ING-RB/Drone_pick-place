<?xml version="1.0" encoding="UTF-8" ?>
<!-- Copyright 2016-2023 The MathWorks, Inc. -->
<rsccat version="1.0" locale="en_US" product="vision" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../../schema/msgcat.xsd">
  <message>
    <entry key="labelDefsInvalidLabelNames">Expected each Name in the label definitions table to be a valid MATLAB variable name.</entry>
    <entry key="invalidName">{0} is an invalid label name. Please update the label definitions table.</entry>
    <entry key="labelDefsInvalidLabelType">Expected each Type in the label definitions table to be a labelType enumeration.</entry>
    <entry key="labelDefsInvalidPixelLabelID">Expected each PixelLabelID in the label definitions table to be a column vector or M-by-3 matrix with values between 0 and 255. Other label types must specify an empty PixelLabelID.</entry>
    <entry key="labelDefsInvalidLabelDesc">Expected each Description in the label definitions table to be a character vector or a string.</entry>
    <entry key="labelDefsInvalidLabelGroup">Expected each Group in the label definitions table to be a character vector or a string.</entry>
    <entry key="labelDefsInvalidLabelColor">Expected each Color in the label definitions table to be a 3 element row vector and not yellow [1 1 0] in color</entry>
    <entry key="labelHierarchyInvalidPixelLabelID">Invalid label definitions defined with  PixelLabel label type, sublabels and/or attributes.</entry>
    <entry key="labelHierarchyInvalidLabelDesc">Invalid label description for labels defined with sublabel and/or attributes.</entry>
    <entry key="invalidHierarchynotStruct">Invalid label definitions defined with sublabels and/or attributes. It must be a struct</entry>
    <entry key="invalidLabelDefinitionColumns">Expected label definitions to be a table with 2 - 5 columns.</entry>
    <entry key="invalidLabelDefinitionColumnsPixelLabel">Expected label definitions to be a table with 2 - 4 columns when PixelLabel is not one of the label types.</entry>
    <entry key="invalidDataSourceFooter"><![CDATA[Invalid DataSource. Use <a href="matlab:doc('changeFilePaths')">changeFilePaths</a> to update DataSource.]]></entry>
    <entry key="labelDefsNotUnique">Expected each Name in the label definitions table to be unique.</entry>
    <entry key="invalidRootDir">Expected rootDirectory to be the name of a valid directory.</entry>
    <entry key="invalidLabelSpecification">Expected labels to be specified as a cell array/string of label names or a labelType enumeration.</entry>
    <entry key="typeNotPresent">No labels of labelType ''{0}'' were found.</entry>
    <entry key="nonEmptyLabels">Expected labels to be non-empty.</entry>
    <entry key="labelNotFound">Label ''{0}'' was not found</entry>
    <entry key="groupNotFound">Group ''{0}'' was not found</entry>
    <entry key="inconsistentLabelDefNames">Column names in label data are not consistent with the label definitions.</entry>
    <entry key="inconsistentTimeStamps">Number of timestamps in label data is not consistent with the data source.</entry>
    <entry key="badPolygonData"><![CDATA[Invalid entry in label data table for Polygon labelType. Table entries for column ''{0}'' must be  M-by-1 cell arrays, each containing N-by-2 matrices of [x, y] locations. Please refer to <a href="matlab:doc('changeFilePaths')">groundTruth</a> object.]]></entry>
    <entry key="badPointData"><![CDATA[Invalid entry in label data table for Point labelType. Table entries for column ''{0}'' must be  M-by-2 matrices of [x, y] locations. Please refer to <a href="matlab:doc('changeFilePaths')">groundTruth</a> object.]]></entry>
    <entry key="badRectData"><![CDATA[Invalid entry in label data table for Rectangle labelType. Table entries for column ''{0}'' must be M-by-4 matrices of [x, y, width, height]. The width and height must be non-negative. Please refer to <a href="matlab:doc('groundTruth')">groundTruth</a> object.]]></entry>
    <entry key="badRotatedRectData"><![CDATA[Invalid entry in label data table for Rotated Rectangle labelType. Table entries for column ''{0}'' must be M-by-5 matrices of [xctr, yctr, width, height, yaw]. The width and height must be non-negative. Please refer to <a href="matlab:doc('groundTruth')">groundTruth</a> object.]]></entry>
    <entry key="badProjCuboidData"><![CDATA[Invalid entry in label data table for Projected Cuboid labelType. Table entries for column ''{0}'' must be M-by-8 matrices of [x1, y1, width1, height1, x2, y2, width2, height2]. The values of width1, height1, width2 and height2 must be non-negative. Please refer to <a href="matlab:doc('groundTruth')">groundTruth</a> object.]]></entry>
    <entry key="badCuboidData"><![CDATA[Invalid entry in label data table for Cuboid labelType. Table entries for column ''{0}'' must be M-by-9 matrices of [xctr, yctr, zctr, xlen, ylen, zlen, xrot, yrot, zrot]. The xlen, ylen and zlen must be non-negative. Please refer to <a href="matlab:doc('groundTruthMultisignal')">groundTruthMultisignal</a> object.]]></entry>
    <entry key="badLineData"><![CDATA[Invalid entry in label data table for Line labelType. Table entries for column ''{0}'' must be M-by-1 cell arrays, each containing N-by-2 matrices of [x, y] locations or N-by-3 matrices of [x, y, z] locations. Please refer to <a href="matlab:doc('changeFilePaths')">groundTruth</a> object.]]></entry>
    <entry key="invalidEntryLabelDataStruct">Invalid entry in label data table. Table entries for column ''{0}'' must be of type struct.</entry>
    <entry key="badSceneData">Invalid entry in label data table for Scene labelType. Table entries for column ''{0}'' must be logical scalars.</entry>
    <entry key="badImageDirSource"><![CDATA[The data source points to a directory that cannot be found.\n''{0}''\nUpdate the DataSource using <a href="matlab:doc('changeFilePaths')">changeFilePaths</a> method.]]></entry>
    <entry key="badImageNameSource"><![CDATA[The data source points to one or more image files in directory \n  ''{0}''\n that cannot be found. Update the DataSource using <a href="matlab:doc('changeFilePaths')">changeFilePaths</a> method.]]></entry>
    <entry key="badSource"><![CDATA[The data source cannot be found. Update the DataSource using <a href="matlab:doc('changeFilePaths')">changeFilePaths</a> method.]]></entry>
    <entry key="badVideoSource"><![CDATA[The data source points to a video file that cannot be found.\n  ''{0}''\n Update the DataSource using <a href="matlab:doc('changeFilePaths')">changeFilePaths</a> method.]]></entry>
    <entry key="badPixelLabelData">Invalid entry in label data table for PixelLabel labelType. Table entries for column ''{0}'' must be an image file name specified as a character vector.</entry>
    <entry key="labelDataMissingPixelLabelData">Expected label data to contain a single column named PixelLabelData.</entry>
    <entry key="labelDefsMissingType">Expected the second column of the label definition to contain labelType enumerations.</entry>
    <entry key="badImageFiles"><![CDATA[The data source points to one or more image files that cannot be found. Update the DataSource filenames using <a href="matlab:doc('changeFilePaths')">changeFilePaths</a> method.]]></entry>
    <entry key="nonCellstrDataSource">Expected dataSource to be a cell array of image file names specified as character vectors.</entry>
    <entry key="labelDefsAllColumnsNotSameFormat"> Expected all PixelLabelID values to be either column vectors or M-by-3 matrices.</entry>
    <entry key="labelDefsDuplicateIDs">The same PixelLabelID value in the label definitions table must not be used for multiple label categories.</entry>
    <entry key="pixelLabelsNotSupportWithTimeStamps">A data source with timestamps is not supported with label definitions of labelType.PixelLabel type.</entry>
    <entry key="labelDefsMissingPixelLabelID">Expected label definitions table to have PixelLabelID columns when any label type is labelType.PixelLabel.</entry>
    <entry key="invalidPixelLabelNotCell">Expected PixelLabelID values in the label definitions table to be cell arrays of numeric values.</entry>
    <entry key="pixelLabelSelectByNameNotSupported">Selecting labels by name is not supported for labelType.PixelLabel labels. Use selectLabels(gTruth, labelType.PixelLabel) to select labelType.PixelLabel labels.</entry>
    <entry key="PixelLabelDataNotFoundOnLoad">The groundTruth object's LabelData points to one or more PixelLabelData files that cannot be found. Update the PixelLabelData entries using changeFilePaths method.</entry>
    <entry key="invalidAlternatePathsType">The alternateFilePaths must be a string vector, a cell array of string vectors or a cell array of character vectors. Each string vector must be of size 1-by-2 and of the form [current alternative].</entry>
    <entry key="NumFilesNotResolved">\n{0} file(s) are still unresolved in this groundTruth object.</entry>
    <entry key="AllFilePathsResolved">\nAll the file paths are resolved in this groundTruth object.</entry>
    <entry key="CustomSourceOnlyPixel"><![CDATA[For custom source, only the PixelLabelData is updated. Update the DataSource using a valid <a href="matlab:doc('groundTruthDataSource')">groundTruthDataSource</a> object.]]></entry>
    <entry key="labelNameExists">newName ''{0}'' already exists in this groundTruth object. Provide a new label name that is not part of the groundTruth object.</entry>
    <entry key="invalidNewLabelName">''{0}'' must be a valid variable name.</entry>
    <entry key="badROILabelData">ROILabelData column must contain a valid structure.</entry>
    <entry key="badROILabelDataField">ROILabelData structure contains invalid field name.</entry>
    <entry key="badROILabelDataLabelName">ROILabelData structure contains label names which are not present in the labelDefinitions input.</entry>

    <entry key="ValidateStringsMustBeNonEmpty">{0} values must be non-empty.</entry>
    <entry key="ValidateInputNotStringOrCellstr">{0} must be a string or a cell array of character vectors.</entry>

    <!-- sceneTimeRanges -->
    <entry key="SceneTimeRangesNoSceneLabels">The input ground truth at index {0} does not have any scene label data.</entry>
    
    <!-- writeVideoScenes -->
    <entry key="WriteVideoScenesVerboseStart">Writing {0} videos from {1} ground truth data sources.\n</entry>
    <entry key="UnableToCreateFolder">Unable to create the folder: {0}\n\n{1}\n</entry>
    <entry key="WriteVideoScenesTimeRangesSizeMismatch">The time ranges input must be a cell array of size Mx1, where M is the number of elements of the gTruth input.</entry>
    <entry key="WriteVideoScenesFolderNamesSizeMismatch">The folder names input must be a cell array of size Mx1, where M is the number of elements of the time ranges input.</entry>
    <entry key="WriteVideoScenesInvalidTimeRange">The time ranges cell array input at index {0} must be a two column duration matrix.</entry>
    <entry key="WriteVideoScenesInvalidFolderNameSize">The folder names cell array input at index {0} must be a categorical or a string column vector with number of rows equal to the duration matrix at index {0} of the time ranges cell array input.</entry>
    <entry key="WriteVideoScenesInvalidRootFolder">The root folder input must be a non-empty scalar string or a character vector specifying the root folder to prepend to the folder names.</entry>
    <entry key="WriteVideoScenesReadError">An error occurred while reading a frame at time {0} in ground truth {1}.</entry>
    <entry key="WriteVideoScenesWriteError">An error occurred while writing a frame at time {0} in ground truth {1}.</entry>
    <entry key="UnsupportedMPEG4InPlatform"><![CDATA[The specified VideoProfile, "{0}", is not supported on this platform.\nSee <a href="matlab:doc('VideoWriter')">VideoWriter</a> documentation for more details.]]></entry>
    <entry key="IndexedAVIUnsupportedReader">The input ground truth at index {0} does not have a video file with "Indexed AVI" video format.\nThe "Indexed AVI" VideoProfile is only supported when the ground truth datasource is backed by an "Indexed AVI" video file.</entry>
    <entry key="invalidLabelTypeForGrouping">gatherLabelData does not support Scene Label type when the value of 'GroupLabelData' is 'LabelType'.</entry>

    <!-- merge -->
      <entry key="mergeRequiresAtLeastTwoInputGTruth">At least two groundTruth objects are required for merging.</entry>
      <entry key="mergeUnsupportedSource">groundTruth objects with video or image sequence sources are not supported.</entry>
      <entry key="mergeOutputFolderMustExist">The specified output folder does not exist.</entry>
      <entry key="mergeUnableToCreateFolder">Unable to create output folder {0}.</entry>
      <entry key="mergeUnsupportedLabelType">Custom label types are not supported.</entry>
      <entry key="mergeUnableToReadPixelLabelData">Unable to read pixel label data.</entry>
      <entry key="mergeUnableToWritePixelLabelData">Unable to write merged pixel label data.</entry>
      <entry key="mergeImageCollectionAndDatastoreUsingNonDefaultReadFcn">All of the input groundTruth objects must have imageDatastore data sources that use the default read function. This is required when merging groundTruth objects with a mixture of imageDatastore sources and sources defined as a list of image files.</entry>
      <entry key="mergeDifferentReadFcn">All input groundTruth objects must have imageDatastore sources with the same read function.</entry>
      <entry key="mergeInvalidDataSource">One or more input groundTruth objects have invalid data sources. Check each input groundTruth and use changeFilePaths to resolve file paths as needed.</entry>
      <entry key="mergePixelLabelUnequalSizes">The size of the pixel label data being merged must be the same. The pixel label data stored in the following file has a size of {0} but other pixel label data associated with the ground truth data source has a size of {1}:\n\nPixelLabelData: {2}\n\nData Source: {3}\n</entry>
      <entry key="mergeLabelNameHasMultipleTypes">The label, {0}, must have the same label type in all input groundTruth objects.</entry>
      <entry key="mergeLabelNameHasMultipleHierarchies">The label, {0}, must have the same attribute and sub-label definitions in all input groundTruth objects.</entry>
      </message>
</rsccat>


