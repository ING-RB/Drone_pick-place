<?xml version="1.0" encoding="UTF-8" ?>
<!-- Copyright 2013-2023 The MathWorks, Inc. -->
<rsccat version="1.0" locale="en_US" product="vision" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../../schema/msgcat.xsd">
  <message>
    <entry key="missingTessdata">A folder named tessdata must exist in {0}.</entry>
    <entry key="mustHaveTessdata">Expected the language data file path to include the tessdata folder.</entry>
    <entry key="mustHaveTraineddata">Expected the language data file path to include the name of a *.traineddata file.</entry>
    <entry key="missingTrainingData">The folder, {0}, must contain {1}.traineddata.</entry>
    <entry key="missingTessdataDeployment">Unable to find the OCR Language Data support package. Use the Application Compiler app to add the OCR Language Data support package to your deployment project.</entry>
    <entry key="customAndNonCustom">File paths to custom language data files cannot be mixed with language character vectors such as 'English' or 'Japanese'.</entry>
    <entry key="notUniqueLanguagePath">All the specified language data files must have the same path.</entry>
    <entry key="languageDataFileNotFound">Unable to find {0}. Make sure the path is correct.</entry>
    <entry key="notAllStrings">Expected input to be a character vector or a cell array of character vectors.</entry>
    <entry key="codegenROIUnsupported">The ROI input is not supported for code generation.</entry>
    <entry key="codegenRegexpUnsupported">Setting UseRegexp to true is not supported for code generation.</entry>
    <entry key="codegenASCIIOnly">OCR code generation only returns ASCII compatible text. Non-English character sets that use multi-byte character encodings are clipped to char(127).</entry>
    <entry key="codegenInitFailure">Failed to initialize Tesseract.</entry>    
    <entry key="codegenMemAllocFailure">Failed to allocate memory.</entry>      
    <entry key="codegenInternalError">OCR Failed.</entry>
    <entry key="invalidLang">The ''{0}'' language is not supported by ocr. Please see the documentation for a list of supported languages.</entry>
    <entry key="requiresSupportPackage">Install the OCR Languages Support Package to use ''{0}''.</entry>
    <entry key="languagesInSupportPackage">Invalid language character vector.</entry>
    <entry key="languagesInSupportPackageDisp">Display valid language character vectors.</entry>  
    <entry key="languagesInSupportPackageCodegen">Invalid language character vector. Valid language character vectors are {0}.</entry>  
    <entry key="codegenInvalidWordsAccess">The ''Words'' property cannot be accessed in code generation. Use the ''Text'' property to access the OCR results.</entry> 
    <entry key="sevenSegmentMustBeSpecifiedAlone">'seven-segment' language cannot be specified along with other languages.</entry>
    <entry key="codegenModelMustBeConstant">The Model value must be a constant value during code generation. Use coder.Constant to specify the type of the Model value argument.</entry>
    
    <!-- ocrTrainingData -->
    <entry key="invalidGroundTruth">There is no groundTruth object with data source of image collection.</entry>
    <entry key="emptyGroundTruth">All of the text strings in the attribute, {0}, are empty.</entry>
    <entry key="NoLabel">There are no rectangle labels named ''{0}'' in any of the groundTruth objects.</entry>
    <entry key="NoAttribute"> The label ''{0}'' must have a string attribute named ''{1}'' in element number {2} of the groundTruth input.</entry>

    <!-- ocrTrainingOptions -->
    <entry key="readOutputNotCellTable">The read method of the input datastore must return a cell or table with at least {0} columns.</entry>
    <entry key="readOutputInvalidImage">The images (1st column) from the read method output of the training input datastore must be an M-by-1 cell array containing elements of N-by-P-by-Q RGB images or N-by-P grayscale images.</entry>
    <entry key="readOutputInvalidBbox">The bounding boxes returned by the input datastore read method must be an M-by-1 cell array that contains numeric N-by-4 matrices defining [x y width height] values of N boxes, and the width and height of all the boxes must be positive.</entry>
    <entry key="readOutputInvalidLabel">The label (3rd column) from the read method output of the training input datastore must be an M-by-1 cell array containing elements of N-by-1 string vector, where N equals the number of bounding boxes.</entry>
    <entry key="bboxDescription">Boxes in read output of training datastore input</entry>
    <entry key="imageDescription">Images in read output of training datastore input</entry>
    <entry key="labelDescription">Labels in read output of training datastore input</entry>
    <entry key="bboxOutsideImage">The bounding boxes returned by the input datastore read method must be contained within their corresponding image.</entry>

    <!-- quantizeOCR -->
    <entry key="invalidModelFileExtension">The extension of the input file must be .traineddata.</entry>
    <entry key="modelFileDoesNotExist">Unable to find the input model file: {0}</entry>
    <entry key="modelFileReadError">Unable to read the input model file: {0}.</entry>
    <entry key="modelFileWriteError">Unable to create the output model file: {0}.</entry>
    <entry key="quantizedModelNotSupported">The input model file already contains a quantized model.</entry>

    <!-- evaluateOCR -->
    <entry key="invalidEvalResultsType">The input data must be one of these types:\n\nmatlab.io.Datastore, matlab.io.datastore.Datastore, cell array of ocrText vector</entry>
    <entry key="invalidEvalResultsInput">Found more than one text line in OCR results.\n\nUse the evaluation syntax of the ocr function to produce OCR results that can be used in evaluateOCR function. </entry>
    
  </message>
</rsccat>
