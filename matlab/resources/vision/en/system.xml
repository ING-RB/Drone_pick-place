<?xml version="1.0"?>
<!-- Copyright 2011-2015 The MathWorks, Inc. -->
<rsccat version="1.0" locale="en_US" product="vision">
  <message>
    <entry key="minMaxLogNotSupported">This System object does not support the logging of minimums and maximums using the Fixed-Point Tool.</entry>
    <entry key="inOutImgTypesDiffer">The output data type must be the same as the Image input data type.</entry>
    <entry key="errROIClipOutNotBool">The ROIFlag and ClipFlag outputs must be Boolean scalars.</entry>
    <entry key="imgNotMxNOrMxNxP">The Image input must be a M-by-N or M-by-N-by-P array, where M and N must be two or greater.</entry>
    <entry key="tranMatWrongDims">The transformation matrix input has incorrect dimensions.</entry>
    <entry key="wrongROIDims">The ROI input has incorrect dimensions.</entry>
    <entry key="outDimsSettingDiffer">The output dimensions must match the dimensions specified on the System object.</entry>
    <entry key="tranMatsROIDiffer">The number of transformation matrices must equal the number of ROIs.</entry>
    <entry key="fillValueClrPansDiffer">The number of elements in the BackgroundFillValue property must equal the number of color planes.</entry>
    <entry key="transMatrixDimInvalid">The TransformMatrix property value has incorrect dimensions.</entry>
    <entry key="boundBoxROIInvalid">The rectangular ROI value has incorrect dimensions.</entry>
    <entry key="verticesPolyInvalid">The polygon ROI value has incorrect dimensions.</entry>
    <entry key="inputsSignMismatch">The inputs must both be signed or unsigned.</entry>
    <entry key="dimI1NotGTDimI2">When the OutputSize property is set to 'Valid', the dimensions of the first input must be greater than the dimensions of the second input.</entry>
    <entry key="backPropI1NotAllow">Cannot back-propagate dimensions of I1 input port.</entry>
    <entry key="backPropI2NotAllow">Cannot back-propagate dimensions of I2 input port.</entry>
    <entry key="inputsRealOutComplex">When both inputs are real, the output must be real.</entry>
    <entry key="horVerCompxtyMismatch">The horizontal and vertical coefficients must have the same complexity.</entry>
    <entry key="vertCoefNotVector">The vertical coefficients input must be a vector.</entry>
    <entry key="horzCoefNotVector">The horizontal coefficients input must be a vector.</entry>
    <entry key="pvalNotScalar">The Pad value input must be scalar.</entry>
    <entry key="firPadNotReal">When the image input is real, the pad value must be real.</entry>
    <entry key="noStatSelected">At least one of the statistics must be selected.</entry>
    <entry key="statNotBoolean">The first argument 'stats' to the BlobAnalysis S-function must be Boolean.</entry>
    <entry key="notStatSelected">At least one of the statistics must be selected.</entry>
    <entry key="statsNotAvailable">The MajorAxisLengthOutputPort, MinorAxisLengthOutputPort, OrientationOutputPort and EccentricityOutputPort properties are not applicable for fixed-point data types.</entry>
    <entry key="fillValStatMismatch">The FillValues property value must be a scalar or a vector with a number of elements equal to the number of selected statistics.</entry>
    <entry key="areaOutWrongDim">The dimensions of the Area output must be 1-by-(MaximumCount).</entry>
    <entry key="centroidOutWrongDim">The dimensions of the Centroid output must be 2-by-(MaximumCount).</entry>
    <entry key="bndBoxOutWrongDim">The dimensions of the Bounding box output must be 4-by-(MaximumCount).</entry>
    <entry key="majAxisOutWrongDim">The dimensions of the Major axis output must be 1-by-(MaximumCount).</entry>
    <entry key="minorAxisOutWrongDim">The dimensions of the Minor axis output must be 1-by-(MaximumCount).</entry>
    <entry key="orientOutWrongDim">The dimensions of the Orientation output must be 1-by-(MaximumCount).</entry>
    <entry key="eccOutWrongDim">The dimensions of the Eccentricity output must be 1-by-(MaximumCount).</entry>
    <entry key="equDiaOutWrongDim">The dimensions of the Equivalent diameter squared output must be 1-by-(MaximumCount).</entry>
    <entry key="extentOutWrongDim">The dimensions of the Extent output must be 1-by-(MaximumCount).</entry>
    <entry key="perimOutWrongDim">The dimensions of the Perimeter output must be 1-by-(MaximumCount).</entry>
    <entry key="areaOutNotInt32">The data type of the Area output must be int32.</entry>
    <entry key="bndBoxOutNotInt32">The data type of the Bounding box output must be int32.</entry>
    <entry key="labelOutNotUint32">The data type of the Label output must be uint32.</entry>
    <entry key="labelOutNotUint16">The data type of the Label output must be uint16.</entry>
    <entry key="labelOutNotUint8">The data type of the Label output must be uint8.</entry>
    <entry key="labelOutNotDouble">The data type of the Label output must be double precision.</entry>
    <entry key="labelOutOntSingle">The data type of the Label output must be single precision.</entry>
    <entry key="countOutNotUint32">The data type of the Count output must be uint32.</entry>
    <entry key="countOutNotUint16">The data type of the Count output must be uint16.</entry>
    <entry key="countOutNotUint8">The data type of the Count output must be uint8.</entry>
    <entry key="countOutNotDouble">The data type of the Count output must be double precision.</entry>
    <entry key="countOutOntSingle">The data type of the Count output must be single precision.</entry>
    <entry key="codeGenNotSupported">This System object does not support code generation when the output is a floating-point data type and min/max logging is enabled.</entry>
    <entry key="inWidthNotDivTwo">The number of columns of the input image must be divisible by two.</entry>
    <entry key="inHeightNotDivTwo">The number of rows of the input image must be divisible by two.</entry>
    <entry key="inWdHtNotDivTwo">The number of rows and number of columns of the input image must be each be divisible by two.</entry>
    <entry key="inWidthNotDivFour">The number of columns of the input image must be divisible by four.</entry>
    <entry key="outWidthNotDivTwo">The number of rows of the output image must be divisible by two.</entry>
    <entry key="outWdHtNotDivTwo">The number of rows and number of columns of the output image must each be divisible by two.</entry>
    <entry key="outWidthNotDivFour">The number of columns of the output image must be divisible by four.</entry>
    <entry key="outHeightNotDivTwo">The number of rows of the output image must be divisible by two.</entry>
    <entry key="inputNotMxNx3">The input must be an M-by-N-by-3 matrix.</entry>
    <entry key="outputNotMxN">The output must be an M-by-N matrix.</entry>
    <entry key="outputNotMxNx3">The output must be an M-by-N-by-3 matrix.</entry>
    <entry key="clrSpcConvNotSupport">The specified color space conversion is not supported.</entry>
    <entry key="compositeInputsDimsDiffer">The Image 1 and Image 2 inputs must have the same number of dimensions.</entry>
    <entry key="compositeInputsWrongDim">The Image 1 and Image 2 inputs must have equal third dimensions.</entry>
    <entry key="compositeInOutDimsDiffer">The Image 1 input and the output must have the same number of dimensions.</entry>
    <entry key="locationWrongDim">The Location input must be a two-element vector.</entry>
    <entry key="inOutNotSameFlt">All inputs and outputs must have the same floating-point data type.</entry>
    <entry key="rowsColsNotGT5">Gradient-corrected linear interpolation requires that both the number of rows and the number of columns in the input image are equal to or greater than five.</entry>
    <entry key="rowsColsNotGT3">Bilinear interpolation requires that both the number of rows and the number of columns in the input image are equal to or greater than three.</entry>
    <entry key="outNotMxNSepClrsSet">When the output image signal format is set to 'Separate color signals,' the output must be M-by-N.</entry>
    <entry key="outNotMxNOneDimSet">The output must be M-by-N-by-3.</entry>
    <entry key="rgbNotVectOrMat">The R, G, and B inputs must be vectors or matrices.</entry>
    <entry key="dimPropError">Port dimensions propagation error in mdlSetOutputPortDimensionInfo.</entry>
    <entry key="imageInDimGT3">The Image input cannot be greater than 3-D.</entry>
    <entry key="thresholdWrongDim">The threshold input vector must have two elements.</entry>
    <entry key="thresholdNotScalar">The threshold input must be a scalar.</entry>
    <entry key="cannyEdgeFixptNotSupport">Fixed-point input is not supported when the Method property is set to 'Canny'.</entry>
    <entry key="frameSizeWrongElements">The number of elements in the OutputSize property must be twice the number of video components.</entry>
    <entry key="sampleTimeNotRealScalInh">The sample time value must either be a scalar or -1 (inherited).</entry>
    <entry key="bitsLengthWrong">The vector length of the VideoComponentBits property value must be equal to the number of video components.</entry>
    <entry key="bitsNotMult8">When the BitStreamFormat property is set to 'Planar,' each element of the VideoComponentBits property value vector must be a multiple of eight.</entry>
    <entry key="compOrderWrongSize">The number of elements in the VideoComponentOrder property value must be greater than or equal to the number of video components.</entry>
    <entry key="compOrderWrongVal">The VideoComponentOrder property value must contain values between one and the number of outputs.</entry>
    <entry key="compOrderNotUnique">When the BitStreamFormat property is set to 'Planar,' the VideoComponentOrder property value must have unique elements.</entry>
    <entry key="fourccNotSupported">This Four Character Code (FOURCC) is not supported.</entry>
    <entry key="neighWindowWrongDim">Each dimension of the NeighborhoodSize property value must be less than or equal to the corresponding dimension of the input matrix.</entry>
    <entry key="dtTrueDblsMismatch">When 'Double' is selected for the 'Data type override' parameter on the Fixed-Point Tool, all input and output data types must be double.</entry>
    <entry key="dtTrueSinglesMismatch">When 'Single' is selected for the 'Data type override' parameter on the Fixed-Point Tool, all input and output data types must be single.</entry>
    <entry key="indexOutDouble">The Index output can only be double precision when all other inputs and outputs are double precision.</entry>
    <entry key="indexOutSingle">The Index output can only be single precision when all other inputs and outputs are single precision.</entry>
    <entry key="countOutDouble">The Count output can only be double precision when all other inputs and outputs are double precision.</entry>
    <entry key="countOutSingle">The Count output data type can be set to single only if all the input/output data types are single.</entry>
    <entry key="inWordLenGT16">The input word length must be less than or equal to 16.</entry>
    <entry key="outWordLenGT16">The output word length must be less than or equal to 16.</entry>
    <entry key="inDataOutsideRange">The input data is outside the specified range.</entry>
    <entry key="maxInLTminOut">The maximum value of the input must be greater than the minimum value of the input.</entry>
    <entry key="eMetricFixpPtTypeWrong">The CustomEffectivenessMetricDataType property values do not match specifications.</entry>
    <entry key="histogramWrongType">The Histogram input must be a floating-point or built-in integer data type.</entry>
    <entry key="histogramIsFloat">When the Image input is not floating point, the Histogram input cannot be floating point.</entry>
    <entry key="histogramNotVector">The Histogram input must be a vector.</entry>
    <entry key="thetaResWrongVal">The value of  the ThetaResolution property must be greater than zero and less than pi/2.</entry>
    <entry key="houghOutFracLenVariable">The fraction length of the CustomHoughOutputDataType property value cannot be a variable.</entry>
    <entry key="houghOutFracLenNotZero">The fraction length of the CustomHoughOutputDataType property value must be zero.</entry>
    <entry key="houghOutWrdLenVariable">The word length of the CustomHoughOutputDataType property value cannot be a variable.</entry>
    <entry key="thetaOutWrdLenVariable">The word length of the CustomThetaOutputDataType property value cannot be a variable.</entry>
    <entry key="thetaOutFracLenVariable">The fraction length of the CustomThetaOutputDataType property value cannot be a variable.</entry>
    <entry key="rhoOutWrdLenVariable">The word length of the CustomRhoDataType property value cannot be a variable.</entry>
    <entry key="rhoOutFracLenVariable">The fraction length of the CustomRhoDataType property value cannot be a variable.</entry>
    <entry key="houghSampTimeNotDiscrete">Continuous sample times are not supported when the System object outputs theta and rho values.</entry>
    <entry key="rhoResWrongVal">The value of RhoResolution property must be greater than zero and less than norm(size(BW input)).</entry>
    <entry key="houghThetaMismatch">The number of columns of the Hough output must equal the width of the Theta output.</entry>
    <entry key="rhoDimInconsistent">Output Rho dimension set inconsistently. The width of the Rho output depends on the dimensions of the BW input and the RhoResolution property.</entry>
    <entry key="sineValNotTblLookup">When the System object input is a fixed-point data type, the SineComputation property must be set to 'Table lookup'.</entry>
    <entry key="floatLoggingNotAllowed">When the System object input is a floating-point data type, 'Minimums, maximums and overflows' and 'Data type override' cannot be set to 'Use local settings' on the Fixed-Point Tool.</entry>
    <entry key="thetaRhoWrongTypeOrLen">The Theta and Rho inputs must have the same signed data type with word length less than or equal to 32.</entry>
    <entry key="sineValNotTrigFcn">When the System object input is a floating-point data type, the SineComputation property must be set to 'Trigonometric function'.</entry>
    <entry key="sineTblWrdLenGT32">The word length of the SineTableType property must be less than or equal to 32.</entry>
    <entry key="thetaRhoWidthsDiffer">The Theta and Rho inputs must have the same number of elements.</entry>
    <entry key="thetaRhoNotVectors">The Theta and Rho inputs must be vectors.</entry>
    <entry key="outputNotUint32">Output data types must be uint32.</entry>
    <entry key="outputNotUint16">Output data types must be uint16.</entry>
    <entry key="outputNotUint8">Output data types must be uint8.</entry>
    <entry key="neighDimsExceedImage">The neighborhood dimensions must be smaller than the input image dimensions.</entry>
    <entry key="setting2Empty">The S-function parameter 2 derived from the Neighborhood property cannot be empty.</entry>
    <entry key="setting2NotBool">The S-function parameter 2 derived from the Neighborhood property must be Boolean.</entry>
    <entry key="neighNumEleWrong">The number of neighborhood elements specified by S-function parameter 2 must match the number of elements described by the neighborhood dimensions matrix specified by S-function parameter 3.</entry>
    <entry key="outputNotUnsigned">The output data type must be unsigned.</entry>
    <entry key="inputDimsDiffer">Dimensions of all inputs must be the same.</entry>
    <entry key="inImageRowsLE4">When the Method property is set to 'Lucas-Kanade,' the number of rows of the input image must be greater than four.</entry>
    <entry key="inImageColsLE4">When the Method property is set to 'Lucas-Kanade,' the number of columns of the input image must be greater than four.</entry>
    <entry key="i1I2DimsDiffer">The two input images must have the same dimensions.</entry>
    <entry key="codegenNotSupported">Code generation is only supported for single-precision and double-precision inputs.</entry>
    <entry key="inDimErrorReduce">Unable to determine input dimensions. Back-propagation of signal dimensions is not possible when the Operation property is set to 'Reduce'.</entry>
    <entry key="inDimErrorExpand">Unable to determine input dimensions. The current output dimensions are not valid when the Operation property is set to 'Expand'.</entry>
    <entry key="angleNotScalar">The Rotation angle input must be scalar.</entry>
    <entry key="colorValueWrongSize">The size of the Color property must be equal to three.</entry>
    <entry key="colorValueWrongMatSize">The Color property value must be an M-by-3 matrix, where M is the number of character vectors.</entry>
    <entry key="locationWrongSize">The Location property value must be a two-element array or an M-by-2 matrix, where M is the number of character vectors.</entry>
    <entry key="locationWrongMatSize">The Location property value must be an M-by-2 matrix, where M is the number of character vectors.</entry>
    <entry key="imageInOutDimMismatch">The image input and output dimensions must match.</entry>
    <entry key="selectNotScalar">The text character vector selection input, Select, must be a scalar.</entry>
    <entry key="locInWrongSize">The Location input must be a two-element vector or a 2-by-N matrix, where N is the number of character vectors.</entry>
    <entry key="locInWrongMatSize">The Location input must be an M-by-2 matrix, where M is the number of character vectors.</entry>
    <entry key="colorInWrongDim">The Color input must be a scalar or an N-element vector, where N is the number of character vectors.</entry>
    <entry key="variablesInNotVector">The Variables input must be a vector when the conversions specification is {0}.</entry>
    <entry key="variablesInNotScalar">The Variables input must be a scalar.</entry>
    <entry key="variablesWrongLength">The maximum number of conversion specifications in the Text property must be one or equal to the length of the Variables input.</entry>
    <entry key="variablesWrongMatSize">The maximum number of conversion specifications in the Text property must be one or equal to the number of rows of the Variables input.</entry>
    <entry key="opacityWrongDim">The Opacity input must be a scalar or a 1-by-N vector, where N is equal to the number of character vectors.</entry>
    <entry key="opacityWrongType">When the Image input is a floating-point data type, the Opacity input must be the same floating-point data type.</entry>
    <entry key="opacityWrongFixptType">When the Image input is an integer or fixed-point data type, the Opacity input must be an unsigned fi object with word length 8, and fraction length 7.</entry>
    <entry key="convLetterNotSupport">The conversions letter specified in the Text property is not supported.</entry>
    <entry key="locClrInColumnMismatch">The Location and Color inputs must have the same number of rows.</entry>
    <entry key="opacityLocWrongWidth">The length of the Opacity input must be the same as the number of rows in the Location matrix.</entry>
    <entry key="opacityClrwrongWidth">The length of the Opacity input must be the same as the number of rows in the Color matrix.</entry>
    <entry key="variablesWrongColWidth">The number of rows of the Variables input cannot be greater than the largest of the number of rows in the Location input, the number of rows in the Color input, and the length of the Opacity input.</entry>
    <entry key="backgroundWrongDim">The BackgroundFillValue property value must be a scalar or it must have the same length as the third dimension of the input image.</entry>
    <entry key="firstInputWrongDim">The dimension of the first input must be M-by-N or M-by-N-by-P.</entry>
    <entry key="offsetWrongSize">The Offset input must be a two-element vector.</entry>
    <entry key="outDimNotMxNOrMxNxP">The dimension of the output must be M-by-N or M-by-N-by-P.</entry>
    <entry key="invalidOutDim">The dimension of the output is invalid.</entry>
    <entry key="videoOutNotSupported">Video output is supported on Windows and Linux platforms.</entry>
    <entry key="novipToVideoDisplayPanel">Error calling the MATLAB file matlabroot/toolbox/vision/vision/vipToVideoDisplayPanel.m. The file might have been removed or renamed.</entry>   
    <entry key="statNotVector">The first argument 'stats' to the BlobAnalysis S-function must be a {0, number, integer} element vector.</entry>
    <entry key="ceontroidOutWrongType">The Centroid output data type must be consistent with the data type specified in the System object.</entry>
    <entry key="majAxisOutWrongType">The Major axis output data type must be consistent with the data type specified in the System object.</entry>
    <entry key="minorAxisOutWrongType">The Minor axis output data type must be consistent with the data type specified in the System object.</entry>
    <entry key="orientOutWrongType">The Orientation output data type must be consistent with the data type specified in the System object.</entry>
    <entry key="eccOutWrongType">The Eccentricity output data type must be consistent with the data type specified in the System object.</entry>
    <entry key="equDiaOutWrongType">The Equivalent diameter squared output data type must be consistent with the data type specified in the System object.</entry>
    <entry key="extentOutWrongType">The Extent output data type must be consistent with the data type specified in the System object.</entry>
    <entry key="perimOutWrongType">The Perimeter output data type must be consistent with the data type specified in the System object.</entry>
    <entry key="clrConvUnsupDataType">The RGB to YCbCr, YCbCr to RGB, and RGB to intensity conversions support double-precision, single-precision, and uint8 data types. The other conversions support double-precision and single-precision data types.</entry>
    <entry key="inputDimScalarOrVector">The input {0, number, integer} must have more than one dimension.</entry>
    <entry key="inputDimsWrong">The input dimensions must be at least {0, number, integer}-by-{1, number, integer}.</entry>
    <entry key="highThreshTooSmall">The Threshold property value's second element must be greater than the first element.</entry>
    <entry key="numInputNotScalar">The third input, NUM, must be scalar.</entry>
    <entry key="inlierOutNotVector">The second output, INLIER, must be vector.</entry>
    <entry key="videoFileOpenError">Could not open input video file {0}.</entry>
    <entry key="maxNumBlobsExceededMrkZero">Number of found objects exceeded the specified maximum number of blobs. The remaining regions in the output label matrix will be marked using the zero (background) value.</entry>
    <entry key="invalidRandomSamples">Cannot find valid random samples. Increase the number of points in the Num input.</entry>
    <entry key="invalidPtsNum">The value of the third input, NUM, must be between {0, number, integer} and {1, number, integer}, inclusive.</entry>
    <entry key="inputValsExceedRange1">At least one value exceeded the input data range [{0, number, integer}, {1, number, integer}].</entry>
    <entry key="frameRateSetToOne">Video display frame rate is set to a rate slower than 1 fps. This may cause a reduction in responsiveness to user input.</entry>
    <entry key="outDataTypesNotDbl">Output data types must be double precision.</entry>
    <entry key="outDataTypesNotSingle">Output data types must be single precision.</entry>
    <entry key="inImageWrongDim">The Image input must have three or fewer dimensions.</entry>
    <entry key="inputIWrongDim">The Image input must have two or fewer dimensions.</entry>
    <entry key="rgbInWrongDims">The R, G, and B inputs must have two or fewer dimensions.</entry>
    <entry key="cirInWrongDim">The border or fill color input must have two or fewer dimensions.</entry>
    <entry key="outImageWrongDim">The Image output must have three or fewer dimensions.</entry>
    <entry key="outputIWrongDim">The Image output must have two or fewer dimensions.</entry>
    <entry key="rgbOutWrongDims">The R, G, and B outputs must have two or fewer dimensions.</entry>
    <entry key="rhoOutWidthWrong">The width of the Rho output must equal the number of rows of the Hough output.</entry>
    <entry key="thetaOutWidthWrong">The width of the Theta output must equal the number of columns of the Hough output.</entry>
    <entry key="overlapRowsWrong">The number of rows of the Overlap property must be a nonnegative integer with a value less than the height of the block.</entry>
    <entry key="overlapColsWrong">The number of columns of the Overlap property must be a nonnegative integer with a value less than the width of the block.</entry>
    <entry key="blockHeightWrong">The height of the block must be less than or equal to the number of rows in the image input.</entry>
    <entry key="blockWidthWrong">The width of the block must be less than or equal to the number of columns in the image input.</entry>
    <entry key="pixelUpperLimitWrong">The upper limit of the input pixel range must be greater than the lower limit.</entry>
    <entry key="settingNotPositive">The {0} property value must be positive.</entry>
    <entry key="sumPixSatTooBig">The sum of the values in the PixelSaturationPercentage property must be less than 100.</entry>
    <entry key="bitsNotMultiple8">The VideoComponentBits property value must be a multiple of eight.</entry>
    <entry key="compOrderForPackedWrong">When the BitStreamFormat property is set to 'Packed,' the number of elements of the VideoComponentOrder property must be greater than or equal to the number of components.</entry>
    <entry key="compOrderForPlanarWrong">When the BitStreamFormat property is set to 'Planar,' the number of elements of the VideoComponentOrder property must be equal to the number of components.</entry>
    <entry key="dimRatioCompOrderMismatch">The ratio of input dimensions do not match the specified component order.</entry>
    <entry key="dimRatioFourCCMismatch">The ratio of the input dimensions do not match the required ratios for the specified FOURCC.</entry>
    <entry key="bitsExceedInputSize">Specified bits must be less than or equal to the input size.</entry>
    <entry key="inputBytesWrong">The input must be one, two, or four bytes long.</entry>
    <entry key="roiVectorWrongSize">The ROI input must be a vector with four elements.</entry>
    <entry key="outTypeNotSgnCpxMotVec">The output data type must be signed for complex motion vectors.</entry>
    <entry key="outTypeNotSigMgSqMotVec">The output data type must be unsigned for magnitude-squared motion vectors.</entry>
    <entry key="wordLenRangeError">The {0} word length must be a positive integer between {1, number, integer} and 128, inclusive.</entry>
    <entry key="normalizeOutNotForFixpt">The NormalizeOutput property only applies to floating-point input data types.</entry>
    <entry key="minBlobAreaGTMaxBlobArea">The minimum blob area must be less than or equal to the maximum blob area.</entry>
    <entry key="inputNotFixptSettingFixpt">The input must be a fixed-point data type when you specify a fixed-point output data type.</entry>
    <entry key="outDataTypeSettingMismatch">The output data type must match the output data type specified on the block dialog box.</entry>
    <entry key="grayThreshTypesDiffer">Input image I, output threshold Th, and output effectiveness metric EMetric, must all be double, all single, or all fixed point.</entry>
    <entry key="imageHistTypesDiffer">The Image and Histogram data types should be the same when the input is floating point.</entry>
    <entry key="optFlowOutTypeNotFloat">The output data type must be double precision or single precision for the Horn-Schunck and Lucas-Kanade (Gaussian Derivative) methods.</entry>
    <entry key="fixPtTooLongForCodeGen">Fixed-point data types with word lengths up to 16 bits are supported in code generation.</entry>
    <entry key="fixPtWdLenGT32Bits">Fixed-point data types with word lengths up to 32 bits are supported.</entry>
    <entry key="maxOffsetTooLarge">The value specified for the MaximumOffset property results in output image dimensions that exceed INTMAX number of pixels.</entry>
    <entry key="numColorsChanged">The number of colors in the image cannot be changed.</entry>
    <entry key="videoBandsSzChanged">The number of video bands cannot change size when the System object is locked.</entry>
    <entry key="compNotInCompOrder">Each of the components identified in the NumVideoComponents property must be included in the value of the VideoComponentOrder property.</entry>
    <entry key="smoothFltWronNumElem">The number of elements in the SmoothingFilterCoefficients property must be odd and must be at least 3.</entry>
    <entry key="outMetricTooSmall">The dimension of the Output metric signal cannot be less than {0, number, integer}-by-{1, number, integer}.</entry>
    <entry key="inDataTypeNotFloatInt8Or16OrFixpt">The input data type must be double precision, single precision, Boolean, int8, uint8, int16, uint16, or any fixed-point data type with word length less than or equal to 16.</entry>
    <entry key="outDataTypeNotFloatInt8Or16OrFixpt">The output data type must be double precision, single precision, logical, int8, uint8, int16, uint16, or any fixed-point data type with word length less than or equal to 16.</entry>
    <entry key="imgInOutFltTypesDiffer">When the Image input has a floating-point data type, the output must have the same data type.</entry>
    <entry key="roiFltTypeImgInNotFlt">When the ROI input has a floating-point data type, the Image input must have a floating-point data type.</entry>
    <entry key="roiFltTypeOutNotFlt">When the ROI input has a floating-point data type, the output must have a floating-point data type.</entry>
    <entry key="imgInOutTypesDiffer">The output data type and the Image input data type must be same.</entry>
    <entry key="imgInOutSgnsDiffer">The output data type and the Image input data type have the same signedness.</entry>
    <entry key="pts1OrPts2TooSmall">The first and second inputs, PTS1 and PTS2, must have at least {0, number, integer} points.</entry>
    <entry key="inlierOutSzTooSmall">The Inlier output must have at least {0, number, integer} elements.</entry>
    <entry key="vipDrawNotScalar">The {0} input has {1, number, integer} color planes and the Pts input has {2, number, integer} shapes. The {3} must be a scalar.</entry>
    <entry key="vipDrawNotSclOrVec">The {0} input has {1, number, integer} color planes and the Pts input has {2, number, integer} shapes. The {3} must be either a scalar providing one color for all shapes, or a {4, number, integer}-element vector providing one color for each shape.</entry>
    <entry key="vipDarwNotVector">The {0} input has {1, number, integer} color planes and the Pts input has {2, number, integer} shapes. The {3} must be a {4, number, integer}-element vector.</entry>
    <entry key="vipDrawNotVecOrMat">The {0} input has {1, number, integer} color planes and the Pts input has {2, number, integer} shapes. The {3} must be either a {4, number, integer}-element vector providing one color for all shapes,  or a {5, number, integer}-by-{6, number, integer} matrix providing one color for each shape.</entry>
    <entry key="vipDrawNumClrPlaneNumShape">The number of color planes in input image and the number of shapes in Pts input do not match.</entry>
    <entry key="opacityNotScalar">The Pts input has 1 shape. The Opacity property value must be a scalar.</entry>
    <entry key="opacityNotSclOrVec">The Pts input has {0, number, integer} shapes. The Opacity property value must be either a scalar value for all shapes, or a {1, number, integer}-element vector providing one value for each shape.</entry>
    <entry key="opacityNotSclOrVecForMat">The {0} is a {1, number, integer}-by-{2, number, integer} matrix. The Opacity property value must be either a scalar value for all shapes, or a {3, number, integer}-element vector providing one value for each shape.</entry>
    <entry key="forNumClrPlanesNotScalar">The {0} input has {1, number, integer} color planes. The Opacity property value has {2, number, integer} elements. The {3} must be a scalar.</entry>
    <entry key="forNumClrPlanesNotScOrVec">The {0} input has {1, number, integer} color planes. The Opacity property value has {2, number, integer} elements. The {3} must be either a scalar providing one color for all shapes, or a {4, number, integer}-element vector providing one color for each shape.</entry>
    <entry key="forNumClrPlanesNotVecOrMat">The {0} input has {1, number, integer} color planes. The Opacity property value has {2, number, integer} elements. The {3} must be either a {4, number, integer}-element vector providing one color for all shapes,  or a {5, number, integer}-by-{6, number, integer} matrix providing one color for each shape.</entry>
    <entry key="img2SettingDimMismatch">When the {0} property is a matrix, its dimensions must match the dimensions of the Image2 input.</entry>
    <entry key="img2SignalDimMismatch">When the {0} signal is a matrix, its dimensions must match the dimensions of the Image2 input.</entry>
    <entry key="inputNotVectOrMat">The {0} input must be a vector or a matrix.</entry>
    <entry key="outputOneDim">Output {0, number, integer} must have more than one dimension.</entry>
    <entry key="strSettingEmpty">Property {0, number, integer} must be a non-empty character vector.</entry>
    <entry key="numClrEleNotMult">The number of elements of the Color input must be a multiple of {0, number, integer}.</entry>
    <entry key="clrNotNStrings">The Color input or Color property value must be a {0, number, integer}-element vector or an M-by-{1, number, integer} matrix, where M is the number of character vectors.</entry>
    <entry key="clrLenNotColsLoc">The Color property length must be the same as the number of points in the Location matrix.</entry>
    <entry key="rgbSizesDiffer">The R, G, and B inputs must have the same size.</entry>
    <entry key="backPropDimsFailed">Unable to determine input dimensions based on output dimensions.</entry>
    <entry key="inputIDimsNotGTTemp">All the dimensions of the I input must be greater than or equal to all the dimensions of the Template input.</entry>
    <entry key="inputsBothNotFloat">When the {0} input is floating point, the {1} input must also be floating point.</entry>
    <entry key="inputsBothNotBool">When the {0} input is logical, the {1} input must also be logical.</entry>
    <entry key="outDataTypWrongInBool">When inputs are boolean, the OutputDataType property cannot be set to 'Same as first input'.</entry>
    <entry key="accDataTypWrongInBool">When inputs are logical, the AccumulatorDataType cannot be set to 'Same as first input'.</entry>
    <entry key="dimIOrTempNotSet">Unable to determine output dimensions. The dimensions of the I and Template inputs must be set.</entry>
    <entry key="numObjsExceedsDataMrkZero">The number of found objects exceeds the output data range. The remaining regions will be marked using the zero (background) value.</entry>
    <entry key="numObjsExceedsDataMrkMax">The number of found objects exceeds the output data range. The remaining regions will be marked using the maximum value of the output data type.</entry>
    <entry key="forClrPlanesNotVecMat">The {0} input has {1, number, integer} color planes. The {2} must be either a {3, number, integer}-element vector, or a {4, number, integer}-by-N matrix.</entry>
    <entry key="outputDimsTooSmall">The output dimensions must be at least {0, number, integer}-by-{1, number, integer}.</entry>
    <entry key="gradSettingFixPtMismatch">The back-propagated gradient fixed-point data type attributes must match specifications in the System object.</entry>
    <entry key="freeTypeInitFailed">FreeType library failed to initialize ({0}).</entry>
    <entry key="fontFormatUnsupport">Font file format unsupported by FreeType library.</entry>
    <entry key="fontSizeUnsupport">Font file size unsupported by FreeType library.</entry>
    <entry key="inputsDataTypeMismatch">When the {0} input has a {1} data type, the {2} input must have a {3} data type.</entry>
    <entry key="inptOutptDataTypeMismatch">When the {0} input has a {1} data type, the output must have a {2} data type.</entry>
    <entry key="outptInptDataTypeMismatch">When the output has a {0} data type, the {1} input must have a {2} data type.</entry>
    <entry key="fontLoadFailure">FreeType library font file could not be loaded ({0}).</entry>
    <entry key="fontPartialLoadFailure">The FreeType library could not load font bitmaps for all characters ({0}).</entry>
    <entry key="numClrPlanesChanged">You cannot change the number of color planes in the image when the System object is locked. The number of color planes is the third dimension of the image input.</entry>
    <entry key="rowsColsOutZero">The number of rows and the number of columns in the output cannot be zero. Consider increasing the value of the ResizeFactor property.</entry>
    <entry key="pts1AndPts2SizesDiffer">The first and second inputs, PTS1 and PTS2, must have the same size.</entry>
    <entry key="allowVarSizeNotSelected">The input must be a fixed-size signal.</entry>
    <entry key="imageAndTFormSameType">The Image input and TForm input must have the same data type.</entry>
    <entry key="imageTFormAndROISameType">When the ROI input has a floating-point data type, the Image input, TForm input and ROI input must have the same data type.</entry>
    <entry key="imgSmallerThanBlkSize">The size of each dimension of the Image input must be greater than or equal to the corresponding dimensions specified by the 'Block size' parameter.</entry>
    <entry key="transToInfinity">A portion of the input image was transformed to the location at infinity. Only transformation matrices that do not transform any part of the image to infinity are supported.</entry>
    <entry key="iterCountNotSame">The number of steps computed for blocks to traverse entire inputs must be the same for all inputs. Resize the inputs or modify block sizes and overlap sizes as needed.</entry>
    <entry key="wbfMinInputSize">The minimum number of input rows must be {0, number, integer}, and the minimum number of input columns must be {1, number, integer}.</entry>
    <entry key="opacityFactorLT0GT1">The opacity factor must be between 0 and 1, inclusive.</entry>
    <entry key="angleInfOrNaN">The Angle input cannot be Inf or NaN.</entry>
    <entry key="videoFileOpenForWriteError">Could not open video file {0} for writing.</entry>
    <entry key="allInportsScDoubles">If any input data type is scaled doubles, then all input data types must be scaled doubles.</entry>
    <entry key="inputScDblOutputDblScDblBool">If the input data type is scaled doubles, the output data type must be boolean or double or scaled doubles.</entry>
    <entry key="outputScDblInputDblScDblBool">If the output data type is scaled doubles, the input data type must be boolean or double or scaled doubles.</entry>
    <entry key="rgbCurInputDimsWrong">All inputs must have same current dimensions.</entry>
    <entry key="varSizeNotSupportedAutomaticMode">Variable-size input signals are not supported when the OutputDataType property is set to 'Automatic'.</entry>
    <entry key="numPlanesNot3for3dInput">When the input is a 3-D array, the number of input planes must be 3.</entry>
    <entry key="rhoThetaOutportForVarS">When the input  is  variable-size data,  the ThetaRhoOutputPort property must be set to false.</entry>
    <entry key="pts1Pts2NotMx2">The first and second inputs, PTS1 and PTS2, must be M-by-2 matrices.</entry>
    <entry key="polyLnPtsInWrongDim">The Points input must be an M-by-2L matrix. Each row specifies a different polyline with points connected in consecutive order, and is of the form [x1 y1 x2 y2 ... xL yL].</entry>
    <entry key="polygonPtsInWrongDim">The Points input must be an M-by-2L matrix. Each row specifies a different polygon with points connected in consecutive order, and is of the form [x1 y1 x2 y2 ... xL yL].</entry>
    <entry key="cirPtsInWrongDim">The Points input must be an M-by-3 matrix. Each row specifies a different circle and is of the form [x y radius].</entry>
    <entry key="cntrPtsInWrongDim">The Points input must be an M-by-2 matrix. Each row specifies a different center and is of the form [x y].</entry>
    <entry key="ptsInputInvalidSize">The Pts input size is not valid.</entry>
    <entry key="roiInWrongDim">The ROI input must be a four-element vector and of the form [x y width height].</entry>
    <entry key="forDrawPtsDimsWrong">The Pts input has {0, number, integer} shapes. The {1} must be either a {2, number, integer}-element vector or a {3, number, integer}-by-N matrix.</entry>
    <entry key="shearInfOrNaN">The shear values cannot be Inf or NaN.</entry>
    <entry key="offsetInfOrNaN">The offset values cannot be Inf or NaN.</entry>
    <entry key="roiInfOrNaN">The ROI values cannot be Inf or NaN.</entry>
    <entry key="locationInfOrNaN">The Location values cannot be Inf or NaN.</entry>
    <entry key="startPtsWrongSize">The Start points input must be a two element vector.</entry>
    <entry key="maxNumBlobsExceeded">Number of found objects exceeded the specified maximum number of blobs.</entry>  
    <entry key="inputNotMxN">The input must be an M-by-N matrix.</entry>
    <entry key="mapBlkLineWidth">Line width</entry>
    <entry key="image2OutsideImage1">The Image 2 input is outside the boundaries of the Image 1 input.</entry>
    <entry key="inputValsExceedRange">At least one value exceeded the input data range.</entry>
    <entry key="rectPtsInWrongDim">The Points input must be a 4-by-N matrix. Each column specifies a different rectangle and is of the form [row column height width].</entry>
    <entry key="toVideoDisplayStartWarning" translate="false">{0}</entry>
    <entry key="toVideoDisplayStartError" translate="false">{0}</entry>
    <entry key="toVideoDisplayUpdateError" translate="false">{0}</entry>
    <entry key="outColsNotFour">The output must have four columns.</entry>
    <entry key="thetaRhoAndOutDimsDiffer2">The number of columns of the Theta and Rho inputs must be the same as the number of rows of the output.</entry>
    <entry key="fixptVarSize">Image must be double or single to process variable-size input.</entry>
    <entry key="invalidFileExtFileFormat">The file extension and the file format do not match.</entry>
    <entry key="hwBitsPerCharNot8">"char", on the Hardware Implementation pane of the Configuration Parameters dialog box, must be defined to be 8 bit long.</entry>
    <entry key="imageInportMinSizeTwo">The Image input dimensions must be at least 2-by-2 for 'Valid' output size.</entry>
    <!--svipvideotowks-->
    <entry key="numInputsGreaterThanOne">Number of inputs should be an integer >= 1.</entry>
    <entry key="paramScalarInteger">Limit data points to last: parameter should be a scalar integer >= 1.</entry>
    <entry key="paramGreaterThanOne">Limit data points to last: parameter should be an integer >= 1.</entry>
    <entry key="decimationFactorGrThanOne">Decimation factor should be an integer >= 1.</entry>
    <entry key="invalidVariableName">Invalid MATLAB variable name specified.</entry>
    <entry key="fixedPointNotSupported">This fixed-point word length is not supported.</entry>
    <entry key="memoryAllocError">Memory allocation error.</entry>
    <entry key="memoryAllocFailed">Memory allocation failed.</entry>
    <entry key="couldNotCreateVarWS">Could not create variable in MATLAB workspace.</entry>
    <entry key="when3DInput">When input is 3-D, the parameter 'Number of inputs' must be 1</entry>
    <!--svipvideofromwks-->
    <entry key="signal3Dor4D">Signal should be either 3-D or 4-D.</entry>
    <entry key="invalidMovieStructure">Invalid movie structure format specified. cdata field could not be found.</entry>
    <entry key="colormapDataNotSupported">Colormap data is not supported by this block.</entry>
    <entry key="dataTypeNotSupported">The data type of the signal specified not supported.</entry>
    <entry key="sampleMustBePositiveScalar">Sample time must be a positive scalar or -1.</entry>
    <entry key="onlySupports32CG">This block only supports fixed-point data type with word length of 32 bits or less in code generation.</entry>
    <entry key="errorFixedDTReg">Error occurred during fixed-point data type registration.</entry>
    <entry key="scaledDoubleNotSupported">Scaled double data type is not supported.</entry>
    <!--svipshear-->
    <entry key="backgroundFillScalar">Background fill value(s) must be scalar or same length as the third dimension of input image</entry>
    <entry key="runTimeAllocFailed">Run time parameter allocation failed</entry>    
    <entry key="vectorShearValInput">A vector of size 2 is expected for the 'shear values' input port.</entry>
    <entry key="backPropOutSpec">Back-propagated output port fixed-point data type attributes do not match specifications in block mask.</entry>
    <!--svipindexgenol-->
    <entry key="traverseDirection">Traverse direction must be 1 or 2.</entry>
    <entry key="needAssignPorts">Need assign ports must be 0 or 1.</entry>
    <entry key="outputOnlyStartVal">Output only start values of index must be 0 or 1.</entry>
    <!--svipblockprociter-->
    <entry key="paramTwoElement">Parameter must be a two element vector.</entry>    
    <entry key="cellArrayAtleastOne">Cell array must have at least one element.</entry>    
    <entry key="blockSizeAtleastOne">Block size must be at least 1 in each dimension.</entry>    
    <entry key="overlapSizeAtleast0">Overlap size must be at least 0 in each dimension.</entry>    
    <entry key="blockSizeGrOverlapSize">Block size must be greater than the overlap size.</entry>   
    <!--sviptextrender-->    
    <entry key="fltptVariablesMayNotBeSupported">Floating-point input to Variables port may not be supported by fixed-point embedded targets.</entry>    
    <entry key="selectValueOutOfRangeNewCoords">Input to the Select port must be in the range [1, Number of text strings].</entry>
    <entry key="unsupportedTargetDevice">This function generates code only for the host target. You must set the target hardware device type to match the host.</entry>
  </message>
</rsccat>
