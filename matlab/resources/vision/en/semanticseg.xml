<?xml version="1.0" encoding="UTF-8" ?>
<!-- Copyright 2017-2024 The MathWorks, Inc. -->
<rsccat version="1.0" locale="en_US" product="vision" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../../schema/msgcat.xsd">
    <message>
        <!-- pixelClassificationLayer -->
        <entry key="ClassNamesWeightsMismatch">''ClassNames'' and ''ClassWeights'' must have the same number of elements.</entry>
        <entry key="ClassesWeightsMismatch">''Classes'' and ''ClassWeights'' must have the same number of elements.</entry>
        <entry key="ClassesRequired">To specify ''ClassWeights'', you must also specify ''Classes''. When specifying ''ClassWeights'', ''Classes'' must not be 'auto'.</entry>
        <entry key="SolutionToModifyClasses">To change the number of classes, set ''ClassWeights'' to ''none''.</entry>
        <entry key="OneLineDispName">Pixel Classification Layer</entry>
        <entry key="oneLineDisplay">Cross-entropy loss {0}</entry>
        <entry key="oneLineDisplayWeighted">Class weighted cross-entropy loss {0}</entry>
        <entry key="oneLineDisplayOneClass">with class ''{0}''</entry>
        <entry key="oneLineDisplayTwoClasses">with classes ''{0}'' and ''{1}''</entry>
        <entry key="oneLineDisplayNClasses">with ''{0}'', ''{1}'', and {2} other classes</entry>
        <entry key="InvalidClassNames">''ClassNames'' value must be a vector of strings, a cell array of character vectors, or ''auto''.</entry>
        <entry key="NonUniqueClassNames">''ClassNames'' must have unique names.</entry>
        <entry key="ClassesAndClassNamesNVP">Incompatible arguments. To set the Classes property of the layer, use the ''Classes'' argument only.</entry> 
        
        <!-- dicePixelClassificationLayer -->
        <entry key="diceOneLineDispName">Dice Pixel Classification Layer</entry>
        <entry key="diceOneLineDisplay">Generalized Dice loss {0}</entry>
        <entry key="MultiClass">''Classes'' must have 2 or more elements.</entry>
        
        <!-- pixelLabelDatastore -->
        <entry key="invalidLocationInput">The first input must be a character vector, a string, or a cell array of character vectors.</entry> 
        <entry key="invalidClassNamesInput">The second input must be a character vector, a string, or a cell array of character vectors.</entry> 
        <entry key="pxdsNonUniqueClassNames">The class names must be unique.</entry>
        <entry key="pxidNotVectorOrMatrix">The pixel label IDs must be a vector or M-by-3 matrix.</entry>
        <entry key="pxidNotColVectorOrMatrix">The cell array of pixel label IDs must be column vectors or M-by-3 matrices.</entry>
        <entry key="pxidNotAllSameFormat">All pixel label IDs must be either column vectors or M-by-3 matrices.</entry>
        <entry key="pxidDuplicateIDs">The pixel label IDs must be unique.</entry>
        <entry key="gTruthWithTimeStamps">groundTruth objects with timestamps are not supported.</entry>
        <entry key="gTruthWithNoPixelLabels">groundTruth objects must contain a label definition table with PixelLabel type.</entry>
        <entry key="pxdsFilesNotSettable">Setting the Files property is not supported. Please create a new pixelLabelDatastore instead.</entry>
        <entry key="invalidCustomReadFcnOutput">The output of the custom ReadFcn must be a categorical matrix.</entry>
        <entry key="unexpectedClassNames">The categorical output of the custom ReadFcn must have the following categories:\n\n{0}.</entry>
        <entry key="invalidNumelClassesLabels">The number of class names must equal the number of pixelLabelIDs.</entry>
        <entry key="gTruthNotSameName">All input groundTruth objects must define the same pixel label names in their label definitions table.</entry>
        <entry key="pixelValueNotUint8">By default, pixelLabelDatastore only supports pixel label image files with uint8 data. Use ReadFcn to specify a custom read function that returns categorical labels from non-uint8 image data.</entry>
        <entry key="expectedRGBLabels">Pixel label image must have 3 channels when RGB-triplet pixel label IDs are specified.</entry>


        <!-- semanticseg -->
        <entry key="invalid4DImage">The third dimension of a 4D image input must be 1 or 3.</entry>
        <entry key="invalidNumChannels">Input image must have {0} channels, as expected by the network.</entry>
        <entry key="noPixelClassificationLayer">The network must have a pixel classification layer.</entry>
        <entry key="tooManyPixelClsLayers">A network with more than one pixel classification layer is not supported.</entry>
        <entry key="imdsROIInvalid">Input roi is not supported when the first input is a datastore.</entry>
        <entry key="dirDoesNotExist">''WriteLocation'' value must be a directory.</entry>
        <entry key="verboseHeader">Running semantic segmentation network</entry>
        <entry key="verboseProgressTxt">* Processed {0} images.</entry>
        <entry key="onlyApplyWithImds">WriteLocation, NamePrefix, Verbose, and UseParallel are only supported when the input is a datastore.</entry>
        <entry key="tooLargeNumClasses">''OutputType'' value must be ''categorical'' or ''double'' when the number of classes is greater than 255.</entry>
        <entry key="invalidImageNumDims">Label images must be 2D or 3D.</entry>
        <entry key="invalidDatastoreReadOutput">The input datastore read output must be a numeric array, an M-by-N cell array, or an M-by-N table.</entry>
        <entry key="outputROISizeMismatch">When segmenting an image ROI, the network output size ({0}) must equal the size of the ROI ({1}). Use semanticseg with a manually cropped image when the network output size does not match the size of the ROI.</entry>
        
        <entry key="invalidClassesInputSize">The number of classes in ''Classes'' input must be equal to the Classes property of the pixel classification layer.</entry>
        <entry key="invalidClassesInputSizeDlnetwork">The number of classes in ''Classes'' input must be equal to the number of channels in the output layer of the dlnetwork input.</entry>
        <entry key="missingInputLayer">Invalid network: Missing input layer. The network must have at least one input layer.</entry>
        <entry key="tooManyOutputLayers">A network with more than one output layer is not supported.</entry>
        <entry key="tooManyInputLayers">Networks with multiple inputs are not supported.</entry>    
        <entry key="UnableToCreateOutputFolder">Unable to create output folder {0}.</entry>
        
        <!-- semanticSegmentationMetrics -->
        <entry key="evaluationHeader">Evaluating semantic segmentation results</entry>
        <entry key="selectedMetrics">* Selected metrics:</entry>
        <entry key="processingNImages">* Processing {0} images...</entry>
        <entry key="finalizingResults">* Finalizing...</entry>
        <entry key="dataSetMetrics">* Data set metrics:</entry>
        <entry key="done">Done.</entry>
        <entry key="mustHaveSameClasses">The categorical data returned by {0} and {1} must have the same categories.</entry>
        <entry key="mustHaveSameNumOfFiles">{0} and {1} must have the same number of files.</entry>
        <entry key="mustHaveSameSize">The size of the categorical data returned by {0} and {1} must be the same.</entry>
        <entry key="readMustReturnCategorical">{0} and {1} must return categorical data.</entry>
        <entry key="mustBePXDSOrCell">{0} and {1} must both be cell arrays or datastores.</entry>
        <entry key="parallelNotSupported">UseParallel is only supported when the input datastores are a pixelLabelDatastore or a pixelLabelImageDatastore.</entry>
        <entry key="mustBeCellArrayOfDatastores">The input cell arrays must contain datastores.</entry>
        <entry key="tableMustHaveConfusionMatrix">The input table must have a variable, 'ConfusionMatrix'. If the table has additional variables, 'BlockInfo' and 'ImageNumber', the function can output BlockMetrics.</entry>
        <entry key="tableNonUniqueClassNames">The input table must have a variable, 'ConfusionMatrix'. If the table has additional variables, 'BlockInfo' and 'ImageNumber', the function can output BlockMetrics.</entry>
        <entry key="confusionMatrixMustBeSameSize">The input confusion matrices must be the same size.</entry>
        <entry key="confusionMatrixAndClassMustBeConsistent">The size of the input confusion matrices must be C-by-C where C is the number of classes.</entry>
        <entry key="expectedNonEmpty">Expected input to be non-empty.</entry>
         
        <!-- segnetLayers -->
        <entry key="imageSizeIncorrect">imageSize must be a two or three element vector. </entry>
        <entry key="imageTooSmallForDepth">The imageSize must be at least {0}. The imageSize is constrained by the depth, D, of the encoder/decoder networks and must be at least 2^D.</entry>
        <entry key="vggNeedsRGB">imageSize must have three elements and the third element must be 3 when creating SegNet based off of VGG-16 or VGG-19.</entry>
        <entry key="missingVGGAddon">This function requires {0}. Please install this using the &lt;a href="matlab: matlab.internal.addons.showAddon(''{1}'')&quot;&gt;Add-On Explorer&lt;/a&gt;.</entry>        
        <entry key="notSupportedWithPretrained">FilterSize, NumConvolutionLayers, and NumOutputChannels are not supported when 'vgg16' or 'vgg19' is used to create SegNet.</entry>
        <entry key="segnetLayersDeprecation">segnetLayers will be removed in a future release. Create a SegNet network using a dlnetwork (Deep Learning Toolbox) object instead.</entry>

        <!-- fcnLayers -->
        <entry key="fcnlayersDeprecation">fcnLayers will be removed in a future release. Create an FCN network using a dlnetwork (Deep Learning Toolbox) object instead.</entry>
        
        <!-- unetLayers -->
        <entry key="imageSizeIncompatible"> The width and height of the image must be a multiple of 2^EncoderDepth. You can specify image size as {1} instead of {0}.</entry>
        <entry key="unetLayersDeprecation">unetLayers will be removed in a future release. Use the unet function instead.</entry>

        <!-- unet -->
        <entry key="encoderDecoderMismatch"> Encoder must have {0} outputs for the current depth specified.</entry>
        <entry key="encoderImageInputMissing"> Expected encoder to have an image input layer.</entry>
        
        <!-- unet3dLayers -->
        <entry key="imageSizeIncompatible3d"> The width, height, and depth of the image must be a multiple of 2^EncoderDepth. You can specify image size as {1} instead of {0}.</entry>
        <entry key="imageSizeIncompatibleValidConv"> The input size is constrained by valid convolution and depth of the encoder/decoder networks. You can specify input size as {1} instead of {0}.</entry>
        <entry key="imageSizeIncorrect3d">Expected input size to be a three or four element vector. </entry>
        <entry key="unet3dLayersDeprecation">unet3dLayers will be removed in a future release. Use the unet3d function instead.</entry>

        <!-- deeplab v3+ -->
        <entry key="imageSizeThirdDimMustBeThree">The third dimension of imageSize must be 3.</entry>
        <entry key="imageSizeInvalidForNetwork">The first two values of imageSize must be greater than or equal to {0} for {1}.</entry>
        <entry key="invalidDownsamplingFactor">''DownsamplingFactor'' value must be 8 or 16.</entry>
        <entry key="deeplabv3plusLayersDeprecation">deeplabv3plusLayers will be removed in a future release. Use the deeplabv3plus function instead.</entry>

        <!-- bisenetv2 -->
        <entry key="ChannelRatioMustBePow2">''ChannelRatio'' value must be a power of 2.</entry>
        <entry key="IncompatibleChannelRatioAndMultiplier">When the ''ChannelRatio'' value is {0}, the ''ChannelMultiplier'' value must be one of the following: {1}.</entry>
        
        <!-- pixelLabelImageDatastore -->      
        <entry key="missingPixelLabelData">All groundTruth objects must contain pixel label data.</entry>
        <entry key="inconsistentPixelLabelNames">All groundTruth objects must define the same set of pixel label names in the label definitions table.</entry>
        <entry key="unequalNumelFiles">imds and pxds must have the same number of Files.</entry>
        <entry key="aug3dNotSupported"><![CDATA[pixelLabelImageDatastore supports ColorPreprocessing, DataAugmentation and OutputSize properties only for 2-D images. See the <a href="matlab:doc matlab.io.datastore.ImageDatastore/transform">transform</a> method to resize, augment or modify 3D data.]]></entry>
        <entry key="augOutSizeNotSupported">The height and width of an image and its corresponding pixel labeled image must be equal if DataAugmentation is specified or if OutputSizeMode is ''randcrop'' or ''centercrop''.</entry>
        <entry key="outOfData">No more data to read. Use reset method to reset to start of data. Use the hasdata method to check if data is available to read.</entry>
        <entry key="pixelLabelImageDatastoreDeprecation">pixelLabelImageDatastore will be removed in a future release. Use the imageDatastore and pixelLabelDatastore objects and the combine function instead.</entry>
        
        <!-- evaluateSemanticSegmentation -->
        <entry key="cannotOutputBlockMetrics">Block Metrics can be calculated only when the input table has BlockInfo and ImageNumber.</entry>
        
         <!-- Codegen -->
        <entry key="roiConstant">For code generation, the parameter 'roi' must be a coder.Constant type.</entry>
        <entry key="roiIncorrectNumel">ROI must be a row array with 4 elements. </entry>
        <entry key="VariableSizeMiniBatch">MiniBatchSize name-value pair passed to predict method must be fixed size for code generation.</entry>
        <entry key="IgnoreInputArg">Code generation does not support the argument ''{1}'' passed to ''{0}'' method. This argument will be ignored.</entry>
        <entry key="datastoreNotSupported">Input datastore is not supported for code generation. </entry>
        <entry key="codegenUnsupported">Code generation is not supported for the function semanticseg</entry>
        <entry key="IgnoreDatastoreNV">Code generation does not support the argument ''{0}''. This argument will be ignored.</entry>
        

    
    </message>
</rsccat>

<!-- LocalWords:  roi datastores Seg VGG Ons vgg imds pxds randcrop centercrop hasdata
-->
