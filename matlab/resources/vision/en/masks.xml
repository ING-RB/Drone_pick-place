<?xml version="1.0" encoding="utf-8"?>
<rsccat locale="en_US" product="vision" version="1.0">
   <message>
      <!--Blob Analysis-->
      <entry key="BlobAnalysisDescription">Compute statistics for connected regions in the binary image, BW.</entry>
      <entry key="DataTypesTab"> When the Statistics output data type parameter is set to double or single,\n fixed-point parameters are not applicable.</entry>
      <entry key="NoteAreaAndBoundingBoxOutputs">Note:  Area and Bounding box outputs are data type int32. Major axis length, Minor axis length, Orientation and Eccentricity are not available in fixed-point mode.</entry>
      <entry key="NoteAreaAndBoundingBoxOutputs1">Note:  Area and Bounding box outputs are data type int32.</entry>
      <entry key="SpecifyMinimumBlobAreaInPixels">Specify minimum blob area in pixels:</entry>
      <entry key="SpecifyMinimumBlobAreaInPixels1">Specify minimum blob area in pixels</entry>
      <entry key="SpecifyMaximumBlobAreaInPixels">Specify maximum blob area in pixels:</entry>
      <entry key="SpecifyMaximumBlobAreaInPixels1">Specify maximum blob area in pixels</entry>
      <entry key="BlobProperties">Blob Properties</entry>
      <entry key="Area">Area</entry>
      <entry key="Centroid">Centroid</entry>
      <entry key="BoundingBox">Bounding box</entry>
      <entry key="MajorAxisLength">Major axis length</entry>
      <entry key="MinorAxisLength">Minor axis length</entry>
      <entry key="Orientation">Orientation</entry>
      <entry key="Eccentricity">Eccentricity</entry>
      <entry key="EquivalentDiameterSquared">Equivalent diameter squared</entry>
      <entry key="Extent">Extent</entry>
      <entry key="Perimeter">Perimeter</entry>
      <entry key="StatisticsOutputDataType">Statistics output data type:</entry>
      <entry key="Connectivity">Connectivity:</entry>
      <entry key="OutputLabelMatrix">Output label matrix</entry>
      <entry key="MaximumNumberOfBlobs">Maximum number of blobs:</entry>
      <entry key="WarnIfMaximumNumberOfBlobs">Warn if maximum number of blobs is exceeded</entry>
      <entry key="OutputNumberOfBlobsFound">Output number of blobs found</entry>
      <entry key="ExcludeBlobsTouchingImageBorder">Exclude blobs touching image border</entry>
      <entry key="OutputBlobStatisticsAsAVariable">Output blob statistics as a variable size signal</entry>
      <entry key="FillEmptySpacesInOutputs">Fill empty spaces in outputs</entry>
      <entry key="FillValues">Fill values:</entry>
      <entry key="Statistics">Statistics</entry>
      <entry key="LabelParameters">Label Parameters</entry>
      <entry key="Parameters">Parameters</entry>
      <entry key="ProductOutput">Product output</entry>
      <entry key="Accumulator">Accumulator</entry>
      <entry key="CentroidOutput">Centroid output</entry>
      <entry key="EquivDiam2Output">Equiv Diam^2 output</entry>
      <entry key="ExtentOutput">Extent output</entry>
      <entry key="PerimeterOutput">Perimeter output</entry>
      <entry key="Double" translate="false">double</entry>
      <entry key="Single" translate="false">single</entry>
      <entry key="SpecifyViaDataTypesTab">Specify via Data Types tab</entry>
      <entry key="NoDataTypesblob">When the Statistics output data type parameter is set to double or single, fixed-point parameters are not applicable.</entry>
      <!--Autothreshold-->
      <entry key="ThresholdingOperator">Thresholding operator:</entry>
      <entry key="OutputThreshold">Output threshold</entry>
      <entry key="OutputEffectivenessMetric">Output effectiveness metric</entry>
      <entry key="SpecifyDataRange">Specify data range</entry>
      <entry key="MinimumValueOfInput">Minimum value of input:</entry>
      <entry key="MaximumValueOfInput">Maximum value of input:</entry>
      <entry key="WhenDataRangeIsExceeded">When data range is exceeded:</entry>
      <entry key="ScaleThreshold">Scale threshold</entry>
      <entry key="ScaleThreshold_MP">Scale threshold:</entry>
      <entry key="ThresholdScalingFactor">Threshold scaling factor:</entry>
      <entry key="Ignore">Ignore</entry>
      <entry key="Saturate">Saturate</entry>
      <entry key="WarnAndSaturate">Warn and saturate</entry>
      <entry key="Error">Error</entry>
      <entry key="Product1" note="As in multiplying numbers">Product 1</entry>
      <entry key="Product2" note="As in multiplying numbers">Product 2</entry>
      <entry key="Product3" note="As in multiplying numbers">Product 3</entry>
      <entry key="Product4" note="As in multiplying numbers">Product 4</entry>
      <entry key="Accumulator1">Accumulator 1</entry>
      <entry key="Accumulator2">Accumulator 2</entry>
      <entry key="Accumulator3">Accumulator 3</entry>
      <entry key="Accumulator4">Accumulator 4</entry>
      <entry key="EffMetric">Eff Metric</entry>
      <entry key="Quotient">Quotient</entry>
      <entry key="OpenDataTypeDiagram">Open Data Type Diagram</entry>
      <entry key="SameAs">Same as {0}</entry>
      <entry key="SameAsProduct1">Same as Product 1</entry>
      <entry key="SameAsProduct2">Same as Product 2</entry>
      <entry key="SameAsProduct3">Same as Product 3</entry>
      <entry key="SameAsProduct4">Same as Product 4</entry>
      <entry key="AutoThresholdDescription">Automatically converts an intensity image to a binary image. This block uses Otsu's method, which determines the threshold by splitting the histogram of the input image 
                                            such that the variance for each of the pixel groups is minimized.\n\nOptionally, the block can output a metric that indicates effectiveness of thresholding of the input image. 
                                            The lower bound of the metric (zero) is attainable only by images having a single gray level, and the upper bound (one) is attainable only by two-valued images.</entry> 
      <!--2-D Autocorrelation-->
      <entry key="AutocorrelationDescription">Compute 2-D autocorrelation of input matrix.</entry>
      <entry key="NoMainTabParamsDescription">There are no main parameters to specify for this block.</entry>
      <!--Block Matching-->
      <entry key="BlockMatchingDescription">Estimates motion between two images or two video frames using block matching method.</entry>
      <entry key="TwoImages">Two images</entry>
      <entry key="Exhaustive">Exhaustive</entry>
      <entry key="MeanSquareErrorMSE">Mean square error (MSE)</entry>
      <entry key="HorizontalAndVerticalComponentsI">Horizontal and vertical components in complex form</entry>
      <entry key="CurrentFrameAndNthFrameBack">Current frame and N-th frame back</entry>
      <entry key="Threestep">Three-step</entry>
      <entry key="MeanAbsoluteDifferenceMAD">Mean absolute difference (MAD)</entry>
      <entry key="Magnitudesquared">Magnitude-squared</entry>
      <entry key="EstimateMotionBetween">Estimate motion between:</entry>
      <entry key="SearchMethod">Search method:</entry>
      <entry key="BlockMatchingCriteria">Block matching criteria:</entry>
      <entry key="BlockSizeheightWidth">Block size [height width]:</entry>
      <entry key="OverlaprC">Overlap [r c]:</entry>
      <entry key="MaximumDisplacementrC">Maximum displacement [r c]:</entry>
      <entry key="VelocityOutput">Velocity output:</entry>
      <entry key="Output">Output</entry>
      <!--Compositing-->
      <entry key="Operation" note="Here operation is an action. The user specifies the operation needed tobe done by the block">Operation:</entry>
      <entry key="OpacityFactorsSource">Opacity factor(s) source:</entry>
      <entry key="MaskSource">Mask source:</entry>
      <entry key="OpacityFactors">Opacity factor(s):</entry>
      <entry key="Mask">Mask:</entry>
      <entry key="LocationSource">Location source:</entry>
      <entry key="LocationxY">Location [x y]:</entry>
      <entry key="FixedpointParameters">Fixed-point parameters are applicable only when Operation parameter is set to Blend.</entry>
      <entry key="Blend">Blend</entry>
      <entry key="SpecifyViaDialog">Specify via dialog</entry>
      <entry key="BinaryMask">Binary mask</entry>
      <entry key="InputPort">Input port</entry>
      <entry key="HighlightSelectedPixels">Highlight selected pixels</entry>
      <entry key="OpacityFactor">Opacity factor</entry>
      <entry key="CompositingDescription">Combines the pixel values of two images, overlays one image over another, or highlights selected pixels.\n\nIf, for the Operation parameter, you choose Blend, you can use the 
                                          Opacity factor(s) parameter to define the amount by which the block scales the pixel values of Image2 before combining them with the pixel values of Image1. This parameter can be a 
                                          scalar value that the block uses for all pixels or a matrix of values that defines the factor for each pixel.\n\nIf, for the Operation parameter, you choose Binary mask, you can use 
                                          the Masking factor(s) parameter to define which pixels of Image1 are overwritten by the pixel values of Image2. You can enter 0 or 1, which the block uses for all pixels, or a matrix 
                                          of 0's and 1's that defines the factor for each pixel.</entry> 
      <!--Contrast Adjustment-->
      <entry key="FullInputDataRangeminMax">Full input data range [min max]</entry>
      <entry key="FullDataTypeRange">Full data type range</entry>
      <entry key="UserdefinedRange">User-defined range</entry>
      <entry key="RangeDeterminedBySaturating">Range determined by saturating outlier pixels</entry>
      <entry key="AdjustPixelValuesFrom">Adjust pixel values from:</entry>
      <entry key="RangelowHigh">Range [low high]:</entry>
      <entry key="PercentageOfPixelsToSaturatelowH">Percentage of pixels to saturate [low high]:</entry>
      <entry key="SpecifyNumberOfHistogramBinsused">Specify number of histogram bins (used to calculate the range when outliers are eliminated)</entry>
      <entry key="NumberOfHistogramBins">Number of histogram bins:</entry>
      <entry key="AdjustPixelValuesTo">Adjust pixel values to:</entry>
      <entry key="ContrastAdjustmentDescription">Adjusts the contrast of an image by linearly scaling the pixel values between upper and lower limits. Pixel values that are above or below this range are saturated to the upper or 
                                            lower limit values, respectively.</entry> 
      <!--2D Convolution-->
      <entry key="Full">Full</entry>
      <entry key="SameAsInputPortI1">Same as input port I1</entry>
      <entry key="Valid">Valid</entry>
      <entry key="OutputSize">Output size:</entry>
      <entry key="NormalizedOutput">Normalized output</entry>
      <entry key="ConvolutionDescription">Performs two-dimensional convolution on two inputs.\n\nUse the Output size parameter to specify the dimensions of the output. Assume that the input at port I1 has dimensions (Ma, Na) and 
                                          the input at port I2 has dimensions (Mb, Nb). If you choose Full, the output is the full two-dimensional convolution with dimensions (Ma+Mb-1, Na+Nb-1). If you choose Same as input port 
                                          I1, the output is the central part of the convolution with the same dimensions as the input at port I1. If you choose Valid, the output is only those parts of the convolution that are 
                                          computed without the zero-padded edges of any input. This output has dimensions (Ma-Mb+1, Na-Nb+1).\n\nYou can normalize the output only when the input is floating point.</entry>

      <!--Corner Detection-->
      <entry key="HarrisCornerDetectionHarrisSteph">Harris corner detection (Harris &amp; Stephens)</entry>
      <entry key="MinimumEigenvalueShiTomasi">Minimum eigenvalue (Shi &amp; Tomasi)</entry>
      <entry key="LocalIntensityComparisonRostenDr">Local intensity comparison (Rosten &amp; Drummond)</entry>
      <entry key="LocalIntensityComparisonRosenDr">Local intensity comparison (Rosen &amp; Drummond)</entry>
      <entry key="CornerLocation">Corner location</entry>
      <entry key="CornerLocationAndMetricMatrix">Corner location and metric matrix</entry>
      <entry key="MetricMatrix">Metric matrix</entry>
      <entry key="Obsolete9b" translate="false">Obsolete9b</entry>
      <entry key="Coefficients">Coefficients</entry>
      <entry key="Memory">Memory</entry>
      <entry key="MetricOutput">Metric output</entry>
      <entry key="Method">Method:</entry>
      <entry key="SensitivityFactor">Sensitivity factor (0&lt;k&lt;0.25):</entry>
      <entry key="CoefficientsSeparableSmoothing">Coefficients for separable smoothing filter:</entry>
      <entry key="IntensityComparisonThreshold">Intensity comparison threshold:</entry>
      <entry key="MaximumAngleToBeConsidered">Maximum angle to be considered a corner (in degrees):</entry>
      <entry key="Output1">Output:</entry>
      <entry key="MaximumNumberOfCorners">Maximum number of corners:</entry>
      <entry key="MinimumMetricValueThatIndicates">Minimum metric value that indicates a corner:</entry>
      <entry key="NeighborhoodSizesuppressRegion">Neighborhood size (suppress region around detected corners):</entry>
      <entry key="OutputVariableSizeSignal">Output variable size signal</entry>
      <entry key="CornerDetectionDescription">Find corners in the image.\n\nYou can use this block to find the location of the corners, and the corner metric values. Corner locations are returned as an M-by-2 matrix of 
                                              one-based [x y] coordinates, where M is the number of detected corners.</entry>     

      <!--Deinterlacing-->
      <entry key="LineRepetition">Line repetition</entry>
      <entry key="LinearInterpolation">Linear interpolation</entry>
      <entry key="VerticalTemporalMedianFiltering">Vertical temporal median filtering</entry>
      <entry key="DeinterlacingMethod">Deinterlacing method:</entry>
      <entry key="InputImageIsTransposeddataOrder">Input image is transposed (data order is row major)</entry>
      <entry key="FixedpointParametersLinearInterp"> Fixed-point parameters are applicable only for linear interpolation method.</entry>
      <entry key="DeinterlacingDescription">Removes motion artifacts from images composed of weaved top and bottom fields of an interlaced signal.</entry>    
      
      <!--Demosaic-->
      <entry key="Bilinear">Bilinear</entry>
      <entry key="OneMultidimensionalSignal">One multidimensional signal</entry>
      <entry key="GradientcorrectedLinear">Gradient-corrected linear</entry>
      <entry key="SeparateColorSignals">Separate color signals</entry>
      <entry key="Obsolete">Obsolete</entry>
      <entry key="InterpolationAlgorithm">Interpolation algorithm:</entry>
      <entry key="InterpolationAlgorithmObs">Interpolation algorithm (obsoleted):</entry>
      <entry key="SensorAlignment">Sensor alignment:</entry>
      <entry key="OutputImageSignal">Output image signal:</entry>
      <entry key="DemosaicDescription">This block performs Demosaicing of an input image in Bayer format with the specified alignment. The alignment is identified as the sequence of R, G and B pixels in the top-left four pixels of the image in row-wise order.</entry>
      
      <!--Draw Markers-->
      <entry key="Intensity">Intensity</entry>
      <entry key="Circle">Circle</entry>
      <entry key="Black">Black</entry>
      <entry key="EntireImage">Entire image</entry>
      <entry key="RGB" translate="false">RGB</entry>
      <entry key="Xmark">X-mark</entry>
      <entry key="White">White</entry>
      <entry key="SpecifyRegionOfInterestViaPort">Specify region of interest via port</entry>
      <entry key="Plus" note="+">Plus</entry>
      <entry key="UserspecifiedValue">User-specified value</entry>
      <entry key="Star">Star</entry>
      <entry key="Square">Square</entry>
      <entry key="InputImageType">Input image type:</entry>
      <entry key="ImageSignal">Image signal:</entry>
      <entry key="MarkerShape">Marker shape:</entry>
      <entry key="MarkerSize">Marker size:</entry>
      <entry key="Filled">Filled</entry>
      <entry key="FillColorSource">Fill color source:</entry>
      <entry key="FillColor">Fill color:</entry>
      <entry key="BorderColorSource">Border color source:</entry>
      <entry key="BorderColor">Border color:</entry>
      <entry key="ColorValues">Color value(s):</entry>
      <entry key="OpacityFactorsbetween0And1">Opacity factor(s) (between 0 and 1):</entry>
      <entry key="DrawMarkersIn">Draw Markers in:</entry>
      <entry key="UseAntialiasing">Use antialiasing</entry>
      <entry key="DataTypesParametersAreApplicable">Data Types parameters are applicable only when the shapes are filled or anti-aliasing is used.</entry>
      <entry key="Opacity">Opacity</entry>
      <entry key="DrawMarkersDescription">Mark locations on images by drawing circles, x-marks, plus signs, stars, or squares.\n\nUse the Pts port to specify an M-by-2 matrix of x and y pairs, where M is the total number of markers 
                                       and each x and y pair defines a marker's center. Use the Marker size parameter to define the size of the marker, in pixels. Use the Draw markers in parameter to define the area in which to 
                                       draw the markers.</entry>      
      <!--Draw Shapes-->
      <entry key="DataTypeParametersApply"> Data Type parameters apply when you fill shapes, use anti-aliasing, or \n when you set a line width for lines or polygons with a value greater than 1.</entry>
      <entry key="TheInputToThePtsPortMustBeAnMby4">The input to the Pts port must be an M-by-4 matrix where each row is of the form [x y width height] and specifies a different rectangle.</entry>
      <entry key="TheInputToThePtsPortMustBeAnMby2">The input to the Pts port must be an M-by-2L matrix where each row specifies a different polyline. Each row must be of the form [x1,y1,x2,y2...xL,yL], which specifies the 
                                                    points to be connected in consecutive order.</entry>
      <entry key="TheInputToThePtsPortMustBeAnMb2">The input to the Pts port must be an M-by-2L matrix where each row specifies a different polygon. Each row must be of the form [x1,y1,x2,y2...xL,yL], which specifies the 
                                                   points to be connected in consecutive order. In this case [x1,y1] is also connected to [xL,yL].</entry>
      <entry key="TheInputToThePtsPortMustBeAnMby3">The input to the Pts port must be an M-by-3 matrix where each row is of the form [x y radius] and specifies a different circle.</entry>
      <entry key="Shape">Shape:</entry>
      <entry key="FillShapes">Fill shapes</entry>
      <entry key="LineWidth">Line width:</entry>
      <entry key="OpacityFactorbetween0And1">Opacity factor (between 0 and 1):</entry>
      <entry key="DrawShapesIn">Draw shapes in:</entry>
      <entry key="Rectangles">Rectangles</entry>
      <entry key="Lines">Lines</entry>
      <entry key="Polygons">Polygons</entry>
      <entry key="Circles">Circles</entry>
      <entry key="LineWidth_1">Line width</entry>
      <entry key="BorderIntensity">Border intensity:</entry>
      <entry key="IntensityValue">Intensity value:</entry>
      <entry key="RGBValues">RGB values:</entry>
      <entry key="DrawAntialiasedLines">Draw antialiased lines:</entry>
      <entry key="DrawShapesDescription">Draw multiple rectangles, lines, polygons, or circles on images by overwriting pixel values.\n\nUse the Pts port to specify the appropriate shape coordinates. You can define the color 
                                         value of the shape's border. You can also choose to fill your shape and specify its opacity.</entry>      
      <!--Edge Detection-->
      <entry key="ThresholdScaleFactor">Threshold scale factor:(used to automatically calculate threshold value)</entry>
      <entry key="ApproximatePercentageOfWeakEdge">Approximate percentage of weak edge and nonedge pixels:(used to automatically calculate threshold values)</entry>
      <entry key="OutputType">Output type:</entry>
      <entry key="UserdefinedThreshold">User-defined threshold</entry>
      <entry key="ThresholdSource">Threshold source:</entry>
      <entry key="Threshold">Threshold:</entry>
      <entry key="EdgeThinning">Edge thinning</entry>
      <entry key="ThresholdlowHigh">Threshold [low high]:</entry>
      <entry key="StandardDeviationOfGaussian">Standard deviation of Gaussian filter:</entry>
      <entry key="FixedpointInputIsNotSupported"> Fixed-point input is not supported for Canny edge detection method.</entry>
      <entry key="Gradients">Gradients</entry>
      <entry key="Sobel">Sobel</entry>
      <entry key="BinaryImage">Binary image</entry>
      <entry key="Prewitt">Prewitt</entry>
      <entry key="GradientComponents">Gradient components</entry>
      <entry key="Roberts">Roberts</entry>
      <entry key="BinaryImageAndGradientComponents">Binary image and gradient components</entry>
      <entry key="Canny">Canny</entry>  
      <entry key="EdgeDetectionDescription">Finds the edges in an input image using Sobel, Prewitt, Roberts, or Canny methods.\n\nThe block outputs a binary image, a matrix of Boolean values, where pixel values equal to 1 
                                            correspond to edges.  Alternatively, the block can output two gradient components of the image for the first three methods.</entry>
      <!--Hough Transform-->
      <entry key="ThetaResolutionradians">Theta resolution (radians):</entry>
      <entry key="RhoResolution">Rho resolution:</entry>
      <entry key="OutputThetaAndRhoValues">Output theta and rho values</entry>
      <entry key="OutputDataType">Output data type:</entry>
      <entry key="WhenTheOutputDataTypeParameterIs"> When the Output data type parameter is set to double or single, fixed-point parameters are not applicable.</entry>
      <entry key="SineTable">Sine Table</entry>
      <entry key="Rho" translate="false">Rho</entry>
      <entry key="HoughOutput">Hough output</entry>
      <entry key="ThetaOutput">Theta output</entry>
      <entry key="SpecifyViaFixedPointTab">Specify via Fixed-point tab</entry>      
      <entry key="HoughTransformDescription" note="Here the line can be translated as straight line.  Mathematically, line is always a straight line.">Implements the Hough Transform to detect lines.\n\nThe block generates a parameter space matrix using the following equation:\n\n
      rho = x*cos(theta) + y*sin(theta).\n\n The block outputs this matrix at the Hough port. The rows and columns of this matrix correspond
      to the rho and theta values, respectively. Peak values in this matrix represent potential lines in the input image.</entry> 
      <!--Hough Lines-->
      <entry key="SineValueComputationMethod">Sine value computation method:</entry>
      <entry key="SineTable1">Sine table</entry>
      <entry key="TrigonometricFunction">Trigonometric function</entry>
      <entry key="TableLookup">Table lookup</entry>
      <entry key="HoughLinesDescription">Finds Cartesian coordinates of lines that are described by rho and theta pairs.\n\nThe block inputs are the theta and rho values of lines and a reference image. The block outputs the 
                                         one-based [x y] coordinates of the intersections between the lines and two of the reference image boundary lines. The boundary lines are the left and right vertical boundaries and the 
                                         top and bottom horizontal boundaries of the reference image.</entry>      
      <!--Median Filter-->
      <entry key="NeighborhoodSize">Neighborhood size:</entry>
      <entry key="PaddingOptions">Padding options:</entry>
      <entry key="PadValueSource">Pad value source:</entry>
      <entry key="PadValue">Pad value:</entry>
      <entry key="WhenBothNeighborhoodDimensions"> When both neighborhood dimensions are odd, fixed-point parameters are not applicable.</entry>
      <entry key="SameAsInputPortI">Same as input port I</entry>
      <entry key="Constant">Constant</entry>
      <entry key="Replicate">Replicate</entry>
      <entry key="Symmetric">Symmetric</entry>
      <entry key="Circular">Circular</entry>  
      <entry key="MedianFilterDescription">Performs Median filtering of input matrix I.\n\nUse the Neighborhood size parameter to specify the size of the neighborhood over which the block computes the median. </entry>      
      <!--Optical Flow-->
      <entry key="FixedpointInputSupportedLucasKanade"> Fixed-point input is supported for Lucas-Kanade (Difference filter) method.</entry>
      <entry key="TemporalGradientFilter">Temporal gradient filter:</entry>
      <entry key="ComputeOpticalFlowBetween">Compute optical flow between:</entry>
      <entry key="SmoothnessFactor">Smoothness factor:</entry>
      <entry key="StopIterativeSolution">Stop iterative solution:</entry>
      <entry key="VelocityDifferenceThreshold">Velocity difference threshold:</entry>
      <entry key="MaximumNumberOfIterations">Maximum number of iterations:</entry>
      <entry key="NumberOfFramesToBuffer">Number of frames to buffer for temporal smoothing:</entry>
      <entry key="SDForImageSmoothing">Standard deviation for image smoothing filter:</entry>
      <entry key="SDForGradientSmoothing">Standard deviation for gradient smoothing filter:</entry>
      <entry key="DiscardNormalFlowEstimates">Discard normal flow estimates when constraint equation is ill-conditioned</entry>
      <entry key="OutputImageCorrespondingToMotion">Output image corresponding to motion vectors (accounts for block delay)</entry>
      <entry key="ThresholdForNoiseReduction">Threshold for noise reduction:</entry>
      <entry key="Threshold1">Threshold</entry>
      <entry key="HornSchunck">Horn-Schunck</entry>
      <entry key="DerivativeOfGaussian">Derivative of Gaussian</entry>
      <entry key="WhenVelocityDifferenceFallsBelow">When velocity difference falls below threshold</entry>
      <entry key="LucasKanade">Lucas-Kanade</entry>
      <entry key="DifferenceFilter">Difference filter [-1 1]</entry>
      <entry key="WhenMaximumNumberOfIterations">When maximum number of iterations is reached</entry>
      <entry key="WhicheverComesFirst">Whichever comes first</entry>
      <entry key="OpticalFlowDescription">Estimates optical flow across two or more video frames.</entry>  

      <!--Gaussian Pyramid-->
      <entry key="PyramidLevel">Pyramid level:</entry>
      <entry key="CoefficientSource">Coefficient source:</entry>
      <entry key="CoefficientsForSeparableFilter">Coefficients for separable filter:</entry>
      <entry key="HiddenCoefficients">Hidden coefficients</entry>
      <entry key="Reduce">Reduce</entry>
      <entry key="DefaultSeparableFilter">Default separable filter [1/4-a/2  1/4  a  1/4  1/4-a/2]</entry>
      <entry key="Expand">Expand</entry>
      <entry key="GaussianPyramidDescription">This block computes Gaussian pyramid reduction or expansion.  The input is either upsampled or downsampled and a lowpass filter is applied pre- or post-sampling.</entry>
      
      <!--Resize-->
      <entry key="Specify">Specify:</entry>
      <entry key="ResizeFactorIn">Resize factor in percentage:</entry>
      <entry key="NumberOfOutputColumns">Number of output columns:</entry>
      <entry key="NumberOfOutputRows">Number of output rows:</entry>
      <entry key="NumberOfOutputRowsAndColumns">Number of output rows and columns:</entry>
      <entry key="InterpolationMethod">Interpolation method:</entry>
      <entry key="PerformAntialiasingWhenResize">Perform antialiasing when resize factor is between 0 and 100</entry>
      <entry key="EnableROIProcessing">Enable ROI processing</entry>
      <entry key="OutputFlagIndicatingIfAnyPart">Output flag indicating if any part of ROI is outside image bounds</entry>
      <entry key="FixedpointParametersAreNotApplic"> Fixed-point parameters are not applicable.</entry>
      <entry key="ROIProcessing">ROI Processing</entry>
      <entry key="InterpolationweightsTable">Interpolation \nweights table</entry>
      <entry key="OutputSizeAsAPercentageOfInput">Output size as a percentage of input size</entry>
      <entry key="NearestNeighbor">Nearest neighbor</entry>
      <entry key="FullImage">Full image</entry>
      <entry key="NumberOfOutputColumnsAndPreserve">Number of output columns and preserve aspect ratio</entry>
      <entry key="Userdefined">User-defined</entry>
      <entry key="NumberOfOutputRowsAndPreserveAspectR">Number of output rows and preserve aspect ratio</entry>
      <entry key="Bicubic">Bicubic</entry>
      <entry key="NumberOfOutputRowsAndColumns1">Number of output rows and columns</entry>
      <entry key="Lanczos2" translate="false">Lanczos2</entry>
      <entry key="Lanczos3" translate="false">Lanczos3</entry>
      <entry key="OutputFlagROIImageBound">Output flag indicating if ROI is within image bounds</entry>
      <entry key="ResizeDescription">Change the size of an image or a region of interest within an image.\n\nUse the Specify parameter to designate the parameters you want to use to resize your image. You can specify a 
                                              scalar percentage that is applied to both rows and columns, or you can specify a two-element vector to scale the rows and columns differently. You can specify the number of rows 
                                              and/or columns you want your output image to have, and you can preserve or change the image's aspect ratio.\n\nUse the Interpolation method parameter to specify the type of 
                                              interpolation performed by the block when it is resizing a image. If you select the Perform antialiasing when resize factor is between 0 and 100 check box, the block performs 
                                              lowpass filtering on the input image before shrinking it.</entry>      
      <!--Rotate-->
      <entry key="RotationAngleSource">Rotation angle source:</entry>
      <entry key="Angleradians">Angle (radians):</entry>
      <entry key="MaximumAngleenterPiRadiansToAcco">Maximum angle (enter pi radians to accommodate all positive and negative angles):</entry>
      <entry key="DisplayRotatedImageIn">Display rotated image in:</entry>
      <entry key="BackgroundFillValue">Background fill value:</entry>
      <entry key="AngleValues">Angle values</entry>
      <entry key="ExpandedToFitRotatedInputImage">Expanded to fit rotated input image</entry>
      <entry key="TopleftCorner">Top-left corner</entry>
      <entry key="SameAsInputImage">Same as input image</entry>
      <entry key="Center">Center</entry>
      <entry key="AngleUnits">Angle units:</entry>
      <entry key="SineValueCalcMethod">Sine value calculation method:</entry>      
      <entry key="RotateDescription">Rotates an image by an angle in radians. You can specify this angle using the block parameters dialog box or input port Angle.\n\nUse the Output size parameter to determine the size of the 
                                     output. If you select Expanded to fit rotated input image, the block outputs a matrix that contains all the rotated image values and zeros elsewhere. If you select Same as input image, 
                                     the block outputs a matrix that contains the middle part of the rotated image and zeros elsewhere. As a result, the edges of the rotated image might be cropped.\n\nWhen specifying the 
                                     rotation angle using the Angle port, the maximum angle value should be greater than 0 but less than or equal to pi radians.</entry>     
      <!--Shear-->
      <entry key="ShearDirection">Shear direction:</entry>
      <entry key="OutputSizeAfterShear">Output size after shear:</entry>
      <entry key="ShearValuesSource">Shear values source:</entry>
      <entry key="RowcolumnShearValuesfirstLast">Row/column shear values [first last]: </entry>
      <entry key="MaximumShearValue">Maximum shear value:</entry>
      <entry key="ShearValues">Shear values</entry>
      <entry key="Horizontal">Horizontal</entry>
      <entry key="Vertical">Vertical</entry>
      <entry key="RowColumnShear">Row/column shear values [first last]:</entry>
      <entry key="ShearDescription">Shifts each row or column of an image by a linearly increasing or decreasing distance.\n\nUse the Shear direction parameter to specify whether you want to shift the rows or columns 
                                     horizontally or vertically. Use the Row/column shear values [first last] parameter or the S port to specify a two-element vector. The first element represents the number of pixels by 
                                     which you want to shift your first row or column, and the second element represents the number of pixels by which you want to shift your last row or column.\n\nWhen using the S port to specify 
                                     the shear values, use the Maximum shear value parameter to specify the maximum number of pixels by which you want to shift your rows or columns.\n\nIf, for the Output size after shear 
                                     parameter, you select Full, the block outputs the entire sheared image. If you select Same as input image, the block outputs the top left portion of the full sheared image with dimensions 
                                     same as input image.</entry>
      <!--Translate-->
      <entry key="OutputSizeAfterTranslation">Output size after translation:</entry>
      <entry key="OffsetSource">Offset source:</entry>
      <entry key="Offset">Offset:</entry>
      <entry key="MaximumOffset">Maximum offset:</entry>
      <entry key="OffsetValues">Offset values</entry>
      <entry key="TranslateDescription">Move an image up or down and/or left or right. You can specify your two-element offset vector using the dialog box or the Offset port. The first element represents how many pixels up or down 
                                    to shift your image. If you enter a positive value, the block moves the image downward.  The second element represents how many pixels left or right to shift your image. If you enter a 
                                    positive value, the block moves the image to the right.</entry>          
      <!--Template Matching-->
      <entry key="MatchMetric">Match metric:</entry>
      <entry key="OutputNxNMatrixOfMetricValues">Output NxN matrix of metric values around best match</entry>
      <entry key="OutputFlagIndicatingIfROIIsValid">Output flag indicating if ROI is valid</entry>
      <entry key="OutputOptions">Output options</entry>
      <entry key="SumOfAbsoluteDifferences">Sum of absolute differences</entry>
      <entry key="SumOfSquaredDifferences">Sum of squared differences</entry>
      <entry key="BestMatchLocation">Best match location</entry>
      <entry key="MaximumAbsoluteDifference">Maximum absolute difference</entry>
      <entry key="TemplateMatchingDescription">Perform template matching by shifting the template in single-pixel increments throughout the interior of image I.\n\nYou can use the ROI port to define a region of interest (ROI) over which 
                                        you want to perform template matching. The format of the ROI port is [x y width height], where [x y] are one-based coordinates of the upper left corner of a rectangle.\n\nThe block outputs 
                                        either the match metric values at the Metric port or the one-based [x y] coordinates of the best template match at the Loc port.  Optionally, the block can output an N-by-N matrix of the 
                                        match metric values centered around the best match location at the NMetric port.</entry>
      <!--Gamma Correction-->
      <entry key="Gamma">Gamma</entry>
      <entry key="DeGamma">De-gamma</entry>
      <entry key="GammaPrompt">Gamma:</entry>
      <entry key="LinearSegment">Linear segment</entry>
      <entry key="BreakPoint">Break point:</entry>      
      <entry key="GammaCorrectionDescription">Apply or remove gamma correction.</entry>
      
      <!--Erosion-->
      <entry key="NeighborhoodOrStructuringElementSrc">Neighborhood or structuring element source:</entry>
      <entry key="NeighborhoodOrStructuringElement">Neighborhood or structuring element:</entry>      
      <entry key="ErosionDescription">Perform morphological erosion on an intensity or binary image.\n\nUse the Neighborhood or structuring element parameter to define the neighborhood or structuring element that the block 
                                      applies to the image.  Specify a neighborhood by entering a matrix or vector of ones and zeros.  Specify a structuring element using the strel function.  Alternatively, you can specify 
                                      neighborhood values using the Nhood port.\n\nFor further information on structuring elements, type doc strel at the MATLAB command prompt.</entry>

      <!--Dilation-->
      <entry key="DilationDescription">Perform morphological dilation on an intensity or binary image.\n\nUse the Neighborhood or structuring element parameter to define the neighborhood or structuring element that the block 
                                       applies to the image.  Specify a neighborhood by entering a matrix or vector of ones and zeros.  Specify a structuring element using the strel function.  Alternatively, you can specify 
                                       neighborhood values using the Nhood port.\n\nFor further information on structuring elements, type doc strel at the MATLAB command prompt.</entry>

      <!--Opening-->
      <entry key="OpeningDescription">Perform morphological opening on an intensity or binary image.\n\nUse the Neighborhood or structuring element parameter to define the neighborhood or structuring element that the block 
                                      applies to the image.  Specify a neighborhood by entering a matrix or vector of ones and zeros.  Specify a structuring element using the strel function.  Alternatively, you can specify 
                                      neighborhood values using the Nhood port.\n\nFor further information on structuring elements, type doc strel at the MATLAB command prompt.</entry>

      <!--Closing-->
      <entry key="ClosingDescription">Perform morphological closing on an intensity or binary image.\n\nUse the Neighborhood or structuring element parameter to define the neighborhood or structuring element that the block 
                                      applies to the image.  Specify a neighborhood by entering a matrix or vector of ones and zeros.  Specify a structuring element using the strel function.  Alternatively, you can specify 
                                      neighborhood values using the Nhood port.\n\nFor further information on structuring elements, type doc strel at the MATLAB command prompt.</entry>
      <!--Color Space Conversion-->
      <entry key="Conversionobsoleted">Conversion (obsoleted):</entry>
      <entry key="Conversion">Conversion:</entry>
      <entry key="WhitePoint">White point:</entry>
      <entry key="UseConversionSpecifiedBy">Use conversion specified by:</entry>
      <entry key="ScanningStandard">Scanning standard:</entry>
      <entry key="ColorSpaceDescription">Converts color information between color spaces.\n\nAll conversions support double-precision floating-point and single-precision floating-point inputs. The conversions from R'G'B' to intensity, R'G'B' to B'G'R', B'G'R' to R'G'B', B'G'R' to intensity, and R'G'B' and Y'CbCr color spaces also support 8-bit unsigned integer inputs.</entry>      
      <!--Chroma Resampling-->
      <entry key="Resampling">Resampling:</entry>
      <entry key="Interpolation">Interpolation:</entry>
      <entry key="AntialiasingFilter">Antialiasing filter:</entry>
      <entry key="HorizontalFilterCoefficients">Horizontal filter coefficients:</entry>
      <entry key="VerticalFilterCoefficients">Vertical filter coefficients:</entry>
      <entry key="PixelReplication">pixel replication</entry>
      <entry key="Linear">linear</entry>
      <entry key="Default">Default</entry>
      <entry key="None">None</entry>      
      <entry key="ChromaResamplingDescription">Downsample or upsample chroma components of a YCbCr signal to reduce the bandwidth and/or storage requirements.</entry>
      <!--Image Complement-->
      <entry key="ImageComplementDescription">Computes the complement of a binary or intensity image.\n\nFor binary images, the block replaces zeros with ones and ones with zeros.  In the output image, black and white are reversed. For intensity images, the block subtracts each pixel value from the maximum value that can be represented by the input data type and outputs the difference.  In the output image, dark areas become lighter and light areas become darker.</entry>
      <!--Image Data Type Conversion-->
      <entry key="ImageDataTypeConversionDescription">Converts and scales input image to specified output data type.\n\nWhen converting between floating-point data types, the block casts the input into the output data type and clips values outside the range to 0 or 1. When converting between all other data types, the block casts the input into the output data type and scales the data type values into the dynamic range of the output data type. For double- and single-precision floating-point data types, the dynamic range is between 0 and 1. For fixed-point data types, the dynamic range is between the minimum and maximum values that can be represented by the data type.</entry>
      <!--Label-->
      <entry key="IfLabelExceedsDataTypeSize">If label exceeds data type size, mark remaining regions using:</entry>
      <entry key="LabelMatrixAndNumberOfLabels">Label matrix and number of labels</entry>
      <entry key="LabelMatrix">Label matrix</entry>
      <entry key="NumberOfLabels">Number of labels</entry>
      <entry key="Automatic">Automatic</entry>
      <entry key="MaximumValueOfTheOutputDataType">maximum value of the output data type</entry>
      <entry key="Zero">zero</entry>
      <entry key="LabelDescription">Labels and counts connected components in a binary image.\n\nAt the Label port, the block outputs a label matrix where pixels equal to 0 represent the background, pixels equal to 1 represent the first object, pixels equal to 2 represent the second object, and so on.  At the Count port, block outputs a scalar that represents the number of labeled objects.\n\n
                                    Use the Connectivity parameter to define which pixels are connected to each other.</entry>      
      <!--Top Hat-->
      <entry key="Binary">Binary</entry>
      <entry key="TopHatDescription">Perform morphological top-hat filtering on an intensity or binary image.\n\nUse the Neighborhood or structuring element parameter to define the neighborhood or structuring element that the block applies to the image.  Specify a neighborhood by entering a matrix or vector of ones and zeros.  Specify a structuring element using the strel function.  Alternatively, you can specify neighborhood values using the Nhood port.\n\n
                                     For further information on structuring elements, type doc strel at the MATLAB command prompt.</entry>
      <!--Bottom Hat-->
      <entry key="BottomHatDescription">Perform morphological bottom-hat filtering on an intensity or binary image.\n\nUse the Neighborhood or structuring element parameter to define the neighborhood or structuring element that the block applies to the image.  Specify a neighborhood by entering a matrix or vector of ones and zeros.  Specify a structuring element using the strel function.  Alternatively, you can specify neighborhood values using the Nhood port.\n\n
                                     For further information on structuring elements, type doc strel at the MATLAB command prompt.</entry>
      <!--Insert Text-->
      <entry key="Main">Main</entry>
      <entry key="Font">Font</entry>
      <entry key="Text">Text:</entry>
      <entry key="ColorValueSource">Color value source:</entry>
      <entry key="ColorValue">Color value:</entry>
      <entry key="OpacitySource">Opacity source:</entry>
      <entry key="Opacity1">Opacity:</entry>
      <entry key="InputImageIsTransposed">Input image is transposed (data order is row major)</entry>
      <entry key="FontFace">Font face:</entry>
      <entry key="FontSizepoints">Font size (points):</entry>
      <entry key="Antialiased">Anti-aliased</entry>
      <entry key="InputType">Input type:</entry>
      <entry key="IntensitySource">Intensity source:</entry>
      <entry key="Intensity_1">Intensity:</entry>
      <entry key="Dummy2">Dummy2</entry>
      <entry key="Dummy3">Dummy3</entry>
      <entry key="Dummy4">Dummy4</entry>
      <entry key="Dummy1">Dummy1</entry>	
      <entry key="InsertTextDescription">Draws formatted text on an image or video stream.\n\nUse the Text parameter to specify the text string to be drawn on the image or video stream. This parameter can be a single text string or a cell array of strings. If you enter a cell array, use the Select port to indicate which text string to display.\n\n
                                         The Text parameter also accepts ANSI C printf-style format specifications, such as %04d, %4.2f, etc. The block replaces the format specifications in the Text parameter with the elements from the vector input at the Variables port.</entry>
      <!--Histogram Equalization-->
      <entry key="TargetHistogram">Target histogram:</entry>
      <entry key="NumberOfBins">Number of bins:</entry>
      <entry key="HistogramSource">Histogram source:</entry>
      <entry key="Histogram">Histogram:</entry>
      <entry key="Uniform">Uniform</entry>
      <entry key="HistogramEqualizationDescription">Enhance the contrast of input image using histogram equalization.</entry>
      <!--Trace Boundary-->      
      <entry key="InitialSearchDirection">Initial search direction:</entry>
      <entry key="TraceDirection">Trace direction:</entry>
      <entry key="MaximumNumberOfBoundaryPixels">Maximum number of boundary pixels:</entry>
      <entry key="OutputNumberOfBoundaryPixels">Output number of boundary pixels found</entry>
      <entry key="ActionToTakeForEmptyOutputPoints">Action to take for empty output points:</entry>
      <entry key="North">North</entry>
      <entry key="East">East</entry>
      <entry key="South">South</entry>
      <entry key="West">West</entry>
      <entry key="Northeast">Northeast</entry>
      <entry key="Southeast">Southeast</entry>
      <entry key="Southwest">Southwest</entry>
      <entry key="Northwest">Northwest</entry>
      <entry key="Clockwise">Clockwise</entry>
      <entry key="Counterclockwise">Counterclockwise</entry>
      <entry key="FillWithLastPointFound">Fill with last point found</entry>
      <entry key="FillWithUserdefinedValues">Fill with user-defined values</entry>
      <entry key="TraceBoundaryDescription">Traces the boundary of an object in a binary image BW, in which nonzero pixels belong to an object and  0 pixels constitute the background.\n\nStart Pt is a two-element vector specifying the one-based [x y] coordinates of the initial point on the object boundary. Pts is a M-by-2 matrix of one-based [x y] point coordinates, where M is the number of boundary points. M is less than or equal to the Maximum number of boundary pixels specified in the mask.</entry>
      <!--2D FIR Filter-->      
      <entry key="SeparableFilterCoefficients">Separable filter coefficients</entry>
      <entry key="Coefficients1">Coefficients:</entry>
      <entry key="VerticalCoefficientsacrossHeight">Vertical coefficients (across height):</entry>
      <entry key="HorizontalCoefficientsacrossWidth">Horizontal coefficients (across width):</entry>
      <entry key="FilteringBasedOn">Filtering based on:</entry>
      <entry key="Convolution">Convolution</entry>
      <entry key="Correlation">Correlation</entry>
      <entry key="FIRFilterDescription">Performs two-dimensional FIR filtering of input matrix I using filter coefficient matrix H.\n\nYou can use the Filtering based on parameter to specify whether your filtering is based on convolution or correlation. \n\n
                                        Use the Output size parameter to specify the dimensions of the output. Assume that the input at port I has dimensions (Mi, Ni) and the input at port H has dimensions (Mh, Nh). If you choose Full, the output has dimensions (Mi+Mh-1, Ni+Nh-1).  If you choose Same as input port I, the output has the same dimensions as the input at port I. If you choose Valid, the block filters the input image only where the coefficient matrix fits entirely within it, so no padding is required. The output has dimensions (Mi-Mh+1, Ni-Nh+1).</entry>      
      <!--Apply Geometric Transform-->      
      <entry key="LocationAndSizeOfRectangleROI">Location and size of rectangle ROI [x y width height]:</entry>
      <entry key="VerticesOfPolygonROI">Vertices of polygon ROI [x1 y1 x2 y2 ... xL yL]:</entry>
      <entry key="LocationOfTheUpperLeftCorner">Location of the upper left corner [x y]:</entry>
      <entry key="TransformationMatrixSource">Transformation matrix source:</entry>
      <entry key="TransformationMatrix">Transformation matrix:</entry>
      <entry key="UseQuadraticApproximation">For projective transformation, use quadratic approximation to calculate pixel locations</entry>
      <entry key="ErrorToleranceinPixels">Error tolerance (in pixels):</entry>
      <entry key="ProcessPixelsIn">Process pixels in:</entry>
      <entry key="ROISource">ROI source:</entry>
      <entry key="OutputFlagROI">Output flag indicating if any part of ROI is outside input image</entry>
      <entry key="InterpolationMethodPixelValue">Interpolation method for calculating pixel value(s):</entry>
      <entry key="OutputImageSizeAndPosition">Output image size and position:</entry>
      <entry key="MaximumSizeheightWidth">Maximum size [height width]:</entry>
      <entry key="SizeheightWidth">Size [height width]:</entry>
      <entry key="OutputFlagTransformedPixels">Output flag indicating if any transformed pixels were clipped</entry>
      <entry key="WholeInputImage">Whole input image</entry>
      <entry key="RectangleROI">Rectangle ROI</entry>
      <entry key="SpecifiedValue">Specified value</entry>
      <entry key="DesiredConfidence">Desired confidence</entry>
      <entry key="RANSAC">Random Sample Consensus (RANSAC)</entry>
      <entry key="LMS">Least Median of Squares</entry>
      <entry key="NonreflectiveSimilarity">Nonreflective similarity</entry>
      <entry key="Affine">Affine</entry>
      <entry key="Projective">Projective</entry>
      <entry key="EstimateGeoTransfotrmDescription">Find the transformation matrix that maps the largest number of points from Pts1 to Pts2.\n\nThe Pts1 and Pts2 inputs specify the location of points in two images. Each row in the Pts1 and Pts2 arrays has the format [x y]. The points in the arrays must be ordered to form corresponding location pairs.
                                                    When the Find and exclude outliers option is selected, the block randomly selects matching point pairs until it computes a transformation matrix that fits a specified number of inliers, or until a user-specified stopping criterion is reached. It then refines this transformation matrix by using all inliers found in the first step.</entry>                                        
      <!--Frame Rate Display-->    
      <entry key="CalculateAndDisplayRate">Calculate and display rate every:</entry>
      <entry key="UpdateRate">Update rate:</entry>
      <entry key="FrameRateDisplayDescription">Calculate and display the frame rate of the input signal.\n\nUse the Calculate and display rate every parameter to control how often the block updates the display. 
                                               When this parameter is greater than 1, the block displays the average frame rate for the specified number of frames.</entry> 
      <!--To Video Display-->
      <entry key="WindowSize">Window size:</entry>
      <entry key="OpenAtStartOfSimulation">Open at Start of Simulation</entry>
      <entry key="FullscreenEscToExit">Full-screen (Esc to exit)</entry>
      <entry key="WindowX" translate="false">windowX</entry>
      <entry key="WindowY" translate="false">windowY</entry>
      <entry key="RememberVideoWindowSize">Remember video window size</entry>
      <entry key="WindowWidth" translate="false">windowWidth</entry>
      <entry key="WindowHeight" translate="false">windowHeight</entry>
      <entry key="InputColorFormat">Input Color Format</entry>
      <entry key="VideoOutputDevice">Video output device:</entry>
      <entry key="DataOrganization">Data organization:</entry>
      <entry key="IsWindowOpen">Is window open</entry>
      <entry key="Normal">Normal</entry>
      <entry key="TrueSize11">True size (1:1)</entry>
      <entry key="OnscreenVideoMonitor">On-screen video monitor</entry>
      <entry key="Columnmajor">Column-major</entry>
      <entry key="Rowmajor">Row-major</entry>
      <entry key="View">View</entry>
      <entry key="Settings">Settings</entry>
      <entry key="ToVideoDisplayDescription">This block provides a lightweight, high performance display, which accepts RGB and YCbCr formatted videos. It also generates code.</entry> 
      <!--Video To WS-->
      <entry key="VariableName">Variable name:</entry>
      <entry key="NumberOfInputs">Number of inputs:</entry>
      <entry key="LimitDataPointsToLast">Limit data points to last:</entry>
      <entry key="Decimation">Decimation:</entry>
      <entry key="InputPortLabels">Input port labels:</entry>
      <entry key="LogFixedpointDataAsAFiObject">Log fixed-point data as a fi object</entry>
      <entry key="VideoToWorkspaceDescription">Writes the input to a specified array in the MATLAB workspace. The array is not available until the simulation stops.\n\nIf the video signal is represented by intensity 
                                               values, it appears in the workspace as a three-dimensional M-by-N-by-T array, where M and N are the number of rows and columns in a single video frame, and T is the number of frames in the video signal. If it is a color video signal, it appears in the workspace as a four-dimensional M-by-N-by-C-by-T array, where M and N are the number of rows and columns in a single video frame, C is the number of inputs to the block, and T is the number of frames in the video stream.</entry>           
      <!--Write Binary File-->
      <entry key="Component1">Component 1:</entry>
      <entry key="Component2">Component 2:</entry>
      <entry key="Component3">Component 3:</entry>
      <entry key="Component4">Component 4:</entry>
      <entry key="FourCharacterCode">Four character code:</entry>
      <entry key="FileName">File name:</entry>
      <entry key="VideoFormat">Video format:</entry>
      <entry key="BitStreamFormat">Bit stream format:</entry>
      <entry key="NumberOfInputComponents">Number of input components:</entry>
      <entry key="InheritSizeOfComponentsFromInput">Inherit size of components from input data type</entry>
      <entry key="Bits">Bits:</entry>
      <entry key="ComponentOrderInBinaryFile">Component order in binary file:</entry>
      <entry key="InterlacedVideo">Interlaced video</entry>
      <entry key="LineOrdering">Line ordering:</entry>
      <entry key="WriteSignedDataToOutputFile">Write signed data to output file</entry>
      <entry key="ByteOrderInBinaryFile">Byte order in binary file:</entry>
      <entry key="SaveAs">Save As...</entry>
      <entry key="FourCCpane" translate="false">FourCCpane</entry>
      <entry key="Components">Components</entry>
      <entry key="FourCharacterCodes">Four character codes</entry>
      <entry key="TopLineFirst">Top line first</entry>
      <entry key="Packed">Packed</entry>
      <entry key="LittleEndian">Little endian</entry>
      <entry key="Custom">Custom</entry>
      <entry key="BottomLineFirst">Bottom line first</entry>
      <entry key="Planar">Planar</entry>
      <entry key="BigEndian">Big endian</entry>
      <entry key="VideoFileFormatLabel">Video file format label:</entry>
      <entry key="ComponentOrderInBitStreamEgYCbCr">Component order in bit stream, e.g. Y' | Cb | Cr:</entry>
      <entry key="InheritComponentSizeFromInput">Inherit component size from input data type:</entry>
      <entry key="Component1_1">Component1:</entry>
      <entry key="Component2_1">Component2:</entry>
      <entry key="Component3_1">Component3:</entry>
      <entry key="Component4_1">Component4:</entry>
      <entry key="Bits1">Bits1:</entry>
      <entry key="Bits2">Bits2:</entry>
      <entry key="Bits3">Bits3:</entry>
      <entry key="Bits4">Bits4:</entry>
      <entry key="WriteSignedDataToOutputFile_1">Write signed data to output file:</entry>
      <entry key="EndiannessOfFile">Endianness of file:</entry>
      <entry key="WriteBinaryFileDescription">Write binary video data into file in the specified format.</entry>
      <!--Video From Workspace-->
      <entry key="Signal">Signal:</entry>
      <entry key="SampleTime">Sample time:</entry>
      <entry key="FormOutputAfterFinalValue">Form output after final value by (obsoleted):</entry>
      <entry key="FormOutputAfterFinalValueBy">Form output after final value by:</entry>
      <entry key="OutputPortLabels">Output port labels:</entry>
      <entry key="SettingToZero">Setting to zero</entry>
      <entry key="HoldingFinalValue">Holding final value</entry>
      <entry key="CyclicRepetition">Cyclic repetition</entry>
      <entry key="VideoFromWorkspaceDescription">Outputs video frames from the MATLAB workspace at successive sample times.\n\nIf the video signal is a M-by-N-by-T workspace array, the block outputs an intensity video signal, where M and N are the number of rows and columns in a single video frame, and T is the number of frames in the video signal.
                                                 If the video signal is a M-by-N-by-C-by-T workspace array, the block outputs a color video signal, where M and N are the number of rows and columns in a single video frame, C is the number of outputs from the block, and T is the number of frames in the video stream.</entry>
      <!--Image From Workspace-->
      <entry key="Value">Value:</entry>
      <entry key="Signed">Signed</entry>
      <entry key="WordLength">Word length:</entry>
      <entry key="SetFractionLengthInOutputTo">Set fraction length in output to:</entry>
      <entry key="FractionLength">Fraction length:</entry>
      <entry key="Fixedpoint">Fixed-point</entry>
      <entry key="InheritViaBackPropagation">Inherit via back propagation</entry>
      <entry key="BestPrecision">Best precision</entry>
      <entry key="InheritFromValue">Inherit from 'Value'</entry>      
      <entry key="UserdefinedDataType">User-defined data type (e.g. sfix(16), uint(8), float('single')):</entry>
      <entry key="ImageFromWorkspaceDescription">Imports an image from the MATLAB workspace.\n\nUse the Value parameter to specify the MATLAB workspace variable that contains or an expression that specifies the image you want to import into your model. Use the Sample time parameter to set the sample period of the block.</entry>
      <!--Image From File-->
      <entry key="DataTypes">Data Types</entry>
      <entry key="UserdefinedDataType1">User-defined data type (e.g. sfix(16), uint(8), float(''single'')):</entry>
      <entry key="Browse">Browse...</entry>
      <entry key="InheritFromInputImage">Inherit from input image</entry>
      <entry key="FileName_MP">File name:</entry>
      <entry key="ImageFromFileDescription">Reads an image from a file.\n\nUse the File name parameter to specify the image file you want to import into your model. Use the Sample time parameter to set the sample period of the block.</entry>            
      <!--Read Binary File-->      
      <entry key="FrameSizeRows">Frame size    Rows:</entry>
      <entry key="Cols">Cols:</entry>
      <entry key="NumberOfOutputComponents">Number of output components:</entry>
      <entry key="Rows">Rows:</entry>
      <entry key="InputFileHasSignedData">Input file has signed data</entry>
      <entry key="Loop">Loop</entry>
      <entry key="NumberOfTimesToPlayFile">Number of times to play file:</entry>
      <entry key="OutputEndoffileIndicator">Output end-of-file indicator</entry>
      <entry key="FrameSize">Frame Size</entry>
      <entry key="Rows1">Rows1:</entry>
      <entry key="Rows2">Rows2:</entry>
      <entry key="Rows3">Rows3:</entry>
      <entry key="Rows4">Rows4:</entry>
      <entry key="Cols1">Cols1:</entry>
      <entry key="Cols2">Cols2:</entry>
      <entry key="Cols3">Cols3:</entry>
      <entry key="Cols4">Cols4:</entry>
      <entry key="SizeOfYCompoenetRows">Size of Y' component Rows:</entry>
      <entry key="SizeOfYComponentCols">Size of Y' component Cols:</entry>
      <entry key="InputFileHasSignedData_1">Input file has signed data:</entry>
      <entry key="OutputEndoffileIndicator_1">Output end-of-file indicator:</entry>
      <entry key="ReadBinaryFileDescription">Read binary video data from file in the specified format.</entry>      
      <!--2-D Correlation-->
      <entry key="CorrelationDescription">Performs two-dimensional cross-correlation between two inputs.\n\nUse the Output size parameter to specify the dimensions of the output. Assume that the input at port I1 has dimensions (Ma, Na) and the input at port I2 has dimensions (Mb, Nb). If you choose Full, the output is the full two-dimensional cross-correlation with dimensions (Ma+Mb-1, Na+Nb-1). If you choose Same as input port I1, the output is the central part of the cross-correlation with the same dimensions as the input at port I1. If you choose Valid, the output is only those parts of the cross-correlation that are computed without the zero-padded edges of any input. This output has dimensions (Ma-Mb+1, Na-Nb+1).\n\nYou can normalize the output only when the input is floating point.</entry>            
      <!--2-D Histogram-->      
      <entry key="LowerLimitOfHistogram">Lower limit of histogram:</entry>
      <entry key="UpperLimitOfHistogram">Upper limit of histogram:</entry>
      <entry key="Normalized">Normalized</entry>
      <entry key="RunningHistogram">Running histogram</entry>
      <entry key="ResetPort">Reset port</entry>
      <entry key="TriggerType">Trigger type:</entry>
      <entry key="FindTheHistogramOver">Find the histogram over</entry>
      <entry key="Dimension">Dimension</entry>
      <entry key="ColumnCompatibility">Column compatibility</entry>
      <entry key="ShowAdditionalParameters">--------------- Show additional parameters ---------------</entry>
      <entry key="AllowOverridesFromDSPAttributes">Allow overrides from DSP Attributes blocks</entry>
      <entry key="RisingEdge">Rising edge</entry>
      <entry key="FallingEdge">Falling edge</entry>
      <entry key="EitherEdge">Either edge</entry>
      <entry key="NonzeroSample">Non-zero sample</entry>
      <entry key="EntireInput">Entire input</entry>
      <entry key="EachColumn">Each column</entry>
      <entry key="InheritedWillBeRemoved">Inherited (this choice will be removed - see release notes)</entry>
      <entry key="HistogramDescription">Generate a histogram of the elements in the specified dimension of the input or across time (running histogram).</entry>
      <entry key="InAdditionFixptAttriApplyWhenBlkInputsAreComplex">In addition, fixed-point data type attributes only apply when the block inputs are complex fixed-point signals.</entry>
      <!--2-D Maximum-->   
      <entry key="Mode" note="Here, mode is a choice of what the block will compute. It affects the type of output produced by the block.">Mode:</entry>
      <entry key="ResetPortPrompt">Reset port:</entry>
      <entry key="InputProcessing">Input processing:</entry>
      <entry key="IndexBase">Index Base</entry>
      <entry key="OperateOver">Operate over</entry>
      <entry key="OperationPrompt" note="Here operation is an action. The user specifies the operation needed to be done by the block.">Operation</entry>
      <entry key="ROIType">ROI type:</entry>
      <entry key="ROIPortionToProcess">ROI portion to process:</entry>
      <entry key="OutputFlagROIOutOfBounds">Output flag indicating if ROI is completely out of image bounds</entry>
      <entry key="ValueAndIndex">Value and Index</entry>
      <entry key="ValueOption">Value</entry>
      <entry key="Index">Index</entry>
      <entry key="Running">Running</entry>
      <entry key="ColumnsAsChannels">Columns as channels (frame based)</entry>
      <entry key="ElementsAsChannels">Elements as channels (sample based)</entry>
      <entry key="ZeroValue">Zero</entry>
      <entry key="One">One</entry>
      <entry key="EachRow">Each row</entry>
      <entry key="SpecifiedDimension">Specified dimension</entry>
      <entry key="Maximum">maximum</entry>
      <entry key="EntireROI">Entire ROI</entry>
      <entry key="ROIPerimeter">ROI perimeter</entry>
      <entry key="IndividualStatisticsForEachROI">Individual statistics for each ROI</entry>
      <entry key="SingleStatisticForAllROIs">Single statistic for all ROIs</entry>
      <entry key="FindTheMaximumValueOver">Find the maximum value over</entry>
      <entry key="MaximumBlockDescription">Compute the maximum value along the specified dimension of the input or across time (running maximum).</entry>
      <!--2-D Minimum-->   
      <entry key="MinimumBlockDescription">Compute the minimum value along the specified dimension of the input or across time (running minimum).</entry>
      <entry key="IndexBase_MP">Index base</entry>
      <entry key="OutputFlagIndicatingIfInputLabelNumAreValid">Output flag indicating if input label numbers are valid</entry>
      <entry key="FindTheMinimumValueOver">Find the minimum value over:</entry>
      <entry key="WhenTheBlockInputIsFloatingPoint">When the block input is floating point, all block data types match the input.</entry>
      <entry key="UserDefined">User-defined</entry>
      <!--2-D Mean-->         
      <entry key="RunningMean">Running mean</entry>
      <entry key="FindTheMeanValueOver">Find the mean value over:</entry>
      <entry key="TreatSamplebasedRowInputAsAColumn">Treat sample-based row input as a column</entry>
      <entry key="MeanBlockDescription">Compute the mean value along the specified dimension of the input or across time (running mean).</entry>
      <!--2-D Median-->               
      <entry key="SortAlgorithm">Sort algorithm:</entry>
      <entry key="FindTheMedianValueOver">Find the median value over:</entry>
      <entry key="QuickSort">Quick sort</entry>
      <entry key="InsertionSort">Insertion sort</entry>
      <entry key="MedianBlockDescription">Compute the median value along the specified dimension of the input or across time (running median).\n\nThe 'Product output' and 'Accumulator' parameters apply only for complex fixed-point inputs.</entry>      
      <!--2-D Standard Deviation-->                     
      <entry key="RunningStandardDeviation">Running standard deviation</entry>
      <entry key="FindTheStandardDeviationValue">Find the standard deviation value over:</entry>
      <entry key="SDBlockDescription">Compute the standard deviation along the specified dimension of the input or across time (running standard deviation).</entry>
      <!--2-D Variance-->                     
      <entry key="RunningVariance">Running variance</entry>
      <entry key="InputSumSquaredProduct">Input-sum-squared product</entry>
      <entry key="InputSquaredProduct">Input-squared product</entry>
      <entry key="SameAsInputSquaredProduct">Same as input-squared product</entry>
      <entry key="FindTheVarianceValueOver">Find the variance value over:</entry>
      <entry key="VarianceBlockDescription">Compute the variance along the specified dimension of the input or across time (running variance).</entry>
      <!--PSNR-->
      <entry key="PSNRBlockDescription">Computes the peak signal-to-noise ratio (PSNR), in decibels, between two images.</entry>
      <!--Find Local Maxima-->      
      <entry key="MaximumNumberOfLocalMaxima">Maximum number of local maxima:</entry>
      <entry key="MaximumNumberOfLocalMaxima_MP">Maximum number of local maxima (N):</entry>
      <entry key="SourceOfThresholdValue">Source of threshold value:</entry>
      <entry key="InputIsHoughMatrix">Input is Hough matrix spanning full theta range</entry>
      <entry key="IndexOutputDataType">Index output data type:</entry>
      <entry key="CountOutputDataType">Count output data type:</entry>
      <entry key="FindLocalMaximaDescription">Finds local maxima in an input matrix. \n\nThe size of the search region can be specified using the Neighborhood size parameter. Idx output port has the dimension M-by-2, where M is the maximum number of local maxima. This output port holds one-based [x y] coordinates of the local maxima. Threshold value is applied on the input matrix to find the valid local maxima\n\n      
                                              If the input is a Hough matrix generated from a Hough Transform block, the Input is Hough matrix spanning full theta range check box should be selected. In this case the block considers that the input Hough matrix is antisymmetric about the rho axis and theta spans from -pi/2 to pi/2 radians. If a local maximum is found near a boundary such that the neighboring window lies outside the Hough matrix, the block picks up only one peak and ignores the corresponding antisymmetric peak.</entry>      
      <!--Image Pad-->      
      <entry key="AddColumnsTo">Add columns to:</entry>
      <entry key="OutputRowMode">Output row mode:</entry>
      <entry key="NumberOfAddedColumns">Number of added columns:</entry>
      <entry key="AddRowsTo">Add rows to:</entry>
      <entry key="OutputColumnMode">Output column mode:</entry>
      <entry key="NumberOfAddedRows">Number of added rows:</entry>
      <entry key="ActionWhenTruncationOccurs">Action when truncation occurs:</entry>
      <entry key="PadSize">Pad size</entry>
      <entry key="OutputSizeValue">Output size</entry>
      <entry key="Left">Left</entry>
      <entry key="Right">Right</entry>
      <entry key="BothLeftAndRight">Both left and right</entry>
      <entry key="NoPadding">No padding</entry>
      <entry key="Userspecified">User-specified</entry>
      <entry key="NextPowerOfTwo">Next power of two</entry>
      <entry key="Top">Top</entry>
      <entry key="Bottom">Bottom</entry>
      <entry key="BothTopAndBottom">Both top and bottom</entry>
      <entry key="Warning">Warning</entry>
      <entry key="ImagePadDescription">Pad a two-dimensional image.\n\nPad your image by adding rows, columns, or rows and columns.  You can pad your image by using a constant value (Constant), repeating its border values (Replicate), using its mirror image (Symmetric), or using circular repetition of its elements (Circular).</entry>
      <!--Block Processing-->            
      <entry key="AddPortToSupplySubsystemParam">Add port to supply subsystem parameters</entry>
      <entry key="NumberOfOutputs">Number of outputs:</entry>
      <entry key="BlockSize">Block size:</entry>
      <entry key="OverlapSize">Overlap size:</entry>
      <entry key="OrderOfTraversing">Order of traversing:</entry>
      <entry key="Rowwise">Row-wise</entry>
      <entry key="Columnwise">Column-wise</entry>
      <entry key="ClickTheOpenSubsystemButton">Click the Open Subsystem button to open the block''s subsystem. Click-and-drag blocks into this subsystem to define the processing operation(s) the block performs on submatrices.</entry>
      <entry key="Overlap">Overlap:</entry>
      <entry key="TraverseOrder">Traverse order:</entry>
      <entry key="OpenSubsystem">Open Subsystem</entry>
      <entry key="Subsystem">Subsystem</entry>
      <entry key="BlockProcessingDescription">Repeats a user-specified operation on submatrices of the input matrix.\n\nThis block extracts submatrices of a user-specified size from the input matrix. It sends each submatrix to a subsystem for processing, and then reassembles each subsystem output into the output matrix.\n\n Use the Block size and Overlap parameters to specify the size and overlap of each submatrix in cell array format.</entry>      
      <!--DCT-->      
      <entry key="SineAndCosineComputation">Sine and cosine computation:</entry>
      <entry key="Dimensions">Dimensions:</entry>
      <entry key="OptimizeTwiddleTableFor">Optimize twiddle table for:</entry>
      <entry key="OutputInBitreversedOrder">Output in bit-reversed order</entry>
      <entry key="SkipDividebytwoOnButterflyOutput">Skip divide-by-two on butterfly outputs for fixed-point signals</entry>
      <entry key="FixedpointSineTableAttributes">Fixed-point sine table attributes:</entry>
      <entry key="SineTableWordLength">Sine table word length:</entry>
      <entry key="SineTableFractionLength">Sine table fraction length:</entry>
      <entry key="SineTableDataTypeString">Sine table data type string:</entry>
      <entry key="LastSineTableDataTypeString">Last sine table data type string:</entry>
      <entry key="FixedpointOutputAttributes">Fixed-point output attributes:</entry>
      <entry key="OutputWordLength">Output word length:</entry>
      <entry key="OutputFractionLength">Output fraction length:</entry>
      <entry key="OutputDataTypeString">Output data type string:</entry>
      <entry key="LastOutputDataTypeString">Last output data type string:</entry>
      <entry key="OutputMinimum">Output minimum:</entry>
      <entry key="OutputMaximum">Output maximum:</entry>
      <entry key="FixedpointAccumulatorAttributes">Fixed-point accumulator attributes:</entry>
      <entry key="FixedpointAccumulatorAttributes_MP">Fixed-point accumulator attributes</entry>
      <entry key="AccumulatorWordLength">Accumulator word length:</entry>
      <entry key="AccumulatorFractionLength">Accumulator fraction length:</entry>
      <entry key="AccumDataTypeString">Accum data type string:</entry>
      <entry key="LastAccumDataTypeString">Last accum data type string:</entry>
      <entry key="FixedpointProductOutputAttribute">Fixed-point product output attributes:</entry>
      <entry key="ProductOutputWordLength">Product output word length:</entry>
      <entry key="ProductOutputFractionLength">Product output fraction length:</entry>
      <entry key="ProdOutputDataTypeString">ProdOutput data type string:</entry>
      <entry key="LastProdOutputDataTypeString">Last prodOutput data type string:</entry>
      <entry key="RoundIntegerCalculationsToward">Round integer calculations toward:</entry>
      <entry key="SaturateOnIntegerOverflow">Saturate on integer overflow</entry>
      <entry key="LockScaling">Lock scaling:</entry>
      <entry key="TrigonometricFcn">Trigonometric fcn</entry>
      <entry key="Speed">Speed</entry>
      <entry key="SameWordLengthAsInput">Same word length as input</entry>
      <entry key="DCTDescription">Outputs the two-dimensional discrete cosine transform (2-D DCT) of a real input signal. The number of rows and columns of the input matrix must be a power of 2.      </entry>
      <entry key="WhenTheBlockInputIsFixedPoint">When the block input is fixed point, all internal data types are signed fixed input.</entry>
      <!--IDCT-->            
      <entry key="IDCTDescription">Outputs the two-dimensional inverse discrete cosine transform (2-D IDCT) of a real input signal. The number of rows and columns of the input matrix must be a power of 2.\n\n</entry>
      <!--2D FFT-->
      <entry key="OptimizeTwiddleTableObosleted">Optimize twiddle table for(obsoleted):</entry>
      <entry key="FFTImplementation">FFT implementation:</entry>
      <entry key="ScaleResultByFFTLength">Scale result by FFT length</entry>
      <entry key="BlockDoesNotSupportFixedpoint">This block does not support fixed-point data types when "FFTW" is selected for the "FFT implementation" parameter on the Main pane.</entry>
      <entry key="Auto">Auto</entry>
      <entry key="Radix2" translate="false">Radix-2</entry>
      <entry key="FFTW" translate="false">FFTW</entry>      
      <entry key="FFTDescription">Outputs the complex fast Fourier transform in two dimensions (2-D FFT) of a real or complex input.\n\nWhen the 'FFT implementation' parameter is set to 'Radix-2', the number of rows and columns of the input matrix must be a power of 2.</entry>
      <entry key="DataTypeAssistant">DataType                                 Assistant</entry>   
      <entry key="Minimum">minimum</entry>
      <entry key="InAdditionToFixptTrump">In addition, for fixed-point sine table values, the fraction length is always equal to the word length minus one.</entry>
      <!--2D IFFT-->                        
      <entry key="InputIsInBitreversedOrder">Input is in bit-reversed order</entry>
      <entry key="InputIsConjugateSymmetric">Input is conjugate symmetric</entry>
      <entry key="SkipScaling">Skip scaling</entry>
      <entry key="DivideOutputByProductOfFFTLength">Divide output by product of FFT length in each input dimension</entry>      
      <entry key="IFFTDescription">Outputs the inverse fast Fourier transform in two dimensions (2-D IFFT) of a real or complex input. Outputs are real if you select 'Input is conjugate symmetric' option; otherwise, outputs are complex.\n\n      When the 'FFT implementation' parameter is set to 'Radix-2', the number of rows and columns of the input matrix must be a power of 2.</entry>
      <!--FromMultiMediaFile-->
      <entry key="FromMultiMediaFileDescription">Reads multimedia files containing audio, video, or audio and video data.\n\nFor Windows platforms, this block reads compressed or uncompressed multimedia files.\n\nFor non- Windows platforms, this block reads uncompressed video and audio AVI files, and video only, compressed or uncompressed files.</entry>      
      <!--ToMultiMediaFile-->      
      <entry key="ToMultiMediaFileDescription">Writes video frames and/or audio samples to a multimedia file. On Windows, audio and video compressors are also available to compress audio and/or video streams in the output file. If the specified output file exists, it will be overwritten.</entry>      
      <!--EstimateGeometricTransformation-->
      <entry key="TransformationType">Transformation type:</entry>
      <entry key="FindAndExcludeOutliers">Find and exclude outliers</entry>
      <entry key="DetermineNumberOfRandomSampling">Determine number of random samplings using:</entry>
      <entry key="AlgebraicDistanceThreshold">Algebraic distance threshold for determining inliers:</entry>
      <entry key="DistanceThresholdForDetermining">Distance threshold for determining inliers (in pixels):</entry>
      <entry key="NumberOfRandomSamplings">Number of random samplings:</entry>
      <entry key="MaximumNumberOfRandomSamplings">Maximum number of random samplings:</entry>
      <entry key="DesiredConfidencePerc">Desired confidence (in percentage):</entry>
      <entry key="StopSamplingEarlier">Stop sampling earlier when a specified percentage of point pairs are determined to be inliers</entry>
      <entry key="InlierPercentage">Inlier percentage:</entry>
      <entry key="PerformAdditionalIterative">Perform additional iterative refinement of the transformation matrix</entry>
      <entry key="WhenPts1AndPts2AreBuiltin">When Pts1 and Pts2 are built-in integers, set transformation matrix data type to:</entry>
      <entry key="OutputBooleanSignalIndicating">Output Boolean signal indicating which point pairs are inliers</entry>
      <entry key="AllowVariablesizeSignalInput">Allow variable-size signal input</entry>
      <entry key="Outputs">Outputs</entry> 
      <!--Delta-->
      <entry key="MatchMetric1">Match Metric:</entry>
      <entry key="SizeNOfSquareMatrix">Size (N) of square matrix:</entry>
      <entry key="OutputFractionalLength">Output fractional length:</entry>
      <entry key="FixedpointProductAttributes">Fixed-point product attributes</entry>
      <entry key="ProductWordLength">Product word length:</entry>
      <entry key="ProductFractionLength">Product fraction length:</entry>
      <entry key="RoundIntegerCalculationsTowards">Round integer calculations towards:</entry>
      <entry key="LockScaling1">Lock scaling</entry>
      <entry key="ThresholdScaleFactor_1">Threshold scale factor:</entry>
      <entry key="ThresholdLowHigh">Threshold, [Low High]:</entry>
      <entry key="PercentOfPixelsNotEdges">Percent of pixels not edges</entry>
      <entry key="Sigma">Sigma</entry>
      <entry key="N" translate="false">N:</entry>
      <entry key="OverlapSizerC">Overlap size [r c]:</entry>
      <entry key="Product1Attributes">Product 1 attributes:</entry>
      <entry key="Product1WordLength">Product 1 word length:</entry>
      <entry key="Product1FractionLength">Product 1 fraction length:</entry>
      <entry key="Product2Attributes">Product 2 attributes:</entry>
      <entry key="Product2WordLength">Product 2 word length:</entry>
      <entry key="Product2FractionLength">Product 2 fraction length:</entry>
      <entry key="GradientMethod">Gradient method:</entry>
      <entry key="NumberOfInputFramesToBuffer">Number of input frames to buffer:</entry>
      <entry key="EigenThresholdAttributes">Eigen threshold attributes:</entry>
      <entry key="EigenThresholdWordLength">Eigen threshold word length:</entry>
      <entry key="EigenThresholdFractionLength">Eigen threshold fraction length:</entry>
      <entry key="ProductOutputAttributes">Product output attributes:</entry>
      <entry key="AccumulatorAttributes">Accumulator attributes:</entry>
      <entry key="GradientAttributes">Gradient attributes:</entry>
      <entry key="GradientWordLength">Gradient word length:</entry>
      <entry key="GradientFractionLength">Gradient fraction length:</entry>
      <entry key="OutputAttributes">Output attributes:</entry>
      <entry key="MemoryAttributes">Memory attributes:</entry>
      <entry key="MemoryWordLength">Memory word length:</entry>
      <entry key="MemoryFractionLength">Memory fraction length:</entry>
      <entry key="FirstCoefficientAttributes">First coefficient attributes:</entry>
      <entry key="FirstCoefficientWordLength">First coefficient word length:</entry>
      <entry key="FirstCoefficientFractionLength">First coefficient fraction length:</entry>
      <entry key="FixedpointCoefficientAttributes">Fixed-point coefficient attributes:</entry>
      <entry key="CoefficientWordLength">Coefficient word length:</entry>
      <entry key="CoefficientFractionLength">Coefficient fraction length:</entry>
      <entry key="CoefficientSignedness">Coefficient signedness</entry>
      <entry key="CoefficientsDataTypeString">Coefficients data type string:</entry>
      <entry key="LastCoefficientsDataTypeString">Last coefficients data type string:</entry>
      <entry key="CoefficientsMinimum">Coefficients minimum:</entry>
      <entry key="CoefficientsMaximum">Coefficients maximum:</entry>
      <entry key="OutputSignedness">Output signedness:</entry>
      <entry key="ParameterSetToTrue">This parameter should be set to true unless for testing</entry>
      <entry key="FixedpointInputsquaredProduct">Fixed-point input-squared product output attributes:</entry>
      <entry key="InputsquaredProductWordLength">Input-squared product word length:</entry>
      <entry key="InputsquaredProductFractionLength">Input-squared product fraction length:</entry>
      <entry key="FixedpoingInputsumsquaredProduct">Fixed-poing input-sum-squared product attributes:</entry>
      <entry key="InputsumsquaredProductWordLength">Input-sum-squared product word length:</entry>
      <entry key="InputsumsquaredProductFractionLen">Input-sum-squared product fraction length:</entry>
      <entry key="OutputActualNumberOfBlobs">Output actual number of blobs</entry>
      <entry key="MinArea" translate="false">minArea</entry>
      <entry key="MaxArea" translate="false">maxArea</entry>
      <entry key="TreatOutputAsVariableDimensiona">Treat output as variable dimensional</entry>
      <entry key="FillEmptySpacesInOutput">Fill empty spaces in output</entry>
      <entry key="FixedpointCentroidAttributes">Fixed-point centroid attributes:</entry>
      <entry key="CentroidWordLength">Centroid word length:</entry>
      <entry key="CentroidFractionLength">Centroid fraction length:</entry>
      <entry key="FixedpointDiamAttributes">Fixed-point diam attributes:</entry>
      <entry key="DiamWordLength">Diam word length:</entry>
      <entry key="DiamFractionLength">Diam fraction length:</entry>
      <entry key="FixedpointExtentAttributes">Fixed-point extent attributes:</entry>
      <entry key="ExtentWordLength">Extent word length:</entry>
      <entry key="ExtentFractionLength">Extent fraction length:</entry>
      <entry key="FixedpointPerimeterAttributes">Fixed-point perimeter attributes:</entry>
      <entry key="PerimeterWordLength">Perimeter word length:</entry>
      <entry key="PerimeterFractionLength">Perimeter fraction length:</entry>
      <entry key="OutputDataTypeMode">Output data type mode:</entry>
      <entry key="SineValueAttributes">Sine value attributes:</entry>
      <entry key="SineValue">Sine value </entry>
      <entry key="RhoValuesAttributes">Rho values attributes:</entry>
      <entry key="RhoValuesWordLength">Rho values word length:</entry>
      <entry key="RhoValuesFractionLength">Rho values fraction length:</entry>
      <entry key="OutputHAttributes">Output (H) attributes:</entry>
      <entry key="OutputHWordLength">Output (H) word length:</entry>
      <entry key="OutputHFractionLength">Output (H) fraction length:</entry>
      <entry key="ThetaOutputAttributes">Theta output attributes:</entry>
      <entry key="ThetaValuesWordLength">Theta values word length:</entry>
      <entry key="ThetaValuesFractionLength">Theta values fraction length:</entry>
      <!--FixptDataTypeMessages-->
      <entry key="BinaryPointScaling">Binary point scaling</entry>
      <entry key="SlopeAndBiasScaling">Slope and bias scaling</entry>
      <entry key="FixptOpParams">Fixed-point operational parameters</entry>
      <entry key="RoundingMode">Rounding mode:</entry>
      <entry key="FixptDataTypes">Fixed-point data types</entry>
      <entry key="SpecifyWordLength">Specify word length</entry>
      <entry key="SameAsInput">Same as input</entry>
   </message>
</rsccat>
