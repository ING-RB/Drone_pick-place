<?xml version="1.0" encoding="utf-8"?>
<!--Copyright 2017-2024 The MathWorks, Inc. -->
<rsccat locale="en_US" product="coderWeb" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../../schema/msgcat.xsd">
   <message>
       <entry key="sourceGroupName">Generated HDL Files</entry>
       <entry key="conformanceReportTitle">Conformance Report</entry>
       <entry key="resourceReportTitle">Resource Report</entry>
       <entry key="complianceReportTitle">Industry Compliance Report</entry>
       <entry key="HDLConstraintIssuesTitle">Potential Issues while using coder.hdl pragmas</entry>
       <entry key="HDLConstraintIssuesDesc">Some coder.hdl pragmas may result in warnings/errors due to various incompatibilities.</entry>
       <entry key="PipeLoopRWHazards">Presence of conflicting read/write operations inside pipelined loops may result in an error during Synthesis. To overcome the issue, use coder.hdl.arraydistance pragma at the start of the pipelined loop body.</entry>
       <entry key="hdlLoopConstructsTitle">Inefficient loop constructs</entry>
       <entry key="hdlLoopConstructsDesc">Certain loop constructs may result in inefficient hardware resources during synthesis.</entry>
       <entry key="InefficientUnboundedLoops">Presence of unbounded loops in the MATLAB design may result in inefficient resource usage during synthesis.</entry>
       <entry key="InefficientUnstructuredRegions">Presence of break, continue or return statements in the MATLAB design may result in inefficient resource usage during synthesis.</entry>
   </message>
</rsccat>
<!-- LocalWords:  pragmas arraydistance
-->
