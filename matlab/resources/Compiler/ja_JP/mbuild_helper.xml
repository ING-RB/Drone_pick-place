<?xml version="1.0" encoding="UTF-8"?>
<!--Copyright 2024 The MathWorks, Inc.-->

<rsccat xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.0" locale="ja_JP" product="Compiler" xsi:noNamespaceSchemaLocation="../../resources/schema/msgcat.xsd">
  <message>
    <entry key="genericFailure">正常に終了できません。\n{0}</entry>
    <entry key="responseFileError">応答ファイル {0} の読み取り中のエラー</entry>
    <entry key="OutputSwitchMisuse">-output スイッチの後は、ファイル名を指定しなければなりません。</entry>
    <entry key="OutdirSwitchMisuse">-outdir スイッチの後は、ディレクトリ名を指定しなければなりません。</entry>
    <entry key="RspFilePermissionOpen">書き込み対象のファイル "{0}" を開けません: {1}.</entry>
    <entry key="RspFilePermissionWrite">ファイル "{0}" に書き込めません: {1}.</entry>
    <entry key="unableToDisplayHelp">関数 MBUILD のヘルプを表示できません。</entry>
    <entry key="mbuildHelp">MBUILD\tソース ファイルをコンパイルし、MATLAB が生成した共有ライブラリとリンクします\n\n 使用法:\n \tmbuild [options ...] file [files ...]\n\n 説明:\n \tMBUILD はユーザーが書いた C または C++ コードをコンパイルし、 \n \tMATLAB ファイルから生成した C または C++ 共有ライブラリとリンクします。結果は \n \tスタンドアロンの実行可能ファイルとなります。 \n\n \tMBUILD は、引数としてソース ファイル、オブジェクト ファイル、および \n \tライブラリ ファイルの任意の組み合わせを受け入れます。 \n\n \tMBUILD のコマンド ライン オプションは、以下のコマンド ライン オプションに関する \n \tセクションで定義されています。 \n\n \tMBUILD は、MATLAB コマンド プロンプト、Windows コマンド \n \tプロンプト、または UNIX シェルから実行できます。MBUILD は、Windows では \n \tmbuild.bat という名前のスクリプト、UNIX では mbuild で、 \n \t[matlabroot '/bin'] で指定されるディレクトリ内にあります。 \n\n \t1 番目に指定されたファイルの名前 (ファイル名拡張子を除く) が \n \t結果として生成される実行可能ファイルの名前になります。外部参照を満たすため、追加のソース、オブジェクトまたは \n \tライブラリ ファイルを指定できます。実行可能ファイルをビルドするときに、C または C++ ソース ファイルを \n \t指定できます。 \n\n \tMBUILD はオプション ファイルを使用して、コンパイラ、リンカー、およびその他のツールに引数として \n \t渡される変数と値を指定します。 \n \tMBUILD のコマンド ライン オプションは、オプション ファイルの\n \t内容を補完またはオーバーライドするか、MBUILD の他の \n \t動作を制御することができます。詳細については、以下の「オプション ファイルの詳細」 \n \tセクションを参照してください。\n\n \t"-setup" と "-setup -client mbuild_com" オプションを指定すると、\n \tインストールされているコンパイラが MBUILD で検索され、MBUILD の \n \t今後の呼び出しで使用する既定のオプション ファイルを選択できます。\n \t詳細については、以下のオプションを参照してください。 \n\n \tこのリリースでサポートされているコンパイラのリストは、以下を参照してください: \n \thttps://www.mathworks.com/support/compilers/current_release/ \n\n すべてのプラットフォームで使用可能なコマンド ライン オプション: \n \t-c \n \t コンパイルのみ。オブジェクト ファイルを作成しますが、実行可能ファイルは作成しません。 \n \t-D&lt;name&gt; \n \t シンボル名を C プリプロセッサに定義します。ソース内の \n \t "#define &lt;name&gt;" 命令と等価です。このスイッチの後に \n \t 空白を追加しないでください。 \n \t-D&lt;name&gt;=&lt;value&gt; \n \t シンボル名と値を C プリプロセッサに定義します。ソース内の \n \t "#define &lt;name&gt; &lt;value&gt;" 命令と等価です。このスイッチの後に \n \t 空白を追加しないでください。 \n \t-f &lt;optionsfile&gt; \n \t 使用するオプション ファイルの場所と名前を指定します。MBUILD の \n \t 既定のオプション ファイルの検索方法をオーバーライドします。 \n \t-g \n \t デバッグで使用する追加のシンボリックな情報を含む \n \t 実行可能ファイルを作成します。このオプションはビルドされたオブジェクト \n \t コードを最適化する、MBUILD の既定の動作を無効にします (-O オプションを参照)。 \n \t-h[elp] \n \t このメッセージを出力します。 \n \t-I&lt;pathname&gt; \n \t #include ファイルを検索するディレクトリのリストに &lt;pathname&gt; を追加 \n \t します。このスイッチの後に空白を追加しないでください。 \n \t-l&lt;name&gt; \n \t オブジェクト ライブラリとリンクします。&lt;name&gt; は、Windows では \n \t "&lt;name&gt;.lib" または "lib&lt;name&gt;.lib" に展開され、UNIX では "lib&lt;name&gt;.so" \n \tまたは "lib&lt;name&gt;.dylib" に展開されます。このスイッチの後に空白を追加しないでください。 \n \t-L&lt;directory&gt; \n \t -l オプションで指定されるライブラリを検索するディレクトリの \n \t リストに &lt;directory&gt; を追加します。UNIX システムでは、 \n \t ランタイム ライブラリ パスも設定しなければなりません。このスイッチの後に \n \t 空白を追加しないでください。 \n \t-n \n \t 実行モードではありません。MBUILD が実行する可能性のあるすべてのコマンドを出力します。 \n \t ただし、実際には実行しません。 \n \t-O \n \t オブジェクト コードを最適化します。最適化は既定で有効です。 \n \t また、コマンド ラインにこのオプションを含めることでも有効にできます。-g オプションが \n \t -O オプションと使用されない場合、最適化は無効になります。 \n \t-outdir &lt;dirname&gt; \n \t すべての出力ファイルをディレクトリ &lt;dirname&gt; に配置します。 \n \t-output &lt;resultname&gt; \n \t &lt;resultname&gt; という名前の実行可能ファイルを作成します。適切な実行可能ファイル拡張子が \n \t 自動的に追加されます。MBUILD の既定の \n \t 実行可能ファイル命名メカニズムをオーバーライドします。 \n \t-setup \n \t 将来の MBUILD 呼び出しの既定として \n \t 使用するコンパイラ オプション ファイルを、ユーザー プロファイル フォルダー (PREFDIR コマンドによって戻される) に \n \t 配置することによって、C/C++ コンパイラ オプション ファイルを対話的に指定します。この \n \t オプションが指定されると、他のコマンド ラインの入力は受け入れません。 \n \t-setup -client mbuild_com \n \t 将来の MBUILD 呼び出しの既定として \n \t 使用するコンパイラ オプション ファイルを、ユーザー プロファイル フォルダー (PREFDIR コマンドによって戻される) に \n \t 配置することによって、COM コンパイラ オプション ファイルを対話的に指定します。この \n \t オプションが指定されると、他のコマンド ラインの入力は受け入れません。 \n \t-U&lt;name&gt; \n \t C プリプロセッサ シンボル &lt;name&gt; の初期定義をすべて \n \t 削除します。(-D オプションの逆)。このスイッチの後に空白を \n \t 追加しないでください。 \n \t-v \n \t 詳細モード。オプション ファイルが処理され、すべてのコマンド \n \t ラインの引数が検討された後、重要な内部変数の値を \n \t 出力し ます。各コンパイル ステップと完全に評価された \n \t 最終リンクを出力します。 \n \t&lt;name&gt;=&lt;value&gt; \n \t 変数 &lt;name&gt; のオプション ファイル変数をオーバーライドします。 \n \t このオプションは、オプション ファイルが処理され、すべての \n \t コマンド ラインの引数が検討された後に処理されます。詳細については、\n \t 以下の「オーバーライド オプションの詳細」セクションを参照してください。 \n\n \tWindows プラットフォームでのみ利用可能なコマンド ライン オプション: \n \t @&lt;rspfile&gt; \n \t テキスト ファイル &lt;rspfile&gt; の内容を \n \t MBUILD のコマンド ライン引数として含めます。 \n\n \tオプション ファイルの詳細: \n \t MBUILD でサポートされているコンパイラのオプション ファイルの \n \t テンプレートがあります。これらのテンプレートは、Windows では \n \t [matlabroot '\\bin\\win64\\mexopts']、 \n\n \t Linux では [matlabroot '/bin/glnxa64/mexopts']、 \n\n \t Mac では [matlabroot '/bin/maci64/mexopts'] にあります。 \n\n \t これらのテンプレート オプション ファイルは、選択された既定の \n \t オプション ファイルを定義するために "-setup" および "-setup -client mbuild_com" オプションで使用されます \n\n \tオーバーライド オプションの詳細: \n \t オプション ファイルで指定された変数をオーバーライドするには、 \n \t コマンド ラインで name=value コマンド ライン引数を使用します。このオプションを \n \t 使用するときは、シェル構文内で意味をもつ空白などの文字を \n \t 保護するために、シェルの引用構文の使用が必要な場合があります。 \n\n \t Windows プラットフォームの MATLAB プロンプトまたは Windows \n \t コマンド プロンプトでは、二重引用符 (") を使用します。 \n \t mbuild -v COMPFLAGS="$COMPFLAGS -Wall" ... \n \t LINKFLAGS="$LINKFLAGS /VERBOSE" filename.c \n\n \t UNIX プラットフォームの MATLAB コマンド ラインでは、二重引用符 (") を使用します。 \n \t mbuild -v CFLAGS="$CFLAGS -Wall" LDFLAGS="$LDFLAGS -w" filename.c \n\n \t UNIX プラットフォームのシェル コマンド ラインでは、一重引用符 (') を使用します。 \n \t mbuild -v CFLAGS='$CFLAGS -Wall' LDFLAGS='$LDFLAGS -w' filename.c \n\n \t gcc/g++ をベースにする MinGW-w64 コンパイラでは、一重 \n \t 引用符 (') を使用します。 \n \t例: \n\n \t 外部 C プログラムの foo.c を libfoo に対してコンパイルしてリンクするには、 \n \t mbuild foo.c -L. -lfoo (UNIX) \n \t mbuild foo.c libfoo.lib (Windows) を使用します。 \n\n \t ただし、foo.c とライブラリが現在の作業フォルダー内にあることが前提となります。 \n\n \t COMPUTER、MCC、PREFDIR も参照してください。 \n       
</entry>
  </message>
</rsccat>
