<?xml version="1.0" encoding="UTF-8"?>
<!--Copyright 2025 The MathWorks, Inc.-->

<rsccat xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.0" locale="ja_JP" product="MATLAB" xsi:noNamespaceSchemaLocation="../../resources/schema/msgcat.xsd">
  <message>
    <entry key="Sparse">スパース行列はサポートされていません。</entry>
    <entry key="Complex">複素数値はサポートされていません。</entry>
    <entry key="CellArray">セルから倍精度に変換することはできません。</entry>
    <entry key="CharArray">値は数値でなければなりません。</entry>
    <entry key="NaN">NaN、NaT、&lt;undefined&gt; などの欠損値はサポートされません。</entry>
    <entry key="Inf">Inf はサポートされていません。</entry>
    <entry key="AlphaMapPredicate">値は次のいずれかでなければなりません:\n範囲を [0 1] とする single 型または double 型のベクトル\n整数型または logical 型のベクトル。</entry>
    <entry key="AlphaMapRange">値は次のいずれかでなければなりません:\n範囲を [0 1] とする single 型または double 型のベクトル\n整数型または logical 型のベクトル。</entry>
    <entry key="AlphaMapSize">値は次のいずれかでなければなりません:\n範囲を [0 1] とする single 型または double 型のベクトル\n整数型または logical 型のベクトル。</entry>
    <entry key="AlphaMapType">値は次のいずれかでなければなりません:\n範囲を [0 1] とする single 型または double 型のベクトル\n整数型または logical 型のベクトル。</entry>
    <entry key="AxesViewPredicate">値は double 型の 2 要素ベクトルでなければなりません。</entry>
    <entry key="AxesViewRange">値は double 型の 2 要素ベクトルでなければなりません。</entry>
    <entry key="AxesViewSize">値は double 型の 2 要素ベクトルでなければなりません。</entry>
    <entry key="AxesViewType">値は double 型の 2 要素ベクトルでなければなりません。</entry>
    <entry key="CDataPredicate">値は、トゥルーカラー イメージを定義する RGB 値の 3 次元行列でなければなりません。各値は 0.0 と 1.0 の範囲内、または NaN でなければなりません。</entry>
    <entry key="CDataRange">値は、トゥルーカラー イメージを定義する RGB 値の 3 次元行列でなければなりません。各値は 0.0 と 1.0 の範囲内、または NaN でなければなりません。</entry>
    <entry key="CDataSize">値は、トゥルーカラー イメージを定義する RGB 値の 3 次元行列でなければなりません。各値は 0.0 と 1.0 の範囲内、または NaN でなければなりません。</entry>
    <entry key="CDataType">値は、トゥルーカラー イメージを定義する RGB 値の 3 次元行列でなければなりません。各値は 0.0 と 1.0 の範囲内、または NaN でなければなりません。</entry>
    <entry key="ColorbarTickLengthSize">値は double 型のスカラーでなければなりません。</entry>
    <entry key="ColorbarTickLengthType">値は double 型のスカラーでなければなりません。</entry>
    <entry key="ColorbarTickLengthScalar">カラー バー TickLength はスカラー量です。最初の値のみが使用されます。</entry>
    <entry key="ColorMapPredicate">値は次のいずれかでなければなりません:\n範囲を [0 1] とする single 型または double 型の M 行 3 列の配列\nuint8 型の M 行 3 列の配列。</entry>
    <entry key="ColorMapRange">値は次のいずれかでなければなりません:\n範囲を [0 1] とする single 型または double 型の M 行 3 列の配列\nuint8 型の M 行 3 列の配列。</entry>
    <entry key="ColorMapSize">値は次のいずれかでなければなりません:\n範囲を [0 1] とする single 型または double 型の M 行 3 列の配列\nuint8 型の M 行 3 列の配列。</entry>
    <entry key="ColorMapType">値は次のいずれかでなければなりません:\n範囲を [0 1] とする single 型または double 型の M 行 3 列の配列\nuint8 型の M 行 3 列の配列。</entry>
    <entry key="ColorOrderPredicate">値は範囲を [0 1] とする single 型または double 型の、空でない M 行 3 列の配列でなければなりません。</entry>
    <entry key="ColorOrderRange">値は範囲を [0 1] とする single 型または double 型の、空でない M 行 3 列の配列でなければなりません。</entry>
    <entry key="ColorOrderSize">値は範囲を [0 1] とする single 型または double 型の、空でない M 行 3 列の配列でなければなりません。</entry>
    <entry key="ColorOrderType">値は範囲を [0 1] とする single 型または double 型の、空でない M 行 3 列の配列でなければなりません。</entry>
    <entry key="CompositeColorDataPredicate">値は次のいずれかでなければなりません:\nトゥルーカラー - 数値型または logical 型の 4 行 N 列の配列\nカラーマップ - 数値型または logical 型の M 行 N 列のベクトル。</entry>
    <entry key="CompositeColorDataRange">値は次のいずれかでなければなりません:\nトゥルーカラー - 数値型または logical 型の 4 行 N 列の配列\nカラーマップ - 数値型または logical 型の M 行 N 列のベクトル。</entry>
    <entry key="CompositeColorDataSize">値は次のいずれかでなければなりません:\nトゥルーカラー - 数値型または logical 型の 4 行 N 列の配列\nカラーマップ - 数値型または logical 型の M 行 N 列のベクトル。</entry>
    <entry key="CompositeColorDataType">値は次のいずれかでなければなりません:\nトゥルーカラー - 数値型または logical 型の 4 行 N 列の配列\nカラーマップ - 数値型または logical 型の M 行 N 列のベクトル。</entry>
    <entry key="CurvaturePredicate">値は次のいずれかでなければなりません:\ndouble 型のスカラー\n範囲を [0 1] とする double 型の 1 行 2 列のベクトル。</entry>
    <entry key="CurvatureRange">値は次のいずれかでなければなりません:\ndouble 型のスカラー\n範囲を [0 1] とする double 型の 1 行 2 列のベクトル。</entry>
    <entry key="CurvatureSize">値は次のいずれかでなければなりません:\ndouble 型のスカラー\n範囲を [0 1] とする double 型の 1 行 2 列のベクトル。</entry>
    <entry key="CurvatureType">値は次のいずれかでなければなりません:\ndouble 型のスカラー\n範囲を [0 1] とする double 型の 1 行 2 列のベクトル。</entry>
    <entry key="DataBoundsPredicate">値は、2 番目の要素が最初の要素以上である single 型または double 型の 1 行 2 列のベクトルでなければなりません。</entry>
    <entry key="DataBoundsRange">値は、2 番目の要素が最初の要素以上である single 型または double 型の 1 行 2 列のベクトルでなければなりません。</entry>
    <entry key="DataBoundsSize">値は、2 番目の要素が最初の要素以上である single 型または double 型の 1 行 2 列のベクトルでなければなりません。</entry>
    <entry key="DataBoundsType">値は、2 番目の要素が最初の要素以上である single 型または double 型の 1 行 2 列のベクトルでなければなりません。</entry>
    <entry key="FigureNumberPredicate">値は double 型のスカラーまたは空行列でなければなりません。</entry>
    <entry key="FigureNumberSize">値は double 型のスカラーまたは空行列でなければなりません。</entry>
    <entry key="FigureNumberType">値は double 型のスカラーまたは空行列でなければなりません。</entry>
    <entry key="GridSizePredicate">値は single 型または double 型の 2 行 1 列のベクトルでなければなりません。</entry>
    <entry key="GridSizeRange">値は single 型または double 型の 2 行 1 列のベクトルでなければなりません。</entry>
    <entry key="GridSizeSize">値は single 型または double 型の 2 行 1 列のベクトルでなければなりません。</entry>
    <entry key="GridSizeType">値は single 型または double 型の 2 行 1 列のベクトルでなければなりません。</entry>
    <entry key="GridWeightPredicate">値は single 型または double 型の 1 行 N 列のベクトルでなければなりません。</entry>
    <entry key="GridWeightRange">値は single 型または double 型の 1 行 N 列のベクトルでなければなりません。</entry>
    <entry key="GridWeightSize">値は single 型または double 型の 1 行 N 列のベクトルでなければなりません。</entry>
    <entry key="GridWeightType">値は single 型または double 型の 1 行 N 列のベクトルでなければなりません。</entry>
    <entry key="ImageXYDataLimits">NaN、NaT、&lt;undefined&gt; などの無限値および欠損値は、有効な XData または YData ではありません。</entry>
    <entry key="ImageXYDataPredicate">値は、数値、logical、datetime、duration、または categorical データのスカラーまたはベクトルでなければなりません。</entry>
    <entry key="ImageXYDataRange">値は、数値、logical、datetime、duration、または categorical データのスカラーまたはベクトルでなければなりません。</entry>
    <entry key="ImageXYDataSize">値は、数値、logical、datetime、duration、または categorical データのスカラーまたはベクトルでなければなりません。</entry>
    <entry key="ImageXYDataType">値は、数値、logical、datetime、duration、または categorical データのスカラーまたはベクトルでなければなりません。</entry>
    <entry key="IndexVectorPredicate">値は正の整数のベクトルでなければなりません。</entry>
    <entry key="IndexVectorRange">値は正の整数のベクトルでなければなりません。</entry>
    <entry key="IndexVectorSize">値は正の整数のベクトルでなければなりません。</entry>
    <entry key="IndexVectorType">値は正の整数のベクトルでなければなりません。</entry>
    <entry key="LimitsPositive">値は 2 番目の要素が最初の要素よりも大きい、正の整数の 1 行 2 列のベクトルでなければなりません。</entry>
    <entry key="LimitsPredicate">値は 2 番目の要素が最初の要素よりも大きい、数値型の 1 行 2 列のベクトルでなければなりません。</entry>
    <entry key="LimitsRange">値は 2 番目の要素が最初の要素よりも大きい、数値型の 1 行 2 列のベクトルでなければなりません。</entry>
    <entry key="LimitsSize">値は 2 番目の要素が最初の要素よりも大きい、数値型の 1 行 2 列のベクトルでなければなりません。</entry>
    <entry key="LimitsType">値は 2 番目の要素が最初の要素よりも大きい、数値型の 1 行 2 列のベクトルでなければなりません。</entry>
    <entry key="LimitsWithInfsPredicate">値は 2 番目の要素が最初の要素よりも大きいか Inf である、数値型の 1 行 2 列のベクトルでなければなりません。</entry>
    <entry key="LimitsWithInfsRange">値は 2 番目の要素が最初の要素よりも大きいか Inf である、数値型の 1 行 2 列のベクトルでなければなりません。</entry>
    <entry key="LimitsWithInfsSize">値は 2 番目の要素が最初の要素よりも大きいか Inf である、数値型の 1 行 2 列のベクトルでなければなりません。</entry>
    <entry key="LimitsWithInfsType">値は 2 番目の要素が最初の要素よりも大きいか Inf である、数値型の 1 行 2 列のベクトルでなければなりません。</entry>
    <entry key="NColorPtrPredicate">値は次のいずれかでなければなりません:\nsingle 型または double 型の 2 行 3 列の配列\n0 ～ 1 の single 型または double 型の N 行 3 列の配列。</entry>
    <entry key="NColorPtrRange">値は次のいずれかでなければなりません:\nsingle 型または double 型の 2 行 3 列の配列\n0 ～ 1 の single 型または double 型の N 行 3 列の配列。</entry>
    <entry key="NColorPtrSize">値は次のいずれかでなければなりません:\nsingle 型または double 型の 2 行 3 列の配列\n0 ～ 1 の single 型または double 型の N 行 3 列の配列。</entry>
    <entry key="NColorPtrType">値は次のいずれかでなければなりません:\nsingle 型または double 型の 2 行 3 列の配列\n0 ～ 1 の single 型または double 型の N 行 3 列の配列。</entry>
    <entry key="Numeric2D3DMatrixPredicate">値は 3 次元以下の数値型の配列でなければなりません。</entry>
    <entry key="Numeric2D3DMatrixRange">値は 3 次元以下の数値型の配列でなければなりません。</entry>
    <entry key="Numeric2D3DMatrixSize">値は 3 次元以下の数値型の配列でなければなりません。</entry>
    <entry key="Numeric2D3DMatrixType">値は 3 次元以下の数値型の配列でなければなりません。</entry>
    <entry key="NumericMatrixPredicate">値は数値型のスカラー、ベクトル、または配列でなければなりません。</entry>
    <entry key="NumericMatrixRange">値は数値型のスカラー、ベクトル、または配列でなければなりません。</entry>
    <entry key="NumericMatrixSize">値は数値型のスカラー、ベクトル、または配列でなければなりません。</entry>
    <entry key="NumericMatrixType">値は数値型のスカラー、ベクトル、または配列でなければなりません。</entry>
    <entry key="NumericOrLogicalMatrixPredicate">値は数値型または logical 型のスカラー、ベクトル、または配列でなければなりません。</entry>
    <entry key="NumericOrLogicalMatrixRange">値は数値型または logical 型のスカラー、ベクトル、または配列でなければなりません。</entry>
    <entry key="NumericOrLogicalMatrixSize">値は数値型または logical 型のスカラー、ベクトル、または配列でなければなりません。</entry>
    <entry key="NumericOrLogicalMatrixType">値は数値型または logical 型のスカラー、ベクトル、または配列でなければなりません。</entry>
    <entry key="ParallelPrimitiveVertexDataPredicate">値は single 型の 3 行 N 列の配列でなければなりません。</entry>
    <entry key="ParallelPrimitiveVertexDataRange">値は single 型の 3 行 N 列の配列でなければなりません。</entry>
    <entry key="ParallelPrimitiveVertexDataSize">値は single 型の 3 行 N 列の配列でなければなりません。</entry>
    <entry key="ParallelPrimitiveVertexDataType">値は single 型の 3 行 N 列の配列でなければなりません。</entry>
    <entry key="ParallelPrimitiveStripDataPredicate">値は、すべての値が 0 より大きい uint32 型の 1 行 N 列のベクトルでなければなりません。</entry>
    <entry key="ParallelPrimitiveStripDataRange">値は、すべての値が 0 より大きい uint32 型の 1 行 N 列のベクトルでなければなりません。</entry>
    <entry key="ParallelPrimitiveStripDataSize">値は、すべての値が 0 より大きい uint32 型の 1 行 N 列のベクトルでなければなりません。</entry>
    <entry key="ParallelPrimitiveStripDataType">値は、すべての値が 0 より大きい uint32 型の 1 行 N 列のベクトルでなければなりません。</entry>
    <entry key="PatchFacesPredicate">値は数値型で 1 よりも大きくなければなりません。</entry>
    <entry key="PatchFacesRange">値は数値型で 1 よりも大きくなければなりません。</entry>
    <entry key="PatchFacesSize">値は数値型で 1 よりも大きくなければなりません。</entry>
    <entry key="PatchFacesType">値は数値型で 1 よりも大きくなければなりません。</entry>
    <entry key="PatchFaceVertexAlphaDataPredicate">値はアルファ値またはアルファ マップ インデックスの M 行 1 列のベクトルでなければなりません。</entry>
    <entry key="PatchFaceVertexAlphaDataRange">値はアルファ値またはアルファ マップ インデックスの M 行 1 列のベクトルでなければなりません。</entry>
    <entry key="PatchFaceVertexAlphaDataSize">値はアルファ値またはアルファ マップ インデックスの M 行 1 列のベクトルでなければなりません。</entry>
    <entry key="PatchFaceVertexAlphaDataType">値はアルファ値またはアルファ マップ インデックスの M 行 1 列のベクトルでなければなりません。</entry>
    <entry key="PatchFaceVertexCDataPredicate">値は数値型の N 行 1 列または N 行 3 列の配列でなければなりません。</entry>
    <entry key="PatchFaceVertexCDataRange">値は数値型の N 行 1 列または N 行 3 列の配列でなければなりません。</entry>
    <entry key="PatchFaceVertexCDataSize">値は数値型の N 行 1 列または N 行 3 列の配列でなければなりません。</entry>
    <entry key="PatchFaceVertexCDataType">値は数値型の N 行 1 列または N 行 3 列の配列でなければなりません。</entry>
    <entry key="PatchNormalsPredicate">値は数値型の N 行 3 列の配列でなければなりません。N はパッチ面の行数です。</entry>
    <entry key="PatchNormalsRange">値は数値型の N 行 3 列の配列でなければなりません。N はパッチ面の行数です。</entry>
    <entry key="PatchNormalsSize">値は数値型の N 行 3 列の配列でなければなりません。N はパッチ面の行数です。</entry>
    <entry key="PatchNormalsType">値は数値型の N 行 3 列の配列でなければなりません。N はパッチ面の行数です。</entry>
    <entry key="PatchVerticesPredicate">値は数値型の 1 行 2 列または 1 行 3 列のベクトルでなければなりません。</entry>
    <entry key="PatchVerticesRange">値は数値型の 1 行 2 列または 1 行 3 列のベクトルでなければなりません。</entry>
    <entry key="PatchVerticesSize">値は数値型の 1 行 2 列または 1 行 3 列のベクトルでなければなりません。</entry>
    <entry key="PatchVerticesType">値は数値型の 1 行 2 列または 1 行 3 列のベクトルでなければなりません。</entry>
    <entry key="PointerShapeCDataPredicate">値は 1、2、および NaN の値のみを含む 16 行 16 列または 32 行 32 列の配列でなければなりません。</entry>
    <entry key="PointerShapeCDataRange">値は 1、2、および NaN の値のみを含む 16 行 16 列または 32 行 32 列の配列でなければなりません。</entry>
    <entry key="PointerShapeCDataSize">値は 1、2、および NaN の値のみを含む 16 行 16 列または 32 行 32 列の配列でなければなりません。</entry>
    <entry key="PointerShapeCDataType">値は 1、2、および NaN の値のみを含む 16 行 16 列または 32 行 32 列の配列でなければなりません。</entry>
    <entry key="PointerShapeHotSpotPredicate">値は double 型の 1 行 2 列のベクトルで、両方の値が範囲 [1 32] 内でなければなりません</entry>
    <entry key="PointerShapeHotSpotRange">値は double 型の 1 行 2 列のベクトルで、両方の値が範囲 [1 32] 内でなければなりません</entry>
    <entry key="PointerShapeHotSpotSize">値は double 型の 1 行 2 列のベクトルで、両方の値が範囲 [1 32] 内でなければなりません</entry>
    <entry key="PointerShapeHotSpotType">値は double 型の 1 行 2 列のベクトルで、両方の値が範囲 [1 32] 内でなければなりません</entry>
    <entry key="PolygonClipNodeDataSize">Value must be a 2xN array of type single.</entry>
    <entry key="PolygonClipNodeDataType">Value must be a 2xN array of type single.</entry>
    <entry key="PrimitiveColorDataPredicate">値は次のいずれかでなければなりません:\nトゥルーカラー - uint8 型の 4 行 N 列の配列\nカラーマップ - single 型の 1 行 N 列のベクトル\nテクスチャマップ - single 型の 2 行 N 列の配列。</entry>
    <entry key="PrimitiveColorDataRange">値は次のいずれかでなければなりません:\nトゥルーカラー - uint8 型の 4 行 N 列の配列\nカラーマップ - single 型の 1 行 N 列のベクトル\nテクスチャマップ - single 型の 2 行 N 列の配列。</entry>
    <entry key="PrimitiveColorDataSize">値は次のいずれかでなければなりません:\nトゥルーカラー - uint8 型の 4 行 N 列の配列\nカラーマップ - single 型の 1 行 N 列のベクトル\nテクスチャマップ - single 型の 2 行 N 列の配列。</entry>
    <entry key="PrimitiveColorDataType">値は次のいずれかでなければなりません:\nトゥルーカラー - uint8 型の 4 行 N 列の配列\nカラーマップ - single 型の 1 行 N 列のベクトル\nテクスチャマップ - single 型の 2 行 N 列の配列。</entry>
    <entry key="PrimitiveNormalsDataPredicate">値は範囲を [-1 1] とする single 型の 3 行 N 列の配列でなければなりません。</entry>
    <entry key="PrimitiveNormalsDataRange">値は範囲を [-1 1] とする single 型の 3 行 N 列の配列でなければなりません。</entry>
    <entry key="PrimitiveNormalsDataSize">値は範囲を [-1 1] とする single 型の 3 行 N 列の配列でなければなりません。</entry>
    <entry key="PrimitiveNormalsDataType">値は範囲を [-1 1] とする single 型の 3 行 N 列の配列でなければなりません。</entry>
    <entry key="PrimitiveRGBADataPredicate">値は uint8 型の 4 行 N 列の配列でなければなりません。</entry>
    <entry key="PrimitiveRGBADataRange">値は uint8 型の 4 行 N 列の配列でなければなりません。</entry>
    <entry key="PrimitiveRGBADataSize">値は uint8 型の 4 行 N 列の配列でなければなりません。</entry>
    <entry key="PrimitiveRGBADataType">値は uint8 型の 4 行 N 列の配列でなければなりません。</entry>
    <entry key="PrimitiveRGBAScalarPredicate">値は uint8 型の 4 行 1 列の配列でなければなりません。</entry>
    <entry key="PrimitiveRGBAScalarRange">値は uint8 型の 4 行 1 列の配列でなければなりません。</entry>
    <entry key="PrimitiveRGBAScalarSize">値は uint8 型の 4 行 1 列の配列でなければなりません。</entry>
    <entry key="PrimitiveRGBAScalarType">値は uint8 型の 4 行 1 列の配列でなければなりません。</entry>
    <entry key="PrimitiveStripDataPredicate">値は、すべての値が 0 より大きい uint32 型の 1 行 N 列のベクトルでなければなりません。</entry>
    <entry key="PrimitiveStripDataRange">値は、すべての値が 0 より大きい uint32 型の 1 行 N 列のベクトルでなければなりません。</entry>
    <entry key="PrimitiveStripDataSize">値は、すべての値が 0 より大きい uint32 型の 1 行 N 列のベクトルでなければなりません。</entry>
    <entry key="PrimitiveStripDataType">値は、すべての値が 0 より大きい uint32 型の 1 行 N 列のベクトルでなければなりません。</entry>
    <entry key="PrimitiveVertexDataPredicate">値は single 型の 3 行 N 列の配列でなければなりません。</entry>
    <entry key="PrimitiveVertexDataRange">値は single 型の 3 行 N 列の配列でなければなりません。</entry>
    <entry key="PrimitiveVertexDataSize">値は single 型の 3 行 N 列の配列でなければなりません。</entry>
    <entry key="PrimitiveVertexDataType">値は single 型の 3 行 N 列の配列でなければなりません。</entry>
    <entry key="PrimitiveVertexIndicesPredicate">値は uint32 型の 1 行 N 列のベクトルでなければなりません。</entry>
    <entry key="PrimitiveVertexIndicesRange">値は uint32 型の 1 行 N 列のベクトルでなければなりません。</entry>
    <entry key="PrimitiveVertexIndicesSize">値は uint32 型の 1 行 N 列のベクトルでなければなりません。</entry>
    <entry key="PrimitiveVertexIndicesType">値は uint32 型の 1 行 N 列のベクトルでなければなりません。</entry>
    <entry key="PrimitiveAlignmentDataPredicate">値は single 型のベクトルでなければなりません。</entry>
    <entry key="PrimitiveAlignmentDataRange">値は single 型のベクトルでなければなりません。</entry>
    <entry key="PrimitiveAlignmentDataSize">値は single 型のベクトルでなければなりません。</entry>
    <entry key="PrimitiveAlignmentDataType">値は single 型のベクトルでなければなりません。</entry>
    <entry key="ScribePositionPredicate">値は数値型の 1 行 4 列のベクトルでなければなりません。</entry>
    <entry key="ScribePositionRange">値は数値型の 1 行 4 列のベクトルでなければなりません。</entry>
    <entry key="ScribePositionSize">値は数値型の 1 行 4 列のベクトルでなければなりません。</entry>
    <entry key="ScribePositionType">値は数値型の 1 行 4 列のベクトルでなければなりません。</entry>
    <entry key="StripDataPredicate">これは StripData の正のエラー メッセージです。</entry>
    <entry key="SurfaceCDataPredicate">値は数値型の 2 次元または 3 次元配列でなければなりません。</entry>
    <entry key="SurfaceCDataRange">値は数値型の 2 次元または 3 次元配列でなければなりません。</entry>
    <entry key="SurfaceCDataSize">値は数値型の 2 次元または 3 次元配列でなければなりません。</entry>
    <entry key="SurfaceCDataType">値は数値型の 2 次元または 3 次元配列でなければなりません。</entry>
    <entry key="SurfaceVertexNormalsPredicate">値は single 型または double 型の N x M x 3 の配列でなければなりません。</entry>
    <entry key="SurfaceVertexNormalsRange">値は single 型または double 型の N x M x 3 の配列でなければなりません。</entry>
    <entry key="SurfaceVertexNormalsSize">値は single 型または double 型の N x M x 3 の配列でなければなりません。</entry>
    <entry key="SurfaceVertexNormalsType">値は single 型または double 型の N x M x 3 の配列でなければなりません。</entry>
    <entry key="SurfaceXYDataPredicate">値は数値型のベクトルまたは 2 次元配列でなければなりません。</entry>
    <entry key="SurfaceXYDataRange">値は数値型のベクトルまたは 2 次元配列でなければなりません。</entry>
    <entry key="SurfaceXYDataSize">値は数値型のベクトルまたは 2 次元配列でなければなりません。</entry>
    <entry key="SurfaceXYDataType">値は数値型のベクトルまたは 2 次元配列でなければなりません。</entry>
    <entry key="TableCellSelectionPredicate">値は double 型の N 行 2 列の配列でなければなりません。</entry>
    <entry key="TableCellSelectionRange">値は double 型の N 行 2 列の配列でなければなりません。</entry>
    <entry key="TableCellSelectionSize">値は double 型の N 行 2 列の配列でなければなりません。</entry>
    <entry key="TableCellSelectionType">値は double 型の N 行 2 列の配列でなければなりません。</entry>
    <entry key="TextPositionPredicate">値は数値型または logical 型の 2 要素または 3 要素のベクトルでなければなりません。</entry>
    <entry key="TextPositionRange">値は数値型または logical 型の 2 要素または 3 要素のベクトルでなければなりません。</entry>
    <entry key="TextPositionSize">値は数値型または logical 型の 2 要素または 3 要素のベクトルでなければなりません。</entry>
    <entry key="TextPositionType">値は数値型または logical 型の 2 要素または 3 要素のベクトルでなければなりません。</entry>
    <entry key="TextureColorDataPredicate">値は uint8 型の 4 x M x N の配列でなければなりません。</entry>
    <entry key="TextureColorDataRange">値は uint8 型の 4 x M x N の配列でなければなりません。</entry>
    <entry key="TextureColorDataSize">値は uint8 型の 4 x M x N の配列でなければなりません。</entry>
    <entry key="TextureColorDataType">値は uint8 型の 4 x M x N の配列でなければなりません。</entry>
    <entry key="TickPredicate">値は、値が増加する数値ベクトルでなければなりません。</entry>
    <entry key="TickRange">値は、値が増加する数値ベクトルでなければなりません。</entry>
    <entry key="TickSize">値は、値が増加する数値ベクトルでなければなりません。</entry>
    <entry key="TickType">値は、値が増加する数値ベクトルでなければなりません。</entry>
    <entry key="TickLengthPredicate">値は数値型の 2 行 1 列のベクトルでなければなりません。</entry>
    <entry key="TickLengthRange">値は数値型の 2 行 1 列のベクトルでなければなりません。</entry>
    <entry key="TickLengthSize">値は数値型の 2 行 1 列のベクトルでなければなりません。</entry>
    <entry key="TickLengthType">値は数値型の 2 行 1 列のベクトルでなければなりません。</entry>
    <entry key="TipInterpolationFactorTypePredicate">値は範囲を [0 1] とする single 型または double 型のスカラーでなければなりません。</entry>
    <entry key="TipInterpolationFactorTypeRange">値は範囲を [0 1] とする single 型または double 型のスカラーでなければなりません。</entry>
    <entry key="TipInterpolationFactorTypeSize">値は範囲を [0 1] とする single 型または double 型のスカラーでなければなりません。</entry>
    <entry key="TipInterpolationFactorTypeType">値は範囲を [0 1] とする single 型または double 型のスカラーでなければなりません。</entry>
    <entry key="VectorDataPredicate">値は数値型のベクトルでなければなりません。</entry>
    <entry key="VectorDataRange">値は数値型のベクトルでなければなりません。</entry>
    <entry key="VectorDataSize">値は数値型のベクトルでなければなりません。</entry>
    <entry key="VectorDataType">値は数値型のベクトルでなければなりません。</entry>
    <entry key="PositiveVectorDataSize">値は正の数値型のベクトルでなければなりません。</entry>
    <entry key="PositiveVectorDataPredicate">値は正の数値型のベクトルでなければなりません。</entry>
    <entry key="PositiveVectorDataType">値は正の数値型のベクトルでなければなりません。</entry>
    <entry key="PositiveOrNanVectorDataSize">値は正の数値型または NaN のベクトルでなければなりません。</entry>
    <entry key="PositiveOrNanVectorDataPredicate">値は正の数値型または NaN のベクトルでなければなりません。</entry>
    <entry key="PositiveOrNanVectorDataType">値は正の数値型または NaN のベクトルでなければなりません。</entry>
    <entry key="TiledGridSizeType">値は、intmax 未満の整数からなる 2 要素ベクトルでなければなりません。</entry>
    <entry key="TiledGridSizeSize">値は、intmax 未満の整数からなる 2 要素ベクトルでなければなりません。</entry>
    <entry key="TiledGridSizePredicate">値は、intmax 未満の整数からなる 2 要素ベクトルでなければなりません。</entry>
  </message>
</rsccat>
