<?xml version="1.0"?>
<!-- Copyright 2011-2024 The MathWorks, Inc. -->
<rsccat version="1.0" locale="en_US" product="MATLAB">
  <message>
    <entry key="InvalidSharedTestFixturesAttribute">SharedTestFixtures must be a cell array of matlab.unittest.fixtures.Fixture instances.</entry>
    <entry key="InvalidMethodAttributes">Method {0} has incompatible attributes. It is also defined as a {1} method.</entry>
    <entry key="InvalidStaticMethodAttribute">Method {0} of the {1} class has incompatible attributes. Simultaneously specifying the Static and {2} method attributes is not supported.</entry>
    <entry key="TestParameterDefinitionMethodMustBeStatic">Method {0} of the {1} class is not static. A {2} method must be static.</entry>
    <entry key="TestParameterDefinitionMethodMustNotBeDefinedInASuperclass">Method {0} of the {1} class has a different definition in a superclass. A {2} method must have a unique definition in the class hierarchy.</entry>
    <entry key="InvalidMethodName">"{0}" is not a valid method name because it contains a dot.</entry>
    <entry key="InteractiveUseOnly">Unable to create an interactive TestCase while running a test.</entry>
    <entry key="InvalidPropertyAttributes">Property ''{0}'' has incompatible property attributes.</entry>
    <entry key="InconsistentMethodOverride" note="Example: Method test1 of the MyTest class has a different Test attribute in a superclass.">Method {0} of the {1} class has a different {2} attribute in a superclass.</entry>
    <entry key="NonpublicMethod">Method {0} of the {1} class must be defined with public access.</entry>
    <entry key="NonpublicProperty">Property {0} of the {1} class must be defined with public GetAccess.</entry>
    <entry key="NonconstantParameter">Property {0} of the {1} class has been defined as a {2} but it is not Constant. All {3} properties must be Constant.</entry>
    <entry key="DependentParameter">Property {0} of the {1} class has both the Dependent and {2} attributes, but {2} properties must not be dependent.</entry>
    <entry key="NoDefaultValueForParameter">Property {0} of the {1} class has been defined as a {2} property but does not have a value. Parameterization properties must either have a default value defined in the properties block or be initialized by a TestParameterDefinition method.</entry>
    <entry key="InvalidDefaultValueForParameter" note="Example: Unexpected default value for the TestClassSetup property 'Datatype' of the ''MyTest'' class.">Unexpected default value for the {0} property ''{1}'' of the ''{2}'' class.</entry>
    <entry key="InvalidParameterCombinationAttribute">Specifying the ParameterCombination attribute for the {0} method in the {1} class is not supported. The ParameterCombination attribute applies only to Test, TestMethodSetup, and TestClassSetup methods.</entry>
    <entry key="InconsistentParameterDefinition">Property {0} has the {1} attribute in a superclass of the {2} class but not in the test class itself. Specifying a property with inconsistent attributes in a test class hierarchy is not supported.</entry>
    <entry key="ParameterInSubclassButNotSuperclass">Property {0} has the {1} attribute in the {2} class but not in a superclass. Specifying a property with inconsistent attributes in a test class hierarchy is not supported.</entry>
    <entry key="InvalidMethodInputArgument">Parameter input argument names for method {0} in class {1} are not valid.</entry>
    <entry key="NonparameterProperty" note="Example: Define 'Prop' in class MyTest as a TestParameter property for use with method 'test1'.">Define ''{0}'' in class {1} as a {2} property for use with method ''{3}''.</entry>
    <entry key="ParameterDoesNotExist" note="Example: Undefined TestParameter property Param1 passed to the test1 method of the MyTest class. In a concrete test class, testing with a parameterization property requires the property to be defined in the test class or a test superclass.">Undefined {1} property {2} passed to the {3} method of the {0} class. In a concrete test class, testing with a parameterization property requires the property to be defined in the test class or a test superclass.</entry>
    <entry key="UnableToAccessUplevelParameter" note="Example: Unable to access value of ClassSetupParameter 'MyParam' in Test method 'test1' because no TestClassSetup methods in class 'MyTest' use this parameter.">Unable to access value of {0} ''{1}'' in {2} method ''{3}'' because no {4} methods in class ''{5}'' use this parameter.</entry>
    <entry key="IncompatibleParameterSizes">Unable to combine parameters sequentially for the {0} method in the {1} class because parameters have different number of values.</entry>
    <entry key="IncompatibleParameterSizesSetupMethods">Unable to combine parameters sequentially for {0} methods of the {1} class because parameters have different number of values.</entry>
    <entry key="ConflictingParameterCombinationAttribute" note="Example: TestClassSetup methods in MyTest class use conflicting values for the ParameterCombination attribute.">{0} methods in the {1} class use conflicting values for the ParameterCombination attribute.</entry>	
    <entry key="TagsMustBeCellArrayOfCharacterVectorsOrStringArrays">Expected TestTags to be a string array or a cell array of character vectors.</entry>
    <entry key="TagMustBeRow" note="stringDatatypeUpdate">Tag specified in a cell array of character vectors must be a row vector.</entry>
    <entry key="TagsMustBeNonEmpty">Tag must be a non-empty character vector or a string containing more than zero characters.</entry>
    <entry key="InvalidTagsScope">Specifying the TestTags attribute for the {0} method in the {1} class is not supported because the {0} method is not a Test method.</entry>
    <entry key="AbstractTestMethodTags">Abstract Test method {0} cannot define TestTags.</entry>
    <entry key="MustBeTestCase">Specified class must be a subclass of matlab.unittest.TestCase.</entry>
    <entry key="FunctionArgumentValidationNotSupported">Function argument validation not supported for method {0} in class {1}.</entry>
    <entry key="TestParameterDefinitionMethodMustReturnValidOutput">TestParameterDefinition method {0} of class {1} must return output arguments that match concrete parameterization properties defined in the same class.</entry>
    <entry key="TestParameterDefinitionMethodInputMustBeAParameterProperty">{0} is not a valid input to the {1} method of the {2} class. Inputs to a TestParameterDefinition method must match parameterization properties of the class.</entry>
    <entry key="TestParameterDefinitionMethodInputMustBeAClassSetupParameterOrMethodSetupProperty">{0} is not a valid input to the {1} method of the {2} class. Specify inputs to a TestParameterDefinition method using ClassSetupParameter or MethodSetupParameter properties.</entry>
    <entry key="TestParameterDefinitionMethodOutputsMustBeAtLowerLevelsOfParameterizationThanInputs">Invalid input-output relationship in method {0} of class {1}. If a TestParameterDefinition method accepts inputs, then the inputs must be on a higher parameterization level relative to the outputs of the method.</entry>
    <entry key="MultipleTestParameterDefinitionMethodsDefineValueForTestParameterProperty">{0} is not a valid output for the {1} method of the {2} class. Parameterization properties can be initialized only one time either using a single TestParameterDefinition method or a default value.</entry>
    <entry key="MultipleValueDefinitionsForTestParameterProperty">Overriding the default value of a parameterization property with a TestParameterDefinition method is not supported. Property {0} of class {1} must either have a default value or be initialized by a TestParameterDefinition method.</entry>
    <entry key="GetNumberOfValuesMethodCallFailure">Unable to call the getNumberOfValues method of the {0} class.</entry>
    <entry key="GetNumberOfValuesInvalidReturnValue">Method getNumberOfValues of class {0} must return a valid count value.</entry>
    <entry key="InvalidAttribute">Invalid attribute {0}.</entry>
    <entry key="InvalidValueForParameter" note="Example: Unexpected value returned by the ''setDataType'' TestParameterDefinition method for the ''Datatype'' property of the ''MyTest'' class.">Unexpected value returned by the ''{0}'' method for the ''{1}'' property of the ''{2}'' class.</entry>
    <entry key="TestParameterDefinitionMethodMustNotBeAbstract">Method {0} of the {1} class has incompatible attributes. A {2} method must not be abstract.</entry>    
  </message>
</rsccat>
<!-- LocalWords:  rsccat Nonconstant Nonparameter unittest Uplevel
-->
