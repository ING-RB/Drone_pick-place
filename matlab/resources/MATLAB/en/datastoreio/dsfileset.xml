<?xml version="1.0"?>
<!-- Copyright 2017-2021 The MathWorks, Inc. -->
<rsccat version="1.0" locale="en_US" product="MATLAB">
  <message>
    <entry key="footerLine">To get the full list of files, use {0}.</entry>
    <entry key="invalidPartitionIndex">Index ''{0}'' is not a valid partition index for this number of partitions and file-set object.</entry>
    <entry key="noMoreFiles">No more files in the file-set object.\nReset the file-set object and call the hasfile method before calling the nextfile method.</entry>
    <entry key="noMoreInfo">No more {0} in the file-set object.\nReset the file-set object and call the ''{1}'' method before calling the ''{2}'' method.</entry>
    <entry key="noPreviousFiles">No previous files in the file-set object.\nCall the ''nextfile'' method to advance the file-set object.</entry>
    <entry key="noPreviousInfo">No previous {0} in the file-set object.\nCall the ''{1}'' method to advance the file-set object.</entry>
    <entry key="invalidFileSplitSize">{0} must be a scalar positive integer or the character vector or string scalar ''file''.</entry>
    <entry key="invalidStructLocation">Location must be a struct containing fields FileName, Size, and Offset.</entry>
    <entry key="invalidStructLocationFileName">FileName field of the location struct must not be a folder name or contain wildcard (*) characters: ''{0}''.</entry>
    <entry key="invalidStructLocationFileNameChar">FileName field of the location struct must be a character vector.</entry>
    <entry key="invalidStructLocationSize">Size field of the location struct must be a scalar non-negative integer.</entry>
    <entry key="invalidStructLocationOffset">Offset field of the location struct must be a scalar non-negative integer.</entry>
    <entry key="offsetGreaterthanSizeInStructLocation">Offset field of the location struct must be less than or equal to the size of the file ''{0}''.</entry>
    <entry key="invalidFileInfoIndex">Invalid index supplied to {0}. Indices can be a positive integer numeric scalar, numeric vector, '':'', of the form ''index1:index2'' where index2 >= index1, or logical indices where the length of the logical array is equal to the number of {1}.</entry>
    <entry key="outOfRangeIndex">Index supplied exceeds the number of {0} in the file-set. The maximum number of {0} in the file-set is {1}.</entry>
    <entry key="parensNotAllowed">Cannot access ''{0}'' in class ''{1}''.</entry>
    <entry key="incorrectShuffledIndices">Incorrect indices supplied for shuffling. The values of the shuffled indices should match the values of the original indices.</entry>
    <entry key="noHorzcat">Horizontal concatenation is not allowed for objects of type ''{0}''.</entry>
    <entry key="noSubsasgn">Subscripted assignment is not allowed for objects of type ''{0}''.</entry>
    <entry key="invalidIndexOp">Invalid index supplied to ''{0}''. Indexing is only allowed on the object or properties of the object.</entry>
    <entry key="mustBeScalar">Objects of type ''{0}'' must be a scalar when passed as an input to datastores.</entry>
  </message>
</rsccat>
