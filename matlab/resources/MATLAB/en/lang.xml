<?xml version="1.0" encoding="UTF-8" ?>
<!-- Copyright 2011-2024 The MathWorks, Inc. -->
<rsccat version="1.0" locale="en_US" product="MATLAB">
    <message>
        <!-- Added messages: src/m_interpreter, src/m_lxe -->
        <entry key="frontend">Unexpected constant found at parse time "{0}"\n</entry>
        <entry key="nofunction">Can''t get function ''{0}''.</entry>
        <entry key="nolib">Can''t load m_lxe library ''{0}''.</entry>
        <entry key="unsupportedFeature">The feature is not supported any more and will be obsoleted in a future release.</entry>
        <entry key="FeatureLxeNameErr">*** feature {0} options are \n*** ''{1}'' </entry>
        <entry key="StackOverflow">Out of memory. The likely cause is an infinite recursion within the program.</entry>
        <entry key="break_without_loop_script">Error: File: {0} Line: {1,number,integer}\nA BREAK may only be used within a FOR or WHILE loop, and then only within the same file as its corresponding FOR or WHILE statement.</entry>
        <entry key="continue_without_loop_script">Error: File: {0} Line: {1,number,integer}\nA CONTINUE may only be used within a FOR or WHILE loop, and then only within the same file as its corresponding FOR or WHILE statement.</entry>
        <entry key="MismatchIrCacheVersion">Cached ir for file ''{0}'' is version {1}.  This version of MATLAB uses version {2}.  The cached IR is being ignored.</entry>
        <entry key="oldPfileVersion"><![CDATA[The P-code file {0} was generated prior to MATLAB version 7.5 (R2007b) and is no longer supported.  Use <a href="matlab:doc pcode">pcode</a> to regenerate the file using MATLAB R2007b or later.]]></entry>
        <entry key="conversionError">Conversion to {0} from {1} is not possible.</entry>
        <entry key="colonInput">Input arguments to function include colon operator. To input the colon character, use ':' instead.</entry>
        <entry key="BadArgumentsToBuiltinEnd">Inputs to the built-in function END must be scalar numeric.</entry>
        <entry key="IncorrectNumberOfArgumentsToBuiltinEnd">Incorrect number of arguments to built-in function END.</entry>
        <entry key="DimensionExceededForBuiltinEnd">In call end(obj,k,n), k must be less than or equal to n.</entry>
        <entry key="NoInputFileNameSpecified">The input file name must be specified.</entry>
        <entry key="FileNotFound">"File, {0} not found."</entry>
        <entry key="NotAMfile">The input file must be a ".m" file.</entry>
        <entry key="AttemptToModifyReadonlyWorkspace">Error: Attempt to modify read-only workspace.</entry>
        <entry key="UnsupportedOperation">Error: Operation not supported for the provided file {0}.</entry>
        <entry key="BadArguments">Error: Either the types and/or values of the arguments for the source position are bad.</entry>
        <entry key="LocalFunctionAssignmentEval">{0}Assignment to {1} not supported. Variable has the same name as a local function.</entry>
        <entry key="IndexingIntoLocalFunctionUsingAnEnd">Error: File: {1} Line: {0,number,integer}\nThe end operator must be used within an array index expression.</entry>
        <entry key="EndUsedOutsideIndexingExpression">The end operator must be used within an array index expression.</entry>
        <entry key="LocalFunctionAssignment">Error: File: {0} Line: {1,number,integer}\nAssignment to {2} not supported. Variable has the same name as a local function.</entry>
        <entry key="BreakpointInAnonymousFunctionInScript">Breakpoint must be in a named function and on a line that contains an anonymous function.</entry>
        <entry key="AnonymousFunctionIsInvalid">An anonymous function has been invalidated by a change to the MATLAB path or file deletion. Please recreate the function handle.</entry>
        <entry key="lineInOutOfSyncPFile">Setting or clearing breakpoints in out of sync P-code files is not supported.</entry>
        <entry key="BreakpointsNotRestored">MATLAB could not restore all breakpoints because file ''{0}'' was modified outside of the MATLAB editor.</entry>
        <entry key="BreakpointBeyondFileEnd">Setting or clearing a breakpoint beyond the end of a file is not supported.</entry>
        <entry key="AnonymousFunctionBreakpointUnplaceable">Unable to place a breakpoint on anonymous function due to an error parsing the file.</entry>
        <entry key="LocalFunctionBreakpointUneditable">Unable to place or clear a breakpoint on a local function due to an error parsing the file.</entry>
        <entry key="LineNumberTooLarge">Line numbers exceeding 2^32 are not supported.</entry>
        <entry key="InvalidLineNumber">Line number arguments must be positive scalar doubles of integral value.</entry>
        <entry key="InvalidLineNumberPair">The end of a section cannot precede its beginning.</entry>
        <entry key="InvalidSections">Specify file sections as a M-by-2 matrix of [begin, end] line number pairs.</entry>
        <entry key="DuplicateSections">Section [{0,number,integer}, {1,number,integer}] appears more than once.</entry>
        <entry key="OverlappingSections">Sections [{0,number,integer}, {1,number,integer}] and [{2,number,integer}, {3,number,integer}] partially overlap.</entry>
        <entry key="InvalidWorkspace">Specify a valid workspace string.</entry>
        <entry key="InvalidCallbackNumbers">Specify callbacks line numbers as a vector of positive doubles.</entry>
        <entry key="LineNumberBeyondFileEnd">Line numbers may not exceed the last expression.</entry>
        <entry key="SectionsHaveChanged">File sections may not change while a section is already running.</entry>
        <entry key="NotAFunctionHandle">Inputs to this function must be function handles.</entry>

        <!-- Added messages: front_end/name_resolver -->
        <entry key="GlobalVariableUsedBeforeDeclaration">The variable {0} must be declared as a global variable before any use.</entry>
        <entry key="NestedFunctionShadowedInEval">{0}Identifier ''{1}'' in the evaluated statement does not refer to the nested function. In a future release, using an identifier different to how it is used in the file will not be supported.</entry>
        <entry key="LocalFunctionShadowedInEval">{0}Identifier ''{1}'' in the evaluated statement does not refer to the local function. In a future release, using an identifier different to how it is used in the file will not be supported.</entry>
        <entry key="PoofedVariableShadowsLocalFunction">{0}Local function ''{1}'' in the evaluated statement is shadowed by a workspace variable. In a future release, the local function would be given preference.</entry>
        <entry key="ExternalShadowedInEval">{0}Identifier ''{1}'' in the evaluated statement does not refer to the external function. In a future release, using an identifier different to how it is used in the file will not be supported.</entry>
        <entry key="PoofedVariableShadowsExternal">{0}Function ''{1}'' in the evaluated statement is shadowed by a workspace variable. In a future release, the function would be given preference.</entry>
        <entry key="VariableShadowedInEval">{0}Identifier ''{1}'' in the evaluated statement does not refer to the variable. In a future release, using an identifier different to how it is used in the file will not be supported.</entry>
        <entry key="LocalFunctionAndVariableHaveSameName">Error: {0}Declaring a variable with the same name as the local function "{1}" is not supported in scripts.</entry>
        <entry key="ImportedFunctionAndVariableHaveSameName">Error: {0}Declaring a variable with the same name as the imported function "{1}" is not supported.</entry>
        <entry key="ImportedFunctionAndNestedFunctionHaveSameName">Error: {0}Importing a class or a function with the same name as that of a nested function "{1}" is not supported.</entry>
        <entry key="ImportedFunctionAndLocalFunctionHaveSameName">Error: {0}Importing a class or a function with the same name as that of a local function "{1}" is not supported.</entry>
        <entry key="BraceIndexingFunctionOrClass">Brace indexing into the result of a function call is not supported. Assign the result of ''{0}'' to a variable first, then brace index into it.</entry>
        <entry key="UnsupportedIndexingIntoImportedPackage">Error: {0}Indexing into imported packages is not supported. Use dot notation with "{1}" to access its public interface members.</entry>
        <entry key="DotIndexingFunctionRequiresParentheses">Dot indexing into the result of a function call requires parentheses after the function name. The supported syntax is ''{0}().{1}''.</entry>
        <entry key="BraceIndexingNotSupported">Unable to use curly braces to index into {0}.</entry>
        <entry key="ParenDotIndexingFunction">Error: {0}Indexing into the output of a function call is not supported.</entry>
        <entry key="AnsAsImportedFunctionOrClass">Error: {0}Using ans as the name of a function or a class in a namespace is not supported.</entry>
        <entry key="SharedVariablesDocId">Sharing Variables Between Parent and Nested Functions</entry>
        <entry key="IdentifierNotSharedVariableWithNestedScope">Error:{0}Identifier ''{1}'' is not a function or a shared variable. To share ''{1}'' with a nested function, initialize it in the current scope. For more information, see {2}.</entry>
        <entry key="Prepend" note="Hole{0} is filled by File: x Line: X Column X information and Hole{1} is filled by other messages from this catalog which do not have such a hole. e.g. BraceIndexingFunctionOrClass ">Error: {0}{1}</entry>
        <entry key="PrependWarning" note="Hole{0} is filled by File: x Line: X Column X information and Hole{1} is filled by other messages from this catalog which do not have such a hole. e.g. KeywordInImportArgumentWarning ">{0}{1}</entry>
        <entry key="ImportedPackageAndVariableHaveSameName">Error: {0}Variable "{1}" and imported package have the same name.</entry>
        <entry key="ImportedPackageAndNestedFunctionHaveSameName">Error: {0}Nested function "{1}" and imported package have the same name.</entry>
        <entry key="ImportedPackageAndLocalFunctionHaveSameName">Error: {0}Local function and imported package "{1}" have the same name.</entry>
        <entry key="PackageNotImportedAtCommandPrompt">Error: {0}Package "{1}" failed to import because using eval to import packages is not supported.</entry>

        <!-- Added messages: hex and binary -->
        <entry key="InvalidHexNumber">Error: {0}Invalid digit in hexadecimal literal. Supported hexadecimal digits are 0-9 and A-F. Supported type suffixes are u8, u16, u32, u64, and s8, s16, s32, s64.</entry>
        <entry key="InvalidHexTruncation">Error: {0}Hexadecimal literal has too many digits for specified or implied type suffix.</entry>
        <entry key="InvalidBinaryNumber">Error: {0}Invalid digit in binary literal. Supported binary digits are 0 and 1. Supported type suffixes are u8, u16, u32, u64, and s8, s16, s32, s64.</entry>
        <entry key="InvalidBinaryTruncation">Error: {0}Binary literal has too many digits for specified or implied type suffix.</entry>

        <!-- Added message: internal error -->
        <entry key="InternalError">MATLAB encountered an internal error processing {0}.  Keep a copy of this file and contact Technical Support with the following information.\n{1}</entry>
        <entry key="UnableToReadFile">Unable to read file ''{0}''.</entry>

        <!-- Added messages: matlab.lang.internal.move -->
        <!-- Feature is intended for internal developers only; this error message is not
             intended to be seen by customers. -->
        <entry key="UnsupportedMove">‘move’ can only be called using a variable from within a function.</entry>

        <!-- Added messages: front_end/parser and m_parser nvp -->
        <entry key="NameValueNotLast">Error: {0}Unsupported use of the '=' operator. To compare values for equality, use '=='. To pass name-value arguments using the name=value format, provide these arguments after all other inputs.</entry>
        <entry key="NameValueInBraceIndex">Error: {0}Unsupported use of the '=' operator. To compare values for equality, use '=='.</entry>
        <entry key="InvalidWhitespace">Error: {0}Invalid text character. The text ''{1}'' contains an unsupported non-ASCII whitespace character.</entry>
        <entry key="InvalidEqualsInParens">Error: {0}Unsupported use of the '=' operator. To compare values for equality, use '=='. To specify name-value arguments, check that name is a valid identifier with no surrounding quotes.</entry>
        <entry key="InvalidTrivialScript">Error: {0}Invalid file with only commas or semicolons outside of function definitions. To make it a valid function file, remove any commas and semicolons outside of the functions.</entry>

        <!-- Added message: CVE-2021-42574 ("Trojan Source") -->
        <entry key="UnsupportedUnicodeCharacter">Error: {0}Unicode explicit directional formatting characters are not supported.</entry>

        <!-- Added message: lang_foundation/import -->
        <entry key="InvalidImportArgument">Invalid import argument ''{0}''.</entry>
        <entry key="MixedImportType">Importing both a package and a fully-qualified name in the same command is not supported.</entry>
        <entry key="NamespaceWithAlias">Specifying an alias when importing from a namespace is not supported.</entry>
        <entry key="IncorrectNumberOfAlias">Invalid import syntax. Specify a single alias.</entry>
        <entry key="InvalidAliasName">Alias ''{0}'' must be a valid MATLAB identifier.</entry>
        <entry key="IncorrectNumberOfPackagesForAlias">Invalid import syntax. Specify a single package for the alias.</entry>
        <entry key="MultipleAsClauses">Invalid import syntax.</entry>
        <entry key="KeywordInImportArgument">Importing ''{0}'' is not supported because ''{1}'' is a reserved word.</entry>
        <entry key="PackageRedeclared">Unable to import ''{0}''. Package name already in use.</entry>
        <entry key="PrecedenceViolation">Unable to import ''{0}''. ''{1}'' already in use as a package name.</entry>
        <entry key="InvalidPackageFunctionAbbreviation">Using dot-syntax to import names from packages is not supported.</entry>
        <entry key="ImportArgumentWithoutDot">Argument to import should contain at least one dot.</entry>
        <entry key="MalformedImportArgumentWarning">Malformed import argument ''{0}'' will not be supported in a future release.</entry>
        <entry key="KeywordInImportArgumentWarning">Importing ''{0}'' will not be supported in a future release because ''{1}'' is a reserved word.</entry>

        <!-- Added messages: Improved Syntax Error Message Architecture, Phase 1 -->
        <entry key="AssignToReservedWord">Error: {0}Using the reserved word ''{1}'' as a variable name is not supported.</entry>
        <entry key="MisplacedTilde">Error: {0}Using ~ in this context is not supported.</entry>
        <entry key="ExpectedConditionalExpressionAfterElseif">Error:{0} Expected a conditional expression after ''elseif''.</entry>
        <entry key="ExpectedFunctionOutput">Error: {0}Missing output variable or extra ''=''.</entry>
        <entry key="ExpectedParameter">Error: {0}Unexpected '')''. Remove trailing comma or add an expression after the comma.</entry>

        <!-- Added messages: R2025a syntax error messages -->
        <entry key="UnexpectedSquareBracketOutsideOtherContext">Error: {0}Unexpected '['. When calling a function or indexing a variable, use parentheses.</entry>
        <entry key="MissingMultiplicationOperator">Error: {0}Unexpected ''{1}''. Check for missing multiplication operator.</entry>
        <entry key="DanglingRightDelimiter">Error: {0}Unmatched ''{1}''. Check for missing ''{2}''.</entry>
        <entry key="MatrixInitializedWithParen">Error: {0}Unexpected ''{1}'' in parentheses. When creating a matrix, use square brackets [].</entry>

        <!-- Added messages: MATLAB language snippets -->
        <entry key="ForLoopDescription">For loop to repeat specified number of times</entry>
        <entry key="IfStatementDescription">Execute statements if condition is true</entry>
        <entry key="IfElseStatementDescription">Execute some statements if condition is true, and others if statement is false</entry>
        <entry key="WhileLoopDescription">While loop to repeat when condition is true</entry>
        <entry key="TryCatchStatementDescription">Execute statements and catch resulting errors</entry>
        <entry key="SwitchStatementDescription">Execute one of several groups of statements</entry>
        <entry key="FunctionDefinitionDescription">Declare function name, inputs, and outputs</entry>
        <entry key="ClassDefinitionDescription">Defines a class</entry>
    </message>
</rsccat>
