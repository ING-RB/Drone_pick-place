<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright 2011-2024 The MathWorks, Inc. -->
<rsccat locale="en_US" product="MATLAB" version="1.0" decorate_cxx_names="true">
  <message>
    <entry key="InvalidEnumValue">''{0}'' is not a valid value. Use one of these values: {1}.</entry>
    <entry key="InvalidEnumValueFor">Invalid enum value. Use one of these values: {0}.</entry>
    <entry key="InvalidValue">Value cannot be empty. Use one of these values: {0}.</entry>
    <entry key="InvalidFiniteValue">Value must be a finite real number.</entry>
    <entry key="invalidLightingStrength">Value not a numeric scalar</entry>
    <entry key="invalidPositive">Value not a numeric scalar</entry>
    <entry key="invalidPositiveInteger">Value not a numeric scalar</entry>
    <entry key="invalidNoNaN">Value not a numeric scalar</entry>
    <entry key="invalidZeroToOne">Value not a numeric scalar</entry>
    <entry key="MustBeString">Input must be a string array.</entry>
    <entry key="OutOfMemory">Out of memory. Type "help memory" for your options.</entry>
    <entry key="OutsideRangeFiniteGreater0">Value should be a finite number greater than 0</entry>
    <entry key="OutsideRangeIntegerGreater0">Value should be an integer greater than 0</entry>
    <entry key="OutsideRange0to1">Value should be between 0 and 1</entry>
    <entry key="OutsideRangeNaN0to1">Value is NaN, or out of range 0.0 &lt;= value &lt;= 1.0</entry>
    <entry key="OutsideRangeValidNumber">Value should be a valid number</entry>
    <entry key="ParseException">Unable to parse value for {0}</entry>
    <entry key="superiorfloat">Inputs must be floats, namely single or double.</entry>
    <entry key="UnhandledMxArrayToStringConversion">Unable to convert MxArray to character vector.</entry>
    <entry key="InvalidZLocationValue">ZLocation value must be ''zmin'', ''zmax'', or a numeric scalar.</entry>
    <entry key="InvalidAnyLocation">Value must be 'right', 'top', 'left', 'bottom' or a finite number.</entry>
    <entry key="InvalidSeriesIndex">Value must be a non-negative integer scalar less than intmax, or 'none'.</entry>
    
    <!-- msgs for MTB datatypes utilities -->
    <entry key="AmbiguousChoice">Ambiguous input: ''{0}''.</entry>
    <entry key="InvalidTypeKeyHash">Unable to hash values of type ''{0}''. Values of type ''{0}'' are not supported as dictionary keys.</entry>
    <entry key="InvalidTypeKeyMatch">Invalid key type. Values of type ''{0}'' are not supported as dictionary keys.</entry>
      <entry key="UseIsRegularMethod">Undefined function 'isuniform' for input arguments of type ''{0}''. Use the ISREGULAR function to determine if the input {0} is regular with respect to time.</entry>

    <!-- codegen -->
      <entry key="MustBeCell">Input must be a cell.</entry>
      <entry key="MustBeCellstr">Input must be a cellstr vector.</entry>
      <entry key="MustBeVector">Input must be a vector.</entry>
      <entry key="MustBothBeVectors">Inputs must both be either row vectors or column vectors.</entry>

    <!-- fevalFunctionOnPath -->
      <entry key="FunctionNotFound">Unable to find the function ''{0}'' on the path.</entry>
  </message>
</rsccat>
