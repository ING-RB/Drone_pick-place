<?xml version="1.0"?>
<!-- Copyright 2020-2024 The MathWorks, Inc. -->
<rsccat version="1.0" locale="en_US" product="MATLAB">
  <message>
    <entry key="KeyValueDimsMustMatch">Dimensions of the key and value must be the same, or the value must be scalar.</entry>
    <entry key="AbstractClassCannotBeConfigured">Unable to configure dictionary with abstract type ''{0}''.</entry>
    <entry key="BraceOperationsNotSupported">Brace operations are not supported for dictionaries.</entry>
    <entry key="BraceReferenceOnNonCell">Using curly braces on a dictionary with ''{0}'' value type is not supported. The dictionary value type must be 'cell'.</entry>
    <entry key="CannotCreateTable">Unable to create table output. Specify the format option as "cell" or "struct".</entry>
    <entry key="CannotCombine">Unable to combine entry parts.</entry>
    <entry key="CannotCombineEntries" note="Hole 0 is filled with either MATLAB:dictionary:Keys or MATLAB:dictionary:Values">Unable to combine {0} of type ''{1}''. Specify the format option as "struct".</entry>
    <entry key="CannotCombineKeys">Unable to combine keys of type ''{0}''. Specify the format option as "cell".</entry>
    <entry key="CannotCombineValues">Unable to combine values of type ''{0}''. Specify the format option as "cell".</entry>
    <entry key="CannotCombineLookup">Unable to combine values of type ''{0}''. Look up each key separately.</entry>
    <entry key="CannotHash">Unable to hash type ''{0}''.</entry>
    <entry key="CannotMatchMultiple">Unable to match types ''{0}'' and ''{1}''.</entry>
    <entry key="CannotMatchSingle">Unable to match type ''{0}''.</entry>
    <entry key="CannotSliceKeys">Unable to use ''{0}'' as key for dictionary with ''{1}'' key type.</entry>
    <entry key="CannotSliceKeysSameType">Unable to use ''{0}'' as key.</entry>
    <entry key="CannotSliceValues">Unable to use ''{0}'' as value for dictionary with ''{1}'' value type.</entry>
    <entry key="CannotSliceValuesSameType">Unable to use ''{0}'' as value.</entry>
    <entry key="ColonInsertionNotSupported">Using a colon for insertion is not supported. To insert multiple entries, use an array of keys.</entry>
    <entry key="ColonLookupNotSupported">Using a colon for lookup is not supported. To look up multiple entries, use an array of keys or call the values or entries methods.</entry>
    <entry key="ColonRemovalNotSupported">Using a colon for removal is not supported. To remove multiple entries, use an array of keys.</entry>
    <entry key="ConversionInconsistent">Conversion from {0} to {1} did not return {1}.</entry>
    <entry key="DisplayAllEntries">Display all {0} entries.</entry>
    <entry key="DisplayAllEntriesTemporary">Unable to display variable because it no longer exists.</entry>
    <entry key="DisplayAllEntriesInvalidValue">Unable to display all entries for variable {0} because it is no longer a dictionary.</entry>
    <entry key="DisplayAllEntriesNoLongerExists">Unable to display variable {0} because it no longer exists.</entry>
    <entry key="EndNotSupported">'end' is not supported for dictionaries.</entry>
    <entry key="Entries" note="Used to fill hole 0 in UnconfiguredReturnNotSupported.">entries</entry>
    <entry key="FallbackValueMustBeScalar">FallbackValue value must be scalar.</entry>
    <entry key="IncorrectNumberOfInputs">Incorrect number of input arguments. Each key must be followed by a value.</entry>
    <entry key="InputMustBeDictionary">Input must be a dictionary.</entry>
    <entry key="InputMustBeScalarDouble">Input must be a scalar double.</entry>
    <entry key="KeyNotFound">Element {0,number,integer} of the key array not found.</entry>
    <entry key="Keys" note="Used to fill hole 0 in CannotCombineEntries and UnconfiguredReturnNotSupported.">keys</entry>
    <entry key="NonScalarDictionaryNotSupported">Nonscalar dictionaries are not supported. Use cell arrays instead.</entry>
    <entry key="ScalarKeyNotFound">Key not found.</entry>
    <entry key="TooManyInputsToParenAssign">Too many input arguments. To insert multiple entries, use an array of keys.</entry>
    <entry key="TooManyInputsToParenDelete">Too many input arguments. To remove multiple entries, use an array of keys.</entry>
    <entry key="TooManyInputsToParenReference">Too many input arguments. To look up multiple entries, use an array of keys.</entry>
    <entry key="TooManyInputsToBraceReference">Too many input arguments. To look up multiple entries, use an array of keys.</entry>
    <entry key="UnableToLoadDictionary">Unable to load dictionary variable.</entry>
    <entry key="UnableToLoadDictionaryVersion">Unable to load dictionary variable because it was saved in a later version of MATLAB.</entry>
    <entry key="UnconfiguredLookupNotSupported">Unable to perform a lookup in a dictionary with unset key and value types. Add entries to the dictionary.</entry>
    <entry key="UnconfiguredOperationNotSupported">Unable to perform operation on a dictionary with unset key and value types. Add entries to the dictionary.</entry>
    <entry key="UnconfiguredRemovalNotSupported">Unable to perform removal in a dictionary with unset key and value types. Add entries to the dictionary.</entry>
    <entry key="UnconfiguredReturnNotSupported">Unable to return {0} from a dictionary with unset key and value types. Add entries to the dictionary.</entry>
    <entry key="Uint64NotReturningUint64">Invalid hash code returned by keyHash. The hash code must be a uint64 scalar.</entry>
    <entry key="UnknownType">Unknown type ''{0}''. Dictionary could not be created.</entry>
    <entry key="UnsupportedFunctionality">Operation is not supported.</entry>
    <entry key="Values" note="Used to fill hole 0 in CannotCombineEntries and UnconfiguredReturnNotSupported.">values</entry>
    <entry key="WithManyEntries" note="Example: dictionary (double -> double) with 5 entries. Note that dictionary is a hotlinked class name."                                    >{0} {1} with {2,number,integer} entries:</entry>
    <entry key="WithManyEntriesContained" note="Example: {[dictionary (double -> double) with 5 entries]}. Note that dictionary is a hotlinked class name."                       >{0} {1} with {2,number,integer} entries</entry>
    <entry key="WithManyEntriesContainedNoTypes" note="Example: {[dictionary with 5 entries]}. Note that dictionary is a hotlinked class name."                                   >{0} with {1,number,integer} entries</entry>
    <entry key="WithOneEntry" note="Example: dictionary (double -> double) with 1 entry. Note that dictionary is a hard coded and hotlinked class name."                          >{0} {1} with 1 entry:</entry>
    <entry key="WithOneEntryContained" note="Example: {[dictionary (double -> double) with 1 entry]}. Note that dictionary is a hard coded and hotlinked class name."             >{0} {1} with 1 entry</entry>
    <entry key="WithOneEntryContainedNoTypes" note="Example: {[dictionary with 1 entry]}. Note that dictionary is a hard coded and hotlinked class name."                         >{0} with 1 entry</entry>
    <entry key="WithUnsetKeyAndValueTypes" note="Example: dictionary with unset key and value types. Note that dictionary is a hard coded and hotlinked class name."              >{0} with unset key and value types.</entry>
    <entry key="WithUnsetKeyAndValueTypesContained" note="Example: {[dictionary with unset key and value types]}. Note that dictionary is a hard coded and hotlinked class name." >{0} with unset key and value types</entry>
    <entry key="WithZeroEntries" note="Example: dictionary (double -> double) with no entries. Note that dictionary is a hard coded and hotlinked class name."                    >{0} {1} with no entries.</entry>
    <entry key="WithZeroEntriesContained" note="Example: {[dictionary (double -> double) with no entries]}. Note that dictionary is a hard coded and hotlinked class name."       >{0} {1} with no entries</entry>
    <entry key="WithZeroEntriesContainedNoTypes" note="Example: {[dictionary with no entries]}. Note that dictionary is a hard coded and hotlinked class name."                   >{0} with no entries</entry>
  </message>
</rsccat>
