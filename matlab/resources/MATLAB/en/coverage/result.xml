<?xml version="1.0" encoding="UTF-8" ?>
<!-- Copyright 2022-2023 The MathWorks, Inc. -->
<rsccat version="1.0" locale="en_US" product="MATLAB" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../../schema/msgcat.xsd">
  <message>
      <entry key="CheckIncompExecModes">matlab.coverage.Result objects are incompatible because they represent coverage results for different types of code.</entry>
      <entry key="CheckIncompCovMetrics">matlab.coverage.Result objects are incompatible because they represent coverage results for different coverage metrics.</entry>
      <entry key="UnsupportedDataType">Data type is not supported.</entry>
      <entry key="UnsupportedCodeCoverageCollector">Code coverage collector is not supported.</entry>
      <entry key="InvalidFileForCoverage">Coverage result is empty for {0} because the file is invalid.</entry>
      <entry key="CvtInvalidFieldDataType" note="internal message, should never happen" translate="false">The struct field name ''{0}'' must be of type ''{1}''.</entry>
      <entry key="CvtInvalidCellElementDataType" note="internal message, should never happen" translate="false">The cell array element must be of type ''{0}''.</entry>
      <entry key="CvtInvalidCellArrayIndex" note="internal message, should never happen" translate="false">Invalid cell array index ({0,number,integer}).</entry>
      <entry key="CvtInvalidSourcePosition" note="internal message, should never happen" translate="false">Invalid source position array.</entry>
      <entry key="CvtInvalidOBDDAndCondPosSize" note="internal message, should never happen" translate="false">The OBDD matrix size and the condition position array size must match.</entry>
      <entry key="CvtInvalidIndexFalseDecOutcome" note="internal message, should never happen" translate="false">Invalid index ({0,number,integer}) for the false outcome of the decision.</entry>
      <entry key="CvtInvalidIndexFalseCondOutcome" note="internal message, should never happen" translate="false">Invalid index ({0,number,integer}) for the false outcome of the condition.</entry>
      <entry key="CvtIncompatibleStaticAndDynamicData" note="internal message, should never happen" translate="false">The dynamic data is incompatible with the static data.</entry>
      <entry key="CvtErrorReadingCodeFile">Unable to read the contents of the file {0}: {1}.</entry>
      <entry key="EmptyFilenameOrCreationDate">matlab.coverage.Result object is invalid because either the Filename or CreationDate is invalid.</entry>
      <entry key="DispCovSummary">Coverage summary</entry>
      <entry key="DispNoCoverageElementsToShowCoverageSummary">N/A</entry>
      <entry key="DispGenHTMLReport">HTML report</entry>
      <entry key="DispGenHTMLMethod">use generateHTMLReport to generate an HTML report</entry>
      <entry key="DispCovSummaryMethod">Use {0} to retrieve information from the coverage results.</entry>
      <entry key="GenHTMLReportVariableMustExist">Unable to generate an HTML coverage report because the variable ''{0}'' no longer exists.</entry>
      <entry key="GenHTMLReportMustBeACovResult">Unable to generate an HTML coverage report because ''{0}'' is not a matlab.coverage.Result array.</entry>
      <entry key="GenHTMLReportStaleCovResults">Unable to generate an HTML coverage report because the variable ''{0}'' has changed.</entry>
      <entry key="InvalidMetricName">{0} is not a valid metric. Specify "statement" or "function" with MATLAB, and "statement", "function", "decision", "condition", or "mcdc" with the MATLAB Test toolbox.</entry>
      <entry key="TruncatedMetricSummaryWithoutMATLABTestLicense">Summary includes only statement and function coverage results because a MATLAB Test license could not be found.</entry>
  </message>
</rsccat>
