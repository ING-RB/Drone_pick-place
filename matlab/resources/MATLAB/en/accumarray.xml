<?xml version="1.0"?>
<!-- Copyright 2011-2024 The MathWorks, Inc. -->
<rsccat version="1.0" locale="en_US" product="MATLAB">
  <message>
    <entry key="badFillvalInput">Fifth input must be a numeric, logical, or char value, or a cell.</entry>
    <entry key="outputSizeTooLarge">Product of dimensions is greater than maximum integer.</entry>
    <entry key="nonPosIntIndValues">First input must contain positive integer subscripts.</entry>
    <entry key="subsValuesTooLarge">First input IND and third input SZ must satisfy ALL(MAX(IND)&lt;=SZ).</entry>
    <entry key="badIndValues">First input must contain numeric subscripts.</entry>
    <entry key="badClassValInputDfltFun">Function ''sum'' is not defined for values of class {0}.</entry>
    <entry key="pmaxsize">Maximum variable size allowed by the program is exceeded.</entry>
    <entry key="nonmatrixSparseOutput">First input may not have more than 2 columns for sparse output.</entry>
    <entry key="nonzeroFillvalSparseOutput">Fifth input must be the real {0} value zero for sparse output.</entry>
    <entry key="nondoubleValues">Input values for sparse accumulation must be double.</entry>
  <!--TODO: Remove 'nondoubleValues' in favor of 'nonfloatValues' once done (g3058741) -->
    <entry key="nonfloatValues">Input values for sparse accumulation must be double or single.</entry>
    <entry key="negSizeOfSparse">Sparse matrix sizes must be non-negative integers.</entry>
    <entry key="emptyNumericIndInput">First input must be a real, full, numeric matrix with at least one column.</entry>
    <entry key="emptyCellIndInput">First input must have at least one cell.</entry>
    <entry key="badCellIndInput">Cells of first input must contain real, full, numeric vectors of equal length.</entry>
    <entry key="badClassValInput">Second input must be a full numeric, logical, or char vector or scalar.</entry>
    <entry key="badSizeValInputMatInd">Second input must be a vector with one element for each row in the first input, or a scalar.</entry>
    <entry key="badSizeValInputCellInd">Second input must be a vector with the same number of elements as each cell in the first input, or a scalar.</entry>
    <entry key="badSzInputMatInd">Third input must be a full row vector with one element for each column of the first input.</entry>
    <entry key="badSzInputCellInd">Third input must be a full row vector with one element for each cell of the first input.</entry>
    <entry key="badSzInputVecInd">If the first input is a column vector, then the third input must be of the form [N 1].</entry>
    <entry key="badFunInput">Fourth input must be a function handle.</entry>
    <entry key="nonscalarOrSparseFillvalInput">Fifth input must be a full scalar.</entry>
    <entry key="badClassFillvalInput">Fifth input must be a numeric, logical, or char value, or a cell.</entry>
    <entry key="badIsSparseInput">Sixth input must be a logical scalar.</entry>
  <!--Resource entries for src/mathcore-->
    <entry key="badIndInput">First input must be a real, full, numeric matrix or a cell vector.</entry>
    <entry key="nonscalarFunOutput">The function ''{0}'' returned a non-scalar value.</entry>
    <entry key="sparseFunOutput">The function ''{0}'' returned a sparse value.</entry>
    <entry key="badFunOutputClass">The function ''{0}'' returned a value that was not numeric, logical, char, or a cell.</entry>
    <entry key="inconsistentFunOutput">The function ''{0}'' returned values that did not all have the same class.</entry>
    <entry key="inconsistentFillvalAndFunOutput">Fifth input and output from the function ''{0}'' did not have the same class.</entry>
  </message>
</rsccat>
