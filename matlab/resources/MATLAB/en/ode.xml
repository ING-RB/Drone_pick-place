<?xml version="1.0"?>
<!-- Copyright 2023-2024 The MathWorks, Inc. -->
<rsccat version="1.0" locale="en_US" product="MATLAB">
    <message>
        <entry key="IncompatibleSolver">Specified solver ({0}) is incompatible with specified options ({1}). Specify one or the other.</entry>
        <entry key="NarginODEFcn">ODEFcn must have at least 2 arguments and no more than 4 arguments. </entry>
        <entry key="SolverOptionsCannotBeModified">SolverOptions property cannot be modified when the Solver property is "auto", "stiff", or "nonstiff". Set the Solver property to "{0}" and try again.</entry>
        <entry key="SolverOptionsReset">SolverOptions property is reset to default settings when changing solvers.</entry>
        <entry key="InvalidSolutionInterval">The end points of the solution interval cannot contain NaN values.</entry>
        <entry key="IntervalMustContainInitialTime">The solution interval must contain the specified initial time.</entry>
        <entry key="UndefinedODEFcn">The ODEFcn property must be defined and non-empty for this operation.</entry>
        <entry key="UndefinedInitialValue">The InitialValue property must be defined and non-empty for this operation.</entry>
        <entry key="InvalidJacobian">Value of Jacobian property must be a function handle or a numeric matrix.</entry>
        <entry key="InvalidMassMatrix">Value of MassMatrix property must be a function handle or a numeric matrix.</entry>
        <entry key="DomainWarning">Solution is undefined outside the interval [{0},{1}].</entry>
        <entry key="NoCallbackFcn">The event response was specified as "callback", but no callback function was specified. The integration stopped at time={0}.</entry>
        <entry key="ResponseSizeMismatch">You can specify one response for all events, or you can specify a response for each event. The event function returned {0,number,integer} elements, but there are {1,number,integer} responses.</entry>
        <entry key="DirectionSizeMismatch">You can specify one direction for all events, or you can specify a direction for each event. The event function returned {0,number,integer} elements, but there are {1,number,integer} directions.</entry>
        <entry key="IntervalMustHavePositiveLength">The solution interval must contain at least one point other than the initial time.</entry>
        <entry key="NotEnoughPointsWithSingularMass">When a mass matrix is specified and could be singular, the solution interval must contain at least one point other than the initial time.</entry>
        <entry key="EndPointsInWrongOrder">The end point arguments to the solutionFcn method are in the wrong order. Try reversing them.</entry>
        <entry key="NoEventFcn">You must specify an event function before solving, or set the ode EventDefinition property to [].</entry>
        <entry key="LeftLimitReturned">The computed solution is discontinuous at t={0}. Solution output is the limit from the left.</entry>
        <entry key="RightLimitReturned">The computed solution is discontinuous at t={0}. Solution output is the limit from the right.</entry>
        <entry key="MinVersionIncompat">Unable to load {0} because it is incompatible with this version of MATLAB.</entry>
        <entry key="DefaultIncompat">{0} is incompatible with this version of MATLAB, setting to default.</entry>
        <entry key="IgnoredIncompat">Some fields were ignored because they are incompatible with this version of MATLAB.</entry>
        <entry key="OutputVarDimMismatch">Value of OutputVariables must be a vector with values between 1 and {0} inclusive.</entry>
        <entry key="RequestedAndRefine">Ignoring "Refine" argument because specific output times were requested.</entry>
        <entry key="NeedBetterY0">Initial conditions are inconsistent. Specify a better guess of consistent initial conditions.</entry>
        <entry key="CVODESMass">{0} does not support a mass matrix.</entry>
        <entry key="SenseNumParam">Parameters must be a numeric vector to perform a sensitivity analysis.</entry>
        <entry key="SenseParamEmpty">Parameters must be nonempty to perform a sensitivity analysis.</entry>
        <entry key="SenseBadParamIndex">ParameterIndices must be a vector of indices into the Parameters vector.</entry>
        <entry key="NonnegBadIndex">NonnegativeIndices must be a vector of indices specifying solution components.</entry>
        <entry key="MassAllZero">Mass matrix must have nonzero entries.</entry>
        <entry key="BadSensitivity">Sensitivity value must be of type odeSensitivity.</entry>
        <entry key="UnsupportedSolverSense">For sensitivity analysis, the Solver property value must be: "cvodesstiff", "cvodesnonstiff", or "idas".</entry>
        <entry key="BadReturnVectorSize">{0} returned a vector of size {1}. {0} must return a vector of size {2}.</entry>
        <entry key="BadReturnMatrixSize">{0} returned a matrix of size {1}. {0} must return a matrix of size {2}.</entry>
        <entry key="FunctionMustReturnMatrix">{0} must return a matrix.</entry>
        <entry key="FunctionMustReturnVector">{0} must return a vector.</entry>
        <entry key="FunctionReturnedComplex">{0} returned a complex value. The output of {0} must be real.</entry>
        <entry key="FunctionReturnedNonDouble">{0} must return values of type double.</entry>
        <entry key="MassAndNonneg">Option ''NonNegativeVariables'' ignored. For linearly implicit systems, the solver does not constrain the solution.</entry>
        <entry key="ODENarginStandard">ODE function must accept either two inputs f(t,y) or three inputs f(t,y,parameters).</entry>
        <entry key="ODENarginImplicit">ODE function must accept either three inputs f(t,y,yp) or four inputs f(t,y,yp,parameters).</entry>
        <entry key="MassImplicit">Value of EquationType must be "standard" to use a mass matrix.</entry>
        <entry key="JacobianCellSize">When value of Jacobian is a cell array, it must have two numeric elements representing dfdy and dfdyp.</entry>
        <entry key="SparsityCellSize">When value of Jacobian sparsity pattern is a cell array, it must have two numeric elements representing the patterns for dfdy and dfdyp.</entry>
        <entry key="InvalidSparsityPattern">Value of SparsityPattern must be a numeric matrix or, when EquationType is "fullyimplicit", a cell array.</entry>
        <entry key="InvalidImplicitVec">For {0}, Vectorization value must be a scalar or a 1-by-2 cell array.</entry>
        <entry key="EqnAndSolverCompat">EquationType "{0}" is not compatible with Solver "{1}". Setting EquationType to "{2}".</entry>
        <entry key="JacIncompatStandard">When the equation form is "standard", the Jacobian must be a function handle or matrix.</entry>
        <entry key="JacSparseIncompatStandard">When the equation form is "standard", the Jacobian sparsity pattern must be a matrix.</entry>
        <entry key="JacIncompatImplicit">When the equation form is "fullyimplicit", the Jacobian must be a function handle or a 1-by-2 cell array.</entry>
        <entry key="JacSparseIncompatImplicit">When the equation form is "fullyimplicit", the Jacobian sparsity pattern must be a 1-by-2 cell array.</entry>
        <entry key="JacIncompatFcn">When the equation form is "fullyimplicit" and Jacobian is a function handle, the function handle must return two outputs.</entry>
        <entry key="WrongSizeSlope">InitialValue and InitialSlope must have the same length, or InitialSlope must be empty.</entry>
        <entry key="VectorWrongLengthOrEmpty">{0} must be empty or a vector of length {1}.</entry>
        <entry key="NoOutputIC">Specify an output argument to create an ode object with the updated initial conditions.</entry>
        <entry key="ICAbsTolSize">AbsoluteTolerance must be either a scalar or a vector with the same number of elements as InitialValue.</entry>
        <entry key="ParameterVectorMustBeReal">Floating-point equation parameters vector must be real for the {0} solver. Either specify a real value or set "SeparateComplexParts" to "on".</entry>
        <entry key="InitialValueMustBeReal">Initial solution must be real for the {0} solver. Either specify a real value or set "SeparateComplexParts" to "on".</entry>
        <entry key="InitialSlopeMustBeReal">Initial slope must be real for the {0} solver. Either specify a real value or set "SeparateComplexParts" to "on".</entry>
        <entry key="JacobianMustBeReal">Jacobian must be real for the {0} solver. Either specify a real value or set "SeparateComplexParts" to "on".</entry>
        <entry key="SensitivityInitialValueMustBeReal">Initial sensitivity must be real for the {0} solver. Either specify a real value or set "SeparateComplexParts" to "on".</entry>
        <entry key="SensitivityInitialSlopeMustBeReal">Sensitivity initial slope must be real for the {0} solver. Either specify a real value or set "SeparateComplexParts" to "on".</entry>
        <entry key="MassMatrixMustBeReal">Mass matrix must be real for the {0} solver. Either specify a real value or set "SeparateComplexParts" to "on".</entry>
        <entry key="BadDelay">Delay definition must be an odeDelay object.</entry>
        <entry key="InvalidDelayDefinition">When the equation form is "delay", the delay definition must be specified.</entry>
        <entry key="InvalidICDelay">When the equation form is "delay", specify the solution history in the delay definition or the initial value.</entry>
        <entry key="InvalidHistory">Solution history specified in the delay definition must be nonempty.</entry>
        <entry key="InvalidValueDelayDDE23">Delay in y specified in the delay definition must be a numeric vector when the solver is dde23.</entry>
        <entry key="InvalidTimeIntervalDelay">When the equation form is "delay", the initial time must be less than the requested times.</entry>
        <entry key="InvalidHistoryFunction">History must return a numeric vector.</entry>
        <entry key="DelayEmpty">At least one delay must be nonempty when the solver is ddensd.</entry>
    </message>
</rsccat>