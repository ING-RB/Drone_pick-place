<?xml version="1.0"?>
<!-- Copyright 2022 The MathWorks, Inc. -->
<rsccat locale="en_US" product="MATLAB" version="1.0">
  <message>
    <entry key="Tool_GenerateCppInterfaceTask_Label">Generate C++ Interface</entry>
    <entry key="Tool_GenerateCppInterfaceTask_Description">Generate definition file for interfacing C++ library with MATLAB</entry>
    <entry key="TaskSummaryDefault">Generate definition file for C++ interface library{0}</entry>
    <entry key="TaskSummaryComplete">Generated library definition object and definition file for C++ interface library `{0}`</entry>
    <entry key="GenerateCppInterfaceTask_RunButton">Generate definition file</entry>
    <entry key="SetupSectionLabel" context="uistring">Select configuration</entry>
    <entry key="SelectCompilerLabel" context="uistring">C++ compiler</entry>
    <entry key="SelectCompilerLabelTooltip" context="uistring">A supported C++ compiler is required to generate a MATLAB C++ interface</entry>
    <entry key="SelectCompilerDropDownTooltip" context="uistring">Choose C++ compiler used to build library</entry>
    <entry key="SelectCompilerHelpTooltip" context="uistring">This selection changes your default compiler for all C++ applications in MATLAB</entry>
    <entry key="NoCompilerFoundLabel" context="uistring">No supported compiler found</entry>
    <entry key="PackageNameLabel" context="uistring">Name of interface library</entry>
    <entry key="PackageNameLabelTooltip" context="uistring">The interface library name is used to call the library from MATLAB</entry>
    <entry key="PackageNameEditFieldTooltip" context="uistring">The interface library name is used to call the library from MATLAB</entry>
    <entry key="InvalidPackageNameLabel" context="uistring">Not a valid MATLAB name</entry>
    <entry key="PackageNameEmptyLabel" context="uistring">Name cannot be empty</entry>
    <entry key="PackageNameInUseLabel" context="uistring">Interface library {0} is in use</entry>
    <entry key="PackageNameInUseCode" context="uistring">An interface library with name {0} is already in use. Choose another name or restart MATLAB.</entry>
    <entry key="FileWithPackageNameExistsLabel" context="uistring">A file with this name exists. Choose another name.</entry>
    <entry key="DefinitionFileExistsLabel" context="uistring">Definition file {0} exists.</entry>
    <entry key="DefinitionFileExistsCode" context="uistring">Definition file {0} exists. Select '''Overwrite existing definition files''' or rename interface library.</entry>
    <entry key="DefinitionFileExistsMultiPlatformCode" context="uistring">Definition file {0} exists. Select '''Overwrite existing definition files'''.</entry>
    <entry key="RestoreLibraryDefinitionMsg" context="uistring">Click this link to restore missing workspace variable for existing definition file {0}.</entry>
    <entry key="RestoreLibraryDefinition_linkname" context="uistring">Restore library definition workspace variable</entry>
    <entry key="RestoreLibraryDefinition_link" context="uistring" translate="false">&lt;a href="matlab: internal.matlab.desktop.commandwindow.executeCommandForUser(''''addpath(outputFolder);libraryDefinitionFromTask = feval(''''''''{0}'''''''');'''')"&gt;{1}&lt;/a&gt;</entry>
    <entry key="RequiredPlaceholder" context="uistring">* Required</entry>
    <entry key="OverwriteFilesCheckBox" context="uistring">Overwrite existing definition files</entry>
    <entry key="OverwriteFilesCheckBoxTooltip" context="uistring">Check to overwrite definition file{0}. All edits to the existing file are overwritten.</entry>
    <entry key="OutputFolderLabel" context="uistring">Output folder</entry>
    <entry key="OutputFolderLabelTooltip" context="uistring">Artifacts generated in this folder. Facilitates multiplatform configurations.</entry>
    <entry key="OutputFolderCustom" context="uistring">Select custom folder</entry>
    <entry key="OutputFolderBrowseMsg" context="uistring">Select output folder</entry>
    <entry key="SelectFilesSectionLabel" context="uistring">Select files</entry>
    <entry key="LibraryTypeLabel" context="uistring">Library type</entry>
    <entry key="LibraryTypeLabelTooltip" context="uistring">Type of library to call from MATLAB</entry>
    <entry key="HeaderOnlyLabel" context="uistring">Header-only</entry>
    <entry key="HeaderOnlyLabelTooltip" context="uistring">Library is completely defined by header files</entry>
    <entry key="HeaderAndLibraryLabel" context="uistring">Headers and compiled library files</entry>
    <entry key="HeaderAndLibraryLabelTooltip" context="uistring">Library is defined by combination of headers and compiled library files</entry>
    <entry key="HeaderAndSourceLabel" context="uistring">Headers and source files</entry>
    <entry key="HeaderAndSourceLabelTooltip" context="uistring">Library is defined by combination of headers and source files</entry>
    <entry key="CustomLabel" context="uistring">Custom file combination</entry>
    <entry key="CustomLabelTooltip" context="uistring">Custom combination of header, source, and/or compiled library files</entry>
    <entry key="HeaderFileExtensions" translate="false" context="uistring">(.h, .hpp, .hxx)</entry>
    <entry key="SourceFileExtensions" translate="false" context="uistring">(.cpp, .cxx, .c)</entry>
    <entry key="HeaderAndSourceFileExtensions" translate="false" context="uistring">(.h, .hpp, .hxx, .cpp, .cxx)</entry>
    <entry key="HeaderFilesLabel" context="uistring">Header</entry>
    <entry key="HeaderAndSourceFilesLabel" context="uistring">Header and source</entry>
    <entry key="InterfaceGenerationFilesLabel" context="uistring">{0} files {1}</entry>
    <entry key="InterfaceGenerationFilesLabelTooltip" context="uistring">Select files which declare all of the constructs to be included in your interface {0}</entry>
    <entry key="InterfaceGenerationFilesGenerateCode" context="uistring">Select files</entry>
    <entry key="IncludePathLabel" context="uistring">Include paths</entry>
    <entry key="IncludePathLabelTooltip" context="uistring">Specify paths of folders containing included header files</entry>
    <entry key="IncludePathNotRequiredCheckBox" context="uistring">Library does not require include paths</entry>
    <entry key="IncludePathNotRequiredCheckBoxTooltip" context="uistring">Check if library does not require include paths</entry>
    <entry key="IncludePathGenerateCode" context="uistring">Select include paths</entry>
    <entry key="MicrosoftLibraryExtensions" context="uistring">(.lib, .dll)</entry>
    <entry key="NonMicrosoftLibraryExtensions" context="uistring">(.lib)</entry>
    <entry key="MacLibraryExtensions" context="uistring">(.dylib)</entry>
    <entry key="LinuxLibraryExtensions" context="uistring">(.so)</entry>
    <entry key="LibrariesLabel" context="uistring">Compiled library files {0}</entry>
    <entry key="LibrariesLabelTooltip" context="uistring">Select compiled library files which provide the definitions for your C++ library {0}</entry>
    <entry key="LibrariesGenerateCode" context="uistring">Compiled library files are required for the selected library type ''{0}''. Either fill in compiled library files or change library type.</entry>
    <entry key="SourceFilesLabel" context="uistring">Supporting source files {0}</entry>
    <entry key="SourceFilesLabelTooltip" context="uistring">Select source files which provide the definitions for your C++ library</entry>    
    <entry key="SourceFilesGenerateCode" context="uistring">Supporting source files are required for the selected library type ''{0}''. Either fill in supporting source files or change library type.</entry>
    <entry key="FileBrowseMsg" context="uistring">Select one or multiple files</entry>
    <entry key="PathBrowseMsg" context="uistring">Select path</entry>
    <entry key="AdvancedOptionsSectionLabel" context="uistring">Specify optional C++ library settings</entry>
    <entry key="CLinkageCheckBox" context="uistring">Treat {0} files as C header files</entry>
    <entry key="CLinkageCheckBoxTooltip" context="uistring">Check to treat {0} files as C header files to avoid name mangling issues</entry>
    <entry key="ButtonAdd" context="uistring">Add</entry>
    <entry key="MacroIdentifierPlaceholder" context="uistring">Identifier</entry>
    <entry key="MacroFlagValuePlaceholder" context="uistring">Value (Optional)</entry>
    <entry key="DefinedMacrosLabel" context="uistring">Define macros for your library using the -D compiler flag</entry>
    <entry key="DefinedMacrosLabelTooltip" context="uistring">Macro definitions to use while parsing header files</entry>
    <entry key="DefinedMacrosEditFieldTooltip" context="uistring">Name of macro to define. Can contain alphanumeric characters and underscores. Cannot begin with a numeral.</entry>
    <entry key="UndefinedMacrosLabel" context="uistring">Undefine macros from your library using the -U compiler flag</entry>
    <entry key="UndefinedMacrosLabelTooltip" context="uistring">Macro cancellations to use while parsing header files</entry>
    <entry key="UndefinedMacrosEditFieldTooltip" context="uistring">Name of macro to cancel. Can contain alphanumeric characters and underscores. Cannot begin with a numeral.</entry>
    <entry key="AdditionalCompilerLabel" context="uistring">Additional compiler flags</entry>
    <entry key="AdditionalCompilerLabelTooltip" context="uistring">Append additional flags to the compiler flags during the generate and build steps</entry>
    <entry key="AdditionalLinkerLabel" context="uistring">Additional linker flags</entry>
    <entry key="AdditionalLinkerLabelTooltip" context="uistring">Append additional flags to the linker flags during the build steps</entry>
    <entry key="DefineOptionsSectionLabel" context="uistring">Specify optional definition configurations</entry>
    <entry key="TreatObjectPointerLabel" context="uistring">Object pointer definition</entry>
    <entry key="TreatObjectPointerLabelTooltip" context="uistring">MATLAB shape for C++ object pointers</entry>
    <entry key="TreatObjectPointerUndefined" context="uistring">Leave undefined</entry>
    <entry key="TreatObjectPointerUndefinedTooltip" context="uistring">Shape for object pointers must be manually defined in the library definition file</entry>
    <entry key="TreatObjectPointerScalar" context="uistring">Set to scalar</entry>
    <entry key="TreatObjectPointerScalarTooltip" context="uistring">Automatically treat all object pointers as scalars by defining shape as 1</entry>
    <entry key="TreatConstCharPointerLabel" context="uistring">Const character pointer definition</entry>
    <entry key="TreatConstCharPointerLabelTooltip" context="uistring">MATLAB shape and type for C++ const char* or const wchar_t *</entry>
    <entry key="TreatConstCharPointerUndefined" context="uistring">Leave undefined</entry>
    <entry key="TreatConstCharPointerUndefinedTooltip" context="uistring">Shape and MATLAB type for const char * must be manually defined in the library definition file</entry>
    <entry key="TreatConstCharPointerNullTerminated" context="uistring">Set to null-terminated C string</entry>
    <entry key="TreatConstCharPointerNullTerminatedTooltip" context="uistring">Automatically treat all const char * arguments as null-terminated C strings by defining MATLAB type as string and shape as nullTerminated</entry>
    <entry key="ReturnCArraysLabel" context="uistring">Array return type</entry>
    <entry key="ReturnCArraysLabelTooltip" context="uistring">Type returned to MATLAB to represent non-object C++ arrays</entry>
    <entry key="ReturnCArraysClibArray" context="uistring">C array</entry>
    <entry key="ReturnCArraysClibArrayTooltip" context="uistring">Convert C++ arrays to MATLAB clib array type (clib.array.*)</entry>
    <entry key="ReturnCArraysMATLABArray" context="uistring">MATLAB array</entry>
    <entry key="ReturnCArraysMATLABArrayTooltip" context="uistring">Convert C++ arrays to native MATLAB arrays</entry>
    <entry key="GenerateDocCheckBox" context="uistring">Generate documentation from C++ comments</entry>
    <entry key="GenerateDocCheckBoxTooltip" context="uistring">Generate documentation from comments in C++ files to display in MATLAB doc and help functions</entry>
    <entry key="DisplayResultsSectionLabel" context="uistring">Display results</entry>
    <entry key="VerboseCheckBox" context="uistring">Show unavailable constructs</entry>
    <entry key="VerboseCheckBoxTooltip" context="uistring">Show constructs not added to the interface</entry>
    <entry key="SummaryCheckBox" context="uistring">Show available constructs</entry>
    <entry key="SummaryCheckBoxTooltip" context="uistring">Show constructs added to the interface</entry>
    <entry key="FileSelectionErrorTitle" context="uistring">File selection error</entry>
    <entry key="DuplicateFileError" context="uistring">File ''{0}'' is already present in ''{1}''. Remove the file before adding the same in ''{2}''.</entry>
    <entry key="SelectFileOrPathBtnBrowse" context="uistring">Browse</entry>
    <entry key="SelectFileOrPathRequiredClick" context="uistring">* Required (Click Browse)</entry>
    <entry key="SelectFileOrPathOptionalClick" context="uistring">Optional (Click Browse)</entry>
    <entry key="SelectFileOrPathOptional" context="uistring">Optional</entry>
    <entry key="win64" translate="false" context="uistring">Windows</entry>
    <entry key="glnxa64" translate="false" context="uistring">Linux</entry>
    <entry key="maci64" translate="false" context="uistring">Maci</entry>
    <entry key="maca64" translate="false" context="uistring">Maca</entry>
    <entry key="NewPlatformTabName" context="uistring">New platform</entry>
    <entry key="TabGroupTooltip" context="uistring">Tabs contain platform specific configurations</entry>
    <entry key="ExistingPlatformTabTooltip" context="uistring">{0} computer configuration</entry>
    <entry key="LibraryStartPathLabel" context="uistring">Library start path</entry>
    <entry key="LibraryStartPathLabelTooltip" context="uistring">Starting path is substituted with ''{0}'' in selected files. Facilitates multiplatform configurations and shortens path names in selected files.</entry>
    <entry key="LibraryStartPathTextTooltip" context="uistring">Optional when publishing on only one platform. Otherwise, set the starting path for your C++ library. It shortens the absolute paths and transfers portable data when configuring other platforms.</entry>
    <entry key="LibraryStartPathBrowseMsg" context="uistring">Select the library start path</entry>
    <entry key="ConfirmChangingStartPathTitle" context="uistring">Start path used in selected files</entry>
    <entry key="ConfirmChangingStartPathPrompt" context="uistring">Changing the start path removes existing ''{0}'' entries in header files, header and source files, compiled library files and include paths. Do you want to continue to change the start path?</entry>
    <entry key="ConfirmChangingStartPathBtnChange" context="uistring">Change start path</entry>
    <entry key="ConfirmBtnCancel" context="uistring">Cancel</entry>
    <entry key="PlatformAlreadyExistsActionMsg" context="uistring">Live task configured for another platform.\nClick ''Create new platform'' to configure current platform.</entry>
    <entry key="PlatformAlreadyExistsWarnTitle" context="uistring">New platform warning</entry>
    <entry key="PlatformConfirmBtnNewPlatform" context="uistring">Create new platform</entry>
    <entry key="OutputFolderActionMsg" context="uistring">Selected output folder does not end with ''{0}''.  It is recommended that output folders end with an architecture name when multiple architectures are supported.</entry>
    <entry key="OutputFolderWarnTitle" context="uistring">Multiple architectures output folder warning</entry>
    <entry key="OutputFolderConfirmBtnCreate" context="uistring">Create {0} folder</entry>
    <entry key="OutputFolderBtnCancel" context="uistring">Use existing output folder</entry>
    <entry key="PlatformNotConfiguredCode" context="uistring">Live task not configured for current platform</entry>
    <entry key="WorkflowScripNameSelectiontTitle" context="uistring">Specify workflow script name</entry>
  </message>
</rsccat>