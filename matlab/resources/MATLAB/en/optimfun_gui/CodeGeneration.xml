<?xml version="1.0"?>
<!-- Copyright 2020 The MathWorks, Inc. -->
<rsccat locale="en_US" product="MATLAB" version="1.0">
  <message>
    <!-- Fcn Templates -->
    <!-- Shared -->
    <entry key="Example" note="this is a comment of generated code, this introduces example code in the comments below it">Example:</entry>
	<entry key="EditCodeComment" note="this appears as comments of a function file">Edit the lines below with your calculation</entry>
	<!-- singleObj-->
	<entry key="singleObjExampleProblem" note="this appears as comments of a function file">Minimize Rosenbrock's function</entry>
    <entry key="singleObjHeaderCode" note="auto-generated code" translate="false">function f = objectiveFcn(optimInput)</entry>
    <entry key="singleObjVariableCode" note="auto-generated code" translate="false">x = optimInput(1)\ny = optimInput(2)</entry>
	<entry key="singleObjExampleCode" note="auto-generated code" translate="false">f = 100*(y - x^2)^2 + (1 - x)^2</entry>
	<!-- nlsqObj-->
	<entry key="nlsqObjExampleProblem" note="this appears as comments of a function file">Minimize ||F(x,y,z)||^2 where</entry>
    <entry key="nlsqObjHeaderCode" note="auto-generated code" translate="false">function F = lsqnonlinObjFcn(optimInput)</entry>
    <entry key="nlsqObjVariableCode" note="auto-generated code" translate="false">x = optimInput(1)\ny = optimInput(2)\nz = optimInput(3)</entry>
	<entry key="nlsqObjExampleCode" note="auto-generated code" translate="false">F(1) = x^2 + y*z\nF(2) = sin(x + 2*y - 3*z)</entry>
	<!-- lsqCfObj-->
	<entry key="lsqCfObjExampleProblem" note="this appears as comments of a function file">Minimize ||F(c1,c2,lambda1,lambda2,xdata) - ydata||^2 where xdata is a k-length vector and</entry>
    <entry key="lsqCfObjHeaderCode" note="auto-generated code" translate="false">function F = lsqcurvefitObjFcn(optimInput,xdata)</entry>
    <entry key="lsqCfObjVariableCode" note="auto-generated code" translate="false">c1 = optimInput(1)\nc2 = optimInput(2)\nlambda1 = optimInput(3)\nlambda2 = optimInput(4)</entry>    
  	<entry key="lsqCfObjExampleCode" note="auto-generated code" translate="false">F(k) = c1*exp(-lambda1*xdata(k)) + c2*exp(-lambda2*xdata(k))</entry>
	<!-- fsolveObj-->
	<entry key="fsolveObjExampleProblem" note="this appears as comments of a function file">Solve F(x,y) = 0 where</entry>
    <entry key="fsolveObjHeaderCode" note="auto-generated code" translate="false">function F = fsolveEqnFcn(optimInput)</entry>
    <entry key="fsolveObjVariableCode" note="auto-generated code" translate="false">x = optimInput(1)\ny = optimInput(2)</entry>    
	<entry key="fsolveObjExampleCode" note="auto-generated code" translate="false">F(1) = exp(-exp(-x-y)) - y*(1 + x^2)\nF(2) = x*cos(y) + x*sin(x) - 1/2</entry>
	<!-- surrogateObj-->
	<entry key="surrogateObjExampleProblem" note="this appears as comments of a function file">Minimize Rosenbrock's function</entry>
    <entry key="surrogateObjHeaderCode" note="auto-generated code" translate="false">function f = objConstrFcn(optimInput)</entry>
    <entry key="surrogateObjVariableCode" note="auto-generated code" translate="false">x = optimInput(1)\ny = optimInput(2)</entry>    
	<entry key="surrogateObjExampleCode" note="auto-generated code - added character in UTF-8 format" translate="false">100*(y - x^2)^2 + (1 - x)^2\nsubject to\n(x - 1/3)^2 + (y - 1/3)^2 &#60;= (1/3)^2</entry>
	<!-- multiObj-->
	<entry key="multiObjExampleProblem" note="this appears as comments of a function file">Minimize F(x,y) where</entry>
    <entry key="multiObjHeaderCode" note="auto-generated code" translate="false">function F = multiObjFcn(optimInput)</entry>
    <entry key="multiObjVariableCode" note="auto-generated code" translate="false">x = optimInput(1)\ny = optimInput(2)</entry>        
	<entry key="multiObjExampleCode" note="auto-generated code" translate="false">F(1) = x^2 + y^2\nF(2) = 2 + 0.5*((x-2)^2 + (y+1)^2)</entry>
	<!-- scalarFcnObj-->
	<entry key="scalarFcnObjExampleProblem" note="this appears as comments of a function file">Minimize sin(x) for scalar x in a closed range</entry>
    <entry key="scalarFcnObjHeaderCode" note="auto-generated code" translate="false">function f = fminbndObjFcn(x)</entry>
    <entry key="scalarFcnObjVariableCode" note="Expected to be empty. Auto-generated code" translate="false"></entry>        
    <entry key="scalarFcnObjExampleCode" note="auto-generated code" translate="false">f = sin(x)</entry>
	<!-- scalarEqObj-->
	<entry key="scalarEqObjExampleProblem" note="this appears as comments of a function file">Find cos(x) = 0, for scalar x</entry>
    <entry key="scalarEqObjHeaderCode" note="auto-generated code" translate="false">function f = fzeroEqnFcn(x)</entry>
    <entry key="scalarEqObjVariableCode" note="Expected to be empty. Auto-generated code" translate="false"></entry>        
    <entry key="scalarEqObjExampleCode" note="auto-generated code" translate="false">f = cos(x)</entry>
	<!-- nonlConstr-->
	<entry key="nonlConstrExampleProblem" note="this appears as comments of a function file">Constrain a solution to the region</entry>
    <entry key="nonlConstrHeaderCode" note="auto-generated code" translate="false">function [c,ceq] = constraintFcn(optimInput)</entry>
    <entry key="nonlConstrVariableCode" note="auto-generated code" translate="false">x = optimInput(1)\ny = optimInput(2)</entry>            
	<entry key="nonlConstrExampleCode" note="auto-generated code - added character in UTF-8 format" translate="false">x^2 + y^2 &#60;= 5\nx^2 + y^2 &#62;= 2\ny = x^3</entry>
    <entry key="nonlConstrExtraComments" note="this appears as comments of a function file">Note, if no inequality constraints, specify c = []\nNote, if no equality constraints, specify ceq = []</entry>
    <entry key="nonlConstrRunnableCode" note="auto-generated code" translate="false">c(1) = x^2 + y^2 - 5\nc(2) = 2 - x^2 - y^2\nceq = y - x^3</entry>    
	<!-- FunctionInput -->
	<entry key="anonymousFcnComment" note="this appears as comments of generated code">% Pass fixed parameters to</entry>
	<entry key="ObjectiveFcn" note="auto-generated code" translate="false">objfun</entry>
	<entry key="NonlinearConstraintFcn" note="auto-generated code" translate="false">confun</entry>
	
	<!-- Code Comments -->
	<entry key="solveComment" note="this appears as comments of generated code">% Solve</entry>
	<entry key="clearComment" note="this appears as comments of generated code">% Clear variables</entry>
	<entry key="OptionsComment" note="this appears as comments of generated code">% Set nondefault solver options</entry>
	
	<!-- Generated Code Messages -->
	<entry key="selectMessage" note="this appears as part of generated code">Please select:</entry>
	<entry key="objFcnFixedInputs" note="this appears as part of generated code">All objective function fixed inputs</entry>
	<entry key="nonlconFcnFixedInputs" note="this appears as part of generated code">All nonlinear constraint function fixed inputs</entry>
	
	<!-- CodeGenOutputs -->
	<entry key="solverOutput1" translate="false">solution</entry>
	<entry key="solverOutput2" translate="false">objectiveValue</entry>
	
	<!-- Summary -->
	<entry key="unsetSummary" context="uistring" note="this appears as a summary title of a live editor task">Minimize a function with or without constraints</entry>
	<entry key="setSummary" context="uistring" note="this appears as a summary title of a live editor task">Minimize {0} using {1} solver</entry>
	<entry key="fgoalattainSummary" context="uistring" note="this appears as a summary title of a live editor task">Minimize norm({0} - {1}, Inf) using `fgoalattain` solver</entry>
	<entry key="fminimaxSummary" context="uistring" note="this appears as a summary title of a live editor task">Minimize max({0}) using `fminimax` solver</entry>
	<entry key="fsolveSummary" context="uistring" note="this appears as a summary title of a live editor task">Solve {0} using `fsolve` solver</entry>
	<!-- Used for linprog, intlinprog, and coneprog -->
	<entry key="linprogSummary" context="uistring" note="this appears as a summary title of a live editor task">Minimize {0}'*x using {1} solver</entry>
	<entry key="lsqcurvefitSummary" context="uistring" note="this appears as a summary title of a live editor task">Minimize norm({0} - {1})^2 using `lsqcurvefit` solver</entry>
	<!-- Used for lsqlin and lsqnonneg -->
	<entry key="llsSummary" context="uistring" note="this appears as a summary title of a live editor task">Minimize norm({0}*x - {1})^2 using {2} solver</entry>
	<entry key="lsqnonlinSummary" context="uistring" note="this appears as a summary title of a live editor task">Minimize norm({0})^2 using `lsqnonlin` solver</entry>
	<entry key="quadprogSummary" context="uistring" note="this appears as a summary title of a live editor task">Minimize 0.5*x'*{0}*x + {1}'*x using `quadprog` solver</entry>
  </message>
</rsccat>
