<?xml version="1.0"?>
<!-- Copyright 2011-2021 The MathWorks, Inc. -->
<rsccat version="1.0" locale="en_US" product="MATLAB">
  <message>
    <entry key="missingOutputArg">Second output argument missing for indexed image.  When you resize an indexed image, imresize by default calculates a new colormap, which is returned as a second output argument.  You can fix the problem by calling imresize this way:\n    [Y,newmap] = imresize(X,map,...)\nOr you can resize using the original colormap using this syntax:\n    Y = imresize(X,map,...,''Colormap'',''original'',...)</entry>
    <entry key="badSyntaxMissingImage">Invalid input syntax; input image missing from argument list.</entry>
    <entry key="badSyntaxUnrecognizedInput">Invalid input syntax; input argument # {0,number,integer} is unrecognized</entry>
    <entry key="badScaleOrSize">Invalid scale or size input argument.</entry>
    <entry key="unrecognizedMethodString">Unrecognized method: {0}</entry>
    <entry key="ambiguousMethodString">Ambiguous method: {0}</entry>
    <entry key="oldSyntaxesIgnored" translate="false" note="TranslateFalseBatch;">{0}\n{1}</entry>
    <entry key="oddNumberArgs">Function IMRESIZE expected an even number of parameter/value arguments.</entry>
    <entry key="expectedParamString" >Expected input argument to be a parameter string or character vector: argument number {0,number,integer}</entry>
    <entry key="unrecognizedParamString" >Unrecognized parameter: {0}</entry>
    <entry key="ambiguousParamString" >Ambiguous parameter: {0}</entry>
    <entry key="invalidScale">SCALE must be a scalar or a two-element vector of positive values.</entry>
    <entry key="badColormapOption">COLORMAP must be either ''optimized'' or ''original''.</entry>
    <entry key="badDitherOption">DITHER must be true or false.</entry>
    <entry key="badOutputSize">OUTPUTSIZE must be a two-element vector of positive values.</entry>
    <entry key="badMethod">Invalid METHOD.</entry>
    <entry key="badMethodForCategorical">Invalid METHOD. METHOD must be 'nearest' or 'box' for categorical inputs.</entry>
    <entry key="badAntialiasing">ANTIALIASING must be true or false.</entry>
    <entry key="missingScaleAndSize">Either scale or output size must be specified.</entry>
    <entry key="zeroOutputSize">Specified output size cannot contain a zero.</entry>
    <entry key="allNaN">Specified output size cannot contain two NaNs.</entry>
    <entry key="inputTooSmall">Input is too small for bilinear or bicubic method; using nearest-neighbor method instead.</entry>
    <entry key="invalidInputs">Invalid input arguments.</entry>
    <entry key="invalidScaleFactor">M must be either a scalar multiplier or a 1-by-2 size vector.</entry>
    <entry key="unrecognizedInterpolationMethod">Unknown interpolation method: {0}</entry>
    <entry key="ambiguousInterpolationMethod">Ambiguous interpolation method: {0}</entry>
    <entry key="expectedString" >Interpolation method has to be a string or a character vector.</entry>
    <entry key="invalidFilterOrder">Filter order has to be a non-negative integer, not {0}.</entry>
    <entry key="expected2DFilter">Filter has to be a 2-D array.</entry>
    <entry key="tooManyOutputSizeSpecificationsForCodegen">IMRESIZE does not support multiple specification of scale or output size in code generation.</entry>
    <entry key="unsupportedCategoricalSyntax">IMRESIZE does not support categorical input with indexed image syntax.</entry>
    <entry key="unsupportedGPUIndexedImages">IMRESIZE does not support gpuArray input with indexed image syntax.</entry>
    <entry key="unsupportedNVPairForCategorical">IMRESIZE does not support {0} option with a categorical input.</entry>
    <entry key="invalidAntialiasingForCategorical">ANTIALIASING  cannot be set to true for a categorical input.</entry>
    <entry key="invalidOutputSize">When the second argument is a 1-by-3 vector, IMRESIZE interprets it as an M-by-3 colormap. If you intend to specify an output size, use the syntax: imresize(A,___,'OutputSize',SZ) where SZ is a 1-by-2 vector.</entry>
  </message>
</rsccat>
