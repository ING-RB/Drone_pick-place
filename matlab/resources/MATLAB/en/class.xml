<?xml version="1.0" encoding="UTF-8" ?>
<!-- Copyright 2011-2025 The MathWorks, Inc. -->
<rsccat version="1.0" locale="en_US" product="MATLAB" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="..\..\schema\msgcat.xsd" decorate_cxx_names="1">
    <message>
        <!-- Content from UDD -->
        <entry key="AmbiguousEnumValue">The ''{0}'' name is ambiguous.</entry>
        <entry key="AmbiguousEventException">The ''{0}'' event name is ambiguous in the ''{1}'' class.</entry>
        <entry key="AmbiguousNameException">Name is ambiguous.</entry>
        <entry key="AmbiguousPropertyException">The ''{0}'' property name is ambiguous in the ''{1}'' class.</entry>
        <entry key="ApplicationRedefined">The application named ''{0}'' already exists.</entry>
        <entry key="ClassRedefined">The class named ''{0}'' already exists.</entry>
        <entry key="ConstructionArgument">Invalid construction arguments for ''{0}'' class.</entry>
        <entry key="ConstructorMissingArg">The {0} constructor requires {1}.</entry>
        <entry key="DatabaseRedefined">The database named ''{0}'' already exists.</entry>
        <entry key="DefaultAccess">Unable to set a default value for the ''{0}'' property.</entry>
        <entry key="EmptyParamCell">Empty cells are not allowed in a cell array of parameter names.</entry>
        <entry key="FactoryValueUndefined">The ''{0}'' property does not have a factory default value.</entry>
        <entry key="IndexRange">The index ({0,number,integer}) is out of range for the ''{1}'' property.</entry>
        <entry key="IndexedAccess">Unable to index into the ''{0}'' property value.</entry>
        <entry key="InterfaceLocked">Attempt to write a locked object.</entry>
        <entry key="InvalidArg">{0} argument must be {1}.</entry>
        <entry key="InvalidEvent">There is no ''{0}'' event in the ''{1}'' class.</entry>
        <entry key="InvalidEnumValue">There is no enumerated value named ''{0}''.</entry>
        <entry key="MustBeEnumeration">Input argument must be an enumeration member or an enumeration class name.</entry>
        <entry key="InvalidTraversal">BACKWARD direction is only permitted for DEPTH_ONLY traversals.</entry>
        <entry key="MatlabConversion">The ''{0}'' type does not support conversion from MATLAB arrays.</entry>
        <entry key="NoSuchElement">No such element</entry>
        <entry key="NonCurrentCommit">Only the current transaction can be committed.</entry>
        <entry key="OverrideTypeNotFound">Unable to find data type base class: {0}.</entry>
        <entry key="ReadOnlyClass">The ''{0}'' class can''t be modified (instances of the class may exist).</entry>
        <entry key="ReservedProperty">The ''{0}'' property name is reserved by the {1} class.</entry>
        <entry key="StructSet">Objects must all be instances of the same class.</entry>
        <entry key="SetOpNoConstruct">Can not instantiate a handle.SetOp</entry>
        <entry key="InvalidEnumString">Invalid enumerated character vector</entry>
        <entry key="SubPropNoConstruct">Can''t instantiate a subproperty.</entry>
        <entry key="UnknownProp">Unknown property.</entry>
        <entry key="PackageNeedsName">The schema.package constructor requires a name.</entry>
        <entry key="ClassNeedsName">The schema.class constructor requires a namespace and a class name.</entry>
        <entry key="InvalidPackageHandle">Invalid namespace handle.</entry>
        <entry key="EmptyClass">Class name must not be empty.</entry>
        <entry key="InvalidSuperclass">Invalid superclass handle.</entry>
        <entry key="TooManyClassArgs">Too many schema.class constructor arguments.</entry>
        <entry key="EmptyEnum">Enumerated character vectors must not be empty.</entry>
        <entry key="NonUniqueEnum">Enumerated character vectors must be (case insensitive) unique.</entry>
        <entry key="UnknownEvent">Unknown event.</entry>
        <entry key="EventNeedsName">The schema.event constructor requires a class and a name.</entry>
        <entry key="InvalidEventParent">Invalid parent class.</entry>
        <entry key="UnknownMethod">Unknown method.</entry>
        <entry key="MethodNeedsName">The method name must be specified.</entry>
        <entry key="InvalidMethodParent">Invalid parent class.</entry>
        <entry key="InvalidMethodOption">Invalid option.</entry>
        <entry key="UnknownProperty">Unknown property.</entry>
        <entry key="PropConstructorArgs">The schema.prop constructor requires a parent, a name, and a type.</entry>
        <entry key="PropInvalidParentClass">Invalid parent class or object.</entry>
        <entry key="PropInvalidDataType">Invalid data type.</entry>
        <entry key="EmptyPropName">Property name must not be empty.</entry>
        <entry key="PropNameInUse">Property name already in use by this class or one of its superclasses.</entry>
        <entry key="SaveobjInvalidObj">Invalid type object passed to saveobj method.</entry>
        <entry key="UnknownType">Unknown type.</entry>
        <entry key="CannotConstruct">The specified class can not be instantiated.</entry>
        <entry key="InvalidEventName">Invalid event name.</entry>
        <entry key="ConnectRightEmpty">An object can not be connected to the right of nothing.</entry>
        <entry key="ConnectLeftEmpty">An object can not be connected to the left of nothing.</entry>
        <entry key="ConnectRequireParent">When connecting left or right, the object being connected to must have a parent.</entry>
        <entry key="CannotCopyObj">The object can not be copied.</entry>
        <entry key="ModifyGet">The GetFunction for this property can not be modified.</entry>
        <entry key="ModifySet">The SetFunction for this property can not be modified.</entry>
        <entry key="MustCommitBeforeRedo">A transaction must be committed before it can be redone.</entry>
        <entry key="MustCommitBeforeUndo">A transaction must be committed before it can be undone.</entry>
        <entry key="GetDenied">Getting the ''{0}'' property of {1} is not allowed.</entry>
        <entry key="SetDenied">Changing the ''{0}'' property of {1} is not allowed.</entry>
        <entry key="IllegalPropertyName">Property names must begin with a letter and be composed of letters, numbers, and underscores.</entry>
        <entry key="WrongObjectType">Expected an object belonging to class: {0}.</entry>
        <entry key="ClassInstancesExist">Objects of {0} class exist - not clearing this class or any of its superclasses</entry>
        <entry key="errorParsingClass">an error occurred while parsing class {0}.{1}:\n{2}\n</entry>
        <!-- udd_mi -->
        <entry key="IntOutOfRange">Value out of range or not an integer</entry>
        <entry key="StringExpected">Expected a string or character vector.</entry>
        <entry key="GetJavaInterfacesMethodStringReturnExpected">getJavaInterfaces method of class ''{0}'' must return string array</entry>
        <entry key="IncompatibleJavaClass">Object belongs to an incompatible Java class.</entry>
        <entry key="ExpectedNumericVector">Expected a numeric vector.</entry>
        <entry key="ExpectedNumericMatrix">Expected a numeric matrix.</entry>
        <entry key="ExpectedString">Expected a character vector, string vector, or cellstr vector.</entry>
        <entry key="CallOnInvalidObj">Attempt to invoke method on invalid object.</entry>
        <entry key="JavaConstructorErr">Error calling Java constructor.</entry>
        <entry key="NoNewClassesInJavahandle">New classes can not be added to the javahandle package.</entry>
        <entry key="CannotConvertFromJava">Can''t create handle object for given java object.</entry>
        <entry key="MustBeCallback">Value must be a character vectors, a function handle, or a cell array containing character vectors or function handles.</entry>
        <entry key="ListenerNeedsName">handle.listener constructor requires a name.</entry>
        <entry key="WrongNumberOfConstructorArgs">Wrong number of constructor arguments.</entry>
        <entry key="JavaAdapterError">Can''t initialize Java Adapter interface for handle objects.</entry>
        <entry key="ConstructorError">Class constructor failed or class not found.</entry>
        <entry key="NoBaseType">The given base type does not exist.</entry>
        <entry key="BaseTypeMustConvert">The base type must be support conversion to and from MATLAB arrays.</entry>
        <entry key="UserTypeRequireFunctionHandle">The third argument must be a function handle.</entry>
        <entry key="WrongJavaClass">Wrong Java class.</entry>
        <entry key="MustBeScalar">Parameter must be scalar.</entry>
        <entry key="MustBeReal">Parameter must be real.</entry>
        <entry key="MustBeNumber">Parameter must be a number.</entry>
        <entry key="MustBeFinite">Parameter must be finite.</entry>
        <entry key="MustBeNumeric">Array must be numeric or logical.</entry>
        <entry key="MustBeRGB">RGB vector contains NaN, or element out of range 0.0 &lt;= value &lt;= 1.0</entry>
        <entry key="MustBeNonEmptyString">Parameter must be a non-empty character vector.</entry>
        <entry key="MustBe0or1">Parameter must be 0 or 1.</entry>
        <entry key="MustBeChar">Parameter must be a char.</entry>
        <entry key="GetMustReturnValue">GetFunction must return a value.</entry>
        <entry key="InvalidGetFcn">GetFunction must be a valid function handle.</entry>
        <entry key="SetMustReturnValue">SetFunction must return a value.</entry>
        <entry key="InvalidSetFcn">SetFunction must be a valid function handle.</entry>
        <entry key="MustBeVector">Matrix must be column or row vector.</entry>
        <entry key="MustBeCellStrings">Cell array of character vectors may only contain character vectors and numeric matrices.</entry>
        <entry key="MustBeCellStringsParameter">Parameter must be a cell array of character vectors.</entry>
        <entry key="InvalidCellStrings">Invalid cell array of character vectors.</entry>
        <entry key="MustBe1xN">Matrix must be 1xN.</entry>
        <entry key="MustBeOnOff">Parameter must be ''on'' or ''off''.</entry>
        <entry key="MustBeOnOffScalar">Parameter must be a scalar {0} enumeration member.</entry>
        <entry key="Point2Elements">Point must have two elements</entry>
        <entry key="MustBe2or3Vector">Array must have 2 or 3 elements.</entry>
        <entry key="MustBe2Vector">Parameter must be a two element vector.</entry>
        <entry key="MustBe4Vector">Matrix must have 4 elements.</entry>
        <entry key="MustBeString">Parameter must be a character vector or a string scalar.</entry>
        <entry key="MustBeStrings">Array must contain only character vectors.</entry>
        <entry key="MustBeHandle">Parameter must be a handle.</entry>
        <entry key="MustBeScalarHandle">Parameter must be a scalar handle.</entry>
        <entry key="ClassMustBeHandle">The class ''{0}'' must be a handle class.</entry>
        <entry key="UnhandledStringConversion">Unhandled mxArray to char conversion.</entry>
        <entry key="IncompletePVPair">Incomplete property-value pair.</entry>
        <entry key="ArrayDimsMatch">Array dimensions must match.</entry>
        <entry key="CopyRequiresNonEmpty">copy requires a non-empty handle.</entry>
        <entry key="ParentSizeMismatch">parent size does not match list of handles to copy.</entry>
        <entry key="ConnectToEmpty">Cannot connect a handle up, left, or right of empty.</entry>
        <entry key="ConnectToSelf">Cannot connect a handle to itself.</entry>
        <entry key="ConnectCycle">Connection not allowed because it would create a cyclic graph.</entry>
        <entry key="MethodNotFound">method not found.</entry>
        <entry key="MethodAccess">Access to method is not allowed.</entry>
        <entry key="RequireStaticMethod">An instance method cannot be invoked as a static method.</entry>
        <entry key="InvalidStaticMethodU">Invalid static method or namespace function.</entry>
        <entry key="NoMatchingSig">No method with matching signature.</entry>
        <entry key="InvalidObjectFromConstructor">Constructor returned an invalid handle object.</entry>
        <entry key="MustBeStringOrNumber">Cell ({0,number,integer}) must contain a character vector or a number.</entry>
        <entry key="MustBeHandleArray">Parameter must be a handle array.</entry>
        <entry key="MustBeScalarObject">Only one object may be passed to set for information about possible property values.</entry>
        <entry key="NotDefined">Function ''{0}'' is not defined for values of class ''{1}''.</entry>
        <entry key="ConstructorReturnedWrongClass">Constructor returned an object of the wrong type.</entry>
        <entry key="FromJavaConversionError">Cannot convert Java object to property's type.</entry>
        <entry key="ToJavaConversionError">Cannot convert property to a Java type.</entry>
        <entry key="JavaConversionError">Java Object is not an instance of {0}.</entry>
        <entry key="InconsistentClassArray">Java Array contains objects of mixed class.</entry>
        <entry key="JavaSetHGProperty">Get on a Java boolean property will return true/false in future release.</entry>
        <entry key="initFailed">Handle array initialization failed.</entry>
        <entry key="packageMustBeString">Namespace name must be a character vector or a string scalar.</entry>
        <entry key="noConvertToHandle">Cannot convert to handle.</entry>
        <entry key="Arg2mustBeString">Second argument must be a character vector or a string scalar.</entry>
        <entry key="typeMustBeString">Type name must be a character vector or a string scalar.</entry>
        <entry key="loadobj">Object could not be loaded because loadobj for class {0} did not return an object.</entry>
        <entry key="loadErrorSignature">{0} object could not be loaded because of error:\n No matching constructor signature.</entry>
        <entry key="saveError">Error occurred while trying to save object of type {0}:\n{1}</entry>
        <entry key="LoadDefinitionUpdated">Cannot load instance of class {0}. Class {1} has been updated and is not compatible with the old definition.</entry>
        <entry key="loadErrFindingClass">Error while attempting to find class {0}{1}{2}:\n{3}</entry>
        <entry key="loadClassNotFoundU">{0}{1}{2} object could not be loaded because its class cannot be found</entry>
        <entry key="loadErrorWithErrorU">{0} object could not be loaded because of error:\n{1}</entry>
        <entry key="UnableToLoadObject">Object could not be loaded and will be replaced by an empty double.</entry>
        <entry key="loadErrorNoErrorU">{0} object could not be loaded.</entry>
        <entry key="RGBColor">RGB Color must be a 3 element numeric vector.</entry>
        <entry key="ConnectionRefusedByParent">Connection refused by parent.</entry>
        <entry key="ConnectionRefusedByChild">Connection refused by child.</entry>
        <entry key="GenericJavaException" translate="false">{0}</entry>
        <entry key="SpinRun" translate="false">Detected UDD or OOPS. Exclude testpoint from spin run.</entry>
    <entry key="SchemaPackageWarningWithPath">Schema-based packages will not be supported in a future release. The classes and functions defined in package ''{0}'' must be rewritten. See &lt;a href="matlab: doc('classdef')"&gt;documentation&lt;/a&gt;.\nPackage location: {1}</entry>
    <entry key="SchemaPackageError">Schema-based packages are no longer supported. The classes and functions defined in package ''{0}'' must be rewritten.</entry>
    <entry key="SchemaPackageErrorWithPath">Schema-based packages are no longer supported. The classes and functions defined in package ''{0}'' must be rewritten.\nPackage location: {1}</entry>
        <!-- End of Content from UDD -->

        <entry key="abstractAttribute">Abstract classes cannot be instantiated. Class ''{0}'' is declared as Abstract.</entry>
        <entry key="inheritAbstractMember">Abstract classes cannot be instantiated. Class ''{0}'' inherits abstract methods or properties but does not implement them. See the &lt;a href=\"matlab:matlab.metadata.abstractDetails(''{1}'')\"&gt;list of methods and properties&lt;/a&gt; that ''{2}'' must implement if you do not intend the class to be abstract.</entry>
        <entry key="inheritAbstractMemberNoLink">Abstract classes cannot be instantiated. Class ''{0}'' inherits abstract methods or properties but does not implement them. Use matlab.metadata.abstractDetails to see the list of methods and properties that ''{1}'' must implement if you do not intend the class to be abstract.</entry>
        <entry key="defineAbstractMember">Abstract classes cannot be instantiated. Class ''{0}'' defines abstract methods and/or properties.</entry>
        <entry key="AbstractCannotInstantiate">Abstract classes cannot be instantiated. Class ''{0}'' is an abstract class.</entry>
        <entry key="abstractConstructor">A constructor may not use the Abstract attribute. The constructor is defined as an Abstract method in the ''{0}'' class.</entry>
        <entry key="AbstractInvalidInput">Input must be a class name or {0} instance.</entry>
        <entry key="AbstractMember">Class ''{0}'' is declared with Abstract = false and has abstract members. A class cannot set Abstract = false if it has abstract members.</entry>
        <entry key="AbstractPrivateProperty">Abstract property {1} in class {0} is invalid. An abstract property must not have both private GetAccess and private or immutable SetAccess.</entry>
        <entry key="AbstractPrivateMethod">Method {1} in class {0} has been defined as abstract and private. An abstract method cannot have private Access.</entry>
        <entry key="AbstractPropertyGet">Cannot specify a get method for the Abstract property ''{0}'' in class ''{1}''.</entry>
        <entry key="AbstractPropertyInconsistentAccess">The definition of property ''{0}'' in class ''{1}'' differs from its definition in the superclass ''{2}''. This is caused by either conflicting access permissions or differing values of the Constant attribute.</entry>
        <entry key="AbstractPropertyInitialValue">Cannot specify an initial value for the Abstract property ''{0}'' in class ''{1}''.</entry>
        <entry key="AbstractPropertySet">Cannot specify a set method for the Abstract property ''{0}'' in class ''{1}''.</entry>
        <entry key="RemovedPropertySet">While assigning to property ''{0}'':\nUnable to validate value for ''{0}'' because class ''{1}'' is not on the MATLAB path.</entry>
        <entry key="abstractWithBody">In the ''{0}'' class, the ''{1}'' method has both the Abstract attribute and a function body.</entry>
        <entry key="AccessSetToImmutable">Access attribute cannot be set to ''immutable''. Only SetAccess can be set to immutable.</entry>
        <entry key="ActionEventWillBeRenamed">The specified event will be removed in a future release. For uicontrol objects, please use this event instead: {0}.\n</entry>
        <entry key="EventWillBeRenamed">The specified event will be removed in a future release. Please use this event instead: {0}.\n</entry>
        <entry key="EventWillBeRemoved">The specified event will be removed in a future release.</entry>
        <entry key="AmbiguousProperty">Ambiguous {0} property: ''{1}''.</entry>
        <entry key="attemptToShadowBuiltinClass">Naming a class ''{0}'' is not allowed, because it is already a built-in class.</entry>
        <entry key="UnrecognizedAttribute">Illegal attribute ''{0}''.</entry>
        <entry key="BadAttributeValue">Illegal value for attribute ''{0}'' in class ''{1}''. {2}</entry>
        <entry key="NoCatBuiltinSubclassWithProperty">Cannot concatenate objects of class ''{0}'' because ''{1}'' defines properties and subclasses ''{2}''.{3}</entry>
        <entry key="NoCatDifferentBuiltinSubclasses">Cannot concatenate objects of two different classes ''{0}'' and ''{1}''.</entry>
        <entry key="NotOnPath">The parent directory of class ''{0}'' must be on MATLAB''s search path.</entry>
        <entry key="conflictingSuperClassProperty">Property ''{0}'' cannot be defined in both class ''{1}'' and ''{2}''.</entry>
        <entry key="ConflictingAccessAttribute">Cannot use the ''Access'' attribute when using the ''GetAccess'' or ''SetAccess'' attribute.</entry>
        <entry key="EnumConstructorRecursive">The constructor of an enumeration class cannot be used in the definition of any of its members. Enumeration member ''{0}'' in class ''{1}'' violates this rule.</entry>
        <entry key="DeleteAbstract">The delete method may not be Abstract.</entry>
        <entry key="DeleteSealed">The delete method may not be Sealed.</entry>
        <entry key="DeleteStatic">The delete method may not be Static.</entry>
        <entry key="DependentGet">In class ''{0}'', the get method for dependent property ''{1}'' attempts to access the stored property value. Dependent properties don''t store a value and can''t be accessed from their get method.</entry>
        <entry key="noGetMethod">In class ''{0}'', no get method is defined for dependent property ''{1}''. A dependent property needs a get method to access its value.</entry>
        <entry key="noSetMethod">In class ''{0}'', no set method is defined for dependent property ''{1}''. A dependent property needs a set method to assign its value.</entry>
        <entry key="DependentSet">In class ''{0}'', the set method for dependent property ''{1}'' attempts to store a property value. Dependent properties don''t store a value and can''t be assigned a value in their set method.</entry>
        <entry key="DifferentBaseClassMethod">A base class method can only be called explicitly from a subclass method of the same name.</entry>
        <entry key="ColonOnEnumNotSupported">Colon operator not defined for an enumeration class.</entry>
        <entry key="InvalidClassInDisplay">Cannot display object due to invalid class.</entry>
        <entry key="DuplicateCIProperty">The ''{0}'' property differs only in case with another property in ''{1}'' class.\n This is illegal in classes that set the CaseInsensitiveProperties attribute.</entry>
        <entry key="DuplicatePropertyInSetGet">The ''{0}'' property differs only in case with another property in ''{1}'' class.\n This is illegal in classes that subclasses from matlab.mixin.SetGet.</entry>
        <entry key="DuplicateAttribute">The ''{0}'' attribute is assigned multiple times.</entry>
        <entry key="DuplicateEnum">''{0}'' can be defined only once as a member of the ''{1}'' enumeration class.</entry>
        <entry key="DuplicateEvent">''{0}'' is already defined as an event in the ''{1}'' class.</entry>
        <entry key="DuplicateMethod">''{0}'' is already defined as a method in the ''{1}'' class.</entry>
        <entry key="duplicateNameEventEnum">''{0}'' cannot be used for both an event and a member of the ''{1}'' enumeration class.</entry>
        <entry key="duplicateNameMethodEnum">''{0}'' cannot be used for both a method and a member of the ''{1}'' enumeration class.</entry>
        <entry key="duplicateNameMethodEvent">The name ''{0}'' is used as both a method and an event within the same class definition. Such names must be unique.</entry>
        <entry key="duplicateNamePropEnum">''{0}'' cannot be used for both a property and a member of the ''{1}'' enumeration class.</entry>
        <entry key="duplicateNamePropEvent">The name ''{0}'' is used as both a property and an event within the same class definition. Such names must be unique.</entry>
        <entry key="duplicateNamePropMeth">The name ''{0}'' is used as both a property and a method within the same class definition. Such names must be unique.</entry>
        <entry key="PropertyInUse">''{0}'' is already defined as a property in the ''{1}'' class.</entry>
        <entry key="DynPropDuplicatesMethod">The name ''{0}'' is already in use as a method name. This will become an error in a future release.</entry>
        <entry key="editDestroyedObject">A value object may not be modified from inside its delete method.</entry>
        <entry key="EmptyDynamicPropName">Error adding a dynamic property to class {0}: a dynamic property name cannot be empty.</entry>
        <entry key="emptyMustBeZero">At least one dimension must be zero.</entry>
        <entry key="CannotConvert">Cannot convert an object of class ''{0}'' to enumeration class ''{1}'' because there is no conversion method available.</entry>
        <entry key="EnumMustBeScalar">In class ''{0}'', enumeration member named ''{1}'' must be scalar.</entry>
        <entry key="EnumerationNameMissing">The class ''{0}'' cannot be loaded as an enumeration because the names of one or more enumeration members are missing from the current definition. The names will be loaded as a struct.</entry>
        <entry key="EnumNotCopyable">Class {0} cannot be an enumeration class and also a subclass of matlab.mixin.Copyable.</entry>
        <entry key="EnumNotLoadableAsEnum">The class ''{0}'' cannot be loaded as an enumeration because the class is no longer an enumeration. The names of the enumeration members will be loaded as a struct.</entry>
        <entry key="EnumerationValueChanged">The value of enumeration member ''{0}'' differs from when the enumeration was saved. ''{1}'' will be loaded with the new value.</entry>
        <entry key="EnumValueMissing">While creating an instance of class ''{0}'':\n No value has been provided for the enumeration member named ''{1}''. For an enumeration derived from a built-in class, a value must be provided for each enumeration member.</entry>
        <entry key="FailedUnsharePrivateData">Cannot allocate memory while unsharing a private-data mxArray.</entry>
        <entry key="BadParamValuePairs">Invalid parameter/value pair arguments.</entry>
        <entry key="InvalidParamCell">Cells in a cell array of parameter names must be non-empty character vectors or string scalars.</entry>
        <entry key="InvalidArgumentPVP">Parameter-value pairs argument must be a character vector, struct, string scalar, or cell array of character vectors</entry>
        <entry key="FindOperatorPrecedence">The ''{0}'' operator can not be followed by a logical operator.</entry>
        <entry key="ParamValueCellMismatch">Size mismatch in Param Cell / Value Cell pair.</entry>
        <entry key="ValueCellDimension">Value cell array handle dimension must match handle vector length.</entry>
        <entry key="ValueCellValue">Value cell array must have one value for each property specified.</entry>
        <entry key="GetAccessSetToImmutable">GetAccess attribute cannot be set to ''immutable''. Only SetAccess can be set to immutable.</entry>
        <entry key="GetProhibited">No public property ''{0}'' for class ''{1}''.</entry>
        <entry key="GetProhibitedDynamic">You cannot get the dynamic property ''{0}''.</entry>
        <entry key="ArrayMustBeHomogeneous">For a call to GET of the form "v = get(h)", the elements of h must all be of the same class.</entry>
        <entry key="MustReturnValue">For a call to GET with ambiguous or unknown property ''{0}'',\n looking up a value failed to return a valid result.</entry>
        <entry key="NonHandleCompatibleSuperclass">All superclasses of class ''{0}'' must be handle-compatible when ''{1}'' has explicitly set its HandleCompatible attribute to true.</entry>
        <entry key="AmbiguousSuperclass">Cannot form a heterogeneous array: a unique superclass cannot be determined from the inputs.</entry>
        <entry key="InvalidConversionResult">While converting from ''{0}'':\n The conversion returned a value of class ''{1}'', which cannot be inserted into an array of class ''{2}''.</entry>
        <entry key="DefaultMethodInvalid">During array expansion:\n Cannot obtain a default instance for class ''{0}''. Method ''getDefaultScalarElement'' in class {1} is missing or incorrectly defined.</entry>
        <entry key="InvalidHeterogeneousArray">Cannot form a heterogeneous array: Two or more elements cannot be combined into a valid heterogeneous array.</entry>
        <entry key="InvalidDefaultElement">The default instance defined for class ''{0}'' is not derived from class ''{1}''.</entry>
        <entry key="MethodNotAllowed">Class ''{0}'' is not allowed to define a ''{1}'' method.</entry>
        <entry key="InheritedMethodNotAllowed">Class ''{0}'' cannot be a subclass of ''{1}'' and also inherit a ''{2}'' method from class ''{3}''.</entry>
        <entry key="MultipleHeterogeneousSuperclasses">Class ''{0}'' has two or more direct superclasses derived from matlab.mixin.Heterogeneous, which is not permitted.</entry>
        <entry key="NoConversionDefined">Cannot convert from ''{0}'' to heterogeneous class ''{1}''. Either ''{2}'' does not define static method ''convertObject'' or its ''convertObject'' method does not support converting ''{0}'' to ''{1}''.</entry>
        <entry key="MissingGetDefaultScalarElement">During array expansion:\n No default is defined for class ''{0}''.\n Method ''getDefaultScalarElement'' in superclass {1} is missing or incorrectly defined.</entry>
        <entry key="UnsealedMethodNoName"><![CDATA[Unable to call method ''{0}'' because one or more inputs of class ''{1}'' are heterogeneous and ''{2}'' is not sealed. For more details please see the <a href="matlab: helpview ([docroot '/matlab/ref/ref.map'],'method_dispatching')">method dispatching</a> rules for heterogeneous arrays.]]></entry>
        <entry key="UnsealedMethodNoNameNoLink">Unable to call method ''{0}'' because one or more inputs of class ''{1}'' are heterogeneous and ''{2}'' is not sealed. For more details see the method dispatching rules for heterogeneous arrays.</entry>
        <entry key="UnsealedMethod"><![CDATA[Cannot call method ''{0}'' because ''{1}'' is heterogeneous and ''{2}'' is not sealed. For more details please see the <a href="matlab: helpview ([docroot '/matlab/ref/ref.map'],'method_dispatching')">method dispatching</a> rules for heterogeneous arrays.]]></entry>
        <entry key="IllegalInitialValue">Invalid default value for property ''{0}'' in class ''{1}'':\n{2}</entry>
        <entry key="inconsistentSuperclasses">If a class defines superclasses, all or none must be handle classes.</entry>
        <entry key="inconsistentSuperclassConnectivity">All of a class''s superclasses that support connectivity must support the same type of connectivity.</entry>
        <entry key="InvalidArgument">Invalid input argument type to ''{0}''. Type ''help {1}'' for options.</entry>
        <entry key="InvalidInputArgumentTypeSizeOrValue">Invalid input argument for function ''{0}''.</entry>
        <entry key="InvalidBaseClass">''{0}'' is not a valid base class.</entry>
        <entry key="InvalidBaseClassCall">A base class method can only be called from the same method in a subclass.</entry>
        <entry key="InvalidBaseClassMethod">''{0}'' is not an accessible method of base class ''{1}''.</entry>
        <entry key="InvalidClass">The class ''{0}'' contains a parse error, cannot be found on MATLAB''s search path, or is shadowed by another file with the same name.</entry>
        <entry key="InvalidEnum">Cannot find a member of the ''{0}'' enumeration class that corresponds to each element of the given input argument.</entry>
        <entry key="invalidEvent">Event ''{0}'' is not defined for class ''{1}''.</entry>
        <entry key="InvalidHandle">Invalid or deleted object.</entry>
        <entry key="InvalidCustomMetaClass">The custom meta-class ''{0}'' must derive from the meta-class ''{1}''.</entry>
        <entry key="InvalidProperty">The name ''{0}'' is not an accessible property for an instance of class ''{1}''.</entry>
        <entry key="InvalidPropertyGet">Cannot specify a get function for property ''{0}'' in class ''{1}'', because that property is not defined by that class.</entry>
        <entry key="InvalidPropertySet">Cannot specify a set function for property ''{0}'' in class ''{1}'', because that property is not defined by that class.</entry>
        <entry key="InvalidReturnValue">Value returned from {0} method is of class {1}, not of class {2} as expected.</entry>
        <entry key="InvalidStaticMethod">No Static method ''{0}'' in class ''{1}''.</entry>
        <entry key="InvalidStaticProperty">The property ''{0}'' in class ''{1}'' must be accessed from a class instance because it is not a Constant property.</entry>
        <entry key="InvalidSuperClass">The specified superclass ''{0}'' contains a parse error, cannot be found on MATLAB''s search path, or is shadowed by another file with the same name.</entry>
    <entry key="InvalidSuperClassBeingDestroyed">Cannot instantiate class ''{0}'' because superclass ''{1}'' is being destroyed.</entry>
        <entry key="InvalidType">''{0}'' is not a valid class name.</entry>
    <entry key="PropertyAddedWithNonexistingType">Unable to add property ''{0}'' to class ''{1}'' because type ''{2}'' does not exist. Ensure that the type name is a registered type or class that has been loaded.</entry>
        <entry key="ListenRestricted">Cannot listen to event ''{0}'' in class ''{1}''.</entry>
        <entry key="methodAmbiguous">Method ''{0}'' defined in class ''{1}'' has 2 or more conflicting definitions.</entry>
        <entry key="methodOverrideAccess">Method ''{0}'' in class ''{1}'' uses different access permissions than its superclass ''{2}''. Set ''{3}'' access to ''{4}'' to match superclass.</entry>
        <entry key="methodOverrideAccessList">Method ''{0}'' in class ''{1}'' uses different access permissions than its superclass ''{2}''. Set ''{3}'' access list to match superclass access list.</entry>
        <entry key="methodOverrideSealed">Method ''{0}'' in class ''{1}'' conflicts with the sealed method in superclass ''{2}''. Overriding a sealed method is not supported.</entry>
        <entry key="methodMultipleInheritanceAccess">Method ''{0}'' in superclasses ''{1}'' and ''{2}'' uses conflicting access permissions. Set ''{3}'' access to match in all superclasses.</entry>
        <entry key="MethodRestricted">Cannot access method ''{0}'' in class ''{1}''.</entry>
        <entry key="MissingType">Invalid or missing class for property ''{0}''.</entry>
        <entry key="MultipleCustomMetaClasses">Attempt to inherit a different meta-class for class ''{0}'' from superclass {1}.</entry>
        <entry key="inputMustBeScalar">Input argument to ''function_handle'' must be a scalar.</entry>
        <entry key="mustReturnObject">When constructing an instance of class ''{0}'', the constructor must preserve the class of the returned object.</entry>
        <entry key="memberHasClassName">A property or event may not use the same name as the name of the class ({0}).</entry>
        <entry key="nonHandleClassWithEvents">The class ''{0}'' may not define events because only subclasses of handle may define events.</entry>
        <entry key="defaultObjectMustBeScalar">The default object for class ''{0}'' is non-scalar. A possible reason is that the constructor is returning a non-scalar object, or the default value defined for the class is non-scalar.</entry>
        <entry key="NotifyRestricted">Cannot notify listeners of event ''{0}'' in class ''{1}''.</entry>
        <entry key="CheckListenerRestricted">NotifyAccess required to determine if there are listeners for event ''{0}'' in class ''{1}''.</entry>
        <entry key="HandleCompatibleFalse">Class ''{0}'' cannot be a subclass of handle and also explicitly set its HandleCompatible attribute to false.</entry>
        <entry key="internalNoclass">Cannot find class ''{0}'' which is being instantiated.</entry>
        <entry key="NoDefaultDefined">No default value has been defined for property {0}.</entry>
        <entry key="NoDefaultPermitted">Property {0} is {1} and therefore cannot have a default value.</entry>
        <entry key="noEnum">The ''{0}'' enumeration class must define at least one member.</entry>
        <entry key="ActualEnumHidden">In enumeration class ''{0}'', members ''{1}'' and ''{2}'' have the same underlying value, and ''{1}'' is hidden. If the primary member is hidden, the aliased members must be hidden.</entry>
        <entry key="NoMatchingSuperConstructor">No matching constructor found for superclass ''{0}''.</entry>
        <entry key="OutsideEnumBlock">Input does not correspond to a member of the enumeration class ''{0}''.</entry>
        <entry key="ParseError">The class definition has a parse error.</entry>
        <entry key="PropertyNotFound">There is no ''{0}'' property in class ''{1}''.</entry>
        <entry key="RedefinedProperty">Cannot define property ''{0}'' in class ''{1}'' because the property has already been defined in the superclass ''{2}''.</entry>
        <entry key="EnumWithProps">Cannot define or inherit properties in the ''{0}'' enumeration class because this class is derived from a built-in class, ''{1}''.</entry>
        <entry key="PropertyTypeMismatch">The property ''{0}'' restriction defined in class ''{1}'' must match the property definition in base class ''{2}''.</entry>
        <entry key="InvalidDatatypeRestriction">Datatypes in the ''matlab.internal.datatype'' namespace do not support size restrictions and validation functions.</entry>
        <entry key="InternalDatatypeUsesClass">Using ''matlab.internal.datatype'' namespace with class ''{0}'' is not supported. Use ''{1}'' instead.</entry>
        <entry key="customSaveRecursionLimit">Recursion limit exceeded: Class {0}''s saveobj method is indirectly recursive with the saveobj methods of one or more other classes.</entry>
        <entry key="RecursiveEnumDefinition">Enumeration class member ''{0}'' cannot be used in its own definition.</entry>
        <entry key="RecursiveConstPropDefinition">Constant property ''{0}'' in class {1} cannot be used in its own definition.</entry>
        <entry key="RecursivePropDefinition">The ''{0}'' class definition uses an instance of itself directly or indirectly as the default value for the ''{1}'' property. This is not allowed.</entry>
        <entry key="RecursiveSuperClass">The class ''{0}'' specifies a superclass that is a subclass of ''{1}''. This is not allowed.</entry>
        <entry key="RecursiveDefinition">The class ''{0}'' is used in its own class definition as a base class, property value, or attribute value. This is not allowed.</entry>
        <entry key="NotHandleCell">Parameter ''{0}'' must be an array of handles or a cell array of handles.</entry>
        <entry key="RequireCellStrings">Value must be a cell array of character vectors or string scalars.</entry>
        <entry key="RequireNonScalarText">''{0}'' value must be a cell array of character vectors or a string array.</entry>
        <entry key="RequireChar">Value must be a char.</entry>
        <entry key="RequireEnumeration">Value must be public, protected, or private.</entry>
        <entry key="RequireClass">Value must be ''{0}''.</entry>
        <entry key="RequireLogical">Value must be logical (true or false).</entry>
        <entry key="RequireMatrix">Value must be a matrix.</entry>
        <entry key="RequireNDims">Value must have {0,number,integer} dimensions.</entry>
        <entry key="RequireNumber">Value must be a number.</entry>
        <entry key="RequireNumeric">Value must be numeric or logical.</entry>
        <entry key="RequireReal">Value must be real.</entry>
        <entry key="RequireScalar">Value must be a scalar.</entry>
        <entry key="RequireString">Value must be a character vector or a string scalar.</entry>
        <entry key="RequireStringOrScalarClass">Value must be a character vector, string scalar, or scalar ''{0}''.</entry>
        <entry key="RequireAscii">Value must contain ASCII characters. </entry>
        <entry key="RequireScalarText">''{0}'' value must be a character vector or a string scalar.</entry>
        <entry key="RequireSuperClass">The class ''{0}'' is not a superclass of class ''{1}'', as required to invoke a superclass constructor or method.</entry>
        <entry key="RequireVector">Value must be a vector.</entry>
        <entry key="ReservedClassName">The class name ''{0}'' is reserved and cannot be used to define a class.</entry>
        <entry key="ReservedClassNameInPackage">Class ''{0}'' in package ''{1}'' uses a reserved name and cannot be used to define a class. </entry>
        <entry key="ScalarObjectRequired">Object passed to method ''{0}'' must be scalar.</entry>
        <entry key="ScalarOutputRequired">Value returned is not scalar. Method {0} of class {1} must return a scalar object of the same class.</entry>
        <entry key="sealed">Class ''{0}'' is Sealed and may not be used as a superclass.</entry>
        <entry key="SetProhibited">Setting the ''{0}'' property of class ''{1}'' is not supported.</entry>
        <entry key="SetProhibitedDynamic">Setting the dynamic property ''{0}'' is not supported.</entry>
        <entry key="SetDynamicConstant"> Setting the Constant property of a meta.DynamicProperty object has no effect. This warning will become an error in a future release.</entry>
        <entry key="SetDynamicAbstract"> Setting the Abstract property of a meta.DynamicProperty object has no effect. This warning will become an error in a future release.</entry>
        <entry key="SetProhibitedReadOnly">Unable to set the ''{0}'' property of class ''{1}'' because it is read-only.</entry>
        <entry key="EnumPropertyNotSetImmutable">SetAccess for property ''{0}'', which is in class ''{1}'' or one of its superclasses, must be immutable.</entry>
        <entry key="SetFunctionNoReturn">The set function for property ''{0}'' must return an instance of class ''{1}''.</entry>
        <entry key="SetFunctionReturnWrongClass">In set function for property ''{0}'', the class of the output object is ''{1}''; the class of the input object is ''{2}''. They should be the same.</entry>
        <entry key="SetGetWithAttributes">Property set and get functions in class ''{0}'' must be defined in a methods block that does not have attributes.</entry>
        <entry key="MustReturnCell">For a call to SET of the form c = set(h, ''propname'') with ambiguous or unknown property ''{0}'', looking up all possible values failed to return a cell array.</entry>
        <entry key="SubclassOfEnum">''{0}'' cannot subclass ''{1}'' because ''{2}'' is an enumeration class.</entry>
        <entry key="InvalidSubsref">Cannot use ''('' or '''{''' to index into an object of class ''{0}'' because ''{1}'' defines properties and subclasses ''{2}''.{3}</entry>
        <entry key="TypeRedefined">The attempt to define type ''{0}'' is invalid because it has already been defined.</entry>
        <entry key="UndefinedMethod">No method ''{0}'' with matching signature found for class ''{1}''.</entry>
        <entry key="UndefinedCustomMetaClass">The meta-class ''{0}'' cannot be found.</entry>
        <entry key="undefinedMethod">Method ''{0}'' is not defined for class ''{1}'' or is removed from MATLAB''s search path.</entry>
        <entry key="methodOfUnregisteredPackage">Method ''{0}'' is not defined for class ''{1}'' or the defining package ''{2}'' has been uninstalled.</entry>
        <entry key="UndefinedPackageForEnumType">Invalid or undefined namespace name {0} used to define typed enumeration {1}.</entry>
        <entry key="UndefinedPackageRemovingEnumType">Invalid or undefined namespace name {0} used to remove typed enumeration {1}.</entry>
        <entry key="WrongReturnClass">Value returned is of class {0}. Method {1} of class {2} must return a scalar object of the same class.</entry>
        <entry key="InexactPropertyName">An inexact property name ''{0}'' was used to access property ''{1}''. Support for inexact property names will be removed in a future release. Use exact names instead.</entry>


        <entry key="AtFolderPrecedence"><![CDATA[Class ''{0}'' is defined in a class folder and takes precedence over a function with the same name that is earlier on the MATLAB path. In a future release, class ''{0}'' will no longer be given precedence. \n\n<a href="matlab: matlab.internal.identifyClassPrecedenceConflicts(''{0}'')">Click here for the locations of the conflicting items</a>.\n<a href="matlab: helpview('matlab','AtFolderPrecedence');">Click here for guidelines to avoid this warning</a>.]]></entry>
        <entry key="ClassPrecedenceIdentification">\nThe class ''{0}'':\n\t{1}\ntakes precedence over these:\n{2}\n</entry>
        <entry key="EnumerableClassNotFound">Cannot load an object of class ''{0}'':\nIts class cannot be found.</entry>
        <entry key="LoadInvalidDefaultElement">During load:\n An invalid default object has been detected while loading a heterogeneous array of class {0}. An empty array of class {1} will be returned.</entry>
        <entry key="DefaultObjectSubstitution">Unable to load instances of class {0} into a heterogeneous array. The definition of {1} could be missing or contain an error. Default objects will be substituted.</entry>
        <entry key="LoadedHetArrayInvalid">Array originally saved as a heterogeneous array of class {0} cannot be loaded as a valid heterogeneous array. Possible causes include changes in the class hierarchy or missing class definitions.</entry>
        <entry key="loadInconsistentClass">During load:\n Objects belonging to different classes cannot be placed into an array of class {0}, as {1} is not derived from matlab.mixin.Heterogeneous. An empty array of class {2} will be returned.</entry>
        <entry key="PropSealed">In class ''{0}'', use of the ''Sealed'' attribute with properties will not be supported in a future release. This attribute has no effect on properties.</entry>
        <entry key="PropNotHandleCell">Nested cell arrays are not supported when creating a property listener. Parameter ''Properties'' must be an array of handles or a cell array of handles.</entry>
        <entry key="SourceNotHandleCell">Nested cell arrays are not supported when creating a property listener. Parameter ''Source'' must be an array of handles or a cell array of handles.</entry>
        <entry key="nonGetObservableProp">While adding a {0} listener, property ''{1}'' in class ''{2}'' is not defined to be GetObservable.</entry>
        <entry key="nonSetObservableProp">While adding a {0} listener, property ''{1}'' in class ''{2}'' is not defined to be SetObservable.</entry>
        <entry key="PropNotMember">While creating a property listener, the property named ''{0}'' is a member of class ''{1}'' but the object is an instance of class ''{2}''.</entry>
        <entry key="DynPropNotMember">While creating a property listener for an object of class ''{0}'', the dynamic property named ''{1}'' belongs to a different object. </entry>
        <entry key="PropertyValidInputs">''Property'' must be a string or string array, character vector or cell array of character vectors, or a meta.property scalar or array.</entry>
        <entry key="ConstantDependentProp">Property ''{0}'' in class ''{1}'' has been defined as constant and dependent. A constant property cannot be dependent.</entry>
        <entry key="ConstantPropObservable">Class ''{0}'' defines property ''{1}'' as Constant and GetObservable or SetObservable. Specifying GetObservable or SetObservable for a Constant property has no effect. This warning will become an error in a future release.</entry>
        <entry key="InvalidPropAttributeCombination">Property ''{0}'' in class ''{1}'' has been defined with both attributes: {2} and {3}. Using these attributes together is not supported.</entry>
        <entry key="ConstantPropGetMethod">Class ''{0}'' defines property ''{1}'' as Constant and also defines a property get-method for ''{2}''. Constant properties cannot define a property get-method.</entry>
        <entry key="ConstantPropSetMethod">Class ''{0}'' defines property ''{1}'' as Constant and also defines a property set-method for ''{2}''. This method has no effect and will be ignored.</entry>
        <entry key="ObjectMustBeScalar">Array formation and parentheses-style indexing with objects of class ''{0}'' is not allowed. Use objects of class ''{1}'' only as scalars or use a cell array.</entry>
        <entry key="EmptyScalar">Creating an empty array of class ''{0}'' is not allowed. Use objects of class ''{1}'' only as scalars.</entry>
        <entry key="concatenationScalar">Concatenating ''{0}'' objects is not supported because ''{0}'' objects can only be scalar.</entry>
        <entry key="emptyScalar">Creating an empty array of a scalar class is not supported.</entry>
        <entry key="parenAssignScalar">Indexed assignment with parentheses is not supported for ''{0}'' objects.</entry>
        <entry key="parenDeleteScalar">Deleting elements from ''{0}'' objects is not supported.</entry>
        <entry key="parenReferenceScalar">Indexing using parentheses to access elements of ''{0}'' objects is not supported.</entry>
        <entry key="SubclassNotAllowed">Class ''{0}'' could not be instantiated because it may not inherit from class ''{1}''. Class ''{0}'' is not specified as an allowed subclass of class ''{1}''. Remove class ''{1}'' from the list of superclasses of class ''{0}''.</entry>
        <entry key="SealedAndAllowedSubclasses">Attribute sealed in class ''{0}'' conflicts with a list of AllowedSubclasses. Either make the class Sealed or specify a list of allowed subclasses.</entry>
        <entry key="DefiningClassNotAllowedSubclass">Cannot include class ''{0}'' in its own list of AllowedSubclasses.</entry>
        <entry key="SuperclassNotAllowedSubclass">Class ''{0}'' is a superclass of class ''{1}'' and cannot be included in the list of AllowedSubclasses for class ''{2}''.</entry>
        <entry key="InvalidAllowedSubclassesValue"><![CDATA[''{0}'' must be a meta.class handle or a cell array of meta.class handles. For more information, see <a href="matlab: helpview ([docroot '/matlab/matlab_oop/matlab_oop.map'],'specify_allowed_subclasses')">Specify Allowed Subclasses</a>.]]></entry>
        <entry key="InvalidInferiorclassValue">''{0}'' must be a meta.class handle or a cell array of meta.class handles.</entry>
        <entry key="InvalidAccessValue"><![CDATA[''{0}'' must be public, protected, private or a list of classes. For more information, see <a href="matlab: helpview ([docroot '/matlab/matlab_oop/matlab_oop.map'],'specify_access_to_class_member')">Specify Access to Class Members</a>.]]></entry>
        <entry key="MethodOverrideWithoutAccess">Class ''{0}'' is not allowed to override the method ''{1}'' because neither it nor its superclasses have been granted access to the method by class ''{2}''.</entry>
        <entry key="UndefinedFunction">No method ''{0}'' with matching signature found.</entry>
        <entry key="UndefinedFunctionInClass">No method ''{0}'' with matching signature found for class ''{1}''.</entry>
        <entry key="UndefinedFunctionOrVariable">Undefined function or variable ''{0}''.</entry>
        <entry key="InvalidIdBeforeAt">Expecting identifier before ''@''.</entry>
        <entry key="InvalidClassName">Invalid class name.</entry>
        <entry key="PropertyGroupInvalidInput">Input must be a character vector, cell array of character vectors, string array, or scalar struct</entry>
        <entry key="BadPropertyGroup">Cannot display object of class ''{0}'' because ''getPropertyGroups'' did not return a valid ''{1}''.</entry>
        <entry key="DefaultConstructorNotFound">Creating default objects of class ''{0}'' is not supported.</entry>
        <entry key="ExplicitConversionOnly">Unable to convert ''{0}'' objects to ''{1}'' objects. Construct objects of class ''{2}'' explicitly.</entry>
        <entry key="ExplicitConversionOnHeterogeneous">Use of the ''ExplicitConversion'' attribute is not supported in subclasses of matlab.mixin.Heterogeneous. This attribute has no effect in class ''{0}''</entry>
        <entry key="NonCopyableMustBeHandle">The property ''{0}'' in class ''{1}'' cannot be NonCopyable. The NonCopyable attribute can only be used on properties of handle classes.</entry>
        <entry key="GetAllowedSubclassesInvalidInput">Input must be a class name or meta object of a class</entry>
        <entry key="InvalidPropertyGroupConstructor">Invalid input at position {0} of the PropertyGroup constructor. Input must be a property name.</entry>
        <entry key="InvalidPropertyGroupAlignValue">Invalid input for 'Aligned' property value when constructing a PropertyGroup. Input must be a logical scalar.</entry>
        <entry key="InvalidPropertyGroupTitleValue">Invalid input for 'Title' property value when constructing a PropertyGroup. Input must be a character vector or string scalar.</entry>
        <entry key="AmbiguousInferiorClasses">Class ''{0}'' cannot be inferior to class ''{1}'' because ''{2}'' declares ''{3}'' as inferior.</entry>
        <entry key="SetGetExactNamesandGraphicsClasses"> Conflicting superclasses in class ''{0}''. Subclassing both matlab.mixin.SetGetExactNames and any class derived from graphics is not supported.</entry>
        <entry key="SetGetExactNamesandTruncatedCaseInsensitive"> Conflicting superclasses and class attributes in ''{0}''. Subclassing from matlab.mixin.SetGetExactNames while having either CaseInsensitiveProperties or TruncatedProperties set to be true is not supported.</entry>
        <entry key="PropFromPreviousClassDef">The class ''{0}'' has been updated. To add a property listener for ''{1}'', you must retrieve updated metaclass information.</entry>
        <entry key="GetMethodDeletedObject">Reference to property ''{0}'' in class ''{1}'' failed because the ''{2}'' get-method deleted its object.</entry>
        <entry key="DynPropGetMethodDeletedObject">Reference to dynamic property ''{0}'' in class ''{1}'' failed because the ''{2}'' get-method deleted its object.</entry>
        <entry key="DynPropSetMethodDeletedObject">Reference to dynamic property ''{0}'' in class ''{1}'' failed because the ''{2}'' set-method deleted its object.</entry>
        <entry key="PreGetCallbackDeletedObject">Unable to get property ''{0}'' in object of class ''{1}'' because a PreGet listener function deleted the object.</entry>
        <entry key="ObjectUpdateFailureHandle2Value">Cannot update object because the handle class ''{0}'' is now a value class.</entry>
        <entry key="ObjectUpdateFailureTree2NoConnection">Cannot update object because the tree-connectivity class ''{0}'' now has no connectivity.</entry>
        <entry key="ObjectUpdateFailureAbstract">Cannot update object because the class ''{0}'' is now abstract.</entry>
        <entry key="ObjectUpdateFailureEnum">Cannot update object because the class ''{0}'' is now a finite enumeration of values.</entry>
        <entry key="ObjectUpdateFailureHeterogeneous">Cannot update objects of the class ''{0}'' in this heterogeneous array because the objects would not share a common superclass.</entry>
        <entry key="ObjectUpdateFailureArrayFormation">Cannot update array of class ''{0}'' because the its superclass ''{1}'' has changed indexing and array formation rules.</entry>
        <entry key="CannotUpdateDelete">Cannot call delete method on object of class ''{0}'' because the object cannot be updated. The object will be deleted using the default delete method.</entry>
        <entry key="UnableToSetProperty">Unknown error while setting property ''{0}'' of class ''{1}''.</entry>
        <entry key="UnableToGetProperty">Unknown error while getting property ''{0}'' of class ''{1}''.</entry>
        <entry key="InvalidEnumConversion">Unsupported conversion from ''{0}'' to enumeration ''{1}''.</entry>
        <entry key="InvalidCellArrayEnumConversion">Input argument must be a cell array of character vectors.</entry>
        <entry key="InvalidCharMatrixEnumConversion">Input argument must be a character vector.</entry>
        <entry key="UnableToCompare">Enumeration class ''{0}'' derives from a built-in class. Testing for equality between enumerations derived from built-in classes and character arrays will not be performed character-wise in future releases.</entry>
        <entry key="PartialMatchPriorityRealScalarInt">The value of ''{0}'' is invalid. Expected a positive integer value.</entry>
        <entry key="PartialMatchPriorityMaximumInt">The value of ''{0}'' is greater than maximum integer.</entry>
        <entry key="DoubleQuotesNotSupported">Use of double quotes in access attribute values is not supported.</entry>
        <entry key="instanceCreationAtClassDestruction">Creating an instance of class ''{0}'' while it is being destroyed is not supported.</entry>
        <entry key="StaticIndexingFunction">Method ''{0}'' in class ''{1}'' will not be called for indexing operations because it is declared as static.</entry>
        <entry key="MethodAccessSetToImmutable">Setting method Access attribute to immutable is incorrect. Valid access values for methods are public, protected and private.</entry>
        <entry key="EventAccessSetToImmutable">Setting event {0} attribute to immutable is incorrect. Valid access values for events are public, protected and private.</entry>
        <entry key="InvalidConverterMethod">Call to superclass constructor ''{0}'' using method@superclass syntax can be made only from the subclass constructor.</entry>
        <entry key="ExternalConstructor">External constructor not supported. Define constructor for class ''{0}'' in the classdef block.</entry>
        <entry key="ExternalConverter">External converter methods for namespace-qualified classes not supported. Define ''{0}'' converter for class ''{1}'' in the classdef block.</entry>
        <entry key="ExternalSetGet">External property access methods not supported. Define property access methods for class ''{0}'' in the classdef block.</entry>
        <entry key="DuplicateSuperClass">Same base class {0} specified more than once for class {1}. Specify each base class only once.</entry>
        <entry key="OffPathAndSuperclassChanged">One or more superclasses of class ''{0}'' have changed, requiring an update to class ''{0}''. MATLAB is unable to update class ''{0}'' because it is not on the path. To access instances of this class, add it to the path.</entry>
        <entry key="InvalidPropertyAttributeCallback">No custom attribute callback ''{0}'' defined for property ''{1}'' of class ''{2}''.</entry>
        <entry key="PropertyAttributeCallbackNotFound">Unable to find custom attribute callback ''{0}'' for property ''{1}'' of class ''{2}''.</entry>
        <entry key="MatlabCallbackOnCppPropertyNotSupported">Attempt to specify a custom attribute on property ''{0}'' of class ''{1}'' failed. Using custom attributes that have MATLAB defined callbacks on C++ defined class properties is not supported.</entry>
        <entry key="UnknownPropertyForClass">Attempt to call turnOnCustomGet method or turnOnCustomSet method for property ''{0}'' on class ''{1}''. This property is not defined for this class.</entry>
        <entry key="CustomAttributesInternalError">Failure to retrieve the current property value for class ''{0}'' and property ''{1}''. Object or class are invalid or deleted.</entry>
        <entry key="NotHandleCellArray">Parameter ''{0}'' must be a cell array of handles.</entry>
        <entry key="CustomPropNotDependent">Custom property ''{0}'' must be a dependent property.</entry>
        <entry key="DeletedValue">Creating deleted object for value class ''{0}'' is not supported.</entry>
        <entry note="Example: Unable to use objects of class MyClass to create an instance of class MyDoubleSubclass. The MyClass double converter does not return a double value." key="ConverterTypeMismatch">Unable to use objects of class {0} to create an instance of class {1}. The {2} {3} converter does not return a {4} value.</entry>
        <entry key="InvalidClassAttribute">The class ''{0}'' is invalid because it both inherits from ''{1}'' and has the attribute ''{2}'' set to true. Remove the attribute ''{2}'' from class ''{0}''.</entry>
        <entry key="InvalidInheritance">The class ''{0}'' is invalid because it inherits from ''{1}'' and ''{2}''. Using these superclasses together is not supported. Remove one of them from the class ''{0}''.</entry>
        <entry key="NamespaceFeatureChangeAttempt" translate="false">Turning the namespace feature on or off from within MATLAB is not permitted. Please restart MATLAB using matlab -namespace or -nonamespace.</entry>
        <entry key="ClassNotFoundOnPath">The class ''{0}'' cannot be found on MATLAB''s search path.</entry>
        <entry key="DeprecatedFunction">''{0}'' will be removed in a future release. Use ''{1}'' instead.</entry>
        <entry key="NonDefaultZeroEnumProperty">The current default value for property ''{0}'' in class ''{1}'' is ''{2}''. In a future release, the implicit property default value will change to be the first enumeration member ''{3}'' of ''{4}''.\nYou can avoid this warning message and a potential incompatible change by giving the property the explicit value ''{2}''.</entry>
        <entry key="NullValueValidation">Validating a non-constructible property value is not supported.</entry>
        <entry key="UnableToSaveDueToSearchPathProblem">Unable to save an object of class ''{0}'' due to an issue with the search path.</entry>

        <!-- Developer error messages that don't need translation -->
        <entry key="ConvertToClassInvalidClassNameType" translate="false">The first input argument must be a non-empty char vector.</entry>
        <entry key="ConvertToClassInvalidContext" translate="false">The third input argument must be a scalar matlab.lang.ExecutionContext.</entry>
    </message>
</rsccat>

<!-- LocalWords:  lang subproperty javahandle unsharing propname nonamespace
-->
