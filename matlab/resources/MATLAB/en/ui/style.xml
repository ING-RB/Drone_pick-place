<?xml version="1.0"?>
<!-- Copyright 2016-2018 The MathWorks, Inc. -->
<rsccat version="1.0" locale="en_US" product="MATLAB">
  <message>
    <entry key="invalidColor">Invalid color value.</entry>
    <entry key="unmatchedPVPair">Unmatched parameter name/value pair.</entry>
    <entry key="invalidName">
        <!-- 
        FontName = (was not a character vector)
        Name = (was not a character vector)
        
        {0} = Property name
        --> 
        ''{0}'' must be a character vector, string scalar, or ''''.
    </entry>
  
    <entry key="invalidFontSize">
        <!-- 
        FontSize = (was not a number > 0
            
        {0} = Property name
        --> 
        ''{0}'' must be a positive double or [].
    </entry>
    
    <entry key="invalidCondition">
        <!-- 
        Condition = {not a char, 0}
        Condition = {array, with, odd, element, numbers}
            such as {''>'', 0}.
        {0} = Property name
        --> 
        ''{0}'' must be a cell array of valid condition pairs '{'''>'', 0'}'.
    </entry>
    
    <entry key="invalidConditionComparator">
        <!-- 
        Condition = {'bad comparator', 0}
            
        {0} = Property name ('Condition')
        {1} = Comparator key ('bad comparator')
        --> 
        ''{0}'' key ''{1}'', not supported.
    </entry>    
    
    <!-- removeStyle Messages -->
    <entry key="invalidRemovalIndex">
        <!-- 
        Option = (not a char, cellstr, positive integer, or array of positive integers)
        --> 
        Option must be a positive integer or a vector of positive integers.
    </entry>
    
    <entry key="removalIndexOutOfBounds">
        <!-- 
        Style order number = (out of bounds of Styles table)
        
        {0} = StyleConfigurations table
        --> 
        Error removing style: Style order number exceeds ''{0}'' table dimensions.
    </entry>
    
    <!-- addStyle Messages -->
    <entry key="invalidStyleObject">
        <!-- 
        Style = (Style object)
            
        {0} = Style object
        --> 
        Invalid {0} object.
    </entry>
    
    <entry key="invalidNumberOfInputs">
        <!-- 
        NumberOfInputs = (not 2 or 4 for addStyle)
        --> 
        Incorrect number of input arguments.
    </entry>
    
    <!-- table target messages -->
    <entry key="invalidStyleTarget">
        <!-- 
        Third argument = (not 'cell', 'row', 'column', or 'table')
        
        {0} = The first valid character vector enum ('cell')
        {1} = The second valid character vector enum ('row')
        {2} = The third valid character vector enum ('column')
        {3} = The fourth valid character vector enum ('table')                          
        --> 
        Third argument must be ''{0}'', ''{1}'', ''{2}'', or ''{3}''.
    </entry>
    
    <!-- addStyle TargetIndex Messages -->
    <entry key="invalidCellTargetIndex">
        <!--
        Target = ('cell')
        
        {0} = Target
        --> 
        Option for ''{0}'' must be an N-by-2 matrix of positive integers.
    </entry>
    
    <entry key="invalidRowTargetIndex">
        <!--
        Target = ('row')
        
        {0} = Target
        --> 
        Option for ''{0}'' must be a positive integer or a vector of positive integers.
    </entry>
    
    <entry key="invalidColumnTargetIndex">
        <!--
        Target = ('column')
        
        {0} = Target
        --> 
        Option for ''{0}'' must be a positive integer, a vector of positive integers, 
        a string, a string vector, a character vector, or a cell array of character vectors.
    </entry>
    
    <entry key="invalidTargetIndex">
        <!--
        Target = ('table')
        
        {0} = Target
        --> 
        Option for ''{0}'' must be an empty character vector.
    </entry>
    
    <!-- tree target messages -->
    <entry key="invalidStyleTargetFourOptions">
        <!-- 
        Third argument = (not 'node', 'level', 'tree', or 'subtree')
        
        {0} = The first valid character vector enum ('node')
        {1} = The second valid character vector enum ('level')
        {2} = The third valid character vector enum ('tree')
        {3} = The third valid character vector enum ('tree')
        --> 
        Third argument must be ''{0}'', ''{1}'', ''{2}'', or ''{3}''.
    </entry>

    <entry key="invalidNodeTargetIndex">
        <!--
        Target = ('node')
        
        {0} = Target
        --> 
        Option for ''{0}'' must be a TreeNode or vector of TreeNodes.
    </entry>
    
    <entry key="invalidLevelTargetIndex">
        <!--
        Target = ('level')
        
        {0} = Target
        --> 
        Option for ''{0}'' must be a positive integer or a vector of positive integers.
    </entry>

    <!-- listbox target messages -->
    <entry key="invalidStyleTargetTwoOptions">
        <!-- 
        Third argument = (not 'item' or 'listbox')
        
        {0} = The first valid character vector enum ('item')
        {1} = The second valid character vector enum ('listbox') or ('dropdown')
        --> 
        Third argument must be ''{0}'' or ''{1}''.
    </entry>

    <entry key="invalidItemTargetIndex">
        <!--
        Target = ('item')
        
        {0} = Target
        --> 
        Option for ''{0}'' must be a positive integer or a vector of positive integers.
    </entry>
  </message>
</rsccat>
