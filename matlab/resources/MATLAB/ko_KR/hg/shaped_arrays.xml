<?xml version="1.0" encoding="UTF-8"?>
<!--Copyright 2025 The MathWorks, Inc.-->

<rsccat xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.0" locale="ko_KR" product="MATLAB" xsi:noNamespaceSchemaLocation="../../resources/schema/msgcat.xsd">
  <message>
    <entry key="Sparse">희소 행렬은 지원되지 않습니다.</entry>
    <entry key="Complex">복소수 값은 지원되지 않습니다.</entry>
    <entry key="CellArray">셀형에서 double형으로 변환할 수 없음</entry>
    <entry key="CharArray">값은 숫자형이어야 합니다.</entry>
    <entry key="NaN">NaN, NaT, &lt;undefined&gt; 같은 누락값은 지원되지 않습니다.</entry>
    <entry key="Inf">Inf는 지원되지 않습니다.</entry>
    <entry key="AlphaMapPredicate">값은 다음 중 하나여야 합니다.\n[0 1] 범위의 single형 또는 double형 벡터\n정수형 또는 논리형 벡터.</entry>
    <entry key="AlphaMapRange">값은 다음 중 하나여야 합니다.\n[0 1] 범위의 single형 또는 double형 벡터\n정수형 또는 논리형 벡터.</entry>
    <entry key="AlphaMapSize">값은 다음 중 하나여야 합니다.\n[0 1] 범위의 single형 또는 double형 벡터\n정수형 또는 논리형 벡터.</entry>
    <entry key="AlphaMapType">값은 다음 중 하나여야 합니다.\n[0 1] 범위의 single형 또는 double형 벡터\n정수형 또는 논리형 벡터.</entry>
    <entry key="AxesViewPredicate">값은 double형의 요소를 2개 가진 벡터여야 합니다.</entry>
    <entry key="AxesViewRange">값은 double형의 요소를 2개 가진 벡터여야 합니다.</entry>
    <entry key="AxesViewSize">값은 double형의 요소를 2개 가진 벡터여야 합니다.</entry>
    <entry key="AxesViewType">값은 double형의 요소를 2개 가진 벡터여야 합니다.</entry>
    <entry key="CDataPredicate">값은 트루컬러 이미지를 정의하는 RGB 값의 3차원 행렬이어야 합니다. 각 값은 0.0과 1.0 사이이거나 NaN이어야 합니다.</entry>
    <entry key="CDataRange">값은 트루컬러 이미지를 정의하는 RGB 값의 3차원 행렬이어야 합니다. 각 값은 0.0과 1.0 사이이거나 NaN이어야 합니다.</entry>
    <entry key="CDataSize">값은 트루컬러 이미지를 정의하는 RGB 값의 3차원 행렬이어야 합니다. 각 값은 0.0과 1.0 사이이거나 NaN이어야 합니다.</entry>
    <entry key="CDataType">값은 트루컬러 이미지를 정의하는 RGB 값의 3차원 행렬이어야 합니다. 각 값은 0.0과 1.0 사이이거나 NaN이어야 합니다.</entry>
    <entry key="ColorbarTickLengthSize">값은 double형 스칼라여야 합니다.</entry>
    <entry key="ColorbarTickLengthType">값은 double형 스칼라여야 합니다.</entry>
    <entry key="ColorbarTickLengthScalar">컬러바 TickLength는 스칼라 값을 갖습니다. 첫 번째 값만 사용됩니다.</entry>
    <entry key="ColorMapPredicate">값은 다음 중 하나여야 합니다.\n[0 1] 범위의 single형 또는 double형 Mx3 배열\nuint8형 Mx3 배열.</entry>
    <entry key="ColorMapRange">값은 다음 중 하나여야 합니다.\n[0 1] 범위의 single형 또는 double형 Mx3 배열\nuint8형 Mx3 배열.</entry>
    <entry key="ColorMapSize">값은 다음 중 하나여야 합니다.\n[0 1] 범위의 single형 또는 double형 Mx3 배열\nuint8형 Mx3 배열.</entry>
    <entry key="ColorMapType">값은 다음 중 하나여야 합니다.\n[0 1] 범위의 single형 또는 double형 Mx3 배열\nuint8형 Mx3 배열.</entry>
    <entry key="ColorOrderPredicate">값은 [0 1] 범위의 single형 또는 double형의 비어 있지 않은 Mx3 배열이어야 합니다.</entry>
    <entry key="ColorOrderRange">값은 [0 1] 범위의 single형 또는 double형의 비어 있지 않은 Mx3 배열이어야 합니다.</entry>
    <entry key="ColorOrderSize">값은 [0 1] 범위의 single형 또는 double형의 비어 있지 않은 Mx3 배열이어야 합니다.</entry>
    <entry key="ColorOrderType">값은 [0 1] 범위의 single형 또는 double형의 비어 있지 않은 Mx3 배열이어야 합니다.</entry>
    <entry key="CompositeColorDataPredicate">값은 다음 중 하나여야 합니다.\n트루컬러 - 숫자형 또는 논리형의 4xN 배열\n컬러맵 - 숫자형 또는 논리형의 MxN 벡터.</entry>
    <entry key="CompositeColorDataRange">값은 다음 중 하나여야 합니다.\n트루컬러 - 숫자형 또는 논리형의 4xN 배열\n컬러맵 - 숫자형 또는 논리형의 MxN 벡터.</entry>
    <entry key="CompositeColorDataSize">값은 다음 중 하나여야 합니다.\n트루컬러 - 숫자형 또는 논리형의 4xN 배열\n컬러맵 - 숫자형 또는 논리형의 MxN 벡터.</entry>
    <entry key="CompositeColorDataType">값은 다음 중 하나여야 합니다.\n트루컬러 - 숫자형 또는 논리형의 4xN 배열\n컬러맵 - 숫자형 또는 논리형의 MxN 벡터.</entry>
    <entry key="CurvaturePredicate">값은 다음 중 하나여야 합니다.\ndouble형 스칼라\n[0 1] 범위의 double형 1x2 벡터.</entry>
    <entry key="CurvatureRange">값은 다음 중 하나여야 합니다.\ndouble형 스칼라\n[0 1] 범위의 double형 1x2 벡터.</entry>
    <entry key="CurvatureSize">값은 다음 중 하나여야 합니다.\ndouble형 스칼라\n[0 1] 범위의 double형 1x2 벡터.</entry>
    <entry key="CurvatureType">값은 다음 중 하나여야 합니다.\ndouble형 스칼라\n[0 1] 범위의 double형 1x2 벡터.</entry>
    <entry key="DataBoundsPredicate">값은 single형 또는 double형의 1x2 벡터여야 하며, 그중 두 번째 요소는 첫 번째 요소와 같거나 커야 합니다.</entry>
    <entry key="DataBoundsRange">값은 single형 또는 double형의 1x2 벡터여야 하며, 그중 두 번째 요소는 첫 번째 요소와 같거나 커야 합니다.</entry>
    <entry key="DataBoundsSize">값은 single형 또는 double형의 1x2 벡터여야 하며, 그중 두 번째 요소는 첫 번째 요소와 같거나 커야 합니다.</entry>
    <entry key="DataBoundsType">값은 single형 또는 double형의 1x2 벡터여야 하며, 그중 두 번째 요소는 첫 번째 요소와 같거나 커야 합니다.</entry>
    <entry key="FigureNumberPredicate">값은 double형 스칼라 또는 빈 행렬이어야 합니다.</entry>
    <entry key="FigureNumberSize">값은 double형 스칼라 또는 빈 행렬이어야 합니다.</entry>
    <entry key="FigureNumberType">값은 double형 스칼라 또는 빈 행렬이어야 합니다.</entry>
    <entry key="GridSizePredicate">값은 single형 또는 double형의 2x1 벡터여야 합니다.</entry>
    <entry key="GridSizeRange">값은 single형 또는 double형의 2x1 벡터여야 합니다.</entry>
    <entry key="GridSizeSize">값은 single형 또는 double형의 2x1 벡터여야 합니다.</entry>
    <entry key="GridSizeType">값은 single형 또는 double형의 2x1 벡터여야 합니다.</entry>
    <entry key="GridWeightPredicate">값은 single형 또는 double형의 1xN 벡터여야 합니다.</entry>
    <entry key="GridWeightRange">값은 single형 또는 double형의 1xN 벡터여야 합니다.</entry>
    <entry key="GridWeightSize">값은 single형 또는 double형의 1xN 벡터여야 합니다.</entry>
    <entry key="GridWeightType">값은 single형 또는 double형의 1xN 벡터여야 합니다.</entry>
    <entry key="ImageXYDataLimits">무한대 값과 NaN, NaT, &lt;undefined&gt; 같은 누락값은 유효한 XData 또는 YData가 아닙니다.</entry>
    <entry key="ImageXYDataPredicate">값은 숫자형, 논리형, datetime형, duration형 또는 categorical형 데이터로 구성된 벡터 또는 스칼라여야 합니다.</entry>
    <entry key="ImageXYDataRange">값은 숫자형, 논리형, datetime형, duration형 또는 categorical형 데이터로 구성된 벡터 또는 스칼라여야 합니다.</entry>
    <entry key="ImageXYDataSize">값은 숫자형, 논리형, datetime형, duration형 또는 categorical형 데이터로 구성된 벡터 또는 스칼라여야 합니다.</entry>
    <entry key="ImageXYDataType">값은 숫자형, 논리형, datetime형, duration형 또는 categorical형 데이터로 구성된 벡터 또는 스칼라여야 합니다.</entry>
    <entry key="IndexVectorPredicate">값은 양의 정수로 구성된 벡터여야 합니다.</entry>
    <entry key="IndexVectorRange">값은 양의 정수로 구성된 벡터여야 합니다.</entry>
    <entry key="IndexVectorSize">값은 양의 정수로 구성된 벡터여야 합니다.</entry>
    <entry key="IndexVectorType">값은 양의 정수로 구성된 벡터여야 합니다.</entry>
    <entry key="LimitsPositive">값은 양수로 구성된 1x2 벡터여야 하며, 그중 두 번째 요소는 첫 번째 요소보다 커야 합니다.</entry>
    <entry key="LimitsPredicate">값은 숫자형 1x2 벡터여야 하며, 그중 두 번째 요소는 첫 번째 요소와 같거나 커야 합니다.</entry>
    <entry key="LimitsRange">값은 숫자형 1x2 벡터여야 하며, 그중 두 번째 요소는 첫 번째 요소와 같거나 커야 합니다.</entry>
    <entry key="LimitsSize">값은 숫자형 1x2 벡터여야 하며, 그중 두 번째 요소는 첫 번째 요소와 같거나 커야 합니다.</entry>
    <entry key="LimitsType">값은 숫자형 1x2 벡터여야 하며, 그중 두 번째 요소는 첫 번째 요소와 같거나 커야 합니다.</entry>
    <entry key="LimitsWithInfsPredicate">값은 숫자형 1x2 벡터여야 하며, 그중 두 번째 요소는 첫 번째 요소보다 크거나 Inf여야 합니다.</entry>
    <entry key="LimitsWithInfsRange">값은 숫자형 1x2 벡터여야 하며, 그중 두 번째 요소는 첫 번째 요소보다 크거나 Inf여야 합니다.</entry>
    <entry key="LimitsWithInfsSize">값은 숫자형 1x2 벡터여야 하며, 그중 두 번째 요소는 첫 번째 요소보다 크거나 Inf여야 합니다.</entry>
    <entry key="LimitsWithInfsType">값은 숫자형 1x2 벡터여야 하며, 그중 두 번째 요소는 첫 번째 요소보다 크거나 Inf여야 합니다.</entry>
    <entry key="NColorPtrPredicate">값은 다음 중 하나여야 합니다.\nsingle형 또는 double형 2x3 배열\n0과 1 사이의 single형 또는 double형의 Nx3 배열.</entry>
    <entry key="NColorPtrRange">값은 다음 중 하나여야 합니다.\nsingle형 또는 double형 2x3 배열\n0과 1 사이의 single형 또는 double형의 Nx3 배열.</entry>
    <entry key="NColorPtrSize">값은 다음 중 하나여야 합니다.\nsingle형 또는 double형 2x3 배열\n0과 1 사이의 single형 또는 double형의 Nx3 배열.</entry>
    <entry key="NColorPtrType">값은 다음 중 하나여야 합니다.\nsingle형 또는 double형 2x3 배열\n0과 1 사이의 single형 또는 double형의 Nx3 배열.</entry>
    <entry key="Numeric2D3DMatrixPredicate">값은 3차원 이하의 숫자형 배열이어야 합니다.</entry>
    <entry key="Numeric2D3DMatrixRange">값은 3차원 이하의 숫자형 배열이어야 합니다.</entry>
    <entry key="Numeric2D3DMatrixSize">값은 3차원 이하의 숫자형 배열이어야 합니다.</entry>
    <entry key="Numeric2D3DMatrixType">값은 3차원 이하의 숫자형 배열이어야 합니다.</entry>
    <entry key="NumericMatrixPredicate">값은 숫자형 스칼라, 벡터, 배열 중 하나여야 합니다.</entry>
    <entry key="NumericMatrixRange">값은 숫자형 스칼라, 벡터, 배열 중 하나여야 합니다.</entry>
    <entry key="NumericMatrixSize">값은 숫자형 스칼라, 벡터, 배열 중 하나여야 합니다.</entry>
    <entry key="NumericMatrixType">값은 숫자형 스칼라, 벡터, 배열 중 하나여야 합니다.</entry>
    <entry key="NumericOrLogicalMatrixPredicate">값은 숫자형 또는 논리형 스칼라, 숫자형 또는 논리형 벡터, 숫자형 또는 논리형 배열 중 하나여야 합니다.</entry>
    <entry key="NumericOrLogicalMatrixRange">값은 숫자형 또는 논리형 스칼라, 숫자형 또는 논리형 벡터, 숫자형 또는 논리형 배열 중 하나여야 합니다.</entry>
    <entry key="NumericOrLogicalMatrixSize">값은 숫자형 또는 논리형 스칼라, 숫자형 또는 논리형 벡터, 숫자형 또는 논리형 배열 중 하나여야 합니다.</entry>
    <entry key="NumericOrLogicalMatrixType">값은 숫자형 또는 논리형 스칼라, 숫자형 또는 논리형 벡터, 숫자형 또는 논리형 배열 중 하나여야 합니다.</entry>
    <entry key="ParallelPrimitiveVertexDataPredicate">값은 single형의 3xN 배열이어야 합니다.</entry>
    <entry key="ParallelPrimitiveVertexDataRange">값은 single형의 3xN 배열이어야 합니다.</entry>
    <entry key="ParallelPrimitiveVertexDataSize">값은 single형의 3xN 배열이어야 합니다.</entry>
    <entry key="ParallelPrimitiveVertexDataType">값은 single형의 3xN 배열이어야 합니다.</entry>
    <entry key="ParallelPrimitiveStripDataPredicate">값은 uint32형의 1xN 벡터여야 합니다(값은 모두 0보다 커야 함).</entry>
    <entry key="ParallelPrimitiveStripDataRange">값은 uint32형의 1xN 벡터여야 합니다(값은 모두 0보다 커야 함).</entry>
    <entry key="ParallelPrimitiveStripDataSize">값은 uint32형의 1xN 벡터여야 합니다(값은 모두 0보다 커야 함).</entry>
    <entry key="ParallelPrimitiveStripDataType">값은 uint32형의 1xN 벡터여야 합니다(값은 모두 0보다 커야 함).</entry>
    <entry key="PatchFacesPredicate">값은 숫자형이고 1보다 커야 합니다.</entry>
    <entry key="PatchFacesRange">값은 숫자형이고 1보다 커야 합니다.</entry>
    <entry key="PatchFacesSize">값은 숫자형이고 1보다 커야 합니다.</entry>
    <entry key="PatchFacesType">값은 숫자형이고 1보다 커야 합니다.</entry>
    <entry key="PatchFaceVertexAlphaDataPredicate">값은 알파 값 또는 알파 맵 인덱스의 Mx1 벡터여야 합니다.</entry>
    <entry key="PatchFaceVertexAlphaDataRange">값은 알파 값 또는 알파 맵 인덱스의 Mx1 벡터여야 합니다.</entry>
    <entry key="PatchFaceVertexAlphaDataSize">값은 알파 값 또는 알파 맵 인덱스의 Mx1 벡터여야 합니다.</entry>
    <entry key="PatchFaceVertexAlphaDataType">값은 알파 값 또는 알파 맵 인덱스의 Mx1 벡터여야 합니다.</entry>
    <entry key="PatchFaceVertexCDataPredicate">값은 숫자형 Nx1 또는 숫자형 Nx3 배열이어야 합니다.</entry>
    <entry key="PatchFaceVertexCDataRange">값은 숫자형 Nx1 또는 숫자형 Nx3 배열이어야 합니다.</entry>
    <entry key="PatchFaceVertexCDataSize">값은 숫자형 Nx1 또는 숫자형 Nx3 배열이어야 합니다.</entry>
    <entry key="PatchFaceVertexCDataType">값은 숫자형 Nx1 또는 숫자형 Nx3 배열이어야 합니다.</entry>
    <entry key="PatchNormalsPredicate">값은 숫자형 Nx3 배열이어야 합니다(여기서 N은 패치 면의 행 개수).</entry>
    <entry key="PatchNormalsRange">값은 숫자형 Nx3 배열이어야 합니다(여기서 N은 패치 면의 행 개수).</entry>
    <entry key="PatchNormalsSize">값은 숫자형 Nx3 배열이어야 합니다(여기서 N은 패치 면의 행 개수).</entry>
    <entry key="PatchNormalsType">값은 숫자형 Nx3 배열이어야 합니다(여기서 N은 패치 면의 행 개수).</entry>
    <entry key="PatchVerticesPredicate">값은 숫자형 1x2 또는 숫자형 1x3 벡터여야 합니다.</entry>
    <entry key="PatchVerticesRange">값은 숫자형 1x2 또는 숫자형 1x3 벡터여야 합니다.</entry>
    <entry key="PatchVerticesSize">값은 숫자형 1x2 또는 숫자형 1x3 벡터여야 합니다.</entry>
    <entry key="PatchVerticesType">값은 숫자형 1x2 또는 숫자형 1x3 벡터여야 합니다.</entry>
    <entry key="PointerShapeCDataPredicate">값은 1, 2, NaN 값만 포함한 16x16 또는 32x32 배열이어야 합니다.</entry>
    <entry key="PointerShapeCDataRange">값은 1, 2, NaN 값만 포함한 16x16 또는 32x32 배열이어야 합니다.</entry>
    <entry key="PointerShapeCDataSize">값은 1, 2, NaN 값만 포함한 16x16 또는 32x32 배열이어야 합니다.</entry>
    <entry key="PointerShapeCDataType">값은 1, 2, NaN 값만 포함한 16x16 또는 32x32 배열이어야 합니다.</entry>
    <entry key="PointerShapeHotSpotPredicate">값은 double형 1x2 벡터여야 하며, 벡터에 포함된 값은 둘 다 [1 32] 범위 내에 있어야 합니다.</entry>
    <entry key="PointerShapeHotSpotRange">값은 double형 1x2 벡터여야 하며, 벡터에 포함된 값은 둘 다 [1 32] 범위 내에 있어야 합니다.</entry>
    <entry key="PointerShapeHotSpotSize">값은 double형 1x2 벡터여야 하며, 벡터에 포함된 값은 둘 다 [1 32] 범위 내에 있어야 합니다.</entry>
    <entry key="PointerShapeHotSpotType">값은 double형 1x2 벡터여야 하며, 벡터에 포함된 값은 둘 다 [1 32] 범위 내에 있어야 합니다.</entry>
    <entry key="PolygonClipNodeDataSize">Value must be a 2xN array of type single.</entry>
    <entry key="PolygonClipNodeDataType">Value must be a 2xN array of type single.</entry>
    <entry key="PrimitiveColorDataPredicate">값은 다음 중 하나여야 합니다.\n트루컬러 - uint8형 4xN 배열\n컬러맵 - single형 1xN 벡터\n텍스처 매핑 - single형 2xN 배열.</entry>
    <entry key="PrimitiveColorDataRange">값은 다음 중 하나여야 합니다.\n트루컬러 - uint8형 4xN 배열\n컬러맵 - single형 1xN 벡터\n텍스처 매핑 - single형 2xN 배열.</entry>
    <entry key="PrimitiveColorDataSize">값은 다음 중 하나여야 합니다.\n트루컬러 - uint8형 4xN 배열\n컬러맵 - single형 1xN 벡터\n텍스처 매핑 - single형 2xN 배열.</entry>
    <entry key="PrimitiveColorDataType">값은 다음 중 하나여야 합니다.\n트루컬러 - uint8형 4xN 배열\n컬러맵 - single형 1xN 벡터\n텍스처 매핑 - single형 2xN 배열.</entry>
    <entry key="PrimitiveNormalsDataPredicate">값은 [-1 1] 범위의 single형 3xN 배열이어야 합니다.</entry>
    <entry key="PrimitiveNormalsDataRange">값은 [-1 1] 범위의 single형 3xN 배열이어야 합니다.</entry>
    <entry key="PrimitiveNormalsDataSize">값은 [-1 1] 범위의 single형 3xN 배열이어야 합니다.</entry>
    <entry key="PrimitiveNormalsDataType">값은 [-1 1] 범위의 single형 3xN 배열이어야 합니다.</entry>
    <entry key="PrimitiveRGBADataPredicate">값은 uint8형의 4xN 배열이어야 합니다.</entry>
    <entry key="PrimitiveRGBADataRange">값은 uint8형의 4xN 배열이어야 합니다.</entry>
    <entry key="PrimitiveRGBADataSize">값은 uint8형의 4xN 배열이어야 합니다.</entry>
    <entry key="PrimitiveRGBADataType">값은 uint8형의 4xN 배열이어야 합니다.</entry>
    <entry key="PrimitiveRGBAScalarPredicate">값은 uint8형의 4x1 배열이어야 합니다.</entry>
    <entry key="PrimitiveRGBAScalarRange">값은 uint8형의 4x1 배열이어야 합니다.</entry>
    <entry key="PrimitiveRGBAScalarSize">값은 uint8형의 4x1 배열이어야 합니다.</entry>
    <entry key="PrimitiveRGBAScalarType">값은 uint8형의 4x1 배열이어야 합니다.</entry>
    <entry key="PrimitiveStripDataPredicate">값은 uint32형의 1xN 벡터여야 합니다(값은 모두 0보다 커야 함).</entry>
    <entry key="PrimitiveStripDataRange">값은 uint32형의 1xN 벡터여야 합니다(값은 모두 0보다 커야 함).</entry>
    <entry key="PrimitiveStripDataSize">값은 uint32형의 1xN 벡터여야 합니다(값은 모두 0보다 커야 함).</entry>
    <entry key="PrimitiveStripDataType">값은 uint32형의 1xN 벡터여야 합니다(값은 모두 0보다 커야 함).</entry>
    <entry key="PrimitiveVertexDataPredicate">값은 single형의 3xN 배열이어야 합니다.</entry>
    <entry key="PrimitiveVertexDataRange">값은 single형의 3xN 배열이어야 합니다.</entry>
    <entry key="PrimitiveVertexDataSize">값은 single형의 3xN 배열이어야 합니다.</entry>
    <entry key="PrimitiveVertexDataType">값은 single형의 3xN 배열이어야 합니다.</entry>
    <entry key="PrimitiveVertexIndicesPredicate">값은 uint32형의 1xN 벡터여야 합니다.</entry>
    <entry key="PrimitiveVertexIndicesRange">값은 uint32형의 1xN 벡터여야 합니다.</entry>
    <entry key="PrimitiveVertexIndicesSize">값은 uint32형의 1xN 벡터여야 합니다.</entry>
    <entry key="PrimitiveVertexIndicesType">값은 uint32형의 1xN 벡터여야 합니다.</entry>
    <entry key="PrimitiveAlignmentDataPredicate">값은 single형의 벡터여야 합니다.</entry>
    <entry key="PrimitiveAlignmentDataRange">값은 single형의 벡터여야 합니다.</entry>
    <entry key="PrimitiveAlignmentDataSize">값은 single형의 벡터여야 합니다.</entry>
    <entry key="PrimitiveAlignmentDataType">값은 single형의 벡터여야 합니다.</entry>
    <entry key="ScribePositionPredicate">값은 숫자형의 1x4 벡터여야 합니다.</entry>
    <entry key="ScribePositionRange">값은 숫자형의 1x4 벡터여야 합니다.</entry>
    <entry key="ScribePositionSize">값은 숫자형의 1x4 벡터여야 합니다.</entry>
    <entry key="ScribePositionType">값은 숫자형의 1x4 벡터여야 합니다.</entry>
    <entry key="StripDataPredicate">StripData에 대한 오류 메시지입니다.</entry>
    <entry key="SurfaceCDataPredicate">값은 숫자형의 2차원 배열 또는 숫자형의 3차원 배열이어야 합니다.</entry>
    <entry key="SurfaceCDataRange">값은 숫자형의 2차원 배열 또는 숫자형의 3차원 배열이어야 합니다.</entry>
    <entry key="SurfaceCDataSize">값은 숫자형의 2차원 배열 또는 숫자형의 3차원 배열이어야 합니다.</entry>
    <entry key="SurfaceCDataType">값은 숫자형의 2차원 배열 또는 숫자형의 3차원 배열이어야 합니다.</entry>
    <entry key="SurfaceVertexNormalsPredicate">값은 single형 또는 double형의 NxMx3 배열이어야 합니다.</entry>
    <entry key="SurfaceVertexNormalsRange">값은 single형 또는 double형의 NxMx3 배열이어야 합니다.</entry>
    <entry key="SurfaceVertexNormalsSize">값은 single형 또는 double형의 NxMx3 배열이어야 합니다.</entry>
    <entry key="SurfaceVertexNormalsType">값은 single형 또는 double형의 NxMx3 배열이어야 합니다.</entry>
    <entry key="SurfaceXYDataPredicate">값은 숫자형 벡터 또는 숫자형의 2차원 배열이어야 합니다.</entry>
    <entry key="SurfaceXYDataRange">값은 숫자형 벡터 또는 숫자형의 2차원 배열이어야 합니다.</entry>
    <entry key="SurfaceXYDataSize">값은 숫자형 벡터 또는 숫자형의 2차원 배열이어야 합니다.</entry>
    <entry key="SurfaceXYDataType">값은 숫자형 벡터 또는 숫자형의 2차원 배열이어야 합니다.</entry>
    <entry key="TableCellSelectionPredicate">값은 double형의 Nx2 배열이어야 합니다.</entry>
    <entry key="TableCellSelectionRange">값은 double형의 Nx2 배열이어야 합니다.</entry>
    <entry key="TableCellSelectionSize">값은 double형의 Nx2 배열이어야 합니다.</entry>
    <entry key="TableCellSelectionType">값은 double형의 Nx2 배열이어야 합니다.</entry>
    <entry key="TextPositionPredicate">값은 숫자형 또는 논리형의 요소를 2개 가진 벡터 또는 숫자형 또는 논리형의 요소를 3개 가진 벡터여야 합니다.</entry>
    <entry key="TextPositionRange">값은 숫자형 또는 논리형의 요소를 2개 가진 벡터 또는 숫자형 또는 논리형의 요소를 3개 가진 벡터여야 합니다.</entry>
    <entry key="TextPositionSize">값은 숫자형 또는 논리형의 요소를 2개 가진 벡터 또는 숫자형 또는 논리형의 요소를 3개 가진 벡터여야 합니다.</entry>
    <entry key="TextPositionType">값은 숫자형 또는 논리형의 요소를 2개 가진 벡터 또는 숫자형 또는 논리형의 요소를 3개 가진 벡터여야 합니다.</entry>
    <entry key="TextureColorDataPredicate">값은 uint8형의 4xMxN 배열이어야 합니다.</entry>
    <entry key="TextureColorDataRange">값은 uint8형의 4xMxN 배열이어야 합니다.</entry>
    <entry key="TextureColorDataSize">값은 uint8형의 4xMxN 배열이어야 합니다.</entry>
    <entry key="TextureColorDataType">값은 uint8형의 4xMxN 배열이어야 합니다.</entry>
    <entry key="TickPredicate">값은 증가하는 값을 갖는 숫자형 벡터여야 합니다.</entry>
    <entry key="TickRange">값은 증가하는 값을 갖는 숫자형 벡터여야 합니다.</entry>
    <entry key="TickSize">값은 증가하는 값을 갖는 숫자형 벡터여야 합니다.</entry>
    <entry key="TickType">값은 증가하는 값을 갖는 숫자형 벡터여야 합니다.</entry>
    <entry key="TickLengthPredicate">값은 숫자형의 2x1 벡터여야 합니다.</entry>
    <entry key="TickLengthRange">값은 숫자형의 2x1 벡터여야 합니다.</entry>
    <entry key="TickLengthSize">값은 숫자형의 2x1 벡터여야 합니다.</entry>
    <entry key="TickLengthType">값은 숫자형의 2x1 벡터여야 합니다.</entry>
    <entry key="TipInterpolationFactorTypePredicate">값은 [0 1] 범위의 single형 또는 double형의 스칼라여야 합니다.</entry>
    <entry key="TipInterpolationFactorTypeRange">값은 [0 1] 범위의 single형 또는 double형의 스칼라여야 합니다.</entry>
    <entry key="TipInterpolationFactorTypeSize">값은 [0 1] 범위의 single형 또는 double형의 스칼라여야 합니다.</entry>
    <entry key="TipInterpolationFactorTypeType">값은 [0 1] 범위의 single형 또는 double형의 스칼라여야 합니다.</entry>
    <entry key="VectorDataPredicate">값은 숫자형 벡터여야 합니다.</entry>
    <entry key="VectorDataRange">값은 숫자형 벡터여야 합니다.</entry>
    <entry key="VectorDataSize">값은 숫자형 벡터여야 합니다.</entry>
    <entry key="VectorDataType">값은 숫자형 벡터여야 합니다.</entry>
    <entry key="PositiveVectorDataSize">값은 양의 숫자형으로 구성된 벡터여야 합니다.</entry>
    <entry key="PositiveVectorDataPredicate">값은 양의 숫자형으로 구성된 벡터여야 합니다.</entry>
    <entry key="PositiveVectorDataType">값은 양의 숫자형으로 구성된 벡터여야 합니다.</entry>
    <entry key="PositiveOrNanVectorDataSize">값은 양의 숫자형이나 NaN으로 구성된 벡터여야 합니다.</entry>
    <entry key="PositiveOrNanVectorDataPredicate">값은 양의 숫자형이나 NaN으로 구성된 벡터여야 합니다.</entry>
    <entry key="PositiveOrNanVectorDataType">값은 양의 숫자형이나 NaN으로 구성된 벡터여야 합니다.</entry>
    <entry key="TiledGridSizeType">값은 intmax보다 작은 정수로 구성된 요소를 2개 가진 벡터여야 합니다.</entry>
    <entry key="TiledGridSizeSize">값은 intmax보다 작은 정수로 구성된 요소를 2개 가진 벡터여야 합니다.</entry>
    <entry key="TiledGridSizePredicate">값은 intmax보다 작은 정수로 구성된 요소를 2개 가진 벡터여야 합니다.</entry>
  </message>
</rsccat>
