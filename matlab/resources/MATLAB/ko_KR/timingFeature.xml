<?xml version="1.0" encoding="UTF-8"?>
<!--Copyright 2024 The MathWorks, Inc.-->

<rsccat xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.0" locale="ko_KR" product="MATLAB" xsi:noNamespaceSchemaLocation="../../resources/schema/msgcat.xsd">
  <message>
    <entry key="clockSpeedCyclesPerSec">clock() 속도: {0}사이클/초.\n</entry>
    <entry key="counterCycles">카운터: {0}사이클.\n</entry>
    <entry key="cpuFrequencyFeatureNotAvailable">이 플랫폼에서는 이 기능을 사용할 수 없습니다.\n</entry>
    <entry key="currentCpuSpeedCyclesPerSec">현재 CPU 속도: {0}사이클/초.\n</entry>
    <entry key="oldTicTocSpeedCyclesPerSec">이전 tic/toc CPU 속도: {0}사이클/초.\n</entry>
    <entry key="overheadTicTocCommand">Tic/Toc 명령의 오버헤드: {0}초.\n</entry>
    <entry key="speedCyclesPerSec">속도: {0}사이클/초.\n</entry>
    <entry key="resolutionTicTocClock">Tic/Toc 클록의 정밀도: {0}초.\n</entry>
    <entry key="ticTocCpuSpeedCyclesPerSec">tic/toc CPU 속도: {0}사이클/초.\n</entry>
    <entry key="timeInMsec">시간: {0}msec.\n</entry>
    <entry key="timeInNsec">시간: {0}nsec.\n</entry>
    <entry key="timeInTics">시간: {0}tics.\n</entry>
    <entry key="timeInUsec">시간: {0}usec.\n</entry>
    <entry key="timeIn100nsec">시간: {0}단위(100nsec).\n</entry>
    <entry key="uint64Difference">uint64형 차이점: {0}.\n</entry>
    <entry key="wrongSecondInput">두 번째 인수는 문자형 벡터여야 함</entry>
    <entry key="wrongThirdInput">세 번째 인수는 double형이어야 합니다.</entry>
    <entry key="wrongValueWin32">Choose second argument from: \n    ''resolution_tictoc''  - Resolution of Tic/Toc clock in sec (double)\n    ''overhead_tictoc''    - Overhead of Tic/Toc command in sec (double)\n    ''getcpuspeed_tictoc'' - Stored CPU cycles/sec (double) [Used by tic/toc]\n    ''cpuspeed''           - Current CPU cycles/sec (double) [Simple MathWorks]\n    ''unixtimeofday''      - Current time of day (uint64) [gettimeofday call]\n                           units: usec since 01-Jan-1970 (UTC)\n    ''clocks_per_sec''     - clock() speed in cycles/sec [CLOCKS_PER_SEC]\n    ''posixrtperftime''    - Posix real time in nsec (uint64) [clock_gettime call]\n    ''posixrtperfspeed''   - Posix real time clock speed (double) [clock_getres call]\n                           units: cycles/sec\nChoose second and third arguments from: \n    ''cpuspeed'', double num              - Current CPU cycles/sec (double) [MathWorks - num iterations]\n         uint64 arg2, uint64 arg3           - uint64 difference = arg2 - arg3 (uint64)</entry>
    <entry key="wrongValueLinux">Choose second argument from: \n	        ''resolution_tictoc''  - Resolution of Tic/Toc clock in sec (double)\n	        ''overhead_tictoc''    - Overhead of Tic/Toc command in sec (double)\n	        ''getcpuspeed_tictoc'' - Stored CPU cycles/sec (double) [Used by tic/toc]\n	        ''cpuspeed''           - Current CPU cycles/sec (double) [Simple MathWorks]\n	        ''unixtimeofday''      - Current time of day (uint64) [gettimeofday call]\n	                               units: usec since 01-Jan-1970 (UTC)\n	        ''clocks_per_sec''     - clock() speed in cycles/sec [CLOCKS_PER_SEC]\n	        ''posixrtperftime''    - Posix real time in nsec (uint64) [clock_gettime call]\n	        ''posixrtperfspeed''   - Posix real time clock speed (double) [clock_getres call]\n	                               units: cycles/sec\n	    Choose second and third arguments from: \n	        ''cpuspeed'', double num              - Current CPU cycles/sec (double) [MathWorks - num iterations]\n 	        	         uint64 arg2, uint64 arg3           - uint64 difference = arg2 - arg3 (uint64)</entry>
    <entry key="wrongValueApple">Choose second argument from: \n	        ''resolution_tictoc''  - Resolution of Tic/Toc clock in sec (double)\n	        ''overhead_tictoc''    - Overhead of Tic/Toc command in sec (double)\n	        ''getcpuspeed_tictoc'' - Stored CPU cycles/sec (double) [Used by tic/toc]\n	        ''cpuspeed''           - Current CPU cycles/sec (double) [Simple MathWorks]\n	        ''unixtimeofday''      - Current time of day (uint64) [gettimeofday call]\n	                               units: usec since 01-Jan-1970 (UTC)\n	       ''clocks_per_sec''     - clock() speed in cycles/sec [CLOCKS_PER_SEC]\n	        ''macperftimeaudio''   - Mac real time in tics (uint64) [AudioGetCurrentHostTime call]\n	        ''macperftimeaudions'' - Mac real time in nsec (uint64)\n	                               [AudioConvertHostTimeToNanos(AudioGetCurrentHostTime) call]\n	        ''macperfspeedaudio''  - Mac real time clock speed (double) [AudioGetHostClockFrequency call]\n	                               units: cycles/sec\n	        ''macperftimemach''    - Mac real time in tics (uint64) [mach_absolute_time call]\n	        ''macperfspeedmach''   - Mac real time clock speed (double) [mach_timebase_info call]\n	                               units: cycles/sec\n	    Choose second and third arguments from: \n	        ''cpuspeed'', double num              - Current CPU cycles/sec (double) [MathWorks - num iterations]\n	        	         uint64 arg2, uint64 arg3           - uint64 difference = arg2 - arg3 (uint64)</entry>
    <entry key="wrongValue">Choose second argument from: \n                ''resolution_tictoc''  - Resolution of Tic/Toc clock in sec (double)\n                ''overhead_tictoc''    - Overhead of Tic/Toc command in sec (double)\n                ''getcpuspeed_tictoc'' - Stored CPU cycles/sec (double) [Used by tic/toc]\n                ''cpuspeed''           - Current CPU cycles/sec (double) [Simple MathWorks]\n                ''unixtimeofday''      - Current time of day (uint64) [gettimeofday call]\n                                       units: usec since 01-Jan-1970 (UTC)\n            ''clocks_per_sec''     - clock() speed in cycles/sec [CLOCKS_PER_SEC]\n	    Choose second and third arguments from: \n	        ''cpuspeed'', double num              - Current CPU cycles/sec (double) [MathWorks - num iterations]\n 	        	         uint64 arg2, uint64 arg3           - uint64 difference = arg2 - arg3 (uint64)</entry>
  </message>
</rsccat>
