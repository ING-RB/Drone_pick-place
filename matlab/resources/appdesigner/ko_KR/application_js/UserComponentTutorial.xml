<?xml version="1.0" encoding="UTF-8"?>
<!--Copyright 2024 The MathWorks, Inc.-->

<rsccat xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.0" locale="ko_KR" product="appdesigner" xsi:noNamespaceSchemaLocation="../../../../resources/schema/msgcat.xsd">
  <message>
    <entry key="addSliderContext">단순한 사용자 지정 UI 컴포넌트를 빌드해 보겠습니다. 값이 함께 연결되어 있는 슬라이더와 스핀 상자로 구성됩니다.</entry>
    <entry key="addSliderAction">{0}슬라이더{1} 컴포넌트를 캔버스 위로 끌어서 놓으십시오.</entry>
    <entry key="addSpinnerAction">{0}스핀 상자{1} 컴포넌트를 캔버스 위로 끌어서 놓으십시오.</entry>
    <entry key="clickAddPublicPropertyContext">이름이 {0}Value{1}인 퍼블릭 속성을 만들어 앱 작성자가 컴포넌트를 사용하여 앱을 빌드할 때 슬라이더-스핀 상자 컴포넌트 값을 설정할 수 있도록 합니다.</entry>
    <entry key="clickAddPublicPropertyAction">{0}에서 컴포넌트 노드를 선택하고 {1} 버튼을 클릭하여 새 퍼블릭 속성을 추가하십시오.</entry>
    <entry key="doAddPublicPropertyContext">다음 값으로 대화 상자를 채운 후 {0}을(를) 클릭하여 속성을 만드십시오:</entry>
    <entry key="switchToCodeViewContext">앱 디자이너에는 컴포넌트를 디자인할 수 있는 디자인 보기와 컴포넌트를 프로그래밍할 수 있는 코드 보기가 있습니다.</entry>
    <entry key="switchToCodeViewAction">{0}를 클릭하여 컴포넌트 프로그래밍을 시작하십시오.</entry>
    <entry key="addSliderCallbackContext">사용자가 슬라이더 값을 변경할 때 이에 응답하도록 슬라이더에 대한 콜백 함수를 만듭니다.</entry>
    <entry key="addSliderCallbackAction">{0}에서 {1}을(를) 마우스 오른쪽 버튼으로 클릭하고 {2} &gt; {3}을(를) 선택하십시오.</entry>
    <entry key="addSpinnerCallbackContext">다음으로, 스핀 상자에 대해서도 동일한 작업을 수행하십시오. 콜백 함수를 새로 만드는 대신 슬라이더 콜백 함수를 재사용할 수 있습니다.</entry>
    <entry key="addSpinnerCallbackAction">{0}에서 {1}을(를) 마우스 오른쪽 버튼으로 클릭하고 {2} &gt; {3}을(를) 선택하십시오. 그런 다음 대화 상자에서 슬라이더에 대한 기존 콜백 함수를 선택하십시오.</entry>
    <entry key="addSetValuePropertyCodeContext">슬라이더 값이 변경되어 이 콜백 함수가 실행되면 새 슬라이더 값과 일치하도록 컴포넌트의 {0} 속성을 업데이트합니다.</entry>
    <entry key="addSetValuePropertyCodeAction">다음 코드를 사용해 콜백 코드를 바꿔 이 작업을 수행하십시오:</entry>
    <entry key="addUpdateCodeContext">슬라이더 또는 스핀 상자의 값이 변경되면 컴포넌트의 {0} 속성이 이제 업데이트됩니다. 이제, 반대로 누군가가 컴포넌트의 {1} 속성을 프로그래밍 방식으로 설정하면 슬라이더와 스핀 상자의 값을 업데이트합니다.</entry>
    <entry key="addUpdateCodeAction">{0} 함수에서 이 작업을 수행하도록 다음 코드를 작성하십시오. 이 함수는 퍼블릭 속성의 값이 변경될 때마다 실행됩니다:</entry>
    <entry key="clickAddEventContext">퍼블릭 콜백을 만들어 컴포넌트의 사용자가 자신의 앱에 대한 컨텍스트에서 상호 작용에 대한 응답을 프로그래밍할 수 있도록 합니다. 이벤트를 추가하면 앱 디자이너가 퍼블릭 콜백을 만듭니다.</entry>
    <entry key="clickAddEventAction">{0} 탭을 클릭한 후 {1} 버튼을 클릭하여 새 이벤트를 추가하십시오.</entry>
    <entry key="doAddEventContext">사용자가 이벤트를 추가하면 앱 디자이너가 추가된 {0}과(와) 동일한 이름의 퍼블릭 콜백을 만듭니다. 이 콜백은 컴포넌트가 앱에 추가되면 사용할 수 있습니다.</entry>
    <entry key="doAddEventAction">이벤트의 이름을 {0}(으)로 지정하십시오.</entry>
    <entry key="addNotifyCodeContext">적절한 시점에 {0} 콜백을 트리거하려면 컴포넌트의 {1} 속성을 변경할 때마다 이벤트를 알려야 합니다.</entry>
    <entry key="addNotifyCodeAction">이 콜백의 끝 부분에 다음 코드를 추가하여 이 작업을 수행하십시오:</entry>
    <entry key="runComponentAction">{0}을(를) 클릭하여 컴포넌트를 저장 및 실행하고 대화형 동작을 확인하십시오.</entry>
    <entry key="testInCommandWindowAction">컴포넌트 값이 변경될 때 컴포넌트의 {0} 콜백이 트리거되는지 확인하려면 MATLAB 명령 창에서 다음 코드를 실행하십시오:</entry>
    <entry key="configureComponentContext">축하합니다. 처음으로 사용자 지정 UI 컴포넌트를 빌드해 보았습니다!</entry>
    <entry key="configureComponentAction">{0}을(를) 클릭하여 컴포넌트가 앱 디자이너 컴포넌트 라이브러리에 표시되도록 하십시오. 자신의 앱에서 컴포넌트를 사용하거나 다른 사람들과 컴포넌트를 공유할 수 있습니다.</entry>
  </message>
</rsccat>
