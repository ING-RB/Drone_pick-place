<?xml version="1.0" encoding="UTF-8"?>
<!--Copyright 2024 The MathWorks, Inc.-->

<rsccat xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.0" locale="ko_KR" product="appdesigner" xsi:noNamespaceSchemaLocation="../../../../resources/schema/msgcat.xsd">
  <message>
    <entry key="addAxesContext">슬라이더로 좌표축의 플롯을 제어하는 간단한 앱을 작성해 보겠습니다.</entry>
    <entry key="addAxesAction">{0}좌표축{1} 컴포넌트를 캔버스 위로 끌어서 놓으십시오.</entry>
    <entry key="addSliderAction">{0}슬라이더{1} 컴포넌트를 캔버스 위로 끌어서 놓으십시오.</entry>
    <entry key="editSliderLabelAction">슬라이더의 디폴트 레이블 텍스트를 클릭하여 {0}진폭{1}을 입력하십시오.</entry>
    <entry key="switchToCodeViewContext">앱 디자이너에는 앱을 디자인할 수 있는 디자인 보기와 앱을 프로그래밍할 수 있는 코드 보기가 있습니다.</entry>
    <entry key="switchToCodeViewAction">{0}를 클릭하여 앱 프로그래밍을 시작하십시오.</entry>
    <entry key="addCallbackContext">콜백 함수를 구현하면 앱이 버튼 클릭 같은 사용자 상호 작용에 응답할 수 있습니다.</entry>
    <entry key="addCallbackAction">컴포넌트 브라우저에서 {0}을(를) 마우스 오른쪽 버튼으로 클릭하고 {1}을(를) 선택하십시오.</entry>
    <entry key="plotInAxesContext">좌표축에 플로팅하려면 좌표축 컴포넌트를 플롯 명령의 첫 번째 입력 인수로 사용해야 합니다.</entry>
    <entry key="plotInAxesAction">다음 코드를 추가하십시오.</entry>
    <entry key="setPropertyContext">코드에서 컴포넌트 속성을 가져오거나 설정하려면 {0}app.Component.Property{1}를 사용하십시오.</entry>
    <entry key="setPropertyAction">다음 코드를 추가하여 좌표축의 ylim 속성을 설정하십시오.</entry>
    <entry key="runAppAction">{0}을(를) 클릭하여 앱을 저장하고 실행하십시오.</entry>
    <entry key="showTipsContext">축하합니다. 앱 디자이너를 사용하여 처음으로 앱을 작성해 보았습니다!</entry>
    <entry key="showTipsAction">앱 디자이너 프로그래밍에 대한 추가 도움말을 보려면 {0}을(를) 클릭하고, 더 다양한 기법을 배우려면 {1}App Building Onramp{2}를 사용해 보십시오.</entry>
    <entry key="responsify_newAppCreated">앱이 자동 재배치 동작을 사용하도록 변환되었습니다.</entry>
    <entry key="responsify_canvas">컴포넌트가 새 패널에 자동으로 배치되었습니다. 이제 필요에 따라 컴포넌트 위치를 조정할 수 있습니다.</entry>
    <entry key="responsify_sizeChanged">원래 앱은 Figure에 SizeChangedFcn 콜백이 있었습니다. 자동 크기 조정 동작이 가능하도록 이 콜백과의 연결이 끊어졌습니다.</entry>
    <entry key="responsify_saveAndRun">자동 재배치 기능이 구비된 새 앱을 저장한 후 실행하십시오.\n\n앱의 창 크기를 조정하여 앱 콘텐츠가 화면 크기 변경에 따라 어떻게 조정되고 반응하는지 확인해 보십시오.</entry>
    <entry key="responsify_hierarchyChanged_2panel">app.{0} 및 app.{1}이(가) Figure에 적용되었습니다. 앱을 실행하여 새로운 자동 재배치 및 크기 조정 동작을 확인하십시오.</entry>
    <entry key="responsify_hierarchyChanged_3panel">app.{0}, app.{1}, app.{2}이(가) Figure에 적용되었습니다. 앱을 실행하여 새로운 자동 재배치 및 크기 조정 동작을 확인하십시오.</entry>
    <entry key="responsify_hierarchyChanged">경우에 따라, 이 사전 구성된 새 패널로 작업하도록 콜백 코드를 업데이트해야 할 수 있습니다.</entry>
    <entry key="responsify_nextButton">다음</entry>
    <entry key="responsify_skipButton">튜토리얼 건너뛰기</entry>
    <entry key="responsify_finishButton">마침</entry>
    <entry key="gridify_tutorial_title">자동으로 변경된 사항</entry>
    <entry key="gridify_tutorial_message_part1">{0}.{1}이(가) {0}.{2}에 적용되었습니다. 컴포넌트의 위치는 이제 그리드 레이아웃 관리자에 의해 관리됩니다. {0}을(를) 실행하여 새 레이아웃 동작을 확인하십시오.</entry>
    <entry key="gridify_tutorial_message_part2">경우에 따라, 그리드 레이아웃 관리자로 작업하도록 콜백 코드를 업데이트해야 할 수 있습니다.</entry>
  </message>
</rsccat>
