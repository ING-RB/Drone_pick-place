<?xml version="1.0" encoding="UTF-8"?>
<!--Copyright 2024 The MathWorks, Inc.-->

<rsccat xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.0" locale="ja_JP" product="appdesigner" xsi:noNamespaceSchemaLocation="../../../../resources/schema/msgcat.xsd">
  <message>
    <entry key="addAxesContext">スライダーで座標軸上のプロットをコントロールするシンプルなアプリを作成しましょう。</entry>
    <entry key="addAxesAction">{0}座標軸{1}コンポーネントをキャンバスにドラッグします。</entry>
    <entry key="addSliderAction">{0}スライダー{1}コンポーネントをキャンバスにドラッグします。</entry>
    <entry key="editSliderLabelAction">スライダーの既定のラベル テキストを {0}Amplitude{1} と入力して置き換えます。</entry>
    <entry key="switchToCodeViewContext">App Designer には、アプリを設計するための設計ビュー、アプリをプログラミングするためのコード ビューがあります。</entry>
    <entry key="switchToCodeViewAction">{0} をクリックしてアプリのプログラミングを開始します。</entry>
    <entry key="addCallbackContext">コールバック関数により、ボタンのクリックのようなユーザー操作にアプリが応答できるようになります。</entry>
    <entry key="addCallbackAction">コンポーネント ブラウザーで {0} を右クリックし {1} を選択します。</entry>
    <entry key="plotInAxesContext">座標軸上にプロットするには、座標軸コンポーネントをプロット コマンドの第 1 入力引数として使用する必要があります。</entry>
    <entry key="plotInAxesAction">次のコードを追加します:</entry>
    <entry key="setPropertyContext">{0}app.Component.Property{1} を使用してコード内でコンポーネント プロパティを取得または設定します。</entry>
    <entry key="setPropertyAction">次のコードを追加して座標軸の ylim プロパティを設定します:</entry>
    <entry key="runAppAction">{0} をクリックしてアプリを保存し、実行します。</entry>
    <entry key="showTipsContext">おめでとうございます。App Designer を使用した最初のアプリが作成されました。</entry>
    <entry key="showTipsAction">App Designer でのプログラミングについてその他のヘルプを参照するには {0} をクリックしてください。さらに多くの手法を学習するには「{1}アプリ開発入門{2}」を試してください。</entry>
    <entry key="responsify_newAppCreated">アプリは自動リフロー動作を使用するように変換されました。</entry>
    <entry key="responsify_canvas">コンポーネントは自動的に新しいパネルに配置されました。コンポーネントの位置は必要に応じて調整可能です。</entry>
    <entry key="responsify_sizeChanged">元のアプリでは、SizeChangedFcn コールバックが Figure に含まれていました。このコールバックは、自動サイズ変更動作を許可するために切断されました。</entry>
    <entry key="responsify_saveAndRun">新しい自動リフロー アプリを保存して実行します。\n\nアプリ ウィンドウのサイズを変更して、スクリーン サイズの変更に対してアプリ コンテンツがどのように適応し、反応するかを確認してください。</entry>
    <entry key="responsify_hierarchyChanged_2panel">app.{0} と app.{1} が Figure に適用されました。アプリを実行して、新しい自動リフローとサイズ変更の動作を表示してください。</entry>
    <entry key="responsify_hierarchyChanged_3panel">app.{0}、app.{1}、app.{2} が Figure に適用されました。アプリを実行して、新しい自動リフローとサイズ変更の動作を表示してください。</entry>
    <entry key="responsify_hierarchyChanged">場合によっては、これらの新しい事前構成済みパネルを操作するためにコールバック コードの更新が必要になることがあります。</entry>
    <entry key="responsify_nextButton">次へ</entry>
    <entry key="responsify_skipButton">チュートリアルをスキップ</entry>
    <entry key="responsify_finishButton">終了</entry>
    <entry key="gridify_tutorial_title">既に行われた変更</entry>
    <entry key="gridify_tutorial_message_part1">{0}.{1} が {0}.{2} に適用されました。コンポーネントの位置はグリッド レイアウト マネージャーにより管理されるようになりました。{0} を実行して新しいレイアウトの動作を表示してください。</entry>
    <entry key="gridify_tutorial_message_part2">場合によっては、グリッド レイアウト マネージャーを操作するためにコールバック コードの更新が必要になることがあります。</entry>
  </message>
</rsccat>
