<?xml version="1.0" encoding="UTF-8" ?>
<!-- Copyright 2018-2024 The MathWorks, Inc. -->
<rsccat version="1.0" locale="en_US" product="vvir" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../../schema/msgcat.xsd">
  <message>
    <!-- Error messages. -->
    <entry key="ErrorInOption" translate="false">Error(s) in option {0}</entry>
    <entry key="TaskNameMustContainNoSignature" translate="false">Tasks names must contain no signature : {0}</entry>
    <entry key="SeveralFunctionsMatch" translate="false">Several functions match this name : {0}. The defined non member function is kept.</entry>

    <!-- Warning messages. -->
    <entry key="RemoveTaskCall" translate="false">task {0} is called directly or by pointer\n| Polyspace ignores this call context and verifies the main function in all contexts.</entry>
    <entry key="UnknownFcnNamesUsedInOption" translate="false">Unknown function names used in verifier option {0}: {1}</entry>
    <entry key="OptionWillBeIgnored" translate="false">Option {0} will be ignored.</entry>
    <entry key="ThreadExitIgnored" translate="false">You are using the {0} function to terminate your thread, Polyspace does not handle this function for thread termination. {0} will be replaced by the standard exit function.</entry>

    <entry key="RemoveMainCall" translate="false">main function is called directly or by pointer\n| Polyspace ignores this call context and verifies the main function in all contexts.</entry>
    <entry key="TooBigStruct" translate="false">class/struct/union size {0,number,integer} exceeds internal limit of 256 Mb. Continuing analysis but unexpected issues might occur later.</entry>
    <!-- Virtual calls lowering -->
    <entry key="VirtualCallHeader" translate="false">Some stats on virtual calls:</entry>
    <entry key="VirtualCallNum" translate="false">\ \ Number of virtual calls: {0,number,integer}</entry>
    <entry key="VirtualCallNumDispatch" translate="false">\ \ Number of dispatched calls: {0,number,integer}</entry>
    <entry key="VirtualCallFuncNone" translate="false">\ \ tMax number of dispatched calls in functions: none</entry>
    <entry key="VirtualCallFuncHeader" translate="false">\ \ Max number of dispatched calls in functions:</entry>
    <entry key="VirtualCallFuncEntry" translate="false">\ \ \ \ {0}{1,number,integer} dispatched calls in function {2}</entry>
    <entry key="VirtualCallLocNone" translate="false">\ \ Max number of dispatched calls in virtual calls: none</entry>
    <entry key="VirtualCallLocHeader" translate="false">\ \ Max number of dispatched calls in virtual calls</entry>
    <entry key="VirtualCallLocEntry" translate="false">\ \ \ \ {0}{1,number,integer} dispatched calls at file {2}, {3,number,integer}</entry>
    <entry key="VirtualCallTypeNone" translate="false">\ \ Max number of dispatched calls on types: none</entry>
    <entry key="VirtualCallTypeHeader" translate="false">\ \ Max number of dispatched calls on types:</entry>
    <entry key="VirtualCallTypeEntry" translate="false">\ \ \ \ {0}{1,number,integer} dispatched calls on type {2}</entry>

    <!-- Clone Functions message -->
    <entry key="ClonedFunction" translate="false">* function {0} has been cloned into {1} (called by {2})</entry>
    <entry key="CloneTargetExcluded" translate="false">Explicitly requested function {0} can not be inlined as it is excluded</entry>

    <!-- ModelSFRTypesPass messages (the newlines are intentional) -->
    <entry key="WarnSFROverlap" translate="false">sfr ''{0}'' overlaps sfr ''{1}''\n</entry>
    <entry key="WarnSFRSameLocation" translate="false">sfr ''{0}'' and sfr ''{1}'' are located at the same address\n</entry>
    <entry key="WarnSFRNotFoundForAddress" translate="false">''{0}'' no sfr found at address ''0x{1}''\n</entry>

    <!-- Messages for -code-behavior-specifications -->
    <entry key="LibRecAttributeInvalid" translate="false">{0} invalid XML configuration: "{1}" for function {2}.</entry>

    <!-- Clone context messages.
    <entry key="WhenCalledWithThisTypeIsA" translate="false">- when called with this-type is a {0} or a derived class</entry>
    <entry key="constructionStr" translate="false">construction</entry>
    <entry key="destructionStr" translate="false">destruction</entry>
    <entry key="constructionDestructionStr" translate="false">construction/destruction</entry>
    <entry key="derivedStr" translate="false">derived</entry>
    <entry key="WhenCalledDuringOpOfObjWhenThisTypeIsA" translate="false">- when called during {0} of a {1} object, when this-type is known to be a {2}</entry>
    -->

    <!-- Messages for -system-inputs-from option -->
    <entry key="SystemInputsFromFuncDoesNotExist" translate="false">function "{0}" does not exist. Fix option -system-inputs-from.</entry>
    <!-- Limitation message -->
    <entry key="TryFinallyWithExternalGotoInGuardedStmt" translate="false">__try __finally with external goto in guarded statement</entry>
    <entry key="TryFinallyWithReturnInGuardedStmt" translate="false">__try __finally with return in guarded statement</entry>

    <!-- GotoElimination messages -->
    <entry key="HighControlFlowComplexityDetected" translate="false">{0} contains complex control flow structure which may lead to scaling issues. Consider using the -functions-to-stub option for this function.</entry>
    <entry key="FunctionContainsErrorsWillBeIgnored" translate="false">Function {0} contains errors. The function will be ignored.</entry>
  </message>
</rsccat>
