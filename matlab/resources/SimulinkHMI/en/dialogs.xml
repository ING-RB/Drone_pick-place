<?xml version="1.0"?>
<!-- Copyright 2016-2017 The MathWorks, Inc. -->
<rsccat version="1.0" locale="en_US" product="SimulinkHMI">    
    <message>
                            
        <entry key="HMIRunTimeRunning">{0} [running]</entry>
        <entry key="HMIRunTimePaused">{0} [paused]</entry>
        <entry key="HMIRunTimeStopped">{0} [stopped]</entry>
        <entry key="HMIRunTimeCompiling">{0} [compiling]</entry>

        <entry key="HMIRunTime" translate="false" note="TranslateFalseBatch;">{0}</entry>
        
        <entry key="HMIShowInstructionalText">Show "{0}" message</entry>
        
        <!-- HMIScope dialog -->
        <entry key="HMIScope" translate="false" note="TranslateFalseBatch;">Dashboard Scope</entry>
        <entry key="HMIScopeDialogDesc">Traces signals on the dashboard scope during simulation.</entry>
        <entry key="HMIScopeSelectionInfo">Select signals in the model to plot on the dashboard scope.</entry>
        <entry key="HMIScopeDialogMain">Main</entry>
        <entry key="HMIScopeDialogMin">Min:</entry>
        <entry key="HMIScopeDialogMax">Max:</entry>
        <entry key="HMIScopeDialogYAxisLimits">Y-Axis</entry>
        <entry key="HMIScopeDialogTAxisLimits">T-Axis</entry>
        <entry key="HMIScopeDialogTimeSpan">Time span:</entry>
        <entry key="HMIScopeDialogUpdateMode">Update mode:</entry>
        <entry key="HMIScopeDialogUpdateModeWrap">Wrap</entry>
        <entry key="HMIScopeDialogUpdateModeScroll">Scroll</entry>
        <entry key="HMIScopeDialogNormalizeYAxisLimits">Normalize y-axis limits</entry>
        <entry key="HMIScopeDialogFitAtStop">Scale axes limits at stop</entry>
        <entry key="HMIScopeDialogDisplay">Display</entry>
        <entry key="HMIScopeDialogTicks">Ticks:</entry>
        <entry key="HMIScopeDialogTicksPositionOutside" note="Outside as a way to show tick marks outside the axes">Outside</entry>
        <entry key="HMIScopeDialogTicksPositionInside" note="Inside as a way to show tick marks inside the axes">Inside</entry>
        <entry key="HMIScopeDialogTicksPositionNone">None</entry>
        <entry key="HMIScopeDialogTickLabels">Tick labels:</entry>
        <entry key="HMIScopeDialogTickLabelsAll">All</entry>
        <entry key="HMIScopeDialogTickLabelsTAxis">T-Axis</entry>
        <entry key="HMIScopeDialogTickLabelsYAxis">Y-Axis</entry>
        <entry key="HMIScopeDialogTickLabelsNone">None</entry>
        <entry key="HMIScopeDialogLegend">Legend:</entry>
        <entry key="HMIScopeDialogLabelPositionTop">Top</entry>
        <entry key="HMIScopeDialogLabelPositionRight">Right</entry>
        <entry key="HMIScopeDialogLabelPositionInsideTop">InsideTop</entry>
        <entry key="HMIScopeDialogLabelPositionInsideTopLegend">Inside top</entry>
        <entry key="HMIScopeDialogLabelPositionInsideRight">InsideRight</entry>
        <entry key="HMIScopeDialogLabelPositionInsideRightLegend">Inside right</entry>
        <entry key="HMIScopeDialogLabelPositionHide">Hide</entry>
        <entry key="HMIScopeDialogGrid">Grid:</entry>
        <entry key="HMIScopeDialogGridAll">All</entry>
        <entry key="HMIScopeDialogGridHorizontal">Horizontal</entry>
        <entry key="HMIScopeDialogGridVertical">Vertical</entry>
        <entry key="HMIScopeDialogGridNone">None</entry>
        <entry key="HMIScopeDialogBorder">Border</entry>
        <entry key="HMIScopeDialogMarkers">Markers</entry>
        <entry key="HMIScopeDialogStyle">Style</entry>
        <entry key="HMIScopeDialogFontColor">Font Color:</entry>
        <entry key="HMIAutoSelectStyle">auto</entry>
        <entry key="HMIScopeConnectoCBLabel">Connect</entry>
        <entry key="HMIScopeSignalNameLabel">Signal Name</entry>
        <entry key="HMIScopeSignalPlotStyleLabel">Style</entry>
        <entry key="HMIScopeBindingTableTitle">Signals</entry>
        <entry key="HMIScopeConnectSignals">Connect Signals</entry>
        <entry key="HMIScopeChangeConnections">Modify Signal Connections</entry>
        
        <!-- HMIWidget dialogs -->
        <entry key="SelectionInfo">Select parameters or variables in the model to bind.</entry>
        <entry key="MinimumPrompt">Minimum:</entry>
        <entry key="MaximumPrompt">Maximum:</entry>
        <entry key="TickIntervalPrompt">Tick Interval:</entry>
        <entry key="LogTickIntervalPrompt">Tick Interval(exponent):</entry>
        <entry key="LabelPositionPrompt">Label:</entry>
        <entry key="LabelPositionTop">Top</entry>
        <entry key="LabelPositionBottom">Bottom</entry>
        <entry key="LabelPositionHide">Hide</entry>
        <entry key="Off" note="setting the parameter value off">Off</entry>
        <entry key="On" note="setting the parameter value on">On</entry>
        <entry key="ScaleType">Scale Type:</entry>
        <entry key="ScaleTypeLinear">Linear</entry>
        <entry key="ScaleTypeLog" note="logarithm">Log</entry>
        <entry key="ScaleModePrompt">Scale Mode:</entry>
        <entry key="ScaleModeFixed" note="unchanged status or position">Fixed</entry>
        <entry key="ScaleModeFill">Fill</entry>
        <entry key="ScaleModeFillAspectRatio">Fill with fixed aspect ratio</entry>
        <entry key="BindingConnectedString">Connected to:</entry>
        <entry key="BindingUnconnectedString">Unconnected</entry>
        <entry key="BindingChangeLinkString">Change</entry>
        <entry key="BindingConnectLinkString">Connect</entry>
        
        <!-- Rotary Switch Dialog -->
        <entry key="DiscreteKnob" translate="false" note="TranslateFalseBatch;">Rotary Switch</entry>
        <entry key="DiscreteKnobDialogDesc">Set value to tune parameters or variables.</entry>
        <entry key="DiscreteKnobStates">States:</entry>
        <entry key="DiscreteKnobStateValue">State Value</entry>
        <entry key="DiscreteKnobStateLabel">State Label</entry>
        
        <!-- Knob Dialog -->
        <entry key="ContinuousKnob" translate="false" note="TranslateFalseBatch;">Knob</entry>
        <entry key="ContinuousKnobDialogDesc">Set a value to tune parameters or variables.</entry>
        
        <!-- Slider Dialog -->
        <entry key="Slider" translate="false" note="TranslateFalseBatch;">Slider</entry>
        <entry key="SliderDialogDesc">Set value to tune parameters or variables.</entry>
        
        <!-- NumericTextField Dialog -->
        <entry key="NumericTextField">Number Field</entry>
        <entry key="NumericTextFieldDialogDesc">Set a value of a tunable parameter or variable using a numeric text field.</entry>
        
        <!-- Switch Dialog -->
        <entry key="Switch" translate="false" note="TranslateFalseBatch;">Switch</entry>
        <entry key="SwitchDialogDesc">Set on/off value to tune parameters or variables.</entry>
        <entry key="SwitchStates">States</entry>
        <entry key="SwitchLabel">Label</entry>
        <entry key="SwitchValue">Value</entry>
        <entry key="SwitchOffState">Off State</entry>
        <entry key="SliderSwitchOffStatePos">Left:</entry>      
        <entry key="SliderSwitchOnStatePos">Right:</entry>      
        <entry key="RockerSwitchOffStatePos">Bottom:</entry>      
        <entry key="RockerSwitchOnStatePos">Top:</entry>

        <!-- Icon Selection Widget -->
        <entry key="IconSelectionTitle">Icon</entry>
        <entry key="IconSelectionType">Icon Type: </entry>
        <entry key="IconSelectionUploadText">Upload custom icon</entry>
        <entry key="InvalidCustomIconText">Invalid image file</entry>
        <entry key="IconSelectionDropdownShape">Shape</entry>
        <entry key="IconSelectionDropdownAutomotive">Automotive</entry>
        <entry key="IconSelectionDropdownWireless">Wireless</entry>
        <entry key="IconSelectionDropdownCustom">Custom</entry>
        <entry key="IconSelectionInvalidCustomIconText">Invalid svg file</entry>
        
        <!-- PushButton Dialog -->
        <entry key="PushButton" translate="false" note="TranslateFalseBatch;">Push Button</entry>
        <entry key="PushButtonDialogDesc">Change the value of a variable or tunable parameter using a button. You can configure the button to respond to a click by momentarily changing the value until you release or by latching the value until you click again.</entry>
        <entry key="PushButtonText">Button Text:</entry>
        <entry key="PushButtonOnValue">On Value:</entry>         
        <entry key="PushButtonValue">On Value</entry>
        <entry key="PushButtonType">Button Type:</entry>
        <entry key="PushButtonIcon">Icon</entry>
        <entry key="PushButtonCustomIcon">Custom Icon</entry>
        <entry key="PushButtonIconAlignment">Icon Alignment:</entry>
        <entry key="PushButtonIconOnColor">On Color:</entry>
        <entry key="PushButtonIconOffColor">Off Color:</entry>
        <entry key="PushButtonCustomizeIconColor">Customize Icon Color</entry>
        <entry key="PushButtonDropdownNone">None</entry>
        <entry key="PushButtonBlockButtonTypeMomentary">Momentary</entry>
        <entry key="PushButtonBlockButtonTypeLatch">Latch</entry>
        
        <!--Gauge Dialog -->
        <entry key="CircularGauge" translate="false" note="TranslateFalseBatch;">Gauge</entry>
        <entry key="CircularGaugeDialogDesc">Display an input value on a circular scale.</entry>
        <entry key="GaugeType">Gauge Type</entry>
        <entry key="GaugeBlockScaleDirectionPrompt">Scale Direction:</entry>
        <entry key="GaugeBlockSignalTitle">Signal</entry>
        <entry key="GaugeBlockMainGroup">Main</entry>
        <entry key="GaugeBlockFormatGroup">Format</entry>

        <!--Half Gauge Dialog -->
        <entry key="SemicircularGauge" translate="false" note="TranslateFalseBatch;">Half Gauge</entry>
        <entry key="SemicircularGaugeDialogDesc">Display an input value on a semicircular scale.</entry>
        
        <!--Linear Gauge Dialog -->
        <entry key="LinearGauge" translate="false" note="TranslateFalseBatch;">Linear Gauge</entry>
        <entry key="LinearGaugeDialogDesc">Display an input value on a linear scale.</entry>

        <!--Ninety degree Gauge Dialog -->
        <entry key="NinetydegreeGauge" translate="false" note="TranslateFalseBatch;">Quarter Gauge</entry>
        <entry key="NinetydegreeGaugeDialogDesc">Display an input value on a ninety degree scale.</entry>

        <!--Gauge Properties -->
        <entry key="ScaleColors">Scale Colors:</entry>
        <entry key="ScaleColorsMinimum">Minimum</entry>
        <entry key="ScaleColorsMaximum">Maximum</entry>
        <entry key="ScaleColorsLabel">Color</entry>
        <entry key="GaugeScaleColorsPropertyType">'ScaleColors' parameter must be a array of structures with fields Min (real double scalar), Max (real double scalar) and Color (3-element real double vector with values between 0 and 1 in the form [r g b]).</entry>
        <entry key="GaugeInvalidTickInterval">'TickInterval' parameter must be 'auto' or a real scalar double value greater than or equal to zero</entry>
        <entry key="GaugeInvalidLimits">Gauge limits must be real scalar double values</entry>
        <entry key="GaugeFontColor">Font Color:</entry>

        <!--Lamp Dialog -->
        <entry key="Lamp" translate="false" note="TranslateFalseBatch;">Lamp</entry>
        <entry key="LampDialogDesc">Display a color that reflects an input value.</entry>
        <entry key="LampStates">States:</entry>
        <entry key="LampStateColor">Color</entry>
        <entry key="LampStateValue">State</entry>
        <entry key="LampDefault">Default</entry>
        <entry key="LampStateDesc">Define states and colors for the Lamp.</entry>
        <entry key="LampIconPrompt">Lamp Icon</entry>
        <entry key="LampCustomIconPrompt">Lamp Custom Icon</entry>
        <entry key="LampMainTab">Main</entry>
        <entry key="LampIconTab">Icon</entry>

        <!--MultiStateImage Dialog -->
        <entry key="MultiStateImage" translate="false" note="TranslateFalseBatch;">MultiStateImage</entry>
        <entry key="MultiStateImageDialogDesc">Display an image that reflects an input value.</entry>
        <entry key="MultiStateImageStates">States:</entry>
        <entry key="MultiStateImageStateImage">Thumbnail</entry>
        <entry key="MultiStateImageStateValue">State</entry>
        <entry key="MultiStateImageDefault">Default</entry>
        <entry key="MultiStateImageStateDesc">Define states and images for the MultiStateImage.</entry>
        <entry key="MultiStateImageErrorDlgTitle">Multi-State Image Error</entry>
        <entry key="MSIDefaultImageType">'DefaultImage' parameter must be a scalar structure with fields Size (uint64), Image (character array), and Thumbnail (character array).</entry>
        <entry key="MSIStatesType">'States' parameter must be a structure with fields State (double), Size (uint64), Image (character array), and Thumbnail (character array).</entry>
        
        <!-- Radio Button Group Dialog -->
        <entry key="RadioButtonGroup" translate="false" note="TranslateFalseBatch;">Radio Button</entry>
        <entry key="RadioButtonGroupDialogDesc">Select value to tune parameters or variables.</entry>
        <entry key="RadioButtonGroupOptions">Options:</entry>
        <entry key="RadioButtonGroupOptionValue">Value</entry>
        <entry key="RadioButtonGroupOptionLabel">Label</entry>
        <entry key="RadioButtonGroupName">Group Name:</entry>
        <entry key="RadioButtonGroupUsEnumDataType">Enumerated Data Type:</entry>
        
        <!-- Checkbox -->
        <entry key="CheckboxDialogDesc">Set checked/unchecked value to tune parameters or variables.</entry>
        <entry key="CheckboxLabelPrompt">Check Box Label</entry>
        <entry key="CheckboxValuesPrompt">Checked/Unchecked Values</entry>
        <entry key="CheckboxValues">Values</entry>
        
        <!-- Dashboard block -->
        <entry key="DashboardBlockOpacityPrompt">Opacity</entry>

        <!-- Display Block Dialog -->
        <entry key="Display" translate="false" note="TranslateFalseBatch;">Display</entry>
        <entry key="DisplayBlockDesc">Display signal values as text.</entry>
        <entry key="DisplayBlockFormatPrompt">Format</entry>
        <entry key="DisplayBlockAlignmentPrompt">Alignment</entry>
        <entry key="DisplayBlockFitToViewPrompt">Layout</entry>
        <entry key="DisplayBlockFormatStringPrompt">Format String</entry>
        <entry key="ForegroundColor">Foreground Color:</entry>
        <entry key="BackgroundColor">Background Color:</entry>
        <entry key="GridColor">Grid Color:</entry>
        <entry key="DisplayBlockShowGridText">Show grid for non-scalar signals</entry>
        <entry key="DisplayBlockMainGroup">Main</entry>
        <entry key="DisplayBlockColorsGroup">Colors</entry>
        <entry key="DisplayBlockLayoutPreserveDimensions">Preserve dimensions</entry>
        <entry key="DisplayBlockLayoutFillSpace">Fill available space</entry>

        <!-- Edit field -->
        <entry key="EditFieldDialogDesc">Set value to tune parameters or variables.</entry>
        
        <!-- Combo box -->
        <entry key="ComboBoxDialogDesc">Set value to tune parameters or variables.</entry>
        
        <!-- Knob errors -->
        <entry key="KnobInvalidTickInterval">'TickInterval' parameter must be 'auto' or a real scalar double value greater than or equal to zero.</entry>
        <entry key="KnobInvalidLimits">Knob limits must be real scalar double values.</entry>
        
        <!-- Scope errors -->
        <entry key="ScopeInvalidTimeSpan">'TimeSpan' parameter must be 'auto' or a real scalar double value greater than zero.</entry>
        <entry key="ScopeInvalidLimits">Scope limits must be real scalar double values.</entry>
        <entry key="ScopeInvalidCursorMode">Scope 'CursorMode' must be '0', '1', or '2'.</entry>
        <entry key="InvalidScopeYLimits">'YLimits' parameter must be a 2-element real double vector of the form [min max].</entry>
        <entry key="InvalidScopeColor">'Colors' parameter must be a struct array with fields 'Auto', 'Color' and 'LineStyle'. The 'Auto' field must be one of the following: 'on' or 'off'. The 'Color' field must be a 3-element real double vector with values between 0 and 1 in the form [r g b].  The 'LineStyle' field must be one of the following:  '-' (solid), '--' (dashed), ':' (dotted), or '-.' (dash dot).</entry>
        <entry key="ScopeInvalidFontColor">'FontColor' parameter must be a 3-element real double vector with values between 0 and 1 in the form [r g b].</entry>
        
        <!-- Checkbox errors -->
        <entry key="CheckboxInvalidValues">'Values' parameter must be a 2-element real double vector.</entry>

        <!-- PushButton errors -->
        <entry key="PushButtonInvalidOnValue">'OnValue' parameter must be a string or character array representing a scalar real double value.</entry>
        <entry key="PushButtonInvalidIconOnColor">'IconOnColor' parameter must be a 3-element real double vector with values between 0 and 1 in the form [r g b].</entry>
        <entry key="PushButtonInvalidIconOffColor">'IconOffColor' parameter must be a 3-element real double vector with values between 0 and 1 in the form [r g b].</entry>

        <!-- Lamp errors -->
        <entry key="LampInvalidDefaultColor">'ColorDefault' parameter must be a 3-element real double vector with values between 0 and 1 in the form [r g b].</entry>
        <entry key="InvalidStateColorsParam">'StateColors' parameter must be a struct array with fields Value and Color.  Value should be a scalar real double and Color should be a 3-element real double vector with values between 0 and 1 in the form [r g b].</entry>
        
        <!-- Dashboard errors -->
        <entry key="DashboardBlockInvalidOpacity">'Opacity' must be a real scalar double between 0 and 1.</entry>

        <!-- Display Block errors -->
        <entry key="DisplayBlockInvalidGridColor">'Grid color' parameter must be a 3-element real double vector with values between 0 and 1 in the form [r g b].</entry>

        <!-- Gauge Block errors -->
        <entry key="GaugeBlockInvalidFontColor">'FontColor' parameter must be a 3-element real double vector with values between 0 and 1 in the form [r g b].</entry>
 
        <!-- General set_param errors -->
        <entry key="InvalidStatesParam">'States' parameter must be a struct array with fields Value and Label.  Value should be a scalar real double and Label should be a character array.</entry>
        <entry key="InvalidLimitsParam">'Limits' parameter must be real double vector of the form [min max] or [min tick max]. To use automatic ticks, set the tick value less than zero.</entry>
        
        <!-- Switch errors -->
        <entry key="SwitchInvalidStatesParam">'States' parameter must be a 2-element struct array with fields Value and Label.  Value should be a scalar real double and Label should be a character array.</entry>
        
        <!--Dialog Errors -->
        <entry key="Minimum">Minimum</entry>
        <entry key="Maximum">Maximum</entry>
        <entry key="TimeSpan">TimeSpan</entry>
        <entry key="MinTickValue">'Minimum' tick value</entry>
        <entry key="MaxTickValue">'Maximum' tick value</entry>
        <entry key="TickInterval">Tick Interval</entry>
        <entry key="SetError">Invalid setting in {0} for parameter {1}.</entry>
        <entry key="NonNumericStatesError">Enter only numeric values for states.</entry>
        <entry key="NonNumberScaleColorLimitsError">Enter a numeric value for the Scale Color Limits.</entry>
        <entry key="EmptyValueOrLabelError">State value and label must not be empty.</entry>
        <entry key="ScaleColorLimitsMinGreaterThanMax">Minimum Scale Color Limit Value must be less than or equal to the Maximum Scale Color Limit Value.</entry>
        <entry key="LampNonUniqueStatesError">Two or more states have the same value.  Enter unique integer values for each state.</entry>
        <entry key="MultiStateImageNonUniqueStatesError">Two or more states have the same value.  Enter unique integer values for each state.</entry>
        <entry key="MultiStateImageNonImageFileError">Invalid image file format. Image file format must be PNG, JPEG, BMP, TIFF, SVG, or GIF.</entry>
        <entry key="NonUniqueStatesError">Enter unique states.</entry>
        <entry key="MinMaxError">Minimum tick value must be smaller than the Maximum tick value.</entry>
        <entry key="TickIntervalError">Tick Interval must be a positive number less than {0} (the difference between Maximum and Minimum tick values).</entry>
        <entry key="MaxTicksError">Too many ticks.</entry>
        <entry key="NonNumericParameter">Enter a scalar numeric value for parameter {0}.</entry>
        <entry key="InvalidTimeSpanTickIntervalParameter">Enter 'auto' or a positive scalar numeric value for parameter {0}.</entry>
        <entry key="HMIScopeYAxisMinMaxError">The Min YAxis Limit must be smaller than the Max YAxis Limit</entry>
        <entry key="ValueGreaterThanRealMax">{0} exceeds largest supported positive number.</entry>
        <entry key="ValueLessThanNegativeRealMax">{0} exceeds largest supported negative number.</entry>
        <entry key="LogPositiveTickValue">Tick values for log scale must be positive.</entry>
        <entry key="LogTickInterval">Tick interval must be a positive integer.</entry>
        <entry key="LogTickIntervalMaxError">Tick interval(10^{0}) must be less than Maximum tick value.</entry>
        <entry key="EnumDataTypeNotSet">No enumerated data type specified.</entry>
        <entry key="InvalidEnumDataType">Invalid enumerated data type.</entry>
        
        <!--Callback WebBlocks Dialog Errors-->
        <entry key="CallbackWebBlock" translate="false" note="TranslateFalseBatch;">Callback Button</entry>
        <entry key="CallbackWebBlockDesc">Run MATLAB scripts based on mouse behavior.</entry>
        <entry key="CallbackWebBlockButtonText">Button Text:</entry>
        <entry key="CallbackWebBlockClickFcn" translate="false">ClickFcn</entry>
        <entry key="CallbackWebBlockPressFcn" translate="false">PressFcn</entry>
        <entry key="CallbackWebBlockPressDelay">Press Delay (ms):</entry>
        <entry key="CallbackWebBlockRepeatInterval">Repeat Interval (ms):</entry>
        <entry key="PressDelayError">Press delay must be a positive integer or zero.</entry>
        <entry key="RepeatIntervalError">Repeat interval must be a positive integer or zero.</entry>

        <!--Buttons-->
        <entry key="OK">OK</entry>

        <!-- Dialog Alignment -->
        <entry key="DialogLeftAlignment">Left</entry>
        <entry key="DialogCenterAlignment">Center</entry>
        <entry key="DialogRightAlignment">Right</entry>

        <!--Pluggable Visualization Dialogs-->
        <entry key="PVCheckoutLicenseErrorDlgTitle">Visual Component Licensing Error</entry>

    </message>
</rsccat>

<!-- LocalWords:  Ninetydegree
-->
