<?xml version="1.0"?>
<!-- Copyright 2011-2017 The MathWorks, Inc. -->
<rsccat version="1.0" locale="en_US" product="images">
  <message>
    <entry key="unknownTransformType" note="">Unrecognized TRANSFORMTYPE: ''{0}''.</entry>
    <entry key="invalidDirection" note="">DIRECTION must be either ''forward'' or ''inverse''.</entry>
    <entry key="invalidAValue" note="">A must be a real-valued matrix of class double.</entry>
    <entry key="aContainsInfs" note="">All elements of A must be finite.</entry>
    <entry key="invalidASize" note="">A must be square and at least 2-by-2.</entry>
    <entry key="invalidAForAffine" note="">The final column of A must consist of zeroes, except for a one in the last row.</entry>
    <entry key="lastElementInANearZero" note="">The last element of A is very close to zero.</entry>
    <entry key="conditionNumberofAIsHigh" note="">The condition number of A is {0}.</entry>
    <entry key="invalidUSize" note="">U must be {0,number,integer}-by-2.</entry>
    <entry key="invalidXSize" note="">X must be {0,number,integer}-by-2.</entry>
    <entry key="invalidUValue" note="">U must be real-valued (class double) and finite.</entry>
    <entry key="invalidXValue" note="">X must be real-valued (class double) and finite.</entry>
    <entry key="conditionNumberOfUIsHigh" note="">Points in U are nearly collinear and/or coincidental.</entry>
    <entry key="conditionNumberOfXIsHigh" note="">Points in X are nearly collinear and/or coincidental.</entry>
    <entry key="collinearPointsinUOrX" note="">Collinear points in U or X; cannot continue.</entry>
    <entry key="tooFewTformStructs" note="">At least one TFORM struct is required.</entry>
    <entry key="invalidTformStruct" note="">T1 must be a TFORM struct.</entry>
    <entry key="invalidTformStructArray" note="">[T1, T2, ... TN] must be an array of TFORM structs.</entry>
    <entry key="invalidTformsInArray" note="">T1, T2, ... TN must each be a TFORM struct.</entry>
    <entry key="tFormsDoNotHaveSameDimension" note="">Input TFORM objects have inconsistent dimensions.</entry>
    <entry key="invalidForwardOrInverseFunction" note="">Unable to compose either a forward or inverse transformation.</entry>
    <entry key="invalidNDims_In" note="">NDIMS_IN must be a finite, integer-valued double.</entry>
    <entry key="invalidNDims_Out" note="">NDIMS_OUT must be a finite, integer-valued double.</entry>
    <entry key="nDimsInIsNotPositive" note="">NDIMS_IN must be positive.</entry>
    <entry key="nDimsOutIsNotPositive" note="">NDIMS_OUT must be positive.</entry>
    <entry key="invalidForwardFcn" note="">FORWARD_FCN must be a function handle.</entry>
    <entry key="invalidInverseFcn" note="">INVERSE_FCN must be a function handle.</entry>
    <entry key="emptyForwardAndInverseFcn" note="">FORWARD_FCN and INVERSE_FCN cannot both be empty.</entry>
    <entry key="invalidTSize" note="">TSIZE must be integer-valued (class double) and finite.</entry>
    <entry key="tSizeIsNotPositive" note="">All values in TSIZE must be greater than or equal to 1.</entry>
    <entry key="invalidLo" note="">LO must be real-valued (class double) and finite.</entry>
    <entry key="invalidHi" note="">HI must be real-valued (class double) and finite.</entry>
    <entry key="unequalLengthsForLoHiAndTSize" note="">TSIZE, LO, and HI must be the same length.</entry>
    <entry key="invalidLoAndHi" note="">The corresponding entries in LO and HI may not be equal unless TSIZE is 1.</entry>
    <entry key="invalidInbounds" note="">INBOUNDS must be real and finite.</entry>
    <entry key="invalidOutbounds" note="">OUTBOUNDS must be real and finite.</entry>
    <entry key="inboundsAndOutbounds2ByN" note="">INBOUNDS and OUTBOUNDS must be 2-by-N (for the same N).</entry>
    <entry key="invalidInboundsAndOutbounds" note="">OUTBOUNDS(1,k) may equal OUTBOUNDS(2,k) if and only if INBOUNDS(1,k) equals INBOUNDS(2,k).\nINBOUNDS and OUTBOUNDS must be 2-by-N (for the same N).</entry>
    <entry key="invalidTransformType" note="">TRANSFORMTYPE must be a string or a character vector.</entry>
    <entry key="ambiguousTransformType" note="">Ambiguous TRANSFORMTYPE ''{0}''.</entry>
  </message>
</rsccat>

<!--Please use note attribute to describe context of message-->
