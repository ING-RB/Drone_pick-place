<?xml version="1.0"?>
<!-- Copyright 2011-2024 The MathWorks, Inc. -->
<rsccat version="1.0" locale="en_US" product="images">
  <message>
    <!-- mustBeBorders -->
    <entry key="badBordersForm" note="">When not specified using text labels, Borders must be a 2-column matrix with at least two rows.</entry>
  
    <!-- mustBeConnectivity -->
    <entry key="badConnectivitySize" note="">Connectivity array must have size 3-by-3-by- ... by-3.</entry>
    <entry key="badConnectivityCenter" note="">Center element of a connectivity array must be 1.</entry>
    <entry key="nonsymmetricConnectivity" note="">Connectivity array must be symmetric with respect to its center element.</entry>
    
    <entry key="invalidSyntax" note="">Invalid input syntax.</entry>
    <entry key="unsupportedDataType" note="">Unsupported datatype. Expected one of: {0}.</entry>
    <entry key="tooFewInputs" note="">Too few input arguments were passed to {0}.</entry>
    <entry key="tooManyInputs" note="">Too many input arguments were passed to {0}.</entry>    
    <entry key="tooManyOutputs" note="">Too many output arguments were passed to {0}.</entry>
    <entry key="emptyParameter" note="">{0} must not be empty.</entry>
    
    <entry key="badScalarConn" note="">Function {0} expected input number {1}, {2}, to be a valid connectivity specifier. A scalar connectivity specifier must be 1, 4, 6, 8, 18, or 26.</entry>
    <entry key="badConnSize" note="">Function {0} expected input number {1}, {2}, to be a valid connectivity specifier. A nonscalar connectivity specifier must be 3-by-3-by- ... -by-3.</entry>
    <entry key="badConnValue" note="">Function {0} expected input number {1}, {2}, to be a valid connectivity specifier. A nonscalar connectivity specifier must contain only 0s and 1s.</entry>
    <entry key="badConnCenter" note="">Function {0} expected input number {1}, {2}, to be a valid connectivity specifier. The central element of a connectivity specifier must be nonzero.</entry>
    <entry key="nonsymmetricConn" note="">Function {0} expected input number {1}, {2}, to be a valid connectivity specifier. A connectivity specifier must be symmetric about its center.</entry>
    <entry key="connNotConst" note="">CONN must be a constant.</entry>
    <entry key="connNotLogical" note="">CONN must be logical.</entry>    
    
    <entry key="unequalNumberOfRows" note="">{0} and {1} must have the same number of rows.</entry>
    <entry key="unequalNumberOfRowsAndCols" note="">{0} and {1} must have the same number of rows and columns.</entry>
    <entry key="unequalNumberOfElements" note="">{0} and {1} must have the same number of elements.</entry>
    <entry key="unequalNumberOfElements3" note="">{0}, {1} and {2} must have the same number of elements.</entry>
    <entry key="unequalSizeMatrices" note="">{0} and {1} must have the same size.</entry>
    <entry key="unequalSizeMatrices3" note="">{0}, {1} and {2} must have the same size.</entry>
    <entry key="differentClassMatrices" note="">{0} and {1} must have the same class.</entry>
    <entry key="differentClassMatrices3" note="">{0}, {1} and {2} must have the same class.</entry>
    <entry key="unequalNumberOfColorChannels" note="">{0} and {1} must have the same number of color channels.</entry>
    <entry key="invalidAxes" note="">{0} must be a valid axes handle.</entry> 
    <entry key="tooManyDimensions" note="">{0} cannot have more than {1} dimensions.</entry>
    <entry key="tooFewDimensions" note="">{0} cannot have less than {1} dimensions.</entry>
    <entry key="expected3D" note="">Input image must be of size MxNxP.</entry>
    <entry key="tooManyElements" note="">{0} cannot have more than {1} elements.</entry>
    <entry key="missingValue" note="">No value was given for {0}. Name-value pair arguments require a name followed by a value.</entry>
    <entry key="invalidLogicalParam" note="">Invalid value specified for {0} parameter. {1} expects the {2} parameter value to be a logical scalar.</entry>
    <entry key="invalidNumericLogicalParam" note="">Invalid value specified for {0} parameter. {1} expects the {2} parameter value to be numeric or logical.</entry>
    <entry key="invalidNumericStringParam" note="stringDatatypeUpdate">Invalid value specified for {0} parameter. {1} expects the {2} parameter value to be numeric, string or a character vector.</entry>
    <entry key="zeroDataSpread" note="">Input data spread is zero up to working precision.</entry>
    <entry key="noTrueElement" note="">{0} must have at least one element set to logical true.</entry>
    <entry key="mustBeVectorOrLogicalArray" note="">Input number {0} must be either a numeric vector or a logical array.</entry>
    <entry key="atLeastOneNonZeroElement" note="">{0} must have at least one non-zero element.</entry>
    <entry key="unableToDownsample" note="">Unable to downsample {0} more than {1} times. Increase the size of {0} or modify {2} to {3}. </entry>
   
    <entry key="SubscriptsNotIntegerValues" note="">{0} must contain integer valued subscripts.</entry>
    <entry key="SubscriptsOutsideRange" note="">{0} must contain valid subscripts.</entry>
    
    <entry key="mustBeString" note="">Parameter name must be specified.</entry>
    <entry key="unknownInputString" note="stringDatatypeUpdate">Unknown input: {0}.</entry>
    <entry key="ambiguousInputString" note="stringDatatypeUpdate">Ambiguous input: {0}.</entry>
    <entry key="missingParameterValue" note="">One or more parameter name or value is missing.</entry>
    
    <entry key="tooManyOptionalArgs" note="">Invalid input syntax. Too many optional input arguments specified.</entry>
    <entry key="invalidOptionalArgSize" note="">Invalid length for Optional Argument {0}.</entry>
    <entry key="invalidNameValue" note="">Invalid Name/Value pair syntax specified.</entry>
    <entry key="unknownParamName" note="">Unknown Parameter Name: {0}</entry>
    <entry key="ambiguousParamName" note="">Ambiguous Parameter Name: {0}</entry>
    <entry key="badVectorLength" note="">{0} can be a scalar or {1}-element vector.</entry>
 
    <entry key="unsupportedInputClass" note="">Unsupported input class in function, {0}.</entry>
    
    <entry key="invalidImageFormat" note="">{0} is not a grayscale or RGB image.</entry>
    <entry key="invalidRGBImage" note="">{0} is not a valid RGB image.</entry>
    
    <entry key="badInputNumel" note="">Input number {0}, {1}, is expected to contain {2} elements.</entry>
    
    <entry key="invalidMethodClass" note="stringDatatypeUpdate">The method parameter must be a string or a character vector.</entry>
    
    <entry key="requireVectorInput" note="">Input arguments must be vectors.</entry>
    
    <!-- GPU -->
    <entry key="gpuExpectedReal" note="">Expected input number {0}, {1}, to be real.</entry>
    <entry key="gpuExpected2d" note="">Expected input number {0}, {1}, to be two-dimensional.</entry>
    <entry key="gpuExpectedVector" note="">Expected input number {0}, {1}, to be a vector</entry>
    <entry key="gpuExpectedNonempty" note="">Expected input number {0}, {1}, to be nonempty</entry>
    <entry key="gpuExpectedScalar" note="">Expected input number {0}, {1}, to be scalar.</entry>
    <entry key="gpuExpectedFinite" note="">Expected input number {0}, {1}, to be finite.</entry>
    <entry key="gpuExpectedNonnan" note="">Expected input number {0}, {1}, to be nonnan.</entry>
    <entry key="gpuExpectedNonnegative" note="">Expected input number {0}, {1}, to be nonnegative.</entry>
    <entry key="gpuExpectedNumeric" note="">Expected input number {0}, {1}, to be numeric.</entry>
    <entry key="gpuInvalidType" note="">Expected input number {0}, {1}, to be a gpuArray of one of these types: {2}Instead its type was {3}.</entry>
    <entry key="imageNotGPUArray" note="">Expected input image to be a gpuArray.</entry>
    <entry key="gpuExpectedNonSparse" note="">Expected input image to be a non-sparse gpuArray.</entry>
    <entry key="unsupportedConnForGPU" note="">CONN must either be 4 (minimal connectivity) or 8 (maximal connectivity) in GPU mode.</entry>
    <entry key="gpuArrayUnsupported" note=""><![CDATA[Function does not support inputs of gpuArray class. See the webpage <a href="matlab:web(fullfile(docroot, 'images/referencelist.html?type=function&capability=gpuarrays'))">gpuArray support in Image Processing Toolbox</a> for a list of functions with GPU support.]]></entry>
    
    <!-- Codegen -->
    <entry key="codegenIndexedImagesNotSupported" note="">Indexed images are not supported in function, {0}.</entry>
    <entry key="fileOpen" note="">Could not open file "{0}": {1}.</entry>
    <entry key="unsupportedCodegenTarget" note="">The function {0} uses a precompiled shared library which is not supported on the chosen target.</entry>
    <entry key="twoDimensionalImageSupport" note="">Code generation for {0} supports only 2-dimensional images.</entry>
    <entry key="inputMustBeFixedSized" note="">In code generation, input number {0}, {1}, is expected to have a fixed size.</entry>
    <entry key="codegenUnsupportedConn" note="">CONN must either be 4 (minimal connectivity) or 8 (maximal connectivity).</entry>
    
    <!-- Installation and License -->
      <entry key="pctNotInstalled" note="This message is the second output of the license function, already translated">{0}</entry>
    <entry key="statsNotInstalled" note="">Statistics and Machine Learning Toolbox is required to use {0}.</entry>    
    <entry key="statsLicenseUnavailable" note="">A Statistics and Machine Learning Toolbox license is required to use {0}.</entry> 
    <entry key="nnetNotInstalled" note="">Deep Learning Toolbox is required to use {0}.</entry>    
    <entry key="nnetLicenseUnavailable" note="">A Deep Learning Toolbox license is required to use {0}.</entry>
    <entry key="useSupportedCompiler"><![CDATA[************************************************\nGenerated code from your project uses OpenCV and requires that you use a supported C++ compiler. Use ''mex -setup'' to select a <a href="https://www.mathworks.com/help/vision/ug/portable-c-code-generation-for-functions-that-use-opencv-library.html">supported</a> C++ compiler.\n************************************************]]></entry>
    <entry key="useHierarchical">Generated code from your project uses OpenCV and requires that you use Hierarchical packType for packNGo.</entry>
    <entry key="kTooLarge" note="Used in imsegkmeans. Second parameter k is the number of clusters required.">Number of clusters is larger than the size of the input.</entry>
  </message>
</rsccat>

<!--Please use note attribute to describe context of message-->
