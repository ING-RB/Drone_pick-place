<?xml version="1.0" encoding="UTF-8"?>
<!--Copyright 2025 The MathWorks, Inc.-->

<rsccat xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.0" locale="ko_KR" product="hdlmllib" xsi:noNamespaceSchemaLocation="../../resources/schema/msgcat.xsd">
  <message>
    <entry key="ArgumentMustBeConstant">''{1}''에 대한 ''{0}'' 입력 인수는 상수여야 합니다.</entry>
    <entry key="ArgumentPassedToFillHasNoEffect">경계 채우기 방법에 전달된 'FillValue' 인수는 아무런 영향을 미치지 않습니다.</entry>
    <entry key="Bits2WordInvalidLikeArg">3개 또는 4개의 인수가 hdl.bits2word에 사용되는 경우 마지막 2개 인수는 ''like'' 다음에 프로토타입(p)이 와야 합니다.</entry>
    <entry key="Bits2WordInvalidLikeType">프로토타입(p)은 ''{0}'' 유형일 수 없습니다. 유효한 정수, 부동소수점 또는 고정소수점 데이터형이어야 합니다.</entry>
    <entry key="Bits2WordInvalidNumBitsForType">지정된 비트 수({0})가 유형 ''{1}''의 값에 예상되는 비트 수({2})와 일치하지 않습니다.</entry>
    <entry key="Bits2WordInvalidNumRows">이진 입력값(b)의 행 개수는 지정된 유형의 비트 수({0})와 같거나, n 또는 typename이 제공된 경우 정수 배수와 같아야 합니다.</entry>
    <entry key="Bits2WordInvalidTypeName">지정된 유형은 유효한 정수, 부동소수점 또는 고정소수점 데이터형이어야 합니다.</entry>
    <entry key="EdgeUnsupportedMethod">HDL 코드 생성 시 ''{0}'' 에지 방법은 지원되지 않습니다.</entry>
    <entry key="ImageMustBe2D">Image inputs must have no more than 2 dimensions.</entry>
    <entry key="IncompleteNameValuePair">입력 인수의 개수가 올바르지 않습니다. 각 파라미터 다음에는 대응값이 와야 합니다.</entry>
    <entry key="InvalidBoundaryConstant">''BoundaryConstant'' of ''hdl.WorkingSet'' must be an integer scalar value.</entry>
    <entry key="InvalidOrigin">Origin defined is invalid. Origin Should fit inside the kernel window.</entry>
    <entry key="InvalidParameter">Parameter ''{0}'' is undefined.</entry>
    <entry key="InvalidPixel">Invalid pixel position.</entry>
    <entry key="IteratorfunOutputSizeIncorrect">Output size of hdl.iteratorfun must have same size as third input.</entry>
    <entry key="KernelMustBeFcnHandle">The first input argument to ''{0}'' must be a function handle.</entry>
    <entry key="KernelMustHaveAnOutput">The function handle passed to ''{0}'' must have at least one output argument.</entry>
    <entry key="KernelMustNotBeAnonymous">The function handle passed to ''{0}'' must not be an anonymous function.</entry>
    <entry key="KernelMustNotUseVarargin">''{0}''에 전달된 함수 핸들은 ''varargin''을 사용해서는 안 됩니다.</entry>
    <entry key="KernelMustNotUseVarargout">''{0}''에 전달된 함수 핸들은 ''varargout''을 사용해서는 안 됩니다.</entry>
    <entry key="KernelShouldFitInsideImage">Kernel window should fit inside the input image.</entry>
    <entry key="KernelSizeIncorrect">The kernelSize input argument to ''hdl.WorkingSet'' must be a 2-element vector of positive integers.</entry>
    <entry key="MoreThanOneParameter">More than one ''{0}'' found.</entry>
    <entry key="NoMoreWorkingSets">No more working sets.</entry>
    <entry key="NpufunArgumentMustBeConstant">''hdl.npufun''에 대한 ''{0}'' 입력 인수는 상수여야 합니다.</entry>
    <entry key="NpufunImageMustBeLtEqTo3D">''hdl.npufun'' 함수에 대한 이미지 입력값에는 4개 이상의 차원이 있을 수 없습니다.</entry>
    <entry key="NpufunImageMustNotBeEmpty">''hdl.npufun'' 함수에 대한 이미지 입력값은 비어 있지 않아야 합니다.</entry>
    <entry key="NpufunImagesMustBeSameSize">''hdl.npufun'' 함수에 대한 이미지 입력값은 모두 같은 크기여야 합니다.</entry>
    <entry key="NpufunInvalidArgument">Invalid argument ''{0}'' provided to ''hdl.npufun'' function. Input data arguments must be matrices of the same size or the character array ''KernelArg'' followed by the kernel argument.</entry>
    <entry key="NpufunInvalidBoundaryMethod">''hdl.npufun''의 ''BoundaryMethod''는 문자형 배열 ''constant'' 또는 ''replicate'' 중 하나여야 합니다.</entry>
    <entry key="NpufunKernelMustHaveScalarOutputs">''hdl.npufun''에 대한 kernelFun 함수는 스칼라 출력값을 가져야 합니다.</entry>
    <entry key="NpufunKernelMustHaveScalarOutputsPerDepth">''hdl.npufun''에 대한 kernelFun 함수는 입력 행렬의 깊이와 동일한 개수의 요소를 갖는 벡터를 출력해야 합니다.</entry>
    <entry key="NpufunKernelSizeIncorrect">''hdl.npufun''에 대한 kernelSize 입력 인수는 양의 정수로 구성된, 요소를 2개 가진 벡터여야 합니다.</entry>
    <entry key="NpufunNeedsInputImage">''hdl.npufun'' 함수에는 적어도 하나의 이미지 입력값이 필요합니다.</entry>
    <entry key="NpufunStreamedInputsMustComeFirst">All streamed inputs to ''hdl.npufun'' must come before any non-streamed ''KernelArg'' arguments.</entry>
    <entry key="OriginProvidedInWrapMethod">Incorrect origin provided in the 'Wrap' Method.</entry>
    <entry key="PipePragmaBadNumOut">coder.hdl.pipeline 프라그마는 단일 값을 반환하는 함수 호출에만 적용될 수 있지만, 현재 컨텍스트에서는 {0}개의 출력값이 필요합니다.</entry>
    <entry key="PragmaBadNumArgs">{0} 프라그마에 대한 인수 개수가 올바르지 않습니다. 1개 또는 2개의 인수가 필요하지만, {1}개를 받았습니다.</entry>
    <entry key="PragmaInvalidArg">{1}에 대한 {0} 인수는 컴파일타임 정수 상수여야 합니다.</entry>
    <entry key="RAMAddress">{0, number, integer}번째 입력 인수 {1}은(는) 부호가 없어야 하고, 길이가 소수부 비트 없이 2비트와 31비트 사이여야 합니다.</entry>
    <entry key="RAMIVDataComplexMismatch">RAM 초기값의 실수/복소수 여부는 RAM 데이터 입력값의 실수/복소수 여부와 일치해야 합니다.</entry>
    <entry key="RAMIVMatrixUnsupported">RAM 초기값은 스칼라이거나 벡터여야 합니다. 행렬은 지원되지 않습니다.</entry>
    <entry key="RAMIVMustBeNumeric">RAM 초기값은 숫자형 배열로 지정해야 합니다. 셀형 배열과 구조체, 그 외 숫자형이 아닌 데이터는 지원되지 않습니다.</entry>
    <entry key="RAMIVMustBeZeroForBusInput">RAM initial values must be zero when data input is of type {0}.</entry>
    <entry key="RAMNonScalarVector">스칼라 입력값과 벡터 입력값만 지원됩니다.</entry>
    <entry key="RAMNumAccessesNotSame">''VectorAccess''가 ''Serial''로 설정된 경우 모든 입력값은 스칼라이거나, 스칼라가 아닌 다른 입력값과 요소 개수가 동일해야 합니다.</entry>
    <entry key="RAMNumBanksNotSame">''VectorAccess''가 ''Parallel''로 설정된 경우 RAM의 뱅크를 올바르게 유추하려면 모든 입력값의 요소의 개수가 동일하거나, 데이터 입력값을 제외한 모든 입력값이 스칼라여야 합니다.</entry>
    <entry key="RAMTooLarge">RAM이 너무 크게 구성되어 있어 Simulink에서 시뮬레이션을 할 수 없습니다. RAM 뱅크 개수, RAM 주소 너비 및/또는 RAM 워드 크기를 줄이십시오.</entry>
    <entry key="RAMTDPSameAddress">액세스 중 하나가 쓰기 작업인 경우 True Dual Port RAM은 동일한 주소에 대한 다중 액세스를 지원하지 않습니다.</entry>
    <entry key="RAMWeFraction">고정소수점 'Write Enable' 입력값의 소수부 길이는 0이어야 합니다.</entry>
    <entry key="RAMWeSigned">'Write Enable' 고정소수점 입력값은 부호가 없어야 합니다.</entry>
    <entry key="RAMWordLengthMismatch">'Write Data'의 워드 길이는 'Write Enable'의 워드 길이의 정수 배수여야 합니다.</entry>
    <entry key="ReadWriteAddressNotSame">RAM 읽기 주소와 쓰기 주소는 크기가 같아야 합니다.</entry>
    <entry key="RAMWriteDataSameType">True Dual Port RAM의 쓰기 데이터 포트는 유형과 실수/복소수 여부가 동일해야 합니다.</entry>
    <entry key="RAMWriteEnableSameType">True Dual Port RAM의 쓰기 인에이블 포트는 동일한 유형이어야 합니다.</entry>
    <entry key="StablePragmaBadArg">coder.hdl.stable 프라그마에 대한 첫 번째 인수는 입력 포트 이름을 지정하는 문자형 배열이어야 합니다.</entry>
    <entry key="StreamMatInvCholeskySingleOnly">촐레스키 분해를 사용한 역행렬 스트리밍에서는 single 데이터형만 지원합니다.</entry>
    <entry key="StreamMatInvGJordanSingleAndDoubleOnly">가우스-조르당 소거법을 사용한 역행렬 스트리밍에서는 single 및 double 데이터형만 지원합니다.</entry>
    <entry key="StreamMatMultSingleOnly">행렬 곱셈 스트리밍에서는 single 데이터형만 지원합니다.</entry>
    <entry key="TreeSumProdDimArgMustBeConst">hdl.treesum/hdl.treeprod에 대한 선택적 차원 인수는 상수여야 합니다.</entry>
    <entry key="TreeSumProdInvalidDimArg">hdl.treesum/hdl.treeprod에 대한 차원 인수는 양의 정수 스칼라 또는 ''all''이어야 합니다.</entry>
    <entry key="TreeSumProdInvalidInputArray">hdl.treesum/hdl.treeprod에 대한 입력 배열은 2차원을 초과할 수 없습니다.</entry>
    <entry key="TreeSumProdNotEnoughInputArgs">hdl.treesum/hdl.treeprod에 대한 입력 인수가 부족합니다. 적어도 하나의 인수가 필요합니다.</entry>
    <entry key="InvalidTapLengthValue">For hdl.TappedDelay, the TapLength property must be set to a factor of the NumDelays properties, less than or equal to the NumDelays properties, and greater than zero.</entry>
    <entry key="TapDelayICMismatch">The number of initial conditions does not match the number of delays.</entry>
    <entry key="UnsupportedIVSize">The RAM is organized as {0, number, integer} banks of {1, number, integer} entries, but the initial value specified has {2, number, integer} entries. The RAM initial value must be either a scalar, or a vector that has {1, number, integer} or {3, number, integer} entries. It could also be a matrix that has {3, number, integer} entries in which the dimensions of the matrix can be either mxn or nxm, where m is {0, number, integer} and n is {1, number, integer}. </entry>
    <entry key="UnsupportedMatrixIVSize">Invalid matrix dimensions for RAM initial value. The RAM is configured with {0, number, integer} banks, each having {1, number, integer} entries. However, the specified matrix initial value has dimensions [{2, number, integer}, {3, number, integer}]. The matrix dimensions must either be [{1, number, integer}, {0, number, integer}] or [{0, number, integer}, {1, number, integer}].</entry>
    <entry key="UnsupportedNonSymmPositiveDefinite">촐레스키 분해를 사용한 역행렬 스트리밍에서는 양의 정부호 대칭 행렬만 지원합니다. 모든 정사각 행렬을 지원하려면 가우스-조르당 알고리즘을 선택해 보십시오.</entry>
    <entry key="UnsupportedDataTypeForHDLRam">''{0}'' 데이터형에는 해당 RAM 블록이 지원되지 않습니다.</entry>
    <entry key="UnsupportedNestedBusTypeForHDLRam">RAM 블록은 중첩된 버스 입력을 지원하지 않습니다.</entry>
    <entry key="UnsupportedArrayOfBusesRAMSerial">''VectorAccess''가 ''Serial''로 설정된 경우 데이터 입력 포트에서 해당 RAM 블록은 버스 배열을 지원하지 않습니다.</entry>
    <entry key="UnsupportedBusUfix1TypeForHDLRam">해당 RAM 블록은 ufix1 또는 부울 데이터형을 사용하는 버스 입력값을 지원하지 않습니다.</entry>
    <entry key="Word2BitsNotEnoughOutputBits">입력 데이터형에 지정된 출력 비트(n)가 충분하지 않습니다. 적어도 {0}이(가) 필요합니다.</entry>
    <entry key="Word2BitsNumBitsMustBeConst">비트 수 인수(n)는 상수여야 합니다.</entry>
    <entry key="Word2BitsInvalidBitsArg">비트 수 인수(n)는 양의 정수 스칼라여야 합니다.</entry>
    <entry key="Word2BitsInvalidInputArg">입력 인수(d)는 복소수가 아닌 유효한 유형이어야 합니다.</entry>
    <entry key="Word2BitsInvalidNumFloatBits">유형 ''{1}''의 입력값에 대해 정확히 {0}비트가 필요한데 {2}을(를) 받았습니다.</entry>
    <entry key="interpnGridPointArgMustBeConst">hdl.interpn 함수에 대한 샘플 그리드 점 인수의 값이 유효하지 않습니다. 값은 컴파일타임 상수여야 합니다.</entry>
    <entry key="interpnSampleValueArgMustBeConst">hdl.interpn 함수에 대한 샘플 값 인수의 값이 유효하지 않습니다. 값은 컴파일타임 상수여야 합니다.</entry>
    <entry key="interpnMethodArgMustBeConst">hdl.interpn 함수에 대한 보간 및 외삽 방법 인수는 컴파일타임 상수여야 합니다.</entry>
  </message>
</rsccat>
