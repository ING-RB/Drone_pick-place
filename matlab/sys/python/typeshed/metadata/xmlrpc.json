{
    "xmlrpc.client._SupportsTimeTuple.timetuple": [
        ""
    ],
    "xmlrpc.client.ProtocolError.__init__": [
        "",
        "str",
        "int",
        "str",
        "dict[str, str]"
    ],
    "xmlrpc.client.Fault.__init__": [
        "",
        "int",
        "str"
    ],
    "xmlrpc.client.DateTime.__init__": [
        "",
        "int | str | datetime | time.struct_time | tuple[int, ...]"
    ],
    "xmlrpc.client.DateTime.__lt__": [
        "",
        "_DateTimeComparable"
    ],
    "xmlrpc.client.DateTime.__le__": [
        "",
        "_DateTimeComparable"
    ],
    "xmlrpc.client.DateTime.__gt__": [
        "",
        "_DateTimeComparable"
    ],
    "xmlrpc.client.DateTime.__ge__": [
        "",
        "_DateTimeComparable"
    ],
    "xmlrpc.client.DateTime.__eq__": [
        "",
        "_DateTimeComparable"
    ],
    "xmlrpc.client.DateTime.make_comparable": [
        "",
        "_DateTimeComparable"
    ],
    "xmlrpc.client.DateTime.timetuple": [
        ""
    ],
    "xmlrpc.client.DateTime.decode": [
        "",
        "Any"
    ],
    "xmlrpc.client.DateTime.encode": [
        "",
        "SupportsWrite[str]"
    ],
    "xmlrpc.client.Binary.__init__": [
        "",
        "bytes | bytearray | None"
    ],
    "xmlrpc.client.Binary.decode": [
        "",
        "ReadableBuffer"
    ],
    "xmlrpc.client.Binary.encode": [
        "",
        "SupportsWrite[str]"
    ],
    "xmlrpc.client.Binary.__eq__": [
        "",
        "object"
    ],
    "xmlrpc.client.ExpatParser.__init__": [
        "",
        "Unmarshaller"
    ],
    "xmlrpc.client.ExpatParser.feed": [
        "",
        "str | ReadableBuffer"
    ],
    "xmlrpc.client.ExpatParser.close": [
        ""
    ],
    "xmlrpc.client.Marshaller.__init__": [
        "",
        "str | None",
        "bool"
    ],
    "xmlrpc.client.Marshaller.dumps": [
        "",
        "Fault | Iterable[_Marshallable]"
    ],
    "xmlrpc.client.Marshaller.__dump": [
        "",
        "_Marshallable",
        "_WriteCallback"
    ],
    "xmlrpc.client.Marshaller.dump_nil": [
        "",
        "None",
        "_WriteCallback"
    ],
    "xmlrpc.client.Marshaller.dump_bool": [
        "",
        "bool",
        "_WriteCallback"
    ],
    "xmlrpc.client.Marshaller.dump_long": [
        "",
        "int",
        "_WriteCallback"
    ],
    "xmlrpc.client.Marshaller.dump_int": [
        "",
        "int",
        "_WriteCallback"
    ],
    "xmlrpc.client.Marshaller.dump_double": [
        "",
        "float",
        "_WriteCallback"
    ],
    "xmlrpc.client.Marshaller.dump_unicode": [
        "",
        "str",
        "_WriteCallback",
        "Callable[[str], str]"
    ],
    "xmlrpc.client.Marshaller.dump_bytes": [
        "",
        "ReadableBuffer",
        "_WriteCallback"
    ],
    "xmlrpc.client.Marshaller.dump_array": [
        "",
        "Iterable[_Marshallable]",
        "_WriteCallback"
    ],
    "xmlrpc.client.Marshaller.dump_struct": [
        "",
        "Mapping[str, _Marshallable]",
        "_WriteCallback",
        "Callable[[str], str]"
    ],
    "xmlrpc.client.Marshaller.dump_datetime": [
        "",
        "_XMLDate",
        "_WriteCallback"
    ],
    "xmlrpc.client.Marshaller.dump_instance": [
        "",
        "object",
        "_WriteCallback"
    ],
    "xmlrpc.client.Unmarshaller.__init__": [
        "",
        "bool",
        "bool"
    ],
    "xmlrpc.client.Unmarshaller.close": [
        ""
    ],
    "xmlrpc.client.Unmarshaller.getmethodname": [
        ""
    ],
    "xmlrpc.client.Unmarshaller.xml": [
        "",
        "str",
        "Any"
    ],
    "xmlrpc.client.Unmarshaller.start": [
        "",
        "str",
        "dict[str, str]"
    ],
    "xmlrpc.client.Unmarshaller.data": [
        "",
        "str"
    ],
    "xmlrpc.client.Unmarshaller.end": [
        "",
        "str"
    ],
    "xmlrpc.client.Unmarshaller.end_dispatch": [
        "",
        "str",
        "str"
    ],
    "xmlrpc.client.Unmarshaller.end_nil": [
        "",
        "str"
    ],
    "xmlrpc.client.Unmarshaller.end_boolean": [
        "",
        "str"
    ],
    "xmlrpc.client.Unmarshaller.end_int": [
        "",
        "str"
    ],
    "xmlrpc.client.Unmarshaller.end_double": [
        "",
        "str"
    ],
    "xmlrpc.client.Unmarshaller.end_bigdecimal": [
        "",
        "str"
    ],
    "xmlrpc.client.Unmarshaller.end_string": [
        "",
        "str"
    ],
    "xmlrpc.client.Unmarshaller.end_array": [
        "",
        "str"
    ],
    "xmlrpc.client.Unmarshaller.end_struct": [
        "",
        "str"
    ],
    "xmlrpc.client.Unmarshaller.end_base64": [
        "",
        "str"
    ],
    "xmlrpc.client.Unmarshaller.end_dateTime": [
        "",
        "str"
    ],
    "xmlrpc.client.Unmarshaller.end_value": [
        "",
        "str"
    ],
    "xmlrpc.client.Unmarshaller.end_params": [
        "",
        "str"
    ],
    "xmlrpc.client.Unmarshaller.end_fault": [
        "",
        "str"
    ],
    "xmlrpc.client.Unmarshaller.end_methodName": [
        "",
        "str"
    ],
    "xmlrpc.client._MultiCallMethod.__init__": [
        "",
        "list[tuple[str, _Marshallable]]",
        "str"
    ],
    "xmlrpc.client._MultiCallMethod.__getattr__": [
        "",
        "str"
    ],
    "xmlrpc.client._MultiCallMethod.__call__": [
        ""
    ],
    "xmlrpc.client.MultiCallIterator.__init__": [
        "",
        "list[list[_Marshallable]]"
    ],
    "xmlrpc.client.MultiCallIterator.__getitem__": [
        "",
        "int"
    ],
    "xmlrpc.client.MultiCall.__init__": [
        "",
        "ServerProxy"
    ],
    "xmlrpc.client.MultiCall.__getattr__": [
        "",
        "str"
    ],
    "xmlrpc.client.MultiCall.__call__": [
        ""
    ],
    "xmlrpc.client.GzipDecodedResponse.__init__": [
        "",
        "SupportsRead[ReadableBuffer]"
    ],
    "xmlrpc.client._Method.__init__": [
        "",
        "Callable[[str, tuple[_Marshallable, ...]], _Marshallable]",
        "str"
    ],
    "xmlrpc.client._Method.__getattr__": [
        "",
        "str"
    ],
    "xmlrpc.client._Method.__call__": [
        ""
    ],
    "xmlrpc.client.Transport.request": [
        "",
        "_HostType",
        "str",
        "SizedBuffer",
        "bool"
    ],
    "xmlrpc.client.Transport.single_request": [
        "",
        "_HostType",
        "str",
        "SizedBuffer",
        "bool"
    ],
    "xmlrpc.client.Transport.getparser": [
        ""
    ],
    "xmlrpc.client.Transport.get_host_info": [
        "",
        "_HostType"
    ],
    "xmlrpc.client.Transport.make_connection": [
        "",
        "_HostType"
    ],
    "xmlrpc.client.Transport.close": [
        ""
    ],
    "xmlrpc.client.Transport.send_request": [
        "",
        "_HostType",
        "str",
        "SizedBuffer",
        "bool"
    ],
    "xmlrpc.client.Transport.send_headers": [
        "",
        "http.client.HTTPConnection",
        "list[tuple[str, str]]"
    ],
    "xmlrpc.client.Transport.send_content": [
        "",
        "http.client.HTTPConnection",
        "SizedBuffer"
    ],
    "xmlrpc.client.Transport.parse_response": [
        "",
        "http.client.HTTPResponse"
    ],
    "xmlrpc.client.SafeTransport.make_connection": [
        "",
        "_HostType"
    ],
    "xmlrpc.client.ServerProxy.__getattr__": [
        "",
        "str"
    ],
    "xmlrpc.client.ServerProxy.__call__": [
        "",
        "Literal[\"close\"]"
    ],
    "xmlrpc.client.ServerProxy.__enter__": [
        ""
    ],
    "xmlrpc.client.ServerProxy.__exit__": [
        "",
        "type[BaseException] | None",
        "BaseException | None",
        "TracebackType | None"
    ],
    "xmlrpc.client.ServerProxy.__close": [
        ""
    ],
    "xmlrpc.client.ServerProxy.__request": [
        "",
        "str",
        "tuple[_Marshallable, ...]"
    ],
    "xmlrpc.client.escape": [
        "str"
    ],
    "xmlrpc.client._iso8601_format": [
        "datetime"
    ],
    "xmlrpc.client._strftime": [
        "_XMLDate"
    ],
    "xmlrpc.client._datetime": [
        "Any"
    ],
    "xmlrpc.client._datetime_type": [
        "str"
    ],
    "xmlrpc.client._binary": [
        "ReadableBuffer"
    ],
    "xmlrpc.client.getparser": [
        "bool",
        "bool"
    ],
    "xmlrpc.client.dumps": [
        "Fault | tuple[_Marshallable, ...]",
        "str | None",
        "bool | None",
        "str | None",
        "bool"
    ],
    "xmlrpc.client.loads": [
        "str",
        "bool",
        "bool"
    ],
    "xmlrpc.client.gzip_encode": [
        "ReadableBuffer"
    ],
    "xmlrpc.client.gzip_decode": [
        "ReadableBuffer",
        "int"
    ],
    "xmlrpc.server._DispatchArity0.__call__": [
        ""
    ],
    "xmlrpc.server._DispatchArity1.__call__": [
        "",
        "_Marshallable"
    ],
    "xmlrpc.server._DispatchArity2.__call__": [
        "",
        "_Marshallable",
        "_Marshallable"
    ],
    "xmlrpc.server._DispatchArity3.__call__": [
        "",
        "_Marshallable",
        "_Marshallable",
        "_Marshallable"
    ],
    "xmlrpc.server._DispatchArity4.__call__": [
        "",
        "_Marshallable",
        "_Marshallable",
        "_Marshallable",
        "_Marshallable"
    ],
    "xmlrpc.server._DispatchArityN.__call__": [
        ""
    ],
    "xmlrpc.server.SimpleXMLRPCDispatcher.__init__": [
        "",
        "bool",
        "str | None",
        "bool"
    ],
    "xmlrpc.server.SimpleXMLRPCDispatcher.register_instance": [
        "",
        "Any",
        "bool"
    ],
    "xmlrpc.server.SimpleXMLRPCDispatcher.register_function": [
        "",
        "_DispatchProtocol | None",
        "str | None"
    ],
    "xmlrpc.server.SimpleXMLRPCDispatcher.register_introspection_functions": [
        ""
    ],
    "xmlrpc.server.SimpleXMLRPCDispatcher.register_multicall_functions": [
        ""
    ],
    "xmlrpc.server.SimpleXMLRPCDispatcher._marshaled_dispatch": [
        "",
        "str",
        "Callable[[str | None, tuple[_Marshallable, ...]], Fault | tuple[_Marshallable, ...]] | None",
        "Any | None"
    ],
    "xmlrpc.server.SimpleXMLRPCDispatcher.system_listMethods": [
        ""
    ],
    "xmlrpc.server.SimpleXMLRPCDispatcher.system_methodSignature": [
        "",
        "str"
    ],
    "xmlrpc.server.SimpleXMLRPCDispatcher.system_methodHelp": [
        "",
        "str"
    ],
    "xmlrpc.server.SimpleXMLRPCDispatcher.system_multicall": [
        "",
        "list[dict[str, _Marshallable]]"
    ],
    "xmlrpc.server.SimpleXMLRPCDispatcher._dispatch": [
        "",
        "str",
        "Iterable[_Marshallable]"
    ],
    "xmlrpc.server.SimpleXMLRPCRequestHandler.accept_encodings": [
        ""
    ],
    "xmlrpc.server.SimpleXMLRPCRequestHandler.is_rpc_path_valid": [
        ""
    ],
    "xmlrpc.server.SimpleXMLRPCRequestHandler.do_POST": [
        ""
    ],
    "xmlrpc.server.SimpleXMLRPCRequestHandler.decode_request_content": [
        "",
        "bytes"
    ],
    "xmlrpc.server.SimpleXMLRPCRequestHandler.report_404": [
        ""
    ],
    "xmlrpc.server.SimpleXMLRPCServer.__init__": [
        "",
        "tuple[str, int]",
        "type[SimpleXMLRPCRequestHandler]",
        "bool",
        "bool",
        "str | None",
        "bool",
        "bool"
    ],
    "xmlrpc.server.MultiPathXMLRPCServer.__init__": [
        "",
        "tuple[str, int]",
        "type[SimpleXMLRPCRequestHandler]",
        "bool",
        "bool",
        "str | None",
        "bool",
        "bool"
    ],
    "xmlrpc.server.MultiPathXMLRPCServer.add_dispatcher": [
        "",
        "str",
        "SimpleXMLRPCDispatcher"
    ],
    "xmlrpc.server.MultiPathXMLRPCServer.get_dispatcher": [
        "",
        "str"
    ],
    "xmlrpc.server.CGIXMLRPCRequestHandler.__init__": [
        "",
        "bool",
        "str | None",
        "bool"
    ],
    "xmlrpc.server.CGIXMLRPCRequestHandler.handle_xmlrpc": [
        "",
        "str"
    ],
    "xmlrpc.server.CGIXMLRPCRequestHandler.handle_get": [
        ""
    ],
    "xmlrpc.server.CGIXMLRPCRequestHandler.handle_request": [
        "",
        "str | None"
    ],
    "xmlrpc.server.ServerHTMLDoc.docroutine": [
        "",
        "object",
        "str",
        "str | None",
        "Mapping[str, str]",
        "Mapping[str, str]",
        "Mapping[str, str]",
        "type | None"
    ],
    "xmlrpc.server.ServerHTMLDoc.docserver": [
        "",
        "str",
        "str",
        "dict[str, str]"
    ],
    "xmlrpc.server.XMLRPCDocGenerator.set_server_title": [
        "",
        "str"
    ],
    "xmlrpc.server.XMLRPCDocGenerator.set_server_name": [
        "",
        "str"
    ],
    "xmlrpc.server.XMLRPCDocGenerator.set_server_documentation": [
        "",
        "str"
    ],
    "xmlrpc.server.XMLRPCDocGenerator.generate_html_documentation": [
        ""
    ],
    "xmlrpc.server.DocXMLRPCRequestHandler.do_GET": [
        ""
    ],
    "xmlrpc.server.DocXMLRPCServer.__init__": [
        "",
        "tuple[str, int]",
        "type[SimpleXMLRPCRequestHandler]",
        "bool",
        "bool",
        "str | None",
        "bool",
        "bool"
    ],
    "xmlrpc.server.DocCGIXMLRPCRequestHandler.__init__": [
        ""
    ],
    "xmlrpc.server.resolve_dotted_attribute": [
        "Any",
        "str",
        "bool"
    ],
    "xmlrpc.server.list_public_methods": [
        "Any"
    ]
}