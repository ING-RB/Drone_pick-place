{
    "contextlib.AbstractContextManager.__enter__": [
        ""
    ],
    "contextlib.AbstractContextManager.__exit__": [
        "",
        "type[BaseException] | None",
        "BaseException | None",
        "TracebackType | None"
    ],
    "contextlib.ContextDecorator.__call__": [
        "",
        "_F"
    ],
    "contextlib._GeneratorContextManager.__init__": [
        "",
        "Callable[..., Iterator[_T_co]]",
        "tuple[Any, ...]",
        "dict[str, Any]"
    ],
    "contextlib._SupportsClose.close": [
        ""
    ],
    "contextlib.closing.__init__": [
        "",
        "_SupportsCloseT"
    ],
    "contextlib.closing.__exit__": [
        ""
    ],
    "contextlib.suppress.__init__": [
        ""
    ],
    "contextlib.suppress.__exit__": [
        "",
        "type[BaseException] | None",
        "BaseException | None",
        "TracebackType | None"
    ],
    "contextlib._RedirectStream.__init__": [
        "",
        "_T_io"
    ],
    "contextlib._RedirectStream.__exit__": [
        "",
        "type[BaseException] | None",
        "BaseException | None",
        "TracebackType | None"
    ],
    "contextlib.ExitStack.enter_context": [
        "",
        "AbstractContextManager[_T]"
    ],
    "contextlib.ExitStack.push": [
        "",
        "_CM_EF"
    ],
    "contextlib.ExitStack.callback": [
        "",
        "Callable[_P, _T]"
    ],
    "contextlib.ExitStack.pop_all": [
        ""
    ],
    "contextlib.ExitStack.close": [
        ""
    ],
    "contextlib.ExitStack.__enter__": [
        ""
    ],
    "contextlib.ExitStack.__exit__": [
        "",
        "type[BaseException] | None",
        "BaseException | None",
        "TracebackType | None"
    ],
    "contextlib.AsyncExitStack.enter_context": [
        "",
        "AbstractContextManager[_T]"
    ],
    "contextlib.AsyncExitStack.push": [
        "",
        "_CM_EF"
    ],
    "contextlib.AsyncExitStack.push_async_exit": [
        "",
        "_ACM_EF"
    ],
    "contextlib.AsyncExitStack.callback": [
        "",
        "Callable[_P, _T]"
    ],
    "contextlib.AsyncExitStack.push_async_callback": [
        "",
        "Callable[_P, Awaitable[_T]]"
    ],
    "contextlib.AsyncExitStack.pop_all": [
        ""
    ],
    "contextlib.contextmanager": [
        "Callable[_P, Iterator[_T_co]]"
    ],
    "contextlib.asynccontextmanager": [
        "Callable[_P, AsyncIterator[_T_co]]"
    ]
}