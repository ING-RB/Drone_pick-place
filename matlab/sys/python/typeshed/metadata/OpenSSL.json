{
    "OpenSSL.SSL.Connection.__getattr__": [
        "",
        "str"
    ],
    "OpenSSL.SSL.Connection.__init__": [
        "",
        "Context",
        "socket.socket | None"
    ],
    "OpenSSL.SSL.Connection.get_context": [
        ""
    ],
    "OpenSSL.SSL.Connection.set_context": [
        "",
        "Context"
    ],
    "OpenSSL.SSL.Connection.get_servername": [
        ""
    ],
    "OpenSSL.SSL.Connection.set_tlsext_host_name": [
        "",
        "bytes"
    ],
    "OpenSSL.SSL.Connection.pending": [
        ""
    ],
    "OpenSSL.SSL.Connection.send": [
        "",
        "ReadableBuffer | str",
        "int"
    ],
    "OpenSSL.SSL.Connection.sendall": [
        "",
        "ReadableBuffer | str",
        "int"
    ],
    "OpenSSL.SSL.Connection.recv": [
        "",
        "int",
        "int | None"
    ],
    "OpenSSL.SSL.Connection.recv_into": [
        "",
        "MutableSequence[int]",
        "int | None",
        "int | None"
    ],
    "OpenSSL.SSL.Connection.connect": [
        "",
        "str | bytes | Sequence[str | int]"
    ],
    "OpenSSL.SSL.Connection.connect_ex": [
        "",
        "_Address | bytes"
    ],
    "OpenSSL.SSL.Connection.accept": [
        ""
    ],
    "OpenSSL.SSL.Connection.DTLSv1_listen": [
        ""
    ],
    "OpenSSL.SSL.Connection.DTLSv1_get_timeout": [
        ""
    ],
    "OpenSSL.SSL.Connection.DTLSv1_handle_timeout": [
        ""
    ],
    "OpenSSL.SSL.Connection.shutdown": [
        ""
    ],
    "OpenSSL.SSL.Connection.do_handshake": [
        ""
    ],
    "OpenSSL.SSL.Connection.get_certificate": [
        ""
    ],
    "OpenSSL.SSL.Connection.get_peer_certificate": [
        ""
    ],
    "OpenSSL.SSL.Connection.get_peer_cert_chain": [
        ""
    ],
    "OpenSSL.SSL.Connection.get_verified_chain": [
        ""
    ],
    "OpenSSL.SSL.Connection.bio_read": [
        "",
        "int"
    ],
    "OpenSSL.SSL.Connection.bio_write": [
        "",
        "bytes"
    ],
    "OpenSSL.SSL.Connection.bio_shutdown": [
        ""
    ],
    "OpenSSL.SSL.Connection.renegotiate": [
        ""
    ],
    "OpenSSL.SSL.Connection.renegotiate_pending": [
        ""
    ],
    "OpenSSL.SSL.Connection.total_renegotiations": [
        ""
    ],
    "OpenSSL.SSL.Connection.set_accept_state": [
        ""
    ],
    "OpenSSL.SSL.Connection.set_connect_state": [
        ""
    ],
    "OpenSSL.SSL.Connection.get_client_ca_list": [
        ""
    ],
    "OpenSSL.SSL.Connection.get_cipher_list": [
        ""
    ],
    "OpenSSL.SSL.Connection.get_cipher_name": [
        ""
    ],
    "OpenSSL.SSL.Connection.get_cipher_bits": [
        ""
    ],
    "OpenSSL.SSL.Connection.get_cipher_version": [
        ""
    ],
    "OpenSSL.SSL.Connection.get_protocol_version_name": [
        ""
    ],
    "OpenSSL.SSL.Connection.get_protocol_version": [
        ""
    ],
    "OpenSSL.SSL.Connection.get_shutdown": [
        ""
    ],
    "OpenSSL.SSL.Connection.set_shutdown": [
        "",
        "int"
    ],
    "OpenSSL.SSL.Connection.get_state_string": [
        ""
    ],
    "OpenSSL.SSL.Connection.server_random": [
        ""
    ],
    "OpenSSL.SSL.Connection.client_random": [
        ""
    ],
    "OpenSSL.SSL.Connection.master_key": [
        ""
    ],
    "OpenSSL.SSL.Connection.export_keying_material": [
        "",
        "Incomplete",
        "Incomplete",
        "Incomplete"
    ],
    "OpenSSL.SSL.Connection.get_app_data": [
        ""
    ],
    "OpenSSL.SSL.Connection.set_app_data": [
        "",
        "Any"
    ],
    "OpenSSL.SSL.Connection.sock_shutdown": [
        "",
        "int"
    ],
    "OpenSSL.SSL.Connection.want_read": [
        ""
    ],
    "OpenSSL.SSL.Connection.want_write": [
        ""
    ],
    "OpenSSL.SSL.Connection.get_session": [
        ""
    ],
    "OpenSSL.SSL.Connection.set_session": [
        "",
        "Session"
    ],
    "OpenSSL.SSL.Connection.get_finished": [
        ""
    ],
    "OpenSSL.SSL.Connection.get_peer_finished": [
        ""
    ],
    "OpenSSL.SSL.Connection.set_alpn_protos": [
        "",
        "Sequence[bytes]"
    ],
    "OpenSSL.SSL.Connection.get_alpn_proto_negotiated": [
        ""
    ],
    "OpenSSL.SSL.Connection.request_ocsp": [
        ""
    ],
    "OpenSSL.SSL.Context.__getattr__": [
        "",
        "str"
    ],
    "OpenSSL.SSL.Context.__init__": [
        "",
        "int"
    ],
    "OpenSSL.SSL.Context.load_verify_locations": [
        "",
        "str | None",
        "str | None"
    ],
    "OpenSSL.SSL.Context.set_options": [
        "",
        "int"
    ],
    "OpenSSL.SSL.Context.set_verify": [
        "",
        "int",
        "Callable[[Connection, X509, int, int, int], bool] | None"
    ],
    "OpenSSL.SSL.Context.set_min_proto_version": [
        "",
        "int"
    ],
    "OpenSSL.SSL.Context.set_max_proto_version": [
        "",
        "int"
    ],
    "OpenSSL.SSL.Context.use_certificate_chain_file": [
        "",
        "str | bytes"
    ],
    "OpenSSL.SSL.Context.use_certificate_file": [
        "",
        "str | bytes",
        "int"
    ],
    "OpenSSL.SSL.Context.use_certificate": [
        "",
        "X509"
    ],
    "OpenSSL.SSL.Context.use_privatekey_file": [
        "",
        "str | bytes",
        "int | None"
    ],
    "OpenSSL.SSL.Context.use_privatekey": [
        "",
        "PKey"
    ],
    "OpenSSL.SSL.Context.add_extra_chain_cert": [
        "",
        "X509"
    ],
    "OpenSSL.SSL.Context.set_cipher_list": [
        "",
        "bytes"
    ],
    "OpenSSL.SSL.Context.set_keylog_callback": [
        "",
        "Callable[[Connection, bytes], object]"
    ],
    "OpenSSL.SSL.Context.set_alpn_protos": [
        "",
        "Sequence[bytes]"
    ],
    "OpenSSL.SSL.Context.set_alpn_select_callback": [
        "",
        "Callable[[Connection, list[bytes]], bytes]"
    ],
    "OpenSSL.SSL.Context.set_ocsp_server_callback": [
        "",
        "Callable[[Connection, _T | None], bytes]",
        "_T | None"
    ],
    "OpenSSL.SSL.Context.set_ocsp_client_callback": [
        "",
        "Callable[[Connection, bytes, _T | None], bool]",
        "_T | None"
    ],
    "OpenSSL.SSL.SSLeay_version": [
        "int"
    ],
    "OpenSSL.rand.add": [
        "bytes",
        "int"
    ],
    "OpenSSL.rand.status": [],
    "OpenSSL.crypto._EllipticCurve.__init__": [
        "",
        "Incomplete | None",
        "int",
        "str"
    ],
    "OpenSSL.crypto.PKey.__init__": [
        ""
    ],
    "OpenSSL.crypto.PKey.bits": [
        ""
    ],
    "OpenSSL.crypto.PKey.check": [
        ""
    ],
    "OpenSSL.crypto.PKey.from_cryptography_key": [
        "",
        "_Key"
    ],
    "OpenSSL.crypto.PKey.generate_key": [
        "",
        "int",
        "int"
    ],
    "OpenSSL.crypto.PKey.to_cryptography_key": [
        ""
    ],
    "OpenSSL.crypto.PKey.type": [
        ""
    ],
    "OpenSSL.crypto.X509Name.__init__": [
        "",
        "X509Name"
    ],
    "OpenSSL.crypto.X509Name.der": [
        ""
    ],
    "OpenSSL.crypto.X509Name.get_components": [
        ""
    ],
    "OpenSSL.crypto.X509Name.hash": [
        ""
    ],
    "OpenSSL.crypto.X509.__init__": [
        ""
    ],
    "OpenSSL.crypto.X509.add_extensions": [
        "",
        "Iterable[X509Extension]"
    ],
    "OpenSSL.crypto.X509.digest": [
        "",
        "str"
    ],
    "OpenSSL.crypto.X509.from_cryptography": [
        "",
        "Certificate"
    ],
    "OpenSSL.crypto.X509.get_extension": [
        "",
        "int"
    ],
    "OpenSSL.crypto.X509.get_extension_count": [
        ""
    ],
    "OpenSSL.crypto.X509.get_issuer": [
        ""
    ],
    "OpenSSL.crypto.X509.get_notAfter": [
        ""
    ],
    "OpenSSL.crypto.X509.get_notBefore": [
        ""
    ],
    "OpenSSL.crypto.X509.get_pubkey": [
        ""
    ],
    "OpenSSL.crypto.X509.get_serial_number": [
        ""
    ],
    "OpenSSL.crypto.X509.get_signature_algorithm": [
        ""
    ],
    "OpenSSL.crypto.X509.get_subject": [
        ""
    ],
    "OpenSSL.crypto.X509.get_version": [
        ""
    ],
    "OpenSSL.crypto.X509.gmtime_adj_notAfter": [
        "",
        "int"
    ],
    "OpenSSL.crypto.X509.gmtime_adj_notBefore": [
        "",
        "int"
    ],
    "OpenSSL.crypto.X509.has_expired": [
        ""
    ],
    "OpenSSL.crypto.X509.set_issuer": [
        "",
        "X509Name"
    ],
    "OpenSSL.crypto.X509.set_notAfter": [
        "",
        "bytes"
    ],
    "OpenSSL.crypto.X509.set_notBefore": [
        "",
        "bytes"
    ],
    "OpenSSL.crypto.X509.set_pubkey": [
        "",
        "PKey"
    ],
    "OpenSSL.crypto.X509.set_serial_number": [
        "",
        "int"
    ],
    "OpenSSL.crypto.X509.set_subject": [
        "",
        "X509Name"
    ],
    "OpenSSL.crypto.X509.set_version": [
        "",
        "int"
    ],
    "OpenSSL.crypto.X509.sign": [
        "",
        "PKey",
        "str"
    ],
    "OpenSSL.crypto.X509.subject_name_hash": [
        ""
    ],
    "OpenSSL.crypto.X509.to_cryptography": [
        ""
    ],
    "OpenSSL.crypto.X509Req.__init__": [
        ""
    ],
    "OpenSSL.crypto.X509Req.add_extensions": [
        "",
        "Iterable[X509Extension]"
    ],
    "OpenSSL.crypto.X509Req.from_cryptography": [
        "",
        "CertificateSigningRequest"
    ],
    "OpenSSL.crypto.X509Req.get_extensions": [
        ""
    ],
    "OpenSSL.crypto.X509Req.get_pubkey": [
        ""
    ],
    "OpenSSL.crypto.X509Req.get_subject": [
        ""
    ],
    "OpenSSL.crypto.X509Req.get_version": [
        ""
    ],
    "OpenSSL.crypto.X509Req.set_pubkey": [
        "",
        "PKey"
    ],
    "OpenSSL.crypto.X509Req.set_version": [
        "",
        "int"
    ],
    "OpenSSL.crypto.X509Req.sign": [
        "",
        "PKey",
        "str"
    ],
    "OpenSSL.crypto.X509Req.to_cryptography": [
        ""
    ],
    "OpenSSL.crypto.X509Req.verify": [
        "",
        "PKey"
    ],
    "OpenSSL.crypto.X509Extension.__init__": [
        "",
        "bytes",
        "bool",
        "bytes",
        "X509 | None",
        "X509 | None"
    ],
    "OpenSSL.crypto.X509Extension.get_critical": [
        ""
    ],
    "OpenSSL.crypto.X509Extension.get_data": [
        ""
    ],
    "OpenSSL.crypto.X509Extension.get_short_name": [
        ""
    ],
    "OpenSSL.crypto.Revoked.__init__": [
        ""
    ],
    "OpenSSL.crypto.Revoked.all_reasons": [
        ""
    ],
    "OpenSSL.crypto.Revoked.get_reason": [
        ""
    ],
    "OpenSSL.crypto.Revoked.get_rev_date": [
        ""
    ],
    "OpenSSL.crypto.Revoked.get_serial": [
        ""
    ],
    "OpenSSL.crypto.Revoked.set_reason": [
        "",
        "bytes | None"
    ],
    "OpenSSL.crypto.Revoked.set_rev_date": [
        "",
        "bytes"
    ],
    "OpenSSL.crypto.Revoked.set_serial": [
        "",
        "bytes"
    ],
    "OpenSSL.crypto.CRL.__init__": [
        ""
    ],
    "OpenSSL.crypto.CRL.add_revoked": [
        "",
        "Revoked"
    ],
    "OpenSSL.crypto.CRL.export": [
        "",
        "X509",
        "PKey",
        "int",
        "int",
        "bytes"
    ],
    "OpenSSL.crypto.CRL.from_cryptography": [
        "",
        "CertificateRevocationList"
    ],
    "OpenSSL.crypto.CRL.get_issuer": [
        ""
    ],
    "OpenSSL.crypto.CRL.get_revoked": [
        ""
    ],
    "OpenSSL.crypto.CRL.set_lastUpdate": [
        "",
        "bytes"
    ],
    "OpenSSL.crypto.CRL.set_nextUpdate": [
        "",
        "bytes"
    ],
    "OpenSSL.crypto.CRL.set_version": [
        "",
        "int"
    ],
    "OpenSSL.crypto.CRL.sign": [
        "",
        "X509",
        "PKey",
        "bytes"
    ],
    "OpenSSL.crypto.CRL.to_cryptography": [
        ""
    ],
    "OpenSSL.crypto.X509Store.__init__": [
        ""
    ],
    "OpenSSL.crypto.X509Store.add_cert": [
        "",
        "X509"
    ],
    "OpenSSL.crypto.X509Store.add_crl": [
        "",
        "CRL"
    ],
    "OpenSSL.crypto.X509Store.load_locations": [
        "",
        "StrOrBytesPath",
        "StrOrBytesPath | None"
    ],
    "OpenSSL.crypto.X509Store.set_flags": [
        "",
        "int"
    ],
    "OpenSSL.crypto.X509Store.set_time": [
        "",
        "datetime"
    ],
    "OpenSSL.crypto.X509StoreContext.__init__": [
        "",
        "X509Store",
        "X509",
        "Sequence[X509] | None"
    ],
    "OpenSSL.crypto.X509StoreContext.get_verified_chain": [
        ""
    ],
    "OpenSSL.crypto.X509StoreContext.set_store": [
        "",
        "X509Store"
    ],
    "OpenSSL.crypto.X509StoreContext.verify_certificate": [
        ""
    ],
    "OpenSSL.crypto.X509StoreContextError.__init__": [
        "",
        "str",
        "list[Any]",
        "X509"
    ],
    "OpenSSL.crypto.PKCS7.get_type_name": [
        ""
    ],
    "OpenSSL.crypto.PKCS7.type_is_data": [
        ""
    ],
    "OpenSSL.crypto.PKCS7.type_is_enveloped": [
        ""
    ],
    "OpenSSL.crypto.PKCS7.type_is_signed": [
        ""
    ],
    "OpenSSL.crypto.PKCS7.type_is_signedAndEnveloped": [
        ""
    ],
    "OpenSSL.crypto.PKCS12.__init__": [
        ""
    ],
    "OpenSSL.crypto.PKCS12.export": [
        "",
        "bytes | None",
        "int",
        "int"
    ],
    "OpenSSL.crypto.PKCS12.get_ca_certificates": [
        ""
    ],
    "OpenSSL.crypto.PKCS12.get_certificate": [
        ""
    ],
    "OpenSSL.crypto.PKCS12.get_friendlyname": [
        ""
    ],
    "OpenSSL.crypto.PKCS12.get_privatekey": [
        ""
    ],
    "OpenSSL.crypto.PKCS12.set_ca_certificates": [
        "",
        "Iterable[X509] | None"
    ],
    "OpenSSL.crypto.PKCS12.set_certificate": [
        "",
        "X509"
    ],
    "OpenSSL.crypto.PKCS12.set_friendlyname": [
        "",
        "bytes | None"
    ],
    "OpenSSL.crypto.PKCS12.set_privatekey": [
        "",
        "PKey"
    ],
    "OpenSSL.crypto.NetscapeSPKI.__init__": [
        ""
    ],
    "OpenSSL.crypto.NetscapeSPKI.b64_encode": [
        ""
    ],
    "OpenSSL.crypto.NetscapeSPKI.get_pubkey": [
        ""
    ],
    "OpenSSL.crypto.NetscapeSPKI.set_pubkey": [
        "",
        "PKey"
    ],
    "OpenSSL.crypto.NetscapeSPKI.sign": [
        "",
        "PKey",
        "str"
    ],
    "OpenSSL.crypto.NetscapeSPKI.verify": [
        "",
        "PKey"
    ],
    "OpenSSL.crypto.get_elliptic_curves": [],
    "OpenSSL.crypto.get_elliptic_curve": [
        "str"
    ],
    "OpenSSL.crypto.dump_certificate": [
        "int",
        "X509"
    ],
    "OpenSSL.crypto.load_certificate": [
        "int",
        "bytes"
    ],
    "OpenSSL.crypto.dump_certificate_request": [
        "int",
        "X509Req"
    ],
    "OpenSSL.crypto.load_certificate_request": [
        "int",
        "bytes"
    ],
    "OpenSSL.crypto.dump_privatekey": [
        "int",
        "PKey",
        "str | None",
        "bytes | Callable[[], bytes] | None"
    ],
    "OpenSSL.crypto.load_privatekey": [
        "int",
        "str | bytes",
        "bytes | Callable[[], bytes] | None"
    ],
    "OpenSSL.crypto.dump_publickey": [
        "int",
        "PKey"
    ],
    "OpenSSL.crypto.load_publickey": [
        "int",
        "str | bytes"
    ],
    "OpenSSL.crypto.dump_crl": [
        "int",
        "CRL"
    ],
    "OpenSSL.crypto.load_crl": [
        "int",
        "str | bytes"
    ],
    "OpenSSL.crypto.load_pkcs7_data": [
        "int",
        "str | bytes"
    ],
    "OpenSSL.crypto.load_pkcs12": [
        "str | bytes",
        "bytes | None"
    ],
    "OpenSSL.crypto.sign": [
        "PKey",
        "str | bytes",
        "str"
    ],
    "OpenSSL.crypto.verify": [
        "X509",
        "bytes",
        "str | bytes",
        "str"
    ]
}