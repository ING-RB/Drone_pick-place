{
    "ssl._ASN1Object.__new__": [
        "",
        "str"
    ],
    "ssl._ASN1Object.fromnid": [
        "",
        "int"
    ],
    "ssl._ASN1Object.fromname": [
        "",
        "str"
    ],
    "ssl.SSLSocket.session_reused": [
        ""
    ],
    "ssl.SSLSocket.__init__": [
        ""
    ],
    "ssl.SSLSocket.connect": [
        "",
        "socket._Address"
    ],
    "ssl.SSLSocket.connect_ex": [
        "",
        "socket._Address"
    ],
    "ssl.SSLSocket.recv": [
        "",
        "int",
        "int"
    ],
    "ssl.SSLSocket.recv_into": [
        "",
        "WriteableBuffer",
        "int | None",
        "int"
    ],
    "ssl.SSLSocket.recvfrom": [
        "",
        "int",
        "int"
    ],
    "ssl.SSLSocket.recvfrom_into": [
        "",
        "WriteableBuffer",
        "int | None",
        "int"
    ],
    "ssl.SSLSocket.send": [
        "",
        "ReadableBuffer",
        "int"
    ],
    "ssl.SSLSocket.sendall": [
        "",
        "ReadableBuffer",
        "int"
    ],
    "ssl.SSLSocket.sendto": [
        "",
        "ReadableBuffer",
        "socket._Address",
        "None"
    ],
    "ssl.SSLSocket.shutdown": [
        "",
        "int"
    ],
    "ssl.SSLSocket.read": [
        "",
        "int",
        "bytearray | None"
    ],
    "ssl.SSLSocket.write": [
        "",
        "ReadableBuffer"
    ],
    "ssl.SSLSocket.do_handshake": [
        "",
        "bool"
    ],
    "ssl.SSLSocket.getpeercert": [
        "",
        "Literal[False]"
    ],
    "ssl.SSLSocket.cipher": [
        ""
    ],
    "ssl.SSLSocket.shared_ciphers": [
        ""
    ],
    "ssl.SSLSocket.compression": [
        ""
    ],
    "ssl.SSLSocket.get_channel_binding": [
        "",
        "str"
    ],
    "ssl.SSLSocket.selected_alpn_protocol": [
        ""
    ],
    "ssl.SSLSocket.selected_npn_protocol": [
        ""
    ],
    "ssl.SSLSocket.accept": [
        ""
    ],
    "ssl.SSLSocket.unwrap": [
        ""
    ],
    "ssl.SSLSocket.version": [
        ""
    ],
    "ssl.SSLSocket.pending": [
        ""
    ],
    "ssl.SSLContext.protocol": [
        ""
    ],
    "ssl.SSLContext.cert_store_stats": [
        ""
    ],
    "ssl.SSLContext.load_cert_chain": [
        "",
        "StrOrBytesPath",
        "StrOrBytesPath | None",
        "_PasswordType | None"
    ],
    "ssl.SSLContext.load_default_certs": [
        "",
        "Purpose"
    ],
    "ssl.SSLContext.load_verify_locations": [
        "",
        "StrOrBytesPath | None",
        "StrOrBytesPath | None",
        "str | ReadableBuffer | None"
    ],
    "ssl.SSLContext.get_ca_certs": [
        "",
        "Literal[False]"
    ],
    "ssl.SSLContext.get_ciphers": [
        ""
    ],
    "ssl.SSLContext.set_default_verify_paths": [
        ""
    ],
    "ssl.SSLContext.set_ciphers": [
        "",
        "str"
    ],
    "ssl.SSLContext.set_alpn_protocols": [
        "",
        "Iterable[str]"
    ],
    "ssl.SSLContext.set_npn_protocols": [
        "",
        "Iterable[str]"
    ],
    "ssl.SSLContext.set_servername_callback": [
        "",
        "_SrvnmeCbType | None"
    ],
    "ssl.SSLContext.load_dh_params": [
        "",
        "str"
    ],
    "ssl.SSLContext.set_ecdh_curve": [
        "",
        "str"
    ],
    "ssl.SSLContext.wrap_socket": [
        "",
        "socket.socket",
        "bool",
        "bool",
        "bool",
        "str | None",
        "SSLSession | None"
    ],
    "ssl.SSLContext.wrap_bio": [
        "",
        "MemoryBIO",
        "MemoryBIO",
        "bool",
        "str | None",
        "SSLSession | None"
    ],
    "ssl.SSLContext.session_stats": [
        ""
    ],
    "ssl.SSLObject.server_side": [
        ""
    ],
    "ssl.SSLObject.server_hostname": [
        ""
    ],
    "ssl.SSLObject.session_reused": [
        ""
    ],
    "ssl.SSLObject.__init__": [
        ""
    ],
    "ssl.SSLObject.read": [
        "",
        "int",
        "bytearray | None"
    ],
    "ssl.SSLObject.write": [
        "",
        "ReadableBuffer"
    ],
    "ssl.SSLObject.getpeercert": [
        "",
        "Literal[False]"
    ],
    "ssl.SSLObject.selected_alpn_protocol": [
        ""
    ],
    "ssl.SSLObject.selected_npn_protocol": [
        ""
    ],
    "ssl.SSLObject.cipher": [
        ""
    ],
    "ssl.SSLObject.shared_ciphers": [
        ""
    ],
    "ssl.SSLObject.compression": [
        ""
    ],
    "ssl.SSLObject.pending": [
        ""
    ],
    "ssl.SSLObject.do_handshake": [
        ""
    ],
    "ssl.SSLObject.unwrap": [
        ""
    ],
    "ssl.SSLObject.version": [
        ""
    ],
    "ssl.SSLObject.get_channel_binding": [
        "",
        "str"
    ],
    "ssl.MemoryBIO.read": [
        "",
        "int"
    ],
    "ssl.MemoryBIO.write": [
        "",
        "ReadableBuffer"
    ],
    "ssl.MemoryBIO.write_eof": [
        ""
    ],
    "ssl.SSLSession.has_ticket": [
        ""
    ],
    "ssl.SSLSession.id": [
        ""
    ],
    "ssl.SSLSession.ticket_lifetime_hint": [
        ""
    ],
    "ssl.SSLSession.time": [
        ""
    ],
    "ssl.SSLSession.timeout": [
        ""
    ],
    "ssl.SSLSession.__eq__": [
        "",
        "object"
    ],
    "ssl.create_default_context": [
        "Purpose"
    ],
    "ssl.RAND_bytes": [
        "int"
    ],
    "ssl.RAND_status": [],
    "ssl.RAND_egd": [
        "str"
    ],
    "ssl.RAND_add": [
        "str | ReadableBuffer",
        "float"
    ],
    "ssl.cert_time_to_seconds": [
        "str"
    ],
    "ssl.DER_cert_to_PEM_cert": [
        "ReadableBuffer"
    ],
    "ssl.PEM_cert_to_DER_cert": [
        "str"
    ],
    "ssl.get_default_verify_paths": [],
    "ssl.get_protocol_name": [
        "int"
    ]
}