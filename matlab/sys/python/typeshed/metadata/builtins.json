{
    "object.__class__": [
        ""
    ],
    "object.__init__": [
        ""
    ],
    "object.__new__": [
        ""
    ],
    "object.__setattr__": [
        "",
        "str",
        "Any"
    ],
    "object.__delattr__": [
        "",
        "str"
    ],
    "object.__eq__": [
        "",
        "object"
    ],
    "object.__ne__": [
        "",
        "object"
    ],
    "object.__str__": [
        ""
    ],
    "object.__repr__": [
        ""
    ],
    "object.__hash__": [
        ""
    ],
    "object.__format__": [
        "",
        "str"
    ],
    "object.__getattribute__": [
        "",
        "str"
    ],
    "object.__sizeof__": [
        ""
    ],
    "object.__reduce__": [
        ""
    ],
    "object.__dir__": [
        ""
    ],
    "object.__init_subclass__": [
        ""
    ],
    "object.__subclasshook__": [
        "",
        "type"
    ],
    "staticmethod.__func__": [
        ""
    ],
    "staticmethod.__isabstractmethod__": [
        ""
    ],
    "staticmethod.__init__": [
        "",
        "Callable[_P, _R_co]"
    ],
    "staticmethod.__get__": [
        "",
        "None",
        "type"
    ],
    "classmethod.__func__": [
        ""
    ],
    "classmethod.__isabstractmethod__": [
        ""
    ],
    "classmethod.__init__": [
        "",
        "Callable[Concatenate[type[_T], _P], _R_co]"
    ],
    "classmethod.__get__": [
        "",
        "_T",
        "type[_T] | None"
    ],
    "type.__base__": [
        ""
    ],
    "type.__basicsize__": [
        ""
    ],
    "type.__dict__": [
        ""
    ],
    "type.__dictoffset__": [
        ""
    ],
    "type.__flags__": [
        ""
    ],
    "type.__itemsize__": [
        ""
    ],
    "type.__mro__": [
        ""
    ],
    "type.__text_signature__": [
        ""
    ],
    "type.__weakrefoffset__": [
        ""
    ],
    "type.__init__": [
        "",
        "object"
    ],
    "type.__new__": [
        "",
        "object"
    ],
    "type.__call__": [
        ""
    ],
    "type.__subclasses__": [
        "_typeshed.Self"
    ],
    "type.mro": [
        ""
    ],
    "type.__instancecheck__": [
        "",
        "Any"
    ],
    "type.__subclasscheck__": [
        "",
        "type"
    ],
    "type.__prepare__": [
        "",
        "str",
        "tuple[type, ...]"
    ],
    "super.__init__": [
        "",
        "Any",
        "Any"
    ],
    "int.__new__": [
        "",
        "str | ReadableBuffer | SupportsInt | SupportsIndex | SupportsTrunc"
    ],
    "int.real": [
        ""
    ],
    "int.imag": [
        ""
    ],
    "int.numerator": [
        ""
    ],
    "int.denominator": [
        ""
    ],
    "int.conjugate": [
        ""
    ],
    "int.bit_length": [
        ""
    ],
    "int.__add__": [
        "",
        "int"
    ],
    "int.__sub__": [
        "",
        "int"
    ],
    "int.__mul__": [
        "",
        "int"
    ],
    "int.__floordiv__": [
        "",
        "int"
    ],
    "int.__truediv__": [
        "",
        "int"
    ],
    "int.__mod__": [
        "",
        "int"
    ],
    "int.__divmod__": [
        "",
        "int"
    ],
    "int.__radd__": [
        "",
        "int"
    ],
    "int.__rsub__": [
        "",
        "int"
    ],
    "int.__rmul__": [
        "",
        "int"
    ],
    "int.__rfloordiv__": [
        "",
        "int"
    ],
    "int.__rtruediv__": [
        "",
        "int"
    ],
    "int.__rmod__": [
        "",
        "int"
    ],
    "int.__rdivmod__": [
        "",
        "int"
    ],
    "int.__pow__": [
        "",
        "Literal[0]"
    ],
    "int.__rpow__": [
        "",
        "int",
        "int | None"
    ],
    "int.__and__": [
        "",
        "int"
    ],
    "int.__or__": [
        "",
        "int"
    ],
    "int.__xor__": [
        "",
        "int"
    ],
    "int.__lshift__": [
        "",
        "int"
    ],
    "int.__rshift__": [
        "",
        "int"
    ],
    "int.__rand__": [
        "",
        "int"
    ],
    "int.__ror__": [
        "",
        "int"
    ],
    "int.__rxor__": [
        "",
        "int"
    ],
    "int.__rlshift__": [
        "",
        "int"
    ],
    "int.__rrshift__": [
        "",
        "int"
    ],
    "int.__neg__": [
        ""
    ],
    "int.__pos__": [
        ""
    ],
    "int.__invert__": [
        ""
    ],
    "int.__trunc__": [
        ""
    ],
    "int.__ceil__": [
        ""
    ],
    "int.__floor__": [
        ""
    ],
    "int.__round__": [
        "",
        "SupportsIndex"
    ],
    "int.__getnewargs__": [
        ""
    ],
    "int.__eq__": [
        "",
        "object"
    ],
    "int.__ne__": [
        "",
        "object"
    ],
    "int.__lt__": [
        "",
        "int"
    ],
    "int.__le__": [
        "",
        "int"
    ],
    "int.__gt__": [
        "",
        "int"
    ],
    "int.__ge__": [
        "",
        "int"
    ],
    "int.__float__": [
        ""
    ],
    "int.__int__": [
        ""
    ],
    "int.__abs__": [
        ""
    ],
    "int.__hash__": [
        ""
    ],
    "int.__bool__": [
        ""
    ],
    "int.__index__": [
        ""
    ],
    "float.__new__": [
        "",
        "SupportsFloat | SupportsIndex | str | ReadableBuffer"
    ],
    "float.as_integer_ratio": [
        ""
    ],
    "float.hex": [
        ""
    ],
    "float.is_integer": [
        ""
    ],
    "float.fromhex": [
        "",
        "str"
    ],
    "float.real": [
        ""
    ],
    "float.imag": [
        ""
    ],
    "float.conjugate": [
        ""
    ],
    "float.__add__": [
        "",
        "float"
    ],
    "float.__sub__": [
        "",
        "float"
    ],
    "float.__mul__": [
        "",
        "float"
    ],
    "float.__floordiv__": [
        "",
        "float"
    ],
    "float.__truediv__": [
        "",
        "float"
    ],
    "float.__mod__": [
        "",
        "float"
    ],
    "float.__divmod__": [
        "",
        "float"
    ],
    "float.__pow__": [
        "",
        "int",
        "None"
    ],
    "float.__radd__": [
        "",
        "float"
    ],
    "float.__rsub__": [
        "",
        "float"
    ],
    "float.__rmul__": [
        "",
        "float"
    ],
    "float.__rfloordiv__": [
        "",
        "float"
    ],
    "float.__rtruediv__": [
        "",
        "float"
    ],
    "float.__rmod__": [
        "",
        "float"
    ],
    "float.__rdivmod__": [
        "",
        "float"
    ],
    "float.__rpow__": [
        "",
        "_PositiveInteger",
        "None"
    ],
    "float.__getnewargs__": [
        ""
    ],
    "float.__trunc__": [
        ""
    ],
    "float.__round__": [
        "",
        "None"
    ],
    "float.__eq__": [
        "",
        "object"
    ],
    "float.__ne__": [
        "",
        "object"
    ],
    "float.__lt__": [
        "",
        "float"
    ],
    "float.__le__": [
        "",
        "float"
    ],
    "float.__gt__": [
        "",
        "float"
    ],
    "float.__ge__": [
        "",
        "float"
    ],
    "float.__neg__": [
        ""
    ],
    "float.__pos__": [
        ""
    ],
    "float.__int__": [
        ""
    ],
    "float.__float__": [
        ""
    ],
    "float.__abs__": [
        ""
    ],
    "float.__hash__": [
        ""
    ],
    "float.__bool__": [
        ""
    ],
    "complex.real": [
        ""
    ],
    "complex.imag": [
        ""
    ],
    "complex.conjugate": [
        ""
    ],
    "complex.__add__": [
        "",
        "complex"
    ],
    "complex.__sub__": [
        "",
        "complex"
    ],
    "complex.__mul__": [
        "",
        "complex"
    ],
    "complex.__pow__": [
        "",
        "complex",
        "None"
    ],
    "complex.__truediv__": [
        "",
        "complex"
    ],
    "complex.__radd__": [
        "",
        "complex"
    ],
    "complex.__rsub__": [
        "",
        "complex"
    ],
    "complex.__rmul__": [
        "",
        "complex"
    ],
    "complex.__rpow__": [
        "",
        "complex",
        "None"
    ],
    "complex.__rtruediv__": [
        "",
        "complex"
    ],
    "complex.__eq__": [
        "",
        "object"
    ],
    "complex.__ne__": [
        "",
        "object"
    ],
    "complex.__neg__": [
        ""
    ],
    "complex.__pos__": [
        ""
    ],
    "complex.__abs__": [
        ""
    ],
    "complex.__hash__": [
        ""
    ],
    "complex.__bool__": [
        ""
    ],
    "_FormatMapMapping.__getitem__": [
        "",
        "str"
    ],
    "_TranslateTable.__getitem__": [
        "",
        "int"
    ],
    "str.__new__": [
        "",
        "object"
    ],
    "str.capitalize": [
        "LiteralString"
    ],
    "str.casefold": [
        "LiteralString"
    ],
    "str.center": [
        "LiteralString",
        "SupportsIndex",
        "LiteralString"
    ],
    "str.count": [
        "",
        "str",
        "SupportsIndex | None",
        "SupportsIndex | None"
    ],
    "str.encode": [
        "",
        "str",
        "str"
    ],
    "str.endswith": [
        "",
        "str | tuple[str, ...]",
        "SupportsIndex | None",
        "SupportsIndex | None"
    ],
    "str.find": [
        "",
        "str",
        "SupportsIndex | None",
        "SupportsIndex | None"
    ],
    "str.format": [
        "LiteralString"
    ],
    "str.format_map": [
        "",
        "_FormatMapMapping"
    ],
    "str.index": [
        "",
        "str",
        "SupportsIndex | None",
        "SupportsIndex | None"
    ],
    "str.isalnum": [
        ""
    ],
    "str.isalpha": [
        ""
    ],
    "str.isascii": [
        ""
    ],
    "str.isdecimal": [
        ""
    ],
    "str.isdigit": [
        ""
    ],
    "str.isidentifier": [
        ""
    ],
    "str.islower": [
        ""
    ],
    "str.isnumeric": [
        ""
    ],
    "str.isprintable": [
        ""
    ],
    "str.isspace": [
        ""
    ],
    "str.istitle": [
        ""
    ],
    "str.isupper": [
        ""
    ],
    "str.join": [
        "LiteralString",
        "Iterable[LiteralString]"
    ],
    "str.ljust": [
        "LiteralString",
        "SupportsIndex",
        "LiteralString"
    ],
    "str.lower": [
        "LiteralString"
    ],
    "str.lstrip": [
        "LiteralString",
        "LiteralString | None"
    ],
    "str.partition": [
        "LiteralString",
        "LiteralString"
    ],
    "str.replace": [
        "LiteralString",
        "LiteralString",
        "LiteralString",
        "SupportsIndex"
    ],
    "str.rfind": [
        "",
        "str",
        "SupportsIndex | None",
        "SupportsIndex | None"
    ],
    "str.rindex": [
        "",
        "str",
        "SupportsIndex | None",
        "SupportsIndex | None"
    ],
    "str.rjust": [
        "LiteralString",
        "SupportsIndex",
        "LiteralString"
    ],
    "str.rpartition": [
        "LiteralString",
        "LiteralString"
    ],
    "str.rsplit": [
        "LiteralString",
        "LiteralString | None",
        "SupportsIndex"
    ],
    "str.rstrip": [
        "LiteralString",
        "LiteralString | None"
    ],
    "str.split": [
        "LiteralString",
        "LiteralString | None",
        "SupportsIndex"
    ],
    "str.splitlines": [
        "LiteralString",
        "bool"
    ],
    "str.startswith": [
        "",
        "str | tuple[str, ...]",
        "SupportsIndex | None",
        "SupportsIndex | None"
    ],
    "str.strip": [
        "LiteralString",
        "LiteralString | None"
    ],
    "str.swapcase": [
        "LiteralString"
    ],
    "str.title": [
        "LiteralString"
    ],
    "str.translate": [
        "",
        "_TranslateTable"
    ],
    "str.upper": [
        "LiteralString"
    ],
    "str.zfill": [
        "LiteralString",
        "SupportsIndex"
    ],
    "str.maketrans": [
        "dict[int, _T] | dict[str, _T] | dict[str | int, _T]"
    ],
    "str.__add__": [
        "LiteralString",
        "LiteralString"
    ],
    "str.__contains__": [
        "",
        "str"
    ],
    "str.__eq__": [
        "",
        "object"
    ],
    "str.__ge__": [
        "",
        "str"
    ],
    "str.__getitem__": [
        "",
        "SupportsIndex | slice"
    ],
    "str.__gt__": [
        "",
        "str"
    ],
    "str.__hash__": [
        ""
    ],
    "str.__iter__": [
        "LiteralString"
    ],
    "str.__le__": [
        "",
        "str"
    ],
    "str.__len__": [
        ""
    ],
    "str.__lt__": [
        "",
        "str"
    ],
    "str.__mod__": [
        "LiteralString",
        "LiteralString | tuple[LiteralString, ...]"
    ],
    "str.__mul__": [
        "LiteralString",
        "SupportsIndex"
    ],
    "str.__ne__": [
        "",
        "object"
    ],
    "str.__rmul__": [
        "LiteralString",
        "SupportsIndex"
    ],
    "str.__getnewargs__": [
        ""
    ],
    "bytes.__new__": [
        "",
        "Iterable[SupportsIndex] | SupportsIndex | SupportsBytes | ReadableBuffer"
    ],
    "bytes.capitalize": [
        ""
    ],
    "bytes.center": [
        "",
        "SupportsIndex",
        "bytes"
    ],
    "bytes.count": [
        "",
        "ReadableBuffer | SupportsIndex",
        "SupportsIndex | None",
        "SupportsIndex | None"
    ],
    "bytes.decode": [
        "",
        "str",
        "str"
    ],
    "bytes.endswith": [
        "",
        "ReadableBuffer | tuple[ReadableBuffer, ...]",
        "SupportsIndex | None",
        "SupportsIndex | None"
    ],
    "bytes.find": [
        "",
        "ReadableBuffer | SupportsIndex",
        "SupportsIndex | None",
        "SupportsIndex | None"
    ],
    "bytes.index": [
        "",
        "ReadableBuffer | SupportsIndex",
        "SupportsIndex | None",
        "SupportsIndex | None"
    ],
    "bytes.isalnum": [
        ""
    ],
    "bytes.isalpha": [
        ""
    ],
    "bytes.isascii": [
        ""
    ],
    "bytes.isdigit": [
        ""
    ],
    "bytes.islower": [
        ""
    ],
    "bytes.isspace": [
        ""
    ],
    "bytes.istitle": [
        ""
    ],
    "bytes.isupper": [
        ""
    ],
    "bytes.join": [
        "",
        "Iterable[ReadableBuffer]"
    ],
    "bytes.ljust": [
        "",
        "SupportsIndex",
        "bytes | bytearray"
    ],
    "bytes.lower": [
        ""
    ],
    "bytes.lstrip": [
        "",
        "ReadableBuffer | None"
    ],
    "bytes.partition": [
        "",
        "ReadableBuffer"
    ],
    "bytes.replace": [
        "",
        "ReadableBuffer",
        "ReadableBuffer",
        "SupportsIndex"
    ],
    "bytes.rfind": [
        "",
        "ReadableBuffer | SupportsIndex",
        "SupportsIndex | None",
        "SupportsIndex | None"
    ],
    "bytes.rindex": [
        "",
        "ReadableBuffer | SupportsIndex",
        "SupportsIndex | None",
        "SupportsIndex | None"
    ],
    "bytes.rjust": [
        "",
        "SupportsIndex",
        "bytes | bytearray"
    ],
    "bytes.rpartition": [
        "",
        "ReadableBuffer"
    ],
    "bytes.rsplit": [
        "",
        "ReadableBuffer | None",
        "SupportsIndex"
    ],
    "bytes.rstrip": [
        "",
        "ReadableBuffer | None"
    ],
    "bytes.split": [
        "",
        "ReadableBuffer | None",
        "SupportsIndex"
    ],
    "bytes.splitlines": [
        "",
        "bool"
    ],
    "bytes.startswith": [
        "",
        "ReadableBuffer | tuple[ReadableBuffer, ...]",
        "SupportsIndex | None",
        "SupportsIndex | None"
    ],
    "bytes.strip": [
        "",
        "ReadableBuffer | None"
    ],
    "bytes.swapcase": [
        ""
    ],
    "bytes.title": [
        ""
    ],
    "bytes.translate": [
        "",
        "ReadableBuffer | None",
        "bytes"
    ],
    "bytes.upper": [
        ""
    ],
    "bytes.zfill": [
        "",
        "SupportsIndex"
    ],
    "bytes.fromhex": [
        "",
        "str"
    ],
    "bytes.maketrans": [
        "ReadableBuffer",
        "ReadableBuffer"
    ],
    "bytes.__len__": [
        ""
    ],
    "bytes.__iter__": [
        ""
    ],
    "bytes.__hash__": [
        ""
    ],
    "bytes.__getitem__": [
        "",
        "SupportsIndex"
    ],
    "bytes.__add__": [
        "",
        "ReadableBuffer"
    ],
    "bytes.__mul__": [
        "",
        "SupportsIndex"
    ],
    "bytes.__rmul__": [
        "",
        "SupportsIndex"
    ],
    "bytes.__mod__": [
        "",
        "Any"
    ],
    "bytes.__contains__": [
        "",
        "SupportsIndex | ReadableBuffer"
    ],
    "bytes.__eq__": [
        "",
        "object"
    ],
    "bytes.__ne__": [
        "",
        "object"
    ],
    "bytes.__lt__": [
        "",
        "bytes"
    ],
    "bytes.__le__": [
        "",
        "bytes"
    ],
    "bytes.__gt__": [
        "",
        "bytes"
    ],
    "bytes.__ge__": [
        "",
        "bytes"
    ],
    "bytes.__getnewargs__": [
        ""
    ],
    "bytes.__buffer__": [
        "",
        "int"
    ],
    "bytearray.__init__": [
        ""
    ],
    "bytearray.append": [
        "",
        "SupportsIndex"
    ],
    "bytearray.capitalize": [
        ""
    ],
    "bytearray.center": [
        "",
        "SupportsIndex",
        "bytes"
    ],
    "bytearray.count": [
        "",
        "ReadableBuffer | SupportsIndex",
        "SupportsIndex | None",
        "SupportsIndex | None"
    ],
    "bytearray.copy": [
        ""
    ],
    "bytearray.decode": [
        "",
        "str",
        "str"
    ],
    "bytearray.endswith": [
        "",
        "ReadableBuffer | tuple[ReadableBuffer, ...]",
        "SupportsIndex | None",
        "SupportsIndex | None"
    ],
    "bytearray.extend": [
        "",
        "Iterable[SupportsIndex]"
    ],
    "bytearray.find": [
        "",
        "ReadableBuffer | SupportsIndex",
        "SupportsIndex | None",
        "SupportsIndex | None"
    ],
    "bytearray.index": [
        "",
        "ReadableBuffer | SupportsIndex",
        "SupportsIndex | None",
        "SupportsIndex | None"
    ],
    "bytearray.insert": [
        "",
        "SupportsIndex",
        "SupportsIndex"
    ],
    "bytearray.isalnum": [
        ""
    ],
    "bytearray.isalpha": [
        ""
    ],
    "bytearray.isascii": [
        ""
    ],
    "bytearray.isdigit": [
        ""
    ],
    "bytearray.islower": [
        ""
    ],
    "bytearray.isspace": [
        ""
    ],
    "bytearray.istitle": [
        ""
    ],
    "bytearray.isupper": [
        ""
    ],
    "bytearray.join": [
        "",
        "Iterable[ReadableBuffer]"
    ],
    "bytearray.ljust": [
        "",
        "SupportsIndex",
        "bytes | bytearray"
    ],
    "bytearray.lower": [
        ""
    ],
    "bytearray.lstrip": [
        "",
        "ReadableBuffer | None"
    ],
    "bytearray.partition": [
        "",
        "ReadableBuffer"
    ],
    "bytearray.pop": [
        "",
        "int"
    ],
    "bytearray.remove": [
        "",
        "int"
    ],
    "bytearray.replace": [
        "",
        "ReadableBuffer",
        "ReadableBuffer",
        "SupportsIndex"
    ],
    "bytearray.rfind": [
        "",
        "ReadableBuffer | SupportsIndex",
        "SupportsIndex | None",
        "SupportsIndex | None"
    ],
    "bytearray.rindex": [
        "",
        "ReadableBuffer | SupportsIndex",
        "SupportsIndex | None",
        "SupportsIndex | None"
    ],
    "bytearray.rjust": [
        "",
        "SupportsIndex",
        "bytes | bytearray"
    ],
    "bytearray.rpartition": [
        "",
        "ReadableBuffer"
    ],
    "bytearray.rsplit": [
        "",
        "ReadableBuffer | None",
        "SupportsIndex"
    ],
    "bytearray.rstrip": [
        "",
        "ReadableBuffer | None"
    ],
    "bytearray.split": [
        "",
        "ReadableBuffer | None",
        "SupportsIndex"
    ],
    "bytearray.splitlines": [
        "",
        "bool"
    ],
    "bytearray.startswith": [
        "",
        "ReadableBuffer | tuple[ReadableBuffer, ...]",
        "SupportsIndex | None",
        "SupportsIndex | None"
    ],
    "bytearray.strip": [
        "",
        "ReadableBuffer | None"
    ],
    "bytearray.swapcase": [
        ""
    ],
    "bytearray.title": [
        ""
    ],
    "bytearray.translate": [
        "",
        "ReadableBuffer | None",
        "bytes"
    ],
    "bytearray.upper": [
        ""
    ],
    "bytearray.zfill": [
        "",
        "SupportsIndex"
    ],
    "bytearray.fromhex": [
        "",
        "str"
    ],
    "bytearray.maketrans": [
        "ReadableBuffer",
        "ReadableBuffer"
    ],
    "bytearray.__len__": [
        ""
    ],
    "bytearray.__iter__": [
        ""
    ],
    "bytearray.__getitem__": [
        "",
        "SupportsIndex"
    ],
    "bytearray.__setitem__": [
        "",
        "SupportsIndex",
        "SupportsIndex"
    ],
    "bytearray.__delitem__": [
        "",
        "SupportsIndex | slice"
    ],
    "bytearray.__add__": [
        "",
        "ReadableBuffer"
    ],
    "bytearray.__iadd__": [
        "",
        "ReadableBuffer"
    ],
    "bytearray.__mul__": [
        "",
        "SupportsIndex"
    ],
    "bytearray.__rmul__": [
        "",
        "SupportsIndex"
    ],
    "bytearray.__imul__": [
        "",
        "SupportsIndex"
    ],
    "bytearray.__mod__": [
        "",
        "Any"
    ],
    "bytearray.__contains__": [
        "",
        "SupportsIndex | ReadableBuffer"
    ],
    "bytearray.__eq__": [
        "",
        "object"
    ],
    "bytearray.__ne__": [
        "",
        "object"
    ],
    "bytearray.__lt__": [
        "",
        "ReadableBuffer"
    ],
    "bytearray.__le__": [
        "",
        "ReadableBuffer"
    ],
    "bytearray.__gt__": [
        "",
        "ReadableBuffer"
    ],
    "bytearray.__ge__": [
        "",
        "ReadableBuffer"
    ],
    "bytearray.__alloc__": [
        ""
    ],
    "bytearray.__buffer__": [
        "",
        "int"
    ],
    "bytearray.__release_buffer__": [
        "",
        "memoryview"
    ],
    "memoryview.format": [
        ""
    ],
    "memoryview.itemsize": [
        ""
    ],
    "memoryview.shape": [
        ""
    ],
    "memoryview.strides": [
        ""
    ],
    "memoryview.suboffsets": [
        ""
    ],
    "memoryview.readonly": [
        ""
    ],
    "memoryview.ndim": [
        ""
    ],
    "memoryview.obj": [
        ""
    ],
    "memoryview.c_contiguous": [
        ""
    ],
    "memoryview.f_contiguous": [
        ""
    ],
    "memoryview.contiguous": [
        ""
    ],
    "memoryview.nbytes": [
        ""
    ],
    "memoryview.__init__": [
        "",
        "ReadableBuffer"
    ],
    "memoryview.__enter__": [
        ""
    ],
    "memoryview.__exit__": [
        "",
        "type[BaseException] | None",
        "BaseException | None",
        "TracebackType | None"
    ],
    "memoryview.cast": [
        "",
        "str",
        "list[int] | tuple[int, ...]"
    ],
    "memoryview.__getitem__": [
        "",
        "SupportsIndex"
    ],
    "memoryview.__contains__": [
        "",
        "object"
    ],
    "memoryview.__iter__": [
        ""
    ],
    "memoryview.__len__": [
        ""
    ],
    "memoryview.__eq__": [
        "",
        "object"
    ],
    "memoryview.__hash__": [
        ""
    ],
    "memoryview.__setitem__": [
        "",
        "slice",
        "ReadableBuffer"
    ],
    "memoryview.tolist": [
        ""
    ],
    "memoryview.release": [
        ""
    ],
    "memoryview.__buffer__": [
        "",
        "int"
    ],
    "memoryview.__release_buffer__": [
        "",
        "memoryview"
    ],
    "bool.__new__": [
        "",
        "object"
    ],
    "bool.__and__": [
        "",
        "bool"
    ],
    "bool.__or__": [
        "",
        "bool"
    ],
    "bool.__xor__": [
        "",
        "bool"
    ],
    "bool.__rand__": [
        "",
        "bool"
    ],
    "bool.__ror__": [
        "",
        "bool"
    ],
    "bool.__rxor__": [
        "",
        "bool"
    ],
    "bool.__getnewargs__": [
        ""
    ],
    "slice.start": [
        ""
    ],
    "slice.step": [
        ""
    ],
    "slice.stop": [
        ""
    ],
    "slice.__init__": [
        "",
        "Any"
    ],
    "slice.__eq__": [
        "",
        "object"
    ],
    "slice.indices": [
        "",
        "SupportsIndex"
    ],
    "tuple.__new__": [
        "",
        "Iterable[_T_co]"
    ],
    "tuple.__len__": [
        ""
    ],
    "tuple.__contains__": [
        "",
        "object"
    ],
    "tuple.__getitem__": [
        "",
        "SupportsIndex"
    ],
    "tuple.__iter__": [
        ""
    ],
    "tuple.__lt__": [
        "",
        "tuple[_T_co, ...]"
    ],
    "tuple.__le__": [
        "",
        "tuple[_T_co, ...]"
    ],
    "tuple.__gt__": [
        "",
        "tuple[_T_co, ...]"
    ],
    "tuple.__ge__": [
        "",
        "tuple[_T_co, ...]"
    ],
    "tuple.__eq__": [
        "",
        "object"
    ],
    "tuple.__hash__": [
        ""
    ],
    "tuple.__add__": [
        "",
        "tuple[_T_co, ...]"
    ],
    "tuple.__mul__": [
        "",
        "SupportsIndex"
    ],
    "tuple.__rmul__": [
        "",
        "SupportsIndex"
    ],
    "tuple.count": [
        "",
        "Any"
    ],
    "tuple.index": [
        "",
        "Any",
        "SupportsIndex",
        "SupportsIndex"
    ],
    "function.__closure__": [
        ""
    ],
    "function.__globals__": [
        ""
    ],
    "function.__get__": [
        "",
        "object",
        "type | None"
    ],
    "list.__init__": [
        ""
    ],
    "list.copy": [
        ""
    ],
    "list.append": [
        "",
        "_T"
    ],
    "list.extend": [
        "",
        "Iterable[_T]"
    ],
    "list.pop": [
        "",
        "SupportsIndex"
    ],
    "list.index": [
        "",
        "_T",
        "SupportsIndex",
        "SupportsIndex"
    ],
    "list.count": [
        "",
        "_T"
    ],
    "list.insert": [
        "",
        "SupportsIndex",
        "_T"
    ],
    "list.remove": [
        "",
        "_T"
    ],
    "list.sort": [
        "list[SupportsRichComparisonT]"
    ],
    "list.__len__": [
        ""
    ],
    "list.__iter__": [
        ""
    ],
    "list.__getitem__": [
        "",
        "SupportsIndex"
    ],
    "list.__setitem__": [
        "",
        "SupportsIndex",
        "_T"
    ],
    "list.__delitem__": [
        "",
        "SupportsIndex | slice"
    ],
    "list.__add__": [
        "",
        "list[_T]"
    ],
    "list.__iadd__": [
        "",
        "Iterable[_T]"
    ],
    "list.__mul__": [
        "",
        "SupportsIndex"
    ],
    "list.__rmul__": [
        "",
        "SupportsIndex"
    ],
    "list.__imul__": [
        "",
        "SupportsIndex"
    ],
    "list.__contains__": [
        "",
        "object"
    ],
    "list.__reversed__": [
        ""
    ],
    "list.__gt__": [
        "",
        "list[_T]"
    ],
    "list.__ge__": [
        "",
        "list[_T]"
    ],
    "list.__lt__": [
        "",
        "list[_T]"
    ],
    "list.__le__": [
        "",
        "list[_T]"
    ],
    "list.__eq__": [
        "",
        "object"
    ],
    "dict.__init__": [
        ""
    ],
    "dict.__new__": [
        ""
    ],
    "dict.copy": [
        ""
    ],
    "dict.keys": [
        ""
    ],
    "dict.values": [
        ""
    ],
    "dict.items": [
        ""
    ],
    "dict.fromkeys": [
        "",
        "Iterable[_T]",
        "None"
    ],
    "dict.get": [
        "",
        "_KT"
    ],
    "dict.pop": [
        "",
        "_KT"
    ],
    "dict.__len__": [
        ""
    ],
    "dict.__getitem__": [
        "",
        "_KT"
    ],
    "dict.__setitem__": [
        "",
        "_KT",
        "_VT"
    ],
    "dict.__delitem__": [
        "",
        "_KT"
    ],
    "dict.__iter__": [
        ""
    ],
    "dict.__eq__": [
        "",
        "object"
    ],
    "set.__init__": [
        ""
    ],
    "set.add": [
        "",
        "_T"
    ],
    "set.copy": [
        ""
    ],
    "set.difference": [
        ""
    ],
    "set.difference_update": [
        ""
    ],
    "set.discard": [
        "",
        "_T"
    ],
    "set.intersection": [
        ""
    ],
    "set.intersection_update": [
        ""
    ],
    "set.isdisjoint": [
        "",
        "Iterable[Any]"
    ],
    "set.issubset": [
        "",
        "Iterable[Any]"
    ],
    "set.issuperset": [
        "",
        "Iterable[Any]"
    ],
    "set.remove": [
        "",
        "_T"
    ],
    "set.symmetric_difference": [
        "",
        "Iterable[_T]"
    ],
    "set.symmetric_difference_update": [
        "",
        "Iterable[_T]"
    ],
    "set.union": [
        ""
    ],
    "set.update": [
        ""
    ],
    "set.__len__": [
        ""
    ],
    "set.__contains__": [
        "",
        "object"
    ],
    "set.__iter__": [
        ""
    ],
    "set.__and__": [
        "",
        "AbstractSet[object]"
    ],
    "set.__iand__": [
        "",
        "AbstractSet[object]"
    ],
    "set.__or__": [
        "",
        "AbstractSet[_S]"
    ],
    "set.__ior__": [
        "",
        "AbstractSet[_T]"
    ],
    "set.__sub__": [
        "",
        "AbstractSet[_T | None]"
    ],
    "set.__isub__": [
        "",
        "AbstractSet[object]"
    ],
    "set.__xor__": [
        "",
        "AbstractSet[_S]"
    ],
    "set.__ixor__": [
        "",
        "AbstractSet[_T]"
    ],
    "set.__le__": [
        "",
        "AbstractSet[object]"
    ],
    "set.__lt__": [
        "",
        "AbstractSet[object]"
    ],
    "set.__ge__": [
        "",
        "AbstractSet[object]"
    ],
    "set.__gt__": [
        "",
        "AbstractSet[object]"
    ],
    "set.__eq__": [
        "",
        "object"
    ],
    "frozenset.__new__": [
        ""
    ],
    "frozenset.copy": [
        ""
    ],
    "frozenset.difference": [
        ""
    ],
    "frozenset.intersection": [
        ""
    ],
    "frozenset.isdisjoint": [
        "",
        "Iterable[_T_co]"
    ],
    "frozenset.issubset": [
        "",
        "Iterable[object]"
    ],
    "frozenset.issuperset": [
        "",
        "Iterable[object]"
    ],
    "frozenset.symmetric_difference": [
        "",
        "Iterable[_T_co]"
    ],
    "frozenset.union": [
        ""
    ],
    "frozenset.__len__": [
        ""
    ],
    "frozenset.__contains__": [
        "",
        "object"
    ],
    "frozenset.__iter__": [
        ""
    ],
    "frozenset.__and__": [
        "",
        "AbstractSet[_T_co]"
    ],
    "frozenset.__or__": [
        "",
        "AbstractSet[_S]"
    ],
    "frozenset.__sub__": [
        "",
        "AbstractSet[_T_co]"
    ],
    "frozenset.__xor__": [
        "",
        "AbstractSet[_S]"
    ],
    "frozenset.__le__": [
        "",
        "AbstractSet[object]"
    ],
    "frozenset.__lt__": [
        "",
        "AbstractSet[object]"
    ],
    "frozenset.__ge__": [
        "",
        "AbstractSet[object]"
    ],
    "frozenset.__gt__": [
        "",
        "AbstractSet[object]"
    ],
    "frozenset.__eq__": [
        "",
        "object"
    ],
    "frozenset.__hash__": [
        ""
    ],
    "enumerate.__init__": [
        "",
        "Iterable[_T]",
        "int"
    ],
    "enumerate.__iter__": [
        ""
    ],
    "enumerate.__next__": [
        ""
    ],
    "range.start": [
        ""
    ],
    "range.stop": [
        ""
    ],
    "range.step": [
        ""
    ],
    "range.__init__": [
        "",
        "SupportsIndex"
    ],
    "range.count": [
        "",
        "int"
    ],
    "range.index": [
        "",
        "int"
    ],
    "range.__len__": [
        ""
    ],
    "range.__eq__": [
        "",
        "object"
    ],
    "range.__hash__": [
        ""
    ],
    "range.__contains__": [
        "",
        "object"
    ],
    "range.__iter__": [
        ""
    ],
    "range.__getitem__": [
        "",
        "SupportsIndex"
    ],
    "range.__reversed__": [
        ""
    ],
    "property.__init__": [
        "",
        "Callable[[Any], Any] | None",
        "Callable[[Any, Any], None] | None",
        "Callable[[Any], None] | None",
        "str | None"
    ],
    "property.getter": [
        "",
        "Callable[[Any], Any]"
    ],
    "property.setter": [
        "",
        "Callable[[Any, Any], None]"
    ],
    "property.deleter": [
        "",
        "Callable[[Any], None]"
    ],
    "property.__get__": [
        "",
        "Any",
        "type | None"
    ],
    "property.__set__": [
        "",
        "Any",
        "Any"
    ],
    "property.__delete__": [
        "",
        "Any"
    ],
    "_PathLike.__fspath__": [
        ""
    ],
    "filter.__init__": [
        "",
        "None",
        "Iterable[_T | None]"
    ],
    "filter.__iter__": [
        ""
    ],
    "filter.__next__": [
        ""
    ],
    "_GetItemIterable.__getitem__": [
        "",
        "int"
    ],
    "map.__init__": [
        "",
        "Callable[[_T1], _S]",
        "Iterable[_T1]"
    ],
    "map.__iter__": [
        ""
    ],
    "map.__next__": [
        ""
    ],
    "_SupportsWriteAndFlush.flush": [
        ""
    ],
    "_SupportsPow2.__pow__": [
        "",
        "_E"
    ],
    "_SupportsPow3NoneOnly.__pow__": [
        "",
        "_E",
        "None"
    ],
    "_SupportsPow3.__pow__": [
        "",
        "_E",
        "_M"
    ],
    "reversed.__init__": [
        "",
        "Reversible[_T]"
    ],
    "reversed.__iter__": [
        ""
    ],
    "reversed.__next__": [
        ""
    ],
    "reversed.__length_hint__": [
        ""
    ],
    "_SupportsRound1.__round__": [
        ""
    ],
    "_SupportsRound2.__round__": [
        "",
        "int"
    ],
    "zip.__iter__": [
        ""
    ],
    "zip.__next__": [
        ""
    ],
    "BaseException.__init__": [
        ""
    ],
    "BaseException.__setstate__": [
        "",
        "dict[str, Any] | None"
    ],
    "BaseException.with_traceback": [
        "",
        "TracebackType | None"
    ],
    "ImportError.__init__": [
        ""
    ],
    "UnicodeDecodeError.__init__": [
        "",
        "str",
        "ReadableBuffer",
        "int",
        "int",
        "str"
    ],
    "UnicodeEncodeError.__init__": [
        "",
        "str",
        "str",
        "int",
        "int",
        "str"
    ],
    "UnicodeTranslateError.__init__": [
        "",
        "str",
        "int",
        "int",
        "str"
    ],
    "abs": [
        "SupportsAbs[_T]"
    ],
    "all": [
        "Iterable[object]"
    ],
    "any": [
        "Iterable[object]"
    ],
    "ascii": [
        "object"
    ],
    "bin": [
        "int | SupportsIndex"
    ],
    "breakpoint": [],
    "callable": [
        "object"
    ],
    "chr": [
        "int"
    ],
    "copyright": [],
    "credits": [],
    "delattr": [
        "object",
        "str"
    ],
    "dir": [
        "object"
    ],
    "divmod": [
        "SupportsDivMod[_T_contra, _T_co]",
        "_T_contra"
    ],
    "eval": [
        "str | ReadableBuffer | CodeType",
        "dict[str, Any] | None",
        "Mapping[str, object] | None"
    ],
    "exit": [
        "sys._ExitCode"
    ],
    "format": [
        "object",
        "str"
    ],
    "getattr": [
        "object",
        "str"
    ],
    "globals": [],
    "hasattr": [
        "object",
        "str"
    ],
    "hash": [
        "object"
    ],
    "help": [
        "object"
    ],
    "hex": [
        "int | SupportsIndex"
    ],
    "id": [
        "object"
    ],
    "input": [
        "object"
    ],
    "iter": [
        "SupportsIter[_SupportsNextT]"
    ],
    "isinstance": [
        "object",
        "_ClassInfo"
    ],
    "issubclass": [
        "type",
        "_ClassInfo"
    ],
    "len": [
        "Sized"
    ],
    "license": [],
    "locals": [],
    "max": [
        "SupportsRichComparisonT",
        "SupportsRichComparisonT"
    ],
    "min": [
        "SupportsRichComparisonT",
        "SupportsRichComparisonT"
    ],
    "next": [
        "SupportsNext[_T]"
    ],
    "oct": [
        "int | SupportsIndex"
    ],
    "open": [
        "FileDescriptorOrPath",
        "OpenTextMode",
        "int",
        "str | None",
        "str | None",
        "str | None",
        "bool",
        "_Opener | None"
    ],
    "ord": [
        "str | bytes | bytearray"
    ],
    "print": [],
    "quit": [
        "sys._ExitCode"
    ],
    "repr": [
        "object"
    ],
    "round": [
        "_SupportsRound1[_T]",
        "None"
    ],
    "setattr": [
        "object",
        "str",
        "Any"
    ],
    "sorted": [
        "Iterable[SupportsRichComparisonT]"
    ],
    "sum": [
        "Iterable[_SupportsSumNoDefaultT]"
    ],
    "vars": [
        "type"
    ],
    "__import__": [
        "str",
        "Mapping[str, object] | None",
        "Mapping[str, object] | None",
        "Sequence[str]",
        "int"
    ],
    "__build_class__": [
        "Callable[[], _Cell | Any]",
        "str"
    ]
}