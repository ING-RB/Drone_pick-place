{
    "pynput.keyboard.__init__.Events.__init__": [
        ""
    ],
    "pynput.keyboard.__init__.Events.__next__": [
        ""
    ],
    "pynput.keyboard.__init__.Events.get": [
        "",
        "float | None"
    ],
    "pynput.keyboard.__init__.HotKey.__init__": [
        "",
        "list[KeyCode]",
        "Callable[[], object]"
    ],
    "pynput.keyboard.__init__.HotKey.parse": [
        "str"
    ],
    "pynput.keyboard.__init__.HotKey.press": [
        "",
        "Key | KeyCode"
    ],
    "pynput.keyboard.__init__.HotKey.release": [
        "",
        "Key | KeyCode"
    ],
    "pynput.keyboard.__init__.GlobalHotKeys.__init__": [
        "",
        "SupportsItems[str, Callable[[], None]]"
    ],
    "pynput.keyboard._base.KeyCode.__init__": [
        "",
        "str | None",
        "str | None",
        "bool"
    ],
    "pynput.keyboard._base.KeyCode.__eq__": [
        "",
        "object"
    ],
    "pynput.keyboard._base.KeyCode.__hash__": [
        ""
    ],
    "pynput.keyboard._base.KeyCode.join": [
        "",
        "Self"
    ],
    "pynput.keyboard._base.KeyCode.from_vk": [
        "",
        "int"
    ],
    "pynput.keyboard._base.KeyCode.from_char": [
        "",
        "str"
    ],
    "pynput.keyboard._base.KeyCode.from_dead": [
        "",
        "str"
    ],
    "pynput.keyboard._base.Controller.__init__": [
        ""
    ],
    "pynput.keyboard._base.Controller.press": [
        "",
        "str | Key | KeyCode"
    ],
    "pynput.keyboard._base.Controller.release": [
        "",
        "str | Key | KeyCode"
    ],
    "pynput.keyboard._base.Controller.tap": [
        "",
        "str | Key | KeyCode"
    ],
    "pynput.keyboard._base.Controller.touch": [
        "",
        "str | Key | KeyCode",
        "bool"
    ],
    "pynput.keyboard._base.Controller.pressed": [
        ""
    ],
    "pynput.keyboard._base.Controller.type": [
        "",
        "str"
    ],
    "pynput.keyboard._base.Controller.modifiers": [
        ""
    ],
    "pynput.keyboard._base.Controller.alt_pressed": [
        ""
    ],
    "pynput.keyboard._base.Controller.alt_gr_pressed": [
        ""
    ],
    "pynput.keyboard._base.Controller.ctrl_pressed": [
        ""
    ],
    "pynput.keyboard._base.Controller.shift_pressed": [
        ""
    ],
    "pynput.keyboard._base.Listener.__init__": [
        "",
        "Callable[[Key | KeyCode | None], None] | None",
        "Callable[[Key | KeyCode | None], None] | None",
        "bool"
    ],
    "pynput.keyboard._base.Listener.canonical": [
        "",
        "Key | KeyCode"
    ],
    "pynput.mouse._base.Controller.__init__": [
        ""
    ],
    "pynput.mouse._base.Controller.position": [
        ""
    ],
    "pynput.mouse._base.Controller.scroll": [
        "",
        "int",
        "int"
    ],
    "pynput.mouse._base.Controller.press": [
        "",
        "Button"
    ],
    "pynput.mouse._base.Controller.release": [
        "",
        "Button"
    ],
    "pynput.mouse._base.Controller.move": [
        "",
        "int",
        "int"
    ],
    "pynput.mouse._base.Controller.click": [
        "",
        "Button",
        "int"
    ],
    "pynput.mouse._base.Controller.__enter__": [
        ""
    ],
    "pynput.mouse._base.Controller.__exit__": [
        "",
        "type[BaseException] | None",
        "BaseException | None",
        "TracebackType | None"
    ],
    "pynput.mouse._base.Listener.__init__": [
        "",
        "Callable[[int, int], bool | None] | None",
        "Callable[[int, int, Button, bool], bool | None] | None",
        "Callable[[int, int, int, int], bool | None] | None",
        "bool"
    ],
    "pynput.mouse.__init__.Events.__init__": [
        ""
    ],
    "pynput.mouse.__init__.Events.__next__": [
        ""
    ],
    "pynput.mouse.__init__.Events.get": [
        "",
        "float | None"
    ],
    "pynput._util.AbstractListener.__init__": [
        "",
        "bool"
    ],
    "pynput._util.AbstractListener.suppress": [
        ""
    ],
    "pynput._util.AbstractListener.running": [
        ""
    ],
    "pynput._util.AbstractListener.stop": [
        ""
    ],
    "pynput._util.AbstractListener.__enter__": [
        ""
    ],
    "pynput._util.AbstractListener.__exit__": [
        "",
        "type[BaseException] | None",
        "BaseException | None",
        "TracebackType | None"
    ],
    "pynput._util.AbstractListener.wait": [
        ""
    ],
    "pynput._util.AbstractListener.run": [
        ""
    ],
    "pynput._util.AbstractListener._emitter": [
        "",
        "Callable[_P, _T]"
    ],
    "pynput._util.AbstractListener._mark_ready": [
        ""
    ],
    "pynput._util.AbstractListener._run": [
        ""
    ],
    "pynput._util.AbstractListener._stop_platform": [
        ""
    ],
    "pynput._util.AbstractListener.join": [
        ""
    ],
    "pynput._util.Events.__init__": [
        ""
    ],
    "pynput._util.Events.__enter__": [
        ""
    ],
    "pynput._util.Events.__exit__": [
        "",
        "type[BaseException] | None",
        "BaseException | None",
        "TracebackType | None"
    ],
    "pynput._util.Events.__iter__": [
        ""
    ],
    "pynput._util.Events.__next__": [
        ""
    ],
    "pynput._util.Events.get": [
        "",
        "float | None"
    ],
    "pynput._util.Events._event_mapper": [
        "",
        "Callable[_P, object]"
    ],
    "pynput._util.backend": [
        "str"
    ],
    "pynput._util.prefix": [
        "type | tuple[type | tuple[Any, ...], ...]",
        "type"
    ]
}