{
    "logging.__init__.Filterer.addFilter": [
        "",
        "_FilterType"
    ],
    "logging.__init__.Filterer.removeFilter": [
        "",
        "_FilterType"
    ],
    "logging.__init__.Manager.__init__": [
        "",
        "RootLogger"
    ],
    "logging.__init__.Manager.getLogger": [
        "",
        "str"
    ],
    "logging.__init__.Manager.setLoggerClass": [
        "",
        "type[Logger]"
    ],
    "logging.__init__.Manager.setLogRecordFactory": [
        "",
        "Callable[..., LogRecord]"
    ],
    "logging.__init__.Logger.__init__": [
        "",
        "str",
        "_Level"
    ],
    "logging.__init__.Logger.setLevel": [
        "",
        "_Level"
    ],
    "logging.__init__.Logger.isEnabledFor": [
        "",
        "int"
    ],
    "logging.__init__.Logger.getEffectiveLevel": [
        ""
    ],
    "logging.__init__.Logger.getChild": [
        "",
        "str"
    ],
    "logging.__init__.Logger.addHandler": [
        "",
        "Handler"
    ],
    "logging.__init__.Logger.removeHandler": [
        "",
        "Handler"
    ],
    "logging.__init__.Logger.handle": [
        "",
        "LogRecord"
    ],
    "logging.__init__.Logger.makeRecord": [
        "",
        "str",
        "int",
        "str",
        "int",
        "object",
        "_ArgsType",
        "_SysExcInfoType | None",
        "str | None",
        "Mapping[str, object] | None",
        "str | None"
    ],
    "logging.__init__.Logger.hasHandlers": [
        ""
    ],
    "logging.__init__.Logger.callHandlers": [
        "",
        "LogRecord"
    ],
    "logging.__init__.Handler.__init__": [
        "",
        "_Level"
    ],
    "logging.__init__.Handler.get_name": [
        ""
    ],
    "logging.__init__.Handler.set_name": [
        "",
        "str"
    ],
    "logging.__init__.Handler.createLock": [
        ""
    ],
    "logging.__init__.Handler.acquire": [
        ""
    ],
    "logging.__init__.Handler.release": [
        ""
    ],
    "logging.__init__.Handler.setLevel": [
        "",
        "_Level"
    ],
    "logging.__init__.Handler.setFormatter": [
        "",
        "Formatter | None"
    ],
    "logging.__init__.Handler.flush": [
        ""
    ],
    "logging.__init__.Handler.close": [
        ""
    ],
    "logging.__init__.Handler.handle": [
        "",
        "LogRecord"
    ],
    "logging.__init__.Handler.handleError": [
        "",
        "LogRecord"
    ],
    "logging.__init__.Handler.format": [
        "",
        "LogRecord"
    ],
    "logging.__init__.Handler.emit": [
        "",
        "LogRecord"
    ],
    "logging.__init__.Formatter.format": [
        "",
        "LogRecord"
    ],
    "logging.__init__.Formatter.formatTime": [
        "",
        "LogRecord",
        "str | None"
    ],
    "logging.__init__.Formatter.formatException": [
        "",
        "_SysExcInfoType"
    ],
    "logging.__init__.Formatter.formatMessage": [
        "",
        "LogRecord"
    ],
    "logging.__init__.Formatter.formatStack": [
        "",
        "str"
    ],
    "logging.__init__.Formatter.usesTime": [
        ""
    ],
    "logging.__init__.BufferingFormatter.__init__": [
        "",
        "Formatter | None"
    ],
    "logging.__init__.BufferingFormatter.formatHeader": [
        "",
        "Sequence[LogRecord]"
    ],
    "logging.__init__.BufferingFormatter.formatFooter": [
        "",
        "Sequence[LogRecord]"
    ],
    "logging.__init__.BufferingFormatter.format": [
        "",
        "Sequence[LogRecord]"
    ],
    "logging.__init__.Filter.__init__": [
        "",
        "str"
    ],
    "logging.__init__.LogRecord.__init__": [
        "",
        "str",
        "int",
        "str",
        "int",
        "object",
        "_ArgsType | None",
        "_SysExcInfoType | None",
        "str | None",
        "str | None"
    ],
    "logging.__init__.LogRecord.getMessage": [
        ""
    ],
    "logging.__init__.LogRecord.__setattr__": [
        "",
        "str",
        "Any"
    ],
    "logging.__init__.LoggerAdapter.process": [
        "",
        "Any",
        "MutableMapping[str, Any]"
    ],
    "logging.__init__.LoggerAdapter.isEnabledFor": [
        "",
        "int"
    ],
    "logging.__init__.LoggerAdapter.getEffectiveLevel": [
        ""
    ],
    "logging.__init__.LoggerAdapter.setLevel": [
        "",
        "_Level"
    ],
    "logging.__init__.LoggerAdapter.hasHandlers": [
        ""
    ],
    "logging.__init__.LoggerAdapter._log": [
        "",
        "int",
        "object",
        "_ArgsType",
        "_ExcInfoType | None",
        "Mapping[str, object] | None",
        "bool"
    ],
    "logging.__init__.LoggerAdapter.name": [
        ""
    ],
    "logging.__init__.StreamHandler.__init__": [
        "StreamHandler[TextIO]",
        "None"
    ],
    "logging.__init__.StreamHandler.setStream": [
        "",
        "_StreamT"
    ],
    "logging.__init__.FileHandler._open": [
        ""
    ],
    "logging.__init__.PlaceHolder.__init__": [
        "",
        "Logger"
    ],
    "logging.__init__.PlaceHolder.append": [
        "",
        "Logger"
    ],
    "logging.__init__.RootLogger.__init__": [
        "",
        "int"
    ],
    "logging.__init__.PercentStyle.usesTime": [
        ""
    ],
    "logging.__init__.PercentStyle.format": [
        "",
        "Any"
    ],
    "logging.__init__.currentframe": [],
    "logging.__init__.getLogger": [
        "str | None"
    ],
    "logging.__init__.getLoggerClass": [],
    "logging.__init__.getLogRecordFactory": [],
    "logging.__init__.disable": [
        "int"
    ],
    "logging.__init__.addLevelName": [
        "int",
        "str"
    ],
    "logging.__init__.getLevelName": [
        "_Level"
    ],
    "logging.__init__.makeLogRecord": [
        "Mapping[str, object]"
    ],
    "logging.__init__.shutdown": [
        "Sequence[Any]"
    ],
    "logging.__init__.setLoggerClass": [
        "type[Logger]"
    ],
    "logging.__init__.captureWarnings": [
        "bool"
    ],
    "logging.__init__.setLogRecordFactory": [
        "Callable[..., LogRecord]"
    ],
    "logging.handlers.WatchedFileHandler._statstream": [
        ""
    ],
    "logging.handlers.WatchedFileHandler.reopenIfNeeded": [
        ""
    ],
    "logging.handlers.BaseRotatingHandler.rotation_filename": [
        "",
        "str"
    ],
    "logging.handlers.BaseRotatingHandler.rotate": [
        "",
        "str",
        "str"
    ],
    "logging.handlers.RotatingFileHandler.doRollover": [
        ""
    ],
    "logging.handlers.RotatingFileHandler.shouldRollover": [
        "",
        "LogRecord"
    ],
    "logging.handlers.TimedRotatingFileHandler.doRollover": [
        ""
    ],
    "logging.handlers.TimedRotatingFileHandler.shouldRollover": [
        "",
        "LogRecord"
    ],
    "logging.handlers.TimedRotatingFileHandler.computeRollover": [
        "",
        "int"
    ],
    "logging.handlers.TimedRotatingFileHandler.getFilesToDelete": [
        ""
    ],
    "logging.handlers.SocketHandler.__init__": [
        "",
        "str",
        "int | None"
    ],
    "logging.handlers.SocketHandler.makeSocket": [
        "",
        "float"
    ],
    "logging.handlers.SocketHandler.makePickle": [
        "",
        "LogRecord"
    ],
    "logging.handlers.SocketHandler.send": [
        "",
        "ReadableBuffer"
    ],
    "logging.handlers.SocketHandler.createSocket": [
        ""
    ],
    "logging.handlers.DatagramHandler.makeSocket": [
        ""
    ],
    "logging.handlers.SysLogHandler.__init__": [
        "",
        "tuple[str, int] | str",
        "str | int",
        "SocketKind | None"
    ],
    "logging.handlers.SysLogHandler.encodePriority": [
        "",
        "int | str",
        "int | str"
    ],
    "logging.handlers.SysLogHandler.mapPriority": [
        "",
        "str"
    ],
    "logging.handlers.NTEventLogHandler.__init__": [
        "",
        "str",
        "str | None",
        "str"
    ],
    "logging.handlers.NTEventLogHandler.getEventCategory": [
        "",
        "LogRecord"
    ],
    "logging.handlers.NTEventLogHandler.getEventType": [
        "",
        "LogRecord"
    ],
    "logging.handlers.NTEventLogHandler.getMessageID": [
        "",
        "LogRecord"
    ],
    "logging.handlers.SMTPHandler.__init__": [
        "",
        "str | tuple[str, int]",
        "str",
        "str | list[str]",
        "str",
        "tuple[str, str] | None",
        "tuple[()] | tuple[str] | tuple[str, str] | None",
        "float"
    ],
    "logging.handlers.SMTPHandler.getSubject": [
        "",
        "LogRecord"
    ],
    "logging.handlers.BufferingHandler.__init__": [
        "",
        "int"
    ],
    "logging.handlers.BufferingHandler.shouldFlush": [
        "",
        "LogRecord"
    ],
    "logging.handlers.MemoryHandler.__init__": [
        "",
        "int",
        "int",
        "Handler | None",
        "bool"
    ],
    "logging.handlers.MemoryHandler.setTarget": [
        "",
        "Handler | None"
    ],
    "logging.handlers.HTTPHandler.__init__": [
        "",
        "str",
        "str",
        "str",
        "bool",
        "tuple[str, str] | None",
        "ssl.SSLContext | None"
    ],
    "logging.handlers.HTTPHandler.mapLogRecord": [
        "",
        "LogRecord"
    ],
    "logging.handlers._QueueLike.get": [
        ""
    ],
    "logging.handlers._QueueLike.put_nowait": [
        "",
        "_T"
    ],
    "logging.handlers.QueueHandler.__init__": [
        "",
        "_QueueLike[Any]"
    ],
    "logging.handlers.QueueHandler.prepare": [
        "",
        "LogRecord"
    ],
    "logging.handlers.QueueHandler.enqueue": [
        "",
        "LogRecord"
    ],
    "logging.handlers.QueueListener.__init__": [
        "",
        "_QueueLike[Any]"
    ],
    "logging.handlers.QueueListener.dequeue": [
        "",
        "bool"
    ],
    "logging.handlers.QueueListener.prepare": [
        "",
        "LogRecord"
    ],
    "logging.handlers.QueueListener.start": [
        ""
    ],
    "logging.handlers.QueueListener.stop": [
        ""
    ],
    "logging.handlers.QueueListener.enqueue_sentinel": [
        ""
    ],
    "logging.handlers.QueueListener.handle": [
        "",
        "LogRecord"
    ],
    "logging.config.ConvertingMixin.convert_with_key": [
        "",
        "Any",
        "Any",
        "bool"
    ],
    "logging.config.ConvertingMixin.convert": [
        "",
        "Any"
    ],
    "logging.config.ConvertingDict.__getitem__": [
        "",
        "Hashable"
    ],
    "logging.config.ConvertingDict.get": [
        "",
        "Hashable",
        "Any"
    ],
    "logging.config.ConvertingDict.pop": [
        "",
        "Hashable",
        "Any"
    ],
    "logging.config.ConvertingList.__getitem__": [
        "",
        "SupportsIndex"
    ],
    "logging.config.ConvertingList.pop": [
        "",
        "SupportsIndex"
    ],
    "logging.config.ConvertingTuple.__getitem__": [
        "",
        "SupportsIndex"
    ],
    "logging.config.BaseConfigurator.__init__": [
        "",
        "_DictConfigArgs | dict[str, Any]"
    ],
    "logging.config.BaseConfigurator.resolve": [
        "",
        "str"
    ],
    "logging.config.BaseConfigurator.ext_convert": [
        "",
        "str"
    ],
    "logging.config.BaseConfigurator.cfg_convert": [
        "",
        "str"
    ],
    "logging.config.BaseConfigurator.convert": [
        "",
        "Any"
    ],
    "logging.config.BaseConfigurator.configure_custom": [
        "",
        "dict[str, Any]"
    ],
    "logging.config.BaseConfigurator.as_tuple": [
        "",
        "list[Any] | tuple[Any]"
    ],
    "logging.config.DictConfigurator.configure": [
        ""
    ],
    "logging.config.DictConfigurator.configure_formatter": [
        "",
        "_FormatterConfiguration"
    ],
    "logging.config.DictConfigurator.configure_filter": [
        "",
        "_FilterConfiguration"
    ],
    "logging.config.DictConfigurator.add_filters": [
        "",
        "Filterer",
        "Iterable[_FilterType]"
    ],
    "logging.config.DictConfigurator.configure_handler": [
        "",
        "_HandlerConfiguration"
    ],
    "logging.config.DictConfigurator.add_handlers": [
        "",
        "Logger",
        "Iterable[str]"
    ],
    "logging.config.DictConfigurator.common_logger_config": [
        "",
        "Logger",
        "_LoggerConfiguration",
        "bool"
    ],
    "logging.config.DictConfigurator.configure_logger": [
        "",
        "str",
        "_LoggerConfiguration",
        "bool"
    ],
    "logging.config.DictConfigurator.configure_root": [
        "",
        "_LoggerConfiguration",
        "bool"
    ],
    "logging.config.dictConfig": [
        "_DictConfigArgs | dict[str, Any]"
    ],
    "logging.config.valid_ident": [
        "str"
    ],
    "logging.config.listen": [
        "int",
        "Callable[[bytes], bytes | None] | None"
    ],
    "logging.config.stopListening": []
}