{
    "concurrent.futures.thread._WorkItem.__init__": [
        "",
        "Future[_S]",
        "Callable[..., _S]",
        "Iterable[Any]",
        "Mapping[str, Any]"
    ],
    "concurrent.futures.thread._WorkItem.run": [
        ""
    ],
    "concurrent.futures.thread.ThreadPoolExecutor.__init__": [
        "",
        "int | None",
        "str",
        "Callable[..., object] | None",
        "tuple[Any, ...]"
    ],
    "concurrent.futures.thread.ThreadPoolExecutor._adjust_thread_count": [
        ""
    ],
    "concurrent.futures.thread.ThreadPoolExecutor._initializer_failed": [
        ""
    ],
    "concurrent.futures.thread._python_exit": [],
    "concurrent.futures.thread._worker": [
        "ref[Any]",
        "queue.SimpleQueue[Any]",
        "Callable[..., object]",
        "tuple[Any, ...]"
    ],
    "concurrent.futures.process._ThreadWakeup.close": [
        ""
    ],
    "concurrent.futures.process._ThreadWakeup.wakeup": [
        ""
    ],
    "concurrent.futures.process._ThreadWakeup.clear": [
        ""
    ],
    "concurrent.futures.process._RemoteTraceback.__init__": [
        "",
        "TracebackType"
    ],
    "concurrent.futures.process._ExceptionWithTraceback.__init__": [
        "",
        "BaseException",
        "TracebackType"
    ],
    "concurrent.futures.process._ExceptionWithTraceback.__reduce__": [
        ""
    ],
    "concurrent.futures.process._WorkItem.__init__": [
        "",
        "Future[_T]",
        "Callable[..., _T]",
        "Iterable[Any]",
        "Mapping[str, Any]"
    ],
    "concurrent.futures.process._CallItem.__init__": [
        "",
        "int",
        "Callable[..., Any]",
        "Iterable[Any]",
        "Mapping[str, Any]"
    ],
    "concurrent.futures.process._SafeQueue._on_queue_feeder_error": [
        "",
        "Exception",
        "_CallItem"
    ],
    "concurrent.futures.process.ProcessPoolExecutor._adjust_process_count": [
        ""
    ],
    "concurrent.futures.process._python_exit": [],
    "concurrent.futures.process._rebuild_exc": [
        "Exception",
        "str"
    ],
    "concurrent.futures.process._get_chunks": [],
    "concurrent.futures.process._process_chunk": [
        "Callable[..., _T]",
        "Iterable[tuple[Any, ...]]"
    ],
    "concurrent.futures.process._check_system_limits": [],
    "concurrent.futures.process._chain_from_iterable_of_lists": [
        "Iterable[MutableSequence[Any]]"
    ],
    "concurrent.futures._base.Future.cancel": [
        ""
    ],
    "concurrent.futures._base.Future.cancelled": [
        ""
    ],
    "concurrent.futures._base.Future.running": [
        ""
    ],
    "concurrent.futures._base.Future.done": [
        ""
    ],
    "concurrent.futures._base.Future.add_done_callback": [
        "",
        "Callable[[Future[_T]], object]"
    ],
    "concurrent.futures._base.Future.result": [
        "",
        "float | None"
    ],
    "concurrent.futures._base.Future.set_running_or_notify_cancel": [
        ""
    ],
    "concurrent.futures._base.Future.set_result": [
        "",
        "_T"
    ],
    "concurrent.futures._base.Future.exception": [
        "",
        "float | None"
    ],
    "concurrent.futures._base.Future.set_exception": [
        "",
        "BaseException | None"
    ],
    "concurrent.futures._base.Executor.map": [
        "",
        "Callable[..., _T]"
    ],
    "concurrent.futures._base.Executor.__enter__": [
        ""
    ],
    "concurrent.futures._base.Executor.__exit__": [
        "",
        "type[BaseException] | None",
        "BaseException | None",
        "TracebackType | None"
    ],
    "concurrent.futures._base._Waiter.add_result": [
        "",
        "Future[Any]"
    ],
    "concurrent.futures._base._Waiter.add_exception": [
        "",
        "Future[Any]"
    ],
    "concurrent.futures._base._Waiter.add_cancelled": [
        "",
        "Future[Any]"
    ],
    "concurrent.futures._base._AllCompletedWaiter.__init__": [
        "",
        "int",
        "bool"
    ],
    "concurrent.futures._base._AcquireFutures.__init__": [
        "",
        "Iterable[Future[Any]]"
    ],
    "concurrent.futures._base._AcquireFutures.__enter__": [
        ""
    ],
    "concurrent.futures._base._AcquireFutures.__exit__": [
        ""
    ],
    "concurrent.futures._base.as_completed": [
        "Iterable[Future[_T]]",
        "float | None"
    ],
    "concurrent.futures._base.wait": [
        "Iterable[Future[_T]]",
        "float | None",
        "str"
    ],
    "concurrent.futures.__init__.__dir__": []
}