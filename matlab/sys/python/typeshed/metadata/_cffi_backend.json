{
    "_cffi_backend._Allocator.__call__": [
        "",
        "str | CType",
        "Any"
    ],
    "_cffi_backend.CLibrary.close_lib": [
        ""
    ],
    "_cffi_backend.CLibrary.load_function": [
        ""
    ],
    "_cffi_backend.CLibrary.read_variable": [
        ""
    ],
    "_cffi_backend.CLibrary.write_variable": [
        ""
    ],
    "_cffi_backend.CType.__dir__": [
        ""
    ],
    "_cffi_backend.Lib.__dir__": [
        ""
    ],
    "_cffi_backend._CDataBase.__add__": [
        "",
        ""
    ],
    "_cffi_backend._CDataBase.__bool__": [
        ""
    ],
    "_cffi_backend._CDataBase.__call__": [
        ""
    ],
    "_cffi_backend._CDataBase.__complex__": [
        ""
    ],
    "_cffi_backend._CDataBase.__delitem__": [
        "",
        ""
    ],
    "_cffi_backend._CDataBase.__dir__": [
        ""
    ],
    "_cffi_backend._CDataBase.__enter__": [
        ""
    ],
    "_cffi_backend._CDataBase.__eq__": [
        "",
        ""
    ],
    "_cffi_backend._CDataBase.__exit__": [
        "",
        "type[BaseException] | None",
        "BaseException | None",
        "types.TracebackType | None"
    ],
    "_cffi_backend._CDataBase.__float__": [
        ""
    ],
    "_cffi_backend._CDataBase.__ge__": [
        "",
        ""
    ],
    "_cffi_backend._CDataBase.__getitem__": [
        "",
        "SupportsIndex | slice"
    ],
    "_cffi_backend._CDataBase.__gt__": [
        "",
        ""
    ],
    "_cffi_backend._CDataBase.__hash__": [
        ""
    ],
    "_cffi_backend._CDataBase.__int__": [
        ""
    ],
    "_cffi_backend._CDataBase.__iter__": [
        ""
    ],
    "_cffi_backend._CDataBase.__le__": [
        "",
        ""
    ],
    "_cffi_backend._CDataBase.__len__": [
        ""
    ],
    "_cffi_backend._CDataBase.__lt__": [
        "",
        ""
    ],
    "_cffi_backend._CDataBase.__ne__": [
        "",
        ""
    ],
    "_cffi_backend._CDataBase.__radd__": [
        "",
        ""
    ],
    "_cffi_backend._CDataBase.__rsub__": [
        "",
        ""
    ],
    "_cffi_backend._CDataBase.__setitem__": [
        "",
        "SupportsIndex | slice",
        "Incomplete"
    ],
    "_cffi_backend._CDataBase.__sub__": [
        "",
        ""
    ],
    "_cffi_backend.buffer.__init__": [
        ""
    ],
    "_cffi_backend.buffer.__delitem__": [
        "",
        ""
    ],
    "_cffi_backend.buffer.__eq__": [
        "",
        ""
    ],
    "_cffi_backend.buffer.__ge__": [
        "",
        ""
    ],
    "_cffi_backend.buffer.__getitem__": [
        "",
        ""
    ],
    "_cffi_backend.buffer.__gt__": [
        "",
        ""
    ],
    "_cffi_backend.buffer.__le__": [
        "",
        ""
    ],
    "_cffi_backend.buffer.__len__": [
        ""
    ],
    "_cffi_backend.buffer.__lt__": [
        "",
        ""
    ],
    "_cffi_backend.buffer.__ne__": [
        "",
        ""
    ],
    "_cffi_backend.buffer.__setitem__": [
        "",
        "",
        ""
    ],
    "_cffi_backend.FFI.__init__": [
        "",
        "str",
        "int",
        "str",
        "tuple[str | int, ...]",
        "tuple[tuple[str, ...], ...]",
        "tuple[str, ...]",
        "tuple[str, ...]",
        "tuple[FFI, ...]"
    ],
    "_cffi_backend.FFI.addressof": [
        "",
        "CData"
    ],
    "_cffi_backend.FFI.alignof": [
        "",
        "str | CType | CData"
    ],
    "_cffi_backend.FFI.callback": [
        "",
        "str | CType",
        "None",
        "Any",
        "Callable[[Exception, Any, Any], None] | None"
    ],
    "_cffi_backend.FFI.cast": [
        "",
        "str | CType",
        "CData"
    ],
    "_cffi_backend.FFI.def_extern": [
        "",
        "str",
        "Any",
        "Callable[[Exception, Any, types.TracebackType], Any]"
    ],
    "_cffi_backend.FFI.dlclose": [
        "",
        "Lib"
    ],
    "_cffi_backend.FFI.from_buffer": [
        "",
        "ReadableBuffer",
        "Literal[False]"
    ],
    "_cffi_backend.FFI.from_handle": [
        "",
        "CData"
    ],
    "_cffi_backend.FFI.gc": [
        "",
        "CData",
        "Callable[[CData], Any]",
        "int"
    ],
    "_cffi_backend.FFI.getctype": [
        "",
        "str | CType",
        "str"
    ],
    "_cffi_backend.FFI.init_once": [
        "",
        "Callable[[], Any]",
        "Hashable"
    ],
    "_cffi_backend.FFI.integer_const": [
        "",
        "str"
    ],
    "_cffi_backend.FFI.list_types": [
        ""
    ],
    "_cffi_backend.FFI.memmove": [
        "",
        "CData | WriteableBuffer",
        "CData | ReadableBuffer",
        "int"
    ],
    "_cffi_backend.FFI.new": [
        "",
        "str | CType",
        "Any"
    ],
    "_cffi_backend.FFI.new_allocator": [
        "",
        "None",
        "None",
        "bool"
    ],
    "_cffi_backend.FFI.new_handle": [
        "",
        "Any"
    ],
    "_cffi_backend.FFI.offsetof": [
        "",
        "str | CType",
        "str | int"
    ],
    "_cffi_backend.FFI.release": [
        "",
        "CData"
    ],
    "_cffi_backend.FFI.sizeof": [
        "",
        "str | CType | CData"
    ],
    "_cffi_backend.FFI.string": [
        "",
        "CData",
        "int"
    ],
    "_cffi_backend.FFI.typeof": [
        "",
        "str | CData"
    ],
    "_cffi_backend.FFI.unpack": [
        "",
        "CData",
        "int"
    ],
    "_cffi_backend.alignof": [
        "CType"
    ],
    "_cffi_backend.callback": [
        "CType",
        "Callable[..., _T]",
        "Any",
        "Callable[[Exception, Any, Any], None] | None"
    ],
    "_cffi_backend.cast": [
        "CType",
        "_CDataBase"
    ],
    "_cffi_backend.complete_struct_or_union": [
        "CType",
        "list[tuple[str, CType, int, int]]",
        "Any",
        "int",
        "int",
        "int",
        "int"
    ],
    "_cffi_backend.from_buffer": [
        "CType",
        "ReadableBuffer",
        "Literal[False]"
    ],
    "_cffi_backend.from_handle": [
        "_CDataBase"
    ],
    "_cffi_backend.gcp": [
        "_CDataBase",
        "Callable[[_CDataBase], Any]",
        "int"
    ],
    "_cffi_backend.get_errno": [],
    "_cffi_backend.getcname": [
        "CType",
        "str"
    ],
    "_cffi_backend.memmove": [
        "_CDataBase | WriteableBuffer",
        "_CDataBase | ReadableBuffer",
        "int"
    ],
    "_cffi_backend.new_array_type": [
        "CType",
        "int | None"
    ],
    "_cffi_backend.new_enum_type": [
        "str",
        "tuple[str, ...]",
        "tuple[Any, ...]",
        "CType"
    ],
    "_cffi_backend.new_function_type": [
        "tuple[CType, ...]",
        "CType",
        "int",
        "int"
    ],
    "_cffi_backend.new_pointer_type": [
        "CType"
    ],
    "_cffi_backend.new_primitive_type": [
        "str"
    ],
    "_cffi_backend.new_struct_type": [
        "str"
    ],
    "_cffi_backend.new_union_type": [
        "str"
    ],
    "_cffi_backend.new_void_type": [],
    "_cffi_backend.newp": [
        "CType",
        "Any"
    ],
    "_cffi_backend.newp_handle": [
        "CType",
        "Any"
    ],
    "_cffi_backend.rawaddressof": [
        "CType",
        "_CDataBase",
        "int"
    ],
    "_cffi_backend.release": [
        "_CDataBase"
    ],
    "_cffi_backend.set_errno": [
        "int"
    ],
    "_cffi_backend.sizeof": [
        "CType | _CDataBase"
    ],
    "_cffi_backend.string": [
        "_CDataBase",
        "int"
    ],
    "_cffi_backend.typeof": [
        "_CDataBase"
    ],
    "_cffi_backend.typeoffsetof": [
        "CType",
        "str | int",
        "bool"
    ],
    "_cffi_backend.unpack": [
        "_CDataBase",
        "int"
    ]
}