{
    "redis.retry.Retry.__init__": [
        "",
        "AbstractBackoff",
        "int",
        "tuple[type[Exception], ...]"
    ],
    "redis.retry.Retry.update_supported_errors": [
        "",
        "Iterable[type[Exception]]"
    ],
    "redis.retry.Retry.call_with_retry": [
        "",
        "Callable[[], _T]",
        "Callable[[Exception], object]"
    ],
    "redis.lock.Lock.__init__": [
        "",
        "Redis[Any]",
        "str",
        "float | None",
        "float",
        "bool",
        "float | None",
        "bool"
    ],
    "redis.lock.Lock.register_scripts": [
        ""
    ],
    "redis.lock.Lock.__enter__": [
        ""
    ],
    "redis.lock.Lock.__exit__": [
        "",
        "type[BaseException] | None",
        "BaseException | None",
        "TracebackType | None"
    ],
    "redis.lock.Lock.acquire": [
        "",
        "float | None",
        "bool | None",
        "float | None",
        "str | bytes | None"
    ],
    "redis.lock.Lock.do_acquire": [
        "",
        "str | bytes"
    ],
    "redis.lock.Lock.locked": [
        ""
    ],
    "redis.lock.Lock.owned": [
        ""
    ],
    "redis.lock.Lock.release": [
        ""
    ],
    "redis.lock.Lock.do_release": [
        "",
        "str | bytes"
    ],
    "redis.lock.Lock.extend": [
        "",
        "float",
        "bool"
    ],
    "redis.lock.Lock.do_extend": [
        "",
        "float",
        "bool"
    ],
    "redis.lock.Lock.reacquire": [
        ""
    ],
    "redis.lock.Lock.do_reacquire": [
        ""
    ],
    "redis.utils.from_url": [
        "str"
    ],
    "redis.utils.pipeline": [
        "Redis[_StrType]"
    ],
    "redis.utils.str_if_bytes": [
        "str | bytes"
    ],
    "redis.utils.safe_str": [
        "object"
    ],
    "redis.utils.dict_merge": [],
    "redis.utils.list_keys_to_dict": [
        "",
        ""
    ],
    "redis.utils.merge_result": [
        "Unused",
        "Mapping[Any, Iterable[_T]]"
    ],
    "redis.typing.CommandsProtocol.execute_command": [
        ""
    ],
    "redis.asyncio.utils.pipeline.__init__": [
        "",
        "Redis[_StrType]"
    ],
    "redis.asyncio.utils.from_url": [
        "str"
    ],
    "redis.asyncio.sentinel.SentinelManagedConnection.__init__": [
        ""
    ],
    "redis.asyncio.sentinel.SentinelConnectionPool.__init__": [
        "",
        "",
        ""
    ],
    "redis.asyncio.sentinel.SentinelConnectionPool.reset": [
        ""
    ],
    "redis.asyncio.sentinel.SentinelConnectionPool.owns_connection": [
        "",
        "Connection"
    ],
    "redis.asyncio.sentinel.Sentinel.__init__": [
        "",
        "",
        "int",
        "Incomplete | None"
    ],
    "redis.asyncio.sentinel.Sentinel.check_master_state": [
        "",
        "dict[Any, Any]",
        "str"
    ],
    "redis.asyncio.sentinel.Sentinel.filter_slaves": [
        "",
        "Iterable[Mapping[Any, Any]]"
    ],
    "redis.asyncio.sentinel.Sentinel.master_for": [
        "",
        "str",
        "type[Redis[Any]]",
        "type[SentinelConnectionPool]"
    ],
    "redis.asyncio.sentinel.Sentinel.slave_for": [
        "",
        "str",
        "type[Redis[Any]]",
        "type[SentinelConnectionPool]"
    ],
    "redis.asyncio.retry.Retry.__init__": [
        "",
        "AbstractBackoff",
        "int",
        "tuple[type[RedisError], ...]"
    ],
    "redis.asyncio.retry.Retry.update_supported_errors": [
        "",
        "Iterable[type[RedisError]]"
    ],
    "redis.asyncio.client.ResponseCallbackProtocol.__call__": [
        "",
        "Any"
    ],
    "redis.asyncio.client.Redis.from_url": [
        "",
        "str"
    ],
    "redis.asyncio.client.Redis.__init__": [
        ""
    ],
    "redis.asyncio.client.Redis.__await__": [
        ""
    ],
    "redis.asyncio.client.Redis.set_response_callback": [
        "",
        "str",
        "ResponseCallbackT"
    ],
    "redis.asyncio.client.Redis.load_external_module": [
        "",
        "",
        ""
    ],
    "redis.asyncio.client.Redis.pipeline": [
        "",
        "bool",
        "str | None"
    ],
    "redis.asyncio.client.Redis.lock": [
        "",
        "KeyT",
        "float | None",
        "float",
        "bool",
        "float | None",
        "type[Lock] | None",
        "bool"
    ],
    "redis.asyncio.client.Redis.pubsub": [
        ""
    ],
    "redis.asyncio.client.Redis.monitor": [
        ""
    ],
    "redis.asyncio.client.Redis.client": [
        ""
    ],
    "redis.asyncio.client.Redis.__del__": [
        "",
        "Any"
    ],
    "redis.asyncio.client.Monitor.__init__": [
        "",
        "ConnectionPool"
    ],
    "redis.asyncio.client.Monitor.listen": [
        ""
    ],
    "redis.asyncio.client.PubSub.__init__": [
        "",
        "ConnectionPool",
        "str | None",
        "bool",
        "Incomplete | None"
    ],
    "redis.asyncio.client.PubSub.__del__": [
        ""
    ],
    "redis.asyncio.client.PubSub.close": [
        ""
    ],
    "redis.asyncio.client.PubSub.subscribed": [
        ""
    ],
    "redis.asyncio.client.PubSub.punsubscribe": [
        ""
    ],
    "redis.asyncio.client.PubSub.unsubscribe": [
        ""
    ],
    "redis.asyncio.client.PubSub.listen": [
        ""
    ],
    "redis.asyncio.client.PubSub.ping": [
        "",
        "Incomplete | None"
    ],
    "redis.asyncio.client.PubsubWorkerExceptionHandler.__call__": [
        "",
        "BaseException",
        "PubSub"
    ],
    "redis.asyncio.client.Pipeline.__init__": [
        "",
        "ConnectionPool",
        "MutableMapping[str | bytes, ResponseCallbackT]",
        "bool",
        "str | None"
    ],
    "redis.asyncio.client.Pipeline.__await__": [
        ""
    ],
    "redis.asyncio.client.Pipeline.__len__": [
        ""
    ],
    "redis.asyncio.client.Pipeline.__bool__": [
        ""
    ],
    "redis.asyncio.client.Pipeline.multi": [
        ""
    ],
    "redis.asyncio.client.Pipeline.execute_command": [
        ""
    ],
    "redis.asyncio.client.Pipeline.pipeline_execute_command": [
        ""
    ],
    "redis.asyncio.client.Pipeline.raise_first_error": [
        "",
        "CommandStackT",
        "Iterable[Any]"
    ],
    "redis.asyncio.client.Pipeline.annotate_exception": [
        "",
        "Exception",
        "int",
        "Iterable[object]"
    ],
    "redis.asyncio.client.Pipeline.acl_cat": [
        "",
        "str | None"
    ],
    "redis.asyncio.client.Pipeline.acl_deluser": [
        ""
    ],
    "redis.asyncio.client.Pipeline.acl_genpass": [
        "",
        "int | None"
    ],
    "redis.asyncio.client.Pipeline.acl_getuser": [
        "",
        "str"
    ],
    "redis.asyncio.client.Pipeline.acl_help": [
        ""
    ],
    "redis.asyncio.client.Pipeline.acl_list": [
        ""
    ],
    "redis.asyncio.client.Pipeline.acl_log": [
        "",
        "int | None"
    ],
    "redis.asyncio.client.Pipeline.acl_log_reset": [
        ""
    ],
    "redis.asyncio.client.Pipeline.acl_load": [
        ""
    ],
    "redis.asyncio.client.Pipeline.acl_save": [
        ""
    ],
    "redis.asyncio.client.Pipeline.acl_setuser": [
        "",
        "str",
        "bool",
        "bool",
        "Sequence[str] | None",
        "Sequence[str] | None",
        "Sequence[str] | None",
        "Sequence[str] | None",
        "Sequence[str] | None",
        "Iterable[ChannelT] | None",
        "Iterable[tuple[str, KeyT]] | None",
        "bool",
        "bool",
        "bool",
        "bool"
    ],
    "redis.asyncio.client.Pipeline.acl_users": [
        ""
    ],
    "redis.asyncio.client.Pipeline.acl_whoami": [
        ""
    ],
    "redis.asyncio.client.Pipeline.cluster": [
        "",
        "str"
    ],
    "redis.asyncio.client.Pipeline.readwrite": [
        ""
    ],
    "redis.asyncio.client.Pipeline.readonly": [
        ""
    ],
    "redis.asyncio.client.Pipeline.append": [
        "",
        "",
        ""
    ],
    "redis.asyncio.client.Pipeline.bitcount": [
        "",
        "_Key",
        "int | None",
        "int | None",
        "str | None"
    ],
    "redis.asyncio.client.Pipeline.bitfield": [
        "",
        "",
        "Incomplete | None"
    ],
    "redis.asyncio.client.Pipeline.bitop": [
        "",
        "",
        ""
    ],
    "redis.asyncio.client.Pipeline.bitpos": [
        "",
        "_Key",
        "int",
        "int | None",
        "int | None",
        "str | None"
    ],
    "redis.asyncio.client.Pipeline.copy": [
        "",
        "",
        "",
        "Incomplete | None",
        "bool"
    ],
    "redis.asyncio.client.Pipeline.decr": [
        "",
        "",
        "int"
    ],
    "redis.asyncio.client.Pipeline.decrby": [
        "",
        "",
        "int"
    ],
    "redis.asyncio.client.Pipeline.delete": [
        ""
    ],
    "redis.asyncio.client.Pipeline.dump": [
        "",
        "_Key"
    ],
    "redis.asyncio.client.Pipeline.exists": [
        ""
    ],
    "redis.asyncio.client.Pipeline.expire": [
        "",
        "_Key",
        "int | timedelta",
        "bool",
        "bool",
        "bool",
        "bool"
    ],
    "redis.asyncio.client.Pipeline.expireat": [
        "",
        "",
        "",
        "bool",
        "bool",
        "bool",
        "bool"
    ],
    "redis.asyncio.client.Pipeline.get": [
        "",
        "_Key"
    ],
    "redis.asyncio.client.Pipeline.getdel": [
        "",
        "_Key"
    ],
    "redis.asyncio.client.Pipeline.getex": [
        "",
        "",
        "Incomplete | None",
        "Incomplete | None",
        "Incomplete | None",
        "Incomplete | None",
        "bool"
    ],
    "redis.asyncio.client.Pipeline.getbit": [
        "",
        "_Key",
        "int"
    ],
    "redis.asyncio.client.Pipeline.getrange": [
        "",
        "",
        "",
        ""
    ],
    "redis.asyncio.client.Pipeline.getset": [
        "",
        "",
        ""
    ],
    "redis.asyncio.client.Pipeline.incr": [
        "",
        "_Key",
        "int"
    ],
    "redis.asyncio.client.Pipeline.incrby": [
        "",
        "_Key",
        "int"
    ],
    "redis.asyncio.client.Pipeline.incrbyfloat": [
        "",
        "_Key",
        "float"
    ],
    "redis.asyncio.client.Pipeline.keys": [
        "",
        "_Key"
    ],
    "redis.asyncio.client.Pipeline.lmove": [
        "",
        "_Key",
        "_Key",
        "Literal[\"LEFT\", \"RIGHT\"]",
        "Literal[\"LEFT\", \"RIGHT\"]"
    ],
    "redis.asyncio.client.Pipeline.blmove": [
        "",
        "_Key",
        "_Key",
        "float",
        "Literal[\"LEFT\", \"RIGHT\"]",
        "Literal[\"LEFT\", \"RIGHT\"]"
    ],
    "redis.asyncio.client.Pipeline.mget": [
        "",
        "_Key | Iterable[_Key]"
    ],
    "redis.asyncio.client.Pipeline.mset": [
        "",
        "Mapping[_Key, _Value]"
    ],
    "redis.asyncio.client.Pipeline.msetnx": [
        "",
        "Mapping[_Key, _Value]"
    ],
    "redis.asyncio.client.Pipeline.move": [
        "",
        "_Key",
        "int"
    ],
    "redis.asyncio.client.Pipeline.persist": [
        "",
        "_Key"
    ],
    "redis.asyncio.client.Pipeline.pexpire": [
        "",
        "_Key",
        "int | timedelta",
        "bool",
        "bool",
        "bool",
        "bool"
    ],
    "redis.asyncio.client.Pipeline.pexpireat": [
        "",
        "_Key",
        "int | datetime",
        "bool",
        "bool",
        "bool",
        "bool"
    ],
    "redis.asyncio.client.Pipeline.psetex": [
        "",
        "",
        "",
        ""
    ],
    "redis.asyncio.client.Pipeline.pttl": [
        "",
        "_Key"
    ],
    "redis.asyncio.client.Pipeline.hrandfield": [
        "",
        "",
        "Incomplete | None",
        "bool"
    ],
    "redis.asyncio.client.Pipeline.randomkey": [
        ""
    ],
    "redis.asyncio.client.Pipeline.rename": [
        "",
        "",
        ""
    ],
    "redis.asyncio.client.Pipeline.renamenx": [
        "",
        "",
        ""
    ],
    "redis.asyncio.client.Pipeline.restore": [
        "",
        "",
        "",
        "",
        "bool",
        "bool",
        "Incomplete | None",
        "Incomplete | None"
    ],
    "redis.asyncio.client.Pipeline.set": [
        "",
        "_Key",
        "_Value",
        "None | int | timedelta",
        "None | int | timedelta",
        "bool",
        "bool",
        "bool",
        "bool",
        "Incomplete | None",
        "Incomplete | None"
    ],
    "redis.asyncio.client.Pipeline.setbit": [
        "",
        "_Key",
        "int",
        "int"
    ],
    "redis.asyncio.client.Pipeline.setex": [
        "",
        "_Key",
        "int | timedelta",
        "_Value"
    ],
    "redis.asyncio.client.Pipeline.setnx": [
        "",
        "_Key",
        "_Value"
    ],
    "redis.asyncio.client.Pipeline.setrange": [
        "",
        "",
        "",
        ""
    ],
    "redis.asyncio.client.Pipeline.stralgo": [
        "",
        "",
        "",
        "",
        "str",
        "bool",
        "bool",
        "Incomplete | None",
        "bool"
    ],
    "redis.asyncio.client.Pipeline.strlen": [
        "",
        ""
    ],
    "redis.asyncio.client.Pipeline.substr": [
        "",
        "",
        "",
        "int"
    ],
    "redis.asyncio.client.Pipeline.touch": [
        ""
    ],
    "redis.asyncio.client.Pipeline.ttl": [
        "",
        "_Key"
    ],
    "redis.asyncio.client.Pipeline.type": [
        "",
        ""
    ],
    "redis.asyncio.client.Pipeline.unlink": [
        ""
    ],
    "redis.asyncio.client.Pipeline.pfadd": [
        "",
        "_Key"
    ],
    "redis.asyncio.client.Pipeline.pfcount": [
        "",
        "_Key"
    ],
    "redis.asyncio.client.Pipeline.pfmerge": [
        "",
        "_Key"
    ],
    "redis.asyncio.client.Pipeline.hdel": [
        "",
        "_Key"
    ],
    "redis.asyncio.client.Pipeline.hexists": [
        "",
        "_Key",
        "_Key"
    ],
    "redis.asyncio.client.Pipeline.hget": [
        "",
        "_Key",
        "_Key"
    ],
    "redis.asyncio.client.Pipeline.hgetall": [
        "",
        "_Key"
    ],
    "redis.asyncio.client.Pipeline.hincrby": [
        "",
        "_Key",
        "_Key",
        "int"
    ],
    "redis.asyncio.client.Pipeline.hincrbyfloat": [
        "",
        "_Key",
        "_Key",
        "float"
    ],
    "redis.asyncio.client.Pipeline.hkeys": [
        "",
        "_Key"
    ],
    "redis.asyncio.client.Pipeline.hlen": [
        "",
        "_Key"
    ],
    "redis.asyncio.client.Pipeline.hset": [
        "",
        "_Key",
        "_Key",
        "_Value",
        "Mapping[_Key, _Value] | None",
        "Incomplete | None"
    ],
    "redis.asyncio.client.Pipeline.hsetnx": [
        "",
        "_Key",
        "_Key",
        "_Value"
    ],
    "redis.asyncio.client.Pipeline.hmset": [
        "",
        "_Key",
        "Mapping[_Key, _Value]"
    ],
    "redis.asyncio.client.Pipeline.hmget": [
        "",
        "_Key",
        "_Key | Iterable[_Key]"
    ],
    "redis.asyncio.client.Pipeline.hvals": [
        "",
        "_Key"
    ],
    "redis.asyncio.client.Pipeline.hstrlen": [
        "",
        "",
        ""
    ],
    "redis.asyncio.client.Pipeline.geoadd": [
        "",
        "",
        "",
        "bool",
        "bool",
        "bool"
    ],
    "redis.asyncio.client.Pipeline.geodist": [
        "",
        "",
        "",
        "",
        "Incomplete | None"
    ],
    "redis.asyncio.client.Pipeline.geohash": [
        "",
        ""
    ],
    "redis.asyncio.client.Pipeline.geopos": [
        "",
        ""
    ],
    "redis.asyncio.client.Pipeline.georadius": [
        "",
        "",
        "",
        "",
        "",
        "Incomplete | None",
        "bool",
        "bool",
        "bool",
        "Incomplete | None",
        "Incomplete | None",
        "Incomplete | None",
        "Incomplete | None",
        "bool"
    ],
    "redis.asyncio.client.Pipeline.georadiusbymember": [
        "",
        "",
        "",
        "",
        "Incomplete | None",
        "bool",
        "bool",
        "bool",
        "Incomplete | None",
        "Incomplete | None",
        "Incomplete | None",
        "Incomplete | None",
        "bool"
    ],
    "redis.asyncio.client.Pipeline.geosearch": [
        "",
        "",
        "Incomplete | None",
        "Incomplete | None",
        "Incomplete | None",
        "str",
        "Incomplete | None",
        "Incomplete | None",
        "Incomplete | None",
        "Incomplete | None",
        "Incomplete | None",
        "bool",
        "bool",
        "bool",
        "bool"
    ],
    "redis.asyncio.client.Pipeline.geosearchstore": [
        "",
        "",
        "",
        "Incomplete | None",
        "Incomplete | None",
        "Incomplete | None",
        "str",
        "Incomplete | None",
        "Incomplete | None",
        "Incomplete | None",
        "Incomplete | None",
        "Incomplete | None",
        "bool",
        "bool"
    ],
    "redis.asyncio.client.Pipeline.blpop": [
        "",
        "_Value | Iterable[_Value]",
        "Literal[0] | None"
    ],
    "redis.asyncio.client.Pipeline.brpop": [
        "",
        "_Value | Iterable[_Value]",
        "Literal[0] | None"
    ],
    "redis.asyncio.client.Pipeline.brpoplpush": [
        "",
        "",
        "",
        "int | None"
    ],
    "redis.asyncio.client.Pipeline.lindex": [
        "",
        "_Key",
        "int"
    ],
    "redis.asyncio.client.Pipeline.linsert": [
        "",
        "_Key",
        "Literal[\"BEFORE\", \"AFTER\", \"before\", \"after\"]",
        "_Value",
        "_Value"
    ],
    "redis.asyncio.client.Pipeline.llen": [
        "",
        "_Key"
    ],
    "redis.asyncio.client.Pipeline.lpop": [
        "",
        "",
        "int | None"
    ],
    "redis.asyncio.client.Pipeline.lpush": [
        "",
        "_Value"
    ],
    "redis.asyncio.client.Pipeline.lpushx": [
        "",
        "",
        ""
    ],
    "redis.asyncio.client.Pipeline.lrange": [
        "",
        "_Key",
        "int",
        "int"
    ],
    "redis.asyncio.client.Pipeline.lrem": [
        "",
        "_Key",
        "int",
        "_Value"
    ],
    "redis.asyncio.client.Pipeline.lset": [
        "",
        "_Key",
        "int",
        "_Value"
    ],
    "redis.asyncio.client.Pipeline.ltrim": [
        "",
        "_Key",
        "int",
        "int"
    ],
    "redis.asyncio.client.Pipeline.rpop": [
        "",
        "",
        "int | None"
    ],
    "redis.asyncio.client.Pipeline.rpoplpush": [
        "",
        "",
        ""
    ],
    "redis.asyncio.client.Pipeline.rpush": [
        "",
        "_Value"
    ],
    "redis.asyncio.client.Pipeline.rpushx": [
        "",
        "",
        ""
    ],
    "redis.asyncio.client.Pipeline.lpos": [
        "",
        "",
        "",
        "Incomplete | None",
        "Incomplete | None",
        "Incomplete | None"
    ],
    "redis.asyncio.client.Pipeline.sort": [
        "",
        "_Key",
        "int | None",
        "int | None",
        "_Key | None",
        "_Key | Sequence[_Key] | None",
        "bool",
        "bool",
        "None",
        "bool"
    ],
    "redis.asyncio.client.Pipeline.scan": [
        "",
        "int",
        "_Key | None",
        "int | None",
        "str | None"
    ],
    "redis.asyncio.client.Pipeline.sscan": [
        "",
        "_Key",
        "int",
        "_Key | None",
        "int | None"
    ],
    "redis.asyncio.client.Pipeline.hscan": [
        "",
        "_Key",
        "int",
        "_Key | None",
        "int | None"
    ],
    "redis.asyncio.client.Pipeline.zscan": [
        "",
        "_Key",
        "int",
        "_Key | None",
        "int | None"
    ],
    "redis.asyncio.client.Pipeline.sadd": [
        "",
        "_Key"
    ],
    "redis.asyncio.client.Pipeline.scard": [
        "",
        "_Key"
    ],
    "redis.asyncio.client.Pipeline.sdiff": [
        "",
        "_Key | Iterable[_Key]"
    ],
    "redis.asyncio.client.Pipeline.sdiffstore": [
        "",
        "_Key",
        "_Key | Iterable[_Key]"
    ],
    "redis.asyncio.client.Pipeline.sinter": [
        "",
        "_Key | Iterable[_Key]"
    ],
    "redis.asyncio.client.Pipeline.sinterstore": [
        "",
        "_Key",
        "_Key | Iterable[_Key]"
    ],
    "redis.asyncio.client.Pipeline.sismember": [
        "",
        "_Key",
        "_Value"
    ],
    "redis.asyncio.client.Pipeline.smembers": [
        "",
        "_Key"
    ],
    "redis.asyncio.client.Pipeline.smismember": [
        "",
        "",
        ""
    ],
    "redis.asyncio.client.Pipeline.smove": [
        "",
        "_Key",
        "_Key",
        "_Value"
    ],
    "redis.asyncio.client.Pipeline.spop": [
        "",
        "_Key",
        "None"
    ],
    "redis.asyncio.client.Pipeline.srandmember": [
        "",
        "_Key",
        "None"
    ],
    "redis.asyncio.client.Pipeline.srem": [
        "",
        "_Key"
    ],
    "redis.asyncio.client.Pipeline.sunion": [
        "",
        "_Key | Iterable[_Key]"
    ],
    "redis.asyncio.client.Pipeline.sunionstore": [
        "",
        "_Key",
        "_Key | Iterable[_Key]"
    ],
    "redis.asyncio.client.Pipeline.xack": [
        "",
        "",
        ""
    ],
    "redis.asyncio.client.Pipeline.xadd": [
        "",
        "",
        "",
        "str | int | bytes | memoryview",
        "",
        "bool",
        "bool",
        "Incomplete | None",
        "Incomplete | None"
    ],
    "redis.asyncio.client.Pipeline.xautoclaim": [
        "",
        "",
        "",
        "",
        "",
        "StreamIdT",
        "Incomplete | None",
        "bool"
    ],
    "redis.asyncio.client.Pipeline.xclaim": [
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        ""
    ],
    "redis.asyncio.client.Pipeline.xdel": [
        "",
        ""
    ],
    "redis.asyncio.client.Pipeline.xgroup_create": [
        "",
        "",
        "",
        "str",
        "bool",
        "int | None"
    ],
    "redis.asyncio.client.Pipeline.xgroup_delconsumer": [
        "",
        "",
        "",
        ""
    ],
    "redis.asyncio.client.Pipeline.xgroup_destroy": [
        "",
        "",
        ""
    ],
    "redis.asyncio.client.Pipeline.xgroup_createconsumer": [
        "",
        "",
        "",
        ""
    ],
    "redis.asyncio.client.Pipeline.xgroup_setid": [
        "",
        "",
        "",
        "",
        "int | None"
    ],
    "redis.asyncio.client.Pipeline.xinfo_consumers": [
        "",
        "",
        ""
    ],
    "redis.asyncio.client.Pipeline.xinfo_groups": [
        "",
        ""
    ],
    "redis.asyncio.client.Pipeline.xinfo_stream": [
        "",
        "",
        "bool"
    ],
    "redis.asyncio.client.Pipeline.xlen": [
        "",
        "_Key"
    ],
    "redis.asyncio.client.Pipeline.xpending": [
        "",
        "",
        ""
    ],
    "redis.asyncio.client.Pipeline.xpending_range": [
        "",
        "_Key",
        "",
        "",
        "",
        "int",
        "Incomplete | None",
        "int | None"
    ],
    "redis.asyncio.client.Pipeline.xrange": [
        "",
        "",
        "str",
        "str",
        "Incomplete | None"
    ],
    "redis.asyncio.client.Pipeline.xread": [
        "",
        "",
        "Incomplete | None",
        "Incomplete | None"
    ],
    "redis.asyncio.client.Pipeline.xreadgroup": [
        "",
        "",
        "",
        "",
        "Incomplete | None",
        "Incomplete | None",
        "bool"
    ],
    "redis.asyncio.client.Pipeline.xrevrange": [
        "",
        "",
        "str",
        "str",
        "Incomplete | None"
    ],
    "redis.asyncio.client.Pipeline.xtrim": [
        "",
        "",
        "int | None",
        "bool",
        "Incomplete | None",
        "int | None"
    ],
    "redis.asyncio.client.Pipeline.zadd": [
        "",
        "_Key",
        "Mapping[_Key, _Value]",
        "bool",
        "bool",
        "bool",
        "bool",
        "Incomplete | None",
        "Incomplete | None"
    ],
    "redis.asyncio.client.Pipeline.zcard": [
        "",
        "_Key"
    ],
    "redis.asyncio.client.Pipeline.zcount": [
        "",
        "_Key",
        "_Value",
        "_Value"
    ],
    "redis.asyncio.client.Pipeline.zdiff": [
        "",
        "",
        "bool"
    ],
    "redis.asyncio.client.Pipeline.zdiffstore": [
        "",
        "",
        ""
    ],
    "redis.asyncio.client.Pipeline.zincrby": [
        "",
        "_Key",
        "float",
        "_Value"
    ],
    "redis.asyncio.client.Pipeline.zinter": [
        "",
        "",
        "Incomplete | None",
        "bool"
    ],
    "redis.asyncio.client.Pipeline.zinterstore": [
        "",
        "_Key",
        "Iterable[_Key]",
        "Literal[\"SUM\", \"MIN\", \"MAX\"] | None"
    ],
    "redis.asyncio.client.Pipeline.zlexcount": [
        "",
        "_Key",
        "_Value",
        "_Value"
    ],
    "redis.asyncio.client.Pipeline.zpopmax": [
        "",
        "_Key",
        "int | None"
    ],
    "redis.asyncio.client.Pipeline.zpopmin": [
        "",
        "_Key",
        "int | None"
    ],
    "redis.asyncio.client.Pipeline.zrandmember": [
        "",
        "",
        "Incomplete | None",
        "bool"
    ],
    "redis.asyncio.client.Pipeline.bzpopmax": [
        "",
        "_Key | Iterable[_Key]",
        "Literal[0]"
    ],
    "redis.asyncio.client.Pipeline.bzpopmin": [
        "",
        "_Key | Iterable[_Key]",
        "Literal[0]"
    ],
    "redis.asyncio.client.Pipeline.zrange": [
        "",
        "_Key",
        "int",
        "int",
        "bool",
        "Literal[True]",
        "Callable[[_StrType], Any]",
        "bool",
        "bool",
        "int | None",
        "int | None"
    ],
    "redis.asyncio.client.Pipeline.zrevrange": [
        "",
        "_Key",
        "int",
        "int",
        "Literal[True]",
        "Callable[[_StrType], None]"
    ],
    "redis.asyncio.client.Pipeline.zrangestore": [
        "",
        "",
        "",
        "",
        "",
        "bool",
        "bool",
        "bool",
        "Incomplete | None",
        "Incomplete | None"
    ],
    "redis.asyncio.client.Pipeline.zrangebylex": [
        "",
        "_Key",
        "_Value",
        "_Value",
        "int | None",
        "int | None"
    ],
    "redis.asyncio.client.Pipeline.zrevrangebylex": [
        "",
        "_Key",
        "_Value",
        "_Value",
        "int | None",
        "int | None"
    ],
    "redis.asyncio.client.Pipeline.zrangebyscore": [
        "",
        "_Key",
        "_Value",
        "_Value",
        "int | None",
        "int | None"
    ],
    "redis.asyncio.client.Pipeline.zrevrangebyscore": [
        "",
        "_Key",
        "_Value",
        "_Value",
        "int | None",
        "int | None"
    ],
    "redis.asyncio.client.Pipeline.zrank": [
        "",
        "_Key",
        "_Value",
        "bool"
    ],
    "redis.asyncio.client.Pipeline.zrem": [
        "",
        "_Key"
    ],
    "redis.asyncio.client.Pipeline.zremrangebylex": [
        "",
        "_Key",
        "_Value",
        "_Value"
    ],
    "redis.asyncio.client.Pipeline.zremrangebyrank": [
        "",
        "_Key",
        "int",
        "int"
    ],
    "redis.asyncio.client.Pipeline.zremrangebyscore": [
        "",
        "_Key",
        "_Value",
        "_Value"
    ],
    "redis.asyncio.client.Pipeline.zrevrank": [
        "",
        "_Key",
        "_Value",
        "bool"
    ],
    "redis.asyncio.client.Pipeline.zscore": [
        "",
        "_Key",
        "_Value"
    ],
    "redis.asyncio.client.Pipeline.zunion": [
        "",
        "",
        "Incomplete | None",
        "bool"
    ],
    "redis.asyncio.client.Pipeline.zunionstore": [
        "",
        "_Key",
        "Iterable[_Key]",
        "Literal[\"SUM\", \"MIN\", \"MAX\"] | None"
    ],
    "redis.asyncio.client.Pipeline.zmscore": [
        "",
        "",
        ""
    ],
    "redis.asyncio.client.Pipeline.bgrewriteaof": [
        ""
    ],
    "redis.asyncio.client.Pipeline.bgsave": [
        "",
        "bool"
    ],
    "redis.asyncio.client.Pipeline.role": [
        ""
    ],
    "redis.asyncio.client.Pipeline.client_kill": [
        "",
        "str"
    ],
    "redis.asyncio.client.Pipeline.client_kill_filter": [
        "",
        "Incomplete | None",
        "Incomplete | None",
        "Incomplete | None",
        "Incomplete | None",
        "Incomplete | None",
        "Incomplete | None"
    ],
    "redis.asyncio.client.Pipeline.client_info": [
        ""
    ],
    "redis.asyncio.client.Pipeline.client_list": [
        "",
        "str | None",
        "list[str]"
    ],
    "redis.asyncio.client.Pipeline.client_getname": [
        ""
    ],
    "redis.asyncio.client.Pipeline.client_getredir": [
        ""
    ],
    "redis.asyncio.client.Pipeline.client_reply": [
        "",
        ""
    ],
    "redis.asyncio.client.Pipeline.client_id": [
        ""
    ],
    "redis.asyncio.client.Pipeline.client_tracking_on": [
        "",
        "Incomplete | None",
        "",
        "bool",
        "bool",
        "bool",
        "bool"
    ],
    "redis.asyncio.client.Pipeline.client_tracking_off": [
        "",
        "Incomplete | None",
        "",
        "bool",
        "bool",
        "bool",
        "bool"
    ],
    "redis.asyncio.client.Pipeline.client_tracking": [
        "",
        "bool",
        "Incomplete | None",
        "",
        "bool",
        "bool",
        "bool",
        "bool"
    ],
    "redis.asyncio.client.Pipeline.client_trackinginfo": [
        ""
    ],
    "redis.asyncio.client.Pipeline.client_setname": [
        "",
        "str"
    ],
    "redis.asyncio.client.Pipeline.client_unblock": [
        "",
        "",
        "bool"
    ],
    "redis.asyncio.client.Pipeline.client_pause": [
        "",
        "",
        "bool"
    ],
    "redis.asyncio.client.Pipeline.client_unpause": [
        ""
    ],
    "redis.asyncio.client.Pipeline.command": [
        ""
    ],
    "redis.asyncio.client.Pipeline.command_info": [
        ""
    ],
    "redis.asyncio.client.Pipeline.command_count": [
        ""
    ],
    "redis.asyncio.client.Pipeline.config_get": [
        "",
        "PatternT"
    ],
    "redis.asyncio.client.Pipeline.config_set": [
        "",
        "KeyT",
        "EncodableT"
    ],
    "redis.asyncio.client.Pipeline.config_resetstat": [
        ""
    ],
    "redis.asyncio.client.Pipeline.config_rewrite": [
        ""
    ],
    "redis.asyncio.client.Pipeline.dbsize": [
        ""
    ],
    "redis.asyncio.client.Pipeline.debug_object": [
        "",
        ""
    ],
    "redis.asyncio.client.Pipeline.debug_segfault": [
        ""
    ],
    "redis.asyncio.client.Pipeline.echo": [
        "",
        "_Value"
    ],
    "redis.asyncio.client.Pipeline.flushall": [
        "",
        "bool"
    ],
    "redis.asyncio.client.Pipeline.flushdb": [
        "",
        "bool"
    ],
    "redis.asyncio.client.Pipeline.sync": [
        ""
    ],
    "redis.asyncio.client.Pipeline.psync": [
        "",
        "",
        ""
    ],
    "redis.asyncio.client.Pipeline.swapdb": [
        "",
        "",
        ""
    ],
    "redis.asyncio.client.Pipeline.select": [
        "",
        ""
    ],
    "redis.asyncio.client.Pipeline.info": [
        "",
        "_Key | None"
    ],
    "redis.asyncio.client.Pipeline.lastsave": [
        ""
    ],
    "redis.asyncio.client.Pipeline.lolwut": [
        ""
    ],
    "redis.asyncio.client.Pipeline.migrate": [
        "",
        "",
        "",
        "",
        "",
        "",
        "bool",
        "bool",
        "Incomplete | None"
    ],
    "redis.asyncio.client.Pipeline.object": [
        "",
        "",
        ""
    ],
    "redis.asyncio.client.Pipeline.memory_doctor": [
        ""
    ],
    "redis.asyncio.client.Pipeline.memory_help": [
        ""
    ],
    "redis.asyncio.client.Pipeline.memory_stats": [
        ""
    ],
    "redis.asyncio.client.Pipeline.memory_malloc_stats": [
        ""
    ],
    "redis.asyncio.client.Pipeline.memory_usage": [
        "",
        "",
        "Incomplete | None"
    ],
    "redis.asyncio.client.Pipeline.memory_purge": [
        ""
    ],
    "redis.asyncio.client.Pipeline.ping": [
        ""
    ],
    "redis.asyncio.client.Pipeline.quit": [
        ""
    ],
    "redis.asyncio.client.Pipeline.replicaof": [
        ""
    ],
    "redis.asyncio.client.Pipeline.save": [
        ""
    ],
    "redis.asyncio.client.Pipeline.shutdown": [
        "",
        "bool",
        "bool",
        "bool",
        "bool",
        "bool"
    ],
    "redis.asyncio.client.Pipeline.slaveof": [
        "",
        "Incomplete | None",
        "Incomplete | None"
    ],
    "redis.asyncio.client.Pipeline.slowlog_get": [
        "",
        "Incomplete | None"
    ],
    "redis.asyncio.client.Pipeline.slowlog_len": [
        ""
    ],
    "redis.asyncio.client.Pipeline.slowlog_reset": [
        ""
    ],
    "redis.asyncio.client.Pipeline.time": [
        ""
    ],
    "redis.asyncio.client.Pipeline.wait": [
        "",
        "",
        ""
    ],
    "redis.asyncio.client.Pipeline.module_load": [
        "",
        ""
    ],
    "redis.asyncio.client.Pipeline.module_unload": [
        "",
        ""
    ],
    "redis.asyncio.client.Pipeline.module_list": [
        ""
    ],
    "redis.asyncio.client.Pipeline.command_getkeys": [
        ""
    ],
    "redis.asyncio.client.Pipeline.publish": [
        "",
        "_Key",
        "_Key"
    ],
    "redis.asyncio.client.Pipeline.pubsub_channels": [
        "",
        "_Key"
    ],
    "redis.asyncio.client.Pipeline.pubsub_numpat": [
        ""
    ],
    "redis.asyncio.client.Pipeline.pubsub_numsub": [
        ""
    ],
    "redis.asyncio.client.Pipeline.eval": [
        "",
        "",
        ""
    ],
    "redis.asyncio.client.Pipeline.evalsha": [
        "",
        "",
        ""
    ],
    "redis.asyncio.client.Pipeline.script_exists": [
        ""
    ],
    "redis.asyncio.client.Pipeline.script_debug": [
        ""
    ],
    "redis.asyncio.client.Pipeline.script_flush": [
        "",
        "Incomplete | None"
    ],
    "redis.asyncio.client.Pipeline.script_kill": [
        ""
    ],
    "redis.asyncio.client.Pipeline.script_load": [
        "",
        ""
    ],
    "redis.asyncio.client.Pipeline.register_script": [
        "",
        "str | _StrType"
    ],
    "redis.asyncio.connection.Encoder.__init__": [
        "",
        "str",
        "str",
        "bool"
    ],
    "redis.asyncio.connection.Encoder.encode": [
        "",
        "EncodableT"
    ],
    "redis.asyncio.connection.Encoder.decode": [
        "",
        "EncodableT",
        "bool"
    ],
    "redis.asyncio.connection.BaseParser.__init__": [
        "",
        "int"
    ],
    "redis.asyncio.connection.BaseParser.parse_error": [
        "",
        "str"
    ],
    "redis.asyncio.connection.BaseParser.on_disconnect": [
        ""
    ],
    "redis.asyncio.connection.BaseParser.on_connect": [
        "",
        "Connection"
    ],
    "redis.asyncio.connection.PythonParser.__init__": [
        "",
        "int"
    ],
    "redis.asyncio.connection.PythonParser.on_connect": [
        "",
        "Connection"
    ],
    "redis.asyncio.connection.PythonParser.on_disconnect": [
        ""
    ],
    "redis.asyncio.connection.HiredisParser.__init__": [
        "",
        "int"
    ],
    "redis.asyncio.connection.HiredisParser.on_connect": [
        "",
        "Connection"
    ],
    "redis.asyncio.connection.HiredisParser.on_disconnect": [
        ""
    ],
    "redis.asyncio.connection.ConnectCallbackProtocol.__call__": [
        "",
        "Connection"
    ],
    "redis.asyncio.connection.Connection.__init__": [
        ""
    ],
    "redis.asyncio.connection.Connection.repr_pieces": [
        ""
    ],
    "redis.asyncio.connection.Connection.is_connected": [
        ""
    ],
    "redis.asyncio.connection.Connection.register_connect_callback": [
        "",
        ""
    ],
    "redis.asyncio.connection.Connection.clear_connect_callbacks": [
        ""
    ],
    "redis.asyncio.connection.Connection.set_parser": [
        "",
        ""
    ],
    "redis.asyncio.connection.Connection.pack_command": [
        ""
    ],
    "redis.asyncio.connection.Connection.pack_commands": [
        "",
        "Iterable[Iterable[EncodableT]]"
    ],
    "redis.asyncio.connection.SSLConnection.__init__": [
        "",
        "str | None",
        "str | None",
        "str",
        "str | None",
        "str | None",
        "bool"
    ],
    "redis.asyncio.connection.SSLConnection.keyfile": [
        ""
    ],
    "redis.asyncio.connection.SSLConnection.certfile": [
        ""
    ],
    "redis.asyncio.connection.SSLConnection.cert_reqs": [
        ""
    ],
    "redis.asyncio.connection.SSLConnection.ca_certs": [
        ""
    ],
    "redis.asyncio.connection.SSLConnection.ca_data": [
        ""
    ],
    "redis.asyncio.connection.SSLConnection.check_hostname": [
        ""
    ],
    "redis.asyncio.connection.RedisSSLContext.__init__": [
        "",
        "str | None",
        "str | None",
        "str | None",
        "str | None",
        "str | None",
        "bool"
    ],
    "redis.asyncio.connection.RedisSSLContext.get": [
        ""
    ],
    "redis.asyncio.connection.UnixDomainSocketConnection.__init__": [
        ""
    ],
    "redis.asyncio.connection.UnixDomainSocketConnection.repr_pieces": [
        ""
    ],
    "redis.asyncio.connection.ConnectionPool.from_url": [
        "",
        "str"
    ],
    "redis.asyncio.connection.ConnectionPool.__init__": [
        "",
        "type[Connection]",
        "int | None"
    ],
    "redis.asyncio.connection.ConnectionPool.reset": [
        ""
    ],
    "redis.asyncio.connection.ConnectionPool.get_encoder": [
        ""
    ],
    "redis.asyncio.connection.ConnectionPool.make_connection": [
        ""
    ],
    "redis.asyncio.connection.ConnectionPool.owns_connection": [
        "",
        "Connection"
    ],
    "redis.asyncio.connection.BlockingConnectionPool.__init__": [
        "",
        "int",
        "int | None",
        "type[Connection]",
        "type[asyncio.Queue[Any]]"
    ],
    "redis.asyncio.connection.BlockingConnectionPool.reset": [
        ""
    ],
    "redis.asyncio.connection.BlockingConnectionPool.make_connection": [
        ""
    ],
    "redis.asyncio.connection.to_bool": [
        ""
    ],
    "redis.asyncio.connection.parse_url": [
        "str"
    ],
    "redis.asyncio.cluster.RedisCluster.__init__": [
        "",
        "str | None",
        "str | int",
        "list[ClusterNode] | None",
        "bool",
        "bool",
        "int",
        "int",
        "int",
        "int",
        "str | int",
        "str | None",
        "CredentialProvider | None",
        "str | None",
        "str | None",
        "str | None",
        "str",
        "str",
        "bool",
        "float",
        "float | None",
        "bool",
        "Mapping[int, int | bytes] | None",
        "float | None",
        "Retry | None",
        "list[Exception] | None",
        "bool",
        "str | None",
        "str | None",
        "str",
        "str | None",
        "bool",
        "str | None",
        "Callable[[str, int], tuple[str, int]] | None"
    ],
    "redis.asyncio.cluster.RedisCluster.__await__": [
        ""
    ],
    "redis.asyncio.cluster.RedisCluster.__del__": [
        ""
    ],
    "redis.asyncio.cluster.RedisCluster.get_nodes": [
        ""
    ],
    "redis.asyncio.cluster.RedisCluster.get_primaries": [
        ""
    ],
    "redis.asyncio.cluster.RedisCluster.get_replicas": [
        ""
    ],
    "redis.asyncio.cluster.RedisCluster.get_random_node": [
        ""
    ],
    "redis.asyncio.cluster.RedisCluster.get_default_node": [
        ""
    ],
    "redis.asyncio.cluster.RedisCluster.set_default_node": [
        "",
        "ClusterNode"
    ],
    "redis.asyncio.cluster.RedisCluster.get_node": [
        "",
        "str | None",
        "int | None",
        "str | None"
    ],
    "redis.asyncio.cluster.RedisCluster.get_node_from_key": [
        "",
        "str",
        "bool"
    ],
    "redis.asyncio.cluster.RedisCluster.keyslot": [
        "",
        "EncodableT"
    ],
    "redis.asyncio.cluster.RedisCluster.get_encoder": [
        ""
    ],
    "redis.asyncio.cluster.RedisCluster.get_connection_kwargs": [
        ""
    ],
    "redis.asyncio.cluster.RedisCluster.set_response_callback": [
        "",
        "str",
        "ResponseCallbackT"
    ],
    "redis.asyncio.cluster.RedisCluster.pipeline": [
        "",
        "Any | None",
        "Any | None"
    ],
    "redis.asyncio.cluster.RedisCluster.from_url": [
        "",
        "str"
    ],
    "redis.asyncio.cluster.ClusterNode.__init__": [
        "",
        "str",
        "str | int",
        "str | None"
    ],
    "redis.asyncio.cluster.ClusterNode.__eq__": [
        "",
        "object"
    ],
    "redis.asyncio.cluster.ClusterNode.__del__": [
        ""
    ],
    "redis.asyncio.cluster.ClusterNode.acquire_connection": [
        ""
    ],
    "redis.asyncio.cluster.NodesManager.__init__": [
        "",
        "list[ClusterNode]",
        "bool",
        "dict[str, Any]",
        "Callable[[str, int], tuple[str, int]] | None"
    ],
    "redis.asyncio.cluster.NodesManager.get_node": [
        "",
        "str | None",
        "int | None",
        "str | None"
    ],
    "redis.asyncio.cluster.NodesManager.set_nodes": [
        "",
        "dict[str, ClusterNode]",
        "dict[str, ClusterNode]",
        "bool"
    ],
    "redis.asyncio.cluster.NodesManager.get_node_from_slot": [
        "",
        "int",
        "bool"
    ],
    "redis.asyncio.cluster.NodesManager.get_nodes_by_server_type": [
        "",
        "str"
    ],
    "redis.asyncio.cluster.NodesManager.remap_host_port": [
        "",
        "str",
        "int"
    ],
    "redis.asyncio.cluster.ClusterPipeline.__init__": [
        "",
        "RedisCluster[_StrType]"
    ],
    "redis.asyncio.cluster.ClusterPipeline.__await__": [
        ""
    ],
    "redis.asyncio.cluster.ClusterPipeline.__enter__": [
        ""
    ],
    "redis.asyncio.cluster.ClusterPipeline.__exit__": [
        "",
        "type[BaseException] | None",
        "BaseException | None",
        "TracebackType | None"
    ],
    "redis.asyncio.cluster.ClusterPipeline.__bool__": [
        ""
    ],
    "redis.asyncio.cluster.ClusterPipeline.__len__": [
        ""
    ],
    "redis.asyncio.cluster.ClusterPipeline.execute_command": [
        ""
    ],
    "redis.asyncio.cluster.ClusterPipeline.mset_nonatomic": [
        "",
        "Mapping[AnyKeyT, EncodableT]"
    ],
    "redis.asyncio.cluster.PipelineCommand.__init__": [
        "",
        "int"
    ],
    "redis.asyncio.lock.Lock.__init__": [
        "",
        "Redis[Any]",
        "str | bytes | memoryview",
        "float | None",
        "float",
        "bool",
        "float | None",
        "bool"
    ],
    "redis.asyncio.lock.Lock.register_scripts": [
        ""
    ],
    "redis.asyncio.lock.Lock.release": [
        ""
    ],
    "redis.asyncio.lock.Lock.extend": [
        "",
        "float",
        "bool"
    ],
    "redis.asyncio.lock.Lock.reacquire": [
        ""
    ],
    "redis.commands.cluster.ClusterMultiKeyCommands.mget_nonatomic": [
        "",
        ""
    ],
    "redis.commands.cluster.ClusterMultiKeyCommands.mset_nonatomic": [
        "",
        ""
    ],
    "redis.commands.cluster.ClusterMultiKeyCommands.exists": [
        ""
    ],
    "redis.commands.cluster.ClusterMultiKeyCommands.delete": [
        ""
    ],
    "redis.commands.cluster.ClusterMultiKeyCommands.touch": [
        ""
    ],
    "redis.commands.cluster.ClusterMultiKeyCommands.unlink": [
        ""
    ],
    "redis.commands.cluster.ClusterManagementCommands.slaveof": [
        ""
    ],
    "redis.commands.cluster.ClusterManagementCommands.replicaof": [
        ""
    ],
    "redis.commands.cluster.ClusterManagementCommands.swapdb": [
        ""
    ],
    "redis.commands.cluster.ClusterDataAccessCommands.stralgo": [
        "",
        "",
        "",
        "",
        "str",
        "bool",
        "bool",
        "Incomplete | None",
        "bool"
    ],
    "redis.commands.cluster.RedisClusterCommands.cluster_addslots": [
        "",
        ""
    ],
    "redis.commands.cluster.RedisClusterCommands.cluster_countkeysinslot": [
        "",
        ""
    ],
    "redis.commands.cluster.RedisClusterCommands.cluster_count_failure_report": [
        "",
        ""
    ],
    "redis.commands.cluster.RedisClusterCommands.cluster_delslots": [
        ""
    ],
    "redis.commands.cluster.RedisClusterCommands.cluster_failover": [
        "",
        "",
        "Incomplete | None"
    ],
    "redis.commands.cluster.RedisClusterCommands.cluster_info": [
        "",
        "Incomplete | None"
    ],
    "redis.commands.cluster.RedisClusterCommands.cluster_keyslot": [
        "",
        ""
    ],
    "redis.commands.cluster.RedisClusterCommands.cluster_meet": [
        "",
        "",
        "",
        "Incomplete | None"
    ],
    "redis.commands.cluster.RedisClusterCommands.cluster_nodes": [
        ""
    ],
    "redis.commands.cluster.RedisClusterCommands.cluster_replicate": [
        "",
        "",
        ""
    ],
    "redis.commands.cluster.RedisClusterCommands.cluster_reset": [
        "",
        "bool",
        "Incomplete | None"
    ],
    "redis.commands.cluster.RedisClusterCommands.cluster_save_config": [
        "",
        "Incomplete | None"
    ],
    "redis.commands.cluster.RedisClusterCommands.cluster_get_keys_in_slot": [
        "",
        "",
        ""
    ],
    "redis.commands.cluster.RedisClusterCommands.cluster_set_config_epoch": [
        "",
        "",
        "Incomplete | None"
    ],
    "redis.commands.cluster.RedisClusterCommands.cluster_setslot": [
        "",
        "",
        "",
        "",
        ""
    ],
    "redis.commands.cluster.RedisClusterCommands.cluster_setslot_stable": [
        "",
        ""
    ],
    "redis.commands.cluster.RedisClusterCommands.cluster_replicas": [
        "",
        "",
        "Incomplete | None"
    ],
    "redis.commands.cluster.RedisClusterCommands.cluster_slots": [
        "",
        "Incomplete | None"
    ],
    "redis.commands.cluster.RedisClusterCommands.cluster_myshardid": [
        "",
        "Incomplete | None"
    ],
    "redis.commands.cluster.RedisClusterCommands.cluster_links": [
        "",
        "Incomplete"
    ],
    "redis.commands.cluster.RedisClusterCommands.cluster_flushslots": [
        "",
        "Incomplete | None"
    ],
    "redis.commands.cluster.RedisClusterCommands.cluster_bumpepoch": [
        "",
        "Incomplete | None"
    ],
    "redis.commands.cluster.RedisClusterCommands.readonly": [
        "",
        "Incomplete | None"
    ],
    "redis.commands.cluster.RedisClusterCommands.readwrite": [
        "",
        "Incomplete | None"
    ],
    "redis.commands.json.decoders.bulk_of_jsons": [
        ""
    ],
    "redis.commands.json.decoders.decode_dict_keys": [
        ""
    ],
    "redis.commands.json.decoders.unstring": [
        ""
    ],
    "redis.commands.json.decoders.decode_list": [
        ""
    ],
    "redis.commands.json.commands.JSONCommands.arrappend": [
        "",
        "str",
        "str | None"
    ],
    "redis.commands.json.commands.JSONCommands.arrindex": [
        "",
        "str",
        "str",
        "int",
        "int | None",
        "int | None"
    ],
    "redis.commands.json.commands.JSONCommands.arrinsert": [
        "",
        "str",
        "str",
        "int"
    ],
    "redis.commands.json.commands.JSONCommands.arrlen": [
        "",
        "str",
        "str | None"
    ],
    "redis.commands.json.commands.JSONCommands.arrpop": [
        "",
        "str",
        "str | None",
        "int | None"
    ],
    "redis.commands.json.commands.JSONCommands.arrtrim": [
        "",
        "str",
        "str",
        "int",
        "int"
    ],
    "redis.commands.json.commands.JSONCommands.type": [
        "",
        "str",
        "str | None"
    ],
    "redis.commands.json.commands.JSONCommands.resp": [
        "",
        "str",
        "str | None"
    ],
    "redis.commands.json.commands.JSONCommands.objkeys": [
        "",
        "",
        ""
    ],
    "redis.commands.json.commands.JSONCommands.objlen": [
        "",
        "",
        ""
    ],
    "redis.commands.json.commands.JSONCommands.numincrby": [
        "",
        "",
        "",
        ""
    ],
    "redis.commands.json.commands.JSONCommands.nummultby": [
        "",
        "",
        "",
        ""
    ],
    "redis.commands.json.commands.JSONCommands.clear": [
        "",
        "",
        ""
    ],
    "redis.commands.json.commands.JSONCommands.delete": [
        "",
        "",
        ""
    ],
    "redis.commands.json.commands.JSONCommands.get": [
        "",
        ""
    ],
    "redis.commands.json.commands.JSONCommands.mget": [
        "",
        "",
        ""
    ],
    "redis.commands.json.commands.JSONCommands.set": [
        "",
        "",
        "",
        "",
        "bool",
        "bool",
        "bool"
    ],
    "redis.commands.json.commands.JSONCommands.set_file": [
        "",
        "",
        "",
        "",
        "bool",
        "bool",
        "bool"
    ],
    "redis.commands.json.commands.JSONCommands.set_path": [
        "",
        "",
        "",
        "bool",
        "bool",
        "bool"
    ],
    "redis.commands.json.commands.JSONCommands.strlen": [
        "",
        "",
        "Incomplete | None"
    ],
    "redis.commands.json.commands.JSONCommands.toggle": [
        "",
        "",
        ""
    ],
    "redis.commands.json.commands.JSONCommands.strappend": [
        "",
        "",
        "",
        ""
    ],
    "redis.commands.json.commands.JSONCommands.debug": [
        "",
        "",
        "Incomplete | None",
        ""
    ],
    "redis.commands.json.commands.JSONCommands.jsonget": [
        ""
    ],
    "redis.commands.json.commands.JSONCommands.jsonmget": [
        ""
    ],
    "redis.commands.json.commands.JSONCommands.jsonset": [
        ""
    ],
    "redis.commands.json.__init__.JSON.__init__": [
        "",
        "",
        "Incomplete | None",
        "",
        ""
    ],
    "redis.commands.json.__init__.JSON.pipeline": [
        "",
        "bool",
        "Incomplete | None"
    ],
    "redis.commands.json.path.Path.root_path": [],
    "redis.commands.json.path.Path.__init__": [
        "",
        "str"
    ],
    "redis.commands.parser.CommandsParser.__init__": [
        "",
        "AbstractRedis"
    ],
    "redis.commands.parser.CommandsParser.initialize": [
        "",
        "AbstractRedis"
    ],
    "redis.commands.parser.CommandsParser.get_keys": [
        "",
        "AbstractRedis"
    ],
    "redis.commands.core.ACLCommands.acl_cat": [
        "",
        "str | None"
    ],
    "redis.commands.core.ACLCommands.acl_deluser": [
        ""
    ],
    "redis.commands.core.ACLCommands.acl_genpass": [
        "",
        "int | None"
    ],
    "redis.commands.core.ACLCommands.acl_getuser": [
        "",
        "str"
    ],
    "redis.commands.core.ACLCommands.acl_help": [
        ""
    ],
    "redis.commands.core.ACLCommands.acl_list": [
        ""
    ],
    "redis.commands.core.ACLCommands.acl_log": [
        "",
        "int | None"
    ],
    "redis.commands.core.ACLCommands.acl_log_reset": [
        ""
    ],
    "redis.commands.core.ACLCommands.acl_load": [
        ""
    ],
    "redis.commands.core.ACLCommands.acl_save": [
        ""
    ],
    "redis.commands.core.ACLCommands.acl_setuser": [
        "",
        "str",
        "bool",
        "bool",
        "Sequence[str] | None",
        "Sequence[str] | None",
        "Sequence[str] | None",
        "Sequence[str] | None",
        "Sequence[str] | None",
        "Iterable[ChannelT] | None",
        "Iterable[tuple[str, KeyT]] | None",
        "bool",
        "bool",
        "bool",
        "bool"
    ],
    "redis.commands.core.ACLCommands.acl_users": [
        ""
    ],
    "redis.commands.core.ACLCommands.acl_whoami": [
        ""
    ],
    "redis.commands.core.ManagementCommands.bgrewriteaof": [
        ""
    ],
    "redis.commands.core.ManagementCommands.bgsave": [
        "",
        "bool"
    ],
    "redis.commands.core.ManagementCommands.role": [
        ""
    ],
    "redis.commands.core.ManagementCommands.client_kill": [
        "",
        "str"
    ],
    "redis.commands.core.ManagementCommands.client_kill_filter": [
        "",
        "Incomplete | None",
        "Incomplete | None",
        "Incomplete | None",
        "Incomplete | None",
        "Incomplete | None",
        "Incomplete | None"
    ],
    "redis.commands.core.ManagementCommands.client_info": [
        ""
    ],
    "redis.commands.core.ManagementCommands.client_list": [
        "",
        "str | None",
        "list[str]"
    ],
    "redis.commands.core.ManagementCommands.client_getname": [
        ""
    ],
    "redis.commands.core.ManagementCommands.client_getredir": [
        ""
    ],
    "redis.commands.core.ManagementCommands.client_reply": [
        "",
        ""
    ],
    "redis.commands.core.ManagementCommands.client_id": [
        ""
    ],
    "redis.commands.core.ManagementCommands.client_tracking_on": [
        "",
        "Incomplete | None",
        "",
        "bool",
        "bool",
        "bool",
        "bool"
    ],
    "redis.commands.core.ManagementCommands.client_tracking_off": [
        "",
        "Incomplete | None",
        "",
        "bool",
        "bool",
        "bool",
        "bool"
    ],
    "redis.commands.core.ManagementCommands.client_tracking": [
        "",
        "bool",
        "Incomplete | None",
        "",
        "bool",
        "bool",
        "bool",
        "bool"
    ],
    "redis.commands.core.ManagementCommands.client_trackinginfo": [
        ""
    ],
    "redis.commands.core.ManagementCommands.client_setname": [
        "",
        "str"
    ],
    "redis.commands.core.ManagementCommands.client_unblock": [
        "",
        "",
        "bool"
    ],
    "redis.commands.core.ManagementCommands.client_pause": [
        "",
        "",
        "bool"
    ],
    "redis.commands.core.ManagementCommands.client_unpause": [
        ""
    ],
    "redis.commands.core.ManagementCommands.client_no_evict": [
        "",
        "str"
    ],
    "redis.commands.core.ManagementCommands.client_no_touch": [
        "",
        "str"
    ],
    "redis.commands.core.ManagementCommands.command": [
        ""
    ],
    "redis.commands.core.ManagementCommands.command_info": [
        ""
    ],
    "redis.commands.core.ManagementCommands.command_count": [
        ""
    ],
    "redis.commands.core.ManagementCommands.config_get": [
        "",
        "PatternT"
    ],
    "redis.commands.core.ManagementCommands.config_set": [
        "",
        "KeyT",
        "EncodableT"
    ],
    "redis.commands.core.ManagementCommands.config_resetstat": [
        ""
    ],
    "redis.commands.core.ManagementCommands.config_rewrite": [
        ""
    ],
    "redis.commands.core.ManagementCommands.dbsize": [
        ""
    ],
    "redis.commands.core.ManagementCommands.debug_object": [
        "",
        ""
    ],
    "redis.commands.core.ManagementCommands.debug_segfault": [
        ""
    ],
    "redis.commands.core.ManagementCommands.echo": [
        "",
        "_Value"
    ],
    "redis.commands.core.ManagementCommands.flushall": [
        "",
        "bool"
    ],
    "redis.commands.core.ManagementCommands.flushdb": [
        "",
        "bool"
    ],
    "redis.commands.core.ManagementCommands.sync": [
        ""
    ],
    "redis.commands.core.ManagementCommands.psync": [
        "",
        "",
        ""
    ],
    "redis.commands.core.ManagementCommands.swapdb": [
        "",
        "",
        ""
    ],
    "redis.commands.core.ManagementCommands.select": [
        "",
        ""
    ],
    "redis.commands.core.ManagementCommands.info": [
        "",
        "_Key | None"
    ],
    "redis.commands.core.ManagementCommands.lastsave": [
        ""
    ],
    "redis.commands.core.ManagementCommands.lolwut": [
        ""
    ],
    "redis.commands.core.ManagementCommands.reset": [
        ""
    ],
    "redis.commands.core.ManagementCommands.migrate": [
        "",
        "",
        "",
        "",
        "",
        "",
        "bool",
        "bool",
        "Incomplete | None"
    ],
    "redis.commands.core.ManagementCommands.object": [
        "",
        "",
        ""
    ],
    "redis.commands.core.ManagementCommands.memory_doctor": [
        ""
    ],
    "redis.commands.core.ManagementCommands.memory_help": [
        ""
    ],
    "redis.commands.core.ManagementCommands.memory_stats": [
        ""
    ],
    "redis.commands.core.ManagementCommands.memory_malloc_stats": [
        ""
    ],
    "redis.commands.core.ManagementCommands.memory_usage": [
        "",
        "",
        "Incomplete | None"
    ],
    "redis.commands.core.ManagementCommands.memory_purge": [
        ""
    ],
    "redis.commands.core.ManagementCommands.ping": [
        ""
    ],
    "redis.commands.core.ManagementCommands.quit": [
        ""
    ],
    "redis.commands.core.ManagementCommands.replicaof": [
        ""
    ],
    "redis.commands.core.ManagementCommands.save": [
        ""
    ],
    "redis.commands.core.ManagementCommands.shutdown": [
        "",
        "bool",
        "bool",
        "bool",
        "bool",
        "bool"
    ],
    "redis.commands.core.ManagementCommands.slaveof": [
        "",
        "Incomplete | None",
        "Incomplete | None"
    ],
    "redis.commands.core.ManagementCommands.slowlog_get": [
        "",
        "Incomplete | None"
    ],
    "redis.commands.core.ManagementCommands.slowlog_len": [
        ""
    ],
    "redis.commands.core.ManagementCommands.slowlog_reset": [
        ""
    ],
    "redis.commands.core.ManagementCommands.time": [
        ""
    ],
    "redis.commands.core.ManagementCommands.wait": [
        "",
        "",
        ""
    ],
    "redis.commands.core.BasicKeyCommands.append": [
        "",
        "",
        ""
    ],
    "redis.commands.core.BasicKeyCommands.bitcount": [
        "",
        "_Key",
        "int | None",
        "int | None",
        "str | None"
    ],
    "redis.commands.core.BasicKeyCommands.bitfield": [
        "",
        "",
        "Incomplete | None"
    ],
    "redis.commands.core.BasicKeyCommands.bitop": [
        "",
        "",
        ""
    ],
    "redis.commands.core.BasicKeyCommands.bitpos": [
        "",
        "_Key",
        "int",
        "int | None",
        "int | None",
        "str | None"
    ],
    "redis.commands.core.BasicKeyCommands.copy": [
        "",
        "",
        "",
        "Incomplete | None",
        "bool"
    ],
    "redis.commands.core.BasicKeyCommands.decr": [
        "",
        "",
        "int"
    ],
    "redis.commands.core.BasicKeyCommands.decrby": [
        "",
        "",
        "int"
    ],
    "redis.commands.core.BasicKeyCommands.delete": [
        ""
    ],
    "redis.commands.core.BasicKeyCommands.__delitem__": [
        "",
        "_Key"
    ],
    "redis.commands.core.BasicKeyCommands.dump": [
        "",
        "_Key"
    ],
    "redis.commands.core.BasicKeyCommands.exists": [
        ""
    ],
    "redis.commands.core.BasicKeyCommands.expire": [
        "",
        "_Key",
        "int | timedelta",
        "bool",
        "bool",
        "bool",
        "bool"
    ],
    "redis.commands.core.BasicKeyCommands.expireat": [
        "",
        "",
        "",
        "bool",
        "bool",
        "bool",
        "bool"
    ],
    "redis.commands.core.BasicKeyCommands.get": [
        "",
        "_Key"
    ],
    "redis.commands.core.BasicKeyCommands.getdel": [
        "",
        "_Key"
    ],
    "redis.commands.core.BasicKeyCommands.getex": [
        "",
        "",
        "Incomplete | None",
        "Incomplete | None",
        "Incomplete | None",
        "Incomplete | None",
        "bool"
    ],
    "redis.commands.core.BasicKeyCommands.__getitem__": [
        "",
        "str"
    ],
    "redis.commands.core.BasicKeyCommands.getbit": [
        "",
        "_Key",
        "int"
    ],
    "redis.commands.core.BasicKeyCommands.getrange": [
        "",
        "",
        "",
        ""
    ],
    "redis.commands.core.BasicKeyCommands.getset": [
        "",
        "",
        ""
    ],
    "redis.commands.core.BasicKeyCommands.incr": [
        "",
        "_Key",
        "int"
    ],
    "redis.commands.core.BasicKeyCommands.incrby": [
        "",
        "_Key",
        "int"
    ],
    "redis.commands.core.BasicKeyCommands.incrbyfloat": [
        "",
        "_Key",
        "float"
    ],
    "redis.commands.core.BasicKeyCommands.keys": [
        "",
        "_Key"
    ],
    "redis.commands.core.BasicKeyCommands.lmove": [
        "",
        "_Key",
        "_Key",
        "Literal[\"LEFT\", \"RIGHT\"]",
        "Literal[\"LEFT\", \"RIGHT\"]"
    ],
    "redis.commands.core.BasicKeyCommands.blmove": [
        "",
        "_Key",
        "_Key",
        "float",
        "Literal[\"LEFT\", \"RIGHT\"]",
        "Literal[\"LEFT\", \"RIGHT\"]"
    ],
    "redis.commands.core.BasicKeyCommands.mget": [
        "",
        "_Key | Iterable[_Key]"
    ],
    "redis.commands.core.BasicKeyCommands.mset": [
        "",
        "Mapping[_Key, _Value]"
    ],
    "redis.commands.core.BasicKeyCommands.msetnx": [
        "",
        "Mapping[_Key, _Value]"
    ],
    "redis.commands.core.BasicKeyCommands.move": [
        "",
        "_Key",
        "int"
    ],
    "redis.commands.core.BasicKeyCommands.persist": [
        "",
        "_Key"
    ],
    "redis.commands.core.BasicKeyCommands.pexpire": [
        "",
        "_Key",
        "int | timedelta",
        "bool",
        "bool",
        "bool",
        "bool"
    ],
    "redis.commands.core.BasicKeyCommands.pexpireat": [
        "",
        "_Key",
        "int | datetime",
        "bool",
        "bool",
        "bool",
        "bool"
    ],
    "redis.commands.core.BasicKeyCommands.psetex": [
        "",
        "",
        "",
        ""
    ],
    "redis.commands.core.BasicKeyCommands.pttl": [
        "",
        "_Key"
    ],
    "redis.commands.core.BasicKeyCommands.hrandfield": [
        "",
        "",
        "Incomplete | None",
        "bool"
    ],
    "redis.commands.core.BasicKeyCommands.randomkey": [
        ""
    ],
    "redis.commands.core.BasicKeyCommands.rename": [
        "",
        "",
        ""
    ],
    "redis.commands.core.BasicKeyCommands.renamenx": [
        "",
        "",
        ""
    ],
    "redis.commands.core.BasicKeyCommands.restore": [
        "",
        "",
        "",
        "",
        "bool",
        "bool",
        "Incomplete | None",
        "Incomplete | None"
    ],
    "redis.commands.core.BasicKeyCommands.set": [
        "",
        "_Key",
        "_Value",
        "None | float | timedelta",
        "None | float | timedelta",
        "bool",
        "bool",
        "bool",
        "bool",
        "Incomplete | None",
        "Incomplete | None"
    ],
    "redis.commands.core.BasicKeyCommands.__setitem__": [
        "",
        "",
        ""
    ],
    "redis.commands.core.BasicKeyCommands.setbit": [
        "",
        "_Key",
        "int",
        "int"
    ],
    "redis.commands.core.BasicKeyCommands.setex": [
        "",
        "_Key",
        "int | timedelta",
        "_Value"
    ],
    "redis.commands.core.BasicKeyCommands.setnx": [
        "",
        "_Key",
        "_Value"
    ],
    "redis.commands.core.BasicKeyCommands.setrange": [
        "",
        "",
        "",
        ""
    ],
    "redis.commands.core.BasicKeyCommands.stralgo": [
        "",
        "",
        "",
        "",
        "str",
        "bool",
        "bool",
        "Incomplete | None",
        "bool"
    ],
    "redis.commands.core.BasicKeyCommands.strlen": [
        "",
        ""
    ],
    "redis.commands.core.BasicKeyCommands.substr": [
        "",
        "",
        "",
        "int"
    ],
    "redis.commands.core.BasicKeyCommands.touch": [
        ""
    ],
    "redis.commands.core.BasicKeyCommands.ttl": [
        "",
        "_Key"
    ],
    "redis.commands.core.BasicKeyCommands.type": [
        "",
        ""
    ],
    "redis.commands.core.BasicKeyCommands.watch": [
        ""
    ],
    "redis.commands.core.BasicKeyCommands.unwatch": [
        ""
    ],
    "redis.commands.core.BasicKeyCommands.unlink": [
        ""
    ],
    "redis.commands.core.AsyncBasicKeyCommands.__getitem__": [
        "",
        "str"
    ],
    "redis.commands.core.AsyncBasicKeyCommands.__setitem__": [
        "",
        "",
        ""
    ],
    "redis.commands.core.AsyncBasicKeyCommands.__delitem__": [
        "",
        "_Key"
    ],
    "redis.commands.core.AsyncBasicKeyCommands.__contains__": [
        "",
        "_Key"
    ],
    "redis.commands.core.ListCommands.blpop": [
        "",
        "_Value | Iterable[_Value]",
        "Literal[0] | None"
    ],
    "redis.commands.core.ListCommands.brpop": [
        "",
        "_Value | Iterable[_Value]",
        "Literal[0] | None"
    ],
    "redis.commands.core.ListCommands.brpoplpush": [
        "",
        "",
        "",
        "int | None"
    ],
    "redis.commands.core.ListCommands.lindex": [
        "",
        "_Key",
        "int"
    ],
    "redis.commands.core.ListCommands.linsert": [
        "",
        "_Key",
        "Literal[\"BEFORE\", \"AFTER\", \"before\", \"after\"]",
        "_Value",
        "_Value"
    ],
    "redis.commands.core.ListCommands.llen": [
        "",
        "_Key"
    ],
    "redis.commands.core.ListCommands.lpop": [
        "",
        "",
        "int | None"
    ],
    "redis.commands.core.ListCommands.lpush": [
        "",
        "_Value"
    ],
    "redis.commands.core.ListCommands.lpushx": [
        "",
        "",
        ""
    ],
    "redis.commands.core.ListCommands.lrange": [
        "",
        "_Key",
        "int",
        "int"
    ],
    "redis.commands.core.ListCommands.lrem": [
        "",
        "_Key",
        "int",
        "_Value"
    ],
    "redis.commands.core.ListCommands.lset": [
        "",
        "_Key",
        "int",
        "_Value"
    ],
    "redis.commands.core.ListCommands.ltrim": [
        "",
        "_Key",
        "int",
        "int"
    ],
    "redis.commands.core.ListCommands.rpop": [
        "",
        "",
        "int | None"
    ],
    "redis.commands.core.ListCommands.rpoplpush": [
        "",
        "",
        ""
    ],
    "redis.commands.core.ListCommands.rpush": [
        "",
        "_Value"
    ],
    "redis.commands.core.ListCommands.rpushx": [
        "",
        "",
        ""
    ],
    "redis.commands.core.ListCommands.lpos": [
        "",
        "",
        "",
        "Incomplete | None",
        "Incomplete | None",
        "Incomplete | None"
    ],
    "redis.commands.core.ListCommands.sort": [
        "",
        "_Key",
        "int | None",
        "int | None",
        "_Key | None",
        "_Key | Sequence[_Key] | None",
        "bool",
        "bool",
        "None",
        "bool"
    ],
    "redis.commands.core.ScanCommands.scan": [
        "",
        "int",
        "_Key | None",
        "int | None",
        "str | None"
    ],
    "redis.commands.core.ScanCommands.scan_iter": [
        "",
        "_Key | None",
        "int | None",
        "str | None"
    ],
    "redis.commands.core.ScanCommands.sscan": [
        "",
        "_Key",
        "int",
        "_Key | None",
        "int | None"
    ],
    "redis.commands.core.ScanCommands.sscan_iter": [
        "",
        "_Key",
        "_Key | None",
        "int | None"
    ],
    "redis.commands.core.ScanCommands.hscan": [
        "",
        "_Key",
        "int",
        "_Key | None",
        "int | None"
    ],
    "redis.commands.core.ScanCommands.hscan_iter": [
        "",
        "_Key",
        "_Key | None",
        "int | None"
    ],
    "redis.commands.core.ScanCommands.zscan": [
        "",
        "_Key",
        "int",
        "_Key | None",
        "int | None"
    ],
    "redis.commands.core.ScanCommands.zscan_iter": [
        "",
        "_Key",
        "_Key | None",
        "int | None"
    ],
    "redis.commands.core.AsyncScanCommands.scan_iter": [
        "",
        "_Key | None",
        "int | None",
        "str | None"
    ],
    "redis.commands.core.AsyncScanCommands.sscan_iter": [
        "",
        "_Key",
        "_Key | None",
        "int | None"
    ],
    "redis.commands.core.AsyncScanCommands.hscan_iter": [
        "",
        "_Key",
        "_Key | None",
        "int | None"
    ],
    "redis.commands.core.AsyncScanCommands.zscan_iter": [
        "",
        "_Key",
        "_Key | None",
        "int | None"
    ],
    "redis.commands.core.SetCommands.sadd": [
        "",
        "_Key"
    ],
    "redis.commands.core.SetCommands.scard": [
        "",
        "_Key"
    ],
    "redis.commands.core.SetCommands.sdiff": [
        "",
        "_Key | Iterable[_Key]"
    ],
    "redis.commands.core.SetCommands.sdiffstore": [
        "",
        "_Key",
        "_Key | Iterable[_Key]"
    ],
    "redis.commands.core.SetCommands.sinter": [
        "",
        "_Key | Iterable[_Key]"
    ],
    "redis.commands.core.SetCommands.sinterstore": [
        "",
        "_Key",
        "_Key | Iterable[_Key]"
    ],
    "redis.commands.core.SetCommands.sismember": [
        "",
        "_Key",
        "_Value"
    ],
    "redis.commands.core.SetCommands.smembers": [
        "",
        "_Key"
    ],
    "redis.commands.core.SetCommands.smismember": [
        "",
        "",
        ""
    ],
    "redis.commands.core.SetCommands.smove": [
        "",
        "_Key",
        "_Key",
        "_Value"
    ],
    "redis.commands.core.SetCommands.spop": [
        "",
        "_Key",
        "None"
    ],
    "redis.commands.core.SetCommands.srandmember": [
        "",
        "_Key",
        "None"
    ],
    "redis.commands.core.SetCommands.srem": [
        "",
        "_Key"
    ],
    "redis.commands.core.SetCommands.sunion": [
        "",
        "_Key | Iterable[_Key]"
    ],
    "redis.commands.core.SetCommands.sunionstore": [
        "",
        "_Key",
        "_Key | Iterable[_Key]"
    ],
    "redis.commands.core.StreamCommands.xack": [
        "",
        "",
        ""
    ],
    "redis.commands.core.StreamCommands.xadd": [
        "",
        "",
        "",
        "str | int | bytes | memoryview",
        "",
        "bool",
        "bool",
        "Incomplete | None",
        "Incomplete | None"
    ],
    "redis.commands.core.StreamCommands.xautoclaim": [
        "",
        "",
        "",
        "",
        "",
        "StreamIdT",
        "Incomplete | None",
        "bool"
    ],
    "redis.commands.core.StreamCommands.xclaim": [
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        ""
    ],
    "redis.commands.core.StreamCommands.xdel": [
        "",
        ""
    ],
    "redis.commands.core.StreamCommands.xgroup_create": [
        "",
        "",
        "",
        "str",
        "bool",
        "int | None"
    ],
    "redis.commands.core.StreamCommands.xgroup_delconsumer": [
        "",
        "",
        "",
        ""
    ],
    "redis.commands.core.StreamCommands.xgroup_destroy": [
        "",
        "",
        ""
    ],
    "redis.commands.core.StreamCommands.xgroup_createconsumer": [
        "",
        "",
        "",
        ""
    ],
    "redis.commands.core.StreamCommands.xgroup_setid": [
        "",
        "",
        "",
        "",
        "int | None"
    ],
    "redis.commands.core.StreamCommands.xinfo_consumers": [
        "",
        "",
        ""
    ],
    "redis.commands.core.StreamCommands.xinfo_groups": [
        "",
        ""
    ],
    "redis.commands.core.StreamCommands.xinfo_stream": [
        "",
        "",
        "bool"
    ],
    "redis.commands.core.StreamCommands.xlen": [
        "",
        "_Key"
    ],
    "redis.commands.core.StreamCommands.xpending": [
        "",
        "",
        ""
    ],
    "redis.commands.core.StreamCommands.xpending_range": [
        "",
        "_Key",
        "",
        "",
        "",
        "int",
        "Incomplete | None",
        "int | None"
    ],
    "redis.commands.core.StreamCommands.xrange": [
        "",
        "",
        "str",
        "str",
        "Incomplete | None"
    ],
    "redis.commands.core.StreamCommands.xread": [
        "",
        "",
        "Incomplete | None",
        "Incomplete | None"
    ],
    "redis.commands.core.StreamCommands.xreadgroup": [
        "",
        "",
        "",
        "",
        "Incomplete | None",
        "Incomplete | None",
        "bool"
    ],
    "redis.commands.core.StreamCommands.xrevrange": [
        "",
        "",
        "str",
        "str",
        "Incomplete | None"
    ],
    "redis.commands.core.StreamCommands.xtrim": [
        "",
        "",
        "int | None",
        "bool",
        "Incomplete | None",
        "int | None"
    ],
    "redis.commands.core.SortedSetCommands.zadd": [
        "",
        "_Key",
        "Mapping[_Key, _Value]",
        "bool",
        "bool",
        "bool",
        "bool",
        "Incomplete | None",
        "Incomplete | None"
    ],
    "redis.commands.core.SortedSetCommands.zcard": [
        "",
        "_Key"
    ],
    "redis.commands.core.SortedSetCommands.zcount": [
        "",
        "_Key",
        "_Value",
        "_Value"
    ],
    "redis.commands.core.SortedSetCommands.zdiff": [
        "",
        "",
        "bool"
    ],
    "redis.commands.core.SortedSetCommands.zdiffstore": [
        "",
        "",
        ""
    ],
    "redis.commands.core.SortedSetCommands.zincrby": [
        "",
        "_Key",
        "float",
        "_Value"
    ],
    "redis.commands.core.SortedSetCommands.zinter": [
        "",
        "",
        "Incomplete | None",
        "bool"
    ],
    "redis.commands.core.SortedSetCommands.zinterstore": [
        "",
        "_Key",
        "Iterable[_Key]",
        "Literal[\"SUM\", \"MIN\", \"MAX\"] | None"
    ],
    "redis.commands.core.SortedSetCommands.zlexcount": [
        "",
        "_Key",
        "_Value",
        "_Value"
    ],
    "redis.commands.core.SortedSetCommands.zpopmax": [
        "",
        "_Key",
        "int | None"
    ],
    "redis.commands.core.SortedSetCommands.zpopmin": [
        "",
        "_Key",
        "int | None"
    ],
    "redis.commands.core.SortedSetCommands.zrandmember": [
        "",
        "",
        "Incomplete | None",
        "bool"
    ],
    "redis.commands.core.SortedSetCommands.bzpopmax": [
        "",
        "_Key | Iterable[_Key]",
        "Literal[0]"
    ],
    "redis.commands.core.SortedSetCommands.bzpopmin": [
        "",
        "_Key | Iterable[_Key]",
        "Literal[0]"
    ],
    "redis.commands.core.SortedSetCommands.zrange": [
        "",
        "_Key",
        "int",
        "int",
        "bool",
        "Literal[True]",
        "Callable[[_StrType], _ScoreCastFuncReturn]",
        "bool",
        "bool",
        "int | None",
        "int | None"
    ],
    "redis.commands.core.SortedSetCommands.zrevrange": [
        "",
        "_Key",
        "int",
        "int",
        "Literal[True]",
        "Callable[[_StrType], _ScoreCastFuncReturn]"
    ],
    "redis.commands.core.SortedSetCommands.zrangestore": [
        "",
        "",
        "",
        "",
        "",
        "bool",
        "bool",
        "bool",
        "Incomplete | None",
        "Incomplete | None"
    ],
    "redis.commands.core.SortedSetCommands.zrangebylex": [
        "",
        "_Key",
        "_Value",
        "_Value",
        "int | None",
        "int | None"
    ],
    "redis.commands.core.SortedSetCommands.zrevrangebylex": [
        "",
        "_Key",
        "_Value",
        "_Value",
        "int | None",
        "int | None"
    ],
    "redis.commands.core.SortedSetCommands.zrangebyscore": [
        "",
        "_Key",
        "_Value",
        "_Value",
        "int | None",
        "int | None"
    ],
    "redis.commands.core.SortedSetCommands.zrevrangebyscore": [
        "",
        "_Key",
        "_Value",
        "_Value",
        "int | None",
        "int | None"
    ],
    "redis.commands.core.SortedSetCommands.zrank": [
        "",
        "_Key",
        "_Value",
        "bool"
    ],
    "redis.commands.core.SortedSetCommands.zrem": [
        "",
        "_Key"
    ],
    "redis.commands.core.SortedSetCommands.zremrangebylex": [
        "",
        "_Key",
        "_Value",
        "_Value"
    ],
    "redis.commands.core.SortedSetCommands.zremrangebyrank": [
        "",
        "_Key",
        "int",
        "int"
    ],
    "redis.commands.core.SortedSetCommands.zremrangebyscore": [
        "",
        "_Key",
        "_Value",
        "_Value"
    ],
    "redis.commands.core.SortedSetCommands.zrevrank": [
        "",
        "_Key",
        "_Value",
        "bool"
    ],
    "redis.commands.core.SortedSetCommands.zscore": [
        "",
        "_Key",
        "_Value"
    ],
    "redis.commands.core.SortedSetCommands.zunion": [
        "",
        "",
        "Incomplete | None",
        "bool"
    ],
    "redis.commands.core.SortedSetCommands.zunionstore": [
        "",
        "_Key",
        "Iterable[_Key]",
        "Literal[\"SUM\", \"MIN\", \"MAX\"] | None"
    ],
    "redis.commands.core.SortedSetCommands.zmscore": [
        "",
        "",
        ""
    ],
    "redis.commands.core.HyperlogCommands.pfadd": [
        "",
        "_Key"
    ],
    "redis.commands.core.HyperlogCommands.pfcount": [
        "",
        "_Key"
    ],
    "redis.commands.core.HyperlogCommands.pfmerge": [
        "",
        "_Key"
    ],
    "redis.commands.core.HashCommands.hdel": [
        "",
        "_Key"
    ],
    "redis.commands.core.HashCommands.hexists": [
        "",
        "_Key",
        "_Key"
    ],
    "redis.commands.core.HashCommands.hget": [
        "",
        "_Key",
        "_Key"
    ],
    "redis.commands.core.HashCommands.hgetall": [
        "",
        "_Key"
    ],
    "redis.commands.core.HashCommands.hincrby": [
        "",
        "_Key",
        "_Key",
        "int"
    ],
    "redis.commands.core.HashCommands.hincrbyfloat": [
        "",
        "_Key",
        "_Key",
        "float"
    ],
    "redis.commands.core.HashCommands.hkeys": [
        "",
        "_Key"
    ],
    "redis.commands.core.HashCommands.hlen": [
        "",
        "_Key"
    ],
    "redis.commands.core.HashCommands.hset": [
        "",
        "_Key",
        "_Key",
        "_Value",
        "Mapping[_Key, _Value] | None",
        "Incomplete | None"
    ],
    "redis.commands.core.HashCommands.hsetnx": [
        "",
        "_Key",
        "_Key",
        "_Value"
    ],
    "redis.commands.core.HashCommands.hmset": [
        "",
        "_Key",
        "Mapping[_Key, _Value]"
    ],
    "redis.commands.core.HashCommands.hmget": [
        "",
        "_Key",
        "_Key | Iterable[_Key]"
    ],
    "redis.commands.core.HashCommands.hvals": [
        "",
        "_Key"
    ],
    "redis.commands.core.HashCommands.hstrlen": [
        "",
        "",
        ""
    ],
    "redis.commands.core.AsyncScript.__init__": [
        "",
        "AsyncRedis[Any]",
        "ScriptTextT"
    ],
    "redis.commands.core.PubSubCommands.publish": [
        "",
        "_Key",
        "_Key"
    ],
    "redis.commands.core.PubSubCommands.pubsub_channels": [
        "",
        "_Key"
    ],
    "redis.commands.core.PubSubCommands.pubsub_numpat": [
        ""
    ],
    "redis.commands.core.PubSubCommands.pubsub_numsub": [
        ""
    ],
    "redis.commands.core.ScriptCommands.eval": [
        "",
        "",
        ""
    ],
    "redis.commands.core.ScriptCommands.evalsha": [
        "",
        "",
        ""
    ],
    "redis.commands.core.ScriptCommands.script_exists": [
        ""
    ],
    "redis.commands.core.ScriptCommands.script_debug": [
        ""
    ],
    "redis.commands.core.ScriptCommands.script_flush": [
        "",
        "Incomplete | None"
    ],
    "redis.commands.core.ScriptCommands.script_kill": [
        ""
    ],
    "redis.commands.core.ScriptCommands.script_load": [
        "",
        ""
    ],
    "redis.commands.core.ScriptCommands.register_script": [
        "",
        "str | _StrType"
    ],
    "redis.commands.core.AsyncScriptCommands.register_script": [
        "",
        "ScriptTextT"
    ],
    "redis.commands.core.GeoCommands.geoadd": [
        "",
        "",
        "",
        "bool",
        "bool",
        "bool"
    ],
    "redis.commands.core.GeoCommands.geodist": [
        "",
        "",
        "",
        "",
        "Incomplete | None"
    ],
    "redis.commands.core.GeoCommands.geohash": [
        "",
        ""
    ],
    "redis.commands.core.GeoCommands.geopos": [
        "",
        ""
    ],
    "redis.commands.core.GeoCommands.georadius": [
        "",
        "",
        "",
        "",
        "",
        "Incomplete | None",
        "bool",
        "bool",
        "bool",
        "Incomplete | None",
        "Incomplete | None",
        "Incomplete | None",
        "Incomplete | None",
        "bool"
    ],
    "redis.commands.core.GeoCommands.georadiusbymember": [
        "",
        "",
        "",
        "",
        "Incomplete | None",
        "bool",
        "bool",
        "bool",
        "Incomplete | None",
        "Incomplete | None",
        "Incomplete | None",
        "Incomplete | None",
        "bool"
    ],
    "redis.commands.core.GeoCommands.geosearch": [
        "",
        "",
        "Incomplete | None",
        "Incomplete | None",
        "Incomplete | None",
        "str",
        "Incomplete | None",
        "Incomplete | None",
        "Incomplete | None",
        "Incomplete | None",
        "Incomplete | None",
        "bool",
        "bool",
        "bool",
        "bool"
    ],
    "redis.commands.core.GeoCommands.geosearchstore": [
        "",
        "",
        "",
        "Incomplete | None",
        "Incomplete | None",
        "Incomplete | None",
        "str",
        "Incomplete | None",
        "Incomplete | None",
        "Incomplete | None",
        "Incomplete | None",
        "Incomplete | None",
        "bool",
        "bool"
    ],
    "redis.commands.core.ModuleCommands.module_load": [
        "",
        ""
    ],
    "redis.commands.core.ModuleCommands.module_unload": [
        "",
        ""
    ],
    "redis.commands.core.ModuleCommands.module_list": [
        ""
    ],
    "redis.commands.core.ModuleCommands.command_info": [
        ""
    ],
    "redis.commands.core.ModuleCommands.command_count": [
        ""
    ],
    "redis.commands.core.ModuleCommands.command_getkeys": [
        ""
    ],
    "redis.commands.core.ModuleCommands.command": [
        ""
    ],
    "redis.commands.core.Script.__init__": [
        "",
        "",
        ""
    ],
    "redis.commands.core.Script.__call__": [
        "",
        "",
        "",
        "Incomplete | None"
    ],
    "redis.commands.core.BitFieldOperation.__init__": [
        "",
        "",
        "",
        "Incomplete | None"
    ],
    "redis.commands.core.BitFieldOperation.reset": [
        ""
    ],
    "redis.commands.core.BitFieldOperation.overflow": [
        "",
        ""
    ],
    "redis.commands.core.BitFieldOperation.incrby": [
        "",
        "",
        "",
        "",
        "Incomplete | None"
    ],
    "redis.commands.core.BitFieldOperation.get": [
        "",
        "",
        ""
    ],
    "redis.commands.core.BitFieldOperation.set": [
        "",
        "",
        "",
        ""
    ],
    "redis.commands.core.BitFieldOperation.command": [
        ""
    ],
    "redis.commands.core.BitFieldOperation.execute": [
        ""
    ],
    "redis.commands.core.ClusterCommands.cluster": [
        "",
        "str"
    ],
    "redis.commands.core.ClusterCommands.readwrite": [
        ""
    ],
    "redis.commands.core.ClusterCommands.readonly": [
        ""
    ],
    "redis.commands.core.FunctionCommands.function_load": [
        "",
        "str",
        "bool | None"
    ],
    "redis.commands.core.FunctionCommands.function_delete": [
        "",
        "str"
    ],
    "redis.commands.core.FunctionCommands.function_flush": [
        "",
        "str"
    ],
    "redis.commands.core.FunctionCommands.function_list": [
        "",
        "str | None",
        "bool | None"
    ],
    "redis.commands.core.FunctionCommands.fcall": [
        "",
        "",
        "int"
    ],
    "redis.commands.core.FunctionCommands.fcall_ro": [
        "",
        "",
        "int"
    ],
    "redis.commands.core.FunctionCommands.function_dump": [
        ""
    ],
    "redis.commands.core.FunctionCommands.function_restore": [
        "",
        "str",
        "str | None"
    ],
    "redis.commands.core.FunctionCommands.function_kill": [
        ""
    ],
    "redis.commands.core.FunctionCommands.function_stats": [
        ""
    ],
    "redis.commands.timeseries.commands.TimeSeriesCommands.create": [
        "",
        "_Key",
        "int | None",
        "bool | None",
        "dict[str, str] | None",
        "int | None",
        "str | None"
    ],
    "redis.commands.timeseries.commands.TimeSeriesCommands.alter": [
        "",
        "_Key",
        "int | None",
        "dict[str, str] | None",
        "int | None",
        "str | None"
    ],
    "redis.commands.timeseries.commands.TimeSeriesCommands.add": [
        "",
        "_Key",
        "int | str",
        "float",
        "int | None",
        "bool | None",
        "dict[str, str] | None",
        "int | None",
        "str | None"
    ],
    "redis.commands.timeseries.commands.TimeSeriesCommands.madd": [
        "",
        ""
    ],
    "redis.commands.timeseries.commands.TimeSeriesCommands.incrby": [
        "",
        "_Key",
        "float",
        "int | str | None",
        "int | None",
        "bool | None",
        "dict[str, str] | None",
        "int | None"
    ],
    "redis.commands.timeseries.commands.TimeSeriesCommands.decrby": [
        "",
        "_Key",
        "float",
        "int | str | None",
        "int | None",
        "bool | None",
        "dict[str, str] | None",
        "int | None"
    ],
    "redis.commands.timeseries.commands.TimeSeriesCommands.delete": [
        "",
        "",
        "",
        ""
    ],
    "redis.commands.timeseries.commands.TimeSeriesCommands.createrule": [
        "",
        "_Key",
        "_Key",
        "str",
        "int",
        "int | None"
    ],
    "redis.commands.timeseries.commands.TimeSeriesCommands.deleterule": [
        "",
        "",
        ""
    ],
    "redis.commands.timeseries.commands.TimeSeriesCommands.range": [
        "",
        "_Key",
        "int | str",
        "int | str",
        "int | None",
        "str | None",
        "int | None",
        "list[int] | None",
        "int | None",
        "int | None",
        "int | str | None",
        "bool | None",
        "str | None",
        "bool | None"
    ],
    "redis.commands.timeseries.commands.TimeSeriesCommands.revrange": [
        "",
        "_Key",
        "int | str",
        "int | str",
        "int | None",
        "str | None",
        "int | None",
        "list[int] | None",
        "int | None",
        "int | None",
        "int | str | None",
        "bool | None",
        "str | None",
        "bool | None"
    ],
    "redis.commands.timeseries.commands.TimeSeriesCommands.mrange": [
        "",
        "int | str",
        "int | str",
        "list[str]",
        "int | None",
        "str | None",
        "int | None",
        "bool | None",
        "list[int] | None",
        "int | None",
        "int | None",
        "str | None",
        "str | None",
        "list[str] | None",
        "int | str | None",
        "bool | None",
        "str | None",
        "bool | None"
    ],
    "redis.commands.timeseries.commands.TimeSeriesCommands.mrevrange": [
        "",
        "int | str",
        "int | str",
        "list[str]",
        "int | None",
        "str | None",
        "int | None",
        "bool | None",
        "list[int] | None",
        "int | None",
        "int | None",
        "str | None",
        "str | None",
        "list[str] | None",
        "int | str | None",
        "bool | None",
        "str | None",
        "bool | None"
    ],
    "redis.commands.timeseries.commands.TimeSeriesCommands.get": [
        "",
        "_Key",
        "bool | None"
    ],
    "redis.commands.timeseries.commands.TimeSeriesCommands.mget": [
        "",
        "list[str]",
        "bool | None",
        "list[str] | None",
        "bool | None"
    ],
    "redis.commands.timeseries.commands.TimeSeriesCommands.info": [
        "",
        ""
    ],
    "redis.commands.timeseries.commands.TimeSeriesCommands.queryindex": [
        "",
        ""
    ],
    "redis.commands.timeseries.__init__.TimeSeries.__init__": [
        "",
        "Incomplete | None"
    ],
    "redis.commands.timeseries.__init__.TimeSeries.pipeline": [
        "",
        "bool",
        "Incomplete | None"
    ],
    "redis.commands.timeseries.utils.list_to_dict": [
        ""
    ],
    "redis.commands.timeseries.utils.parse_range": [
        ""
    ],
    "redis.commands.timeseries.utils.parse_m_range": [
        ""
    ],
    "redis.commands.timeseries.utils.parse_get": [
        ""
    ],
    "redis.commands.timeseries.utils.parse_m_get": [
        ""
    ],
    "redis.commands.timeseries.info.TSInfo.__init__": [
        "",
        ""
    ],
    "redis.commands.bf.commands.BFCommands.create": [
        "",
        "",
        "",
        "",
        "Incomplete | None",
        "Incomplete | None"
    ],
    "redis.commands.bf.commands.BFCommands.add": [
        "",
        "",
        ""
    ],
    "redis.commands.bf.commands.BFCommands.madd": [
        "",
        ""
    ],
    "redis.commands.bf.commands.BFCommands.insert": [
        "",
        "",
        "",
        "Incomplete | None",
        "Incomplete | None",
        "Incomplete | None",
        "Incomplete | None",
        "Incomplete | None"
    ],
    "redis.commands.bf.commands.BFCommands.exists": [
        "",
        "",
        ""
    ],
    "redis.commands.bf.commands.BFCommands.mexists": [
        "",
        ""
    ],
    "redis.commands.bf.commands.BFCommands.scandump": [
        "",
        "",
        ""
    ],
    "redis.commands.bf.commands.BFCommands.loadchunk": [
        "",
        "",
        "",
        ""
    ],
    "redis.commands.bf.commands.BFCommands.info": [
        "",
        ""
    ],
    "redis.commands.bf.commands.CFCommands.create": [
        "",
        "",
        "",
        "Incomplete | None",
        "Incomplete | None",
        "Incomplete | None"
    ],
    "redis.commands.bf.commands.CFCommands.add": [
        "",
        "",
        ""
    ],
    "redis.commands.bf.commands.CFCommands.addnx": [
        "",
        "",
        ""
    ],
    "redis.commands.bf.commands.CFCommands.insert": [
        "",
        "",
        "",
        "Incomplete | None",
        "Incomplete | None"
    ],
    "redis.commands.bf.commands.CFCommands.insertnx": [
        "",
        "",
        "",
        "Incomplete | None",
        "Incomplete | None"
    ],
    "redis.commands.bf.commands.CFCommands.exists": [
        "",
        "",
        ""
    ],
    "redis.commands.bf.commands.CFCommands.delete": [
        "",
        "",
        ""
    ],
    "redis.commands.bf.commands.CFCommands.count": [
        "",
        "",
        ""
    ],
    "redis.commands.bf.commands.CFCommands.scandump": [
        "",
        "",
        ""
    ],
    "redis.commands.bf.commands.CFCommands.loadchunk": [
        "",
        "",
        "",
        ""
    ],
    "redis.commands.bf.commands.CFCommands.info": [
        "",
        ""
    ],
    "redis.commands.bf.commands.TOPKCommands.reserve": [
        "",
        "",
        "",
        "",
        "",
        ""
    ],
    "redis.commands.bf.commands.TOPKCommands.add": [
        "",
        ""
    ],
    "redis.commands.bf.commands.TOPKCommands.incrby": [
        "",
        "",
        "",
        ""
    ],
    "redis.commands.bf.commands.TOPKCommands.query": [
        "",
        ""
    ],
    "redis.commands.bf.commands.TOPKCommands.count": [
        "",
        ""
    ],
    "redis.commands.bf.commands.TOPKCommands.list": [
        "",
        "",
        "bool"
    ],
    "redis.commands.bf.commands.TOPKCommands.info": [
        "",
        ""
    ],
    "redis.commands.bf.commands.TDigestCommands.create": [
        "",
        "",
        "int"
    ],
    "redis.commands.bf.commands.TDigestCommands.reset": [
        "",
        ""
    ],
    "redis.commands.bf.commands.TDigestCommands.add": [
        "",
        "",
        ""
    ],
    "redis.commands.bf.commands.TDigestCommands.merge": [
        "",
        "",
        ""
    ],
    "redis.commands.bf.commands.TDigestCommands.min": [
        "",
        ""
    ],
    "redis.commands.bf.commands.TDigestCommands.max": [
        "",
        ""
    ],
    "redis.commands.bf.commands.TDigestCommands.quantile": [
        "",
        "",
        ""
    ],
    "redis.commands.bf.commands.TDigestCommands.cdf": [
        "",
        "",
        ""
    ],
    "redis.commands.bf.commands.TDigestCommands.info": [
        "",
        ""
    ],
    "redis.commands.bf.commands.CMSCommands.initbydim": [
        "",
        "",
        "",
        ""
    ],
    "redis.commands.bf.commands.CMSCommands.initbyprob": [
        "",
        "",
        "",
        ""
    ],
    "redis.commands.bf.commands.CMSCommands.incrby": [
        "",
        "",
        "",
        ""
    ],
    "redis.commands.bf.commands.CMSCommands.query": [
        "",
        ""
    ],
    "redis.commands.bf.commands.CMSCommands.merge": [
        "",
        "",
        "",
        "",
        ""
    ],
    "redis.commands.bf.commands.CMSCommands.info": [
        "",
        ""
    ],
    "redis.commands.bf.__init__.AbstractBloom.append_items": [
        "",
        ""
    ],
    "redis.commands.bf.__init__.AbstractBloom.append_error": [
        "",
        ""
    ],
    "redis.commands.bf.__init__.AbstractBloom.append_capacity": [
        "",
        ""
    ],
    "redis.commands.bf.__init__.AbstractBloom.append_expansion": [
        "",
        ""
    ],
    "redis.commands.bf.__init__.AbstractBloom.append_no_scale": [
        "",
        ""
    ],
    "redis.commands.bf.__init__.AbstractBloom.append_weights": [
        "",
        ""
    ],
    "redis.commands.bf.__init__.AbstractBloom.append_no_create": [
        "",
        ""
    ],
    "redis.commands.bf.__init__.AbstractBloom.append_items_and_increments": [
        "",
        "",
        ""
    ],
    "redis.commands.bf.__init__.AbstractBloom.append_values_and_weights": [
        "",
        "",
        ""
    ],
    "redis.commands.bf.__init__.AbstractBloom.append_max_iterations": [
        "",
        ""
    ],
    "redis.commands.bf.__init__.AbstractBloom.append_bucket_size": [
        "",
        ""
    ],
    "redis.commands.bf.__init__.CMSBloom.__init__": [
        "",
        ""
    ],
    "redis.commands.bf.__init__.TOPKBloom.__init__": [
        "",
        ""
    ],
    "redis.commands.bf.__init__.CFBloom.__init__": [
        "",
        ""
    ],
    "redis.commands.bf.__init__.TDigestBloom.__init__": [
        "",
        ""
    ],
    "redis.commands.bf.__init__.BFBloom.__init__": [
        "",
        ""
    ],
    "redis.commands.bf.info.BFInfo.__init__": [
        "",
        ""
    ],
    "redis.commands.bf.info.CFInfo.__init__": [
        "",
        ""
    ],
    "redis.commands.bf.info.CMSInfo.__init__": [
        "",
        ""
    ],
    "redis.commands.bf.info.TopKInfo.__init__": [
        "",
        ""
    ],
    "redis.commands.bf.info.TDigestInfo.__init__": [
        "",
        ""
    ],
    "redis.commands.redismodules.RedisModuleCommands.json": [
        "",
        "",
        ""
    ],
    "redis.commands.redismodules.RedisModuleCommands.ft": [
        "",
        "str"
    ],
    "redis.commands.redismodules.RedisModuleCommands.ts": [
        ""
    ],
    "redis.commands.redismodules.RedisModuleCommands.bf": [
        ""
    ],
    "redis.commands.redismodules.RedisModuleCommands.cf": [
        ""
    ],
    "redis.commands.redismodules.RedisModuleCommands.cms": [
        ""
    ],
    "redis.commands.redismodules.RedisModuleCommands.topk": [
        ""
    ],
    "redis.commands.redismodules.RedisModuleCommands.tdigest": [
        ""
    ],
    "redis.commands.redismodules.RedisModuleCommands.graph": [
        "",
        "str"
    ],
    "redis.commands.graph.edge.Edge.__init__": [
        "",
        "",
        "",
        "",
        "Incomplete | None",
        "Incomplete | None"
    ],
    "redis.commands.graph.edge.Edge.to_string": [
        ""
    ],
    "redis.commands.graph.edge.Edge.__eq__": [
        "",
        ""
    ],
    "redis.commands.graph.commands.GraphCommands.commit": [
        ""
    ],
    "redis.commands.graph.commands.GraphCommands.query": [
        "",
        "",
        "Incomplete | None",
        "Incomplete | None",
        "bool",
        "bool"
    ],
    "redis.commands.graph.commands.GraphCommands.merge": [
        "",
        ""
    ],
    "redis.commands.graph.commands.GraphCommands.delete": [
        ""
    ],
    "redis.commands.graph.commands.GraphCommands.flush": [
        ""
    ],
    "redis.commands.graph.commands.GraphCommands.explain": [
        "",
        "",
        "Incomplete | None"
    ],
    "redis.commands.graph.commands.GraphCommands.bulk": [
        ""
    ],
    "redis.commands.graph.commands.GraphCommands.profile": [
        "",
        ""
    ],
    "redis.commands.graph.commands.GraphCommands.slowlog": [
        ""
    ],
    "redis.commands.graph.commands.GraphCommands.config": [
        "",
        "",
        "Incomplete | None",
        "bool"
    ],
    "redis.commands.graph.commands.GraphCommands.list_keys": [
        ""
    ],
    "redis.commands.graph.__init__.Graph.__init__": [
        "",
        "",
        ""
    ],
    "redis.commands.graph.__init__.Graph.name": [
        ""
    ],
    "redis.commands.graph.__init__.Graph.get_label": [
        "",
        ""
    ],
    "redis.commands.graph.__init__.Graph.get_relation": [
        "",
        ""
    ],
    "redis.commands.graph.__init__.Graph.get_property": [
        "",
        ""
    ],
    "redis.commands.graph.__init__.Graph.add_node": [
        "",
        ""
    ],
    "redis.commands.graph.__init__.Graph.add_edge": [
        "",
        ""
    ],
    "redis.commands.graph.__init__.Graph.call_procedure": [
        "",
        ""
    ],
    "redis.commands.graph.__init__.Graph.labels": [
        ""
    ],
    "redis.commands.graph.__init__.Graph.relationship_types": [
        ""
    ],
    "redis.commands.graph.__init__.Graph.property_keys": [
        ""
    ],
    "redis.commands.graph.node.Node.__init__": [
        "",
        "Incomplete | None",
        "Incomplete | None",
        "str | list[str] | None",
        "Incomplete | None"
    ],
    "redis.commands.graph.node.Node.to_string": [
        ""
    ],
    "redis.commands.graph.node.Node.__eq__": [
        "",
        ""
    ],
    "redis.commands.graph.exceptions.VersionMismatchException.__init__": [
        "",
        ""
    ],
    "redis.commands.graph.path.Path.__init__": [
        "",
        "",
        ""
    ],
    "redis.commands.graph.path.Path.new_empty_path": [
        ""
    ],
    "redis.commands.graph.path.Path.nodes": [
        ""
    ],
    "redis.commands.graph.path.Path.edges": [
        ""
    ],
    "redis.commands.graph.path.Path.get_node": [
        "",
        ""
    ],
    "redis.commands.graph.path.Path.get_relationship": [
        "",
        ""
    ],
    "redis.commands.graph.path.Path.first_node": [
        ""
    ],
    "redis.commands.graph.path.Path.last_node": [
        ""
    ],
    "redis.commands.graph.path.Path.edge_count": [
        ""
    ],
    "redis.commands.graph.path.Path.nodes_count": [
        ""
    ],
    "redis.commands.graph.path.Path.add_node": [
        "",
        ""
    ],
    "redis.commands.graph.path.Path.add_edge": [
        "",
        ""
    ],
    "redis.commands.graph.path.Path.__eq__": [
        "",
        ""
    ],
    "redis.commands.graph.query_result.QueryResult.__init__": [
        "",
        "",
        "",
        "bool"
    ],
    "redis.commands.graph.query_result.QueryResult.parse_results": [
        "",
        ""
    ],
    "redis.commands.graph.query_result.QueryResult.parse_statistics": [
        "",
        ""
    ],
    "redis.commands.graph.query_result.QueryResult.parse_header": [
        "",
        ""
    ],
    "redis.commands.graph.query_result.QueryResult.parse_records": [
        "",
        ""
    ],
    "redis.commands.graph.query_result.QueryResult.parse_entity_properties": [
        "",
        ""
    ],
    "redis.commands.graph.query_result.QueryResult.parse_string": [
        "",
        ""
    ],
    "redis.commands.graph.query_result.QueryResult.parse_node": [
        "",
        ""
    ],
    "redis.commands.graph.query_result.QueryResult.parse_edge": [
        "",
        ""
    ],
    "redis.commands.graph.query_result.QueryResult.parse_path": [
        "",
        ""
    ],
    "redis.commands.graph.query_result.QueryResult.parse_map": [
        "",
        ""
    ],
    "redis.commands.graph.query_result.QueryResult.parse_point": [
        "",
        ""
    ],
    "redis.commands.graph.query_result.QueryResult.parse_scalar": [
        "",
        ""
    ],
    "redis.commands.graph.query_result.QueryResult.parse_profile": [
        "",
        ""
    ],
    "redis.commands.graph.query_result.QueryResult.is_empty": [
        ""
    ],
    "redis.commands.graph.query_result.QueryResult.labels_added": [
        ""
    ],
    "redis.commands.graph.query_result.QueryResult.nodes_created": [
        ""
    ],
    "redis.commands.graph.query_result.QueryResult.nodes_deleted": [
        ""
    ],
    "redis.commands.graph.query_result.QueryResult.properties_set": [
        ""
    ],
    "redis.commands.graph.query_result.QueryResult.relationships_created": [
        ""
    ],
    "redis.commands.graph.query_result.QueryResult.relationships_deleted": [
        ""
    ],
    "redis.commands.graph.query_result.QueryResult.indices_created": [
        ""
    ],
    "redis.commands.graph.query_result.QueryResult.indices_deleted": [
        ""
    ],
    "redis.commands.graph.query_result.QueryResult.cached_execution": [
        ""
    ],
    "redis.commands.graph.query_result.QueryResult.run_time_ms": [
        ""
    ],
    "redis.commands.helpers.list_or_args": [
        "",
        ""
    ],
    "redis.commands.helpers.nativestr": [
        ""
    ],
    "redis.commands.helpers.delist": [
        ""
    ],
    "redis.commands.helpers.parse_to_list": [
        ""
    ],
    "redis.commands.helpers.parse_list_to_dict": [
        ""
    ],
    "redis.commands.helpers.parse_to_dict": [
        ""
    ],
    "redis.commands.helpers.random_string": [
        "int"
    ],
    "redis.commands.helpers.quote_string": [
        ""
    ],
    "redis.commands.helpers.decode_dict_keys": [
        ""
    ],
    "redis.commands.helpers.stringify_param_value": [
        ""
    ],
    "redis.commands.sentinel.SentinelCommands.sentinel": [
        ""
    ],
    "redis.commands.sentinel.SentinelCommands.sentinel_get_master_addr_by_name": [
        "",
        ""
    ],
    "redis.commands.sentinel.SentinelCommands.sentinel_master": [
        "",
        ""
    ],
    "redis.commands.sentinel.SentinelCommands.sentinel_masters": [
        ""
    ],
    "redis.commands.sentinel.SentinelCommands.sentinel_monitor": [
        "",
        "",
        "",
        "",
        ""
    ],
    "redis.commands.sentinel.SentinelCommands.sentinel_remove": [
        "",
        ""
    ],
    "redis.commands.sentinel.SentinelCommands.sentinel_sentinels": [
        "",
        ""
    ],
    "redis.commands.sentinel.SentinelCommands.sentinel_set": [
        "",
        "",
        "",
        ""
    ],
    "redis.commands.sentinel.SentinelCommands.sentinel_slaves": [
        "",
        ""
    ],
    "redis.commands.sentinel.SentinelCommands.sentinel_reset": [
        "",
        ""
    ],
    "redis.commands.sentinel.SentinelCommands.sentinel_failover": [
        "",
        ""
    ],
    "redis.commands.sentinel.SentinelCommands.sentinel_ckquorum": [
        "",
        ""
    ],
    "redis.commands.sentinel.SentinelCommands.sentinel_flushconfig": [
        ""
    ],
    "redis.commands.search.result.Result.__init__": [
        "",
        "",
        "",
        "int",
        "bool",
        "bool"
    ],
    "redis.commands.search.query.Query.__init__": [
        "",
        ""
    ],
    "redis.commands.search.query.Query.query_string": [
        ""
    ],
    "redis.commands.search.query.Query.limit_ids": [
        ""
    ],
    "redis.commands.search.query.Query.return_fields": [
        ""
    ],
    "redis.commands.search.query.Query.return_field": [
        "",
        "",
        "Incomplete | None"
    ],
    "redis.commands.search.query.Query.summarize": [
        "",
        "Incomplete | None",
        "Incomplete | None",
        "Incomplete | None",
        "Incomplete | None"
    ],
    "redis.commands.search.query.Query.highlight": [
        "",
        "Incomplete | None",
        "Incomplete | None"
    ],
    "redis.commands.search.query.Query.language": [
        "",
        ""
    ],
    "redis.commands.search.query.Query.slop": [
        "",
        ""
    ],
    "redis.commands.search.query.Query.in_order": [
        ""
    ],
    "redis.commands.search.query.Query.scorer": [
        "",
        ""
    ],
    "redis.commands.search.query.Query.get_args": [
        ""
    ],
    "redis.commands.search.query.Query.paging": [
        "",
        "",
        ""
    ],
    "redis.commands.search.query.Query.verbatim": [
        ""
    ],
    "redis.commands.search.query.Query.no_content": [
        ""
    ],
    "redis.commands.search.query.Query.no_stopwords": [
        ""
    ],
    "redis.commands.search.query.Query.with_payloads": [
        ""
    ],
    "redis.commands.search.query.Query.with_scores": [
        ""
    ],
    "redis.commands.search.query.Query.limit_fields": [
        ""
    ],
    "redis.commands.search.query.Query.add_filter": [
        "",
        ""
    ],
    "redis.commands.search.query.Query.sort_by": [
        "",
        "",
        "bool"
    ],
    "redis.commands.search.query.Query.expander": [
        "",
        ""
    ],
    "redis.commands.search.query.Filter.__init__": [
        "",
        "",
        ""
    ],
    "redis.commands.search.query.NumericFilter.__init__": [
        "",
        "",
        "",
        "",
        "bool",
        "bool"
    ],
    "redis.commands.search.query.GeoFilter.__init__": [
        "",
        "",
        "",
        "",
        "",
        ""
    ],
    "redis.commands.search.query.SortbyField.__init__": [
        "",
        "",
        "bool"
    ],
    "redis.commands.search.aggregation.Limit.__init__": [
        "",
        "int",
        "int"
    ],
    "redis.commands.search.aggregation.Limit.build_args": [
        ""
    ],
    "redis.commands.search.aggregation.Reducer.__init__": [
        ""
    ],
    "redis.commands.search.aggregation.Reducer.alias": [
        "",
        ""
    ],
    "redis.commands.search.aggregation.Reducer.args": [
        ""
    ],
    "redis.commands.search.aggregation.SortDirection.__init__": [
        "",
        ""
    ],
    "redis.commands.search.aggregation.AggregateRequest.__init__": [
        "",
        "str"
    ],
    "redis.commands.search.aggregation.AggregateRequest.load": [
        ""
    ],
    "redis.commands.search.aggregation.AggregateRequest.group_by": [
        "",
        ""
    ],
    "redis.commands.search.aggregation.AggregateRequest.apply": [
        ""
    ],
    "redis.commands.search.aggregation.AggregateRequest.limit": [
        "",
        "",
        ""
    ],
    "redis.commands.search.aggregation.AggregateRequest.sort_by": [
        ""
    ],
    "redis.commands.search.aggregation.AggregateRequest.filter": [
        "",
        ""
    ],
    "redis.commands.search.aggregation.AggregateRequest.with_schema": [
        ""
    ],
    "redis.commands.search.aggregation.AggregateRequest.verbatim": [
        ""
    ],
    "redis.commands.search.aggregation.AggregateRequest.cursor": [
        "",
        "int",
        "float"
    ],
    "redis.commands.search.aggregation.AggregateRequest.build_args": [
        ""
    ],
    "redis.commands.search.aggregation.Cursor.__init__": [
        "",
        ""
    ],
    "redis.commands.search.aggregation.Cursor.build_args": [
        ""
    ],
    "redis.commands.search.aggregation.AggregateResult.__init__": [
        "",
        "",
        "",
        ""
    ],
    "redis.commands.search.__init__.Search.__init__": [
        "",
        "",
        "str"
    ],
    "redis.commands.search.commands.SearchCommands.batch_indexer": [
        "",
        "int"
    ],
    "redis.commands.search.commands.SearchCommands.create_index": [
        "",
        "",
        "bool",
        "bool",
        "Incomplete | None",
        "Incomplete | None",
        "bool",
        "Incomplete | None",
        "bool",
        "bool",
        "bool"
    ],
    "redis.commands.search.commands.SearchCommands.alter_schema_add": [
        "",
        ""
    ],
    "redis.commands.search.commands.SearchCommands.dropindex": [
        "",
        "bool"
    ],
    "redis.commands.search.commands.SearchCommands.add_document": [
        "",
        "",
        "bool",
        "float",
        "Incomplete | None",
        "bool",
        "bool",
        "Incomplete | None",
        "bool"
    ],
    "redis.commands.search.commands.SearchCommands.add_document_hash": [
        "",
        "",
        "float",
        "Incomplete | None",
        "bool"
    ],
    "redis.commands.search.commands.SearchCommands.delete_document": [
        "",
        "",
        "Incomplete | None",
        "bool"
    ],
    "redis.commands.search.commands.SearchCommands.load_document": [
        "",
        ""
    ],
    "redis.commands.search.commands.SearchCommands.get": [
        ""
    ],
    "redis.commands.search.commands.SearchCommands.info": [
        ""
    ],
    "redis.commands.search.commands.SearchCommands.get_params_args": [
        "",
        "_QueryParams"
    ],
    "redis.commands.search.commands.SearchCommands.search": [
        "",
        "str | Query",
        "_QueryParams | None"
    ],
    "redis.commands.search.commands.SearchCommands.explain": [
        "",
        "str | Query",
        "_QueryParams | None"
    ],
    "redis.commands.search.commands.SearchCommands.explain_cli": [
        "",
        ""
    ],
    "redis.commands.search.commands.SearchCommands.aggregate": [
        "",
        "AggregateRequest | Cursor",
        "_QueryParams | None"
    ],
    "redis.commands.search.commands.SearchCommands.profile": [
        "",
        "str | Query | AggregateRequest",
        "bool",
        "Mapping[str, str | float] | None"
    ],
    "redis.commands.search.commands.SearchCommands.spellcheck": [
        "",
        "",
        "Incomplete | None",
        "Incomplete | None",
        "Incomplete | None"
    ],
    "redis.commands.search.commands.SearchCommands.dict_add": [
        "",
        ""
    ],
    "redis.commands.search.commands.SearchCommands.dict_del": [
        "",
        ""
    ],
    "redis.commands.search.commands.SearchCommands.dict_dump": [
        "",
        ""
    ],
    "redis.commands.search.commands.SearchCommands.config_set": [
        "",
        "str",
        "str"
    ],
    "redis.commands.search.commands.SearchCommands.config_get": [
        "",
        "str"
    ],
    "redis.commands.search.commands.SearchCommands.tagvals": [
        "",
        ""
    ],
    "redis.commands.search.commands.SearchCommands.aliasadd": [
        "",
        ""
    ],
    "redis.commands.search.commands.SearchCommands.aliasupdate": [
        "",
        ""
    ],
    "redis.commands.search.commands.SearchCommands.aliasdel": [
        "",
        ""
    ],
    "redis.commands.search.commands.SearchCommands.sugadd": [
        "",
        ""
    ],
    "redis.commands.search.commands.SearchCommands.suglen": [
        "",
        ""
    ],
    "redis.commands.search.commands.SearchCommands.sugdel": [
        "",
        "",
        ""
    ],
    "redis.commands.search.commands.SearchCommands.sugget": [
        "",
        "",
        "",
        "bool",
        "int",
        "bool",
        "bool"
    ],
    "redis.commands.search.commands.SearchCommands.synupdate": [
        "",
        "",
        "bool"
    ],
    "redis.commands.search.commands.SearchCommands.syndump": [
        ""
    ],
    "redis.exceptions.ClusterDownError.__init__": [
        "",
        "str"
    ],
    "redis.exceptions.AskError.__init__": [
        "",
        "str"
    ],
    "redis.backoff.AbstractBackoff.reset": [
        ""
    ],
    "redis.backoff.AbstractBackoff.compute": [
        "",
        "int"
    ],
    "redis.backoff.ConstantBackoff.__init__": [
        "",
        "int"
    ],
    "redis.backoff.ConstantBackoff.compute": [
        "",
        "int"
    ],
    "redis.backoff.NoBackoff.__init__": [
        ""
    ],
    "redis.backoff.ExponentialBackoff.__init__": [
        "",
        "float",
        "float"
    ],
    "redis.backoff.ExponentialBackoff.compute": [
        "",
        "int"
    ],
    "redis.backoff.FullJitterBackoff.__init__": [
        "",
        "float",
        "float"
    ],
    "redis.backoff.FullJitterBackoff.compute": [
        "",
        "int"
    ],
    "redis.backoff.EqualJitterBackoff.__init__": [
        "",
        "float",
        "float"
    ],
    "redis.backoff.EqualJitterBackoff.compute": [
        "",
        "int"
    ],
    "redis.backoff.DecorrelatedJitterBackoff.__init__": [
        "",
        "float",
        "float"
    ],
    "redis.backoff.DecorrelatedJitterBackoff.compute": [
        "",
        "int"
    ],
    "redis.backoff.default_backoff": [],
    "redis.sentinel.SentinelManagedConnection.__init__": [
        ""
    ],
    "redis.sentinel.SentinelManagedConnection.connect_to": [
        "",
        "_AddressAndPort"
    ],
    "redis.sentinel.SentinelManagedConnection.connect": [
        ""
    ],
    "redis.sentinel.SentinelManagedConnection.read_response": [
        "",
        "bool"
    ],
    "redis.sentinel.SentinelConnectionPool.__init__": [
        "",
        "str",
        "Sentinel"
    ],
    "redis.sentinel.SentinelConnectionPool.reset": [
        ""
    ],
    "redis.sentinel.SentinelConnectionPool.owns_connection": [
        "",
        "Connection"
    ],
    "redis.sentinel.SentinelConnectionPool.get_master_address": [
        ""
    ],
    "redis.sentinel.SentinelConnectionPool.rotate_slaves": [
        ""
    ],
    "redis.sentinel.Sentinel.__init__": [
        "",
        "Iterable[_AddressAndPort]",
        "int",
        "dict[str, Any] | None"
    ],
    "redis.sentinel.Sentinel.check_master_state": [
        "",
        "_SentinelState",
        "str"
    ],
    "redis.sentinel.Sentinel.discover_master": [
        "",
        "str"
    ],
    "redis.sentinel.Sentinel.filter_slaves": [
        "",
        "Iterable[_SentinelState]"
    ],
    "redis.sentinel.Sentinel.discover_slaves": [
        "",
        "str"
    ],
    "redis.sentinel.Sentinel.master_for": [
        "",
        "str"
    ],
    "redis.sentinel.Sentinel.slave_for": [
        "",
        "str"
    ],
    "redis.sentinel.Sentinel.execute_command": [
        ""
    ],
    "redis.crc.key_slot": [
        "EncodedT",
        "int"
    ],
    "redis.client.CaseInsensitiveDict.__init__": [
        "",
        "SupportsItems[_StrType, _VT]"
    ],
    "redis.client.CaseInsensitiveDict.update": [
        "",
        "SupportsItems[_StrType, _VT]"
    ],
    "redis.client.CaseInsensitiveDict.get": [
        "",
        "_StrType",
        "None"
    ],
    "redis.client.Redis.from_url": [
        "",
        "str"
    ],
    "redis.client.Redis.__init__": [
        "Redis[str]",
        "str",
        "int",
        "int",
        "str | None",
        "float | None",
        "float | None",
        "bool | None",
        "Mapping[str, int | str] | None",
        "ConnectionPool | None",
        "str | None",
        "str",
        "str",
        "str | None",
        "str | None",
        "Literal[True]",
        "bool",
        "list[type[RedisError]] | None",
        "bool",
        "str | None",
        "str | None",
        "str | int | None",
        "str | None",
        "Incomplete | None",
        "Incomplete | None",
        "bool",
        "Incomplete | None",
        "bool",
        "bool",
        "Incomplete | None",
        "Incomplete | None",
        "int | None",
        "bool",
        "float",
        "str | None",
        "str | None",
        "Retry | None",
        "_ConnectFunc | None",
        "CredentialProvider | None"
    ],
    "redis.client.Redis.get_encoder": [
        ""
    ],
    "redis.client.Redis.get_connection_kwargs": [
        ""
    ],
    "redis.client.Redis.set_response_callback": [
        "",
        "",
        ""
    ],
    "redis.client.Redis.pipeline": [
        "",
        "bool",
        "Any"
    ],
    "redis.client.Redis.transaction": [
        "",
        ""
    ],
    "redis.client.Redis.lock": [
        "",
        "_Key",
        "float | None",
        "float",
        "bool",
        "float | None",
        "None",
        "bool"
    ],
    "redis.client.Redis.pubsub": [
        ""
    ],
    "redis.client.Redis.execute_command": [
        ""
    ],
    "redis.client.Redis.parse_response": [
        "",
        "",
        ""
    ],
    "redis.client.Redis.monitor": [
        ""
    ],
    "redis.client.Redis.__enter__": [
        ""
    ],
    "redis.client.Redis.__exit__": [
        "",
        "type[BaseException] | None",
        "BaseException | None",
        "TracebackType | None"
    ],
    "redis.client.Redis.__del__": [
        ""
    ],
    "redis.client.Redis.close": [
        ""
    ],
    "redis.client.Redis.client": [
        ""
    ],
    "redis.client.PubSub.__init__": [
        "",
        "",
        "Incomplete | None",
        "bool",
        "Incomplete | None"
    ],
    "redis.client.PubSub.__enter__": [
        ""
    ],
    "redis.client.PubSub.__exit__": [
        "",
        "type[BaseException] | None",
        "BaseException | None",
        "TracebackType | None"
    ],
    "redis.client.PubSub.__del__": [
        ""
    ],
    "redis.client.PubSub.reset": [
        ""
    ],
    "redis.client.PubSub.close": [
        ""
    ],
    "redis.client.PubSub.on_connect": [
        "",
        ""
    ],
    "redis.client.PubSub.subscribed": [
        ""
    ],
    "redis.client.PubSub.execute_command": [
        ""
    ],
    "redis.client.PubSub.clean_health_check_responses": [
        ""
    ],
    "redis.client.PubSub.parse_response": [
        "",
        "bool",
        "float"
    ],
    "redis.client.PubSub.is_health_check_response": [
        "",
        ""
    ],
    "redis.client.PubSub.check_health": [
        ""
    ],
    "redis.client.PubSub.psubscribe": [
        ""
    ],
    "redis.client.PubSub.punsubscribe": [
        ""
    ],
    "redis.client.PubSub.subscribe": [
        ""
    ],
    "redis.client.PubSub.unsubscribe": [
        ""
    ],
    "redis.client.PubSub.listen": [
        ""
    ],
    "redis.client.PubSub.get_message": [
        "",
        "bool",
        "float"
    ],
    "redis.client.PubSub.handle_message": [
        "",
        "",
        "bool"
    ],
    "redis.client.PubSub.run_in_thread": [
        "",
        "float",
        "bool",
        "Incomplete | None"
    ],
    "redis.client.PubSub.ping": [
        "",
        "_Value | None"
    ],
    "redis.client.PubSubWorkerThread.__init__": [
        "",
        "",
        "",
        "bool",
        "Incomplete | None"
    ],
    "redis.client.PubSubWorkerThread.run": [
        ""
    ],
    "redis.client.PubSubWorkerThread.stop": [
        ""
    ],
    "redis.client.Pipeline.__init__": [
        "",
        "",
        "",
        "",
        ""
    ],
    "redis.client.Pipeline.__enter__": [
        ""
    ],
    "redis.client.Pipeline.__exit__": [
        "",
        "type[BaseException] | None",
        "BaseException | None",
        "TracebackType | None"
    ],
    "redis.client.Pipeline.__del__": [
        ""
    ],
    "redis.client.Pipeline.__len__": [
        ""
    ],
    "redis.client.Pipeline.__bool__": [
        ""
    ],
    "redis.client.Pipeline.discard": [
        ""
    ],
    "redis.client.Pipeline.reset": [
        ""
    ],
    "redis.client.Pipeline.multi": [
        ""
    ],
    "redis.client.Pipeline.execute_command": [
        ""
    ],
    "redis.client.Pipeline.immediate_execute_command": [
        ""
    ],
    "redis.client.Pipeline.pipeline_execute_command": [
        ""
    ],
    "redis.client.Pipeline.raise_first_error": [
        "",
        "",
        ""
    ],
    "redis.client.Pipeline.annotate_exception": [
        "",
        "",
        "",
        ""
    ],
    "redis.client.Pipeline.parse_response": [
        "",
        "",
        ""
    ],
    "redis.client.Pipeline.load_scripts": [
        ""
    ],
    "redis.client.Pipeline.execute": [
        "",
        "bool"
    ],
    "redis.client.Pipeline.watch": [
        ""
    ],
    "redis.client.Pipeline.unwatch": [
        ""
    ],
    "redis.client.Pipeline.set_response_callback": [
        "",
        "",
        ""
    ],
    "redis.client.Pipeline.pipeline": [
        "",
        "bool",
        "Any"
    ],
    "redis.client.Pipeline.acl_cat": [
        "",
        "str | None"
    ],
    "redis.client.Pipeline.acl_deluser": [
        "",
        "str"
    ],
    "redis.client.Pipeline.acl_genpass": [
        "",
        "int | None"
    ],
    "redis.client.Pipeline.acl_getuser": [
        "",
        "str"
    ],
    "redis.client.Pipeline.acl_list": [
        ""
    ],
    "redis.client.Pipeline.acl_load": [
        ""
    ],
    "redis.client.Pipeline.acl_setuser": [
        "",
        "str",
        "bool",
        "bool",
        "Sequence[str] | None",
        "Sequence[str] | None",
        "Sequence[str] | None",
        "Sequence[str] | None",
        "Sequence[str] | None",
        "Iterable[ChannelT] | None",
        "Iterable[tuple[str, KeyT]] | None",
        "bool",
        "bool",
        "bool",
        "bool"
    ],
    "redis.client.Pipeline.acl_users": [
        ""
    ],
    "redis.client.Pipeline.acl_whoami": [
        ""
    ],
    "redis.client.Pipeline.bgrewriteaof": [
        ""
    ],
    "redis.client.Pipeline.bgsave": [
        "",
        "bool"
    ],
    "redis.client.Pipeline.client_id": [
        ""
    ],
    "redis.client.Pipeline.client_kill": [
        "",
        "str"
    ],
    "redis.client.Pipeline.client_list": [
        "",
        "str | None",
        "list[str]"
    ],
    "redis.client.Pipeline.client_getname": [
        ""
    ],
    "redis.client.Pipeline.client_setname": [
        "",
        "str"
    ],
    "redis.client.Pipeline.readwrite": [
        ""
    ],
    "redis.client.Pipeline.readonly": [
        ""
    ],
    "redis.client.Pipeline.config_get": [
        "",
        "PatternT"
    ],
    "redis.client.Pipeline.config_set": [
        "",
        "KeyT",
        "EncodableT"
    ],
    "redis.client.Pipeline.config_resetstat": [
        ""
    ],
    "redis.client.Pipeline.config_rewrite": [
        ""
    ],
    "redis.client.Pipeline.dbsize": [
        ""
    ],
    "redis.client.Pipeline.debug_object": [
        "",
        ""
    ],
    "redis.client.Pipeline.echo": [
        "",
        ""
    ],
    "redis.client.Pipeline.flushall": [
        "",
        "bool"
    ],
    "redis.client.Pipeline.flushdb": [
        "",
        "bool"
    ],
    "redis.client.Pipeline.info": [
        "",
        "_Key | None"
    ],
    "redis.client.Pipeline.lastsave": [
        ""
    ],
    "redis.client.Pipeline.object": [
        "",
        "",
        ""
    ],
    "redis.client.Pipeline.ping": [
        ""
    ],
    "redis.client.Pipeline.save": [
        ""
    ],
    "redis.client.Pipeline.sentinel_get_master_addr_by_name": [
        "",
        ""
    ],
    "redis.client.Pipeline.sentinel_master": [
        "",
        ""
    ],
    "redis.client.Pipeline.sentinel_masters": [
        ""
    ],
    "redis.client.Pipeline.sentinel_monitor": [
        "",
        "",
        "",
        "",
        ""
    ],
    "redis.client.Pipeline.sentinel_remove": [
        "",
        ""
    ],
    "redis.client.Pipeline.sentinel_sentinels": [
        "",
        ""
    ],
    "redis.client.Pipeline.sentinel_set": [
        "",
        "",
        "",
        ""
    ],
    "redis.client.Pipeline.sentinel_slaves": [
        "",
        ""
    ],
    "redis.client.Pipeline.slaveof": [
        "",
        "",
        ""
    ],
    "redis.client.Pipeline.slowlog_get": [
        "",
        ""
    ],
    "redis.client.Pipeline.slowlog_len": [
        ""
    ],
    "redis.client.Pipeline.slowlog_reset": [
        ""
    ],
    "redis.client.Pipeline.time": [
        ""
    ],
    "redis.client.Pipeline.append": [
        "",
        "",
        ""
    ],
    "redis.client.Pipeline.bitcount": [
        "",
        "_Key",
        "int | None",
        "int | None",
        "str | None"
    ],
    "redis.client.Pipeline.bitop": [
        "",
        "",
        ""
    ],
    "redis.client.Pipeline.bitpos": [
        "",
        "",
        "",
        "",
        "",
        "str | None"
    ],
    "redis.client.Pipeline.decr": [
        "",
        "",
        ""
    ],
    "redis.client.Pipeline.delete": [
        ""
    ],
    "redis.client.Pipeline.__delitem__": [
        "",
        ""
    ],
    "redis.client.Pipeline.dump": [
        "",
        ""
    ],
    "redis.client.Pipeline.exists": [
        ""
    ],
    "redis.client.Pipeline.__contains__": [
        ""
    ],
    "redis.client.Pipeline.expire": [
        "",
        "_Key",
        "int | timedelta",
        "bool",
        "bool",
        "bool",
        "bool"
    ],
    "redis.client.Pipeline.expireat": [
        "",
        "",
        "",
        "bool",
        "bool",
        "bool",
        "bool"
    ],
    "redis.client.Pipeline.get": [
        "",
        "_Key"
    ],
    "redis.client.Pipeline.__getitem__": [
        "",
        ""
    ],
    "redis.client.Pipeline.getbit": [
        "",
        "_Key",
        "int"
    ],
    "redis.client.Pipeline.getrange": [
        "",
        "",
        "",
        ""
    ],
    "redis.client.Pipeline.getset": [
        "",
        "",
        ""
    ],
    "redis.client.Pipeline.incr": [
        "",
        "",
        ""
    ],
    "redis.client.Pipeline.incrby": [
        "",
        "",
        ""
    ],
    "redis.client.Pipeline.incrbyfloat": [
        "",
        "",
        ""
    ],
    "redis.client.Pipeline.keys": [
        "",
        "_Key"
    ],
    "redis.client.Pipeline.mget": [
        "",
        "_Key | Iterable[_Key]"
    ],
    "redis.client.Pipeline.mset": [
        "",
        "Mapping[_Key, _Value]"
    ],
    "redis.client.Pipeline.msetnx": [
        "",
        "Mapping[_Key, _Value]"
    ],
    "redis.client.Pipeline.move": [
        "",
        "_Key",
        "int"
    ],
    "redis.client.Pipeline.persist": [
        "",
        "_Key"
    ],
    "redis.client.Pipeline.pexpire": [
        "",
        "_Key",
        "int | timedelta",
        "bool",
        "bool",
        "bool",
        "bool"
    ],
    "redis.client.Pipeline.pexpireat": [
        "",
        "_Key",
        "int | datetime",
        "bool",
        "bool",
        "bool",
        "bool"
    ],
    "redis.client.Pipeline.psetex": [
        "",
        "",
        "",
        ""
    ],
    "redis.client.Pipeline.pttl": [
        "",
        ""
    ],
    "redis.client.Pipeline.randomkey": [
        ""
    ],
    "redis.client.Pipeline.rename": [
        "",
        "",
        ""
    ],
    "redis.client.Pipeline.renamenx": [
        "",
        "",
        ""
    ],
    "redis.client.Pipeline.restore": [
        "",
        "",
        "",
        "",
        "bool",
        "bool",
        "Incomplete | None",
        "Incomplete | None"
    ],
    "redis.client.Pipeline.set": [
        "",
        "_Key",
        "_Value",
        "None | int | timedelta",
        "None | int | timedelta",
        "bool",
        "bool",
        "bool",
        "bool",
        "Incomplete | None",
        "Incomplete | None"
    ],
    "redis.client.Pipeline.__setitem__": [
        "",
        "",
        ""
    ],
    "redis.client.Pipeline.setbit": [
        "",
        "_Key",
        "int",
        "int"
    ],
    "redis.client.Pipeline.setex": [
        "",
        "_Key",
        "int | timedelta",
        "_Value"
    ],
    "redis.client.Pipeline.setnx": [
        "",
        "",
        ""
    ],
    "redis.client.Pipeline.setrange": [
        "",
        "",
        "",
        ""
    ],
    "redis.client.Pipeline.strlen": [
        "",
        ""
    ],
    "redis.client.Pipeline.substr": [
        "",
        "",
        "",
        ""
    ],
    "redis.client.Pipeline.ttl": [
        "",
        "_Key"
    ],
    "redis.client.Pipeline.type": [
        "",
        ""
    ],
    "redis.client.Pipeline.unlink": [
        ""
    ],
    "redis.client.Pipeline.blmove": [
        "",
        "_Key",
        "_Key",
        "float",
        "Literal[\"LEFT\", \"RIGHT\"]",
        "Literal[\"LEFT\", \"RIGHT\"]"
    ],
    "redis.client.Pipeline.blpop": [
        "",
        "_Value | Iterable[_Value]",
        "float"
    ],
    "redis.client.Pipeline.brpop": [
        "",
        "_Value | Iterable[_Value]",
        "float"
    ],
    "redis.client.Pipeline.brpoplpush": [
        "",
        "",
        "",
        ""
    ],
    "redis.client.Pipeline.lindex": [
        "",
        "_Key",
        "int"
    ],
    "redis.client.Pipeline.linsert": [
        "",
        "_Key",
        "Literal[\"BEFORE\", \"AFTER\", \"before\", \"after\"]",
        "_Value",
        "_Value"
    ],
    "redis.client.Pipeline.llen": [
        "",
        "_Key"
    ],
    "redis.client.Pipeline.lmove": [
        "",
        "_Key",
        "_Key",
        "Literal[\"LEFT\", \"RIGHT\"]",
        "Literal[\"LEFT\", \"RIGHT\"]"
    ],
    "redis.client.Pipeline.lpop": [
        "",
        "",
        "int | None"
    ],
    "redis.client.Pipeline.lpush": [
        "",
        "_Value"
    ],
    "redis.client.Pipeline.lpushx": [
        "",
        "",
        ""
    ],
    "redis.client.Pipeline.lrange": [
        "",
        "_Key",
        "int",
        "int"
    ],
    "redis.client.Pipeline.lrem": [
        "",
        "_Key",
        "int",
        "_Value"
    ],
    "redis.client.Pipeline.lset": [
        "",
        "_Key",
        "int",
        "_Value"
    ],
    "redis.client.Pipeline.ltrim": [
        "",
        "_Key",
        "int",
        "int"
    ],
    "redis.client.Pipeline.rpop": [
        "",
        "",
        "int | None"
    ],
    "redis.client.Pipeline.rpoplpush": [
        "",
        "",
        ""
    ],
    "redis.client.Pipeline.rpush": [
        "",
        "_Value"
    ],
    "redis.client.Pipeline.rpushx": [
        "",
        "",
        ""
    ],
    "redis.client.Pipeline.sort": [
        "",
        "_Key",
        "int | None",
        "int | None",
        "_Key | None",
        "_Key | Sequence[_Key] | None",
        "bool",
        "bool",
        "_Key | None",
        "bool"
    ],
    "redis.client.Pipeline.scan": [
        "",
        "int",
        "_Key | None",
        "int | None",
        "str | None"
    ],
    "redis.client.Pipeline.scan_iter": [
        "",
        "_Key | None",
        "int | None",
        "str | None"
    ],
    "redis.client.Pipeline.sscan": [
        "",
        "_Key",
        "int",
        "_Key | None",
        "int | None"
    ],
    "redis.client.Pipeline.sscan_iter": [
        "",
        "_Key",
        "_Key | None",
        "int | None"
    ],
    "redis.client.Pipeline.hscan": [
        "",
        "_Key",
        "int",
        "_Key | None",
        "int | None"
    ],
    "redis.client.Pipeline.hscan_iter": [
        "",
        "",
        "_Key | None",
        "int | None"
    ],
    "redis.client.Pipeline.zscan_iter": [
        "",
        "_Key",
        "_Key | None",
        "int | None",
        "Callable[[_StrType], Any]"
    ],
    "redis.client.Pipeline.sadd": [
        "",
        "_Key"
    ],
    "redis.client.Pipeline.scard": [
        "",
        "_Key"
    ],
    "redis.client.Pipeline.sdiff": [
        "",
        "_Key | Iterable[_Key]"
    ],
    "redis.client.Pipeline.sdiffstore": [
        "",
        "_Key",
        "_Key | Iterable[_Key]"
    ],
    "redis.client.Pipeline.sinter": [
        "",
        "_Key | Iterable[_Key]"
    ],
    "redis.client.Pipeline.sinterstore": [
        "",
        "_Key",
        "_Key | Iterable[_Key]"
    ],
    "redis.client.Pipeline.sismember": [
        "",
        "_Key",
        "_Value"
    ],
    "redis.client.Pipeline.smembers": [
        "",
        "_Key"
    ],
    "redis.client.Pipeline.smove": [
        "",
        "_Key",
        "_Key",
        "_Value"
    ],
    "redis.client.Pipeline.spop": [
        "",
        "_Key",
        "int | None"
    ],
    "redis.client.Pipeline.srandmember": [
        "",
        "_Key",
        "int | None"
    ],
    "redis.client.Pipeline.srem": [
        "",
        "_Key"
    ],
    "redis.client.Pipeline.sunion": [
        "",
        "_Key | Iterable[_Key]"
    ],
    "redis.client.Pipeline.sunionstore": [
        "",
        "_Key",
        "_Key | Iterable[_Key]"
    ],
    "redis.client.Pipeline.xack": [
        "",
        "",
        ""
    ],
    "redis.client.Pipeline.xadd": [
        "",
        "",
        "",
        "",
        "",
        "bool",
        "bool",
        "Incomplete | None",
        "int | None"
    ],
    "redis.client.Pipeline.xclaim": [
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        ""
    ],
    "redis.client.Pipeline.xdel": [
        "",
        ""
    ],
    "redis.client.Pipeline.xgroup_create": [
        "",
        "",
        "",
        "",
        "",
        "int | None"
    ],
    "redis.client.Pipeline.xgroup_delconsumer": [
        "",
        "",
        "",
        ""
    ],
    "redis.client.Pipeline.xgroup_destroy": [
        "",
        "",
        ""
    ],
    "redis.client.Pipeline.xgroup_setid": [
        "",
        "",
        "",
        "",
        "int | None"
    ],
    "redis.client.Pipeline.xinfo_consumers": [
        "",
        "",
        ""
    ],
    "redis.client.Pipeline.xinfo_groups": [
        "",
        ""
    ],
    "redis.client.Pipeline.xinfo_stream": [
        "",
        "",
        "bool"
    ],
    "redis.client.Pipeline.xlen": [
        "",
        "_Key"
    ],
    "redis.client.Pipeline.xpending": [
        "",
        "",
        ""
    ],
    "redis.client.Pipeline.xpending_range": [
        "",
        "_Key",
        "",
        "",
        "",
        "int",
        "Incomplete | None",
        "int | None"
    ],
    "redis.client.Pipeline.xrange": [
        "",
        "",
        "",
        "",
        ""
    ],
    "redis.client.Pipeline.xread": [
        "",
        "",
        "",
        ""
    ],
    "redis.client.Pipeline.xreadgroup": [
        "",
        "",
        "",
        "",
        "",
        "",
        ""
    ],
    "redis.client.Pipeline.xrevrange": [
        "",
        "",
        "",
        "",
        ""
    ],
    "redis.client.Pipeline.xtrim": [
        "",
        "",
        "int | None",
        "bool",
        "Incomplete | None",
        "int | None"
    ],
    "redis.client.Pipeline.zadd": [
        "",
        "_Key",
        "Mapping[_Key, _Value]",
        "bool",
        "bool",
        "bool",
        "bool",
        "Incomplete | None",
        "Incomplete | None"
    ],
    "redis.client.Pipeline.zcard": [
        "",
        "_Key"
    ],
    "redis.client.Pipeline.zcount": [
        "",
        "_Key",
        "_Value",
        "_Value"
    ],
    "redis.client.Pipeline.zincrby": [
        "",
        "_Key",
        "float",
        "_Value"
    ],
    "redis.client.Pipeline.zinterstore": [
        "",
        "_Key",
        "Iterable[_Key]",
        "Literal[\"SUM\", \"MIN\", \"MAX\"] | None"
    ],
    "redis.client.Pipeline.zlexcount": [
        "",
        "_Key",
        "_Value",
        "_Value"
    ],
    "redis.client.Pipeline.zpopmax": [
        "",
        "_Key",
        "int | None"
    ],
    "redis.client.Pipeline.zpopmin": [
        "",
        "_Key",
        "int | None"
    ],
    "redis.client.Pipeline.bzpopmax": [
        "",
        "_Key | Iterable[_Key]",
        "float"
    ],
    "redis.client.Pipeline.bzpopmin": [
        "",
        "_Key | Iterable[_Key]",
        "float"
    ],
    "redis.client.Pipeline.zrange": [
        "",
        "_Key",
        "int",
        "int",
        "bool",
        "bool",
        "Callable[[_StrType], Any]",
        "bool",
        "bool",
        "int | None",
        "int | None"
    ],
    "redis.client.Pipeline.zrangebylex": [
        "",
        "_Key",
        "_Value",
        "_Value",
        "int | None",
        "int | None"
    ],
    "redis.client.Pipeline.zrangebyscore": [
        "",
        "_Key",
        "_Value",
        "_Value",
        "int | None",
        "int | None",
        "bool",
        "Callable[[_StrType], Any]"
    ],
    "redis.client.Pipeline.zrank": [
        "",
        "_Key",
        "_Value",
        "bool"
    ],
    "redis.client.Pipeline.zrem": [
        "",
        "_Key"
    ],
    "redis.client.Pipeline.zremrangebylex": [
        "",
        "_Key",
        "_Value",
        "_Value"
    ],
    "redis.client.Pipeline.zremrangebyrank": [
        "",
        "_Key",
        "_Value",
        "_Value"
    ],
    "redis.client.Pipeline.zremrangebyscore": [
        "",
        "_Key",
        "_Value",
        "_Value"
    ],
    "redis.client.Pipeline.zrevrange": [
        "",
        "_Key",
        "int",
        "int",
        "bool",
        "Callable[[_StrType], Any]"
    ],
    "redis.client.Pipeline.zrevrangebyscore": [
        "",
        "_Key",
        "_Value",
        "_Value",
        "int | None",
        "int | None",
        "bool",
        "Callable[[_StrType], Any]"
    ],
    "redis.client.Pipeline.zrevrangebylex": [
        "",
        "_Key",
        "_Value",
        "_Value",
        "int | None",
        "int | None"
    ],
    "redis.client.Pipeline.zrevrank": [
        "",
        "_Key",
        "_Value",
        "bool"
    ],
    "redis.client.Pipeline.zscore": [
        "",
        "_Key",
        "_Value"
    ],
    "redis.client.Pipeline.zunionstore": [
        "",
        "_Key",
        "Iterable[_Key]",
        "Literal[\"SUM\", \"MIN\", \"MAX\"] | None"
    ],
    "redis.client.Pipeline.pfadd": [
        "",
        "_Key"
    ],
    "redis.client.Pipeline.pfcount": [
        "",
        "_Key"
    ],
    "redis.client.Pipeline.pfmerge": [
        "",
        "_Key"
    ],
    "redis.client.Pipeline.hdel": [
        "",
        "_Key"
    ],
    "redis.client.Pipeline.hexists": [
        "",
        "_Key",
        "_Key"
    ],
    "redis.client.Pipeline.hget": [
        "",
        "_Key",
        "_Key"
    ],
    "redis.client.Pipeline.hgetall": [
        "",
        "_Key"
    ],
    "redis.client.Pipeline.hincrby": [
        "",
        "_Key",
        "_Key",
        "int"
    ],
    "redis.client.Pipeline.hincrbyfloat": [
        "",
        "_Key",
        "_Key",
        "float"
    ],
    "redis.client.Pipeline.hkeys": [
        "",
        "_Key"
    ],
    "redis.client.Pipeline.hlen": [
        "",
        "_Key"
    ],
    "redis.client.Pipeline.hset": [
        "",
        "_Key",
        "_Key",
        "_Value",
        "Mapping[_Key, _Value] | None",
        "Incomplete | None"
    ],
    "redis.client.Pipeline.hsetnx": [
        "",
        "_Key",
        "_Key",
        "_Value"
    ],
    "redis.client.Pipeline.hmset": [
        "",
        "_Key",
        "Mapping[_Key, _Value]"
    ],
    "redis.client.Pipeline.hmget": [
        "",
        "_Key",
        "_Key | Iterable[_Key]"
    ],
    "redis.client.Pipeline.hvals": [
        "",
        "_Key"
    ],
    "redis.client.Pipeline.publish": [
        "",
        "_Key",
        "_Key"
    ],
    "redis.client.Pipeline.eval": [
        "",
        "",
        ""
    ],
    "redis.client.Pipeline.evalsha": [
        "",
        "",
        ""
    ],
    "redis.client.Pipeline.script_exists": [
        ""
    ],
    "redis.client.Pipeline.script_flush": [
        "",
        "Incomplete | None"
    ],
    "redis.client.Pipeline.script_kill": [
        ""
    ],
    "redis.client.Pipeline.script_load": [
        "",
        ""
    ],
    "redis.client.Pipeline.pubsub_channels": [
        "",
        "_Key"
    ],
    "redis.client.Pipeline.pubsub_numsub": [
        ""
    ],
    "redis.client.Pipeline.pubsub_numpat": [
        ""
    ],
    "redis.client.Pipeline.monitor": [
        ""
    ],
    "redis.client.Pipeline.cluster": [
        "",
        "str"
    ],
    "redis.client.Pipeline.client": [
        ""
    ],
    "redis.client.Monitor.__init__": [
        "",
        ""
    ],
    "redis.client.Monitor.__enter__": [
        ""
    ],
    "redis.client.Monitor.__exit__": [
        ""
    ],
    "redis.client.Monitor.next_command": [
        ""
    ],
    "redis.client.Monitor.listen": [
        ""
    ],
    "redis.client.list_or_args": [
        "",
        ""
    ],
    "redis.client.timestamp_to_datetime": [
        ""
    ],
    "redis.client.string_keys_to_dict": [
        "",
        ""
    ],
    "redis.client.parse_debug_object": [
        ""
    ],
    "redis.client.parse_object": [
        "",
        ""
    ],
    "redis.client.parse_info": [
        ""
    ],
    "redis.client.parse_sentinel_state": [
        ""
    ],
    "redis.client.parse_sentinel_master": [
        ""
    ],
    "redis.client.parse_sentinel_masters": [
        ""
    ],
    "redis.client.parse_sentinel_slaves_and_sentinels": [
        ""
    ],
    "redis.client.parse_sentinel_get_master": [
        ""
    ],
    "redis.client.pairs_to_dict": [
        "",
        "bool",
        "bool"
    ],
    "redis.client.pairs_to_dict_typed": [
        "",
        ""
    ],
    "redis.client.zset_score_pairs": [
        ""
    ],
    "redis.client.sort_return_tuples": [
        ""
    ],
    "redis.client.int_or_none": [
        ""
    ],
    "redis.client.float_or_none": [
        ""
    ],
    "redis.client.bool_ok": [
        ""
    ],
    "redis.client.parse_client_list": [
        ""
    ],
    "redis.client.parse_config_get": [
        ""
    ],
    "redis.client.parse_scan": [
        ""
    ],
    "redis.client.parse_hscan": [
        ""
    ],
    "redis.client.parse_zscan": [
        ""
    ],
    "redis.client.parse_slowlog_get": [
        ""
    ],
    "redis.connection.BaseParser.parse_error": [
        "",
        "str"
    ],
    "redis.connection.SocketBuffer.__init__": [
        "",
        "socket",
        "int",
        "float | None"
    ],
    "redis.connection.SocketBuffer.unread_bytes": [
        ""
    ],
    "redis.connection.SocketBuffer.can_read": [
        "",
        "float | None"
    ],
    "redis.connection.SocketBuffer.read": [
        "",
        "int"
    ],
    "redis.connection.SocketBuffer.readline": [
        ""
    ],
    "redis.connection.SocketBuffer.get_pos": [
        ""
    ],
    "redis.connection.SocketBuffer.rewind": [
        "",
        "int"
    ],
    "redis.connection.SocketBuffer.purge": [
        ""
    ],
    "redis.connection.SocketBuffer.close": [
        ""
    ],
    "redis.connection.PythonParser.__init__": [
        "",
        "int"
    ],
    "redis.connection.PythonParser.__del__": [
        ""
    ],
    "redis.connection.PythonParser.on_connect": [
        "",
        "Connection"
    ],
    "redis.connection.PythonParser.on_disconnect": [
        ""
    ],
    "redis.connection.PythonParser.can_read": [
        "",
        "float | None"
    ],
    "redis.connection.PythonParser.read_response": [
        "",
        "bool"
    ],
    "redis.connection.HiredisParser.__init__": [
        "",
        "int"
    ],
    "redis.connection.HiredisParser.__del__": [
        ""
    ],
    "redis.connection.HiredisParser.on_connect": [
        "",
        "Connection"
    ],
    "redis.connection.HiredisParser.on_disconnect": [
        ""
    ],
    "redis.connection.HiredisParser.can_read": [
        "",
        "float | None"
    ],
    "redis.connection.HiredisParser.read_from_socket": [
        "",
        "float | None",
        "bool"
    ],
    "redis.connection.HiredisParser.read_response": [
        "",
        "bool"
    ],
    "redis.connection.Encoder.__init__": [
        "",
        "str",
        "str",
        "bool"
    ],
    "redis.connection.Encoder.encode": [
        "",
        "_Encodable"
    ],
    "redis.connection.Encoder.decode": [
        "",
        "str | bytes | memoryview",
        "bool"
    ],
    "redis.connection.AbstractConnection.__init__": [
        "",
        "int",
        "str | None",
        "float | None",
        "float | None",
        "bool",
        "list[type[Exception]]",
        "str",
        "str",
        "bool",
        "type[BaseParser]",
        "int",
        "int",
        "str | None",
        "str | None",
        "Retry | None",
        "_ConnectFunc | None",
        "CredentialProvider | None",
        "Incomplete | None"
    ],
    "redis.connection.AbstractConnection.repr_pieces": [
        ""
    ],
    "redis.connection.AbstractConnection.register_connect_callback": [
        "",
        "_ConnectFunc"
    ],
    "redis.connection.AbstractConnection.clear_connect_callbacks": [
        ""
    ],
    "redis.connection.AbstractConnection.set_parser": [
        "",
        "type[BaseParser]"
    ],
    "redis.connection.AbstractConnection.connect": [
        ""
    ],
    "redis.connection.AbstractConnection.on_connect": [
        ""
    ],
    "redis.connection.AbstractConnection.disconnect": [
        ""
    ],
    "redis.connection.AbstractConnection.check_health": [
        ""
    ],
    "redis.connection.AbstractConnection.send_packed_command": [
        "",
        "str | Iterable[str]",
        "bool"
    ],
    "redis.connection.AbstractConnection.send_command": [
        ""
    ],
    "redis.connection.AbstractConnection.can_read": [
        "",
        "float | None"
    ],
    "redis.connection.AbstractConnection.read_response": [
        "",
        "bool"
    ],
    "redis.connection.AbstractConnection.pack_command": [
        ""
    ],
    "redis.connection.AbstractConnection.pack_commands": [
        "",
        "Iterable[Iterable[Incomplete]]"
    ],
    "redis.connection.Connection.__init__": [
        "",
        "str",
        "int",
        "bool",
        "Mapping[str, int | str] | None",
        "int"
    ],
    "redis.connection.Connection.repr_pieces": [
        ""
    ],
    "redis.connection.SSLConnection.__init__": [
        "",
        "",
        "",
        "",
        "",
        "Incomplete | None",
        "bool",
        "Incomplete | None",
        "Incomplete | None",
        "bool",
        "bool",
        "Incomplete | None",
        "Incomplete | None"
    ],
    "redis.connection.UnixDomainSocketConnection.__init__": [
        "",
        "str"
    ],
    "redis.connection.UnixDomainSocketConnection.repr_pieces": [
        ""
    ],
    "redis.connection.ConnectionPool.from_url": [
        "",
        "str"
    ],
    "redis.connection.ConnectionPool.__init__": [
        "",
        "type[AbstractConnection]",
        "int | None"
    ],
    "redis.connection.ConnectionPool.reset": [
        ""
    ],
    "redis.connection.ConnectionPool.get_connection": [
        "",
        "Unused"
    ],
    "redis.connection.ConnectionPool.make_connection": [
        ""
    ],
    "redis.connection.ConnectionPool.release": [
        "",
        "Connection"
    ],
    "redis.connection.ConnectionPool.disconnect": [
        "",
        "bool"
    ],
    "redis.connection.ConnectionPool.get_encoder": [
        ""
    ],
    "redis.connection.ConnectionPool.owns_connection": [
        "",
        "Connection"
    ],
    "redis.connection.BlockingConnectionPool.__init__": [
        "",
        "int",
        "float",
        "type[Connection]",
        "type[Queue[Any]]"
    ],
    "redis.connection.BlockingConnectionPool.disconnect": [
        ""
    ],
    "redis.connection.to_bool": [
        "object"
    ],
    "redis.connection.parse_url": [
        "str"
    ],
    "redis.ocsp.OCSPVerifier.__init__": [
        "",
        "SSLObject | SSLSocket",
        "str",
        "int",
        "str | None"
    ],
    "redis.ocsp.OCSPVerifier.components_from_socket": [
        ""
    ],
    "redis.ocsp.OCSPVerifier.components_from_direct_connection": [
        ""
    ],
    "redis.ocsp.OCSPVerifier.build_certificate_url": [
        "",
        "str",
        "Certificate",
        "Certificate"
    ],
    "redis.ocsp.OCSPVerifier.check_certificate": [
        "",
        "str",
        "Certificate",
        "str | bytes"
    ],
    "redis.ocsp.OCSPVerifier.is_valid": [
        ""
    ],
    "redis.ocsp.ocsp_staple_verifier": [
        "Connection",
        "bytes",
        "bytes | None"
    ],
    "redis.cluster.RedisCluster.__init__": [
        "",
        "str | None",
        "int | None",
        "list[ClusterNode] | None",
        "int",
        "Retry | None",
        "bool",
        "int",
        "bool",
        "bool",
        "str | None",
        "Callable[[str, int], tuple[str, int]] | None"
    ],
    "redis.cluster.RedisCluster.__enter__": [
        ""
    ],
    "redis.cluster.RedisCluster.__exit__": [
        "",
        "type[BaseException] | None",
        "BaseException | None",
        "TracebackType | None"
    ],
    "redis.cluster.RedisCluster.__del__": [
        ""
    ],
    "redis.cluster.RedisCluster.disconnect_connection_pools": [
        ""
    ],
    "redis.cluster.RedisCluster.from_url": [
        "",
        "str"
    ],
    "redis.cluster.RedisCluster.on_connect": [
        "",
        "Connection"
    ],
    "redis.cluster.RedisCluster.get_redis_connection": [
        "",
        "ClusterNode"
    ],
    "redis.cluster.RedisCluster.get_node": [
        "",
        "str | None",
        "str | int | None",
        "str | None"
    ],
    "redis.cluster.RedisCluster.get_primaries": [
        ""
    ],
    "redis.cluster.RedisCluster.get_replicas": [
        ""
    ],
    "redis.cluster.RedisCluster.get_random_node": [
        ""
    ],
    "redis.cluster.RedisCluster.get_nodes": [
        ""
    ],
    "redis.cluster.RedisCluster.get_node_from_key": [
        "",
        "_Encodable",
        "bool"
    ],
    "redis.cluster.RedisCluster.get_default_node": [
        ""
    ],
    "redis.cluster.RedisCluster.set_default_node": [
        "",
        "ClusterNode | None"
    ],
    "redis.cluster.RedisCluster.monitor": [
        "",
        "Incomplete | None"
    ],
    "redis.cluster.RedisCluster.pubsub": [
        "",
        "Incomplete | None",
        "Incomplete | None",
        "Incomplete | None"
    ],
    "redis.cluster.RedisCluster.pipeline": [
        "",
        "Incomplete | None",
        "Incomplete | None"
    ],
    "redis.cluster.RedisCluster.lock": [
        "",
        "str",
        "float | None",
        "float",
        "bool",
        "float | None",
        "type[Incomplete] | None",
        "bool"
    ],
    "redis.cluster.RedisCluster.keyslot": [
        "",
        "_Encodable"
    ],
    "redis.cluster.RedisCluster.determine_slot": [
        ""
    ],
    "redis.cluster.RedisCluster.get_encoder": [
        ""
    ],
    "redis.cluster.RedisCluster.get_connection_kwargs": [
        ""
    ],
    "redis.cluster.RedisCluster.execute_command": [
        ""
    ],
    "redis.cluster.RedisCluster.close": [
        ""
    ],
    "redis.cluster.ClusterNode.__init__": [
        "",
        "str",
        "int",
        "str | None",
        "Redis[Incomplete] | None"
    ],
    "redis.cluster.ClusterNode.__eq__": [
        "",
        "object"
    ],
    "redis.cluster.ClusterNode.__del__": [
        ""
    ],
    "redis.cluster.LoadBalancer.__init__": [
        "",
        "int"
    ],
    "redis.cluster.LoadBalancer.get_server_index": [
        "",
        "str",
        "int"
    ],
    "redis.cluster.LoadBalancer.reset": [
        ""
    ],
    "redis.cluster.NodesManager.__init__": [
        "",
        "Iterable[ClusterNode]",
        "bool",
        "bool",
        "Lock | None",
        "bool",
        "type[ConnectionPool]",
        "Callable[[str, int], tuple[str, int]] | None"
    ],
    "redis.cluster.NodesManager.get_node": [
        "",
        "str | None",
        "int | str | None",
        "str | None"
    ],
    "redis.cluster.NodesManager.update_moved_exception": [
        "",
        "MovedError"
    ],
    "redis.cluster.NodesManager.get_node_from_slot": [
        "",
        "str",
        "bool",
        "str | None"
    ],
    "redis.cluster.NodesManager.get_nodes_by_server_type": [
        "",
        "str"
    ],
    "redis.cluster.NodesManager.populate_startup_nodes": [
        "",
        "Iterable[ClusterNode]"
    ],
    "redis.cluster.NodesManager.check_slots_coverage": [
        "",
        "dict[str, list[ClusterNode]]"
    ],
    "redis.cluster.NodesManager.create_redis_connections": [
        "",
        "Iterable[ClusterNode]"
    ],
    "redis.cluster.NodesManager.create_redis_node": [
        "",
        "str",
        "int | str"
    ],
    "redis.cluster.NodesManager.initialize": [
        ""
    ],
    "redis.cluster.NodesManager.close": [
        ""
    ],
    "redis.cluster.NodesManager.reset": [
        ""
    ],
    "redis.cluster.NodesManager.remap_host_port": [
        "",
        "str",
        "int"
    ],
    "redis.cluster.ClusterPubSub.__init__": [
        "",
        "RedisCluster[Any]",
        "ClusterNode | None",
        "str | None",
        "int | None"
    ],
    "redis.cluster.ClusterPubSub.set_pubsub_node": [
        "",
        "RedisCluster[Any]",
        "ClusterNode | None",
        "str | None",
        "int | None"
    ],
    "redis.cluster.ClusterPubSub.get_pubsub_node": [
        ""
    ],
    "redis.cluster.ClusterPubSub.execute_command": [
        ""
    ],
    "redis.cluster.ClusterPubSub.get_redis_connection": [
        ""
    ],
    "redis.cluster.ClusterPipeline.__init__": [
        "",
        "",
        "",
        "Incomplete | None",
        "Incomplete | None",
        "Incomplete | None",
        "bool",
        "int",
        "int",
        "Lock | None"
    ],
    "redis.cluster.ClusterPipeline.__len__": [
        ""
    ],
    "redis.cluster.ClusterPipeline.__bool__": [
        ""
    ],
    "redis.cluster.ClusterPipeline.execute_command": [
        ""
    ],
    "redis.cluster.ClusterPipeline.pipeline_execute_command": [
        ""
    ],
    "redis.cluster.ClusterPipeline.raise_first_error": [
        "",
        ""
    ],
    "redis.cluster.ClusterPipeline.annotate_exception": [
        "",
        "",
        "",
        ""
    ],
    "redis.cluster.ClusterPipeline.execute": [
        "",
        "bool"
    ],
    "redis.cluster.ClusterPipeline.reset": [
        ""
    ],
    "redis.cluster.ClusterPipeline.send_cluster_commands": [
        "",
        "",
        "bool",
        "bool"
    ],
    "redis.cluster.ClusterPipeline.eval": [
        ""
    ],
    "redis.cluster.ClusterPipeline.multi": [
        ""
    ],
    "redis.cluster.ClusterPipeline.immediate_execute_command": [
        ""
    ],
    "redis.cluster.ClusterPipeline.load_scripts": [
        ""
    ],
    "redis.cluster.ClusterPipeline.watch": [
        ""
    ],
    "redis.cluster.ClusterPipeline.unwatch": [
        ""
    ],
    "redis.cluster.ClusterPipeline.script_load_for_pipeline": [
        ""
    ],
    "redis.cluster.ClusterPipeline.delete": [
        ""
    ],
    "redis.cluster.PipelineCommand.__init__": [
        "",
        "Sequence[EncodableT]",
        "_ParseResponseOptions | None",
        "int | None"
    ],
    "redis.cluster._ParseResponseCallback.__call__": [
        "",
        "Connection",
        "EncodableT"
    ],
    "redis.cluster.NodeCommands.__init__": [
        "",
        "_ParseResponseCallback",
        "ConnectionPool",
        "Connection"
    ],
    "redis.cluster.NodeCommands.append": [
        "",
        "PipelineCommand"
    ],
    "redis.cluster.NodeCommands.write": [
        ""
    ],
    "redis.cluster.NodeCommands.read": [
        ""
    ],
    "redis.cluster.get_node_name": [
        "str",
        "str | int"
    ],
    "redis.cluster.get_connection": [
        "Redis[Any]"
    ],
    "redis.cluster.parse_scan_result": [
        "Unused",
        ""
    ],
    "redis.cluster.parse_pubsub_numsub": [
        "Unused",
        ""
    ],
    "redis.cluster.parse_cluster_slots": [
        ""
    ],
    "redis.cluster.parse_cluster_myshardid": [
        "bytes"
    ],
    "redis.cluster.cleanup_kwargs": [],
    "redis.cluster.block_pipeline_command": [
        "str"
    ],
    "redis.credentials.CredentialProvider.get_credentials": [
        ""
    ],
    "redis.credentials.UsernamePasswordCredentialProvider.__init__": [
        "",
        "str | None",
        "str | None"
    ],
    "redis.credentials.UsernamePasswordCredentialProvider.get_credentials": [
        ""
    ]
}