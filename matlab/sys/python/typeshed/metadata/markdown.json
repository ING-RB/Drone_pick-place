{
    "markdown.serializers.to_html_string": [
        ""
    ],
    "markdown.serializers.to_xhtml_string": [
        ""
    ],
    "markdown.treeprocessors.Treeprocessor.run": [
        "",
        "Element"
    ],
    "markdown.treeprocessors.InlineProcessor.__init__": [
        "",
        ""
    ],
    "markdown.treeprocessors.InlineProcessor.run": [
        "",
        "Element",
        "Incomplete | None"
    ],
    "markdown.treeprocessors.UnescapeTreeprocessor.unescape": [
        "",
        "str"
    ],
    "markdown.treeprocessors.build_treeprocessors": [
        ""
    ],
    "markdown.treeprocessors.isString": [
        ""
    ],
    "markdown.blockprocessors.BlockProcessor.__init__": [
        "",
        "BlockParser"
    ],
    "markdown.blockprocessors.BlockProcessor.lastChild": [
        "",
        "Element"
    ],
    "markdown.blockprocessors.BlockProcessor.detab": [
        "",
        "str",
        "int | None"
    ],
    "markdown.blockprocessors.BlockProcessor.looseDetab": [
        "",
        "str",
        "int"
    ],
    "markdown.blockprocessors.BlockProcessor.test": [
        "",
        "Element",
        "str"
    ],
    "markdown.blockprocessors.BlockProcessor.run": [
        "",
        "Element",
        "list[str]"
    ],
    "markdown.blockprocessors.ListIndentProcessor.__init__": [
        "",
        "BlockParser"
    ],
    "markdown.blockprocessors.ListIndentProcessor.create_item": [
        "",
        "Element",
        "str"
    ],
    "markdown.blockprocessors.ListIndentProcessor.get_level": [
        "",
        "Element",
        "str"
    ],
    "markdown.blockprocessors.BlockQuoteProcessor.clean": [
        "",
        "str"
    ],
    "markdown.blockprocessors.OListProcessor.__init__": [
        "",
        "BlockParser"
    ],
    "markdown.blockprocessors.OListProcessor.get_items": [
        "",
        "str"
    ],
    "markdown.blockprocessors.UListProcessor.__init__": [
        "",
        "BlockParser"
    ],
    "markdown.blockprocessors.build_block_parser": [
        "Markdown"
    ],
    "markdown.util.Processor.__init__": [
        "",
        "Markdown | None"
    ],
    "markdown.util.HtmlStash.__init__": [
        ""
    ],
    "markdown.util.HtmlStash.store": [
        "",
        "str"
    ],
    "markdown.util.HtmlStash.reset": [
        ""
    ],
    "markdown.util.HtmlStash.get_placeholder": [
        "",
        "int"
    ],
    "markdown.util.HtmlStash.store_tag": [
        "",
        "str",
        "list[Any]",
        "int",
        "int"
    ],
    "markdown.util.Registry.__init__": [
        ""
    ],
    "markdown.util.Registry.__contains__": [
        "",
        "object"
    ],
    "markdown.util.Registry.__iter__": [
        ""
    ],
    "markdown.util.Registry.__getitem__": [
        "",
        "slice"
    ],
    "markdown.util.Registry.__len__": [
        ""
    ],
    "markdown.util.Registry.get_index_for_name": [
        "",
        "str"
    ],
    "markdown.util.Registry.register": [
        "",
        "Any",
        "str",
        "float"
    ],
    "markdown.util.Registry.deregister": [
        "",
        "str",
        "bool"
    ],
    "markdown.util.deprecated": [
        "str",
        "int"
    ],
    "markdown.util.parseBoolValue": [
        "object",
        "bool",
        "bool"
    ],
    "markdown.util.code_escape": [
        "str"
    ],
    "markdown.util.nearing_recursion_limit": [],
    "markdown.inlinepatterns.Pattern.__init__": [
        "",
        "",
        "Markdown | None"
    ],
    "markdown.inlinepatterns.Pattern.getCompiledRegExp": [
        ""
    ],
    "markdown.inlinepatterns.Pattern.handleMatch": [
        "",
        "re.Match[str]"
    ],
    "markdown.inlinepatterns.Pattern.type": [
        ""
    ],
    "markdown.inlinepatterns.Pattern.unescape": [
        "",
        ""
    ],
    "markdown.inlinepatterns.InlineProcessor.__init__": [
        "",
        "",
        "Markdown | None"
    ],
    "markdown.inlinepatterns.InlineProcessor.handleMatch": [
        "",
        "re.Match[str]",
        ""
    ],
    "markdown.inlinepatterns.SimpleTagPattern.__init__": [
        "",
        "",
        ""
    ],
    "markdown.inlinepatterns.SimpleTagInlineProcessor.__init__": [
        "",
        "",
        ""
    ],
    "markdown.inlinepatterns.BacktickInlineProcessor.__init__": [
        "",
        ""
    ],
    "markdown.inlinepatterns.AsteriskProcessor.build_single": [
        "",
        "",
        "",
        ""
    ],
    "markdown.inlinepatterns.AsteriskProcessor.build_double": [
        "",
        "",
        "",
        ""
    ],
    "markdown.inlinepatterns.AsteriskProcessor.build_double2": [
        "",
        "",
        "",
        ""
    ],
    "markdown.inlinepatterns.AsteriskProcessor.parse_sub_patterns": [
        "",
        "",
        "",
        "",
        ""
    ],
    "markdown.inlinepatterns.AsteriskProcessor.build_element": [
        "",
        "",
        "",
        "",
        ""
    ],
    "markdown.inlinepatterns.LinkInlineProcessor.getLink": [
        "",
        "",
        ""
    ],
    "markdown.inlinepatterns.LinkInlineProcessor.getText": [
        "",
        "",
        ""
    ],
    "markdown.inlinepatterns.ReferenceInlineProcessor.evalId": [
        "",
        "",
        "",
        ""
    ],
    "markdown.inlinepatterns.ReferenceInlineProcessor.makeTag": [
        "",
        "",
        "",
        ""
    ],
    "markdown.inlinepatterns.build_inlinepatterns": [
        ""
    ],
    "markdown.inlinepatterns.dequote": [
        ""
    ],
    "markdown.blockparser.State.set": [
        "",
        "_T"
    ],
    "markdown.blockparser.State.reset": [
        ""
    ],
    "markdown.blockparser.State.isstate": [
        "",
        "_T"
    ],
    "markdown.blockparser.BlockParser.__init__": [
        "",
        "Markdown"
    ],
    "markdown.blockparser.BlockParser.parseDocument": [
        "",
        "Iterable[str]"
    ],
    "markdown.blockparser.BlockParser.parseChunk": [
        "",
        "Element",
        "str"
    ],
    "markdown.blockparser.BlockParser.parseBlocks": [
        "",
        "Element",
        "list[str]"
    ],
    "markdown.core._WritableStream.write": [
        "",
        "bytes"
    ],
    "markdown.core._WritableStream.seek": [
        "",
        "int",
        "int"
    ],
    "markdown.core._WritableStream.close": [
        ""
    ],
    "markdown.core._ReadableStream.read": [
        "",
        "int"
    ],
    "markdown.core._ReadableStream.seek": [
        "",
        "int",
        "int"
    ],
    "markdown.core._ReadableStream.close": [
        ""
    ],
    "markdown.core.Markdown.__init__": [
        ""
    ],
    "markdown.core.Markdown.build_parser": [
        ""
    ],
    "markdown.core.Markdown.registerExtensions": [
        "",
        "Sequence[Extension | str]",
        "Mapping[str, Mapping[str, Any]]"
    ],
    "markdown.core.Markdown.build_extension": [
        "",
        "str",
        "Mapping[str, str]"
    ],
    "markdown.core.Markdown.registerExtension": [
        "",
        "Extension"
    ],
    "markdown.core.Markdown.reset": [
        ""
    ],
    "markdown.core.Markdown.set_output_format": [
        "",
        "Literal[\"xhtml\", \"html\"]"
    ],
    "markdown.core.Markdown.is_block_level": [
        "",
        "str"
    ],
    "markdown.core.Markdown.convert": [
        "",
        "str"
    ],
    "markdown.core.Markdown.convertFile": [
        "",
        "str | _ReadableStream | None",
        "str | _WritableStream | None",
        "str | None"
    ],
    "markdown.core.markdown": [
        "str"
    ],
    "markdown.core.markdownFromFile": [],
    "markdown.postprocessors.Postprocessor.run": [
        "",
        ""
    ],
    "markdown.postprocessors.RawHtmlPostprocessor.isblocklevel": [
        "",
        ""
    ],
    "markdown.postprocessors.UnescapePostprocessor.unescape": [
        "",
        ""
    ],
    "markdown.postprocessors.build_postprocessors": [
        ""
    ],
    "markdown.preprocessors.Preprocessor.run": [
        "",
        "list[str]"
    ],
    "markdown.preprocessors.build_preprocessors": [
        ""
    ],
    "markdown.extensions.md_in_html.makeExtension": [],
    "markdown.extensions.footnotes.FootnoteExtension.__init__": [
        ""
    ],
    "markdown.extensions.footnotes.FootnoteExtension.reset": [
        ""
    ],
    "markdown.extensions.footnotes.FootnoteExtension.unique_ref": [
        "",
        "",
        "bool"
    ],
    "markdown.extensions.footnotes.FootnoteExtension.findFootnotesPlaceholder": [
        "",
        ""
    ],
    "markdown.extensions.footnotes.FootnoteExtension.setFootnote": [
        "",
        "",
        ""
    ],
    "markdown.extensions.footnotes.FootnoteExtension.get_separator": [
        ""
    ],
    "markdown.extensions.footnotes.FootnoteExtension.makeFootnoteId": [
        "",
        ""
    ],
    "markdown.extensions.footnotes.FootnoteExtension.makeFootnoteRefId": [
        "",
        "",
        "bool"
    ],
    "markdown.extensions.footnotes.FootnoteExtension.makeFootnotesDiv": [
        "",
        ""
    ],
    "markdown.extensions.footnotes.FootnotePreprocessor.__init__": [
        "",
        ""
    ],
    "markdown.extensions.footnotes.FootnotePreprocessor.detectTabbed": [
        "",
        ""
    ],
    "markdown.extensions.footnotes.FootnoteInlineProcessor.__init__": [
        "",
        "",
        ""
    ],
    "markdown.extensions.footnotes.FootnotePostTreeprocessor.__init__": [
        "",
        ""
    ],
    "markdown.extensions.footnotes.FootnotePostTreeprocessor.add_duplicates": [
        "",
        "",
        ""
    ],
    "markdown.extensions.footnotes.FootnotePostTreeprocessor.get_num_duplicates": [
        "",
        ""
    ],
    "markdown.extensions.footnotes.FootnotePostTreeprocessor.handle_duplicates": [
        "",
        ""
    ],
    "markdown.extensions.footnotes.FootnoteTreeprocessor.__init__": [
        "",
        ""
    ],
    "markdown.extensions.footnotes.FootnotePostprocessor.__init__": [
        "",
        ""
    ],
    "markdown.extensions.footnotes.makeExtension": [],
    "markdown.extensions.__init__.Extension.__init__": [
        ""
    ],
    "markdown.extensions.__init__.Extension.getConfig": [
        "",
        "str",
        "Any"
    ],
    "markdown.extensions.__init__.Extension.getConfigs": [
        ""
    ],
    "markdown.extensions.__init__.Extension.getConfigInfo": [
        ""
    ],
    "markdown.extensions.__init__.Extension.setConfig": [
        "",
        "str",
        "Any"
    ],
    "markdown.extensions.__init__.Extension.setConfigs": [
        "",
        "Mapping[str, Any]"
    ],
    "markdown.extensions.__init__.Extension.extendMarkdown": [
        "",
        "Markdown"
    ],
    "markdown.extensions.wikilinks.WikiLinkExtension.__init__": [
        ""
    ],
    "markdown.extensions.wikilinks.WikiLinksInlineProcessor.__init__": [
        "",
        "",
        ""
    ],
    "markdown.extensions.wikilinks.build_url": [
        "",
        "",
        ""
    ],
    "markdown.extensions.wikilinks.makeExtension": [],
    "markdown.extensions.def_list.makeExtension": [],
    "markdown.extensions.meta.MetaExtension.reset": [
        ""
    ],
    "markdown.extensions.meta.makeExtension": [],
    "markdown.extensions.attr_list.AttrListTreeprocessor.assign_attrs": [
        "",
        "",
        ""
    ],
    "markdown.extensions.attr_list.AttrListTreeprocessor.sanitize_name": [
        "",
        ""
    ],
    "markdown.extensions.attr_list.get_attrs": [
        ""
    ],
    "markdown.extensions.attr_list.isheader": [
        ""
    ],
    "markdown.extensions.attr_list.makeExtension": [],
    "markdown.extensions.tables.TableProcessor.__init__": [
        "",
        "",
        ""
    ],
    "markdown.extensions.tables.makeExtension": [],
    "markdown.extensions.codehilite.CodeHilite.__init__": [
        "",
        "Incomplete | None"
    ],
    "markdown.extensions.codehilite.CodeHilite.hilite": [
        "",
        "bool"
    ],
    "markdown.extensions.codehilite.HiliteTreeprocessor.code_unescape": [
        "",
        ""
    ],
    "markdown.extensions.codehilite.CodeHiliteExtension.__init__": [
        ""
    ],
    "markdown.extensions.codehilite.parse_hl_lines": [
        ""
    ],
    "markdown.extensions.codehilite.makeExtension": [],
    "markdown.extensions.nl2br.makeExtension": [],
    "markdown.extensions.legacy_em.makeExtension": [],
    "markdown.extensions.abbr.AbbrInlineProcessor.__init__": [
        "",
        "",
        ""
    ],
    "markdown.extensions.abbr.makeExtension": [],
    "markdown.extensions.smarty.SubstituteTextPattern.__init__": [
        "",
        "",
        "",
        ""
    ],
    "markdown.extensions.smarty.SmartyExtension.__init__": [
        ""
    ],
    "markdown.extensions.smarty.SmartyExtension.educateDashes": [
        "",
        ""
    ],
    "markdown.extensions.smarty.SmartyExtension.educateEllipses": [
        "",
        ""
    ],
    "markdown.extensions.smarty.SmartyExtension.educateAngledQuotes": [
        "",
        ""
    ],
    "markdown.extensions.smarty.SmartyExtension.educateQuotes": [
        "",
        ""
    ],
    "markdown.extensions.smarty.makeExtension": [],
    "markdown.extensions.fenced_code.FencedBlockPreprocessor.__init__": [
        "",
        ""
    ],
    "markdown.extensions.fenced_code.makeExtension": [],
    "markdown.extensions.legacy_attrs.LegacyAttrs.handleAttributes": [
        "",
        "",
        ""
    ],
    "markdown.extensions.legacy_attrs.makeExtension": [],
    "markdown.extensions.extra.ExtraExtension.__init__": [
        ""
    ],
    "markdown.extensions.extra.makeExtension": [],
    "markdown.extensions.admonition.AdmonitionProcessor.get_class_and_title": [
        "",
        ""
    ],
    "markdown.extensions.admonition.makeExtension": [],
    "markdown.extensions.toc.TocTreeprocessor.__init__": [
        "",
        "",
        ""
    ],
    "markdown.extensions.toc.TocTreeprocessor.iterparent": [
        "",
        ""
    ],
    "markdown.extensions.toc.TocTreeprocessor.replace_marker": [
        "",
        "",
        ""
    ],
    "markdown.extensions.toc.TocTreeprocessor.set_level": [
        "",
        ""
    ],
    "markdown.extensions.toc.TocTreeprocessor.add_anchor": [
        "",
        "",
        ""
    ],
    "markdown.extensions.toc.TocTreeprocessor.add_permalink": [
        "",
        "",
        ""
    ],
    "markdown.extensions.toc.TocTreeprocessor.build_toc_div": [
        "",
        ""
    ],
    "markdown.extensions.toc.TocExtension.__init__": [
        ""
    ],
    "markdown.extensions.toc.TocExtension.reset": [
        ""
    ],
    "markdown.extensions.toc.slugify": [
        "",
        ""
    ],
    "markdown.extensions.toc.unique": [
        "",
        ""
    ],
    "markdown.extensions.toc.get_name": [
        ""
    ],
    "markdown.extensions.toc.stashedHTML2text": [
        "",
        "",
        "bool"
    ],
    "markdown.extensions.toc.unescape": [
        ""
    ],
    "markdown.extensions.toc.nest_toc_tokens": [
        ""
    ],
    "markdown.extensions.toc.makeExtension": [],
    "markdown.extensions.sane_lists.SaneOListProcessor.__init__": [
        "",
        ""
    ],
    "markdown.extensions.sane_lists.SaneUListProcessor.__init__": [
        "",
        ""
    ],
    "markdown.extensions.sane_lists.makeExtension": []
}