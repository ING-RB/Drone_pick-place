{
    "_dummy_threading.local.__getattribute__": [
        "",
        "str"
    ],
    "_dummy_threading.local.__setattr__": [
        "",
        "str",
        "Any"
    ],
    "_dummy_threading.local.__delattr__": [
        "",
        "str"
    ],
    "_dummy_threading.Thread.ident": [
        ""
    ],
    "_dummy_threading.Thread.__init__": [
        "",
        "None",
        "Callable[..., object] | None",
        "str | None",
        "Iterable[Any]",
        "Mapping[str, Any] | None"
    ],
    "_dummy_threading.Thread.start": [
        ""
    ],
    "_dummy_threading.Thread.run": [
        ""
    ],
    "_dummy_threading.Thread.join": [
        "",
        "float | None"
    ],
    "_dummy_threading.Thread.getName": [
        ""
    ],
    "_dummy_threading.Thread.setName": [
        "",
        "str"
    ],
    "_dummy_threading.Thread.is_alive": [
        ""
    ],
    "_dummy_threading.Thread.isDaemon": [
        ""
    ],
    "_dummy_threading.Thread.setDaemon": [
        "",
        "bool"
    ],
    "_dummy_threading.Lock.__enter__": [
        ""
    ],
    "_dummy_threading.Lock.__exit__": [
        "",
        "type[BaseException] | None",
        "BaseException | None",
        "TracebackType | None"
    ],
    "_dummy_threading.Lock.acquire": [
        "",
        "bool",
        "float"
    ],
    "_dummy_threading.Lock.release": [
        ""
    ],
    "_dummy_threading.Lock.locked": [
        ""
    ],
    "_dummy_threading._RLock.__enter__": [
        ""
    ],
    "_dummy_threading._RLock.__exit__": [
        "",
        "type[BaseException] | None",
        "BaseException | None",
        "TracebackType | None"
    ],
    "_dummy_threading._RLock.acquire": [
        "",
        "bool",
        "float"
    ],
    "_dummy_threading._RLock.release": [
        ""
    ],
    "_dummy_threading.Condition.__init__": [
        "",
        "Lock | _RLock | None"
    ],
    "_dummy_threading.Condition.__enter__": [
        ""
    ],
    "_dummy_threading.Condition.__exit__": [
        "",
        "type[BaseException] | None",
        "BaseException | None",
        "TracebackType | None"
    ],
    "_dummy_threading.Condition.acquire": [
        "",
        "bool",
        "float"
    ],
    "_dummy_threading.Condition.release": [
        ""
    ],
    "_dummy_threading.Condition.wait": [
        "",
        "float | None"
    ],
    "_dummy_threading.Condition.wait_for": [
        "",
        "Callable[[], _T]",
        "float | None"
    ],
    "_dummy_threading.Condition.notify": [
        "",
        "int"
    ],
    "_dummy_threading.Condition.notify_all": [
        ""
    ],
    "_dummy_threading.Condition.notifyAll": [
        ""
    ],
    "_dummy_threading.Semaphore.__init__": [
        "",
        "int"
    ],
    "_dummy_threading.Semaphore.__exit__": [
        "",
        "type[BaseException] | None",
        "BaseException | None",
        "TracebackType | None"
    ],
    "_dummy_threading.Semaphore.acquire": [
        "",
        "bool",
        "float | None"
    ],
    "_dummy_threading.Semaphore.__enter__": [
        "",
        "bool",
        "float | None"
    ],
    "_dummy_threading.Event.is_set": [
        ""
    ],
    "_dummy_threading.Event.set": [
        ""
    ],
    "_dummy_threading.Event.clear": [
        ""
    ],
    "_dummy_threading.Event.wait": [
        "",
        "float | None"
    ],
    "_dummy_threading.Timer.__init__": [
        "",
        "float",
        "Callable[..., object]",
        "Iterable[Any] | None",
        "Mapping[str, Any] | None"
    ],
    "_dummy_threading.Timer.cancel": [
        ""
    ],
    "_dummy_threading.Barrier.parties": [
        ""
    ],
    "_dummy_threading.Barrier.n_waiting": [
        ""
    ],
    "_dummy_threading.Barrier.broken": [
        ""
    ],
    "_dummy_threading.Barrier.__init__": [
        "",
        "int",
        "Callable[[], None] | None",
        "float | None"
    ],
    "_dummy_threading.Barrier.wait": [
        "",
        "float | None"
    ],
    "_dummy_threading.Barrier.reset": [
        ""
    ],
    "_dummy_threading.Barrier.abort": [
        ""
    ],
    "_dummy_threading.active_count": [],
    "_dummy_threading.current_thread": [],
    "_dummy_threading.currentThread": [],
    "_dummy_threading.get_ident": [],
    "_dummy_threading.enumerate": [],
    "_dummy_threading.main_thread": [],
    "_dummy_threading.settrace": [
        "TraceFunction"
    ],
    "_dummy_threading.setprofile": [
        "ProfileFunction | None"
    ],
    "_dummy_threading.stack_size": [
        "int | None"
    ]
}