{
    "turtle.Vec2D.__new__": [
        "",
        "float",
        "float"
    ],
    "turtle.Vec2D.__add__": [
        "",
        "tuple[float, float]"
    ],
    "turtle.Vec2D.__mul__": [
        "",
        "Vec2D"
    ],
    "turtle.Vec2D.__rmul__": [
        "",
        "float"
    ],
    "turtle.Vec2D.__sub__": [
        "",
        "tuple[float, float]"
    ],
    "turtle.Vec2D.__neg__": [
        ""
    ],
    "turtle.Vec2D.__abs__": [
        ""
    ],
    "turtle.Vec2D.rotate": [
        "",
        "float"
    ],
    "turtle.ScrolledCanvas.__init__": [
        "",
        "Misc | None",
        "int",
        "int",
        "int",
        "int"
    ],
    "turtle.ScrolledCanvas.reset": [
        "",
        "int | None",
        "int | None",
        "str | None"
    ],
    "turtle.TurtleScreenBase.__init__": [
        "",
        "Canvas"
    ],
    "turtle.TurtleScreenBase.mainloop": [
        ""
    ],
    "turtle.TurtleScreenBase.textinput": [
        "",
        "str",
        "str"
    ],
    "turtle.TurtleScreenBase.numinput": [
        "",
        "str",
        "str",
        "float | None",
        "float | None",
        "float | None"
    ],
    "turtle.Shape.__init__": [
        "",
        "str",
        "_PolygonCoords | PhotoImage | None"
    ],
    "turtle.Shape.addcomponent": [
        "",
        "_PolygonCoords",
        "_Color",
        "_Color | None"
    ],
    "turtle.TurtleScreen.__init__": [
        "",
        "Canvas",
        "str",
        "float",
        "int"
    ],
    "turtle.TurtleScreen.clear": [
        ""
    ],
    "turtle.TurtleScreen.mode": [
        "",
        "None"
    ],
    "turtle.TurtleScreen.setworldcoordinates": [
        "",
        "float",
        "float",
        "float",
        "float"
    ],
    "turtle.TurtleScreen.register_shape": [
        "",
        "str",
        "_PolygonCoords | Shape | None"
    ],
    "turtle.TurtleScreen.colormode": [
        "",
        "None"
    ],
    "turtle.TurtleScreen.reset": [
        ""
    ],
    "turtle.TurtleScreen.turtles": [
        ""
    ],
    "turtle.TurtleScreen.bgcolor": [
        ""
    ],
    "turtle.TurtleScreen.tracer": [
        "",
        "None"
    ],
    "turtle.TurtleScreen.delay": [
        "",
        "None"
    ],
    "turtle.TurtleScreen.update": [
        ""
    ],
    "turtle.TurtleScreen.window_width": [
        ""
    ],
    "turtle.TurtleScreen.window_height": [
        ""
    ],
    "turtle.TurtleScreen.getcanvas": [
        ""
    ],
    "turtle.TurtleScreen.getshapes": [
        ""
    ],
    "turtle.TurtleScreen.onclick": [
        "",
        "Callable[[float, float], object]",
        "int",
        "Any | None"
    ],
    "turtle.TurtleScreen.onkey": [
        "",
        "Callable[[], object]",
        "str"
    ],
    "turtle.TurtleScreen.listen": [
        "",
        "float | None",
        "float | None"
    ],
    "turtle.TurtleScreen.ontimer": [
        "",
        "Callable[[], object]",
        "int"
    ],
    "turtle.TurtleScreen.bgpic": [
        "",
        "None"
    ],
    "turtle.TurtleScreen.screensize": [
        "",
        "None",
        "None",
        "None"
    ],
    "turtle.TurtleScreen.onkeypress": [
        "",
        "Callable[[], object]",
        "str | None"
    ],
    "turtle.TNavigator.__init__": [
        "",
        "str"
    ],
    "turtle.TNavigator.reset": [
        ""
    ],
    "turtle.TNavigator.degrees": [
        "",
        "float"
    ],
    "turtle.TNavigator.radians": [
        ""
    ],
    "turtle.TNavigator.forward": [
        "",
        "float"
    ],
    "turtle.TNavigator.back": [
        "",
        "float"
    ],
    "turtle.TNavigator.right": [
        "",
        "float"
    ],
    "turtle.TNavigator.left": [
        "",
        "float"
    ],
    "turtle.TNavigator.pos": [
        ""
    ],
    "turtle.TNavigator.xcor": [
        ""
    ],
    "turtle.TNavigator.ycor": [
        ""
    ],
    "turtle.TNavigator.goto": [
        "",
        "tuple[float, float]",
        "None"
    ],
    "turtle.TNavigator.home": [
        ""
    ],
    "turtle.TNavigator.setx": [
        "",
        "float"
    ],
    "turtle.TNavigator.sety": [
        "",
        "float"
    ],
    "turtle.TNavigator.distance": [
        "",
        "TNavigator | tuple[float, float]",
        "None"
    ],
    "turtle.TNavigator.towards": [
        "",
        "TNavigator | tuple[float, float]",
        "None"
    ],
    "turtle.TNavigator.heading": [
        ""
    ],
    "turtle.TNavigator.setheading": [
        "",
        "float"
    ],
    "turtle.TNavigator.circle": [
        "",
        "float",
        "float | None",
        "int | None"
    ],
    "turtle.TPen.__init__": [
        "",
        "str"
    ],
    "turtle.TPen.resizemode": [
        "",
        "None"
    ],
    "turtle.TPen.pensize": [
        "",
        "None"
    ],
    "turtle.TPen.penup": [
        ""
    ],
    "turtle.TPen.pendown": [
        ""
    ],
    "turtle.TPen.isdown": [
        ""
    ],
    "turtle.TPen.speed": [
        "",
        "None"
    ],
    "turtle.TPen.pencolor": [
        ""
    ],
    "turtle.TPen.fillcolor": [
        ""
    ],
    "turtle.TPen.color": [
        ""
    ],
    "turtle.TPen.showturtle": [
        ""
    ],
    "turtle.TPen.hideturtle": [
        ""
    ],
    "turtle.TPen.isvisible": [
        ""
    ],
    "turtle.TPen.pen": [
        ""
    ],
    "turtle.RawTurtle.__init__": [
        "",
        "Canvas | TurtleScreen | None",
        "str",
        "int",
        "bool"
    ],
    "turtle.RawTurtle.reset": [
        ""
    ],
    "turtle.RawTurtle.setundobuffer": [
        "",
        "int | None"
    ],
    "turtle.RawTurtle.undobufferentries": [
        ""
    ],
    "turtle.RawTurtle.clear": [
        ""
    ],
    "turtle.RawTurtle.clone": [
        ""
    ],
    "turtle.RawTurtle.shape": [
        "",
        "None"
    ],
    "turtle.RawTurtle.shapesize": [
        ""
    ],
    "turtle.RawTurtle.shearfactor": [
        "",
        "None"
    ],
    "turtle.RawTurtle.shapetransform": [
        ""
    ],
    "turtle.RawTurtle.get_shapepoly": [
        ""
    ],
    "turtle.RawTurtle.settiltangle": [
        "",
        "float"
    ],
    "turtle.RawTurtle.tiltangle": [
        "",
        "None"
    ],
    "turtle.RawTurtle.tilt": [
        "",
        "float"
    ],
    "turtle.RawTurtle.stamp": [
        ""
    ],
    "turtle.RawTurtle.clearstamp": [
        "",
        "int | tuple[int, ...]"
    ],
    "turtle.RawTurtle.clearstamps": [
        "",
        "int | None"
    ],
    "turtle.RawTurtle.filling": [
        ""
    ],
    "turtle.RawTurtle.begin_fill": [
        ""
    ],
    "turtle.RawTurtle.end_fill": [
        ""
    ],
    "turtle.RawTurtle.dot": [
        "",
        "int | None"
    ],
    "turtle.RawTurtle.write": [
        "",
        "object",
        "bool",
        "str",
        "tuple[str, int, str]"
    ],
    "turtle.RawTurtle.begin_poly": [
        ""
    ],
    "turtle.RawTurtle.end_poly": [
        ""
    ],
    "turtle.RawTurtle.get_poly": [
        ""
    ],
    "turtle.RawTurtle.getscreen": [
        ""
    ],
    "turtle.RawTurtle.getturtle": [
        ""
    ],
    "turtle.RawTurtle.onclick": [
        "",
        "Callable[[float, float], object]",
        "int",
        "bool | None"
    ],
    "turtle.RawTurtle.onrelease": [
        "",
        "Callable[[float, float], object]",
        "int",
        "bool | None"
    ],
    "turtle.RawTurtle.ondrag": [
        "",
        "Callable[[float, float], object]",
        "int",
        "bool | None"
    ],
    "turtle.RawTurtle.undo": [
        ""
    ],
    "turtle._Screen.__init__": [
        ""
    ],
    "turtle._Screen.setup": [
        "",
        "int | float",
        "int | float",
        "int | None",
        "int | None"
    ],
    "turtle._Screen.title": [
        "",
        "str"
    ],
    "turtle._Screen.bye": [
        ""
    ],
    "turtle._Screen.exitonclick": [
        ""
    ],
    "turtle.Turtle.__init__": [
        "",
        "str",
        "int",
        "bool"
    ],
    "turtle.write_docstringdict": [
        "str"
    ],
    "turtle.mainloop": [],
    "turtle.textinput": [
        "str",
        "str"
    ],
    "turtle.numinput": [
        "str",
        "str",
        "float | None",
        "float | None",
        "float | None"
    ],
    "turtle.clear": [],
    "turtle.mode": [
        "None"
    ],
    "turtle.setworldcoordinates": [
        "float",
        "float",
        "float",
        "float"
    ],
    "turtle.register_shape": [
        "str",
        "_PolygonCoords | Shape | None"
    ],
    "turtle.colormode": [
        "None"
    ],
    "turtle.reset": [],
    "turtle.turtles": [],
    "turtle.bgcolor": [],
    "turtle.tracer": [
        "None"
    ],
    "turtle.delay": [
        "None"
    ],
    "turtle.update": [],
    "turtle.window_width": [],
    "turtle.window_height": [],
    "turtle.getcanvas": [],
    "turtle.getshapes": [],
    "turtle.onclick": [
        "Callable[[float, float], object]",
        "int",
        "Any | None"
    ],
    "turtle.onkey": [
        "Callable[[], object]",
        "str"
    ],
    "turtle.listen": [
        "float | None",
        "float | None"
    ],
    "turtle.ontimer": [
        "Callable[[], object]",
        "int"
    ],
    "turtle.bgpic": [
        "None"
    ],
    "turtle.screensize": [
        "None",
        "None",
        "None"
    ],
    "turtle.onkeypress": [
        "Callable[[], object]",
        "str | None"
    ],
    "turtle.setup": [
        "float",
        "float",
        "int | None",
        "int | None"
    ],
    "turtle.title": [
        "str"
    ],
    "turtle.bye": [],
    "turtle.exitonclick": [],
    "turtle.Screen": [],
    "turtle.degrees": [
        "float"
    ],
    "turtle.radians": [],
    "turtle.forward": [
        "float"
    ],
    "turtle.back": [
        "float"
    ],
    "turtle.right": [
        "float"
    ],
    "turtle.left": [
        "float"
    ],
    "turtle.pos": [],
    "turtle.xcor": [],
    "turtle.ycor": [],
    "turtle.goto": [
        "tuple[float, float]",
        "None"
    ],
    "turtle.home": [],
    "turtle.setx": [
        "float"
    ],
    "turtle.sety": [
        "float"
    ],
    "turtle.distance": [
        "TNavigator | tuple[float, float]",
        "None"
    ],
    "turtle.towards": [
        "TNavigator | tuple[float, float]",
        "None"
    ],
    "turtle.heading": [],
    "turtle.setheading": [
        "float"
    ],
    "turtle.circle": [
        "float",
        "float | None",
        "int | None"
    ],
    "turtle.resizemode": [
        "None"
    ],
    "turtle.pensize": [
        "None"
    ],
    "turtle.penup": [],
    "turtle.pendown": [],
    "turtle.isdown": [],
    "turtle.speed": [
        "None"
    ],
    "turtle.pencolor": [],
    "turtle.fillcolor": [],
    "turtle.color": [],
    "turtle.showturtle": [],
    "turtle.hideturtle": [],
    "turtle.isvisible": [],
    "turtle.pen": [],
    "turtle.setundobuffer": [
        "int | None"
    ],
    "turtle.undobufferentries": [],
    "turtle.shape": [
        "None"
    ],
    "turtle.shapesize": [],
    "turtle.shearfactor": [
        "None"
    ],
    "turtle.shapetransform": [],
    "turtle.get_shapepoly": [],
    "turtle.settiltangle": [
        "float"
    ],
    "turtle.tiltangle": [
        "None"
    ],
    "turtle.tilt": [
        "float"
    ],
    "turtle.stamp": [],
    "turtle.clearstamp": [
        "int | tuple[int, ...]"
    ],
    "turtle.clearstamps": [
        "int | None"
    ],
    "turtle.filling": [],
    "turtle.begin_fill": [],
    "turtle.end_fill": [],
    "turtle.dot": [
        "int | None"
    ],
    "turtle.write": [
        "object",
        "bool",
        "str",
        "tuple[str, int, str]"
    ],
    "turtle.begin_poly": [],
    "turtle.end_poly": [],
    "turtle.get_poly": [],
    "turtle.getscreen": [],
    "turtle.getturtle": [],
    "turtle.onrelease": [
        "Callable[[float, float], object]",
        "int",
        "Any | None"
    ],
    "turtle.ondrag": [
        "Callable[[float, float], object]",
        "int",
        "Any | None"
    ],
    "turtle.undo": [],
    "turtle.clone": []
}