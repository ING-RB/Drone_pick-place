{
    "dateparser.date._DateLocaleParser.__init__": [
        "",
        "Locale",
        "str",
        "list[str] | tuple[str, ...] | set[str] | None",
        "Settings | None"
    ],
    "dateparser.date._DateLocaleParser.parse": [
        "",
        "Locale",
        "str",
        "list[str] | tuple[str, ...] | set[str] | None",
        "Settings | None"
    ],
    "dateparser.date._DateLocaleParser._parse": [
        ""
    ],
    "dateparser.date._DateLocaleParser._try_timestamp": [
        ""
    ],
    "dateparser.date._DateLocaleParser._try_freshness_parser": [
        ""
    ],
    "dateparser.date._DateLocaleParser._try_absolute_parser": [
        ""
    ],
    "dateparser.date._DateLocaleParser._try_nospaces_parser": [
        ""
    ],
    "dateparser.date._DateLocaleParser._try_parser": [
        "",
        ""
    ],
    "dateparser.date._DateLocaleParser._try_given_formats": [
        ""
    ],
    "dateparser.date._DateLocaleParser._get_translated_date": [
        ""
    ],
    "dateparser.date._DateLocaleParser._get_translated_date_with_formatting": [
        ""
    ],
    "dateparser.date._DateLocaleParser._is_valid_date_data": [
        "",
        "DateData"
    ],
    "dateparser.date.DateData.__init__": [
        ""
    ],
    "dateparser.date.DateData.__getitem__": [
        "",
        "Literal[\"date_obj\"]"
    ],
    "dateparser.date.DateData.__setitem__": [
        "",
        "Literal[\"date_obj\"]",
        "datetime"
    ],
    "dateparser.date.DateDataParser.__init__": [
        "",
        "list[str] | tuple[str, ...] | set[str] | None",
        "list[str] | tuple[str, ...] | set[str] | None",
        "str | None",
        "bool",
        "bool",
        "_Settings | None",
        "_DetectLanguagesFunction | None"
    ],
    "dateparser.date.DateDataParser.get_date_data": [
        "",
        "str",
        "list[str] | tuple[str, ...] | set[str] | None"
    ],
    "dateparser.date.DateDataParser.get_date_tuple": [
        "",
        "str",
        "list[str] | tuple[str, ...] | set[str] | None"
    ],
    "dateparser.date.DateDataParser._get_applicable_locales": [
        "",
        "str"
    ],
    "dateparser.date.DateDataParser._is_applicable_locale": [
        "",
        "Locale",
        "str"
    ],
    "dateparser.date.DateDataParser._get_locale_loader": [
        "type[DateDataParser]"
    ],
    "dateparser.date.sanitize_spaces": [
        "str"
    ],
    "dateparser.date.date_range": [
        "",
        ""
    ],
    "dateparser.date.get_intersecting_periods": [
        "",
        "",
        "str"
    ],
    "dateparser.date.sanitize_date": [
        "str"
    ],
    "dateparser.date.get_date_from_timestamp": [
        "str",
        "Settings",
        "bool"
    ],
    "dateparser.date.parse_with_formats": [
        "str",
        "Iterable[str]",
        "Settings"
    ],
    "dateparser.__init__.parse": [
        "str",
        "list[str] | tuple[str, ...] | set[str] | None",
        "list[str] | tuple[str, ...] | set[str] | None",
        "list[str] | tuple[str, ...] | set[str] | None",
        "str | None",
        "_Settings | None",
        "_DetectLanguagesFunction | None"
    ],
    "dateparser.calendars.jalali_parser.PersianDate.__init__": [
        "",
        "",
        "",
        ""
    ],
    "dateparser.calendars.jalali_parser.PersianDate.weekday": [
        ""
    ],
    "dateparser.calendars.__init__.CalendarBase.__init__": [
        "",
        ""
    ],
    "dateparser.calendars.__init__.CalendarBase.get_date": [
        ""
    ],
    "dateparser.calendars.__init__.non_gregorian_parser.to_latin": [
        "",
        ""
    ],
    "dateparser.calendars.__init__.non_gregorian_parser.parse": [
        "",
        "",
        ""
    ],
    "dateparser.calendars.hijri_parser.hijri.to_gregorian": [
        "",
        "Incomplete | None",
        "Incomplete | None",
        "Incomplete | None"
    ],
    "dateparser.calendars.hijri_parser.hijri.from_gregorian": [
        "",
        "Incomplete | None",
        "Incomplete | None",
        "Incomplete | None"
    ],
    "dateparser.calendars.hijri_parser.hijri.month_length": [
        "",
        "",
        ""
    ],
    "dateparser.calendars.hijri_parser.HijriDate.__init__": [
        "",
        "",
        "",
        ""
    ],
    "dateparser.calendars.hijri_parser.HijriDate.weekday": [
        ""
    ],
    "dateparser.parser._time_parser.__call__": [
        "",
        ""
    ],
    "dateparser.parser._no_spaces_parser.__init__": [
        ""
    ],
    "dateparser.parser._no_spaces_parser.parse": [
        "",
        "",
        ""
    ],
    "dateparser.parser._parser.__init__": [
        "",
        "",
        ""
    ],
    "dateparser.parser._parser.parse": [
        "",
        "",
        "",
        "datetime.tzinfo | None"
    ],
    "dateparser.parser.tokenizer.__init__": [
        "",
        ""
    ],
    "dateparser.parser.tokenizer.tokenize": [
        ""
    ],
    "dateparser.parser.no_space_parser_eligibile": [
        ""
    ],
    "dateparser.parser.get_unresolved_attrs": [
        ""
    ],
    "dateparser.parser.resolve_date_order": [
        "",
        "Incomplete | None"
    ],
    "dateparser.custom_language_detection.language_mapping.map_languages": [
        "list[str]"
    ],
    "dateparser.custom_language_detection.fasttext.detect_languages": [
        "str",
        "float"
    ],
    "dateparser.custom_language_detection.langdetect.detect_languages": [
        "str",
        "float"
    ],
    "dateparser.date_parser.DateParser.parse": [
        "",
        "",
        "",
        "Incomplete | None"
    ],
    "dateparser.utils.__init__.strip_braces": [
        "str"
    ],
    "dateparser.utils.__init__.normalize_unicode": [
        "str",
        "str"
    ],
    "dateparser.utils.__init__.combine_dicts": [
        "Mapping[Any, Any]",
        "Mapping[Any, Any]"
    ],
    "dateparser.utils.__init__.find_date_separator": [
        ""
    ],
    "dateparser.utils.__init__.localize_timezone": [
        "",
        ""
    ],
    "dateparser.utils.__init__.apply_tzdatabase_timezone": [
        "",
        ""
    ],
    "dateparser.utils.__init__.apply_dateparser_timezone": [
        "",
        ""
    ],
    "dateparser.utils.__init__.apply_timezone": [
        "",
        ""
    ],
    "dateparser.utils.__init__.apply_timezone_from_settings": [
        "",
        ""
    ],
    "dateparser.utils.__init__.get_last_day_of_month": [
        "",
        ""
    ],
    "dateparser.utils.__init__.get_previous_leap_year": [
        ""
    ],
    "dateparser.utils.__init__.get_next_leap_year": [
        ""
    ],
    "dateparser.utils.__init__.set_correct_day_from_settings": [
        "",
        "",
        "Incomplete | None"
    ],
    "dateparser.utils.__init__.registry": [
        ""
    ],
    "dateparser.utils.__init__.get_logger": [],
    "dateparser.utils.__init__.setup_logging": [],
    "dateparser.utils.__init__.get_timezone_from_tz_string": [
        "str"
    ],
    "dateparser.utils.strptime.patch_strptime": [],
    "dateparser.utils.strptime.strptime": [
        "",
        ""
    ],
    "dateparser.search.__init__.search_dates": [
        "str",
        "list[str] | tuple[str, ...] | AbstractSet[str] | None",
        "Mapping[Any, Any] | None",
        "Literal[True]",
        "_DetectLanguagesFunction | None"
    ],
    "dateparser.search.detection.BaseLanguageDetector.__init__": [
        "",
        ""
    ],
    "dateparser.search.detection.BaseLanguageDetector.iterate_applicable_languages": [
        "",
        "",
        "bool",
        "Incomplete | None"
    ],
    "dateparser.search.detection.AutoDetectLanguage.__init__": [
        "",
        "",
        "bool"
    ],
    "dateparser.search.detection.AutoDetectLanguage.iterate_applicable_languages": [
        "",
        "",
        "bool",
        "Incomplete | None"
    ],
    "dateparser.search.detection.ExactLanguages.__init__": [
        "",
        ""
    ],
    "dateparser.search.detection.ExactLanguages.iterate_applicable_languages": [
        "",
        "",
        "bool",
        "Incomplete | None"
    ],
    "dateparser.search.search._ExactLanguageSearch.__init__": [
        "",
        ""
    ],
    "dateparser.search.search._ExactLanguageSearch.get_current_language": [
        "",
        ""
    ],
    "dateparser.search.search._ExactLanguageSearch.search": [
        "",
        "",
        "",
        ""
    ],
    "dateparser.search.search._ExactLanguageSearch.set_relative_base": [
        "",
        ""
    ],
    "dateparser.search.search._ExactLanguageSearch.choose_best_split": [
        "",
        "",
        ""
    ],
    "dateparser.search.search._ExactLanguageSearch.split_by": [
        "",
        "",
        "",
        ""
    ],
    "dateparser.search.search._ExactLanguageSearch.split_if_not_parsed": [
        "",
        "",
        ""
    ],
    "dateparser.search.search._ExactLanguageSearch.parse_item": [
        "",
        "",
        "",
        "",
        "",
        ""
    ],
    "dateparser.search.search._ExactLanguageSearch.parse_found_objects": [
        "",
        "",
        "",
        "",
        "",
        ""
    ],
    "dateparser.search.search._ExactLanguageSearch.search_parse": [
        "",
        "",
        "",
        ""
    ],
    "dateparser.search.search.DateSearchWithDetection.__init__": [
        ""
    ],
    "dateparser.search.search.DateSearchWithDetection.detect_language": [
        "",
        "",
        "",
        "Incomplete | None",
        "_DetectLanguagesFunction | None"
    ],
    "dateparser.search.search.DateSearchWithDetection.search_dates": [
        "",
        "",
        "Incomplete | None",
        "Incomplete | None",
        "_DetectLanguagesFunction | None"
    ],
    "dateparser.search.search.date_is_relative": [
        ""
    ],
    "dateparser.search.text_detection.FullTextLanguageDetector.__init__": [
        "",
        ""
    ],
    "dateparser.search.text_detection.FullTextLanguageDetector.get_unique_characters": [
        "",
        ""
    ],
    "dateparser.search.text_detection.FullTextLanguageDetector.character_check": [
        "",
        "",
        ""
    ],
    "dateparser.timezone_parser.StaticTzInfo.__init__": [
        "",
        "",
        ""
    ],
    "dateparser.timezone_parser.StaticTzInfo.tzname": [
        "",
        ""
    ],
    "dateparser.timezone_parser.StaticTzInfo.utcoffset": [
        "",
        ""
    ],
    "dateparser.timezone_parser.StaticTzInfo.dst": [
        "",
        ""
    ],
    "dateparser.timezone_parser.StaticTzInfo.localize": [
        "",
        "",
        "bool"
    ],
    "dateparser.timezone_parser.StaticTzInfo.__getinitargs__": [
        ""
    ],
    "dateparser.timezone_parser.pop_tz_offset_from_string": [
        "",
        "bool"
    ],
    "dateparser.timezone_parser.word_is_tz": [
        ""
    ],
    "dateparser.timezone_parser.convert_to_local_tz": [
        "",
        ""
    ],
    "dateparser.timezone_parser.build_tz_offsets": [
        ""
    ],
    "dateparser.timezone_parser.get_local_tz_offset": [],
    "dateparser.conf.Settings.__new__": [
        ""
    ],
    "dateparser.conf.Settings.__init__": [
        "",
        "Incomplete | None"
    ],
    "dateparser.conf.Settings.get_key": [
        "",
        "Incomplete | None"
    ],
    "dateparser.conf.Settings.replace": [
        "",
        "Incomplete | None"
    ],
    "dateparser.conf.apply_settings": [
        ""
    ],
    "dateparser.conf.check_settings": [
        ""
    ],
    "dateparser.freshness_date_parser.FreshnessDateDataParser.get_local_tz": [
        ""
    ],
    "dateparser.freshness_date_parser.FreshnessDateDataParser.parse": [
        "",
        "",
        ""
    ],
    "dateparser.freshness_date_parser.FreshnessDateDataParser.get_kwargs": [
        "",
        ""
    ],
    "dateparser.freshness_date_parser.FreshnessDateDataParser.get_date_data": [
        "",
        "",
        "Incomplete | None"
    ],
    "dateparser.languages.loader.LocaleDataLoader.get_locale_map": [
        "",
        "list[str] | None",
        "list[str] | None",
        "str | None",
        "bool",
        "bool"
    ],
    "dateparser.languages.loader.LocaleDataLoader.get_locales": [
        "",
        "list[str] | None",
        "list[str] | None",
        "str | None",
        "bool",
        "bool"
    ],
    "dateparser.languages.loader.LocaleDataLoader.get_locale": [
        "",
        "str"
    ],
    "dateparser.languages.locale.Locale.__init__": [
        "",
        "str",
        ""
    ],
    "dateparser.languages.locale.Locale.is_applicable": [
        "",
        "str",
        "bool",
        "Settings | None"
    ],
    "dateparser.languages.locale.Locale.count_applicability": [
        "",
        "str",
        "bool",
        "Settings | None"
    ],
    "dateparser.languages.locale.Locale.clean_dictionary": [
        "",
        "int"
    ],
    "dateparser.languages.locale.Locale.translate": [
        "",
        "str",
        "bool",
        "Settings | None"
    ],
    "dateparser.languages.locale.Locale.translate_search": [
        "",
        "",
        "Settings | None"
    ],
    "dateparser.languages.locale.Locale.get_wordchars_for_detection": [
        "",
        ""
    ],
    "dateparser.languages.locale.Locale.to_parserinfo": [
        "",
        ""
    ],
    "dateparser.languages.validation.LanguageValidator.get_logger": [
        ""
    ],
    "dateparser.languages.validation.LanguageValidator.validate_info": [
        "",
        "",
        ""
    ],
    "dateparser.languages.dictionary.Dictionary.__init__": [
        "",
        "",
        "Incomplete | None"
    ],
    "dateparser.languages.dictionary.Dictionary.__contains__": [
        "",
        ""
    ],
    "dateparser.languages.dictionary.Dictionary.__getitem__": [
        "",
        ""
    ],
    "dateparser.languages.dictionary.Dictionary.__iter__": [
        ""
    ],
    "dateparser.languages.dictionary.Dictionary.are_tokens_valid": [
        "",
        ""
    ],
    "dateparser.languages.dictionary.Dictionary.split": [
        "",
        "",
        "bool"
    ],
    "dateparser.languages.dictionary.NormalizedDictionary.__init__": [
        "",
        "",
        "Incomplete | None"
    ]
}