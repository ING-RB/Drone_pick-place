{
    "serial.urlhandler.protocol_alt.serial_class_for_url": [
        "str"
    ],
    "serial.urlhandler.protocol_spy._Formatter.rx": [
        "",
        "bytes"
    ],
    "serial.urlhandler.protocol_spy._Formatter.tx": [
        "",
        "bytes"
    ],
    "serial.urlhandler.protocol_spy._Formatter.control": [
        "",
        "str",
        "str"
    ],
    "serial.urlhandler.protocol_spy.FormatRaw.__init__": [
        "",
        "TextIO",
        "bool"
    ],
    "serial.urlhandler.protocol_spy.FormatHexdump.__init__": [
        "",
        "TextIO",
        "bool"
    ],
    "serial.urlhandler.protocol_spy.FormatHexdump.write_line": [
        "",
        "float",
        "str",
        "str",
        "str"
    ],
    "serial.urlhandler.protocol_spy.Serial.from_url": [
        "",
        "str"
    ],
    "serial.urlhandler.protocol_spy.sixteen": [
        "bytes"
    ],
    "serial.urlhandler.protocol_spy.hexdump": [
        "bytes"
    ],
    "serial.urlhandler.protocol_hwgrep.Serial.from_url": [
        "",
        "str"
    ],
    "serial.urlhandler.protocol_socket.Serial.open": [
        ""
    ],
    "serial.urlhandler.protocol_socket.Serial.from_url": [
        "",
        "str"
    ],
    "serial.urlhandler.protocol_socket.Serial.in_waiting": [
        ""
    ],
    "serial.urlhandler.protocol_socket.Serial.read": [
        "",
        "int"
    ],
    "serial.urlhandler.protocol_socket.Serial.write": [
        "",
        "ReadableBuffer"
    ],
    "serial.urlhandler.protocol_socket.Serial.reset_input_buffer": [
        ""
    ],
    "serial.urlhandler.protocol_socket.Serial.reset_output_buffer": [
        ""
    ],
    "serial.urlhandler.protocol_socket.Serial.cts": [
        ""
    ],
    "serial.urlhandler.protocol_socket.Serial.dsr": [
        ""
    ],
    "serial.urlhandler.protocol_socket.Serial.ri": [
        ""
    ],
    "serial.urlhandler.protocol_socket.Serial.cd": [
        ""
    ],
    "serial.urlhandler.protocol_loop.Serial.open": [
        ""
    ],
    "serial.urlhandler.protocol_loop.Serial.from_url": [
        "",
        "str"
    ],
    "serial.urlhandler.protocol_loop.Serial.in_waiting": [
        ""
    ],
    "serial.urlhandler.protocol_loop.Serial.read": [
        "",
        "int"
    ],
    "serial.urlhandler.protocol_loop.Serial.cancel_read": [
        ""
    ],
    "serial.urlhandler.protocol_loop.Serial.cancel_write": [
        ""
    ],
    "serial.urlhandler.protocol_loop.Serial.write": [
        "",
        "ReadableBuffer"
    ],
    "serial.urlhandler.protocol_loop.Serial.reset_input_buffer": [
        ""
    ],
    "serial.urlhandler.protocol_loop.Serial.reset_output_buffer": [
        ""
    ],
    "serial.urlhandler.protocol_loop.Serial.out_waiting": [
        ""
    ],
    "serial.urlhandler.protocol_loop.Serial.cts": [
        ""
    ],
    "serial.urlhandler.protocol_loop.Serial.dsr": [
        ""
    ],
    "serial.urlhandler.protocol_loop.Serial.ri": [
        ""
    ],
    "serial.urlhandler.protocol_loop.Serial.cd": [
        ""
    ],
    "serial.urlhandler.protocol_cp2110.Serial.open": [
        ""
    ],
    "serial.urlhandler.protocol_cp2110.Serial.from_url": [
        "",
        "str"
    ],
    "serial.urlhandler.protocol_cp2110.Serial.in_waiting": [
        ""
    ],
    "serial.urlhandler.protocol_cp2110.Serial.reset_input_buffer": [
        ""
    ],
    "serial.urlhandler.protocol_cp2110.Serial.reset_output_buffer": [
        ""
    ],
    "serial.urlhandler.protocol_cp2110.Serial.read": [
        "",
        "int"
    ],
    "serial.urlhandler.protocol_cp2110.Serial.write": [
        "",
        "ReadableBuffer"
    ],
    "serial.tools.list_ports.grep": [
        "str | re.Pattern[str]",
        "bool"
    ],
    "serial.tools.list_ports.main": [],
    "serial.tools.list_ports_common.ListPortInfo.__init__": [
        "",
        "str",
        "bool"
    ],
    "serial.tools.list_ports_common.ListPortInfo.usb_description": [
        ""
    ],
    "serial.tools.list_ports_common.ListPortInfo.usb_info": [
        ""
    ],
    "serial.tools.list_ports_common.ListPortInfo.apply_usb_info": [
        ""
    ],
    "serial.tools.list_ports_common.ListPortInfo.__lt__": [
        "",
        "ListPortInfo"
    ],
    "serial.tools.list_ports_common.ListPortInfo.__getitem__": [
        "",
        "int"
    ],
    "serial.tools.list_ports_common.numsplit": [
        "str"
    ],
    "serial.tools.list_ports_common.list_links": [
        "Collection[str]"
    ],
    "serial.tools.hexlify_codec.Codec.encode": [
        "",
        "str",
        "str"
    ],
    "serial.tools.hexlify_codec.Codec.decode": [
        "",
        "bytes",
        "str"
    ],
    "serial.tools.hexlify_codec.IncrementalEncoder.encode": [
        "",
        "str",
        "bool"
    ],
    "serial.tools.hexlify_codec.IncrementalDecoder.decode": [
        "",
        "ReadableBuffer",
        "bool"
    ],
    "serial.tools.hexlify_codec.hex_encode": [
        "str",
        "str"
    ],
    "serial.tools.hexlify_codec.hex_decode": [
        "bytes",
        "str"
    ],
    "serial.tools.hexlify_codec.getregentry": [],
    "serial.tools.list_ports_linux.SysFS.__init__": [
        "",
        "str"
    ],
    "serial.tools.list_ports_linux.SysFS.read_line": [
        ""
    ],
    "serial.tools.list_ports_linux.comports": [
        "bool"
    ],
    "serial.tools.miniterm.ConsoleBase.__init__": [
        ""
    ],
    "serial.tools.miniterm.ConsoleBase.setup": [
        ""
    ],
    "serial.tools.miniterm.ConsoleBase.cleanup": [
        ""
    ],
    "serial.tools.miniterm.ConsoleBase.getkey": [
        ""
    ],
    "serial.tools.miniterm.ConsoleBase.write_bytes": [
        "",
        "bytes"
    ],
    "serial.tools.miniterm.ConsoleBase.write": [
        "",
        "str"
    ],
    "serial.tools.miniterm.ConsoleBase.cancel": [
        ""
    ],
    "serial.tools.miniterm.ConsoleBase.__enter__": [
        ""
    ],
    "serial.tools.miniterm.ConsoleBase.__exit__": [
        ""
    ],
    "serial.tools.miniterm.Transform.rx": [
        "",
        "str"
    ],
    "serial.tools.miniterm.Transform.tx": [
        "",
        "str"
    ],
    "serial.tools.miniterm.Transform.echo": [
        "",
        "str"
    ],
    "serial.tools.miniterm.Miniterm.__init__": [
        "",
        "Serial",
        "bool",
        "str",
        "Iterable[str]"
    ],
    "serial.tools.miniterm.Miniterm.start": [
        ""
    ],
    "serial.tools.miniterm.Miniterm.stop": [
        ""
    ],
    "serial.tools.miniterm.Miniterm.join": [
        "",
        "bool"
    ],
    "serial.tools.miniterm.Miniterm.close": [
        ""
    ],
    "serial.tools.miniterm.Miniterm.update_transformations": [
        ""
    ],
    "serial.tools.miniterm.Miniterm.set_rx_encoding": [
        "",
        "str",
        "str"
    ],
    "serial.tools.miniterm.Miniterm.set_tx_encoding": [
        "",
        "str",
        "str"
    ],
    "serial.tools.miniterm.Miniterm.dump_port_settings": [
        ""
    ],
    "serial.tools.miniterm.Miniterm.reader": [
        ""
    ],
    "serial.tools.miniterm.Miniterm.writer": [
        ""
    ],
    "serial.tools.miniterm.Miniterm.handle_menu_key": [
        "",
        "str"
    ],
    "serial.tools.miniterm.Miniterm.upload_file": [
        ""
    ],
    "serial.tools.miniterm.Miniterm.change_filter": [
        ""
    ],
    "serial.tools.miniterm.Miniterm.change_encoding": [
        ""
    ],
    "serial.tools.miniterm.Miniterm.change_baudrate": [
        ""
    ],
    "serial.tools.miniterm.Miniterm.change_port": [
        ""
    ],
    "serial.tools.miniterm.Miniterm.suspend_port": [
        ""
    ],
    "serial.tools.miniterm.Miniterm.get_help_text": [
        ""
    ],
    "serial.tools.miniterm.key_description": [
        "str"
    ],
    "serial.tools.miniterm.ask_for_port": [],
    "serial.tools.miniterm.main": [
        "str | None",
        "int",
        "int | None",
        "int | None"
    ],
    "serial.threaded.__init__.Protocol.connection_made": [
        "",
        "ReaderThread"
    ],
    "serial.threaded.__init__.Protocol.data_received": [
        "",
        "bytes"
    ],
    "serial.threaded.__init__.Protocol.connection_lost": [
        "",
        "BaseException | None"
    ],
    "serial.threaded.__init__.Packetizer.handle_packet": [
        "",
        "bytes"
    ],
    "serial.threaded.__init__.FramedPacket.handle_packet": [
        "",
        "bytes"
    ],
    "serial.threaded.__init__.FramedPacket.handle_out_of_packet_data": [
        "",
        "bytes"
    ],
    "serial.threaded.__init__.LineReader.handle_line": [
        "",
        "str"
    ],
    "serial.threaded.__init__.LineReader.write_line": [
        "",
        "str"
    ],
    "serial.threaded.__init__.ReaderThread.__init__": [
        "",
        "Serial",
        "Callable[[], Protocol]"
    ],
    "serial.threaded.__init__.ReaderThread.stop": [
        ""
    ],
    "serial.threaded.__init__.ReaderThread.write": [
        "",
        "ReadableBuffer"
    ],
    "serial.threaded.__init__.ReaderThread.close": [
        ""
    ],
    "serial.threaded.__init__.ReaderThread.connect": [
        ""
    ],
    "serial.threaded.__init__.ReaderThread.__enter__": [
        ""
    ],
    "serial.threaded.__init__.ReaderThread.__exit__": [
        "",
        "type[BaseException] | None",
        "BaseException | None",
        "TracebackType | None"
    ],
    "serial.rfc2217.TelnetOption.__init__": [
        "",
        "Serial",
        "str",
        "bytes",
        "bytes",
        "bytes",
        "bytes",
        "bytes",
        "str",
        "Callable[[], Any] | None"
    ],
    "serial.rfc2217.TelnetOption.process_incoming": [
        "",
        "bytes"
    ],
    "serial.rfc2217.TelnetSubnegotiation.__init__": [
        "",
        "Serial",
        "str",
        "bytes",
        "bytes | None"
    ],
    "serial.rfc2217.TelnetSubnegotiation.set": [
        "",
        "bytes"
    ],
    "serial.rfc2217.TelnetSubnegotiation.is_ready": [
        ""
    ],
    "serial.rfc2217.TelnetSubnegotiation.active": [
        ""
    ],
    "serial.rfc2217.TelnetSubnegotiation.wait": [
        "",
        "float"
    ],
    "serial.rfc2217.TelnetSubnegotiation.check_answer": [
        "",
        "bytes"
    ],
    "serial.rfc2217.Serial.open": [
        ""
    ],
    "serial.rfc2217.Serial.from_url": [
        "",
        "str"
    ],
    "serial.rfc2217.Serial.in_waiting": [
        ""
    ],
    "serial.rfc2217.Serial.read": [
        "",
        "int"
    ],
    "serial.rfc2217.Serial.write": [
        "",
        "ReadableBuffer"
    ],
    "serial.rfc2217.Serial.reset_input_buffer": [
        ""
    ],
    "serial.rfc2217.Serial.reset_output_buffer": [
        ""
    ],
    "serial.rfc2217.Serial.cts": [
        ""
    ],
    "serial.rfc2217.Serial.dsr": [
        ""
    ],
    "serial.rfc2217.Serial.ri": [
        ""
    ],
    "serial.rfc2217.Serial.cd": [
        ""
    ],
    "serial.rfc2217.Serial.telnet_send_option": [
        "",
        "bytes",
        "bytes"
    ],
    "serial.rfc2217.Serial.rfc2217_send_subnegotiation": [
        "",
        "bytes",
        "bytes"
    ],
    "serial.rfc2217.Serial.rfc2217_send_purge": [
        "",
        "bytes"
    ],
    "serial.rfc2217.Serial.rfc2217_set_control": [
        "",
        "bytes"
    ],
    "serial.rfc2217.Serial.rfc2217_flow_server_ready": [
        ""
    ],
    "serial.rfc2217.Serial.get_modem_state": [
        ""
    ],
    "serial.rfc2217.PortManager.__init__": [
        "",
        "Serial",
        "Serial",
        "logging.Logger | None"
    ],
    "serial.rfc2217.PortManager.telnet_send_option": [
        "",
        "bytes",
        "bytes"
    ],
    "serial.rfc2217.PortManager.rfc2217_send_subnegotiation": [
        "",
        "bytes",
        "bytes"
    ],
    "serial.rfc2217.PortManager.check_modem_lines": [
        "",
        "bool"
    ],
    "serial.rfc2217.PortManager.escape": [
        "",
        "bytes"
    ],
    "serial.rfc2217.PortManager.filter": [
        "",
        "bytes"
    ],
    "serial.serialposix.PlatformSpecificBase.set_low_latency_mode": [
        "",
        "bool"
    ],
    "serial.serialposix.Serial.open": [
        ""
    ],
    "serial.serialposix.Serial.in_waiting": [
        ""
    ],
    "serial.serialposix.Serial.read": [
        "",
        "int"
    ],
    "serial.serialposix.Serial.cancel_read": [
        ""
    ],
    "serial.serialposix.Serial.cancel_write": [
        ""
    ],
    "serial.serialposix.Serial.write": [
        "",
        "ReadableBuffer"
    ],
    "serial.serialposix.Serial.reset_input_buffer": [
        ""
    ],
    "serial.serialposix.Serial.reset_output_buffer": [
        ""
    ],
    "serial.serialposix.Serial.send_break": [
        "",
        "float"
    ],
    "serial.serialposix.Serial.cts": [
        ""
    ],
    "serial.serialposix.Serial.dsr": [
        ""
    ],
    "serial.serialposix.Serial.ri": [
        ""
    ],
    "serial.serialposix.Serial.cd": [
        ""
    ],
    "serial.serialposix.Serial.out_waiting": [
        ""
    ],
    "serial.serialposix.Serial.set_input_flow_control": [
        "",
        "bool"
    ],
    "serial.serialposix.Serial.set_output_flow_control": [
        "",
        "bool"
    ],
    "serial.serialposix.Serial.nonblocking": [
        ""
    ],
    "serial.serialposix.VTIMESerial.cancel_read": [
        ""
    ],
    "serial.serialjava.Serial.open": [
        ""
    ],
    "serial.serialjava.Serial.in_waiting": [
        ""
    ],
    "serial.serialjava.Serial.read": [
        "",
        "int"
    ],
    "serial.serialjava.Serial.write": [
        "",
        "ReadableBuffer"
    ],
    "serial.serialjava.Serial.reset_input_buffer": [
        ""
    ],
    "serial.serialjava.Serial.reset_output_buffer": [
        ""
    ],
    "serial.serialjava.Serial.cts": [
        ""
    ],
    "serial.serialjava.Serial.dsr": [
        ""
    ],
    "serial.serialjava.Serial.ri": [
        ""
    ],
    "serial.serialjava.Serial.cd": [
        ""
    ],
    "serial.serialjava.my_import": [
        "str"
    ],
    "serial.serialjava.detect_java_comm": [
        "Iterable[str]"
    ],
    "serial.serialjava.device": [
        "int"
    ],
    "serial.__init__.serial_for_url": [
        "str | None",
        "int",
        "int",
        "str",
        "float",
        "float | None",
        "bool",
        "bool",
        "float | None",
        "bool",
        "float | None",
        "float | None"
    ],
    "serial.rs485.RS485Settings.__init__": [
        "",
        "bool",
        "bool",
        "bool",
        "float | None",
        "float | None"
    ],
    "serial.serialwin32.Serial.open": [
        ""
    ],
    "serial.serialwin32.Serial.in_waiting": [
        ""
    ],
    "serial.serialwin32.Serial.read": [
        "",
        "int"
    ],
    "serial.serialwin32.Serial.write": [
        "",
        "ReadableBuffer"
    ],
    "serial.serialwin32.Serial.reset_input_buffer": [
        ""
    ],
    "serial.serialwin32.Serial.reset_output_buffer": [
        ""
    ],
    "serial.serialwin32.Serial.cts": [
        ""
    ],
    "serial.serialwin32.Serial.dsr": [
        ""
    ],
    "serial.serialwin32.Serial.ri": [
        ""
    ],
    "serial.serialwin32.Serial.cd": [
        ""
    ],
    "serial.serialwin32.Serial.set_buffer_size": [
        "",
        "int",
        "int | None"
    ],
    "serial.serialwin32.Serial.set_output_flow_control": [
        "",
        "bool"
    ],
    "serial.serialwin32.Serial.out_waiting": [
        ""
    ],
    "serial.serialwin32.Serial.cancel_read": [
        ""
    ],
    "serial.serialwin32.Serial.cancel_write": [
        ""
    ],
    "serial.serialutil.PortNotOpenError.__init__": [
        ""
    ],
    "serial.serialutil.Timeout.__init__": [
        "",
        "float"
    ],
    "serial.serialutil.Timeout.expired": [
        ""
    ],
    "serial.serialutil.Timeout.time_left": [
        ""
    ],
    "serial.serialutil.Timeout.restart": [
        "",
        "float"
    ],
    "serial.serialutil.SerialBase.__init__": [
        "",
        "str | None",
        "int",
        "int",
        "str",
        "float",
        "float | None",
        "bool",
        "bool",
        "float | None",
        "bool",
        "float | None",
        "float | None"
    ],
    "serial.serialutil.SerialBase.read": [
        "",
        "int"
    ],
    "serial.serialutil.SerialBase.write": [
        "",
        "ReadableBuffer"
    ],
    "serial.serialutil.SerialBase.port": [
        ""
    ],
    "serial.serialutil.SerialBase.baudrate": [
        ""
    ],
    "serial.serialutil.SerialBase.bytesize": [
        ""
    ],
    "serial.serialutil.SerialBase.exclusive": [
        ""
    ],
    "serial.serialutil.SerialBase.parity": [
        ""
    ],
    "serial.serialutil.SerialBase.stopbits": [
        ""
    ],
    "serial.serialutil.SerialBase.timeout": [
        ""
    ],
    "serial.serialutil.SerialBase.write_timeout": [
        ""
    ],
    "serial.serialutil.SerialBase.inter_byte_timeout": [
        ""
    ],
    "serial.serialutil.SerialBase.xonxoff": [
        ""
    ],
    "serial.serialutil.SerialBase.rtscts": [
        ""
    ],
    "serial.serialutil.SerialBase.dsrdtr": [
        ""
    ],
    "serial.serialutil.SerialBase.rts": [
        ""
    ],
    "serial.serialutil.SerialBase.dtr": [
        ""
    ],
    "serial.serialutil.SerialBase.break_condition": [
        ""
    ],
    "serial.serialutil.SerialBase.rs485_mode": [
        ""
    ],
    "serial.serialutil.SerialBase.get_settings": [
        ""
    ],
    "serial.serialutil.SerialBase.apply_settings": [
        "",
        "dict[str, Any]"
    ],
    "serial.serialutil.SerialBase.readinto": [
        "",
        "WriteableBuffer"
    ],
    "serial.serialutil.SerialBase.send_break": [
        "",
        "float"
    ],
    "serial.serialutil.SerialBase.read_all": [
        ""
    ],
    "serial.serialutil.SerialBase.read_until": [
        "",
        "bytes",
        "int | None"
    ],
    "serial.serialutil.SerialBase.iread_until": [
        "",
        "bytes",
        "int | None"
    ],
    "serial.serialcli.Serial.open": [
        ""
    ],
    "serial.serialcli.Serial.in_waiting": [
        ""
    ],
    "serial.serialcli.Serial.read": [
        "",
        "int"
    ],
    "serial.serialcli.Serial.write": [
        "",
        "ReadableBuffer"
    ],
    "serial.serialcli.Serial.reset_input_buffer": [
        ""
    ],
    "serial.serialcli.Serial.reset_output_buffer": [
        ""
    ],
    "serial.serialcli.Serial.cts": [
        ""
    ],
    "serial.serialcli.Serial.dsr": [
        ""
    ],
    "serial.serialcli.Serial.ri": [
        ""
    ],
    "serial.serialcli.Serial.cd": [
        ""
    ],
    "serial.serialcli.as_byte_array": [
        "bytes"
    ]
}