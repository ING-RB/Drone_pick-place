{
    "functools._lru_cache_wrapper.__call__": [
        ""
    ],
    "functools._lru_cache_wrapper.cache_info": [
        ""
    ],
    "functools._lru_cache_wrapper.cache_clear": [
        ""
    ],
    "functools._lru_cache_wrapper.__copy__": [
        ""
    ],
    "functools._lru_cache_wrapper.__deepcopy__": [
        "",
        "Any"
    ],
    "functools._Wrapped.__call__": [
        ""
    ],
    "functools._Wrapper.__call__": [
        "",
        "Callable[_PWrapper, _RWapper]"
    ],
    "functools.partial.func": [
        ""
    ],
    "functools.partial.args": [
        ""
    ],
    "functools.partial.keywords": [
        ""
    ],
    "functools.partial.__new__": [
        "",
        "Callable[..., _T]"
    ],
    "functools.partial.__call__": [
        ""
    ],
    "functools.partialmethod.__init__": [
        "",
        "Callable[..., _T]"
    ],
    "functools.partialmethod.__isabstractmethod__": [
        ""
    ],
    "functools._SingleDispatchCallable.dispatch": [
        "",
        "Any"
    ],
    "functools._SingleDispatchCallable.register": [
        "",
        "type[Any]",
        "None"
    ],
    "functools._SingleDispatchCallable._clear_cache": [
        ""
    ],
    "functools._SingleDispatchCallable.__call__": [
        ""
    ],
    "functools.reduce": [
        "Callable[[_T, _S], _T]",
        "Iterable[_S]",
        "_T"
    ],
    "functools.total_ordering": [
        "type[_T]"
    ],
    "functools.cmp_to_key": [
        "Callable[[_T, _T], int]"
    ],
    "functools.singledispatch": [
        "Callable[..., _T]"
    ],
    "functools._make_key": [
        "tuple[Hashable, ...]",
        "SupportsItems[Any, Any]",
        "bool",
        "tuple[object, ...]",
        "set[type]",
        "type",
        "Any",
        "Callable[[Sized], int]"
    ]
}