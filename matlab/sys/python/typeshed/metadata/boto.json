{
    "boto.connection.HostConnectionPool.__init__": [
        ""
    ],
    "boto.connection.HostConnectionPool.size": [
        ""
    ],
    "boto.connection.HostConnectionPool.put": [
        "",
        ""
    ],
    "boto.connection.HostConnectionPool.get": [
        ""
    ],
    "boto.connection.HostConnectionPool.clean": [
        ""
    ],
    "boto.connection.ConnectionPool.__init__": [
        ""
    ],
    "boto.connection.ConnectionPool.size": [
        ""
    ],
    "boto.connection.ConnectionPool.get_http_connection": [
        "",
        "",
        "",
        ""
    ],
    "boto.connection.ConnectionPool.put_http_connection": [
        "",
        "",
        "",
        "",
        ""
    ],
    "boto.connection.ConnectionPool.clean": [
        ""
    ],
    "boto.connection.HTTPRequest.__init__": [
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        ""
    ],
    "boto.connection.HTTPRequest.authorize": [
        "",
        ""
    ],
    "boto.connection.HTTPResponse.__init__": [
        ""
    ],
    "boto.connection.HTTPResponse.read": [
        "",
        "Incomplete | None"
    ],
    "boto.connection.AWSAuthConnection.__init__": [
        "",
        "",
        "Incomplete | None",
        "Incomplete | None",
        "bool",
        "Incomplete | None",
        "Incomplete | None",
        "Incomplete | None",
        "Incomplete | None",
        "Incomplete | None",
        "int",
        "Incomplete | None",
        "str",
        "str",
        "Incomplete | None",
        "bool",
        "bool",
        "Incomplete | None"
    ],
    "boto.connection.AWSAuthConnection.connection": [
        ""
    ],
    "boto.connection.AWSAuthConnection.aws_access_key_id": [
        ""
    ],
    "boto.connection.AWSAuthConnection.gs_access_key_id": [
        ""
    ],
    "boto.connection.AWSAuthConnection.access_key": [
        ""
    ],
    "boto.connection.AWSAuthConnection.aws_secret_access_key": [
        ""
    ],
    "boto.connection.AWSAuthConnection.gs_secret_access_key": [
        ""
    ],
    "boto.connection.AWSAuthConnection.secret_key": [
        ""
    ],
    "boto.connection.AWSAuthConnection.profile_name": [
        ""
    ],
    "boto.connection.AWSAuthConnection.get_path": [
        "",
        "str"
    ],
    "boto.connection.AWSAuthConnection.server_name": [
        "",
        "Incomplete | None"
    ],
    "boto.connection.AWSAuthConnection.handle_proxy": [
        "",
        "",
        "",
        "",
        ""
    ],
    "boto.connection.AWSAuthConnection.get_http_connection": [
        "",
        "",
        "",
        ""
    ],
    "boto.connection.AWSAuthConnection.skip_proxy": [
        "",
        ""
    ],
    "boto.connection.AWSAuthConnection.new_http_connection": [
        "",
        "",
        "",
        ""
    ],
    "boto.connection.AWSAuthConnection.put_http_connection": [
        "",
        "",
        "",
        "",
        ""
    ],
    "boto.connection.AWSAuthConnection.proxy_ssl": [
        "",
        "Incomplete | None",
        "Incomplete | None"
    ],
    "boto.connection.AWSAuthConnection.prefix_proxy_to_path": [
        "",
        "",
        "Incomplete | None"
    ],
    "boto.connection.AWSAuthConnection.get_proxy_auth_header": [
        ""
    ],
    "boto.connection.AWSAuthConnection.get_proxy_url_with_auth": [
        ""
    ],
    "boto.connection.AWSAuthConnection.set_host_header": [
        "",
        ""
    ],
    "boto.connection.AWSAuthConnection.set_request_hook": [
        "",
        ""
    ],
    "boto.connection.AWSAuthConnection.build_base_http_request": [
        "",
        "",
        "",
        "",
        "Incomplete | None",
        "Incomplete | None",
        "str",
        "Incomplete | None"
    ],
    "boto.connection.AWSAuthConnection.make_request": [
        "",
        "",
        "",
        "Incomplete | None",
        "str",
        "Incomplete | None",
        "Incomplete | None",
        "Incomplete | None",
        "Incomplete | None",
        "Incomplete | None",
        "Incomplete | None"
    ],
    "boto.connection.AWSAuthConnection.close": [
        ""
    ],
    "boto.connection.AWSQueryConnection.__init__": [
        "",
        "Incomplete | None",
        "Incomplete | None",
        "bool",
        "Incomplete | None",
        "Incomplete | None",
        "Incomplete | None",
        "Incomplete | None",
        "Incomplete | None",
        "Incomplete | None",
        "int",
        "Incomplete | None",
        "str",
        "Incomplete | None",
        "bool",
        "Incomplete | None",
        "str"
    ],
    "boto.connection.AWSQueryConnection.get_utf8_value": [
        "",
        ""
    ],
    "boto.connection.AWSQueryConnection.make_request": [
        "",
        "",
        "Incomplete | None",
        "str",
        "str"
    ],
    "boto.connection.AWSQueryConnection.build_list_params": [
        "",
        "",
        "",
        ""
    ],
    "boto.connection.AWSQueryConnection.build_complex_list_params": [
        "",
        "",
        "",
        "",
        ""
    ],
    "boto.connection.AWSQueryConnection.get_list": [
        "",
        "",
        "",
        "",
        "str",
        "Incomplete | None",
        "str"
    ],
    "boto.connection.AWSQueryConnection.get_object": [
        "",
        "",
        "",
        "",
        "str",
        "Incomplete | None",
        "str"
    ],
    "boto.connection.AWSQueryConnection.get_status": [
        "",
        "",
        "",
        "str",
        "Incomplete | None",
        "str"
    ],
    "boto.elb.__init__.ELBConnection.__init__": [
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        ""
    ],
    "boto.elb.__init__.ELBConnection.build_list_params": [
        "",
        "",
        "",
        ""
    ],
    "boto.elb.__init__.ELBConnection.get_all_load_balancers": [
        "",
        "",
        ""
    ],
    "boto.elb.__init__.ELBConnection.create_load_balancer": [
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        ""
    ],
    "boto.elb.__init__.ELBConnection.create_load_balancer_listeners": [
        "",
        "",
        "",
        ""
    ],
    "boto.elb.__init__.ELBConnection.delete_load_balancer": [
        "",
        ""
    ],
    "boto.elb.__init__.ELBConnection.delete_load_balancer_listeners": [
        "",
        "",
        ""
    ],
    "boto.elb.__init__.ELBConnection.enable_availability_zones": [
        "",
        "",
        ""
    ],
    "boto.elb.__init__.ELBConnection.disable_availability_zones": [
        "",
        "",
        ""
    ],
    "boto.elb.__init__.ELBConnection.modify_lb_attribute": [
        "",
        "",
        "",
        ""
    ],
    "boto.elb.__init__.ELBConnection.get_all_lb_attributes": [
        "",
        ""
    ],
    "boto.elb.__init__.ELBConnection.get_lb_attribute": [
        "",
        "",
        ""
    ],
    "boto.elb.__init__.ELBConnection.register_instances": [
        "",
        "",
        ""
    ],
    "boto.elb.__init__.ELBConnection.deregister_instances": [
        "",
        "",
        ""
    ],
    "boto.elb.__init__.ELBConnection.describe_instance_health": [
        "",
        "",
        ""
    ],
    "boto.elb.__init__.ELBConnection.configure_health_check": [
        "",
        "",
        ""
    ],
    "boto.elb.__init__.ELBConnection.set_lb_listener_SSL_certificate": [
        "",
        "",
        "",
        ""
    ],
    "boto.elb.__init__.ELBConnection.create_app_cookie_stickiness_policy": [
        "",
        "",
        "",
        ""
    ],
    "boto.elb.__init__.ELBConnection.create_lb_cookie_stickiness_policy": [
        "",
        "",
        "",
        ""
    ],
    "boto.elb.__init__.ELBConnection.create_lb_policy": [
        "",
        "",
        "",
        "",
        ""
    ],
    "boto.elb.__init__.ELBConnection.delete_lb_policy": [
        "",
        "",
        ""
    ],
    "boto.elb.__init__.ELBConnection.set_lb_policies_of_listener": [
        "",
        "",
        "",
        ""
    ],
    "boto.elb.__init__.ELBConnection.set_lb_policies_of_backend_server": [
        "",
        "",
        "",
        ""
    ],
    "boto.elb.__init__.ELBConnection.apply_security_groups_to_lb": [
        "",
        "",
        ""
    ],
    "boto.elb.__init__.ELBConnection.attach_lb_to_subnets": [
        "",
        "",
        ""
    ],
    "boto.elb.__init__.ELBConnection.detach_lb_from_subnets": [
        "",
        "",
        ""
    ],
    "boto.elb.__init__.regions": [],
    "boto.elb.__init__.connect_to_region": [
        ""
    ],
    "boto.auth.HmacKeys.__init__": [
        "",
        "",
        "",
        ""
    ],
    "boto.auth.HmacKeys.update_provider": [
        "",
        ""
    ],
    "boto.auth.HmacKeys.algorithm": [
        ""
    ],
    "boto.auth.HmacKeys.sign_string": [
        "",
        ""
    ],
    "boto.auth.AnonAuthHandler.__init__": [
        "",
        "",
        "",
        ""
    ],
    "boto.auth.AnonAuthHandler.add_auth": [
        "",
        ""
    ],
    "boto.auth.HmacAuthV1Handler.__init__": [
        "",
        "",
        "",
        ""
    ],
    "boto.auth.HmacAuthV1Handler.update_provider": [
        "",
        ""
    ],
    "boto.auth.HmacAuthV1Handler.add_auth": [
        "",
        ""
    ],
    "boto.auth.HmacAuthV2Handler.__init__": [
        "",
        "",
        "",
        ""
    ],
    "boto.auth.HmacAuthV2Handler.update_provider": [
        "",
        ""
    ],
    "boto.auth.HmacAuthV2Handler.add_auth": [
        "",
        ""
    ],
    "boto.auth.HmacAuthV3Handler.__init__": [
        "",
        "",
        "",
        ""
    ],
    "boto.auth.HmacAuthV3Handler.add_auth": [
        "",
        ""
    ],
    "boto.auth.HmacAuthV3HTTPHandler.__init__": [
        "",
        "",
        "",
        ""
    ],
    "boto.auth.HmacAuthV3HTTPHandler.headers_to_sign": [
        "",
        ""
    ],
    "boto.auth.HmacAuthV3HTTPHandler.canonical_headers": [
        "",
        ""
    ],
    "boto.auth.HmacAuthV3HTTPHandler.string_to_sign": [
        "",
        ""
    ],
    "boto.auth.HmacAuthV3HTTPHandler.add_auth": [
        "",
        ""
    ],
    "boto.auth.HmacAuthV4Handler.__init__": [
        "",
        "",
        "",
        "",
        "Incomplete | None",
        "Incomplete | None"
    ],
    "boto.auth.HmacAuthV4Handler.headers_to_sign": [
        "",
        ""
    ],
    "boto.auth.HmacAuthV4Handler.host_header": [
        "",
        "",
        ""
    ],
    "boto.auth.HmacAuthV4Handler.query_string": [
        "",
        ""
    ],
    "boto.auth.HmacAuthV4Handler.canonical_query_string": [
        "",
        ""
    ],
    "boto.auth.HmacAuthV4Handler.canonical_headers": [
        "",
        ""
    ],
    "boto.auth.HmacAuthV4Handler.signed_headers": [
        "",
        ""
    ],
    "boto.auth.HmacAuthV4Handler.canonical_uri": [
        "",
        ""
    ],
    "boto.auth.HmacAuthV4Handler.payload": [
        "",
        ""
    ],
    "boto.auth.HmacAuthV4Handler.canonical_request": [
        "",
        ""
    ],
    "boto.auth.HmacAuthV4Handler.scope": [
        "",
        ""
    ],
    "boto.auth.HmacAuthV4Handler.split_host_parts": [
        "",
        ""
    ],
    "boto.auth.HmacAuthV4Handler.determine_region_name": [
        "",
        ""
    ],
    "boto.auth.HmacAuthV4Handler.determine_service_name": [
        "",
        ""
    ],
    "boto.auth.HmacAuthV4Handler.credential_scope": [
        "",
        ""
    ],
    "boto.auth.HmacAuthV4Handler.string_to_sign": [
        "",
        "",
        ""
    ],
    "boto.auth.HmacAuthV4Handler.signature": [
        "",
        "",
        ""
    ],
    "boto.auth.HmacAuthV4Handler.add_auth": [
        "",
        ""
    ],
    "boto.auth.S3HmacAuthV4Handler.__init__": [
        ""
    ],
    "boto.auth.S3HmacAuthV4Handler.clean_region_name": [
        "",
        ""
    ],
    "boto.auth.S3HmacAuthV4Handler.canonical_uri": [
        "",
        ""
    ],
    "boto.auth.S3HmacAuthV4Handler.canonical_query_string": [
        "",
        ""
    ],
    "boto.auth.S3HmacAuthV4Handler.host_header": [
        "",
        "",
        ""
    ],
    "boto.auth.S3HmacAuthV4Handler.headers_to_sign": [
        "",
        ""
    ],
    "boto.auth.S3HmacAuthV4Handler.determine_region_name": [
        "",
        ""
    ],
    "boto.auth.S3HmacAuthV4Handler.determine_service_name": [
        "",
        ""
    ],
    "boto.auth.S3HmacAuthV4Handler.mangle_path_and_params": [
        "",
        ""
    ],
    "boto.auth.S3HmacAuthV4Handler.payload": [
        "",
        ""
    ],
    "boto.auth.S3HmacAuthV4Handler.add_auth": [
        "",
        ""
    ],
    "boto.auth.S3HmacAuthV4Handler.presign": [
        "",
        "",
        "",
        "Incomplete | None"
    ],
    "boto.auth.STSAnonHandler.add_auth": [
        "",
        ""
    ],
    "boto.auth.QuerySignatureHelper.add_auth": [
        "",
        ""
    ],
    "boto.auth.QuerySignatureV1AuthHandler.__init__": [
        ""
    ],
    "boto.auth.POSTPathQSV2AuthHandler.add_auth": [
        "",
        ""
    ],
    "boto.auth.get_auth_handler": [
        "",
        "",
        "",
        "Incomplete | None"
    ],
    "boto.auth.detect_potential_sigv4": [
        ""
    ],
    "boto.auth.detect_potential_s3sigv4": [
        ""
    ],
    "boto.ec2.__init__.regions": [],
    "boto.ec2.__init__.connect_to_region": [
        ""
    ],
    "boto.ec2.__init__.get_region": [
        ""
    ],
    "boto.ec2.__init__.__getattr__": [
        "str"
    ],
    "boto.utils.LazyLoadMetadata.__init__": [
        "",
        "str",
        "int",
        "int | None"
    ],
    "boto.utils.ShellCommand.__init__": [
        "",
        "subprocess._CMD",
        "bool",
        "bool",
        "StrOrBytesPath | None"
    ],
    "boto.utils.ShellCommand.run": [
        "",
        "subprocess._CMD | None"
    ],
    "boto.utils.ShellCommand.setReadOnly": [
        "",
        ""
    ],
    "boto.utils.ShellCommand.getStatus": [
        ""
    ],
    "boto.utils.ShellCommand.getOutput": [
        ""
    ],
    "boto.utils.AuthSMTPHandler.__init__": [
        "",
        "str",
        "str",
        "str",
        "str",
        "Sequence[str]",
        "str"
    ],
    "boto.utils.LRUCache.__init__": [
        "",
        "int"
    ],
    "boto.utils.Password.__init__": [
        "",
        "_Str | None",
        "Callable[[bytes], _Hash] | None"
    ],
    "boto.utils.Password.set": [
        "",
        "bytes | _Str"
    ],
    "boto.utils.Password.__eq__": [
        "",
        "_Str | bytes | None"
    ],
    "boto.utils.Password.__len__": [
        ""
    ],
    "boto.utils.RequestHook.handle_request_data": [
        "",
        "boto.connection.HTTPRequest",
        "boto.connection.HTTPResponse",
        "bool"
    ],
    "boto.utils.unquote_v": [
        "str"
    ],
    "boto.utils.canonical_string": [
        "str",
        "str",
        "Mapping[str, str | None]",
        "int | None",
        "_Provider | None"
    ],
    "boto.utils.merge_meta": [
        "Mapping[str, str]",
        "Mapping[str, str]",
        "_Provider | None"
    ],
    "boto.utils.get_aws_metadata": [
        "Mapping[str, str]",
        "_Provider | None"
    ],
    "boto.utils.retry_url": [
        "str",
        "bool",
        "int",
        "int | None"
    ],
    "boto.utils.get_instance_metadata": [
        "str",
        "str",
        "str",
        "int | None",
        "int"
    ],
    "boto.utils.get_instance_identity": [
        "str",
        "str",
        "int | None",
        "int"
    ],
    "boto.utils.get_instance_userdata": [
        "str",
        "str | None",
        "str",
        "int | None",
        "int"
    ],
    "boto.utils.setlocale": [
        "str | tuple[str, str]"
    ],
    "boto.utils.get_ts": [
        "time.struct_time | None"
    ],
    "boto.utils.parse_ts": [
        "str"
    ],
    "boto.utils.find_class": [
        "str",
        "str | None"
    ],
    "boto.utils.update_dme": [
        "str",
        "str",
        "str",
        "str"
    ],
    "boto.utils.fetch_file": [
        "str",
        "IO[str] | None",
        "str | None",
        "str | None"
    ],
    "boto.utils.notify": [
        "str",
        "str | None",
        "Sequence[str] | str | None",
        "str | None",
        "Iterable[Message] | None",
        "bool"
    ],
    "boto.utils.get_utf8_value": [
        "str"
    ],
    "boto.utils.mklist": [
        "Any"
    ],
    "boto.utils.pythonize_name": [
        "str"
    ],
    "boto.utils.write_mime_multipart": [
        "list[tuple[str, str]]",
        "bool",
        "str",
        "str"
    ],
    "boto.utils.guess_mime_type": [
        "str",
        "str"
    ],
    "boto.utils.compute_md5": [
        "IO[Any]",
        "int",
        "int | None"
    ],
    "boto.utils.compute_hash": [
        "IO[Any]",
        "int",
        "int | None",
        "Any"
    ],
    "boto.utils.find_matching_headers": [
        "str",
        "Mapping[str, str | None]"
    ],
    "boto.utils.merge_headers_by_name": [
        "str",
        "Mapping[str, str | None]"
    ],
    "boto.utils.host_is_ipv6": [
        "str"
    ],
    "boto.utils.parse_host": [
        "str"
    ],
    "boto.kms.layer1.KMSConnection.__init__": [
        ""
    ],
    "boto.kms.layer1.KMSConnection.create_alias": [
        "",
        "str",
        "str"
    ],
    "boto.kms.layer1.KMSConnection.create_grant": [
        "",
        "str",
        "str",
        "str | None",
        "list[str] | None",
        "dict[str, dict[str, str]] | None",
        "list[str] | None"
    ],
    "boto.kms.layer1.KMSConnection.create_key": [
        "",
        "str | None",
        "str | None",
        "str | None"
    ],
    "boto.kms.layer1.KMSConnection.decrypt": [
        "",
        "bytes",
        "Mapping[str, Any] | None",
        "list[str] | None"
    ],
    "boto.kms.layer1.KMSConnection.delete_alias": [
        "",
        "str"
    ],
    "boto.kms.layer1.KMSConnection.describe_key": [
        "",
        "str"
    ],
    "boto.kms.layer1.KMSConnection.disable_key": [
        "",
        "str"
    ],
    "boto.kms.layer1.KMSConnection.disable_key_rotation": [
        "",
        "str"
    ],
    "boto.kms.layer1.KMSConnection.enable_key": [
        "",
        "str"
    ],
    "boto.kms.layer1.KMSConnection.enable_key_rotation": [
        "",
        "str"
    ],
    "boto.kms.layer1.KMSConnection.encrypt": [
        "",
        "str",
        "bytes",
        "Mapping[str, Any] | None",
        "list[str] | None"
    ],
    "boto.kms.layer1.KMSConnection.generate_data_key": [
        "",
        "str",
        "Mapping[str, Any] | None",
        "int | None",
        "str | None",
        "list[str] | None"
    ],
    "boto.kms.layer1.KMSConnection.generate_data_key_without_plaintext": [
        "",
        "str",
        "Mapping[str, Any] | None",
        "str | None",
        "int | None",
        "list[str] | None"
    ],
    "boto.kms.layer1.KMSConnection.generate_random": [
        "",
        "int | None"
    ],
    "boto.kms.layer1.KMSConnection.get_key_policy": [
        "",
        "str",
        "str"
    ],
    "boto.kms.layer1.KMSConnection.get_key_rotation_status": [
        "",
        "str"
    ],
    "boto.kms.layer1.KMSConnection.list_aliases": [
        "",
        "int | None",
        "str | None"
    ],
    "boto.kms.layer1.KMSConnection.list_grants": [
        "",
        "str",
        "int | None",
        "str | None"
    ],
    "boto.kms.layer1.KMSConnection.list_key_policies": [
        "",
        "str",
        "int | None",
        "str | None"
    ],
    "boto.kms.layer1.KMSConnection.list_keys": [
        "",
        "int | None",
        "str | None"
    ],
    "boto.kms.layer1.KMSConnection.put_key_policy": [
        "",
        "str",
        "str",
        "str"
    ],
    "boto.kms.layer1.KMSConnection.re_encrypt": [
        "",
        "bytes",
        "str",
        "Mapping[str, Any] | None",
        "Mapping[str, Any] | None",
        "list[str] | None"
    ],
    "boto.kms.layer1.KMSConnection.retire_grant": [
        "",
        "str"
    ],
    "boto.kms.layer1.KMSConnection.revoke_grant": [
        "",
        "str",
        "str"
    ],
    "boto.kms.layer1.KMSConnection.update_key_description": [
        "",
        "str",
        "str"
    ],
    "boto.kms.__init__.regions": [],
    "boto.kms.__init__.connect_to_region": [
        ""
    ],
    "boto.auth_handler.AuthHandler.__init__": [
        "",
        "",
        "",
        ""
    ],
    "boto.auth_handler.AuthHandler.add_auth": [
        "",
        ""
    ],
    "boto.exception.BotoClientError.__init__": [
        "",
        ""
    ],
    "boto.exception.BotoServerError.__init__": [
        "",
        "",
        "",
        "Incomplete | None"
    ],
    "boto.exception.BotoServerError.__getattr__": [
        "",
        "str"
    ],
    "boto.exception.BotoServerError.__setattr__": [
        "",
        "str",
        ""
    ],
    "boto.exception.BotoServerError.startElement": [
        "",
        "",
        "",
        ""
    ],
    "boto.exception.BotoServerError.endElement": [
        "",
        "",
        "",
        ""
    ],
    "boto.exception.ConsoleOutput.__init__": [
        "",
        "Incomplete | None"
    ],
    "boto.exception.ConsoleOutput.startElement": [
        "",
        "",
        "",
        ""
    ],
    "boto.exception.ConsoleOutput.endElement": [
        "",
        "",
        "",
        ""
    ],
    "boto.exception.StorageCreateError.__init__": [
        "",
        "",
        "",
        "Incomplete | None"
    ],
    "boto.exception.StorageCreateError.endElement": [
        "",
        "",
        "",
        ""
    ],
    "boto.exception.SQSError.__init__": [
        "",
        "",
        "",
        "Incomplete | None"
    ],
    "boto.exception.SQSError.startElement": [
        "",
        "",
        "",
        ""
    ],
    "boto.exception.SQSError.endElement": [
        "",
        "",
        "",
        ""
    ],
    "boto.exception.SQSDecodeError.__init__": [
        "",
        "",
        ""
    ],
    "boto.exception.StorageResponseError.__init__": [
        "",
        "",
        "",
        "Incomplete | None"
    ],
    "boto.exception.StorageResponseError.startElement": [
        "",
        "",
        "",
        ""
    ],
    "boto.exception.StorageResponseError.endElement": [
        "",
        "",
        "",
        ""
    ],
    "boto.exception.EC2ResponseError.__init__": [
        "",
        "",
        "",
        "Incomplete | None"
    ],
    "boto.exception.EC2ResponseError.startElement": [
        "",
        "",
        "",
        ""
    ],
    "boto.exception.EC2ResponseError.endElement": [
        "",
        "",
        "",
        ""
    ],
    "boto.exception.JSONResponseError.__init__": [
        "",
        "",
        "",
        "Incomplete | None"
    ],
    "boto.exception._EC2Error.__init__": [
        "",
        "Incomplete | None"
    ],
    "boto.exception._EC2Error.startElement": [
        "",
        "",
        "",
        ""
    ],
    "boto.exception._EC2Error.endElement": [
        "",
        "",
        "",
        ""
    ],
    "boto.exception.InvalidUriError.__init__": [
        "",
        ""
    ],
    "boto.exception.InvalidAclError.__init__": [
        "",
        ""
    ],
    "boto.exception.InvalidCorsError.__init__": [
        "",
        ""
    ],
    "boto.exception.InvalidLifecycleConfigError.__init__": [
        "",
        ""
    ],
    "boto.exception.ResumableUploadException.__init__": [
        "",
        "",
        ""
    ],
    "boto.exception.ResumableDownloadException.__init__": [
        "",
        "",
        ""
    ],
    "boto.exception.TooManyRecordsException.__init__": [
        "",
        ""
    ],
    "boto.exception.PleaseRetryException.__init__": [
        "",
        "",
        "Incomplete | None"
    ],
    "boto.exception.InvalidInstanceMetadataError.__init__": [
        "",
        ""
    ],
    "boto.regioninfo.RegionInfo.__init__": [
        "",
        "Incomplete | None",
        "Incomplete | None",
        "Incomplete | None",
        "Incomplete | None"
    ],
    "boto.regioninfo.RegionInfo.startElement": [
        "",
        "",
        "",
        ""
    ],
    "boto.regioninfo.RegionInfo.endElement": [
        "",
        "",
        "",
        ""
    ],
    "boto.regioninfo.RegionInfo.connect": [
        ""
    ],
    "boto.regioninfo.load_endpoint_json": [
        ""
    ],
    "boto.regioninfo.merge_endpoints": [
        "",
        ""
    ],
    "boto.regioninfo.load_regions": [],
    "boto.regioninfo.get_regions": [
        "",
        "Incomplete | None",
        "Incomplete | None"
    ],
    "boto.s3.deletemarker.DeleteMarker.__init__": [
        "",
        "Incomplete | None",
        "Incomplete | None"
    ],
    "boto.s3.deletemarker.DeleteMarker.startElement": [
        "",
        "",
        "",
        ""
    ],
    "boto.s3.deletemarker.DeleteMarker.endElement": [
        "",
        "",
        "",
        ""
    ],
    "boto.s3.bucketlistresultset.BucketListResultSet.__init__": [
        "",
        "Incomplete | None",
        "str",
        "str",
        "str",
        "Incomplete | None",
        "Incomplete | None"
    ],
    "boto.s3.bucketlistresultset.BucketListResultSet.__iter__": [
        ""
    ],
    "boto.s3.bucketlistresultset.VersionedBucketListResultSet.__init__": [
        "",
        "Incomplete | None",
        "str",
        "str",
        "str",
        "str",
        "Incomplete | None",
        "Incomplete | None"
    ],
    "boto.s3.bucketlistresultset.VersionedBucketListResultSet.__iter__": [
        ""
    ],
    "boto.s3.bucketlistresultset.MultiPartUploadListResultSet.__init__": [
        "",
        "Incomplete | None",
        "str",
        "str",
        "Incomplete | None",
        "Incomplete | None"
    ],
    "boto.s3.bucketlistresultset.MultiPartUploadListResultSet.__iter__": [
        ""
    ],
    "boto.s3.bucketlistresultset.bucket_lister": [
        "",
        "str",
        "str",
        "str",
        "Incomplete | None",
        "Incomplete | None"
    ],
    "boto.s3.bucketlistresultset.versioned_bucket_lister": [
        "",
        "str",
        "str",
        "str",
        "str",
        "Incomplete | None",
        "Incomplete | None"
    ],
    "boto.s3.bucketlistresultset.multipart_upload_lister": [
        "",
        "str",
        "str",
        "Incomplete | None",
        "Incomplete | None"
    ],
    "boto.s3.tagging.Tag.__init__": [
        "",
        "Incomplete | None",
        "Incomplete | None"
    ],
    "boto.s3.tagging.Tag.startElement": [
        "",
        "",
        "",
        ""
    ],
    "boto.s3.tagging.Tag.endElement": [
        "",
        "",
        "",
        ""
    ],
    "boto.s3.tagging.Tag.to_xml": [
        ""
    ],
    "boto.s3.tagging.Tag.__eq__": [
        "",
        ""
    ],
    "boto.s3.tagging.TagSet.startElement": [
        "",
        "",
        "",
        ""
    ],
    "boto.s3.tagging.TagSet.endElement": [
        "",
        "",
        "",
        ""
    ],
    "boto.s3.tagging.TagSet.add_tag": [
        "",
        "",
        ""
    ],
    "boto.s3.tagging.TagSet.to_xml": [
        ""
    ],
    "boto.s3.tagging.Tags.startElement": [
        "",
        "",
        "",
        ""
    ],
    "boto.s3.tagging.Tags.endElement": [
        "",
        "",
        "",
        ""
    ],
    "boto.s3.tagging.Tags.to_xml": [
        ""
    ],
    "boto.s3.tagging.Tags.add_tag_set": [
        "",
        ""
    ],
    "boto.s3.key.Key.__init__": [
        "",
        "Incomplete | None",
        "Incomplete | None"
    ],
    "boto.s3.key.Key.__iter__": [
        ""
    ],
    "boto.s3.key.Key.provider": [
        ""
    ],
    "boto.s3.key.Key.get_md5_from_hexdigest": [
        "",
        ""
    ],
    "boto.s3.key.Key.handle_encryption_headers": [
        "",
        ""
    ],
    "boto.s3.key.Key.handle_version_headers": [
        "",
        "",
        "bool"
    ],
    "boto.s3.key.Key.handle_restore_headers": [
        "",
        ""
    ],
    "boto.s3.key.Key.handle_addl_headers": [
        "",
        ""
    ],
    "boto.s3.key.Key.open_read": [
        "",
        "dict[str, str] | None",
        "str",
        "Incomplete | None",
        "dict[str, str] | None"
    ],
    "boto.s3.key.Key.open_write": [
        "",
        "dict[str, str] | None",
        "Incomplete | None"
    ],
    "boto.s3.key.Key.open": [
        "",
        "str",
        "dict[str, str] | None",
        "Incomplete | None",
        "Incomplete | None"
    ],
    "boto.s3.key.Key.close": [
        "",
        "bool"
    ],
    "boto.s3.key.Key.next": [
        ""
    ],
    "boto.s3.key.Key.read": [
        "",
        "int"
    ],
    "boto.s3.key.Key.change_storage_class": [
        "",
        "",
        "Incomplete | None",
        "bool"
    ],
    "boto.s3.key.Key.copy": [
        "",
        "",
        "",
        "Incomplete | None",
        "bool",
        "bool",
        "bool",
        "bool"
    ],
    "boto.s3.key.Key.startElement": [
        "",
        "",
        "",
        ""
    ],
    "boto.s3.key.Key.endElement": [
        "",
        "",
        "",
        ""
    ],
    "boto.s3.key.Key.exists": [
        "",
        "dict[str, str] | None"
    ],
    "boto.s3.key.Key.delete": [
        "",
        "dict[str, str] | None"
    ],
    "boto.s3.key.Key.get_metadata": [
        "",
        ""
    ],
    "boto.s3.key.Key.set_metadata": [
        "",
        "",
        ""
    ],
    "boto.s3.key.Key.update_metadata": [
        "",
        ""
    ],
    "boto.s3.key.Key.set_acl": [
        "",
        "",
        "dict[str, str] | None"
    ],
    "boto.s3.key.Key.get_acl": [
        "",
        "dict[str, str] | None"
    ],
    "boto.s3.key.Key.get_xml_acl": [
        "",
        "dict[str, str] | None"
    ],
    "boto.s3.key.Key.set_xml_acl": [
        "",
        "",
        "dict[str, str] | None"
    ],
    "boto.s3.key.Key.set_canned_acl": [
        "",
        "",
        "dict[str, str] | None"
    ],
    "boto.s3.key.Key.get_redirect": [
        ""
    ],
    "boto.s3.key.Key.set_redirect": [
        "",
        "",
        "dict[str, str] | None"
    ],
    "boto.s3.key.Key.make_public": [
        "",
        "dict[str, str] | None"
    ],
    "boto.s3.key.Key.generate_url": [
        "",
        "",
        "str",
        "dict[str, str] | None",
        "bool",
        "bool",
        "dict[str, str] | None",
        "bool",
        "Incomplete | None",
        "Incomplete | None",
        "bool",
        "bool"
    ],
    "boto.s3.key.Key.send_file": [
        "",
        "",
        "dict[str, str] | None",
        "Callable[[int, int], object] | None",
        "int",
        "Incomplete | None",
        "bool",
        "Incomplete | None"
    ],
    "boto.s3.key.Key.should_retry": [
        "",
        "",
        "bool"
    ],
    "boto.s3.key.Key.compute_md5": [
        "",
        "",
        "Incomplete | None"
    ],
    "boto.s3.key.Key.set_contents_from_stream": [
        "",
        "",
        "dict[str, str] | None",
        "bool",
        "Callable[[int, int], object] | None",
        "int",
        "Incomplete | None",
        "bool",
        "Incomplete | None",
        "Incomplete | None"
    ],
    "boto.s3.key.Key.set_contents_from_file": [
        "",
        "",
        "dict[str, str] | None",
        "bool",
        "Callable[[int, int], object] | None",
        "int",
        "Incomplete | None",
        "Incomplete | None",
        "bool",
        "Incomplete | None",
        "bool",
        "Incomplete | None",
        "bool"
    ],
    "boto.s3.key.Key.set_contents_from_filename": [
        "",
        "",
        "dict[str, str] | None",
        "bool",
        "Callable[[int, int], object] | None",
        "int",
        "Incomplete | None",
        "Incomplete | None",
        "bool",
        "bool"
    ],
    "boto.s3.key.Key.set_contents_from_string": [
        "",
        "str | bytes",
        "dict[str, str] | None",
        "bool",
        "Callable[[int, int], object] | None",
        "int",
        "Incomplete | None",
        "Incomplete | None",
        "bool",
        "bool"
    ],
    "boto.s3.key.Key.get_file": [
        "",
        "",
        "dict[str, str] | None",
        "Callable[[int, int], object] | None",
        "int",
        "bool",
        "Incomplete | None",
        "Incomplete | None",
        "dict[str, str] | None"
    ],
    "boto.s3.key.Key.get_torrent_file": [
        "",
        "",
        "dict[str, str] | None",
        "Callable[[int, int], object] | None",
        "int"
    ],
    "boto.s3.key.Key.get_contents_to_file": [
        "",
        "",
        "dict[str, str] | None",
        "Callable[[int, int], object] | None",
        "int",
        "bool",
        "Incomplete | None",
        "Incomplete | None",
        "dict[str, str] | None"
    ],
    "boto.s3.key.Key.get_contents_to_filename": [
        "",
        "",
        "dict[str, str] | None",
        "Callable[[int, int], object] | None",
        "int",
        "bool",
        "Incomplete | None",
        "Incomplete | None",
        "dict[str, str] | None"
    ],
    "boto.s3.key.Key.get_contents_as_string": [
        "",
        "dict[str, str] | None",
        "Callable[[int, int], object] | None",
        "int",
        "bool",
        "Incomplete | None",
        "dict[str, str] | None",
        "None"
    ],
    "boto.s3.key.Key.add_email_grant": [
        "",
        "",
        "",
        "dict[str, str] | None"
    ],
    "boto.s3.key.Key.add_user_grant": [
        "",
        "",
        "",
        "dict[str, str] | None",
        "Incomplete | None"
    ],
    "boto.s3.key.Key.set_remote_metadata": [
        "",
        "",
        "",
        "",
        "dict[str, str] | None"
    ],
    "boto.s3.key.Key.restore": [
        "",
        "",
        "dict[str, str] | None"
    ],
    "boto.s3.acl.Policy.__init__": [
        "",
        "Incomplete | None"
    ],
    "boto.s3.acl.Policy.startElement": [
        "",
        "str",
        "dict[str, Any]",
        "S3Connection"
    ],
    "boto.s3.acl.Policy.endElement": [
        "",
        "str",
        "Any",
        "S3Connection"
    ],
    "boto.s3.acl.Policy.to_xml": [
        ""
    ],
    "boto.s3.acl.ACL.__init__": [
        "",
        "Policy | None"
    ],
    "boto.s3.acl.ACL.add_grant": [
        "",
        "Grant"
    ],
    "boto.s3.acl.ACL.add_email_grant": [
        "",
        "str",
        "str"
    ],
    "boto.s3.acl.ACL.add_user_grant": [
        "",
        "str",
        "str",
        "str | None"
    ],
    "boto.s3.acl.ACL.startElement": [
        "",
        "",
        "",
        ""
    ],
    "boto.s3.acl.ACL.endElement": [
        "",
        "str",
        "Any",
        "S3Connection"
    ],
    "boto.s3.acl.ACL.to_xml": [
        ""
    ],
    "boto.s3.acl.Grant.__init__": [
        "",
        "str | None",
        "str | None",
        "str | None",
        "str | None",
        "str | None",
        "str | None"
    ],
    "boto.s3.acl.Grant.startElement": [
        "",
        "",
        "",
        ""
    ],
    "boto.s3.acl.Grant.endElement": [
        "",
        "str",
        "Any",
        "S3Connection"
    ],
    "boto.s3.acl.Grant.to_xml": [
        ""
    ],
    "boto.s3.user.User.__init__": [
        "",
        "Incomplete | None",
        "str",
        "str"
    ],
    "boto.s3.user.User.startElement": [
        "",
        "",
        "",
        ""
    ],
    "boto.s3.user.User.endElement": [
        "",
        "",
        "",
        ""
    ],
    "boto.s3.user.User.to_xml": [
        "",
        "str"
    ],
    "boto.s3.lifecycle.Rule.__init__": [
        "",
        "Incomplete | None",
        "Incomplete | None",
        "Incomplete | None",
        "Incomplete | None",
        "Incomplete | None"
    ],
    "boto.s3.lifecycle.Rule.startElement": [
        "",
        "",
        "",
        ""
    ],
    "boto.s3.lifecycle.Rule.endElement": [
        "",
        "",
        "",
        ""
    ],
    "boto.s3.lifecycle.Rule.to_xml": [
        ""
    ],
    "boto.s3.lifecycle.Expiration.__init__": [
        "",
        "Incomplete | None",
        "Incomplete | None"
    ],
    "boto.s3.lifecycle.Expiration.startElement": [
        "",
        "",
        "",
        ""
    ],
    "boto.s3.lifecycle.Expiration.endElement": [
        "",
        "",
        "",
        ""
    ],
    "boto.s3.lifecycle.Expiration.to_xml": [
        ""
    ],
    "boto.s3.lifecycle.Transition.__init__": [
        "",
        "Incomplete | None",
        "Incomplete | None",
        "Incomplete | None"
    ],
    "boto.s3.lifecycle.Transition.to_xml": [
        ""
    ],
    "boto.s3.lifecycle.Transitions.__init__": [
        ""
    ],
    "boto.s3.lifecycle.Transitions.startElement": [
        "",
        "",
        "",
        ""
    ],
    "boto.s3.lifecycle.Transitions.endElement": [
        "",
        "",
        "",
        ""
    ],
    "boto.s3.lifecycle.Transitions.to_xml": [
        ""
    ],
    "boto.s3.lifecycle.Transitions.add_transition": [
        "",
        "Incomplete | None",
        "Incomplete | None",
        "Incomplete | None"
    ],
    "boto.s3.lifecycle.Transitions.days": [
        ""
    ],
    "boto.s3.lifecycle.Transitions.date": [
        ""
    ],
    "boto.s3.lifecycle.Transitions.storage_class": [
        ""
    ],
    "boto.s3.lifecycle.Lifecycle.startElement": [
        "",
        "",
        "",
        ""
    ],
    "boto.s3.lifecycle.Lifecycle.endElement": [
        "",
        "",
        "",
        ""
    ],
    "boto.s3.lifecycle.Lifecycle.to_xml": [
        ""
    ],
    "boto.s3.lifecycle.Lifecycle.add_rule": [
        "",
        "Incomplete | None",
        "str",
        "str",
        "Incomplete | None",
        "Incomplete | None"
    ],
    "boto.s3.website.WebsiteConfiguration.__init__": [
        "",
        "Incomplete | None",
        "Incomplete | None",
        "Incomplete | None",
        "Incomplete | None"
    ],
    "boto.s3.website.WebsiteConfiguration.startElement": [
        "",
        "",
        "",
        ""
    ],
    "boto.s3.website.WebsiteConfiguration.endElement": [
        "",
        "",
        "",
        ""
    ],
    "boto.s3.website.WebsiteConfiguration.to_xml": [
        ""
    ],
    "boto.s3.website._XMLKeyValue.__init__": [
        "",
        "",
        "Incomplete | None"
    ],
    "boto.s3.website._XMLKeyValue.startElement": [
        "",
        "",
        "",
        ""
    ],
    "boto.s3.website._XMLKeyValue.endElement": [
        "",
        "",
        "",
        ""
    ],
    "boto.s3.website._XMLKeyValue.to_xml": [
        ""
    ],
    "boto.s3.website.RedirectLocation.__init__": [
        "",
        "Incomplete | None",
        "Incomplete | None"
    ],
    "boto.s3.website.RedirectLocation.to_xml": [
        ""
    ],
    "boto.s3.website.RoutingRules.add_rule": [
        "",
        "RoutingRule"
    ],
    "boto.s3.website.RoutingRules.startElement": [
        "",
        "",
        "",
        ""
    ],
    "boto.s3.website.RoutingRules.endElement": [
        "",
        "",
        "",
        ""
    ],
    "boto.s3.website.RoutingRules.to_xml": [
        ""
    ],
    "boto.s3.website.RoutingRule.__init__": [
        "",
        "Incomplete | None",
        "Incomplete | None"
    ],
    "boto.s3.website.RoutingRule.startElement": [
        "",
        "",
        "",
        ""
    ],
    "boto.s3.website.RoutingRule.endElement": [
        "",
        "",
        "",
        ""
    ],
    "boto.s3.website.RoutingRule.to_xml": [
        ""
    ],
    "boto.s3.website.RoutingRule.when": [
        "",
        "Incomplete | None",
        "Incomplete | None"
    ],
    "boto.s3.website.RoutingRule.then_redirect": [
        "",
        "Incomplete | None",
        "Incomplete | None",
        "Incomplete | None",
        "Incomplete | None",
        "Incomplete | None"
    ],
    "boto.s3.website.Condition.__init__": [
        "",
        "Incomplete | None",
        "Incomplete | None"
    ],
    "boto.s3.website.Condition.to_xml": [
        ""
    ],
    "boto.s3.website.Redirect.__init__": [
        "",
        "Incomplete | None",
        "Incomplete | None",
        "Incomplete | None",
        "Incomplete | None",
        "Incomplete | None"
    ],
    "boto.s3.website.Redirect.to_xml": [
        ""
    ],
    "boto.s3.website.tag": [
        "",
        ""
    ],
    "boto.s3.keyfile.KeyFile.__init__": [
        "",
        ""
    ],
    "boto.s3.keyfile.KeyFile.tell": [
        ""
    ],
    "boto.s3.keyfile.KeyFile.seek": [
        "",
        "",
        "Any"
    ],
    "boto.s3.keyfile.KeyFile.read": [
        "",
        ""
    ],
    "boto.s3.keyfile.KeyFile.close": [
        ""
    ],
    "boto.s3.keyfile.KeyFile.isatty": [
        ""
    ],
    "boto.s3.keyfile.KeyFile.getkey": [
        ""
    ],
    "boto.s3.keyfile.KeyFile.write": [
        "",
        ""
    ],
    "boto.s3.keyfile.KeyFile.fileno": [
        ""
    ],
    "boto.s3.keyfile.KeyFile.flush": [
        ""
    ],
    "boto.s3.keyfile.KeyFile.next": [
        ""
    ],
    "boto.s3.keyfile.KeyFile.readinto": [
        ""
    ],
    "boto.s3.keyfile.KeyFile.readline": [
        ""
    ],
    "boto.s3.keyfile.KeyFile.readlines": [
        ""
    ],
    "boto.s3.keyfile.KeyFile.truncate": [
        ""
    ],
    "boto.s3.keyfile.KeyFile.writelines": [
        ""
    ],
    "boto.s3.keyfile.KeyFile.xreadlines": [
        ""
    ],
    "boto.s3.prefix.Prefix.__init__": [
        "",
        "Incomplete | None",
        "Incomplete | None"
    ],
    "boto.s3.prefix.Prefix.startElement": [
        "",
        "",
        "",
        ""
    ],
    "boto.s3.prefix.Prefix.endElement": [
        "",
        "",
        "",
        ""
    ],
    "boto.s3.prefix.Prefix.provider": [
        ""
    ],
    "boto.s3.multidelete.Deleted.__init__": [
        "",
        "Incomplete | None",
        "Incomplete | None",
        "bool",
        "Incomplete | None"
    ],
    "boto.s3.multidelete.Deleted.startElement": [
        "",
        "",
        "",
        ""
    ],
    "boto.s3.multidelete.Deleted.endElement": [
        "",
        "",
        "",
        ""
    ],
    "boto.s3.multidelete.Error.__init__": [
        "",
        "Incomplete | None",
        "Incomplete | None",
        "Incomplete | None",
        "Incomplete | None"
    ],
    "boto.s3.multidelete.Error.startElement": [
        "",
        "",
        "",
        ""
    ],
    "boto.s3.multidelete.Error.endElement": [
        "",
        "",
        "",
        ""
    ],
    "boto.s3.multidelete.MultiDeleteResult.__init__": [
        "",
        "Incomplete | None"
    ],
    "boto.s3.multidelete.MultiDeleteResult.startElement": [
        "",
        "",
        "",
        ""
    ],
    "boto.s3.multidelete.MultiDeleteResult.endElement": [
        "",
        "",
        "",
        ""
    ],
    "boto.s3.multipart.CompleteMultiPartUpload.__init__": [
        "",
        "Incomplete | None"
    ],
    "boto.s3.multipart.CompleteMultiPartUpload.startElement": [
        "",
        "",
        "",
        ""
    ],
    "boto.s3.multipart.CompleteMultiPartUpload.endElement": [
        "",
        "",
        "",
        ""
    ],
    "boto.s3.multipart.Part.__init__": [
        "",
        "Incomplete | None"
    ],
    "boto.s3.multipart.Part.startElement": [
        "",
        "",
        "",
        ""
    ],
    "boto.s3.multipart.Part.endElement": [
        "",
        "",
        "",
        ""
    ],
    "boto.s3.multipart.MultiPartUpload.__init__": [
        "",
        "Incomplete | None"
    ],
    "boto.s3.multipart.MultiPartUpload.__iter__": [
        ""
    ],
    "boto.s3.multipart.MultiPartUpload.to_xml": [
        ""
    ],
    "boto.s3.multipart.MultiPartUpload.startElement": [
        "",
        "",
        "",
        ""
    ],
    "boto.s3.multipart.MultiPartUpload.endElement": [
        "",
        "",
        "",
        ""
    ],
    "boto.s3.multipart.MultiPartUpload.get_all_parts": [
        "",
        "Incomplete | None",
        "Incomplete | None",
        "Incomplete | None"
    ],
    "boto.s3.multipart.MultiPartUpload.upload_part_from_file": [
        "",
        "",
        "",
        "Incomplete | None",
        "bool",
        "Incomplete | None",
        "int",
        "Incomplete | None",
        "Incomplete | None"
    ],
    "boto.s3.multipart.MultiPartUpload.copy_part_from_key": [
        "",
        "",
        "",
        "",
        "Incomplete | None",
        "Incomplete | None",
        "Incomplete | None",
        "Incomplete | None"
    ],
    "boto.s3.multipart.MultiPartUpload.complete_upload": [
        ""
    ],
    "boto.s3.multipart.MultiPartUpload.cancel_upload": [
        ""
    ],
    "boto.s3.multipart.part_lister": [
        "",
        "Incomplete | None"
    ],
    "boto.s3.cors.CORSRule.__init__": [
        "",
        "Incomplete | None",
        "Incomplete | None",
        "Incomplete | None",
        "Incomplete | None",
        "Incomplete | None",
        "Incomplete | None"
    ],
    "boto.s3.cors.CORSRule.startElement": [
        "",
        "",
        "",
        ""
    ],
    "boto.s3.cors.CORSRule.endElement": [
        "",
        "",
        "",
        ""
    ],
    "boto.s3.cors.CORSRule.to_xml": [
        ""
    ],
    "boto.s3.cors.CORSConfiguration.startElement": [
        "",
        "",
        "",
        ""
    ],
    "boto.s3.cors.CORSConfiguration.endElement": [
        "",
        "",
        "",
        ""
    ],
    "boto.s3.cors.CORSConfiguration.to_xml": [
        ""
    ],
    "boto.s3.cors.CORSConfiguration.add_rule": [
        "",
        "",
        "",
        "Incomplete | None",
        "Incomplete | None",
        "Incomplete | None",
        "Incomplete | None"
    ],
    "boto.s3.bucket.S3WebsiteEndpointTranslate.translate_region": [
        "",
        "str"
    ],
    "boto.s3.bucket.Bucket.__init__": [
        "",
        "S3Connection | None",
        "str | None",
        "type[Key]"
    ],
    "boto.s3.bucket.Bucket.__iter__": [
        ""
    ],
    "boto.s3.bucket.Bucket.__contains__": [
        "",
        ""
    ],
    "boto.s3.bucket.Bucket.startElement": [
        "",
        "",
        "",
        ""
    ],
    "boto.s3.bucket.Bucket.endElement": [
        "",
        "",
        "",
        ""
    ],
    "boto.s3.bucket.Bucket.set_key_class": [
        "",
        ""
    ],
    "boto.s3.bucket.Bucket.lookup": [
        "",
        "",
        "dict[str, str] | None"
    ],
    "boto.s3.bucket.Bucket.get_key": [
        "",
        "",
        "dict[str, str] | None",
        "Incomplete | None",
        "dict[str, str] | None",
        "bool"
    ],
    "boto.s3.bucket.Bucket.list": [
        "",
        "str",
        "str",
        "str",
        "dict[str, str] | None",
        "Incomplete | None"
    ],
    "boto.s3.bucket.Bucket.list_versions": [
        "",
        "str",
        "str",
        "str",
        "str",
        "dict[str, str] | None",
        "str | None"
    ],
    "boto.s3.bucket.Bucket.list_multipart_uploads": [
        "",
        "str",
        "str",
        "dict[str, str] | None",
        "Incomplete | None"
    ],
    "boto.s3.bucket.Bucket.validate_kwarg_names": [
        "",
        "",
        ""
    ],
    "boto.s3.bucket.Bucket.get_all_keys": [
        "",
        "dict[str, str] | None"
    ],
    "boto.s3.bucket.Bucket.get_all_versions": [
        "",
        "dict[str, str] | None"
    ],
    "boto.s3.bucket.Bucket.validate_get_all_versions_params": [
        "",
        ""
    ],
    "boto.s3.bucket.Bucket.get_all_multipart_uploads": [
        "",
        "dict[str, str] | None"
    ],
    "boto.s3.bucket.Bucket.new_key": [
        "",
        "Incomplete | None"
    ],
    "boto.s3.bucket.Bucket.generate_url": [
        "",
        "",
        "str",
        "dict[str, str] | None",
        "bool",
        "dict[str, str] | None",
        "bool"
    ],
    "boto.s3.bucket.Bucket.delete_keys": [
        "",
        "",
        "bool",
        "Incomplete | None",
        "dict[str, str] | None"
    ],
    "boto.s3.bucket.Bucket.delete_key": [
        "",
        "",
        "dict[str, str] | None",
        "Incomplete | None",
        "Incomplete | None"
    ],
    "boto.s3.bucket.Bucket.copy_key": [
        "",
        "",
        "",
        "",
        "Incomplete | None",
        "Incomplete | None",
        "str",
        "bool",
        "bool",
        "dict[str, str] | None",
        "Incomplete | None"
    ],
    "boto.s3.bucket.Bucket.set_canned_acl": [
        "",
        "",
        "str",
        "dict[str, str] | None",
        "Incomplete | None"
    ],
    "boto.s3.bucket.Bucket.get_xml_acl": [
        "",
        "str",
        "dict[str, str] | None",
        "Incomplete | None"
    ],
    "boto.s3.bucket.Bucket.set_xml_acl": [
        "",
        "",
        "str",
        "dict[str, str] | None",
        "Incomplete | None",
        "str"
    ],
    "boto.s3.bucket.Bucket.set_acl": [
        "",
        "",
        "str",
        "dict[str, str] | None",
        "Incomplete | None"
    ],
    "boto.s3.bucket.Bucket.get_acl": [
        "",
        "str",
        "dict[str, str] | None",
        "Incomplete | None"
    ],
    "boto.s3.bucket.Bucket.set_subresource": [
        "",
        "",
        "",
        "str",
        "dict[str, str] | None",
        "Incomplete | None"
    ],
    "boto.s3.bucket.Bucket.get_subresource": [
        "",
        "",
        "str",
        "dict[str, str] | None",
        "Incomplete | None"
    ],
    "boto.s3.bucket.Bucket.make_public": [
        "",
        "bool",
        "dict[str, str] | None"
    ],
    "boto.s3.bucket.Bucket.add_email_grant": [
        "",
        "",
        "",
        "bool",
        "dict[str, str] | None"
    ],
    "boto.s3.bucket.Bucket.add_user_grant": [
        "",
        "",
        "",
        "bool",
        "dict[str, str] | None",
        "Incomplete | None"
    ],
    "boto.s3.bucket.Bucket.list_grants": [
        "",
        "dict[str, str] | None"
    ],
    "boto.s3.bucket.Bucket.get_location": [
        ""
    ],
    "boto.s3.bucket.Bucket.set_xml_logging": [
        "",
        "",
        "dict[str, str] | None"
    ],
    "boto.s3.bucket.Bucket.enable_logging": [
        "",
        "",
        "str",
        "Incomplete | None",
        "dict[str, str] | None"
    ],
    "boto.s3.bucket.Bucket.disable_logging": [
        "",
        "dict[str, str] | None"
    ],
    "boto.s3.bucket.Bucket.get_logging_status": [
        "",
        "dict[str, str] | None"
    ],
    "boto.s3.bucket.Bucket.set_as_logging_target": [
        "",
        "dict[str, str] | None"
    ],
    "boto.s3.bucket.Bucket.get_request_payment": [
        "",
        "dict[str, str] | None"
    ],
    "boto.s3.bucket.Bucket.set_request_payment": [
        "",
        "str",
        "dict[str, str] | None"
    ],
    "boto.s3.bucket.Bucket.configure_versioning": [
        "",
        "",
        "bool",
        "Incomplete | None",
        "dict[str, str] | None"
    ],
    "boto.s3.bucket.Bucket.get_versioning_status": [
        "",
        "dict[str, str] | None"
    ],
    "boto.s3.bucket.Bucket.configure_lifecycle": [
        "",
        "",
        "dict[str, str] | None"
    ],
    "boto.s3.bucket.Bucket.get_lifecycle_config": [
        "",
        "dict[str, str] | None"
    ],
    "boto.s3.bucket.Bucket.delete_lifecycle_configuration": [
        "",
        "dict[str, str] | None"
    ],
    "boto.s3.bucket.Bucket.configure_website": [
        "",
        "Incomplete | None",
        "Incomplete | None",
        "Incomplete | None",
        "Incomplete | None",
        "dict[str, str] | None"
    ],
    "boto.s3.bucket.Bucket.set_website_configuration": [
        "",
        "",
        "dict[str, str] | None"
    ],
    "boto.s3.bucket.Bucket.set_website_configuration_xml": [
        "",
        "",
        "dict[str, str] | None"
    ],
    "boto.s3.bucket.Bucket.get_website_configuration": [
        "",
        "dict[str, str] | None"
    ],
    "boto.s3.bucket.Bucket.get_website_configuration_obj": [
        "",
        "dict[str, str] | None"
    ],
    "boto.s3.bucket.Bucket.get_website_configuration_with_xml": [
        "",
        "dict[str, str] | None"
    ],
    "boto.s3.bucket.Bucket.get_website_configuration_xml": [
        "",
        "dict[str, str] | None"
    ],
    "boto.s3.bucket.Bucket.delete_website_configuration": [
        "",
        "dict[str, str] | None"
    ],
    "boto.s3.bucket.Bucket.get_website_endpoint": [
        ""
    ],
    "boto.s3.bucket.Bucket.get_policy": [
        "",
        "dict[str, str] | None"
    ],
    "boto.s3.bucket.Bucket.set_policy": [
        "",
        "",
        "dict[str, str] | None"
    ],
    "boto.s3.bucket.Bucket.delete_policy": [
        "",
        "dict[str, str] | None"
    ],
    "boto.s3.bucket.Bucket.set_cors_xml": [
        "",
        "",
        "dict[str, str] | None"
    ],
    "boto.s3.bucket.Bucket.set_cors": [
        "",
        "",
        "dict[str, str] | None"
    ],
    "boto.s3.bucket.Bucket.get_cors_xml": [
        "",
        "dict[str, str] | None"
    ],
    "boto.s3.bucket.Bucket.get_cors": [
        "",
        "dict[str, str] | None"
    ],
    "boto.s3.bucket.Bucket.delete_cors": [
        "",
        "dict[str, str] | None"
    ],
    "boto.s3.bucket.Bucket.initiate_multipart_upload": [
        "",
        "",
        "dict[str, str] | None",
        "bool",
        "Incomplete | None",
        "bool",
        "Incomplete | None"
    ],
    "boto.s3.bucket.Bucket.complete_multipart_upload": [
        "",
        "",
        "",
        "",
        "dict[str, str] | None"
    ],
    "boto.s3.bucket.Bucket.cancel_multipart_upload": [
        "",
        "",
        "",
        "dict[str, str] | None"
    ],
    "boto.s3.bucket.Bucket.delete": [
        "",
        "dict[str, str] | None"
    ],
    "boto.s3.bucket.Bucket.get_tags": [
        ""
    ],
    "boto.s3.bucket.Bucket.get_xml_tags": [
        ""
    ],
    "boto.s3.bucket.Bucket.set_xml_tags": [
        "",
        "",
        "dict[str, str] | None",
        "str"
    ],
    "boto.s3.bucket.Bucket.set_tags": [
        "",
        "",
        "dict[str, str] | None"
    ],
    "boto.s3.bucket.Bucket.delete_tags": [
        "",
        "dict[str, str] | None"
    ],
    "boto.s3.bucketlogging.BucketLogging.__init__": [
        "",
        "Incomplete | None",
        "Incomplete | None",
        "Incomplete | None"
    ],
    "boto.s3.bucketlogging.BucketLogging.add_grant": [
        "",
        ""
    ],
    "boto.s3.bucketlogging.BucketLogging.startElement": [
        "",
        "",
        "",
        ""
    ],
    "boto.s3.bucketlogging.BucketLogging.endElement": [
        "",
        "",
        "",
        ""
    ],
    "boto.s3.bucketlogging.BucketLogging.to_xml": [
        ""
    ],
    "boto.s3.connection._CallingFormat.get_bucket_server": [
        "",
        "",
        ""
    ],
    "boto.s3.connection._CallingFormat.build_url_base": [
        "",
        "",
        "",
        "",
        "",
        "str"
    ],
    "boto.s3.connection._CallingFormat.build_host": [
        "",
        "",
        ""
    ],
    "boto.s3.connection._CallingFormat.build_auth_path": [
        "",
        "",
        "str"
    ],
    "boto.s3.connection._CallingFormat.build_path_base": [
        "",
        "",
        "str"
    ],
    "boto.s3.connection.SubdomainCallingFormat.get_bucket_server": [
        "",
        "",
        ""
    ],
    "boto.s3.connection.VHostCallingFormat.get_bucket_server": [
        "",
        "",
        ""
    ],
    "boto.s3.connection.OrdinaryCallingFormat.get_bucket_server": [
        "",
        "",
        ""
    ],
    "boto.s3.connection.OrdinaryCallingFormat.build_path_base": [
        "",
        "",
        "str"
    ],
    "boto.s3.connection.ProtocolIndependentOrdinaryCallingFormat.build_url_base": [
        "",
        "",
        "",
        "",
        "",
        "str"
    ],
    "boto.s3.connection.S3Connection.__init__": [
        "",
        "Incomplete | None",
        "Incomplete | None",
        "bool",
        "Incomplete | None",
        "Incomplete | None",
        "Incomplete | None",
        "Incomplete | None",
        "Incomplete | None",
        "Any",
        "int",
        "Incomplete | None",
        "Any",
        "str",
        "str",
        "type[Bucket]",
        "Incomplete | None",
        "bool",
        "bool",
        "Incomplete | None",
        "Incomplete | None"
    ],
    "boto.s3.connection.S3Connection.__iter__": [
        ""
    ],
    "boto.s3.connection.S3Connection.__contains__": [
        "",
        ""
    ],
    "boto.s3.connection.S3Connection.set_bucket_class": [
        "",
        "type[Bucket]"
    ],
    "boto.s3.connection.S3Connection.build_post_policy": [
        "",
        "",
        ""
    ],
    "boto.s3.connection.S3Connection.build_post_form_args": [
        "",
        "",
        "",
        "int",
        "Incomplete | None",
        "Incomplete | None",
        "Incomplete | None",
        "str",
        "Incomplete | None",
        "Incomplete | None",
        "str",
        "Incomplete | None"
    ],
    "boto.s3.connection.S3Connection.generate_url_sigv4": [
        "",
        "",
        "",
        "str",
        "str",
        "dict[str, str] | None",
        "bool",
        "dict[str, str] | None",
        "Incomplete | None",
        "Incomplete | None"
    ],
    "boto.s3.connection.S3Connection.generate_url": [
        "",
        "",
        "",
        "str",
        "str",
        "dict[str, str] | None",
        "bool",
        "bool",
        "dict[str, str] | None",
        "bool",
        "Incomplete | None"
    ],
    "boto.s3.connection.S3Connection.get_all_buckets": [
        "",
        "dict[str, str] | None"
    ],
    "boto.s3.connection.S3Connection.get_canonical_user_id": [
        "",
        "dict[str, str] | None"
    ],
    "boto.s3.connection.S3Connection.get_bucket": [
        "",
        "str",
        "bool",
        "dict[str, str] | None"
    ],
    "boto.s3.connection.S3Connection.head_bucket": [
        "",
        "",
        "dict[str, str] | None"
    ],
    "boto.s3.connection.S3Connection.lookup": [
        "",
        "",
        "bool",
        "dict[str, str] | None"
    ],
    "boto.s3.connection.S3Connection.create_bucket": [
        "",
        "",
        "dict[str, str] | None",
        "Any",
        "Incomplete | None"
    ],
    "boto.s3.connection.S3Connection.delete_bucket": [
        "",
        "",
        "dict[str, str] | None"
    ],
    "boto.s3.connection.S3Connection.make_request": [
        "",
        "",
        "str",
        "str",
        "Incomplete | None",
        "str",
        "Incomplete | None",
        "Incomplete | None",
        "Incomplete | None",
        "Incomplete | None"
    ],
    "boto.s3.connection.check_lowercase_bucketname": [
        ""
    ],
    "boto.s3.connection.assert_case_insensitive": [
        ""
    ],
    "boto.s3.__init__.S3RegionInfo.connect": [
        "",
        "str | None",
        "str | None",
        "type[AWSAuthConnection] | None"
    ],
    "boto.s3.__init__.regions": [],
    "boto.s3.__init__.connect_to_region": [
        "str"
    ],
    "boto.__init__.NullHandler.emit": [
        "",
        ""
    ],
    "boto.__init__.init_logging": [],
    "boto.__init__.set_file_logger": [
        "",
        "",
        "Any",
        "Incomplete | None"
    ],
    "boto.__init__.set_stream_logger": [
        "",
        "Any",
        "Incomplete | None"
    ],
    "boto.__init__.connect_sqs": [
        "Incomplete | None",
        "Incomplete | None"
    ],
    "boto.__init__.connect_s3": [
        "str | None",
        "str | None"
    ],
    "boto.__init__.connect_gs": [
        "Incomplete | None",
        "Incomplete | None"
    ],
    "boto.__init__.connect_ec2": [
        "Incomplete | None",
        "Incomplete | None"
    ],
    "boto.__init__.connect_elb": [
        "Incomplete | None",
        "Incomplete | None"
    ],
    "boto.__init__.connect_autoscale": [
        "Incomplete | None",
        "Incomplete | None"
    ],
    "boto.__init__.connect_cloudwatch": [
        "Incomplete | None",
        "Incomplete | None"
    ],
    "boto.__init__.connect_sdb": [
        "Incomplete | None",
        "Incomplete | None"
    ],
    "boto.__init__.connect_fps": [
        "Incomplete | None",
        "Incomplete | None"
    ],
    "boto.__init__.connect_mturk": [
        "Incomplete | None",
        "Incomplete | None"
    ],
    "boto.__init__.connect_cloudfront": [
        "Incomplete | None",
        "Incomplete | None"
    ],
    "boto.__init__.connect_vpc": [
        "Incomplete | None",
        "Incomplete | None"
    ],
    "boto.__init__.connect_rds": [
        "Incomplete | None",
        "Incomplete | None"
    ],
    "boto.__init__.connect_rds2": [
        "Incomplete | None",
        "Incomplete | None"
    ],
    "boto.__init__.connect_emr": [
        "Incomplete | None",
        "Incomplete | None"
    ],
    "boto.__init__.connect_sns": [
        "Incomplete | None",
        "Incomplete | None"
    ],
    "boto.__init__.connect_iam": [
        "Incomplete | None",
        "Incomplete | None"
    ],
    "boto.__init__.connect_route53": [
        "Incomplete | None",
        "Incomplete | None"
    ],
    "boto.__init__.connect_cloudformation": [
        "Incomplete | None",
        "Incomplete | None"
    ],
    "boto.__init__.connect_euca": [
        "Incomplete | None",
        "Incomplete | None",
        "Incomplete | None",
        "int",
        "str",
        "bool"
    ],
    "boto.__init__.connect_glacier": [
        "Incomplete | None",
        "Incomplete | None"
    ],
    "boto.__init__.connect_ec2_endpoint": [
        "",
        "Incomplete | None",
        "Incomplete | None"
    ],
    "boto.__init__.connect_walrus": [
        "Incomplete | None",
        "Incomplete | None",
        "Incomplete | None",
        "int",
        "str",
        "bool"
    ],
    "boto.__init__.connect_ses": [
        "Incomplete | None",
        "Incomplete | None"
    ],
    "boto.__init__.connect_sts": [
        "Incomplete | None",
        "Incomplete | None"
    ],
    "boto.__init__.connect_ia": [
        "Incomplete | None",
        "Incomplete | None",
        "bool"
    ],
    "boto.__init__.connect_dynamodb": [
        "Incomplete | None",
        "Incomplete | None"
    ],
    "boto.__init__.connect_swf": [
        "Incomplete | None",
        "Incomplete | None"
    ],
    "boto.__init__.connect_cloudsearch": [
        "Incomplete | None",
        "Incomplete | None"
    ],
    "boto.__init__.connect_cloudsearch2": [
        "Incomplete | None",
        "Incomplete | None",
        "bool"
    ],
    "boto.__init__.connect_cloudsearchdomain": [
        "Incomplete | None",
        "Incomplete | None"
    ],
    "boto.__init__.connect_beanstalk": [
        "Incomplete | None",
        "Incomplete | None"
    ],
    "boto.__init__.connect_elastictranscoder": [
        "Incomplete | None",
        "Incomplete | None"
    ],
    "boto.__init__.connect_opsworks": [
        "Incomplete | None",
        "Incomplete | None"
    ],
    "boto.__init__.connect_redshift": [
        "Incomplete | None",
        "Incomplete | None"
    ],
    "boto.__init__.connect_support": [
        "Incomplete | None",
        "Incomplete | None"
    ],
    "boto.__init__.connect_cloudtrail": [
        "Incomplete | None",
        "Incomplete | None"
    ],
    "boto.__init__.connect_directconnect": [
        "Incomplete | None",
        "Incomplete | None"
    ],
    "boto.__init__.connect_kinesis": [
        "Incomplete | None",
        "Incomplete | None"
    ],
    "boto.__init__.connect_logs": [
        "Incomplete | None",
        "Incomplete | None"
    ],
    "boto.__init__.connect_route53domains": [
        "Incomplete | None",
        "Incomplete | None"
    ],
    "boto.__init__.connect_cognito_identity": [
        "Incomplete | None",
        "Incomplete | None"
    ],
    "boto.__init__.connect_cognito_sync": [
        "Incomplete | None",
        "Incomplete | None"
    ],
    "boto.__init__.connect_kms": [
        "Incomplete | None",
        "Incomplete | None"
    ],
    "boto.__init__.connect_awslambda": [
        "Incomplete | None",
        "Incomplete | None"
    ],
    "boto.__init__.connect_codedeploy": [
        "Incomplete | None",
        "Incomplete | None"
    ],
    "boto.__init__.connect_configservice": [
        "Incomplete | None",
        "Incomplete | None"
    ],
    "boto.__init__.connect_cloudhsm": [
        "Incomplete | None",
        "Incomplete | None"
    ],
    "boto.__init__.connect_ec2containerservice": [
        "Incomplete | None",
        "Incomplete | None"
    ],
    "boto.__init__.connect_machinelearning": [
        "Incomplete | None",
        "Incomplete | None"
    ],
    "boto.__init__.storage_uri": [
        "",
        "str",
        "int",
        "bool",
        "Any",
        "bool",
        "bool"
    ],
    "boto.__init__.storage_uri_for_key": [
        ""
    ],
    "boto.__init__.__getattr__": [
        "str"
    ],
    "boto.plugin.Plugin.is_capable": [
        "",
        ""
    ],
    "boto.plugin.get_plugin": [
        "",
        "Incomplete | None"
    ],
    "boto.plugin.load_plugins": [
        ""
    ]
}