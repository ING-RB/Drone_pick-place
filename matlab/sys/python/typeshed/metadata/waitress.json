{
    "waitress.adjustments.Adjustments.__init__": [
        ""
    ],
    "waitress.adjustments.Adjustments.parse_args": [
        "",
        "str"
    ],
    "waitress.adjustments.Adjustments.check_sockets": [
        "",
        "Iterable[socket]"
    ],
    "waitress.adjustments.asbool": [
        "bool | str | int | None"
    ],
    "waitress.adjustments.asoctal": [
        "str"
    ],
    "waitress.adjustments.aslist_cronly": [
        "str"
    ],
    "waitress.adjustments.aslist": [
        "str"
    ],
    "waitress.adjustments.asset": [
        "str | None"
    ],
    "waitress.adjustments.slash_fixed_str": [
        "str | None"
    ],
    "waitress.adjustments.str_iftruthy": [
        "str | None"
    ],
    "waitress.adjustments.as_socket_list": [
        "Sequence[object]"
    ],
    "waitress.__init__.serve": [
        "Any"
    ],
    "waitress.__init__.serve_paste": [
        "Any",
        "Any"
    ],
    "waitress.__init__.profile": [
        "Any",
        "Any",
        "Any",
        "tuple[str, ...]",
        "bool"
    ],
    "waitress.parser.HTTPRequestParser.__init__": [
        "",
        "Adjustments"
    ],
    "waitress.parser.HTTPRequestParser.received": [
        "",
        "bytes"
    ],
    "waitress.parser.HTTPRequestParser.parse_header": [
        "",
        "bytes"
    ],
    "waitress.parser.HTTPRequestParser.get_body_stream": [
        ""
    ],
    "waitress.parser.HTTPRequestParser.close": [
        ""
    ],
    "waitress.parser.split_uri": [
        "bytes"
    ],
    "waitress.parser.get_header_lines": [
        "bytes"
    ],
    "waitress.parser.crack_first_line": [
        "str"
    ],
    "waitress.server.MultiSocketServer.__init__": [
        "",
        "Incomplete | None",
        "Adjustments | None",
        "Sequence[tuple[str, int]] | None",
        "ThreadedTaskDispatcher | None"
    ],
    "waitress.server.MultiSocketServer.print_listen": [
        "",
        "str"
    ],
    "waitress.server.MultiSocketServer.run": [
        ""
    ],
    "waitress.server.MultiSocketServer.close": [
        ""
    ],
    "waitress.server.BaseWSGIServer.__init__": [
        "",
        "Any",
        "Incomplete | None",
        "bool",
        "Incomplete | None",
        "ThreadedTaskDispatcher | None",
        "Adjustments | None",
        "Incomplete | None",
        "bool"
    ],
    "waitress.server.BaseWSGIServer.bind_server_socket": [
        ""
    ],
    "waitress.server.BaseWSGIServer.get_server_name": [
        "",
        "str"
    ],
    "waitress.server.BaseWSGIServer.getsockname": [
        ""
    ],
    "waitress.server.BaseWSGIServer.accept_connections": [
        ""
    ],
    "waitress.server.BaseWSGIServer.add_task": [
        "",
        "Task"
    ],
    "waitress.server.BaseWSGIServer.readable": [
        ""
    ],
    "waitress.server.BaseWSGIServer.writable": [
        ""
    ],
    "waitress.server.BaseWSGIServer.handle_read": [
        ""
    ],
    "waitress.server.BaseWSGIServer.handle_connect": [
        ""
    ],
    "waitress.server.BaseWSGIServer.handle_accept": [
        ""
    ],
    "waitress.server.BaseWSGIServer.run": [
        ""
    ],
    "waitress.server.BaseWSGIServer.pull_trigger": [
        ""
    ],
    "waitress.server.BaseWSGIServer.set_socket_options": [
        "",
        "Any"
    ],
    "waitress.server.BaseWSGIServer.fix_addr": [
        "",
        "Any"
    ],
    "waitress.server.BaseWSGIServer.maintenance": [
        "",
        "int"
    ],
    "waitress.server.BaseWSGIServer.print_listen": [
        "",
        "str"
    ],
    "waitress.server.BaseWSGIServer.close": [
        ""
    ],
    "waitress.server.TcpWSGIServer.bind_server_socket": [
        ""
    ],
    "waitress.server.TcpWSGIServer.getsockname": [
        ""
    ],
    "waitress.server.TcpWSGIServer.set_socket_options": [
        "",
        "socket"
    ],
    "waitress.server.create_server": [
        "Any",
        "Incomplete | None",
        "bool",
        "socket | None",
        "ThreadedTaskDispatcher | None"
    ],
    "waitress.wasyncore.dispatcher.__init__": [
        "",
        "_Socket | None",
        "Mapping[int, _Socket] | None"
    ],
    "waitress.wasyncore.dispatcher.add_channel": [
        "",
        "Mapping[int, _Socket] | None"
    ],
    "waitress.wasyncore.dispatcher.del_channel": [
        "",
        "Mapping[int, _Socket] | None"
    ],
    "waitress.wasyncore.dispatcher.create_socket": [
        "",
        "int",
        "int"
    ],
    "waitress.wasyncore.dispatcher.set_socket": [
        "",
        "_Socket",
        "Mapping[int, _Socket] | None"
    ],
    "waitress.wasyncore.dispatcher.set_reuse_addr": [
        ""
    ],
    "waitress.wasyncore.dispatcher.readable": [
        ""
    ],
    "waitress.wasyncore.dispatcher.writable": [
        ""
    ],
    "waitress.wasyncore.dispatcher.listen": [
        "",
        "int"
    ],
    "waitress.wasyncore.dispatcher.bind": [
        "",
        "tuple[str, int]"
    ],
    "waitress.wasyncore.dispatcher.connect": [
        "",
        "tuple[str, int]"
    ],
    "waitress.wasyncore.dispatcher.accept": [
        ""
    ],
    "waitress.wasyncore.dispatcher.send": [
        "",
        "bytes",
        "bool"
    ],
    "waitress.wasyncore.dispatcher.recv": [
        "",
        "int"
    ],
    "waitress.wasyncore.dispatcher.close": [
        ""
    ],
    "waitress.wasyncore.dispatcher.log": [
        "",
        "str"
    ],
    "waitress.wasyncore.dispatcher.log_info": [
        "",
        "str",
        "str"
    ],
    "waitress.wasyncore.dispatcher.handle_read_event": [
        ""
    ],
    "waitress.wasyncore.dispatcher.handle_connect_event": [
        ""
    ],
    "waitress.wasyncore.dispatcher.handle_write_event": [
        ""
    ],
    "waitress.wasyncore.dispatcher.handle_expt_event": [
        ""
    ],
    "waitress.wasyncore.dispatcher.handle_error": [
        ""
    ],
    "waitress.wasyncore.dispatcher.handle_expt": [
        ""
    ],
    "waitress.wasyncore.dispatcher.handle_read": [
        ""
    ],
    "waitress.wasyncore.dispatcher.handle_write": [
        ""
    ],
    "waitress.wasyncore.dispatcher.handle_connect": [
        ""
    ],
    "waitress.wasyncore.dispatcher.handle_accept": [
        ""
    ],
    "waitress.wasyncore.dispatcher.handle_accepted": [
        "",
        "_Socket",
        "Any"
    ],
    "waitress.wasyncore.dispatcher.handle_close": [
        ""
    ],
    "waitress.wasyncore.dispatcher_with_send.__init__": [
        "",
        "socket | None",
        "Mapping[int, socket] | None"
    ],
    "waitress.wasyncore.dispatcher_with_send.initiate_send": [
        ""
    ],
    "waitress.wasyncore.dispatcher_with_send.writable": [
        ""
    ],
    "waitress.wasyncore.dispatcher_with_send.send": [
        "",
        "bytes"
    ],
    "waitress.wasyncore.read": [
        "dispatcher"
    ],
    "waitress.wasyncore.write": [
        "dispatcher"
    ],
    "waitress.wasyncore.readwrite": [
        "dispatcher",
        "int"
    ],
    "waitress.wasyncore.poll": [
        "float",
        "Mapping[int, socket] | None"
    ],
    "waitress.wasyncore.poll2": [
        "float",
        "Mapping[int, socket] | None"
    ],
    "waitress.wasyncore.loop": [
        "float",
        "bool",
        "Mapping[int, socket] | None",
        "int | None"
    ],
    "waitress.wasyncore.compact_traceback": [],
    "waitress.wasyncore.close_all": [
        "Mapping[int, socket] | None",
        "bool"
    ],
    "waitress.runner.match": [
        "str"
    ],
    "waitress.runner.resolve": [
        "str",
        "str"
    ],
    "waitress.runner.show_help": [
        "TextIOWrapper",
        "str",
        "str | None"
    ],
    "waitress.runner.show_exception": [
        "TextIOWrapper"
    ],
    "waitress.runner.run": [
        "Sequence[str]",
        "Callable[..., object]"
    ],
    "waitress.task.ThreadedTaskDispatcher.start_new_thread": [
        "",
        "Any",
        "Any"
    ],
    "waitress.task.ThreadedTaskDispatcher.handler_thread": [
        "",
        "int"
    ],
    "waitress.task.ThreadedTaskDispatcher.set_thread_count": [
        "",
        "int"
    ],
    "waitress.task.ThreadedTaskDispatcher.add_task": [
        "",
        "Task"
    ],
    "waitress.task.ThreadedTaskDispatcher.shutdown": [
        "",
        "bool",
        "int"
    ],
    "waitress.task.Task.__init__": [
        "",
        "HTTPChannel",
        "Error"
    ],
    "waitress.task.Task.service": [
        ""
    ],
    "waitress.task.Task.has_body": [
        ""
    ],
    "waitress.task.Task.build_response_header": [
        ""
    ],
    "waitress.task.Task.remove_content_length_header": [
        ""
    ],
    "waitress.task.Task.start": [
        ""
    ],
    "waitress.task.Task.finish": [
        ""
    ],
    "waitress.task.Task.write": [
        "",
        "bytes"
    ],
    "waitress.task.ErrorTask.execute": [
        ""
    ],
    "waitress.task.WSGITask.execute": [
        ""
    ],
    "waitress.task.WSGITask.get_environment": [
        ""
    ],
    "waitress.utilities.Error.__init__": [
        "",
        "str"
    ],
    "waitress.utilities.Error.to_response": [
        ""
    ],
    "waitress.utilities.Error.wsgi_response": [
        "",
        "Any",
        "StartResponse"
    ],
    "waitress.utilities.find_double_newline": [
        "bytes"
    ],
    "waitress.utilities.concat": [],
    "waitress.utilities.join": [
        "Any",
        "str"
    ],
    "waitress.utilities.group": [
        "Any"
    ],
    "waitress.utilities.unpack_rfc822": [
        "Match[Any]"
    ],
    "waitress.utilities.unpack_rfc850": [
        "Match[Any]"
    ],
    "waitress.utilities.build_http_date": [
        "int"
    ],
    "waitress.utilities.parse_http_date": [
        "str"
    ],
    "waitress.utilities.undquote": [
        "str"
    ],
    "waitress.utilities.cleanup_unix_socket": [
        "str"
    ],
    "waitress.receiver.FixedStreamReceiver.__init__": [
        "",
        "int",
        "OverflowableBuffer"
    ],
    "waitress.receiver.FixedStreamReceiver.__len__": [
        ""
    ],
    "waitress.receiver.FixedStreamReceiver.received": [
        "",
        "bytes"
    ],
    "waitress.receiver.FixedStreamReceiver.getfile": [
        ""
    ],
    "waitress.receiver.FixedStreamReceiver.getbuf": [
        ""
    ],
    "waitress.receiver.ChunkedReceiver.__init__": [
        "",
        "OverflowableBuffer"
    ],
    "waitress.receiver.ChunkedReceiver.__len__": [
        ""
    ],
    "waitress.receiver.ChunkedReceiver.received": [
        "",
        "bytes"
    ],
    "waitress.receiver.ChunkedReceiver.getfile": [
        ""
    ],
    "waitress.receiver.ChunkedReceiver.getbuf": [
        ""
    ],
    "waitress.proxy_headers.MalformedProxyHeader.__init__": [
        "",
        "str",
        "str",
        "str"
    ],
    "waitress.proxy_headers.proxy_headers_middleware": [
        "Any",
        "str | None",
        "int",
        "set[str] | None",
        "bool",
        "bool",
        "Logger"
    ],
    "waitress.proxy_headers.parse_proxy_headers": [
        "Mapping[str, str]",
        "int",
        "set[str]",
        "Logger"
    ],
    "waitress.proxy_headers.strip_brackets": [
        "str"
    ],
    "waitress.proxy_headers.clear_untrusted_headers": [
        "Mapping[str, str]",
        "Sequence[str]",
        "bool",
        "Logger"
    ],
    "waitress.trigger._triggerbase.readable": [
        ""
    ],
    "waitress.trigger._triggerbase.writable": [
        ""
    ],
    "waitress.trigger._triggerbase.handle_connect": [
        ""
    ],
    "waitress.trigger._triggerbase.handle_close": [
        ""
    ],
    "waitress.trigger._triggerbase.close": [
        ""
    ],
    "waitress.trigger._triggerbase.pull_trigger": [
        "",
        "Callable[[None], object] | None"
    ],
    "waitress.trigger._triggerbase.handle_read": [
        ""
    ],
    "waitress.buffers.FileBasedBuffer.__init__": [
        "",
        "BytesIO",
        "BytesIO | None"
    ],
    "waitress.buffers.FileBasedBuffer.__len__": [
        ""
    ],
    "waitress.buffers.FileBasedBuffer.__nonzero__": [
        ""
    ],
    "waitress.buffers.FileBasedBuffer.__bool__": [
        ""
    ],
    "waitress.buffers.FileBasedBuffer.append": [
        "",
        "Any"
    ],
    "waitress.buffers.FileBasedBuffer.get": [
        "",
        "int",
        "bool"
    ],
    "waitress.buffers.FileBasedBuffer.skip": [
        "",
        "int",
        "int"
    ],
    "waitress.buffers.FileBasedBuffer.newfile": [
        ""
    ],
    "waitress.buffers.FileBasedBuffer.prune": [
        ""
    ],
    "waitress.buffers.FileBasedBuffer.getfile": [
        ""
    ],
    "waitress.buffers.FileBasedBuffer.close": [
        ""
    ],
    "waitress.buffers.TempfileBasedBuffer.__init__": [
        "",
        "BytesIO | None"
    ],
    "waitress.buffers.TempfileBasedBuffer.newfile": [
        ""
    ],
    "waitress.buffers.BytesIOBasedBuffer.__init__": [
        "",
        "BytesIO | None"
    ],
    "waitress.buffers.BytesIOBasedBuffer.newfile": [
        ""
    ],
    "waitress.buffers.ReadOnlyFileBasedBuffer.__init__": [
        "",
        "BytesIO",
        "int"
    ],
    "waitress.buffers.ReadOnlyFileBasedBuffer.prepare": [
        "",
        "int | None"
    ],
    "waitress.buffers.ReadOnlyFileBasedBuffer.get": [
        "",
        "int",
        "bool"
    ],
    "waitress.buffers.ReadOnlyFileBasedBuffer.__iter__": [
        ""
    ],
    "waitress.buffers.ReadOnlyFileBasedBuffer.next": [
        ""
    ],
    "waitress.buffers.ReadOnlyFileBasedBuffer.append": [
        "",
        "Any"
    ],
    "waitress.buffers.OverflowableBuffer.__init__": [
        "",
        "int"
    ],
    "waitress.buffers.OverflowableBuffer.__len__": [
        ""
    ],
    "waitress.buffers.OverflowableBuffer.__nonzero__": [
        ""
    ],
    "waitress.buffers.OverflowableBuffer.__bool__": [
        ""
    ],
    "waitress.buffers.OverflowableBuffer.append": [
        "",
        "bytes"
    ],
    "waitress.buffers.OverflowableBuffer.get": [
        "",
        "int",
        "bool"
    ],
    "waitress.buffers.OverflowableBuffer.skip": [
        "",
        "int",
        "bool"
    ],
    "waitress.buffers.OverflowableBuffer.prune": [
        ""
    ],
    "waitress.buffers.OverflowableBuffer.getfile": [
        ""
    ],
    "waitress.buffers.OverflowableBuffer.close": [
        ""
    ],
    "waitress.compat.unquote_bytes_to_wsgi": [
        "bytes"
    ],
    "waitress.compat.text_": [
        "str",
        "str",
        "str"
    ],
    "waitress.compat.tostr": [
        "str"
    ],
    "waitress.compat.tobytes": [
        "str"
    ],
    "waitress.compat.reraise": [
        "Any",
        "BaseException",
        "str | None"
    ],
    "waitress.compat.set_nonblocking": [
        "TextIOWrapper"
    ],
    "waitress.compat.qualname": [
        "Any"
    ],
    "waitress.channel.HTTPChannel.__init__": [
        "",
        "BaseWSGIServer",
        "socket",
        "str",
        "Adjustments",
        "Mapping[int, socket] | None"
    ],
    "waitress.channel.HTTPChannel.writable": [
        ""
    ],
    "waitress.channel.HTTPChannel.handle_write": [
        ""
    ],
    "waitress.channel.HTTPChannel.readable": [
        ""
    ],
    "waitress.channel.HTTPChannel.handle_read": [
        ""
    ],
    "waitress.channel.HTTPChannel.received": [
        "",
        "bytes"
    ],
    "waitress.channel.HTTPChannel.handle_close": [
        ""
    ],
    "waitress.channel.HTTPChannel.add_channel": [
        "",
        "Mapping[int, socket] | None"
    ],
    "waitress.channel.HTTPChannel.del_channel": [
        "",
        "Mapping[int, socket] | None"
    ],
    "waitress.channel.HTTPChannel.write_soon": [
        "",
        "bytes"
    ],
    "waitress.channel.HTTPChannel.service": [
        ""
    ],
    "waitress.channel.HTTPChannel.cancel": [
        ""
    ]
}