{
    "keyboard._canonical_names.normalize_name": [
        "str"
    ],
    "keyboard._keyboard_event.KeyboardEvent.__init__": [
        "",
        "Literal[\"down\", \"up\"] | None",
        "int",
        "str | None",
        "float | None",
        "str | None",
        "tuple[str, ...] | None",
        "bool | None"
    ],
    "keyboard._keyboard_event.KeyboardEvent.to_json": [
        "",
        "bool"
    ],
    "keyboard._keyboard_event.KeyboardEvent.__eq__": [
        "",
        "object"
    ],
    "keyboard._generic.GenericListener.invoke_handlers": [
        "",
        "_Event"
    ],
    "keyboard._generic.GenericListener.start_if_necessary": [
        ""
    ],
    "keyboard._generic.GenericListener.pre_process_event": [
        "",
        "_Event"
    ],
    "keyboard._generic.GenericListener.process": [
        ""
    ],
    "keyboard._generic.GenericListener.add_handler": [
        "",
        "Callable[[_Event], bool | None]"
    ],
    "keyboard._generic.GenericListener.remove_handler": [
        "",
        "Callable[[_Event], bool | None]"
    ],
    "keyboard.mouse._MouseListener.init": [
        ""
    ],
    "keyboard.mouse._MouseListener.pre_process_event": [
        "",
        "_MouseEvent"
    ],
    "keyboard.mouse._MouseListener.listen": [
        ""
    ],
    "keyboard.mouse.is_pressed": [
        "_MouseButton"
    ],
    "keyboard.mouse.press": [
        "_MouseButton"
    ],
    "keyboard.mouse.release": [
        "_MouseButton"
    ],
    "keyboard.mouse.click": [
        "_MouseButton"
    ],
    "keyboard.mouse.double_click": [
        "_MouseButton"
    ],
    "keyboard.mouse.right_click": [],
    "keyboard.mouse.wheel": [
        "int"
    ],
    "keyboard.mouse.move": [
        "SupportsInt",
        "SupportsInt",
        "bool",
        "float"
    ],
    "keyboard.mouse.drag": [
        "int",
        "int",
        "int",
        "int",
        "bool",
        "float"
    ],
    "keyboard.mouse.on_button": [
        "Callable[..., None]",
        "_Ts",
        "list[_MouseButton] | tuple[_MouseButton, ...] | _MouseButton",
        "list[_MouseEventType] | tuple[_MouseEventType, ...] | _MouseEventType"
    ],
    "keyboard.mouse.on_click": [
        "Callable[..., None]",
        "_Ts"
    ],
    "keyboard.mouse.on_double_click": [
        "Callable[..., None]",
        "_Ts"
    ],
    "keyboard.mouse.on_right_click": [
        "Callable[..., None]",
        "_Ts"
    ],
    "keyboard.mouse.on_middle_click": [
        "Callable[..., None]",
        "_Ts"
    ],
    "keyboard.mouse.wait": [
        "_MouseButton",
        "tuple[_MouseEventType, ...]"
    ],
    "keyboard.mouse.hook": [
        "_C"
    ],
    "keyboard.mouse.unhook": [
        "_Callback"
    ],
    "keyboard.mouse.unhook_all": [],
    "keyboard.mouse.record": [
        "_MouseButton",
        "tuple[_MouseEventType]"
    ],
    "keyboard.mouse.play": [
        "Iterable[_MouseEvent]",
        "float",
        "bool",
        "bool",
        "bool"
    ],
    "keyboard.__init__._Event.wait": [
        ""
    ],
    "keyboard.__init__.is_modifier": [
        "_Key | None"
    ],
    "keyboard.__init__.key_to_scan_codes": [
        "_ParseableHotkey",
        "bool"
    ],
    "keyboard.__init__.parse_hotkey": [
        "_ParseableHotkey"
    ],
    "keyboard.__init__.send": [
        "_ParseableHotkey",
        "bool",
        "bool"
    ],
    "keyboard.__init__.press": [
        "_ParseableHotkey"
    ],
    "keyboard.__init__.release": [
        "_ParseableHotkey"
    ],
    "keyboard.__init__.is_pressed": [
        "_Key | _ScanCodeList"
    ],
    "keyboard.__init__.call_later": [
        "Callable[..., None]",
        "_Ts",
        "float"
    ],
    "keyboard.__init__.hook": [
        "_Callback",
        "bool",
        "Callable[[], None]"
    ],
    "keyboard.__init__.on_press": [
        "_Callback",
        "bool"
    ],
    "keyboard.__init__.on_release": [
        "_Callback",
        "bool"
    ],
    "keyboard.__init__.hook_key": [
        "_ParseableHotkey",
        "_Callback",
        "bool"
    ],
    "keyboard.__init__.on_press_key": [
        "_ParseableHotkey",
        "_Callback",
        "bool"
    ],
    "keyboard.__init__.on_release_key": [
        "_ParseableHotkey",
        "_Callback",
        "bool"
    ],
    "keyboard.__init__.unhook": [
        "_Callback"
    ],
    "keyboard.__init__.unhook_all": [],
    "keyboard.__init__.block_key": [
        "_ParseableHotkey"
    ],
    "keyboard.__init__.remap_key": [
        "_ParseableHotkey",
        "_ParseableHotkey"
    ],
    "keyboard.__init__.parse_hotkey_combinations": [
        "_ParseableHotkey"
    ],
    "keyboard.__init__.add_hotkey": [
        "_ParseableHotkey",
        "Callable[..., bool | None]",
        "_Ts",
        "bool",
        "float",
        "bool"
    ],
    "keyboard.__init__.remove_hotkey": [
        "_ParseableHotkey | _Callback"
    ],
    "keyboard.__init__.unhook_all_hotkeys": [],
    "keyboard.__init__.remap_hotkey": [
        "_ParseableHotkey",
        "_ParseableHotkey",
        "bool",
        "bool"
    ],
    "keyboard.__init__.stash_state": [],
    "keyboard.__init__.restore_state": [
        "Iterable[int]"
    ],
    "keyboard.__init__.restore_modifiers": [
        "Iterable[int]"
    ],
    "keyboard.__init__.write": [
        "str",
        "float",
        "bool",
        "bool | None"
    ],
    "keyboard.__init__.wait": [
        "_ParseableHotkey | None",
        "bool",
        "bool"
    ],
    "keyboard.__init__.get_hotkey_name": [
        "Iterable[str] | None"
    ],
    "keyboard.__init__.read_event": [
        "bool"
    ],
    "keyboard.__init__.read_key": [
        "bool"
    ],
    "keyboard.__init__.read_hotkey": [
        "bool"
    ],
    "keyboard.__init__.get_typed_strings": [
        "Iterable[KeyboardEvent]",
        "bool"
    ],
    "keyboard.__init__.start_recording": [
        "Queue[KeyboardEvent] | None"
    ],
    "keyboard.__init__.stop_recording": [],
    "keyboard.__init__.record": [
        "str",
        "bool",
        "bool"
    ],
    "keyboard.__init__.play": [
        "Iterable[KeyboardEvent]",
        "float"
    ],
    "keyboard.__init__.add_word_listener": [
        "str",
        "_Callback",
        "Sequence[str]",
        "bool",
        "float"
    ],
    "keyboard.__init__.remove_word_listener": [
        "str | _Callback"
    ],
    "keyboard.__init__.add_abbreviation": [
        "str",
        "str",
        "bool",
        "float"
    ]
}