{
    "gflags.DuplicateFlagError.__init__": [
        "",
        "str",
        "FlagValues",
        "FlagValues"
    ],
    "gflags.UnrecognizedFlagError.__init__": [
        "",
        "str",
        "str"
    ],
    "gflags.FlagValues.UseGnuGetOpt": [
        "",
        "bool"
    ],
    "gflags.FlagValues.is_gnu_getopt": [
        ""
    ],
    "gflags.FlagValues.FlagDict": [
        ""
    ],
    "gflags.FlagValues.flags_by_module_dict": [
        ""
    ],
    "gflags.FlagValues.flags_by_module_id_dict": [
        ""
    ],
    "gflags.FlagValues.key_flags_by_module_dict": [
        ""
    ],
    "gflags.FlagValues.find_module_defining_flag": [
        "",
        "str",
        "str"
    ],
    "gflags.FlagValues.find_module_id_defining_flag": [
        "",
        "str",
        "int"
    ],
    "gflags.FlagValues.append_flag_values": [
        "",
        "FlagValues"
    ],
    "gflags.FlagValues.remove_flag_values": [
        "",
        "FlagValues"
    ],
    "gflags.FlagValues.__setitem__": [
        "",
        "str",
        "Flag"
    ],
    "gflags.FlagValues.__getitem__": [
        "",
        "str"
    ],
    "gflags.FlagValues.__getattr__": [
        "",
        "str"
    ],
    "gflags.FlagValues.__setattr__": [
        "",
        "str",
        "Any"
    ],
    "gflags.FlagValues.__delattr__": [
        "",
        "str"
    ],
    "gflags.FlagValues.set_default": [
        "",
        "str",
        "Any"
    ],
    "gflags.FlagValues.__contains__": [
        "",
        "str"
    ],
    "gflags.FlagValues.__iter__": [
        ""
    ],
    "gflags.FlagValues.__call__": [
        "",
        "list[str]",
        "bool"
    ],
    "gflags.FlagValues.reset": [
        ""
    ],
    "gflags.FlagValues.RegisteredFlags": [
        ""
    ],
    "gflags.FlagValues.flag_values_dict": [
        ""
    ],
    "gflags.FlagValues.GetHelp": [
        "",
        "str"
    ],
    "gflags.FlagValues.module_help": [
        "",
        "ModuleType | str"
    ],
    "gflags.FlagValues.main_module_help": [
        ""
    ],
    "gflags.FlagValues.get": [
        "",
        "str",
        "Any"
    ],
    "gflags.FlagValues.ShortestUniquePrefixes": [
        "",
        "dict[str, Flag]"
    ],
    "gflags.FlagValues.ExtractFilename": [
        "",
        "str"
    ],
    "gflags.FlagValues.read_flags_from_files": [
        "",
        "list[str]",
        "bool"
    ],
    "gflags.FlagValues.flags_into_string": [
        ""
    ],
    "gflags.FlagValues.append_flags_into_file": [
        "",
        "str"
    ],
    "gflags.FlagValues.write_help_in_xml_format": [
        "",
        "IO[str]"
    ],
    "gflags.FlagValues.AddValidator": [
        "",
        "Any"
    ],
    "gflags.FlagValues.is_parsed": [
        ""
    ],
    "gflags.Flag.__init__": [
        "",
        "ArgumentParser",
        "ArgumentSerializer",
        "str",
        "str | None",
        "str",
        "str",
        "bool",
        "bool"
    ],
    "gflags.Flag.Parse": [
        "",
        "Any"
    ],
    "gflags.Flag.Unparse": [
        ""
    ],
    "gflags.Flag.Serialize": [
        ""
    ],
    "gflags.Flag.SetDefault": [
        "",
        "Any"
    ],
    "gflags.Flag.Type": [
        ""
    ],
    "gflags.Flag.WriteInfoInXMLFormat": [
        "",
        "IO[str]",
        "str",
        "bool",
        "str"
    ],
    "gflags.ArgumentParser.parse": [
        "",
        "Any"
    ],
    "gflags.ArgumentParser.flag_type": [
        ""
    ],
    "gflags.ArgumentParser.WriteCustomInfoInXMLFormat": [
        "",
        "IO[str]",
        "str"
    ],
    "gflags.ArgumentSerializer.Serialize": [
        "",
        "Any"
    ],
    "gflags.ListSerializer.__init__": [
        "",
        "str"
    ],
    "gflags.ListSerializer.Serialize": [
        "",
        "list[Any]"
    ],
    "gflags.BooleanParser.Convert": [
        "",
        "Any"
    ],
    "gflags.BooleanParser.Parse": [
        "",
        "Any"
    ],
    "gflags.BooleanFlag.__init__": [
        "",
        "str",
        "bool | None",
        "str",
        "str"
    ],
    "gflags.HelpFlag.__init__": [
        ""
    ],
    "gflags.HelpFlag.Parse": [
        "",
        "Any"
    ],
    "gflags.HelpXMLFlag.__init__": [
        ""
    ],
    "gflags.HelpXMLFlag.Parse": [
        "",
        "Any"
    ],
    "gflags.HelpshortFlag.__init__": [
        ""
    ],
    "gflags.HelpshortFlag.Parse": [
        "",
        "Any"
    ],
    "gflags.NumericParser.IsOutsideBounds": [
        "",
        "float"
    ],
    "gflags.NumericParser.Parse": [
        "",
        "Any"
    ],
    "gflags.NumericParser.WriteCustomInfoInXMLFormat": [
        "",
        "IO[str]",
        "str"
    ],
    "gflags.NumericParser.Convert": [
        "",
        "Any"
    ],
    "gflags.FloatParser.__init__": [
        "",
        "float",
        "float"
    ],
    "gflags.FloatParser.Convert": [
        "",
        "Any"
    ],
    "gflags.IntegerParser.__init__": [
        "",
        "int",
        "int"
    ],
    "gflags.IntegerParser.Convert": [
        "",
        "Any"
    ],
    "gflags.EnumParser.__init__": [
        "",
        "list[str]"
    ],
    "gflags.EnumParser.Parse": [
        "",
        "Any"
    ],
    "gflags.EnumFlag.__init__": [
        "",
        "str",
        "str | None",
        "str",
        "list[str]",
        "str"
    ],
    "gflags.BaseListParser.__init__": [
        "",
        "str",
        "str"
    ],
    "gflags.BaseListParser.Parse": [
        "",
        "Any"
    ],
    "gflags.ListParser.__init__": [
        ""
    ],
    "gflags.WhitespaceSeparatedListParser.__init__": [
        ""
    ],
    "gflags.MultiFlag.__init__": [
        ""
    ],
    "gflags.MultiFlag.Parse": [
        "",
        "Any"
    ],
    "gflags.MultiFlag.Serialize": [
        ""
    ],
    "gflags.get_help_width": [],
    "gflags.text_wrap": [
        "str",
        "int",
        "str",
        "str",
        "str"
    ],
    "gflags.doc_to_help": [
        "str"
    ],
    "gflags.register_validator": [
        "str",
        "Callable[[Any], bool]",
        "str",
        "FlagValues"
    ],
    "gflags.mark_flag_as_required": [
        "str",
        "FlagValues"
    ],
    "gflags.mark_flags_as_required": [
        "Iterable[str]",
        "FlagValues"
    ],
    "gflags.mark_flags_as_mutual_exclusive": [
        "Iterable[str]",
        "bool",
        "FlagValues"
    ],
    "gflags.DEFINE": [
        "ArgumentParser",
        "str",
        "Any",
        "str",
        "FlagValues",
        "ArgumentSerializer"
    ],
    "gflags.DEFINE_flag": [
        "Flag",
        "FlagValues"
    ],
    "gflags.declare_key_flag": [
        "str",
        "FlagValues"
    ],
    "gflags.adopt_module_key_flags": [
        "ModuleType",
        "FlagValues"
    ],
    "gflags.DEFINE_string": [
        "str",
        "str | None",
        "str",
        "FlagValues"
    ],
    "gflags.DEFINE_boolean": [
        "str",
        "bool | None",
        "str",
        "FlagValues"
    ],
    "gflags.DEFINE_float": [
        "str",
        "float | None",
        "str",
        "float",
        "float",
        "FlagValues"
    ],
    "gflags.DEFINE_integer": [
        "str",
        "int | None",
        "str",
        "int",
        "int",
        "FlagValues"
    ],
    "gflags.DEFINE_enum": [
        "str",
        "str | None",
        "Iterable[str]",
        "str",
        "FlagValues"
    ],
    "gflags.DEFINE_list": [
        "str",
        "list[str] | None",
        "str",
        "FlagValues"
    ],
    "gflags.DEFINE_spaceseplist": [
        "str",
        "list[str] | None",
        "str",
        "FlagValues"
    ],
    "gflags.DEFINE_multi_string": [
        "str",
        "str | list[str] | None",
        "str",
        "FlagValues"
    ],
    "gflags.DEFINE_multi_integer": [
        "str",
        "int | list[int] | None",
        "str",
        "int",
        "int",
        "FlagValues"
    ],
    "gflags.DEFINE_multi_float": [
        "str",
        "float | list[float] | None",
        "str",
        "float",
        "float",
        "FlagValues"
    ],
    "gflags.DEFINE_multi_enum": [
        "str",
        "Sequence[str] | str | None",
        "Sequence[str]",
        "str",
        "FlagValues",
        "bool"
    ]
}