{
    "Xlib.support.lock.allocate_lock": [],
    "Xlib.support.vms_connect.get_display": [
        "str | None"
    ],
    "Xlib.support.vms_connect.get_socket": [
        "_Address",
        "Unused",
        "_Address",
        "int"
    ],
    "Xlib.support.vms_connect.get_auth": [
        "Unused",
        "Unused",
        "Unused",
        "Unused"
    ],
    "Xlib.support.unix_connect.get_display": [
        "str | None"
    ],
    "Xlib.support.unix_connect.get_socket": [
        "_Address",
        "_Protocol",
        "_Address | None",
        "int"
    ],
    "Xlib.support.unix_connect.new_get_auth": [
        "socket",
        "Unused",
        "_Protocol",
        "Unused",
        "int"
    ],
    "Xlib.support.unix_connect.old_get_auth": [
        "Unused",
        "_Address",
        "Unused",
        "Unused"
    ],
    "Xlib.protocol.rq.Field.parse_binary_value": [
        "",
        "SliceableBuffer",
        "display.Display | None",
        "int | None",
        "int"
    ],
    "Xlib.protocol.rq.Pad.__init__": [
        "",
        "int"
    ],
    "Xlib.protocol.rq.ConstantField.__init__": [
        "",
        "int"
    ],
    "Xlib.protocol.rq.ReplyCode.__init__": [
        ""
    ],
    "Xlib.protocol.rq.LengthField.calc_length": [
        "",
        "int"
    ],
    "Xlib.protocol.rq.LengthOf.__init__": [
        "",
        "str | list[str] | tuple[str, ...]",
        "int"
    ],
    "Xlib.protocol.rq.OddLength.__init__": [
        "",
        "str"
    ],
    "Xlib.protocol.rq.OddLength.parse_value": [
        "",
        "int",
        "Unused"
    ],
    "Xlib.protocol.rq.FormatField.__init__": [
        "",
        "str",
        "int"
    ],
    "Xlib.protocol.rq.ValueField.__init__": [
        "",
        "str",
        "int | None"
    ],
    "Xlib.protocol.rq.Resource.__init__": [
        "",
        "str",
        "tuple[int, ...]",
        "int | None"
    ],
    "Xlib.protocol.rq.Resource.check_value": [
        "",
        "Callable[[], _T]"
    ],
    "Xlib.protocol.rq.Resource.parse_value": [
        "",
        "int",
        "_BaseDisplay"
    ],
    "Xlib.protocol.rq.Bool.check_value": [
        "",
        "object"
    ],
    "Xlib.protocol.rq.Set.__init__": [
        "",
        "str",
        "int",
        "Sequence[object]",
        "int | None"
    ],
    "Xlib.protocol.rq.Set.check_value": [
        "",
        "_T"
    ],
    "Xlib.protocol.rq.Gravity.__init__": [
        "",
        "str"
    ],
    "Xlib.protocol.rq.FixedBinary.__init__": [
        "",
        "str",
        "int"
    ],
    "Xlib.protocol.rq.Binary.__init__": [
        "",
        "str",
        "int"
    ],
    "Xlib.protocol.rq.Binary.pack_value": [
        "",
        "bytes | bytearray"
    ],
    "Xlib.protocol.rq.Binary.parse_binary_value": [
        "",
        "_T",
        "Unused",
        "None",
        "Unused"
    ],
    "Xlib.protocol.rq.String8.__init__": [
        "",
        "str",
        "int"
    ],
    "Xlib.protocol.rq.String8.pack_value": [
        "",
        "bytes | str"
    ],
    "Xlib.protocol.rq.String8.parse_binary_value": [
        "",
        "bytes | bytearray",
        "Unused",
        "None",
        "Unused"
    ],
    "Xlib.protocol.rq.String16.__init__": [
        "",
        "str",
        "int"
    ],
    "Xlib.protocol.rq.String16.pack_value": [
        "",
        "Sequence[object]"
    ],
    "Xlib.protocol.rq.String16.parse_binary_value": [
        "",
        "SliceableBuffer",
        "Unused",
        "int | Literal[\"odd\", \"even\"]",
        "Unused"
    ],
    "Xlib.protocol.rq.List.__init__": [
        "",
        "str",
        "Struct | ScalarObj | ResourceObj | ClassInfoClass | Type[ValueField]",
        "int"
    ],
    "Xlib.protocol.rq.List.parse_binary_value": [
        "",
        "SliceableBuffer",
        "display.Display | None",
        "SupportsIndex | None",
        "Unused"
    ],
    "Xlib.protocol.rq.List.pack_value": [
        "",
        "Sequence[object] | dict[str, Any]"
    ],
    "Xlib.protocol.rq.FixedList.__init__": [
        "",
        "str",
        "int",
        "Struct | ScalarObj",
        "int"
    ],
    "Xlib.protocol.rq.FixedList.parse_binary_value": [
        "",
        "SliceableBuffer",
        "display.Display | None",
        "Unused",
        "Unused"
    ],
    "Xlib.protocol.rq.Object.__init__": [
        "",
        "str",
        "Struct",
        "int | None"
    ],
    "Xlib.protocol.rq.Object.parse_binary_value": [
        "",
        "SliceableBuffer",
        "display.Display | None",
        "Unused",
        "Unused"
    ],
    "Xlib.protocol.rq.Object.parse_value": [
        "",
        "SliceableBuffer",
        "display.Display | None"
    ],
    "Xlib.protocol.rq.Object.pack_value": [
        "",
        "tuple[object, ...] | dict[str, Any] | DictWrapper"
    ],
    "Xlib.protocol.rq.Object.check_value": [
        "",
        "tuple[_T, ...] | dict[str, _T] | DictWrapper"
    ],
    "Xlib.protocol.rq.PropertyData.parse_binary_value": [
        "",
        "SliceableBuffer",
        "Unused",
        "_IntNew | None",
        "int"
    ],
    "Xlib.protocol.rq.PropertyData.pack_value": [
        "",
        "tuple[int, Sequence[float] | Sequence[str]]"
    ],
    "Xlib.protocol.rq.FixedPropertyData.__init__": [
        "",
        "str",
        "int"
    ],
    "Xlib.protocol.rq.ValueList.__init__": [
        "",
        "str",
        "int",
        "int"
    ],
    "Xlib.protocol.rq.ValueList.pack_value": [
        "",
        "str | dict[str, Any]",
        "dict[str, Any]"
    ],
    "Xlib.protocol.rq.ValueList.parse_binary_value": [
        "",
        "SliceableBuffer",
        "display.Display | None",
        "Unused",
        "Unused"
    ],
    "Xlib.protocol.rq.KeyboardMapping.parse_binary_value": [
        "",
        "SliceableBuffer",
        "Unused",
        "int | None",
        "int"
    ],
    "Xlib.protocol.rq.KeyboardMapping.pack_value": [
        "",
        "Sequence[Sequence[object]]"
    ],
    "Xlib.protocol.rq.ModifierMapping.parse_binary_value": [
        "",
        "SliceableBuffer",
        "Unused",
        "Unused",
        "int"
    ],
    "Xlib.protocol.rq.ModifierMapping.pack_value": [
        "",
        "_ModifierMappingList8Elements"
    ],
    "Xlib.protocol.rq.EventField.pack_value": [
        "",
        "Event"
    ],
    "Xlib.protocol.rq.EventField.parse_binary_value": [
        "",
        "SliceableBuffer",
        "display.Display",
        "Unused",
        "Unused"
    ],
    "Xlib.protocol.rq.ScalarObj.__init__": [
        "",
        "str"
    ],
    "Xlib.protocol.rq.ResourceObj.__init__": [
        "",
        "str"
    ],
    "Xlib.protocol.rq.ResourceObj.parse_value": [
        "",
        "int",
        "_BaseDisplay"
    ],
    "Xlib.protocol.rq.StrClass.pack_value": [
        "",
        "str"
    ],
    "Xlib.protocol.rq.StrClass.parse_binary": [
        "",
        "bytes | bytearray",
        "Unused"
    ],
    "Xlib.protocol.rq.Struct.__init__": [
        ""
    ],
    "Xlib.protocol.rq.Struct.to_binary": [
        ""
    ],
    "Xlib.protocol.rq.Struct.pack_value": [
        "",
        "tuple[object, ...] | dict[str, Any] | DictWrapper"
    ],
    "Xlib.protocol.rq.Struct.parse_value": [
        "",
        "SliceableBuffer",
        "display.Display | None",
        "Literal[True]"
    ],
    "Xlib.protocol.rq.Struct.parse_binary": [
        "",
        "SliceableBuffer",
        "display.Display | None",
        "Literal[True]"
    ],
    "Xlib.protocol.rq.Struct.__getattr__": [
        "",
        "str"
    ],
    "Xlib.protocol.rq.TextElements8.pack_value": [
        "",
        "Iterable[Field | str | bytes | tuple[Sequence[object], ...] | dict[str, Sequence[object]] | DictWrapper]"
    ],
    "Xlib.protocol.rq.TextElements8.parse_binary_value": [
        "",
        "SliceableBuffer",
        "display.Display | None",
        "Unused",
        "Unused"
    ],
    "Xlib.protocol.rq.GetAttrData.__getattr__": [
        "",
        "str"
    ],
    "Xlib.protocol.rq.GetAttrData.__setattr__": [
        "",
        "str",
        "Any"
    ],
    "Xlib.protocol.rq.DictWrapper.__init__": [
        "",
        "dict[str, Any]"
    ],
    "Xlib.protocol.rq.DictWrapper.__getitem__": [
        "",
        "str"
    ],
    "Xlib.protocol.rq.DictWrapper.__setitem__": [
        "",
        "str",
        "object"
    ],
    "Xlib.protocol.rq.DictWrapper.__delitem__": [
        "",
        "str"
    ],
    "Xlib.protocol.rq.DictWrapper.__setattr__": [
        "",
        "str",
        "object"
    ],
    "Xlib.protocol.rq.Request.__init__": [
        "",
        "_BaseDisplay",
        "ErrorHandler[object] | None"
    ],
    "Xlib.protocol.rq.ReplyRequest.__init__": [
        "",
        "display.Display",
        "bool"
    ],
    "Xlib.protocol.rq.ReplyRequest.reply": [
        ""
    ],
    "Xlib.protocol.rq.Event.__init__": [
        "",
        "SliceableBuffer | None",
        "display.Display | None"
    ],
    "Xlib.protocol.rq.decode_string": [
        "bytes | bytearray"
    ],
    "Xlib.protocol.rq.encode_array": [
        "array[Any] | memoryview"
    ],
    "Xlib.protocol.rq.call_error_handler": [
        "Callable[[XError, Request | None], _T]",
        "XError",
        "Request | None"
    ],
    "Xlib.protocol.display.bytesview.__init__": [
        "",
        "bytes | bytesview",
        "int",
        "int"
    ],
    "Xlib.protocol.display.bytesview.__getitem__": [
        "",
        "slice"
    ],
    "Xlib.protocol.display.bytesview.__len__": [
        ""
    ],
    "Xlib.protocol.display.Display.__init__": [
        "",
        "str | None"
    ],
    "Xlib.protocol.display.Display.get_display_name": [
        ""
    ],
    "Xlib.protocol.display.Display.get_default_screen": [
        ""
    ],
    "Xlib.protocol.display.Display.fileno": [
        ""
    ],
    "Xlib.protocol.display.Display.next_event": [
        ""
    ],
    "Xlib.protocol.display.Display.pending_events": [
        ""
    ],
    "Xlib.protocol.display.Display.flush": [
        ""
    ],
    "Xlib.protocol.display.Display.close": [
        ""
    ],
    "Xlib.protocol.display.Display.set_error_handler": [
        "",
        "ErrorHandler[object] | None"
    ],
    "Xlib.protocol.display.Display.allocate_resource_id": [
        ""
    ],
    "Xlib.protocol.display.Display.free_resource_id": [
        "",
        "int"
    ],
    "Xlib.protocol.display.Display.get_resource_class": [
        "",
        "Literal[\"resource\"]",
        "object"
    ],
    "Xlib.protocol.display.Display.set_extension_major": [
        "",
        "str",
        "int"
    ],
    "Xlib.protocol.display.Display.get_extension_major": [
        "",
        "str"
    ],
    "Xlib.protocol.display.Display.add_extension_event": [
        "",
        "int",
        "type[rq.Event]",
        "int | None"
    ],
    "Xlib.protocol.display.Display.add_extension_error": [
        "",
        "int",
        "type[error.XError]"
    ],
    "Xlib.protocol.display.Display.check_for_error": [
        ""
    ],
    "Xlib.protocol.display.Display.send_request": [
        "",
        "rq.Request | rq.ReplyRequest | ConnectionSetupRequest",
        "bool"
    ],
    "Xlib.protocol.display.Display.close_internal": [
        "",
        "object"
    ],
    "Xlib.protocol.display.Display.send_and_recv": [
        "",
        "bool",
        "bool",
        "int | None",
        "bool"
    ],
    "Xlib.protocol.display.Display.parse_response": [
        "",
        "int"
    ],
    "Xlib.protocol.display.Display.parse_error_response": [
        "",
        "int"
    ],
    "Xlib.protocol.display.Display.default_error_handler": [
        "",
        "object"
    ],
    "Xlib.protocol.display.Display.parse_request_response": [
        "",
        "int"
    ],
    "Xlib.protocol.display.Display.parse_event_response": [
        "",
        "int"
    ],
    "Xlib.protocol.display.Display.get_waiting_request": [
        "",
        "int"
    ],
    "Xlib.protocol.display.Display.get_waiting_replyrequest": [
        ""
    ],
    "Xlib.protocol.display.Display.parse_connection_setup": [
        ""
    ],
    "Xlib.protocol.display.ConnectionSetupRequest.__init__": [
        "",
        "Display"
    ],
    "Xlib.protocol.structs.WindowValues": [
        "str"
    ],
    "Xlib.protocol.structs.GCValues": [
        "str"
    ],
    "Xlib.protocol.request.ListFontsWithInfo.__init__": [
        "",
        "display.Display",
        "bool"
    ],
    "Xlib.protocol.request.ListFontsWithInfo.__getattr__": [
        "",
        "object"
    ],
    "Xlib.protocol.request.ListFontsWithInfo.__getitem__": [
        "",
        "str"
    ],
    "Xlib.protocol.request.ListFontsWithInfo.__len__": [
        ""
    ],
    "Xlib.ext.res.SizeOf.__init__": [
        "",
        "str | list[str] | tuple[str, ...]",
        "int",
        "int"
    ],
    "Xlib.ext.res.SizeOf.parse_value": [
        "",
        "int",
        "Unused"
    ],
    "Xlib.ext.res.query_version": [
        "Display | resource.Resource",
        "int",
        "int"
    ],
    "Xlib.ext.res.query_clients": [
        "Display | resource.Resource"
    ],
    "Xlib.ext.res.query_client_resources": [
        "Display | resource.Resource",
        "int"
    ],
    "Xlib.ext.res.query_client_pixmap_bytes": [
        "Display | resource.Resource",
        "int"
    ],
    "Xlib.ext.res.query_client_ids": [
        "Display | resource.Resource",
        "Sequence[tuple[int, int]]"
    ],
    "Xlib.ext.res.query_resource_bytes": [
        "Display | resource.Resource",
        "int",
        "Sequence[tuple[int, int]]"
    ],
    "Xlib.ext.res.init": [
        "Display",
        "Unused"
    ],
    "Xlib.ext.randr.query_version": [
        "Display | resource.Resource"
    ],
    "Xlib.ext.randr.set_screen_config": [
        "drawable.Drawable",
        "int",
        "int",
        "int",
        "int",
        "int"
    ],
    "Xlib.ext.randr.select_input": [
        "drawable.Window",
        "int"
    ],
    "Xlib.ext.randr.get_screen_info": [
        "drawable.Window"
    ],
    "Xlib.ext.randr.get_screen_size_range": [
        "drawable.Window"
    ],
    "Xlib.ext.randr.set_screen_size": [
        "drawable.Window",
        "int",
        "int",
        "int | None",
        "int | None"
    ],
    "Xlib.ext.randr.get_screen_resources": [
        "drawable.Window"
    ],
    "Xlib.ext.randr.get_output_info": [
        "Display | resource.Resource",
        "int",
        "int"
    ],
    "Xlib.ext.randr.list_output_properties": [
        "Display | resource.Resource",
        "int"
    ],
    "Xlib.ext.randr.query_output_property": [
        "Display | resource.Resource",
        "int",
        "int"
    ],
    "Xlib.ext.randr.configure_output_property": [
        "Display | resource.Resource",
        "int",
        "int"
    ],
    "Xlib.ext.randr.change_output_property": [
        "Display | resource.Resource",
        "int",
        "int",
        "int",
        "int",
        "Sequence[float] | Sequence[str]"
    ],
    "Xlib.ext.randr.delete_output_property": [
        "Display | resource.Resource",
        "int",
        "int"
    ],
    "Xlib.ext.randr.get_output_property": [
        "Display | resource.Resource",
        "int",
        "int",
        "int",
        "int",
        "int",
        "bool",
        "bool"
    ],
    "Xlib.ext.randr.create_mode": [
        "drawable.Window",
        "_RandRModeInfo13IntSequence",
        "str"
    ],
    "Xlib.ext.randr.destroy_mode": [
        "Display | resource.Resource",
        "int"
    ],
    "Xlib.ext.randr.add_output_mode": [
        "Display | resource.Resource",
        "int",
        "int"
    ],
    "Xlib.ext.randr.delete_output_mode": [
        "Display | resource.Resource",
        "int",
        "int"
    ],
    "Xlib.ext.randr.get_crtc_info": [
        "Display | resource.Resource",
        "int",
        "int"
    ],
    "Xlib.ext.randr.set_crtc_config": [
        "Display | resource.Resource",
        "int",
        "int",
        "int",
        "int",
        "int",
        "int",
        "Sequence[int]",
        "int"
    ],
    "Xlib.ext.randr.get_crtc_gamma_size": [
        "Display | resource.Resource",
        "int"
    ],
    "Xlib.ext.randr.get_crtc_gamma": [
        "Display | resource.Resource",
        "int"
    ],
    "Xlib.ext.randr.set_crtc_gamma": [
        "Display | resource.Resource",
        "int",
        "int",
        "Sequence[int]",
        "Sequence[int]",
        "Sequence[int]"
    ],
    "Xlib.ext.randr.get_screen_resources_current": [
        "drawable.Window"
    ],
    "Xlib.ext.randr.set_crtc_transform": [
        "Display | resource.Resource",
        "int",
        "Sequence[int]"
    ],
    "Xlib.ext.randr.get_crtc_transform": [
        "Display | resource.Resource",
        "int"
    ],
    "Xlib.ext.randr.get_panning": [
        "Display | resource.Resource",
        "int"
    ],
    "Xlib.ext.randr.set_panning": [
        "Display | resource.Resource",
        "int",
        "int",
        "int",
        "int",
        "int",
        "int",
        "int",
        "int",
        "int",
        "int",
        "int",
        "int",
        "int",
        "int"
    ],
    "Xlib.ext.randr.set_output_primary": [
        "drawable.Window",
        "int"
    ],
    "Xlib.ext.randr.get_output_primary": [
        "drawable.Window"
    ],
    "Xlib.ext.randr.get_monitors": [
        "drawable.Window",
        "bool"
    ],
    "Xlib.ext.randr.set_monitor": [
        "drawable.Window",
        "tuple[int, bool, bool, Sequence[int], int, int, int, int, int]"
    ],
    "Xlib.ext.randr.delete_monitor": [
        "Display | resource.Resource",
        "str"
    ],
    "Xlib.ext.randr.init": [
        "Display",
        "request.QueryExtension"
    ],
    "Xlib.ext.xinput.FP1616.check_value": [
        "",
        "float"
    ],
    "Xlib.ext.xinput.FP1616.parse_value": [
        "",
        "_Floatable",
        "Unused"
    ],
    "Xlib.ext.xinput.FP3232.check_value": [
        "",
        "_T"
    ],
    "Xlib.ext.xinput.FP3232.parse_value": [
        "",
        "tuple[_Floatable, _Floatable]",
        "Unused"
    ],
    "Xlib.ext.xinput.Mask.__init__": [
        "",
        "str"
    ],
    "Xlib.ext.xinput.Mask.pack_value": [
        "",
        "int | Iterable[int]"
    ],
    "Xlib.ext.xinput.ButtonMask.__init__": [
        "",
        "int",
        "int"
    ],
    "Xlib.ext.xinput.ButtonMask.__getitem__": [
        "",
        "int"
    ],
    "Xlib.ext.xinput.ButtonMask.__len__": [
        ""
    ],
    "Xlib.ext.xinput.ButtonState.__init__": [
        "",
        "str"
    ],
    "Xlib.ext.xinput.ButtonState.parse_binary_value": [
        "",
        "SliceableBuffer",
        "Unused",
        "int",
        "Unused"
    ],
    "Xlib.ext.xinput.ClassInfoClass.parse_binary": [
        "",
        "SliceableBuffer",
        "display.Display | None"
    ],
    "Xlib.ext.xinput.query_version": [
        "Display | resource.Resource"
    ],
    "Xlib.ext.xinput.select_events": [
        "drawable.Window",
        "Sequence[tuple[int, Sequence[int]]]"
    ],
    "Xlib.ext.xinput.query_device": [
        "Display | resource.Resource",
        "int"
    ],
    "Xlib.ext.xinput.list_device_properties": [
        "Display | resource.Resource",
        "int"
    ],
    "Xlib.ext.xinput.get_device_property": [
        "Display | resource.Resource",
        "int",
        "int",
        "int",
        "int",
        "int",
        "bool"
    ],
    "Xlib.ext.xinput.change_device_property": [
        "Display | resource.Resource",
        "int",
        "int",
        "int",
        "int",
        "Sequence[float] | Sequence[str]"
    ],
    "Xlib.ext.xinput.delete_device_property": [
        "Display | resource.Resource",
        "int",
        "int"
    ],
    "Xlib.ext.xinput.grab_device": [
        "drawable.Window",
        "int",
        "int",
        "int",
        "int",
        "bool",
        "Sequence[int]"
    ],
    "Xlib.ext.xinput.ungrab_device": [
        "Display | resource.Resource",
        "int",
        "int"
    ],
    "Xlib.ext.xinput.passive_grab_device": [
        "drawable.Window",
        "int",
        "int",
        "int",
        "int",
        "int",
        "int",
        "bool",
        "Sequence[int]",
        "Sequence[int]"
    ],
    "Xlib.ext.xinput.grab_keycode": [
        "drawable.Window",
        "int",
        "int",
        "int",
        "int",
        "int",
        "bool",
        "Sequence[int]",
        "Sequence[int]"
    ],
    "Xlib.ext.xinput.passive_ungrab_device": [
        "drawable.Window",
        "int",
        "int",
        "int",
        "Sequence[int]"
    ],
    "Xlib.ext.xinput.ungrab_keycode": [
        "drawable.Window",
        "int",
        "int",
        "Sequence[int]"
    ],
    "Xlib.ext.xinput.init": [
        "Display",
        "request.QueryExtension"
    ],
    "Xlib.ext.security.query_version": [
        "Display | resource.Resource"
    ],
    "Xlib.ext.security.generate_authorization": [
        "Display | resource.Resource",
        "str",
        "bytes | bytearray",
        "int | None",
        "int | None",
        "int | None",
        "int | None"
    ],
    "Xlib.ext.security.revoke_authorization": [
        "Display | resource.Resource",
        "int"
    ],
    "Xlib.ext.security.init": [
        "Display",
        "Unused"
    ],
    "Xlib.ext.screensaver.query_version": [
        "drawable.Drawable"
    ],
    "Xlib.ext.screensaver.query_info": [
        "drawable.Drawable"
    ],
    "Xlib.ext.screensaver.select_input": [
        "drawable.Drawable",
        "int"
    ],
    "Xlib.ext.screensaver.set_attributes": [
        "drawable.Drawable",
        "int",
        "int",
        "int",
        "int",
        "int",
        "int",
        "int",
        "int",
        "ErrorHandler[object] | None"
    ],
    "Xlib.ext.screensaver.unset_attributes": [
        "drawable.Drawable",
        "ErrorHandler[object] | None"
    ],
    "Xlib.ext.screensaver.init": [
        "Display",
        "request.QueryExtension"
    ],
    "Xlib.ext.composite.query_version": [
        "Display | resource.Resource"
    ],
    "Xlib.ext.composite.redirect_window": [
        "drawable.Window",
        "_Update",
        "ErrorHandler[object] | None"
    ],
    "Xlib.ext.composite.redirect_subwindows": [
        "drawable.Window",
        "_Update",
        "ErrorHandler[object] | None"
    ],
    "Xlib.ext.composite.unredirect_window": [
        "drawable.Window",
        "_Update",
        "ErrorHandler[object] | None"
    ],
    "Xlib.ext.composite.unredirect_subwindows": [
        "drawable.Window",
        "_Update",
        "ErrorHandler[object] | None"
    ],
    "Xlib.ext.composite.create_region_from_border_clip": [
        "drawable.Window",
        "ErrorHandler[object] | None"
    ],
    "Xlib.ext.composite.name_window_pixmap": [
        "Display | resource.Resource",
        "ErrorHandler[object] | None"
    ],
    "Xlib.ext.composite.get_overlay_window": [
        "Display"
    ],
    "Xlib.ext.composite.init": [
        "Display",
        "Unused"
    ],
    "Xlib.ext.dpms.get_version": [
        "Display | resource.Resource"
    ],
    "Xlib.ext.dpms.capable": [
        "Display | resource.Resource"
    ],
    "Xlib.ext.dpms.get_timeouts": [
        "Display | resource.Resource"
    ],
    "Xlib.ext.dpms.set_timeouts": [
        "Display | resource.Resource",
        "int",
        "int",
        "int"
    ],
    "Xlib.ext.dpms.enable": [
        "Display | resource.Resource"
    ],
    "Xlib.ext.dpms.disable": [
        "Display | resource.Resource"
    ],
    "Xlib.ext.dpms.force_level": [
        "Display | resource.Resource",
        "int"
    ],
    "Xlib.ext.dpms.info": [
        "Display | resource.Resource"
    ],
    "Xlib.ext.dpms.init": [
        "Display",
        "Unused"
    ],
    "Xlib.ext.record.RawField.pack_value": [
        "",
        "_S"
    ],
    "Xlib.ext.record.RawField.parse_binary_value": [
        "",
        "_T",
        "Unused",
        "Unused",
        "Unused"
    ],
    "Xlib.ext.record.EnableContext.__init__": [
        "",
        "Callable[[rq.DictWrapper | dict[str, Any]], Any]",
        "display.Display",
        "bool"
    ],
    "Xlib.ext.record.get_version": [
        "Display | resource.Resource",
        "int",
        "int"
    ],
    "Xlib.ext.record.create_context": [
        "Display | resource.Resource",
        "int",
        "Sequence[int]",
        "Sequence[\n        tuple[\n            tuple[int, int],\n            tuple[int, int],\n            tuple[int, int],\n            tuple[int, int],\n            tuple[int, int],\n            tuple[int, int],\n            tuple[int, int],\n            bool,\n            bool,\n        ]\n    ]"
    ],
    "Xlib.ext.record.register_clients": [
        "Display | resource.Resource",
        "int",
        "int",
        "int",
        "Sequence[\n        tuple[\n            tuple[int, int],\n            tuple[int, int],\n            tuple[int, int],\n            tuple[int, int],\n            tuple[int, int],\n            tuple[int, int],\n            tuple[int, int],\n            bool,\n            bool,\n        ]\n    ]"
    ],
    "Xlib.ext.record.unregister_clients": [
        "Display | resource.Resource",
        "int",
        "Sequence[int]"
    ],
    "Xlib.ext.record.get_context": [
        "Display | resource.Resource",
        "int"
    ],
    "Xlib.ext.record.enable_context": [
        "Display | resource.Resource",
        "int",
        "Callable[[rq.DictWrapper | dict[str, Any]], Any]"
    ],
    "Xlib.ext.record.disable_context": [
        "Display | resource.Resource",
        "int"
    ],
    "Xlib.ext.record.free_context": [
        "Display | resource.Resource",
        "int"
    ],
    "Xlib.ext.record.init": [
        "Display",
        "Unused"
    ],
    "Xlib.ext.xinerama.query_version": [
        "Display | resource.Resource"
    ],
    "Xlib.ext.xinerama.get_state": [
        "drawable.Window"
    ],
    "Xlib.ext.xinerama.get_screen_count": [
        "drawable.Window"
    ],
    "Xlib.ext.xinerama.get_screen_size": [
        "drawable.Window",
        "int"
    ],
    "Xlib.ext.xinerama.is_active": [
        "Display | resource.Resource"
    ],
    "Xlib.ext.xinerama.query_screens": [
        "Display | resource.Resource"
    ],
    "Xlib.ext.xinerama.get_info": [
        "Display | resource.Resource",
        "int"
    ],
    "Xlib.ext.xinerama.init": [
        "Display",
        "Unused"
    ],
    "Xlib.ext.damage.query_version": [
        "Display | resource.Resource"
    ],
    "Xlib.ext.damage.damage_create": [
        "Display | resource.Resource",
        "int"
    ],
    "Xlib.ext.damage.damage_destroy": [
        "Display | resource.Resource",
        "int"
    ],
    "Xlib.ext.damage.damage_subtract": [
        "Display | resource.Resource",
        "int",
        "int",
        "int"
    ],
    "Xlib.ext.damage.damage_add": [
        "Display | resource.Resource",
        "int",
        "int"
    ],
    "Xlib.ext.damage.init": [
        "Display",
        "request.QueryExtension"
    ],
    "Xlib.ext.nvcontrol.Target.id": [
        ""
    ],
    "Xlib.ext.nvcontrol.Target.type": [
        ""
    ],
    "Xlib.ext.nvcontrol.Gpu.__init__": [
        "",
        "int"
    ],
    "Xlib.ext.nvcontrol.Screen.__init__": [
        "",
        "int"
    ],
    "Xlib.ext.nvcontrol.Cooler.__init__": [
        "",
        "int"
    ],
    "Xlib.ext.nvcontrol.query_target_count": [
        "Display | resource.Resource",
        "Target"
    ],
    "Xlib.ext.nvcontrol.query_int_attribute": [
        "Display | resource.Resource",
        "Target",
        "int",
        "int"
    ],
    "Xlib.ext.nvcontrol.set_int_attribute": [
        "Display | resource.Resource",
        "Target",
        "int",
        "int",
        "int"
    ],
    "Xlib.ext.nvcontrol.query_string_attribute": [
        "Display | resource.Resource",
        "Target",
        "int",
        "int"
    ],
    "Xlib.ext.nvcontrol.query_valid_attr_values": [
        "Display | resource.Resource",
        "Target",
        "int",
        "int"
    ],
    "Xlib.ext.nvcontrol.query_binary_data": [
        "Display | resource.Resource",
        "Target",
        "int",
        "int"
    ],
    "Xlib.ext.nvcontrol.get_coolers_used_by_gpu": [
        "Display | resource.Resource",
        "Target"
    ],
    "Xlib.ext.nvcontrol.get_gpu_count": [
        "Display | resource.Resource"
    ],
    "Xlib.ext.nvcontrol.get_name": [
        "Display | resource.Resource",
        "Target"
    ],
    "Xlib.ext.nvcontrol.get_driver_version": [
        "Display | resource.Resource",
        "Target"
    ],
    "Xlib.ext.nvcontrol.get_vbios_version": [
        "Display | resource.Resource",
        "Target"
    ],
    "Xlib.ext.nvcontrol.get_gpu_uuid": [
        "Display | resource.Resource",
        "Target"
    ],
    "Xlib.ext.nvcontrol.get_utilization_rates": [
        "Display | resource.Resource",
        "Target"
    ],
    "Xlib.ext.nvcontrol.get_performance_modes": [
        "Display | resource.Resource",
        "Target"
    ],
    "Xlib.ext.nvcontrol.get_clock_info": [
        "Display | resource.Resource",
        "Target"
    ],
    "Xlib.ext.nvcontrol.get_vram": [
        "Display | resource.Resource",
        "Target"
    ],
    "Xlib.ext.nvcontrol.get_irq": [
        "Display | resource.Resource",
        "Target"
    ],
    "Xlib.ext.nvcontrol.supports_framelock": [
        "Display | resource.Resource",
        "Target"
    ],
    "Xlib.ext.nvcontrol.gvo_supported": [
        "Display | resource.Resource",
        "Target"
    ],
    "Xlib.ext.nvcontrol.get_core_temp": [
        "Display | resource.Resource",
        "Target"
    ],
    "Xlib.ext.nvcontrol.get_core_threshold": [
        "Display | resource.Resource",
        "Target"
    ],
    "Xlib.ext.nvcontrol.get_default_core_threshold": [
        "Display | resource.Resource",
        "Target"
    ],
    "Xlib.ext.nvcontrol.get_max_core_threshold": [
        "Display | resource.Resource",
        "Target"
    ],
    "Xlib.ext.nvcontrol.get_ambient_temp": [
        "Display | resource.Resource",
        "Target"
    ],
    "Xlib.ext.nvcontrol.get_cuda_cores": [
        "Display | resource.Resource",
        "Target"
    ],
    "Xlib.ext.nvcontrol.get_memory_bus_width": [
        "Display | resource.Resource",
        "Target"
    ],
    "Xlib.ext.nvcontrol.get_total_dedicated_gpu_memory": [
        "Display | resource.Resource",
        "Target"
    ],
    "Xlib.ext.nvcontrol.get_used_dedicated_gpu_memory": [
        "Display | resource.Resource",
        "Target"
    ],
    "Xlib.ext.nvcontrol.get_curr_pcie_link_width": [
        "Display | resource.Resource",
        "Target"
    ],
    "Xlib.ext.nvcontrol.get_max_pcie_link_width": [
        "Display | resource.Resource",
        "Target"
    ],
    "Xlib.ext.nvcontrol.get_curr_pcie_link_generation": [
        "Display | resource.Resource",
        "Target"
    ],
    "Xlib.ext.nvcontrol.get_encoder_utilization": [
        "Display | resource.Resource",
        "Target"
    ],
    "Xlib.ext.nvcontrol.get_decoder_utilization": [
        "Display | resource.Resource",
        "Target"
    ],
    "Xlib.ext.nvcontrol.get_current_performance_level": [
        "Display | resource.Resource",
        "Target"
    ],
    "Xlib.ext.nvcontrol.get_gpu_nvclock_offset": [
        "Display | resource.Resource",
        "Target",
        "int"
    ],
    "Xlib.ext.nvcontrol.set_gpu_nvclock_offset": [
        "Display | resource.Resource",
        "Target",
        "int",
        "int"
    ],
    "Xlib.ext.nvcontrol.set_gpu_nvclock_offset_all_levels": [
        "Display | resource.Resource",
        "Target",
        "int"
    ],
    "Xlib.ext.nvcontrol.get_gpu_nvclock_offset_range": [
        "Display | resource.Resource",
        "Target",
        "int"
    ],
    "Xlib.ext.nvcontrol.get_mem_transfer_rate_offset": [
        "Display | resource.Resource",
        "Target",
        "int"
    ],
    "Xlib.ext.nvcontrol.set_mem_transfer_rate_offset": [
        "Display | resource.Resource",
        "Target",
        "int",
        "int"
    ],
    "Xlib.ext.nvcontrol.set_mem_transfer_rate_offset_all_levels": [
        "Display | resource.Resource",
        "Target",
        "int"
    ],
    "Xlib.ext.nvcontrol.get_mem_transfer_rate_offset_range": [
        "Display | resource.Resource",
        "Target",
        "int"
    ],
    "Xlib.ext.nvcontrol.get_cooler_manual_control_enabled": [
        "Display | resource.Resource",
        "Target"
    ],
    "Xlib.ext.nvcontrol.set_cooler_manual_control_enabled": [
        "Display | resource.Resource",
        "Target",
        "bool"
    ],
    "Xlib.ext.nvcontrol.get_fan_duty": [
        "Display | resource.Resource",
        "Target"
    ],
    "Xlib.ext.nvcontrol.set_fan_duty": [
        "Display | resource.Resource",
        "Target",
        "int"
    ],
    "Xlib.ext.nvcontrol.get_fan_rpm": [
        "Display | resource.Resource",
        "Target"
    ],
    "Xlib.ext.nvcontrol.get_max_displays": [
        "Display | resource.Resource",
        "Target"
    ],
    "Xlib.ext.nvcontrol.init": [
        "Display",
        "Unused"
    ],
    "Xlib.ext.shape.KIND.__init__": [
        "",
        "str"
    ],
    "Xlib.ext.shape.combine": [
        "drawable.Window",
        "int",
        "int",
        "int",
        "int",
        "int"
    ],
    "Xlib.ext.shape.get_rectangles": [
        "drawable.Window",
        "int"
    ],
    "Xlib.ext.shape.input_selected": [
        "drawable.Window"
    ],
    "Xlib.ext.shape.mask": [
        "drawable.Window",
        "int",
        "int",
        "int",
        "int",
        "int"
    ],
    "Xlib.ext.shape.offset": [
        "drawable.Window",
        "int",
        "int",
        "int"
    ],
    "Xlib.ext.shape.query_extents": [
        "drawable.Window"
    ],
    "Xlib.ext.shape.query_version": [
        "Display | resource.Resource"
    ],
    "Xlib.ext.shape.rectangles": [
        "drawable.Window",
        "int",
        "int",
        "int",
        "int",
        "int",
        "Sequence[_Rectangle4IntSequence]"
    ],
    "Xlib.ext.shape.select_input": [
        "drawable.Window",
        "int"
    ],
    "Xlib.ext.shape.init": [
        "Display",
        "request.QueryExtension"
    ],
    "Xlib.ext.xtest.get_version": [
        "Display | resource.Resource",
        "int",
        "int"
    ],
    "Xlib.ext.xtest.compare_cursor": [
        "Display | resource.Resource",
        "int"
    ],
    "Xlib.ext.xtest.fake_input": [
        "Display | resource.Resource",
        "int",
        "int",
        "int",
        "int",
        "int",
        "int"
    ],
    "Xlib.ext.xtest.grab_control": [
        "Display | resource.Resource",
        "bool"
    ],
    "Xlib.ext.xtest.init": [
        "Display",
        "Unused"
    ],
    "Xlib.ext.ge.query_version": [
        "Display | resource.Resource"
    ],
    "Xlib.ext.ge.add_event_data": [
        "Display | resource.Resource",
        "int",
        "int",
        "int"
    ],
    "Xlib.ext.ge.init": [
        "Display",
        "Unused"
    ],
    "Xlib.ext.xfixes.query_version": [
        "Display | resource.Resource"
    ],
    "Xlib.ext.xfixes.hide_cursor": [
        "drawable.Window"
    ],
    "Xlib.ext.xfixes.show_cursor": [
        "drawable.Window"
    ],
    "Xlib.ext.xfixes.select_selection_input": [
        "Display | resource.Resource",
        "int",
        "int",
        "int"
    ],
    "Xlib.ext.xfixes.select_cursor_input": [
        "Display | resource.Resource",
        "int",
        "int"
    ],
    "Xlib.ext.xfixes.get_cursor_image": [
        "Display | resource.Resource",
        "Unused"
    ],
    "Xlib.ext.xfixes.init": [
        "Display",
        "request.QueryExtension"
    ],
    "Xlib.xobject.resource.Resource.__init__": [
        "",
        "_BaseDisplay",
        "int",
        "int"
    ],
    "Xlib.xobject.resource.Resource.__resource__": [
        ""
    ],
    "Xlib.xobject.resource.Resource.kill_client": [
        "",
        "ErrorHandler[object] | None"
    ],
    "Xlib.xobject.cursor.Cursor.free": [
        "",
        "ErrorHandler[object] | None"
    ],
    "Xlib.xobject.cursor.Cursor.recolor": [
        "",
        "_RGB3IntIterable",
        "_RGB3IntIterable",
        "ErrorHandler[object] | None"
    ],
    "Xlib.xobject.colormap.Colormap.free": [
        "",
        "ErrorHandler[object] | None"
    ],
    "Xlib.xobject.colormap.Colormap.copy_colormap_and_free": [
        "",
        "int"
    ],
    "Xlib.xobject.colormap.Colormap.install_colormap": [
        "",
        "ErrorHandler[object] | None"
    ],
    "Xlib.xobject.colormap.Colormap.uninstall_colormap": [
        "",
        "ErrorHandler[object] | None"
    ],
    "Xlib.xobject.colormap.Colormap.alloc_color": [
        "",
        "int",
        "int",
        "int"
    ],
    "Xlib.xobject.colormap.Colormap.alloc_named_color": [
        "",
        "str"
    ],
    "Xlib.xobject.colormap.Colormap.alloc_color_cells": [
        "",
        "bool",
        "int",
        "int"
    ],
    "Xlib.xobject.colormap.Colormap.alloc_color_planes": [
        "",
        "bool",
        "int",
        "int",
        "int",
        "int"
    ],
    "Xlib.xobject.colormap.Colormap.free_colors": [
        "",
        "Sequence[int]",
        "int",
        "ErrorHandler[object] | None"
    ],
    "Xlib.xobject.colormap.Colormap.store_colors": [
        "",
        "dict[str, int]",
        "ErrorHandler[object] | None"
    ],
    "Xlib.xobject.colormap.Colormap.store_named_color": [
        "",
        "str",
        "int",
        "int",
        "ErrorHandler[object] | None"
    ],
    "Xlib.xobject.colormap.Colormap.query_colors": [
        "",
        "Sequence[int]"
    ],
    "Xlib.xobject.colormap.Colormap.lookup_color": [
        "",
        "str"
    ],
    "Xlib.xobject.fontable.Fontable.query": [
        ""
    ],
    "Xlib.xobject.fontable.Fontable.query_text_extents": [
        "",
        "str"
    ],
    "Xlib.xobject.fontable.GC.change": [
        "",
        "ErrorHandler[object] | None"
    ],
    "Xlib.xobject.fontable.GC.copy": [
        "",
        "int",
        "int",
        "ErrorHandler[object] | None"
    ],
    "Xlib.xobject.fontable.GC.set_dashes": [
        "",
        "int",
        "Sequence[int]",
        "ErrorHandler[object] | None"
    ],
    "Xlib.xobject.fontable.GC.set_clip_rectangles": [
        "",
        "int",
        "int",
        "Sequence[dict[str, int]]",
        "int",
        "ErrorHandler[object] | None"
    ],
    "Xlib.xobject.fontable.GC.free": [
        "",
        "ErrorHandler[object] | None"
    ],
    "Xlib.xobject.fontable.Font.close": [
        "",
        "ErrorHandler[object] | None"
    ],
    "Xlib.xobject.fontable.Font.create_glyph_cursor": [
        "",
        "Font",
        "int",
        "int",
        "_RGB3IntIterable",
        "_RGB3IntIterable"
    ],
    "Xlib.xobject.drawable.Drawable.get_geometry": [
        ""
    ],
    "Xlib.xobject.drawable.Drawable.create_pixmap": [
        "",
        "int",
        "int",
        "int"
    ],
    "Xlib.xobject.drawable.Drawable.create_gc": [
        ""
    ],
    "Xlib.xobject.drawable.Drawable.copy_area": [
        "",
        "int",
        "int",
        "int",
        "int",
        "int",
        "int",
        "int",
        "int",
        "ErrorHandler[object] | None"
    ],
    "Xlib.xobject.drawable.Drawable.copy_plane": [
        "",
        "int",
        "int",
        "int",
        "int",
        "int",
        "int",
        "int",
        "int",
        "int",
        "ErrorHandler[object] | None"
    ],
    "Xlib.xobject.drawable.Drawable.poly_point": [
        "",
        "int",
        "int",
        "Sequence[tuple[int, int]]",
        "ErrorHandler[object] | None"
    ],
    "Xlib.xobject.drawable.Drawable.point": [
        "",
        "int",
        "int",
        "int",
        "ErrorHandler[object] | None"
    ],
    "Xlib.xobject.drawable.Drawable.poly_line": [
        "",
        "int",
        "int",
        "Sequence[tuple[int, int]]",
        "ErrorHandler[object] | None"
    ],
    "Xlib.xobject.drawable.Drawable.line": [
        "",
        "int",
        "int",
        "int",
        "int",
        "int",
        "ErrorHandler[object] | None"
    ],
    "Xlib.xobject.drawable.Drawable.poly_segment": [
        "",
        "int",
        "Sequence[_Segment4IntSequence]",
        "ErrorHandler[object] | None"
    ],
    "Xlib.xobject.drawable.Drawable.poly_rectangle": [
        "",
        "int",
        "Sequence[_Rectangle4IntSequence]",
        "ErrorHandler[object] | None"
    ],
    "Xlib.xobject.drawable.Drawable.rectangle": [
        "",
        "int",
        "int",
        "int",
        "int",
        "int",
        "ErrorHandler[object] | None"
    ],
    "Xlib.xobject.drawable.Drawable.poly_arc": [
        "",
        "int",
        "Sequence[_Arc6IntSequence]",
        "ErrorHandler[object] | None"
    ],
    "Xlib.xobject.drawable.Drawable.arc": [
        "",
        "int",
        "int",
        "int",
        "int",
        "int",
        "int",
        "int",
        "ErrorHandler[object] | None"
    ],
    "Xlib.xobject.drawable.Drawable.fill_poly": [
        "",
        "int",
        "int",
        "int",
        "Sequence[tuple[int, int]]",
        "ErrorHandler[object] | None"
    ],
    "Xlib.xobject.drawable.Drawable.poly_fill_rectangle": [
        "",
        "int",
        "Sequence[_Rectangle4IntSequence]",
        "ErrorHandler[object] | None"
    ],
    "Xlib.xobject.drawable.Drawable.fill_rectangle": [
        "",
        "int",
        "int",
        "int",
        "int",
        "int",
        "ErrorHandler[object] | None"
    ],
    "Xlib.xobject.drawable.Drawable.poly_fill_arc": [
        "",
        "int",
        "Sequence[_Arc6IntSequence]",
        "ErrorHandler[object] | None"
    ],
    "Xlib.xobject.drawable.Drawable.fill_arc": [
        "",
        "int",
        "int",
        "int",
        "int",
        "int",
        "int",
        "int",
        "ErrorHandler[object] | None"
    ],
    "Xlib.xobject.drawable.Drawable.put_image": [
        "",
        "int",
        "int",
        "int",
        "int",
        "int",
        "int",
        "int",
        "int",
        "bytes | bytearray",
        "ErrorHandler[object] | None"
    ],
    "Xlib.xobject.drawable.Drawable.put_pil_image": [
        "",
        "int",
        "int",
        "int",
        "Image.Image",
        "ErrorHandler[object] | None"
    ],
    "Xlib.xobject.drawable.Drawable.get_image": [
        "",
        "int",
        "int",
        "int",
        "int",
        "int",
        "int"
    ],
    "Xlib.xobject.drawable.Drawable.draw_text": [
        "",
        "int",
        "int",
        "int",
        "dict[str, str | int]",
        "ErrorHandler[object] | None"
    ],
    "Xlib.xobject.drawable.Drawable.poly_text": [
        "",
        "int",
        "int",
        "int",
        "Sequence[dict[str, str | int]]",
        "ErrorHandler[object] | None"
    ],
    "Xlib.xobject.drawable.Drawable.poly_text_16": [
        "",
        "int",
        "int",
        "int",
        "Sequence[dict[str, str | int]]",
        "ErrorHandler[object] | None"
    ],
    "Xlib.xobject.drawable.Drawable.image_text": [
        "",
        "int",
        "int",
        "int",
        "str",
        "ErrorHandler[object] | None"
    ],
    "Xlib.xobject.drawable.Drawable.image_text_16": [
        "",
        "int",
        "int",
        "int",
        "str",
        "ErrorHandler[object] | None"
    ],
    "Xlib.xobject.drawable.Drawable.query_best_size": [
        "",
        "int",
        "int",
        "int"
    ],
    "Xlib.xobject.drawable.Window.create_window": [
        "",
        "int",
        "int",
        "int",
        "int",
        "int",
        "int",
        "int",
        "int",
        "ErrorHandler[object] | None"
    ],
    "Xlib.xobject.drawable.Window.change_attributes": [
        "",
        "ErrorHandler[object] | None"
    ],
    "Xlib.xobject.drawable.Window.get_attributes": [
        ""
    ],
    "Xlib.xobject.drawable.Window.destroy": [
        "",
        "ErrorHandler[object] | None"
    ],
    "Xlib.xobject.drawable.Window.destroy_sub_windows": [
        "",
        "ErrorHandler[object] | None"
    ],
    "Xlib.xobject.drawable.Window.change_save_set": [
        "",
        "int",
        "ErrorHandler[object] | None"
    ],
    "Xlib.xobject.drawable.Window.reparent": [
        "",
        "int",
        "int",
        "int",
        "ErrorHandler[object] | None"
    ],
    "Xlib.xobject.drawable.Window.map": [
        "",
        "ErrorHandler[object] | None"
    ],
    "Xlib.xobject.drawable.Window.map_sub_windows": [
        "",
        "ErrorHandler[object] | None"
    ],
    "Xlib.xobject.drawable.Window.unmap": [
        "",
        "ErrorHandler[object] | None"
    ],
    "Xlib.xobject.drawable.Window.unmap_sub_windows": [
        "",
        "ErrorHandler[object] | None"
    ],
    "Xlib.xobject.drawable.Window.configure": [
        "",
        "ErrorHandler[object] | None"
    ],
    "Xlib.xobject.drawable.Window.circulate": [
        "",
        "int",
        "ErrorHandler[object] | None"
    ],
    "Xlib.xobject.drawable.Window.raise_window": [
        "",
        "ErrorHandler[object] | None"
    ],
    "Xlib.xobject.drawable.Window.query_tree": [
        ""
    ],
    "Xlib.xobject.drawable.Window.change_property": [
        "",
        "int",
        "int",
        "int",
        "Sequence[float] | Sequence[str]",
        "int",
        "ErrorHandler[object] | None"
    ],
    "Xlib.xobject.drawable.Window.change_text_property": [
        "",
        "int",
        "int",
        "bytes | str",
        "int",
        "ErrorHandler[object] | None"
    ],
    "Xlib.xobject.drawable.Window.delete_property": [
        "",
        "int",
        "ErrorHandler[object] | None"
    ],
    "Xlib.xobject.drawable.Window.get_property": [
        "",
        "int",
        "int",
        "int",
        "int",
        "bool"
    ],
    "Xlib.xobject.drawable.Window.get_full_property": [
        "",
        "int",
        "int",
        "int"
    ],
    "Xlib.xobject.drawable.Window.get_full_text_property": [
        "",
        "int",
        "int",
        "int"
    ],
    "Xlib.xobject.drawable.Window.list_properties": [
        ""
    ],
    "Xlib.xobject.drawable.Window.set_selection_owner": [
        "",
        "int",
        "int",
        "ErrorHandler[object] | None"
    ],
    "Xlib.xobject.drawable.Window.convert_selection": [
        "",
        "int",
        "int",
        "int",
        "int",
        "ErrorHandler[object] | None"
    ],
    "Xlib.xobject.drawable.Window.send_event": [
        "",
        "rq.Event",
        "int",
        "bool",
        "ErrorHandler[object] | None"
    ],
    "Xlib.xobject.drawable.Window.grab_pointer": [
        "",
        "bool",
        "int",
        "int",
        "int",
        "int",
        "int",
        "int"
    ],
    "Xlib.xobject.drawable.Window.grab_button": [
        "",
        "int",
        "int",
        "bool",
        "int",
        "int",
        "int",
        "int",
        "int",
        "ErrorHandler[object] | None"
    ],
    "Xlib.xobject.drawable.Window.ungrab_button": [
        "",
        "int",
        "int",
        "ErrorHandler[object] | None"
    ],
    "Xlib.xobject.drawable.Window.grab_keyboard": [
        "",
        "bool",
        "int",
        "int",
        "int"
    ],
    "Xlib.xobject.drawable.Window.grab_key": [
        "",
        "int",
        "int",
        "bool",
        "int",
        "int",
        "ErrorHandler[object] | None"
    ],
    "Xlib.xobject.drawable.Window.ungrab_key": [
        "",
        "int",
        "int",
        "ErrorHandler[object] | None"
    ],
    "Xlib.xobject.drawable.Window.query_pointer": [
        ""
    ],
    "Xlib.xobject.drawable.Window.get_motion_events": [
        "",
        "int",
        "int"
    ],
    "Xlib.xobject.drawable.Window.translate_coords": [
        "",
        "int",
        "int",
        "int"
    ],
    "Xlib.xobject.drawable.Window.warp_pointer": [
        "",
        "int",
        "int",
        "int",
        "int",
        "int",
        "int",
        "int",
        "ErrorHandler[object] | None"
    ],
    "Xlib.xobject.drawable.Window.set_input_focus": [
        "",
        "int",
        "int",
        "ErrorHandler[object] | None"
    ],
    "Xlib.xobject.drawable.Window.clear_area": [
        "",
        "int",
        "int",
        "int",
        "int",
        "bool",
        "ErrorHandler[object] | None"
    ],
    "Xlib.xobject.drawable.Window.create_colormap": [
        "",
        "int",
        "int"
    ],
    "Xlib.xobject.drawable.Window.list_installed_colormaps": [
        ""
    ],
    "Xlib.xobject.drawable.Window.rotate_properties": [
        "",
        "Sequence[int]",
        "int",
        "ErrorHandler[object] | None"
    ],
    "Xlib.xobject.drawable.Window.set_wm_name": [
        "",
        "bytes | str",
        "ErrorHandler[object] | None"
    ],
    "Xlib.xobject.drawable.Window.get_wm_name": [
        ""
    ],
    "Xlib.xobject.drawable.Window.set_wm_icon_name": [
        "",
        "bytes | str",
        "ErrorHandler[object] | None"
    ],
    "Xlib.xobject.drawable.Window.get_wm_icon_name": [
        ""
    ],
    "Xlib.xobject.drawable.Window.set_wm_class": [
        "",
        "str",
        "str",
        "ErrorHandler[object] | None"
    ],
    "Xlib.xobject.drawable.Window.get_wm_class": [
        ""
    ],
    "Xlib.xobject.drawable.Window.set_wm_transient_for": [
        "",
        "Window",
        "ErrorHandler[object] | None"
    ],
    "Xlib.xobject.drawable.Window.get_wm_transient_for": [
        ""
    ],
    "Xlib.xobject.drawable.Window.set_wm_protocols": [
        "",
        "Iterable[int]",
        "ErrorHandler[object] | None"
    ],
    "Xlib.xobject.drawable.Window.get_wm_protocols": [
        ""
    ],
    "Xlib.xobject.drawable.Window.set_wm_colormap_windows": [
        "",
        "Iterable[Window]",
        "ErrorHandler[object] | None"
    ],
    "Xlib.xobject.drawable.Window.get_wm_colormap_windows": [
        ""
    ],
    "Xlib.xobject.drawable.Window.set_wm_client_machine": [
        "",
        "bytes | str",
        "ErrorHandler[object] | None"
    ],
    "Xlib.xobject.drawable.Window.get_wm_client_machine": [
        ""
    ],
    "Xlib.xobject.drawable.Window.set_wm_normal_hints": [
        "",
        "rq.DictWrapper | dict[str, Any]",
        "ErrorHandler[object] | None"
    ],
    "Xlib.xobject.drawable.Window.get_wm_normal_hints": [
        ""
    ],
    "Xlib.xobject.drawable.Window.set_wm_hints": [
        "",
        "rq.DictWrapper | dict[str, Any]",
        "ErrorHandler[object] | None"
    ],
    "Xlib.xobject.drawable.Window.get_wm_hints": [
        ""
    ],
    "Xlib.xobject.drawable.Window.set_wm_state": [
        "",
        "rq.DictWrapper | dict[str, Any]",
        "ErrorHandler[object] | None"
    ],
    "Xlib.xobject.drawable.Window.get_wm_state": [
        ""
    ],
    "Xlib.xobject.drawable.Window.set_wm_icon_size": [
        "",
        "rq.DictWrapper | dict[str, Any]",
        "ErrorHandler[object] | None"
    ],
    "Xlib.xobject.drawable.Window.get_wm_icon_size": [
        ""
    ],
    "Xlib.xobject.drawable.Pixmap.free": [
        "",
        "ErrorHandler[object] | None"
    ],
    "Xlib.xobject.drawable.Pixmap.create_cursor": [
        "",
        "int",
        "_RGB3IntIterable",
        "_RGB3IntIterable",
        "int",
        "int"
    ],
    "Xlib.xobject.drawable.roundup": [
        "int",
        "int"
    ],
    "Xlib.display._BaseDisplay.__init__": [
        "",
        "str | None"
    ],
    "Xlib.display._BaseDisplay.get_atom": [
        "",
        "str",
        "bool"
    ],
    "Xlib.display.Display.__init__": [
        "",
        "str | None"
    ],
    "Xlib.display.Display.get_display_name": [
        ""
    ],
    "Xlib.display.Display.fileno": [
        ""
    ],
    "Xlib.display.Display.close": [
        ""
    ],
    "Xlib.display.Display.set_error_handler": [
        "",
        "ErrorHandler[object] | None"
    ],
    "Xlib.display.Display.flush": [
        ""
    ],
    "Xlib.display.Display.sync": [
        ""
    ],
    "Xlib.display.Display.next_event": [
        ""
    ],
    "Xlib.display.Display.pending_events": [
        ""
    ],
    "Xlib.display.Display.has_extension": [
        "",
        "str"
    ],
    "Xlib.display.Display.create_resource_object": [
        "",
        "Literal[\"resource\"]",
        "int"
    ],
    "Xlib.display.Display.__getattr__": [
        "",
        "str"
    ],
    "Xlib.display.Display.screen": [
        "",
        "int | None"
    ],
    "Xlib.display.Display.screen_count": [
        ""
    ],
    "Xlib.display.Display.get_default_screen": [
        ""
    ],
    "Xlib.display.Display.extension_add_method": [
        "",
        "str",
        "str",
        "Callable[..., Any]"
    ],
    "Xlib.display.Display.extension_add_event": [
        "",
        "int",
        "type",
        "str | None"
    ],
    "Xlib.display.Display.extension_add_subevent": [
        "",
        "int",
        "int | None",
        "type[rq.Event]",
        "str | None"
    ],
    "Xlib.display.Display.extension_add_error": [
        "",
        "int",
        "type[error.XError]"
    ],
    "Xlib.display.Display.keycode_to_keysym": [
        "",
        "int",
        "int"
    ],
    "Xlib.display.Display.keysym_to_keycode": [
        "",
        "int"
    ],
    "Xlib.display.Display.keysym_to_keycodes": [
        "",
        "int"
    ],
    "Xlib.display.Display.refresh_keyboard_mapping": [
        "",
        "rq.Event"
    ],
    "Xlib.display.Display.lookup_string": [
        "",
        "int"
    ],
    "Xlib.display.Display.rebind_string": [
        "",
        "int",
        "str | None"
    ],
    "Xlib.display.Display.intern_atom": [
        "",
        "str",
        "bool"
    ],
    "Xlib.display.Display.get_atom": [
        "",
        "str",
        "bool"
    ],
    "Xlib.display.Display.get_atom_name": [
        "",
        "int"
    ],
    "Xlib.display.Display.get_selection_owner": [
        "",
        "int"
    ],
    "Xlib.display.Display.send_event": [
        "",
        "int",
        "rq.Event",
        "int",
        "bool",
        "ErrorHandler[object] | None"
    ],
    "Xlib.display.Display.ungrab_pointer": [
        "",
        "int",
        "ErrorHandler[object] | None"
    ],
    "Xlib.display.Display.change_active_pointer_grab": [
        "",
        "int",
        "cursor.Cursor",
        "int",
        "ErrorHandler[object] | None"
    ],
    "Xlib.display.Display.ungrab_keyboard": [
        "",
        "int",
        "ErrorHandler[object] | None"
    ],
    "Xlib.display.Display.allow_events": [
        "",
        "int",
        "int",
        "ErrorHandler[object] | None"
    ],
    "Xlib.display.Display.grab_server": [
        "",
        "ErrorHandler[object] | None"
    ],
    "Xlib.display.Display.ungrab_server": [
        "",
        "ErrorHandler[object] | None"
    ],
    "Xlib.display.Display.warp_pointer": [
        "",
        "int",
        "int",
        "int",
        "int",
        "int",
        "int",
        "int",
        "ErrorHandler[object] | None"
    ],
    "Xlib.display.Display.set_input_focus": [
        "",
        "int",
        "int",
        "int",
        "ErrorHandler[object] | None"
    ],
    "Xlib.display.Display.get_input_focus": [
        ""
    ],
    "Xlib.display.Display.query_keymap": [
        ""
    ],
    "Xlib.display.Display.open_font": [
        "",
        "str"
    ],
    "Xlib.display.Display.list_fonts": [
        "",
        "Pattern[str] | str",
        "int"
    ],
    "Xlib.display.Display.list_fonts_with_info": [
        "",
        "Pattern[str] | str",
        "int"
    ],
    "Xlib.display.Display.set_font_path": [
        "",
        "Sequence[str]",
        "ErrorHandler[object] | None"
    ],
    "Xlib.display.Display.get_font_path": [
        ""
    ],
    "Xlib.display.Display.query_extension": [
        "",
        "str"
    ],
    "Xlib.display.Display.list_extensions": [
        ""
    ],
    "Xlib.display.Display.change_keyboard_mapping": [
        "",
        "int",
        "Sequence[Sequence[int]]",
        "ErrorHandler[object] | None"
    ],
    "Xlib.display.Display.get_keyboard_mapping": [
        "",
        "int",
        "int"
    ],
    "Xlib.display.Display.change_keyboard_control": [
        "",
        "ErrorHandler[object] | None"
    ],
    "Xlib.display.Display.get_keyboard_control": [
        ""
    ],
    "Xlib.display.Display.bell": [
        "",
        "int",
        "ErrorHandler[object] | None"
    ],
    "Xlib.display.Display.change_pointer_control": [
        "",
        "tuple[int, int] | None",
        "int | None",
        "ErrorHandler[object] | None"
    ],
    "Xlib.display.Display.get_pointer_control": [
        ""
    ],
    "Xlib.display.Display.set_screen_saver": [
        "",
        "int",
        "int",
        "int",
        "int",
        "ErrorHandler[object] | None"
    ],
    "Xlib.display.Display.get_screen_saver": [
        ""
    ],
    "Xlib.display.Display.change_hosts": [
        "",
        "int",
        "int",
        "Sequence[int] | Sequence[bytes]",
        "ErrorHandler[object] | None"
    ],
    "Xlib.display.Display.list_hosts": [
        ""
    ],
    "Xlib.display.Display.set_access_control": [
        "",
        "int",
        "ErrorHandler[object] | None"
    ],
    "Xlib.display.Display.set_close_down_mode": [
        "",
        "int",
        "ErrorHandler[object] | None"
    ],
    "Xlib.display.Display.force_screen_saver": [
        "",
        "int",
        "ErrorHandler[object] | None"
    ],
    "Xlib.display.Display.set_pointer_mapping": [
        "",
        "Sequence[int]"
    ],
    "Xlib.display.Display.get_pointer_mapping": [
        ""
    ],
    "Xlib.display.Display.set_modifier_mapping": [
        "",
        "rq._ModifierMappingList8Elements"
    ],
    "Xlib.display.Display.get_modifier_mapping": [
        ""
    ],
    "Xlib.display.Display.no_operation": [
        "",
        "ErrorHandler[object] | None"
    ],
    "Xlib.error.DisplayError.__init__": [
        "",
        "object"
    ],
    "Xlib.error.DisplayConnectionError.__init__": [
        "",
        "object",
        "object"
    ],
    "Xlib.error.ConnectionClosedError.__init__": [
        "",
        "object"
    ],
    "Xlib.error.XError.__init__": [
        "",
        "display.Display",
        "SliceableBuffer"
    ],
    "Xlib.error.CatchError.__init__": [
        ""
    ],
    "Xlib.error.CatchError.__call__": [
        "",
        "XError",
        "rq.Request | None"
    ],
    "Xlib.error.CatchError.get_error": [
        ""
    ],
    "Xlib.error.CatchError.get_request": [
        ""
    ],
    "Xlib.error.CatchError.reset": [
        ""
    ],
    "Xlib.rdb.ResourceDB.__init__": [
        "",
        "bytes | SupportsRead[str] | None",
        "str | None",
        "Iterable[tuple[str, object]] | None"
    ],
    "Xlib.rdb.ResourceDB.insert_file": [
        "",
        "bytes | SupportsRead[str]"
    ],
    "Xlib.rdb.ResourceDB.insert_string": [
        "",
        "str"
    ],
    "Xlib.rdb.ResourceDB.insert_resources": [
        "",
        "Iterable[tuple[str, object]]"
    ],
    "Xlib.rdb.ResourceDB.insert": [
        "",
        "str",
        "object"
    ],
    "Xlib.rdb.ResourceDB.__getitem__": [
        "",
        "tuple[str, str]"
    ],
    "Xlib.rdb.ResourceDB.get": [
        "",
        "str",
        "str",
        "None"
    ],
    "Xlib.rdb.ResourceDB.update": [
        "",
        "ResourceDB"
    ],
    "Xlib.rdb.ResourceDB.output": [
        ""
    ],
    "Xlib.rdb.ResourceDB.getopt": [
        "",
        "str",
        "Sequence[str]",
        "Mapping[str, Option]"
    ],
    "Xlib.rdb.Option.parse": [
        "",
        "str",
        "ResourceDB",
        "Sequence[_T]"
    ],
    "Xlib.rdb.NoArg.__init__": [
        "",
        "str",
        "object"
    ],
    "Xlib.rdb.IsArg.__init__": [
        "",
        "str"
    ],
    "Xlib.rdb.SepArg.__init__": [
        "",
        "str"
    ],
    "Xlib.rdb.ResArgClass.parse": [
        "",
        "str",
        "ResourceDB",
        "Sequence[str]"
    ],
    "Xlib.rdb.SkipNArgs.__init__": [
        "",
        "int"
    ],
    "Xlib.rdb.bin_insert": [
        "list[_SupportsComparisons[_T]]",
        "_SupportsComparisons[_T]"
    ],
    "Xlib.rdb.update_db": [
        "_DB_Param",
        "_DB_Param"
    ],
    "Xlib.rdb.copy_group": [
        "tuple[_DB_Param, ...]"
    ],
    "Xlib.rdb.copy_db": [
        "_DB_Param"
    ],
    "Xlib.rdb.output_db": [
        "str",
        "_DB_Param"
    ],
    "Xlib.rdb.output_escape": [
        "object"
    ],
    "Xlib.rdb.get_display_opts": [
        "Mapping[str, Option]",
        "Sequence[str]"
    ],
    "Xlib.XK.string_to_keysym": [
        "str"
    ],
    "Xlib.XK.load_keysym_group": [
        "str"
    ],
    "Xlib.XK.keysym_to_string": [
        "int"
    ],
    "Xlib.xauth.Xauthority.__init__": [
        "",
        "FileDescriptorOrPath | None"
    ],
    "Xlib.xauth.Xauthority.__len__": [
        ""
    ],
    "Xlib.xauth.Xauthority.__getitem__": [
        "",
        "int"
    ],
    "Xlib.xauth.Xauthority.get_best_auth": [
        "",
        "bytes",
        "bytes",
        "bytes",
        "tuple[bytes, ...]"
    ]
}