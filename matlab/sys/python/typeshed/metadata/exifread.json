{
    "exifread.jpeg.find_jpeg_exif": [
        "Reader",
        "bytes",
        "bool"
    ],
    "exifread.utils.Ratio.__new__": [
        "",
        "int",
        "int | None"
    ],
    "exifread.utils.Ratio.num": [
        ""
    ],
    "exifread.utils.Ratio.den": [
        ""
    ],
    "exifread.utils.Ratio.decimal": [
        ""
    ],
    "exifread.utils.ord_": [
        "str"
    ],
    "exifread.utils.make_string": [
        "str | list[int]"
    ],
    "exifread.utils.make_string_uc": [
        "str | list[int]"
    ],
    "exifread.utils.get_gps_coords": [
        "Mapping[str, Any]"
    ],
    "exifread.tags.makernote.nikon.ev_bias": [
        "list[int]"
    ],
    "exifread.tags.makernote.canon.add_one": [
        "int"
    ],
    "exifread.tags.makernote.canon.subtract_one": [
        "int"
    ],
    "exifread.tags.makernote.canon.convert_temp": [
        "int"
    ],
    "exifread.tags.makernote.olympus.special_mode": [
        "bytes"
    ],
    "exifread.classes.IfdTag.__init__": [
        "",
        "str",
        "int",
        "int",
        "Any",
        "int",
        "int"
    ],
    "exifread.classes.ExifHeader.__init__": [
        "",
        "Reader",
        "Literal[\"I\", \"M\"]",
        "int",
        "bool",
        "bool",
        "bool",
        "bool",
        "bool"
    ],
    "exifread.classes.ExifHeader.s2n": [
        "",
        "int",
        "int",
        "bool"
    ],
    "exifread.classes.ExifHeader.n2b": [
        "",
        "int",
        "int"
    ],
    "exifread.classes.ExifHeader.list_ifd": [
        ""
    ],
    "exifread.classes.ExifHeader.dump_ifd": [
        "",
        "int",
        "str",
        "TagDict | None",
        "int",
        "str"
    ],
    "exifread.classes.ExifHeader.extract_tiff_thumbnail": [
        "",
        "int"
    ],
    "exifread.classes.ExifHeader.extract_jpeg_thumbnail": [
        ""
    ],
    "exifread.classes.ExifHeader.decode_maker_note": [
        ""
    ],
    "exifread.classes.ExifHeader.parse_xmp": [
        "",
        "bytes"
    ],
    "exifread._types.Reader.__iter__": [
        ""
    ],
    "exifread._types.Reader.read": [
        "",
        "int"
    ],
    "exifread._types.Reader.tell": [
        ""
    ],
    "exifread._types.Reader.seek": [
        "",
        "int",
        "Literal[0, 1]"
    ],
    "exifread.heic.Box.__init__": [
        "",
        "str"
    ],
    "exifread.heic.Box.set_sizes": [
        "",
        "int",
        "int",
        "int",
        "int"
    ],
    "exifread.heic.Box.set_full": [
        "",
        "int"
    ],
    "exifread.heic.HEICExifFinder.__init__": [
        "",
        "Reader"
    ],
    "exifread.heic.HEICExifFinder.get": [
        "",
        "int"
    ],
    "exifread.heic.HEICExifFinder.get16": [
        ""
    ],
    "exifread.heic.HEICExifFinder.get32": [
        ""
    ],
    "exifread.heic.HEICExifFinder.get64": [
        ""
    ],
    "exifread.heic.HEICExifFinder.get_int4x2": [
        ""
    ],
    "exifread.heic.HEICExifFinder.get_int": [
        "",
        "int"
    ],
    "exifread.heic.HEICExifFinder.get_string": [
        ""
    ],
    "exifread.heic.HEICExifFinder.next_box": [
        ""
    ],
    "exifread.heic.HEICExifFinder.get_full": [
        "",
        "Box"
    ],
    "exifread.heic.HEICExifFinder.skip": [
        "",
        "Box"
    ],
    "exifread.heic.HEICExifFinder.expect_parse": [
        "",
        "str"
    ],
    "exifread.heic.HEICExifFinder.get_parser": [
        "",
        "Box"
    ],
    "exifread.heic.HEICExifFinder.parse_box": [
        "",
        "Box"
    ],
    "exifread.heic.HEICExifFinder.find_exif": [
        ""
    ],
    "exifread.exif_log.Formatter.__init__": [
        "",
        "bool",
        "bool"
    ],
    "exifread.exif_log.Handler.__init__": [
        "",
        "logging._Level",
        "bool",
        "bool"
    ],
    "exifread.exif_log.get_logger": [],
    "exifread.exif_log.setup_logger": [
        "bool",
        "bool"
    ],
    "exifread.__init__.process_file": [
        "Reader",
        "str",
        "bool",
        "bool",
        "bool",
        "bool",
        "bool"
    ]
}