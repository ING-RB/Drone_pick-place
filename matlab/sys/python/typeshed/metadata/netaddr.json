{
    "netaddr.contrib.subnet_splitter.SubnetSplitter.__init__": [
        "",
        "_IPAddressAddr"
    ],
    "netaddr.contrib.subnet_splitter.SubnetSplitter.extract_subnet": [
        "",
        "int",
        "int | None"
    ],
    "netaddr.contrib.subnet_splitter.SubnetSplitter.available_subnets": [
        ""
    ],
    "netaddr.contrib.subnet_splitter.SubnetSplitter.remove_subnet": [
        "",
        "IPNetwork"
    ],
    "netaddr.cli.main": [],
    "netaddr.eui.ieee.FileIndexer.__init__": [
        "",
        "TextIO | FileDescriptorOrPath"
    ],
    "netaddr.eui.ieee.FileIndexer.update": [
        "",
        "Iterable[Any]"
    ],
    "netaddr.eui.ieee.OUIIndexParser.__init__": [
        "",
        "BinaryIO | FileDescriptorOrPath"
    ],
    "netaddr.eui.ieee.OUIIndexParser.parse": [
        ""
    ],
    "netaddr.eui.ieee.IABIndexParser.__init__": [
        "",
        "BinaryIO | FileDescriptorOrPath"
    ],
    "netaddr.eui.ieee.IABIndexParser.parse": [
        ""
    ],
    "netaddr.eui.ieee.create_index_from_registry": [
        "BinaryIO | FileDescriptorOrPath",
        "StrOrBytesPath",
        "type[OUIIndexParser | IABIndexParser]"
    ],
    "netaddr.eui.ieee.create_indices": [],
    "netaddr.eui.ieee.load_index": [
        "_INDEX",
        "Iterable[bytes]"
    ],
    "netaddr.eui.ieee.load_indices": [],
    "netaddr.eui.__init__.BaseIdentifier.__init__": [
        ""
    ],
    "netaddr.eui.__init__.BaseIdentifier.__int__": [
        ""
    ],
    "netaddr.eui.__init__.BaseIdentifier.__long__": [
        ""
    ],
    "netaddr.eui.__init__.BaseIdentifier.__oct__": [
        ""
    ],
    "netaddr.eui.__init__.BaseIdentifier.__hex__": [
        ""
    ],
    "netaddr.eui.__init__.BaseIdentifier.__index__": [
        ""
    ],
    "netaddr.eui.__init__.OUI.__init__": [
        "",
        "str | int"
    ],
    "netaddr.eui.__init__.OUI.__eq__": [
        "",
        "object"
    ],
    "netaddr.eui.__init__.OUI.__ne__": [
        "",
        "object"
    ],
    "netaddr.eui.__init__.OUI.reg_count": [
        ""
    ],
    "netaddr.eui.__init__.OUI.registration": [
        "",
        "int"
    ],
    "netaddr.eui.__init__.IAB.split_iab_mac": [
        "",
        "int",
        "bool"
    ],
    "netaddr.eui.__init__.IAB.__init__": [
        "",
        "str | int",
        "bool"
    ],
    "netaddr.eui.__init__.IAB.__eq__": [
        "",
        "object"
    ],
    "netaddr.eui.__init__.IAB.__ne__": [
        "",
        "object"
    ],
    "netaddr.eui.__init__.IAB.registration": [
        ""
    ],
    "netaddr.eui.__init__.EUI.__init__": [
        "",
        "EUI | int | str",
        "int | None",
        "type[mac_eui48 | eui64_base] | None"
    ],
    "netaddr.eui.__init__.EUI.value": [
        ""
    ],
    "netaddr.eui.__init__.EUI.dialect": [
        ""
    ],
    "netaddr.eui.__init__.EUI.oui": [
        ""
    ],
    "netaddr.eui.__init__.EUI.ei": [
        ""
    ],
    "netaddr.eui.__init__.EUI.is_iab": [
        ""
    ],
    "netaddr.eui.__init__.EUI.iab": [
        ""
    ],
    "netaddr.eui.__init__.EUI.version": [
        ""
    ],
    "netaddr.eui.__init__.EUI.__getitem__": [
        "",
        "int"
    ],
    "netaddr.eui.__init__.EUI.__setitem__": [
        "",
        "int",
        "int"
    ],
    "netaddr.eui.__init__.EUI.__hash__": [
        ""
    ],
    "netaddr.eui.__init__.EUI.__eq__": [
        "",
        "object"
    ],
    "netaddr.eui.__init__.EUI.__ne__": [
        "",
        "object"
    ],
    "netaddr.eui.__init__.EUI.__lt__": [
        "",
        "EUI | int | str"
    ],
    "netaddr.eui.__init__.EUI.__le__": [
        "",
        "EUI | int | str"
    ],
    "netaddr.eui.__init__.EUI.__gt__": [
        "",
        "EUI | int | str"
    ],
    "netaddr.eui.__init__.EUI.__ge__": [
        "",
        "EUI | int | str"
    ],
    "netaddr.eui.__init__.EUI.bits": [
        "",
        "str | None"
    ],
    "netaddr.eui.__init__.EUI.packed": [
        ""
    ],
    "netaddr.eui.__init__.EUI.words": [
        ""
    ],
    "netaddr.eui.__init__.EUI.bin": [
        ""
    ],
    "netaddr.eui.__init__.EUI.eui64": [
        ""
    ],
    "netaddr.eui.__init__.EUI.modified_eui64": [
        ""
    ],
    "netaddr.eui.__init__.EUI.ipv6": [
        "",
        "str | SupportsInt | SupportsIndex"
    ],
    "netaddr.eui.__init__.EUI.ipv6_link_local": [
        ""
    ],
    "netaddr.eui.__init__.EUI.info": [
        ""
    ],
    "netaddr.eui.__init__.EUI.format": [
        "",
        "type[mac_eui48 | eui64_base] | None"
    ],
    "netaddr.strategy.eui64.valid_str": [
        "str"
    ],
    "netaddr.strategy.eui64.str_to_int": [
        "str"
    ],
    "netaddr.strategy.eui64.int_to_str": [
        "int",
        "type[eui64_base] | None"
    ],
    "netaddr.strategy.eui64.int_to_packed": [
        "int"
    ],
    "netaddr.strategy.eui64.packed_to_int": [
        "bytes"
    ],
    "netaddr.strategy.eui64.valid_words": [
        "Iterable[int]",
        "type[eui64_base] | None"
    ],
    "netaddr.strategy.eui64.int_to_words": [
        "int",
        "type[eui64_base] | None"
    ],
    "netaddr.strategy.eui64.words_to_int": [
        "Sequence[int]",
        "type[eui64_base] | None"
    ],
    "netaddr.strategy.eui64.valid_bits": [
        "str",
        "type[eui64_base] | None"
    ],
    "netaddr.strategy.eui64.bits_to_int": [
        "str",
        "type[eui64_base] | None"
    ],
    "netaddr.strategy.eui64.int_to_bits": [
        "int",
        "type[eui64_base] | None"
    ],
    "netaddr.strategy.eui64.valid_bin": [
        "str",
        "type[eui64_base] | None"
    ],
    "netaddr.strategy.eui64.int_to_bin": [
        "int"
    ],
    "netaddr.strategy.eui64.bin_to_int": [
        "str"
    ],
    "netaddr.strategy.ipv6.valid_str": [
        "str",
        "int"
    ],
    "netaddr.strategy.ipv6.str_to_int": [
        "str",
        "int"
    ],
    "netaddr.strategy.ipv6.int_to_str": [
        "int",
        "type[ipv6_compact] | None"
    ],
    "netaddr.strategy.ipv6.int_to_arpa": [
        "int"
    ],
    "netaddr.strategy.ipv6.int_to_packed": [
        "int"
    ],
    "netaddr.strategy.ipv6.packed_to_int": [
        "bytes"
    ],
    "netaddr.strategy.ipv6.valid_words": [
        "Iterable[int]"
    ],
    "netaddr.strategy.ipv6.int_to_words": [
        "int",
        "int | None",
        "int | None"
    ],
    "netaddr.strategy.ipv6.words_to_int": [
        "Sequence[int]"
    ],
    "netaddr.strategy.ipv6.valid_bits": [
        "str"
    ],
    "netaddr.strategy.ipv6.bits_to_int": [
        "str"
    ],
    "netaddr.strategy.ipv6.int_to_bits": [
        "int",
        "str | None"
    ],
    "netaddr.strategy.ipv6.valid_bin": [
        "str"
    ],
    "netaddr.strategy.ipv6.int_to_bin": [
        "int"
    ],
    "netaddr.strategy.ipv6.bin_to_int": [
        "str"
    ],
    "netaddr.strategy.__init__.bytes_to_bits": [],
    "netaddr.strategy.__init__.valid_words": [
        "Iterable[int]",
        "int",
        "int"
    ],
    "netaddr.strategy.__init__.int_to_words": [
        "int",
        "int",
        "int"
    ],
    "netaddr.strategy.__init__.words_to_int": [
        "Sequence[int]",
        "int",
        "int"
    ],
    "netaddr.strategy.__init__.valid_bits": [
        "str",
        "int",
        "str"
    ],
    "netaddr.strategy.__init__.bits_to_int": [
        "str",
        "int",
        "str"
    ],
    "netaddr.strategy.__init__.int_to_bits": [
        "int",
        "int",
        "int",
        "str"
    ],
    "netaddr.strategy.__init__.valid_bin": [
        "str",
        "int"
    ],
    "netaddr.strategy.__init__.int_to_bin": [
        "int",
        "int"
    ],
    "netaddr.strategy.__init__.bin_to_int": [
        "str",
        "int"
    ],
    "netaddr.strategy.eui48.valid_str": [
        "str"
    ],
    "netaddr.strategy.eui48.str_to_int": [
        "str"
    ],
    "netaddr.strategy.eui48.int_to_str": [
        "int",
        "type[mac_eui48] | None"
    ],
    "netaddr.strategy.eui48.int_to_packed": [
        "int"
    ],
    "netaddr.strategy.eui48.packed_to_int": [
        "bytes"
    ],
    "netaddr.strategy.eui48.valid_words": [
        "Iterable[int]",
        "type[mac_eui48] | None"
    ],
    "netaddr.strategy.eui48.int_to_words": [
        "int",
        "type[mac_eui48] | None"
    ],
    "netaddr.strategy.eui48.words_to_int": [
        "Sequence[int]",
        "type[mac_eui48] | None"
    ],
    "netaddr.strategy.eui48.valid_bits": [
        "str",
        "type[mac_eui48] | None"
    ],
    "netaddr.strategy.eui48.bits_to_int": [
        "str",
        "type[mac_eui48] | None"
    ],
    "netaddr.strategy.eui48.int_to_bits": [
        "int",
        "type[mac_eui48] | None"
    ],
    "netaddr.strategy.eui48.valid_bin": [
        "str",
        "type[mac_eui48] | None"
    ],
    "netaddr.strategy.eui48.int_to_bin": [
        "int"
    ],
    "netaddr.strategy.eui48.bin_to_int": [
        "str"
    ],
    "netaddr.strategy.ipv4.valid_str": [
        "str",
        "int"
    ],
    "netaddr.strategy.ipv4.str_to_int": [
        "str",
        "int"
    ],
    "netaddr.strategy.ipv4.int_to_str": [
        "int",
        "Unused"
    ],
    "netaddr.strategy.ipv4.int_to_arpa": [
        "int"
    ],
    "netaddr.strategy.ipv4.int_to_packed": [
        "int"
    ],
    "netaddr.strategy.ipv4.packed_to_int": [
        "bytes"
    ],
    "netaddr.strategy.ipv4.valid_words": [
        "Iterable[int]"
    ],
    "netaddr.strategy.ipv4.int_to_words": [
        "int"
    ],
    "netaddr.strategy.ipv4.words_to_int": [
        "Sequence[int]"
    ],
    "netaddr.strategy.ipv4.valid_bits": [
        "str"
    ],
    "netaddr.strategy.ipv4.bits_to_int": [
        "str"
    ],
    "netaddr.strategy.ipv4.int_to_bits": [
        "int",
        "str | None"
    ],
    "netaddr.strategy.ipv4.valid_bin": [
        "str"
    ],
    "netaddr.strategy.ipv4.int_to_bin": [
        "int"
    ],
    "netaddr.strategy.ipv4.bin_to_int": [
        "str"
    ],
    "netaddr.strategy.ipv4.expand_partial_address": [
        "str"
    ],
    "netaddr.fbsocket.inet_ntoa": [
        "bytes"
    ],
    "netaddr.fbsocket.inet_ntop": [
        "int",
        "bytes"
    ],
    "netaddr.fbsocket.inet_pton": [
        "int",
        "str"
    ],
    "netaddr.ip.nmap.valid_nmap_range": [
        "str"
    ],
    "netaddr.ip.nmap.iter_nmap_range": [],
    "netaddr.ip.__init__.BaseIP.__init__": [
        ""
    ],
    "netaddr.ip.__init__.BaseIP.value": [
        ""
    ],
    "netaddr.ip.__init__.BaseIP.key": [
        ""
    ],
    "netaddr.ip.__init__.BaseIP.sort_key": [
        ""
    ],
    "netaddr.ip.__init__.BaseIP.__hash__": [
        ""
    ],
    "netaddr.ip.__init__.BaseIP.__eq__": [
        "",
        "object"
    ],
    "netaddr.ip.__init__.BaseIP.__ne__": [
        "",
        "object"
    ],
    "netaddr.ip.__init__.BaseIP.__lt__": [
        "",
        "BaseIP"
    ],
    "netaddr.ip.__init__.BaseIP.__le__": [
        "",
        "BaseIP"
    ],
    "netaddr.ip.__init__.BaseIP.__gt__": [
        "",
        "BaseIP"
    ],
    "netaddr.ip.__init__.BaseIP.__ge__": [
        "",
        "BaseIP"
    ],
    "netaddr.ip.__init__.BaseIP.is_unicast": [
        ""
    ],
    "netaddr.ip.__init__.BaseIP.is_multicast": [
        ""
    ],
    "netaddr.ip.__init__.BaseIP.is_loopback": [
        ""
    ],
    "netaddr.ip.__init__.BaseIP.is_private": [
        ""
    ],
    "netaddr.ip.__init__.BaseIP.is_link_local": [
        ""
    ],
    "netaddr.ip.__init__.BaseIP.is_reserved": [
        ""
    ],
    "netaddr.ip.__init__.BaseIP.is_ipv4_mapped": [
        ""
    ],
    "netaddr.ip.__init__.BaseIP.is_ipv4_compat": [
        ""
    ],
    "netaddr.ip.__init__.BaseIP.info": [
        ""
    ],
    "netaddr.ip.__init__.BaseIP.version": [
        ""
    ],
    "netaddr.ip.__init__.IPAddress.__init__": [
        "",
        "_IPAddressAddr",
        "Literal[4, 6] | None",
        "int"
    ],
    "netaddr.ip.__init__.IPAddress.netmask_bits": [
        ""
    ],
    "netaddr.ip.__init__.IPAddress.is_hostmask": [
        ""
    ],
    "netaddr.ip.__init__.IPAddress.is_netmask": [
        ""
    ],
    "netaddr.ip.__init__.IPAddress.__iadd__": [
        "",
        "int"
    ],
    "netaddr.ip.__init__.IPAddress.__isub__": [
        "",
        "int"
    ],
    "netaddr.ip.__init__.IPAddress.__add__": [
        "",
        "int"
    ],
    "netaddr.ip.__init__.IPAddress.__sub__": [
        "",
        "int"
    ],
    "netaddr.ip.__init__.IPAddress.__rsub__": [
        "",
        "int"
    ],
    "netaddr.ip.__init__.IPAddress.key": [
        ""
    ],
    "netaddr.ip.__init__.IPAddress.sort_key": [
        ""
    ],
    "netaddr.ip.__init__.IPAddress.__int__": [
        ""
    ],
    "netaddr.ip.__init__.IPAddress.__long__": [
        ""
    ],
    "netaddr.ip.__init__.IPAddress.__oct__": [
        ""
    ],
    "netaddr.ip.__init__.IPAddress.__hex__": [
        ""
    ],
    "netaddr.ip.__init__.IPAddress.__index__": [
        ""
    ],
    "netaddr.ip.__init__.IPAddress.__bytes__": [
        ""
    ],
    "netaddr.ip.__init__.IPAddress.bits": [
        "",
        "str | None"
    ],
    "netaddr.ip.__init__.IPAddress.packed": [
        ""
    ],
    "netaddr.ip.__init__.IPAddress.words": [
        ""
    ],
    "netaddr.ip.__init__.IPAddress.bin": [
        ""
    ],
    "netaddr.ip.__init__.IPAddress.reverse_dns": [
        ""
    ],
    "netaddr.ip.__init__.IPAddress.ipv4": [
        ""
    ],
    "netaddr.ip.__init__.IPAddress.ipv6": [
        "",
        "bool"
    ],
    "netaddr.ip.__init__.IPAddress.format": [
        "",
        "type[ipv6_verbose] | None"
    ],
    "netaddr.ip.__init__.IPAddress.__or__": [
        "",
        "str | SupportsInt | SupportsIndex"
    ],
    "netaddr.ip.__init__.IPAddress.__and__": [
        "",
        "str | SupportsInt | SupportsIndex"
    ],
    "netaddr.ip.__init__.IPAddress.__xor__": [
        "",
        "str | SupportsInt | SupportsIndex"
    ],
    "netaddr.ip.__init__.IPAddress.__lshift__": [
        "",
        "int"
    ],
    "netaddr.ip.__init__.IPAddress.__rshift__": [
        "",
        "int"
    ],
    "netaddr.ip.__init__.IPAddress.__bool__": [
        ""
    ],
    "netaddr.ip.__init__.IPListMixin.__iter__": [
        ""
    ],
    "netaddr.ip.__init__.IPListMixin.size": [
        ""
    ],
    "netaddr.ip.__init__.IPListMixin.__len__": [
        ""
    ],
    "netaddr.ip.__init__.IPListMixin.__getitem__": [
        "",
        "SupportsIndex"
    ],
    "netaddr.ip.__init__.IPListMixin.__contains__": [
        "",
        "BaseIP | _IPAddressAddr"
    ],
    "netaddr.ip.__init__.IPListMixin.__bool__": [
        ""
    ],
    "netaddr.ip.__init__.IPNetwork.__init__": [
        "",
        "_IPNetworkAddr",
        "bool",
        "Literal[4, 6] | None",
        "int"
    ],
    "netaddr.ip.__init__.IPNetwork.prefixlen": [
        ""
    ],
    "netaddr.ip.__init__.IPNetwork.ip": [
        ""
    ],
    "netaddr.ip.__init__.IPNetwork.network": [
        ""
    ],
    "netaddr.ip.__init__.IPNetwork.broadcast": [
        ""
    ],
    "netaddr.ip.__init__.IPNetwork.first": [
        ""
    ],
    "netaddr.ip.__init__.IPNetwork.last": [
        ""
    ],
    "netaddr.ip.__init__.IPNetwork.netmask": [
        ""
    ],
    "netaddr.ip.__init__.IPNetwork.hostmask": [
        ""
    ],
    "netaddr.ip.__init__.IPNetwork.cidr": [
        ""
    ],
    "netaddr.ip.__init__.IPNetwork.__iadd__": [
        "",
        "int"
    ],
    "netaddr.ip.__init__.IPNetwork.__isub__": [
        "",
        "int"
    ],
    "netaddr.ip.__init__.IPNetwork.__contains__": [
        "",
        "BaseIP | _IPNetworkAddr"
    ],
    "netaddr.ip.__init__.IPNetwork.key": [
        ""
    ],
    "netaddr.ip.__init__.IPNetwork.sort_key": [
        ""
    ],
    "netaddr.ip.__init__.IPNetwork.ipv4": [
        ""
    ],
    "netaddr.ip.__init__.IPNetwork.ipv6": [
        "",
        "bool"
    ],
    "netaddr.ip.__init__.IPNetwork.previous": [
        "",
        "int"
    ],
    "netaddr.ip.__init__.IPNetwork.next": [
        "",
        "int"
    ],
    "netaddr.ip.__init__.IPNetwork.supernet": [
        "",
        "int"
    ],
    "netaddr.ip.__init__.IPNetwork.subnet": [
        "",
        "int",
        "int | None",
        "Unused"
    ],
    "netaddr.ip.__init__.IPNetwork.iter_hosts": [
        ""
    ],
    "netaddr.ip.__init__.IPRange.__init__": [
        "",
        "_IPAddressAddr",
        "_IPAddressAddr",
        "int"
    ],
    "netaddr.ip.__init__.IPRange.__contains__": [
        "",
        "BaseIP | _IPAddressAddr"
    ],
    "netaddr.ip.__init__.IPRange.first": [
        ""
    ],
    "netaddr.ip.__init__.IPRange.last": [
        ""
    ],
    "netaddr.ip.__init__.IPRange.key": [
        ""
    ],
    "netaddr.ip.__init__.IPRange.sort_key": [
        ""
    ],
    "netaddr.ip.__init__.IPRange.cidrs": [
        ""
    ],
    "netaddr.ip.__init__.parse_ip_network": [
        "Incomplete",
        "tuple[int, int] | str",
        "bool",
        "int"
    ],
    "netaddr.ip.__init__.iter_unique_ips": [],
    "netaddr.ip.__init__.cidr_abbrev_to_verbose": [
        "str | SupportsInt | SupportsIndex"
    ],
    "netaddr.ip.__init__.cidr_merge": [
        "Iterable[IPRange | _IPNetworkAddr]"
    ],
    "netaddr.ip.__init__.cidr_exclude": [
        "_IPNetworkAddr",
        "_IPNetworkAddr"
    ],
    "netaddr.ip.__init__.cidr_partition": [
        "_IPNetworkAddr",
        "_IPNetworkAddr"
    ],
    "netaddr.ip.__init__.spanning_cidr": [
        "Iterable[_IPNetworkAddr]"
    ],
    "netaddr.ip.__init__.iter_iprange": [
        "_IPAddressAddr",
        "_IPAddressAddr",
        "SupportsInt | SupportsIndex"
    ],
    "netaddr.ip.__init__.iprange_to_cidrs": [
        "_IPNetworkAddr",
        "_IPNetworkAddr"
    ],
    "netaddr.ip.__init__.smallest_matching_cidr": [
        "_IPAddressAddr",
        "Iterable[_IPNetworkAddr]"
    ],
    "netaddr.ip.__init__.largest_matching_cidr": [
        "_IPAddressAddr",
        "Iterable[_IPNetworkAddr]"
    ],
    "netaddr.ip.__init__.all_matching_cidrs": [
        "_IPAddressAddr",
        "Iterable[_IPNetworkAddr]"
    ],
    "netaddr.ip.rfc1924.chr_range": [
        "str",
        "str"
    ],
    "netaddr.ip.rfc1924.ipv6_to_base85": [
        "_IPAddressAddr"
    ],
    "netaddr.ip.rfc1924.base85_to_ipv6": [
        "str"
    ],
    "netaddr.ip.glob.IPGlob.__init__": [
        "",
        "str"
    ],
    "netaddr.ip.glob.IPGlob.glob": [
        ""
    ],
    "netaddr.ip.glob.valid_glob": [
        "object"
    ],
    "netaddr.ip.glob.glob_to_iptuple": [
        "str"
    ],
    "netaddr.ip.glob.glob_to_iprange": [
        "str"
    ],
    "netaddr.ip.glob.iprange_to_globs": [
        "_IPAddressAddr",
        "_IPAddressAddr"
    ],
    "netaddr.ip.glob.glob_to_cidrs": [
        "str"
    ],
    "netaddr.ip.glob.cidr_to_glob": [
        "_IPNetworkAddr"
    ],
    "netaddr.ip.sets.IPSet.__init__": [
        "",
        "_IPIterable | None",
        "int"
    ],
    "netaddr.ip.sets.IPSet.compact": [
        ""
    ],
    "netaddr.ip.sets.IPSet.__hash__": [
        ""
    ],
    "netaddr.ip.sets.IPSet.__contains__": [
        "",
        "_IPNetworkAddr"
    ],
    "netaddr.ip.sets.IPSet.__bool__": [
        ""
    ],
    "netaddr.ip.sets.IPSet.__iter__": [
        ""
    ],
    "netaddr.ip.sets.IPSet.iter_cidrs": [
        ""
    ],
    "netaddr.ip.sets.IPSet.add": [
        "",
        "IPRange | _IPNetworkAddr | int",
        "int"
    ],
    "netaddr.ip.sets.IPSet.remove": [
        "",
        "IPRange | _IPNetworkAddr | int",
        "int"
    ],
    "netaddr.ip.sets.IPSet.pop": [
        ""
    ],
    "netaddr.ip.sets.IPSet.isdisjoint": [
        "",
        "IPSet"
    ],
    "netaddr.ip.sets.IPSet.copy": [
        ""
    ],
    "netaddr.ip.sets.IPSet.update": [
        "",
        "_IPIterable",
        "int"
    ],
    "netaddr.ip.sets.IPSet.clear": [
        ""
    ],
    "netaddr.ip.sets.IPSet.__eq__": [
        "",
        "object"
    ],
    "netaddr.ip.sets.IPSet.__ne__": [
        "",
        "object"
    ],
    "netaddr.ip.sets.IPSet.__lt__": [
        "",
        "IPSet"
    ],
    "netaddr.ip.sets.IPSet.issubset": [
        "",
        "IPSet"
    ],
    "netaddr.ip.sets.IPSet.__gt__": [
        "",
        "IPSet"
    ],
    "netaddr.ip.sets.IPSet.issuperset": [
        "",
        "IPSet"
    ],
    "netaddr.ip.sets.IPSet.union": [
        "",
        "IPSet"
    ],
    "netaddr.ip.sets.IPSet.intersection": [
        "",
        "IPSet"
    ],
    "netaddr.ip.sets.IPSet.symmetric_difference": [
        "",
        "IPSet"
    ],
    "netaddr.ip.sets.IPSet.difference": [
        "",
        "IPSet"
    ],
    "netaddr.ip.sets.IPSet.__len__": [
        ""
    ],
    "netaddr.ip.sets.IPSet.size": [
        ""
    ],
    "netaddr.ip.sets.IPSet.iscontiguous": [
        ""
    ],
    "netaddr.ip.sets.IPSet.iprange": [
        ""
    ],
    "netaddr.ip.sets.IPSet.iter_ipranges": [
        ""
    ],
    "netaddr.ip.iana.SaxRecordParser.__init__": [
        "",
        "Callable[[Mapping[str, object] | None], object] | None"
    ],
    "netaddr.ip.iana.SaxRecordParser.startElement": [
        "",
        "str",
        "Mapping[str, object]"
    ],
    "netaddr.ip.iana.SaxRecordParser.endElement": [
        "",
        "str"
    ],
    "netaddr.ip.iana.SaxRecordParser.characters": [
        "",
        "str"
    ],
    "netaddr.ip.iana.XMLRecordParser.__init__": [
        "",
        "Incomplete"
    ],
    "netaddr.ip.iana.XMLRecordParser.process_record": [
        "",
        "Mapping[str, object]"
    ],
    "netaddr.ip.iana.XMLRecordParser.consume_record": [
        "",
        "object"
    ],
    "netaddr.ip.iana.XMLRecordParser.parse": [
        ""
    ],
    "netaddr.ip.iana.XMLRecordParser.__getattr__": [
        "",
        "str"
    ],
    "netaddr.ip.iana.IPv4Parser.process_record": [
        "",
        "Mapping[str, object]"
    ],
    "netaddr.ip.iana.IPv6Parser.process_record": [
        "",
        "Mapping[str, object]"
    ],
    "netaddr.ip.iana.IPv6UnicastParser.process_record": [
        "",
        "Mapping[str, object]"
    ],
    "netaddr.ip.iana.MulticastParser.normalise_addr": [
        "",
        "str"
    ],
    "netaddr.ip.iana.DictUpdater.__init__": [
        "",
        "MutableMapping[_IanaInfoKey, Incomplete]",
        "str",
        "str"
    ],
    "netaddr.ip.iana.DictUpdater.update": [
        "",
        "Incomplete"
    ],
    "netaddr.ip.iana.load_info": [],
    "netaddr.ip.iana.pprint_info": [
        "SupportsWrite[str] | None"
    ],
    "netaddr.ip.iana.query": [
        "IPAddress"
    ],
    "netaddr.core.Subscriber.update": [
        "",
        "Incomplete"
    ],
    "netaddr.core.PrettyPrinter.__init__": [
        "",
        "SupportsWrite[str]",
        "bool"
    ],
    "netaddr.core.PrettyPrinter.update": [
        "",
        "object"
    ],
    "netaddr.core.Publisher.__init__": [
        ""
    ],
    "netaddr.core.Publisher.attach": [
        "",
        "Subscriber"
    ],
    "netaddr.core.Publisher.detach": [
        "",
        "Subscriber"
    ],
    "netaddr.core.Publisher.notify": [
        "",
        "object"
    ],
    "netaddr.core.DictDotLookup.__init__": [
        "",
        "Mapping[str, object]"
    ],
    "netaddr.core.DictDotLookup.__getitem__": [
        "",
        "str"
    ],
    "netaddr.core.DictDotLookup.__iter__": [
        ""
    ],
    "netaddr.core.num_bits": [
        "int"
    ]
}