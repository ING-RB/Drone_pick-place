{
    "pyflakes.messages.Message.__init__": [
        "",
        "",
        "ast.AST"
    ],
    "pyflakes.messages.UnusedImport.__init__": [
        "",
        "",
        "ast.AST",
        ""
    ],
    "pyflakes.messages.RedefinedWhileUnused.__init__": [
        "",
        "",
        "ast.AST",
        "",
        "ast.AST"
    ],
    "pyflakes.messages.ImportShadowedByLoopVar.__init__": [
        "",
        "",
        "ast.AST",
        "",
        "ast.AST"
    ],
    "pyflakes.messages.ImportStarNotPermitted.__init__": [
        "",
        "",
        "",
        ""
    ],
    "pyflakes.messages.ImportStarUsed.__init__": [
        "",
        "",
        "ast.AST",
        ""
    ],
    "pyflakes.messages.ImportStarUsage.__init__": [
        "",
        "",
        "ast.AST",
        "",
        ""
    ],
    "pyflakes.messages.UndefinedName.__init__": [
        "",
        "",
        "ast.AST",
        ""
    ],
    "pyflakes.messages.DoctestSyntaxError.__init__": [
        "",
        "",
        "ast.AST",
        "tuple[int, int] | None"
    ],
    "pyflakes.messages.UndefinedExport.__init__": [
        "",
        "",
        "ast.AST",
        ""
    ],
    "pyflakes.messages.UndefinedLocal.__init__": [
        "",
        "",
        "ast.AST",
        "",
        "ast.AST"
    ],
    "pyflakes.messages.DuplicateArgument.__init__": [
        "",
        "",
        "ast.AST",
        ""
    ],
    "pyflakes.messages.MultiValueRepeatedKeyLiteral.__init__": [
        "",
        "",
        "ast.AST",
        ""
    ],
    "pyflakes.messages.MultiValueRepeatedKeyVariable.__init__": [
        "",
        "",
        "ast.AST",
        ""
    ],
    "pyflakes.messages.LateFutureImport.__init__": [
        "",
        "",
        "ast.AST"
    ],
    "pyflakes.messages.FutureFeatureNotDefined.__init__": [
        "",
        "",
        "ast.AST",
        ""
    ],
    "pyflakes.messages.UnusedVariable.__init__": [
        "",
        "",
        "ast.AST",
        ""
    ],
    "pyflakes.messages.UnusedAnnotation.__init__": [
        "",
        "",
        "ast.AST",
        ""
    ],
    "pyflakes.messages.ForwardAnnotationSyntaxError.__init__": [
        "",
        "",
        "ast.AST",
        ""
    ],
    "pyflakes.messages.StringDotFormatExtraPositionalArguments.__init__": [
        "",
        "",
        "ast.AST",
        ""
    ],
    "pyflakes.messages.StringDotFormatExtraNamedArguments.__init__": [
        "",
        "",
        "ast.AST",
        ""
    ],
    "pyflakes.messages.StringDotFormatMissingArgument.__init__": [
        "",
        "",
        "ast.AST",
        ""
    ],
    "pyflakes.messages.StringDotFormatInvalidFormat.__init__": [
        "",
        "",
        "ast.AST",
        ""
    ],
    "pyflakes.messages.PercentFormatInvalidFormat.__init__": [
        "",
        "",
        "ast.AST",
        ""
    ],
    "pyflakes.messages.PercentFormatUnsupportedFormatCharacter.__init__": [
        "",
        "",
        "ast.AST",
        ""
    ],
    "pyflakes.messages.PercentFormatPositionalCountMismatch.__init__": [
        "",
        "",
        "ast.AST",
        "int",
        "int"
    ],
    "pyflakes.messages.PercentFormatExtraNamedArguments.__init__": [
        "",
        "",
        "ast.AST",
        ""
    ],
    "pyflakes.messages.PercentFormatMissingArgument.__init__": [
        "",
        "",
        "ast.AST",
        ""
    ],
    "pyflakes.reporter.Reporter.__init__": [
        "",
        "",
        ""
    ],
    "pyflakes.reporter.Reporter.unexpectedError": [
        "",
        "",
        ""
    ],
    "pyflakes.reporter.Reporter.syntaxError": [
        "",
        "",
        "",
        "",
        "",
        ""
    ],
    "pyflakes.reporter.Reporter.flake": [
        "",
        ""
    ],
    "pyflakes.api.check": [
        "str",
        "str",
        "Reporter | None"
    ],
    "pyflakes.api.checkPath": [
        "",
        "Reporter | None"
    ],
    "pyflakes.api.isPythonFile": [
        ""
    ],
    "pyflakes.api.iterSourceCode": [
        "Iterable[Any]"
    ],
    "pyflakes.api.checkRecursive": [
        "Iterable[Any]",
        "Reporter"
    ],
    "pyflakes.api.main": [
        "str | None",
        "Sequence[Any] | None"
    ],
    "pyflakes.checker._FieldsOrder.__missing__": [
        "",
        "type[ast.AST]"
    ],
    "pyflakes.checker.Binding.__init__": [
        "",
        "str",
        "ast.AST | None"
    ],
    "pyflakes.checker.Binding.redefines": [
        "",
        "Binding"
    ],
    "pyflakes.checker.Builtin.__init__": [
        "",
        "str"
    ],
    "pyflakes.checker.VariableKey.__init__": [
        "",
        "ast.Name"
    ],
    "pyflakes.checker.VariableKey.__eq__": [
        "",
        "object"
    ],
    "pyflakes.checker.VariableKey.__hash__": [
        ""
    ],
    "pyflakes.checker.Importation.__init__": [
        "",
        "str",
        "ast.AST | None",
        "str | None"
    ],
    "pyflakes.checker.Importation.source_statement": [
        ""
    ],
    "pyflakes.checker.SubmoduleImportation.__init__": [
        "",
        "str",
        "ast.Import | None"
    ],
    "pyflakes.checker.ImportationFrom.__init__": [
        "",
        "str",
        "ast.AST",
        "str",
        "str | None"
    ],
    "pyflakes.checker.StarImportation.__init__": [
        "",
        "str",
        "ast.AST"
    ],
    "pyflakes.checker.FutureImportation.__init__": [
        "",
        "str",
        "ast.AST",
        ""
    ],
    "pyflakes.checker.Annotation.redefines": [
        "",
        "Binding"
    ],
    "pyflakes.checker.ExportBinding.__init__": [
        "",
        "str",
        "ast.AST",
        "Scope"
    ],
    "pyflakes.checker.FunctionScope.__init__": [
        ""
    ],
    "pyflakes.checker.FunctionScope.unused_assignments": [
        ""
    ],
    "pyflakes.checker.FunctionScope.unused_annotations": [
        ""
    ],
    "pyflakes.checker.Checker.__init__": [
        "",
        "ast.AST",
        "str",
        "Iterable[str] | None",
        "bool",
        "tuple[Any, ...]"
    ],
    "pyflakes.checker.Checker.deferFunction": [
        "",
        "_AnyFunction"
    ],
    "pyflakes.checker.Checker.futuresAllowed": [
        ""
    ],
    "pyflakes.checker.Checker.annotationsFutureEnabled": [
        ""
    ],
    "pyflakes.checker.Checker.scope": [
        ""
    ],
    "pyflakes.checker.Checker.in_scope": [
        "",
        "Callable[[], Scope]"
    ],
    "pyflakes.checker.Checker.checkDeadScopes": [
        ""
    ],
    "pyflakes.checker.Checker.report": [
        "",
        "Callable[_P, Message]"
    ],
    "pyflakes.checker.Checker.getParent": [
        "",
        "ast.AST"
    ],
    "pyflakes.checker.Checker.getCommonAncestor": [
        "",
        "ast.AST",
        "ast.AST",
        "ast.AST"
    ],
    "pyflakes.checker.Checker.descendantOf": [
        "",
        "ast.AST",
        "ast.AST",
        "ast.AST"
    ],
    "pyflakes.checker.Checker.getScopeNode": [
        "",
        "ast.AST"
    ],
    "pyflakes.checker.Checker.differentForks": [
        "",
        "ast.AST",
        "ast.AST"
    ],
    "pyflakes.checker.Checker.addBinding": [
        "",
        "ast.AST",
        "Binding"
    ],
    "pyflakes.checker.Checker.getNodeHandler": [
        "",
        "type[ast.AST]"
    ],
    "pyflakes.checker.Checker.handleNodeLoad": [
        "",
        "ast.AST",
        "ast.AST"
    ],
    "pyflakes.checker.Checker.handleNodeStore": [
        "",
        "ast.AST"
    ],
    "pyflakes.checker.Checker.handleNodeDelete": [
        "",
        "ast.AST"
    ],
    "pyflakes.checker.Checker.handleChildren": [
        "",
        "ast.AST",
        "_OmitType"
    ],
    "pyflakes.checker.Checker.isLiteralTupleUnpacking": [
        "",
        "ast.AST"
    ],
    "pyflakes.checker.Checker.isDocstring": [
        "",
        "ast.AST"
    ],
    "pyflakes.checker.Checker.getDocstring": [
        "",
        "ast.AST"
    ],
    "pyflakes.checker.Checker.handleNode": [
        "",
        "ast.AST | None",
        ""
    ],
    "pyflakes.checker.Checker.handleDoctests": [
        "",
        "ast.AST"
    ],
    "pyflakes.checker.Checker.handleStringAnnotation": [
        "",
        "str",
        "ast.AST",
        "int",
        "int",
        "type[Message]"
    ],
    "pyflakes.checker.Checker.handle_annotation_always_deferred": [
        "",
        "ast.AST",
        "ast.AST"
    ],
    "pyflakes.checker.Checker.handleAnnotation": [
        "",
        "ast.AST",
        "ast.AST"
    ],
    "pyflakes.checker.Checker.ignore": [
        "",
        "ast.AST"
    ],
    "pyflakes.checker.Checker.DELETE": [
        "",
        "ast.Delete",
        "_OmitType"
    ],
    "pyflakes.checker.Checker.FOR": [
        "",
        "ast.For",
        "_OmitType"
    ],
    "pyflakes.checker.Checker.ASYNCFOR": [
        "",
        "ast.AsyncFor",
        "_OmitType"
    ],
    "pyflakes.checker.Checker.WHILE": [
        "",
        "ast.While",
        "_OmitType"
    ],
    "pyflakes.checker.Checker.WITH": [
        "",
        "ast.With",
        "_OmitType"
    ],
    "pyflakes.checker.Checker.WITHITEM": [
        "",
        "ast.AST",
        "_OmitType"
    ],
    "pyflakes.checker.Checker.ASYNCWITH": [
        "",
        "ast.AsyncWith",
        "_OmitType"
    ],
    "pyflakes.checker.Checker.EXPR": [
        "",
        "ast.AST",
        "_OmitType"
    ],
    "pyflakes.checker.Checker.ASSIGN": [
        "",
        "ast.Assign",
        "_OmitType"
    ],
    "pyflakes.checker.Checker.PASS": [
        "",
        "ast.AST"
    ],
    "pyflakes.checker.Checker.BOOLOP": [
        "",
        "ast.BoolOp",
        "_OmitType"
    ],
    "pyflakes.checker.Checker.UNARYOP": [
        "",
        "ast.UnaryOp",
        "_OmitType"
    ],
    "pyflakes.checker.Checker.SET": [
        "",
        "ast.Set",
        "_OmitType"
    ],
    "pyflakes.checker.Checker.ATTRIBUTE": [
        "",
        "ast.Attribute",
        "_OmitType"
    ],
    "pyflakes.checker.Checker.STARRED": [
        "",
        "ast.Starred",
        "_OmitType"
    ],
    "pyflakes.checker.Checker.NAMECONSTANT": [
        "",
        "ast.NameConstant",
        "_OmitType"
    ],
    "pyflakes.checker.Checker.NAMEDEXPR": [
        "",
        "_NamedExpr",
        "_OmitType"
    ],
    "pyflakes.checker.Checker.SUBSCRIPT": [
        "",
        "ast.Subscript"
    ],
    "pyflakes.checker.Checker.CALL": [
        "",
        "ast.Call"
    ],
    "pyflakes.checker.Checker.BINOP": [
        "",
        "ast.BinOp"
    ],
    "pyflakes.checker.Checker.CONSTANT": [
        "",
        "ast.Constant"
    ],
    "pyflakes.checker.Checker.SLICE": [
        "",
        "ast.Slice",
        "_OmitType"
    ],
    "pyflakes.checker.Checker.EXTSLICE": [
        "",
        "ast.ExtSlice",
        "_OmitType"
    ],
    "pyflakes.checker.Checker.INDEX": [
        "",
        "ast.Index",
        "_OmitType"
    ],
    "pyflakes.checker.Checker.LOAD": [
        "",
        "ast.Load"
    ],
    "pyflakes.checker.Checker.STORE": [
        "",
        "ast.Store"
    ],
    "pyflakes.checker.Checker.DEL": [
        "",
        "ast.Del"
    ],
    "pyflakes.checker.Checker.AUGLOAD": [
        "",
        "ast.AugLoad"
    ],
    "pyflakes.checker.Checker.AUGSTORE": [
        "",
        "ast.AugStore"
    ],
    "pyflakes.checker.Checker.PARAM": [
        "",
        "ast.Param"
    ],
    "pyflakes.checker.Checker.AND": [
        "",
        "ast.And"
    ],
    "pyflakes.checker.Checker.OR": [
        "",
        "ast.Or"
    ],
    "pyflakes.checker.Checker.ADD": [
        "",
        "ast.Add"
    ],
    "pyflakes.checker.Checker.SUB": [
        "",
        "ast.Sub"
    ],
    "pyflakes.checker.Checker.MULT": [
        "",
        "ast.Mult"
    ],
    "pyflakes.checker.Checker.DIV": [
        "",
        "ast.Div"
    ],
    "pyflakes.checker.Checker.MOD": [
        "",
        "ast.Mod"
    ],
    "pyflakes.checker.Checker.POW": [
        "",
        "ast.Pow"
    ],
    "pyflakes.checker.Checker.LSHIFT": [
        "",
        "ast.LShift"
    ],
    "pyflakes.checker.Checker.RSHIFT": [
        "",
        "ast.RShift"
    ],
    "pyflakes.checker.Checker.BITOR": [
        "",
        "ast.BitOr"
    ],
    "pyflakes.checker.Checker.BITXOR": [
        "",
        "ast.BitXor"
    ],
    "pyflakes.checker.Checker.BITAND": [
        "",
        "ast.BitAnd"
    ],
    "pyflakes.checker.Checker.FLOORDIV": [
        "",
        "ast.FloorDiv"
    ],
    "pyflakes.checker.Checker.INVERT": [
        "",
        "ast.Invert"
    ],
    "pyflakes.checker.Checker.NOT": [
        "",
        "ast.Not"
    ],
    "pyflakes.checker.Checker.UADD": [
        "",
        "ast.UAdd"
    ],
    "pyflakes.checker.Checker.USUB": [
        "",
        "ast.USub"
    ],
    "pyflakes.checker.Checker.EQ": [
        "",
        "ast.Eq"
    ],
    "pyflakes.checker.Checker.NOTEQ": [
        "",
        "ast.NotEq"
    ],
    "pyflakes.checker.Checker.LT": [
        "",
        "ast.Lt"
    ],
    "pyflakes.checker.Checker.LTE": [
        "",
        "ast.LtE"
    ],
    "pyflakes.checker.Checker.GT": [
        "",
        "ast.Gt"
    ],
    "pyflakes.checker.Checker.GTE": [
        "",
        "ast.GtE"
    ],
    "pyflakes.checker.Checker.IS": [
        "",
        "ast.Is"
    ],
    "pyflakes.checker.Checker.ISNOT": [
        "",
        "ast.IsNot"
    ],
    "pyflakes.checker.Checker.IN": [
        "",
        "ast.In"
    ],
    "pyflakes.checker.Checker.NOTIN": [
        "",
        "ast.NotIn"
    ],
    "pyflakes.checker.Checker.MATMULT": [
        "",
        "ast.MatMult"
    ],
    "pyflakes.checker.Checker.RAISE": [
        "",
        "ast.Raise"
    ],
    "pyflakes.checker.Checker.COMPREHENSION": [
        "",
        "ast.comprehension",
        "_OmitType"
    ],
    "pyflakes.checker.Checker.KEYWORD": [
        "",
        "ast.keyword",
        "_OmitType"
    ],
    "pyflakes.checker.Checker.FORMATTEDVALUE": [
        "",
        "ast.FormattedValue",
        "_OmitType"
    ],
    "pyflakes.checker.Checker.JOINEDSTR": [
        "",
        "ast.AST"
    ],
    "pyflakes.checker.Checker.DICT": [
        "",
        "ast.Dict"
    ],
    "pyflakes.checker.Checker.IF": [
        "",
        "ast.If"
    ],
    "pyflakes.checker.Checker.IFEXP": [
        "",
        "ast.If"
    ],
    "pyflakes.checker.Checker.ASSERT": [
        "",
        "ast.Assert"
    ],
    "pyflakes.checker.Checker.GLOBAL": [
        "",
        "ast.Global"
    ],
    "pyflakes.checker.Checker.NONLOCAL": [
        "",
        "ast.Nonlocal"
    ],
    "pyflakes.checker.Checker.GENERATOREXP": [
        "",
        "ast.GeneratorExp"
    ],
    "pyflakes.checker.Checker.LISTCOMP": [
        "",
        "ast.ListComp"
    ],
    "pyflakes.checker.Checker.DICTCOMP": [
        "",
        "ast.DictComp"
    ],
    "pyflakes.checker.Checker.SETCOMP": [
        "",
        "ast.SetComp"
    ],
    "pyflakes.checker.Checker.NAME": [
        "",
        "ast.Name"
    ],
    "pyflakes.checker.Checker.CONTINUE": [
        "",
        "ast.Continue"
    ],
    "pyflakes.checker.Checker.BREAK": [
        "",
        "ast.Break"
    ],
    "pyflakes.checker.Checker.RETURN": [
        "",
        "ast.Return"
    ],
    "pyflakes.checker.Checker.YIELD": [
        "",
        "ast.Yield"
    ],
    "pyflakes.checker.Checker.AWAIT": [
        "",
        "ast.Await"
    ],
    "pyflakes.checker.Checker.YIELDFROM": [
        "",
        "ast.YieldFrom"
    ],
    "pyflakes.checker.Checker.FUNCTIONDEF": [
        "",
        "ast.FunctionDef"
    ],
    "pyflakes.checker.Checker.ASYNCFUNCTIONDEF": [
        "",
        "ast.AsyncFunctionDef"
    ],
    "pyflakes.checker.Checker.LAMBDA": [
        "",
        "ast.Lambda"
    ],
    "pyflakes.checker.Checker.ARGUMENTS": [
        "",
        "ast.arguments"
    ],
    "pyflakes.checker.Checker.ARG": [
        "",
        "ast.arg"
    ],
    "pyflakes.checker.Checker.CLASSDEF": [
        "",
        "ast.ClassDef"
    ],
    "pyflakes.checker.Checker.AUGASSIGN": [
        "",
        "ast.AugAssign"
    ],
    "pyflakes.checker.Checker.TUPLE": [
        "",
        "ast.Tuple"
    ],
    "pyflakes.checker.Checker.LIST": [
        "",
        "ast.List"
    ],
    "pyflakes.checker.Checker.IMPORT": [
        "",
        "ast.Import"
    ],
    "pyflakes.checker.Checker.IMPORTFROM": [
        "",
        "ast.ImportFrom"
    ],
    "pyflakes.checker.Checker.TRY": [
        "",
        "ast.Try"
    ],
    "pyflakes.checker.Checker.EXCEPTHANDLER": [
        "",
        "ast.ExceptHandler"
    ],
    "pyflakes.checker.Checker.ANNASSIGN": [
        "",
        "ast.AnnAssign"
    ],
    "pyflakes.checker.Checker.COMPARE": [
        "",
        "ast.Compare"
    ],
    "pyflakes.checker.Checker.MATCH": [
        "",
        "_Match",
        "_OmitType"
    ],
    "pyflakes.checker.Checker.MATCH_CASE": [
        "",
        "_MatchCase",
        "_OmitType"
    ],
    "pyflakes.checker.Checker.MATCHCLASS": [
        "",
        "_MatchClass",
        "_OmitType"
    ],
    "pyflakes.checker.Checker.MATCHOR": [
        "",
        "_MatchOr",
        "_OmitType"
    ],
    "pyflakes.checker.Checker.MATCHSEQUENCE": [
        "",
        "_MatchSequence",
        "_OmitType"
    ],
    "pyflakes.checker.Checker.MATCHSINGLETON": [
        "",
        "_MatchSingleton",
        "_OmitType"
    ],
    "pyflakes.checker.Checker.MATCHVALUE": [
        "",
        "_MatchValue",
        "_OmitType"
    ],
    "pyflakes.checker.Checker.MATCHAS": [
        "",
        "_MatchAs"
    ],
    "pyflakes.checker.Checker.MATCHMAPPING": [
        "",
        "_MatchMapping"
    ],
    "pyflakes.checker.Checker.MATCHSTAR": [
        "",
        "_MatchStar"
    ],
    "pyflakes.checker.Checker.TYPEVAR": [
        "",
        "_TypeVar"
    ],
    "pyflakes.checker.Checker.TYPEALIAS": [
        "",
        "_TypeAlias"
    ],
    "pyflakes.checker.getAlternatives": [
        "ast.If | ast.Try"
    ],
    "pyflakes.checker.parse_percent_format": [
        "str"
    ],
    "pyflakes.checker.counter": [
        "Iterable[_T]"
    ],
    "pyflakes.checker.iter_child_nodes": [
        "ast.AST",
        "_OmitType",
        "_FieldsOrder"
    ],
    "pyflakes.checker.convert_to_value": [
        "ast.Str"
    ],
    "pyflakes.checker.is_notimplemented_name_node": [
        "object"
    ],
    "pyflakes.checker.getNodeName": [
        "ast.AST"
    ],
    "pyflakes.checker.is_typing_overload": [
        "Binding",
        ""
    ],
    "pyflakes.checker.in_annotation": [
        "_F"
    ],
    "pyflakes.checker.in_string_annotation": [
        "_F"
    ]
}