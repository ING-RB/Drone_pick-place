<?xml version="1.0"?>
<!-- Copyright 2021-2022 The MathWorks, Inc.

     All definitions for the Intel Parallel Studio XE C/C++ Compiler (aka icl)
-->
<compiler xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" name="intel" default="x86_64" xsi:noNamespaceSchemaLocation="extensions.xsd">
  <clients>
    <client name="polyspace"/>
  </clients>

  <target name="x86_64">
    <asms>
      <asm name="__asm"/>
    </asms>
    <defines>
      <define name="__MW_GNU__" value="1"/>
      <define name="PST_GNU" value="1"/>
      <define name="_GNU_SOURCE" value="1"/>
      <if feoption="--c\+\+">
        <!-- Macros for C++ Polyspace Libraries. -->
        <define name="_LIBCPP_COMPILER_GENERIC_POLYSPACE" value="1"/>
      </if>
    </defines>
    <attributes>
      <attribute name="__declspec" sig="(*)"/>
      <attribute name="__forceinline"/>
    </attributes>
    <qualifiers>
      <qualifier name="__restrict" token="tok_restrict"/>
      <qualifier name="__restrict__" token="tok_restrict"/>
    </qualifiers>
    <types>
      <type name="__int8" type_kind="char" decl_specs="signed"/>
      <type name="__int16" type_kind="int" decl_specs="short"/>
      <type name="__int32" type_kind="int"/>
      <type name="__int64" type_kind="int" decl_specs="long_long"/>
    </types>
    <options>
      <if feoption="--c">
        <option name="--c11"/>
      </if>
      <if feoption="--c\+\+">
        <option name="--c++14"/>
      </if>
      <option name="--microsoft_version" value="1929"/>

      <!-- type size and alignment -->
      <option name="--max_alignment" value="8"/>
      <option name="--char_bit" value="8"/>
      <option name="--sizeof_short" value="2"/>
      <option name="--sizeof_int" value="4"/>
      <switch define="__ICC"> <!-- This does not work as macros are not yet evaluated -->
        <case>
          <option name="--sizeof_long" value="8"/>
          <option name="--sizeof_long_double" value="16"/>
          <option name="--alignof_long_double" value="16"/>
          <option name="--bits_for_long_double" value="128"/>
          <option name="--size_t_is_unsigned_long"/>
          <option name="--wchar_t_is_signed_int"/>
          <option name="--ptr_diff_is_long"/>
        </case>
        <default>
          <option name="--sizeof_long" value="4"/>
          <option name="--sizeof_long_double" value="8"/>
          <option name="--alignof_long_double" value="8"/>
          <option name="--size_t_is_unsigned_long_long"/>
          <option name="--wchar_t_is_unsigned_short"/>
          <option name="--ptr_diff_is_long_long"/>
        </default>
      </switch>
      <option name="--sizeof_long_long" value="8"/>
      <option name="--sizeof_pointer" value="8"/>
      <option name="--sizeof_float" value="4"/>
      <option name="--sizeof_double" value="8"/>
      <option name="--signed_chars"/>

      <option name="--preinclude" value="__polyspace_common.h"/>
      <option name="--preinclude" value="intel/tmw_builtins/intel.h"/>
    </options>
    <defines>
      <switch option="--big_endian">
        <case>
          <define name="__BIG_ENDIAN__" value="1"/>
        </case>
        <default>
          <define name="__LITTLE_ENDIAN__" value="1"/>
        </default>
      </switch>
    </defines>
  </target>
</compiler>
