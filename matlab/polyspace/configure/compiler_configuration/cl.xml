<!--Copyright 2013-2025 The MathWorks, Inc. -->
<compiler_configuration>
  <compiler_names>
    <name>cl.exe</name>
  </compiler_names>
  <minus_is_slash>1</minus_is_slash>
  <include_options>
    <opt>/I</opt>
    <opt>/external:I</opt>
  </include_options>
  <system_include_options></system_include_options>
  <preinclude_options>
    <opt>/FI</opt>
  </preinclude_options>
  <define_options>
    <opt>/D</opt>
  </define_options>
  <undefine_options>
    <opt>/U</opt>
    <opt>/u</opt>
  </undefine_options>
  <options_file_options>
    <opt>@</opt>
  </options_file_options>
  <options_file_strategy>native</options_file_strategy>
  <output_options>
    <opt>/Fo</opt>
    <opt>/Fe</opt>
  </output_options>
  <standard_options>
    <!-- C89 is the default with extensions-->
    <std version="c90" c_default="1"></std>
    <std version="c11">/std:c11</std>
    <std version="c17">/std:c17</std>
    <!--/std:c++14 is supported starting VS2015 Update 3 (1900)
        /std:c++17 is supported starting VS2017 version 15.3 (1911)
        /std:c++20 is supported starting VS2019 version 16.11 (1929)-->
    <std version="c++14" cpp_default="1">/std:c++14</std>
    <std version="c++17">/std:c++17</std>
    <std version="c++20">/std:c++20</std>
  </standard_options>
  <source_options>
    <opt>/Tc</opt>
    <opt>/Tp</opt>
  </source_options>
  <semantic_options>
    <opt isIgnored="true">/?</opt>
    <opt isPrefix="true">/arch</opt>
    <opt isIgnored="1" NumArgs="1">/AI</opt>
    <opt>/await</opt>
    <opt isIgnored="1">/bigobj</opt>
    <opt isIgnored="1">/C</opt>
    <opt isIgnored="1" removePhases="build_config">/c</opt>
    <opt isIgnored="1">/cgthreads</opt>
    <opt>/clr</opt>
    <opt isPrefix="true">/clr:</opt>
    <opt>/constexpr</opt>
    <opt isPrefix="true" isIgnored="true">/debug</opt>
    <opt isIgnored="true">/diagnostics</opt>
    <opt isPrefix="true" isIgnored="true">/doc</opt>
    <opt isPrefix="true">/EH</opt>  <!-- As it is a prefix, some source files such as /EHFOO.c may be missed! -->
    <opt isIgnored="true">/EP</opt>
    <opt isPrefix="true" isIgnored="true">/errorReport:</opt>
    <opt isPrefix="true" isIgnored="true">/execution-charset:</opt>
    <opt>/experimental:external</opt>
    <opt isPrefix="true">/external:env:</opt> <!-- should not be ignored because it can place INCLUDE, CL and _CL_ -->
    <opt numArgs="1">/F</opt>
    <opt isPrefix="true" isIgnored="true">/favor:</opt>
    <opt isIgnored="true">/FAc</opt>
    <opt isIgnored="true">/FAs</opt>
    <opt isIgnored="true">/FAu</opt>
    <opt numArgs="1" isIgnored="true">/Fa</opt>
    <opt isIgnored="true">/FC</opt>
    <opt isPrefix="true" isIgnored="true">/Fd</opt>
    <opt isPrefix="true" isIgnored="true">/Fi</opt>
    <opt isPrefix="true" isIgnored="true">/Fm</opt>
    <opt isPrefix="true" argsArePathss="true">/Fp</opt>
    <opt isPrefix="true" isIgnored="true">/FR</opt>
    <opt isPrefix="true" isIgnored="true">/Fr</opt>
    <opt isIgnored="true">/FS</opt>
    <opt isPrefix="true" isIgnored="true">/fsanitize</opt>
    <opt numArgs="1" isIgnored="true">/FU</opt>
    <opt isIgnored="true">/Fx</opt>
    <opt isPrefix="true" isIgnored="true">/fp:</opt>
    <opt>/GA</opt>
    <opt>/Gd</opt>
    <opt>/Ge</opt>
    <opt>/GF</opt>
    <opt>/GH</opt>
    <opt>/Gh</opt>
    <opt isIgnored="true">/GL</opt>
    <opt isIgnored="true">/GL-</opt>
    <opt isIgnored="true">/Gm</opt>
    <opt>/GR</opt>
    <opt>/GR-</opt>
    <opt>/Gr</opt>
    <opt isIgnored="true">/GS</opt>
    <opt isIgnored="true">/GS-</opt>
    <opt isPrefix="true" isIgnored="true">/Gs</opt>
    <opt isPrefix="true" isIgnored="true">/guard:</opt>
    <opt>/GT</opt>
    <opt>/Gv</opt>
    <opt isIgnored="true">/Gw</opt>
    <opt isIgnored="true">/Gw-</opt>
    <opt>/GX</opt>
    <opt isIgnored="true">/Gy</opt>
    <opt isIgnored="true">/Gy-</opt>
    <opt isIgnored="true">/GZ</opt>
    <opt>/Gz</opt>
    <opt isPrefix="true">/H</opt>
    <opt isIgnored="true">/HELP</opt>
    <opt isIgnored="true">/help</opt>
    <opt isIgnored="true">/homeparams</opt>
    <opt isIgnored="true">/hotpatch</opt>
    <opt>/J</opt>
    <opt isIgnored="true">/JMC</opt>
    <opt isIgnored="true">/JMC-</opt>
    <opt>/kernel</opt>
    <opt>/kernel-</opt>
    <opt numArgs="9999" isIgnored="true">/link</opt>
    <opt isIgnored="true">/LN</opt>
    <opt>/LD</opt>
    <opt>/LDd</opt>
    <opt>/MD</opt>
    <opt>/MDd</opt>
    <opt>/MT</opt>
    <opt>/MTd</opt>
    <opt isPrefix="true" isIgnored="true">/MP</opt>
    <opt isIgnored="true">/nologo</opt>
    <opt isIgnored="true">/O1</opt>
    <opt isIgnored="true">/O2</opt>
    <opt isIgnored="true">/Ob</opt>
    <opt isIgnored="true">/Od</opt>
    <opt isIgnored="true">/Og</opt>
    <opt isIgnored="true">/Oi</opt>
    <opt isIgnored="true">/Os</opt>
    <opt isIgnored="true">/Ot</opt>
    <opt isIgnored="true">/Ox</opt>
    <opt isIgnored="true">/Oy</opt>
    <opt>/openmp</opt>
    <opt isIgnored="true">/P</opt>
    <opt>/permissive-</opt>
    <opt>/Qfast_transcendentals</opt>
    <opt>/QIfist</opt>
    <opt>/Qimprecise_fwaits</opt>
    <opt>/Qpar</opt>
    <opt isPrefix="true">/Qpar-report:</opt>
    <opt>/Qsafe_fp_loads</opt>
    <opt>/Qspectre</opt>
    <opt isPrefix="true">/Qvec-report:</opt>
    <opt isIgnored="true">/RTC1</opt>
    <opt isIgnored="true">/RTCc</opt>
    <opt isIgnored="true">/RTCs</opt>
    <opt isIgnored="true">/RTCu</opt>
    <opt>/sdl</opt>
    <opt>/sdl-</opt>
    <opt isIgnored="true">/showIncludes</opt>
    <opt isPrefix="true">/source-charset:</opt>
    <opt isPrefix="true">/std:</opt>
    <opt>/TC</opt>
    <opt>/TP</opt>
    <opt>/utf-8</opt>
    <opt isPrefix="true">/V</opt>
    <opt isIgnored="true">/validate-charset</opt>
    <opt isIgnored="true">/validate-charset-</opt>
    <opt isPrefix="true">/vdn</opt>
    <opt>/vmb</opt>
    <opt>/vmg</opt>
    <opt>/vmm</opt>
    <opt>/vms</opt>
    <opt>/vmv</opt>
    <opt isPrefix="true">/volatile:</opt>
    <opt isIgnored="true">/w</opt>
    <opt isIgnored="true">/W0</opt>
    <opt isIgnored="true">/W1</opt>
    <opt isIgnored="true">/W2</opt>
    <opt isIgnored="true">/W3</opt>
    <opt isIgnored="true" removePhases="instrum">/W4</opt>
    <opt isIgnored="true">/Wall</opt>
    <opt isIgnored="true">/WL</opt>
    <opt isPrefix="true" isIgnored="true">/Wv:</opt>
    <opt isIgnored="true" removePhases="instrum">/WX</opt>
    <opt isPrefix="true" isIgnored="true">/w1</opt>
    <opt isPrefix="true" isIgnored="true">/w2</opt>
    <opt isPrefix="true" isIgnored="true">/w3</opt>
    <opt isPrefix="true" isIgnored="true">/w4</opt>
    <opt isPrefix="true" isIgnored="true">/wd</opt>
    <opt isPrefix="true" isIgnored="true">/we</opt>
    <opt isPrefix="true" isIgnored="true">/wo</opt>
    <opt isIgnored="true">/Wp64</opt>
    <opt>/X</opt>
    <opt isIgnored="true">/Y-</opt>
    <opt isPrefix="1" isIgnored="true">/Yc</opt>
    <opt isIgnored="true">/Yd</opt>
    <opt isPrefix="1" isIgnored="true">/Yl</opt>
    <opt isPrefix="1" argsArePaths="true">/Yu</opt>
    <opt isIgnored="true">/Z7</opt>
    <opt isIgnored="true">/Zi</opt>
    <opt isIgnored="true">/Zl</opt>
    <opt>/Za</opt>
    <opt isPrefix="true">/Zc:</opt>
    <opt>/Ze</opt>
    <opt isIgnored="true">/Zf</opt>
    <opt isIgnored="true">/Zg</opt>
    <opt isIgnored="true">/Zl</opt>
    <opt isPrefix="true" isIgnored="true">/Zm</opt>
    <opt isIgnored="true">/Zo</opt>
    <opt isIgnored="true">/Zo-</opt>
    <opt isPrefix="true">/Zp</opt>
    <opt isIgnored="true">/Zs</opt>
    <opt isPrefix="true">/ZW</opt>
    <opt isPrefix="true" isIgnored="true">/d1trimfile:</opt>
  </semantic_options>
  <semantic_environment_variable_list>
    <env>CL</env>
    <env>_CL_</env>
    <env>INCLUDE</env>
    <env>LIBPATH</env>
  </semantic_environment_variable_list>
  <preprocess_options_list>
    <opt>/E</opt>
  </preprocess_options_list>
  <preprocess_dollar_macros>yes</preprocess_dollar_macros>
  <forbidden_macros_list>
      <name>_CRT_USE_BUILTIN_OFFSETOF</name>
  </forbidden_macros_list>
  <compile_options_list>
    <opt>/c</opt>
  </compile_options_list>
  <switch>
    <!-- Version mapping reference at https://en.wikipedia.org/wiki/Microsoft_Visual_C%2B%2B#Internal_version_numbering -->
    <case>
      <condition>
        <or>
          <macro_equal name="_MSC_VER" value="1930"/>
          <macro_equal name="_MSC_VER" value="1931"/>
          <macro_equal name="_MSC_VER" value="1932"/>
          <macro_equal name="_MSC_VER" value="1933"/>
          <macro_equal name="_MSC_VER" value="1934"/>
          <macro_equal name="_MSC_VER" value="1935"/>
          <macro_equal name="_MSC_VER" value="1936"/>
        </or>
      </condition>
      <actions>
        <compiler>visual17.x</compiler>
        <default_macro_strategy>from-compiler</default_macro_strategy>
      </actions>
    </case>
    <case>
      <condition>
        <or>
          <macro_equal name="_MSC_VER" value="1928"/>
          <macro_equal name="_MSC_VER" value="1929"/>
        </or>
      </condition>
      <actions>
        <compiler>visual16.x</compiler>
        <default_macro_strategy>from-compiler</default_macro_strategy>
      </actions>
    </case>
    <case>
      <condition>
        <or>
          <macro_equal name="_MSC_VER" value="1920"/>
          <macro_equal name="_MSC_VER" value="1921"/>
          <macro_equal name="_MSC_VER" value="1922"/>
          <macro_equal name="_MSC_VER" value="1923"/>
          <macro_equal name="_MSC_VER" value="1924"/>
          <macro_equal name="_MSC_VER" value="1925"/>
          <macro_equal name="_MSC_VER" value="1926"/>
          <macro_equal name="_MSC_VER" value="1927"/>
        </or>
      </condition>
      <actions>
        <compiler>visual16.x</compiler>
      </actions>
    </case>
    <case>
      <condition>
        <or>
          <macro_equal name="_MSC_VER" value="1910"/>
          <macro_equal name="_MSC_VER" value="1911"/>
          <macro_equal name="_MSC_VER" value="1912"/>
          <macro_equal name="_MSC_VER" value="1913"/>
          <macro_equal name="_MSC_VER" value="1914"/>
          <macro_equal name="_MSC_VER" value="1915"/>
          <macro_equal name="_MSC_VER" value="1916"/>
        </or>
      </condition>
      <actions>
        <compiler>visual15.x</compiler>
      </actions>
    </case>
    <case>
      <condition>
        <macro_equal name="_MSC_VER" value="1900"/>
      </condition>
      <actions>
        <compiler>visual14.0</compiler>
      </actions>
    </case>
    <case>
      <condition>
        <macro_equal name="_MSC_VER" value="1800"/>
      </condition>
      <actions>
        <compiler>visual12.0</compiler>
      </actions>
    </case>
    <case>
      <condition>
        <macro_equal name="_MSC_VER" value="1700"/>
      </condition>
      <actions>
        <compiler>visual11.0</compiler>
      </actions>
    </case>
    <case>
      <condition>
        <macro_equal name="_MSC_VER" value="1600"/>
      </condition>
      <actions>
        <compiler>visual10.0</compiler>
      </actions>
    </case>
    <case>
      <condition>
        <macro_equal name="_MSC_VER" value="1500"/>
      </condition>
      <actions>
        <compiler>visual9.0</compiler>
      </actions>
    </case>
    <default>
      <log severity="warning">Visual C++ version not supported. Defaulting to visual17.x</log>
      <compiler>visual17.x</compiler>
    </default>
  </switch>
  <src_extensions>
    <ext>c</ext>
    <ext>cc</ext>
    <ext>cpp</ext>
    <ext>cxx</ext>
  </src_extensions>
  <obj_extensions>
    <ext>obj</ext>
  </obj_extensions>
  <precompiled_header_extensions>
    <ext>pch</ext>
  </precompiled_header_extensions>
  <include_strategy>from-environment</include_strategy>
  <from_environment_include_strategy>
    <env caseSensitive="false">INCLUDE</env>
  </from_environment_include_strategy>
  <default_macro_strategy>from-source-tokens</default_macro_strategy>
  <from_compiler_macro_strategy>
    <input>
      <opt>/EP</opt>
      <opt>/Zc:preprocessor</opt>
      <opt>/PD</opt>
      <empty_source_file>true</empty_source_file>
    </input>
    <output>
      <regex name_group="1" value_group="5">^#\s*define\s+(([^\s]*(\(.*\)))|([^\s]*))\s+(.*)?$</regex>
    </output>
  </from_compiler_macro_strategy>
 </compiler_configuration>
