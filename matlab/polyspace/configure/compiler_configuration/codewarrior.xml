<!--Copyright 2017-2023 The MathWorks, Inc. -->
<compiler_configuration>
  <compiler_names>
    <name>mwcceppc</name>
    <name>mwccs12lisa</name>
  </compiler_names>
  <compiler>codewarrior</compiler>
  <include_options>
    <opt>-i</opt>
    <opt>-I+</opt>
  </include_options>
  <system_include_options>
    <opt>-I</opt>
    <opt>-ir</opt> <!-- Recursive include path: Not supported by Polyspace -->
  </system_include_options>
  <preinclude_options>
    <opt>-prefix</opt>
    <opt>-include</opt>
  </preinclude_options>
  <define_options>
    <opt removePhases="instrum">-define</opt>
    <opt removePhases="instrum" isPrefix="true">-D</opt>
    <opt removePhases="instrum">-d</opt>
  </define_options>
  <undefine_options>
    <opt>-u</opt>
    <opt isPrefix="true">-U</opt>
    <opt>-undefine</opt>
  </undefine_options>
  <options_file_options>
    <opt>@@</opt>
    <opt>@</opt>
  </options_file_options>
  <output_options>
    <opt>-o</opt>
  </output_options>
  <standard_options>
    <std version="c90" c_default="1">-dialect c</std>
    <std version="c99">-dialect c99</std>
    <std version="c++03" cpp_default="1"></std>
  </standard_options>
  <semantic_options>
    <opt numArgs="1">--use-license-file</opt>
    <opt numArgs="9999" isIgnored="true">-help</opt>
    <opt isIgnored="true">-version</opt>
    <opt>-timing</opt>
    <opt>-progress</opt>
    <opt isPrefix="true">-v</opt>
    <opt>-wraplines</opt>
    <opt>-nowraplines</opt>
    <opt numArgs="1">-maxerrors</opt>
    <opt numArgs="1">-maxwarnings</opt>
    <opt numArgs="1">-msgstyle</opt>
    <opt numArgs="1" isIgnored="true">-warn</opt>
    <opt isIgnored="true">-stderr</opt>
    <opt isIgnored="true">-nostderr</opt>
    <opt>-fullLicenseSearch</opt>
    <opt>-codegen</opt>
    <opt>-nocodegen</opt>
    <opt>-convertpaths</opt>
    <opt>-noconvertpaths</opt>
    <opt numArgs="1">-cwd</opt>
    <opt>-defaults</opt>
    <opt>-nodefaults</opt>
    <opt numArgs="1">-D+</opt>
    <opt isPrefix="true">-dis</opt>
    <opt isIgnored="true">-EP</opt>
    <opt numArgs="1">-enc</opt>
    <opt numArgs="1">-encoding</opt>
    <opt numArgs="1" isIgnored="true">-ext</opt>
    <opt>-gccinc</opt>
    <opt>-gccincludes</opt>
    <opt>-gccdep</opt>
    <opt>-gccdepends</opt>
    <opt>-nogccdep</opt>
    <opt>-nogccdepends</opt>
    <opt>-i-</opt>
    <opt>-I-</opt>
    <opt numArgs="1">-U+</opt>
    <opt>-keepobj</opt>
    <opt>-nokeepobj</opt>
    <opt>-keepobjects</opt>
    <opt>-nokeepobjects</opt>
    <opt isIgnored="true">-M</opt>
    <opt isIgnored="true">-MM</opt>
    <opt isIgnored="true" removePhases="instrum">-MD</opt>
    <opt isIgnored="true" removePhases="instrum">-MMD</opt>
    <opt numArgs="1" isIgnored="true">-Mfile</opt>
    <opt numArgs="1" isIgnored="true">-MMfile</opt>
    <opt numArgs="1" isIgnored="true">-MDfile</opt>
    <opt numArgs="1" isIgnored="true">-MMDfile</opt>
    <opt isIgnored="true">-make</opt>
    <opt>-nofail</opt>
    <opt>-nolink</opt>
    <opt>-noprecompile</opt>
    <opt>-nosyspath</opt>
    <opt isIgnored="true">-P</opt>
    <opt numArgs="1" isIgnored="true">-precompile</opt>
    <opt numArgs="1" isIgnored="true">-ppopt</opt>
    <opt isIgnored="true">-S</opt>
    <opt>-stdinc</opt>
    <opt>-nostdinc</opt>
    <opt>-allow_macro_redefs</opt>
    <opt isIgnored="true" removePhases="build_config">-c</opt>
    <opt numArgs="1">-ansi</opt>
    <opt numArgs="1">-bool</opt>
    <opt>-nolonglong</opt>
    <opt numArgs="1">-char</opt>
    <opt numArgs="1">-cpp_exceptions</opt>
    <opt numArgs="1">-Cpp_exceptions</opt>
    <opt numArgs="1">-Cpp_Exceptions</opt>
    <opt numArgs="1">-dialect</opt>
    <opt numArgs="1">-lang</opt>
    <opt numArgs="1">-enum</opt>
    <opt numArgs="1">-min_enum_size</opt>
    <opt numArgs="1">-for_scoping</opt>
    <opt numArgs="1">-fl</opt>
    <opt numArgs="1">-flag</opt>
    <opt isPrefix="true" numArgs="1">-gcc</opt>
    <opt numArgs="1">-inline</opt>
    <opt isPrefix="true" numArgs="1">-inst</opt>
    <opt numArgs="1">-ipa</opt>
    <opt numArgs="1">-iso_templates</opt>
    <opt>-mapcr</opt>
    <opt>-nomapcr</opt>
    <opt numArgs="1">-msext</opt>
    <opt>-once</opt>
    <opt numArgs="1">-pragma</opt>
    <opt>-r</opt>
    <opt>-requireprotos</opt>
    <opt>-relax_pointers</opt>
    <opt numArgs="1">-RTTI</opt>
    <opt numArgs="1">-stdkeywords</opt>
    <opt numArgs="1">-str</opt>
    <opt numArgs="1">-strings</opt>
    <opt numArgs="1" removePhases="instrum">-strict</opt>
    <opt numArgs="1">-trigraphs</opt>
    <opt numArgs="1">-wchar_t</opt>
    <opt isPrefix="true">-O</opt>
    <opt numArgs="1">-opt</opt>
    <opt numArgs="1">-align</opt>
    <opt numArgs="1">-common</opt>
    <opt>fp_contract</opt>
    <opt numArgs="1">-maf</opt>
    <opt numArgs="1">-func_align</opt>
    <opt numArgs="1">-pool</opt>
    <opt numArgs="1">-pooldata</opt>
    <opt numArgs="1">-profile</opt>
    <opt>rostr</opt>
    <opt>readonlystrings</opt>
    <opt numArgs="1">-schedule</opt>
    <opt numArgs="1">-use_lmw_stmw</opt>
    <opt>-altivec_move_block</opt>
    <opt>-noaltivec_move_block</opt>
    <opt>-relax_ieee</opt>
    <opt>-norelax_ieee</opt>
    <opt>-strict_ieee</opt>
    <opt>-ordered-fp-compares</opt>
    <opt>-noordered-fp-compares</opt>
    <opt numArgs="1">-vector</opt>
    <opt>-volatileasm</opt>
    <opt>-novolatileasm</opt>
    <opt numArgs="1">-use_isel</opt>
    <opt>-vle</opt>
    <opt>-ppc_asm_to_vle</opt>
    <opt numArgs="1">-use_fsel</opt>
    <opt>-spe_vector</opt>
    <opt>-spe_addl_vector</opt>
    <opt>-spe2_vector</opt>
    <opt numArgs="1">-schar_size</opt>
    <opt numArgs="1">-uchar_size</opt>
    <opt numArgs="1">-short_size</opt>
    <opt numArgs="1">-int_size</opt>
    <opt numArgs="1">-long_size</opt>
    <opt numArgs="1">-llong_size</opt>
    <opt numArgs="1">-float_size</opt>
    <opt numArgs="1">-double_size</opt>
    <opt numArgs="1">-ldouble_size</opt>
    <opt numArgs="1">-lldouble_size</opt>
    <opt numArgs="1">-bfield_gap_limit</opt>
    <opt>-bfield_lsbit_first</opt>
    <opt>-nobfield_lsbit_first</opt>
    <opt>-bfield_reduce_type</opt>
    <opt>-nobfield_reduce_type</opt>
    <opt>-safe_index_expr</opt>
    <opt>-nosafe_index_expr</opt>
    <opt>-peephole</opt>
    <opt>-nopeephole</opt>
    <opt>-common_sub_expr_elim</opt>
    <opt>-nocommon_sub_expr_elim</opt>
    <opt>-const_propag</opt>
    <opt>-noconst_propag</opt>
    <opt>-copy_propag</opt>
    <opt>-nocopy_propag</opt>
    <opt>-dead_code_elim</opt>
    <opt>-nodead_code_elim</opt>
    <opt>-dead_store_elim</opt>
    <opt>-nodead_store_elim</opt>
    <opt>-stack_access_opt</opt>
    <opt>-nostack_access_opt</opt>
    <opt>-coloring</opt>
    <opt>-nocoloring</opt>
    <opt>-branch_tail_merge</opt>
    <opt>-nobranch_tail_merge</opt>
    <opt>-branch_head_merge</opt>
    <opt>-nobranch_head_merge</opt>
    <opt numArgs="1">-model</opt>
    <opt numArgs="1">-bit64_code_gen</opt>
    <opt>-ll_inline</opt>
    <opt>-noll_inline</opt>
    <opt>-bfield_aggregation</opt>
    <opt>-nobfield_aggregation</opt>
    <opt>-imm_aggregation</opt>
    <opt>-noimm_aggregation</opt>
    <opt>-fp_compliant</opt>
    <opt>-nofp_compliant</opt>
    <opt>-preassign</opt>
    <opt>-nopreassign</opt>
    <opt>-spilltoreg</opt>
    <opt>-nospilltoreg</opt>
    <opt>-use_base_pointer</opt>
    <opt>-nouse_base_pointer</opt>
    <opt>-spill32b</opt>
    <opt>-nospill32b</opt>
    <opt>-asm_enhance</opt>
    <opt>-noasm_enhance</opt>
    <opt>-align_stack</opt>
    <opt>-noalign_stack</opt>
    <opt>-proc_abstract</opt>
    <opt>-noproc_abstract</opt>
    <opt>-align_structs</opt>
    <opt>-noalign_structs</opt>
    <opt>-align_globals</opt>
    <opt>-noalign_globals</opt>
    <opt isPrefix="true">-g</opt>
    <opt numArgs="1">-sym</opt>
    <opt numArgs="1">-w</opt>
    <opt numArgs="1">-warn</opt>
    <opt numArgs="1">-warning</opt>
    <opt>-search</opt>
    <opt>-big</opt>
    <opt>-little</opt>
    <opt numArgs="1">-disable_extensions</opt>
    <opt numArgs="1">-proc</opt>
    <opt numArgs="1">-processor</opt>
    <opt numArgs="1">-fp</opt>
    <opt numArgs="1">-sdata</opt>
    <opt numArgs="1">-sdatathreshold</opt>
    <opt numArgs="1">-sdata2</opt>
    <opt numArgs="1">-sdata2threshold</opt>
    <opt numArgs="1">-abi</opt>
  </semantic_options>
  <switch>
    <case>
      <condition>
        <or>
          <macro_defined name="__HC12__"/>
          <macro_defined name="__S12LISA__"/>
          <macro_defined name="__S12Z__"/>
        </or>
      </condition>
      <actions>
        <target_name>s12z</target_name>
      </actions>
    </case>
    <case>
      <condition>
        <macro_defined name="__POWERPC__"/>
      </condition>
      <actions>
        <target_name>powerpc</target_name>
      </actions>
    </case>
  </switch>
  <preprocess_options_list>
    <opt>-E</opt>
  </preprocess_options_list>
  <preprocess_dollar_macros>no</preprocess_dollar_macros>
  <forbidden_macros_list>
  </forbidden_macros_list>
  <compile_options_list>
    <opt>-c</opt>
  </compile_options_list>
  <src_extensions>
    <ext>c</ext>
    <ext>cc</ext>
    <ext>cp</ext>
    <ext>cxx</ext>
    <ext>cpp</ext>
    <ext>c++</ext>
  </src_extensions>
  <obj_extensions>
    <ext>obj</ext>
    <ext>o</ext>
  </obj_extensions>
  <precompiled_header_extensions>
  </precompiled_header_extensions>
</compiler_configuration>
