<!--Copyright 2015-2024 The MathWorks, Inc. -->
<compiler_configuration>
  <compiler_names>
    <name>armcl</name>
    <name>cl430</name>
    <name>cl6x</name>
    <name>cl2000</name>
  </compiler_names>
  <compiler>ti</compiler>
  <include_options>
    <opt>-I</opt>
    <opt>-i</opt>
    <opt>--include_path</opt>
  </include_options>
  <system_include_options/>
  <preinclude_options>
    <opt>--preinclude</opt>
  </preinclude_options>
  <define_options>
    <opt>-D</opt>
    <opt>--define</opt>
  </define_options>
  <undefine_options>
    <opt>-U</opt>
    <opt>--undefine</opt>
  </undefine_options>
  <options_file_options>
    <opt>--cmd_file</opt>
    <opt>-@</opt>
  </options_file_options>
  <output_options>
    <opt>-o</opt>
    <opt>-fe</opt>
    <opt>--output_file</opt>
    <opt>--obj_directory</opt>
    <opt>-fr</opt>
    <opt>--obj_file</opt>
    <opt>-fo</opt>
  </output_options>
  <standard_options>
    <std version="c90">--c89</std>
    <std version="c99">--c99</std>
    <std version="c11" c_default="1">--c11</std>
    <std version="c++03">--c++03</std>
    <std version="c++14" cpp_default="1"></std>
  </standard_options>
  <source_options>
    <opt>--c_file</opt>
    <opt>-fc</opt>
    <opt>--cpp_file</opt>
    <opt>-fp</opt>
  </source_options>
  <preprocess_options_list>
    <opt>-ppo</opt>
    <opt>--output_file</opt>
    <opt>$(OUTPUT_FILE)</opt>
  </preprocess_options_list>
  <preprocess_dollar_macros>no</preprocess_dollar_macros>
  <forbidden_macros_list/>
  <compile_options_list>
    <opt>-c</opt>
    <opt>--compile_only</opt>
  </compile_options_list>
  <semantic_options>
    <opt isIgnored="true" removePhases="build_config">-c</opt>
    <opt isIgnored="true" removePhases="build_config">--compile_only</opt>
    <opt>-v28</opt>
    <opt isPrefix="true">--silicon_version</opt>
    <opt isPrefix="true">--silicon_errata</opt>
    <opt isPrefix="true">--code_state</opt>
    <opt>--unified_memory</opt>
    <opt>--big_endian</opt>
    <opt>-me</opt>
    <opt>--no_bad_aliases</opt>
    <opt>-mt</opt>
    <opt>--no_compress</opt>
    <opt>--no_reload_errors</opt>
    <opt isPrefix="true">--speculate_loads</opt>
    <opt isPrefix="true">-mh</opt>
    <opt>--speculate_unknown_loads</opt>
    <opt>--target_compatibility_6200</opt>
    <opt>-mb</opt>
    <opt>--use_const_for_alias_analysis</opt>
    <opt>-ox</opt>
    <opt isPrefix="true">--cla_support</opt>
    <opt isPrefix="true">--float_support</opt>
    <opt isPrefix="true">--idiv_support</opt> <!-- cl2000 -->
    <opt isPrefix="true">--isr_save_vcu_regs</opt> <!-- cl2000 -->
    <opt isPrefix="true">--code_model</opt>
    <opt isPrefix="true">--data_model</opt>
    <opt isPrefix="true">--near_data</opt>
    <opt isPrefix="true">--tmu_support</opt>
    <opt isPrefix="true">--vcu_support</opt>
    <opt isPrefix="true">--opt_level</opt>
    <opt isPrefix="true">-O</opt>
    <opt isPrefix="true">--opt_for_space</opt>
    <opt isPrefix="true">-ms</opt>
    <opt isPrefix="true">--fp_mode</opt>
    <opt isPrefix="true">--fp_reassoc</opt>
    <opt isPrefix="true">--sat_reassoc</opt>
    <opt isPrefix="true">--auto_inline</opt>
    <opt>-oi</opt>
    <opt isPrefix="true">--call_assumptions</opt>
    <opt isPrefix="true">-op</opt>
    <opt isPrefix="true">--gen_opt_info</opt>
    <opt isPrefix="true">-on</opt>
    <opt isPrefix="true">--opt_for_speed</opt>
    <opt isPrefix="true">-mf</opt>
    <opt isPrefix="true">--llopt</opt>
    <opt isPrefix="true">--vectypes</opt>
    <opt isPrefix="true">--vtypes</opt>
    <opt>--optimizer_interlist</opt>
    <opt>-os</opt>
    <opt>--program_level_compile</opt>
    <opt>-pm</opt>
    <opt>--aliased_variables</opt>
    <opt>-ma</opt>
    <opt isPrefix="true">--symdebug</opt>
    <opt>-g</opt>
    <opt isIgnored="true">--help</opt>
    <opt isIgnored="true">-h</opt>
    <opt isIgnored="true">--run_linker</opt>
    <opt isIgnored="true">-z</opt>
    <opt isIgnored="true">--skip_assembler</opt>
    <opt isIgnored="true">-n</opt>
    <opt>--c89</opt>
    <opt>--c99</opt>
    <opt>--c11</opt>
    <opt>--c++03</opt>
    <opt>--c++14</opt>
    <opt>--cla_default</opt>
    <opt isPrefix="true">--cla_background_task</opt> <!-- cl2000 -->
    <opt isPrefix="true">--cla_signed_compare_workaround</opt> <!-- cl2000 -->
    <opt>--cpp_default</opt>
    <opt>-fg</opt>
    <opt>--exceptions</opt>
    <opt isPrefix="true">--float_operations_allowed</opt>
    <opt isIgnored="true">--gen_cross_reference</opt>
    <opt isIgnored="true">-px</opt>
    <opt isIgnored="true">--gen_preprocessor_listing</opt>
    <opt isIgnored="true">-pl</opt>
    <opt>--debug_software_pipeline</opt>
    <opt>-mw</opt>
    <opt>--disable_software_pipeline</opt>
    <opt>-mu</opt>
    <opt>--fp_not_associative</opt>
    <opt>-mc</opt>
    <opt>--dprel</opt>
    <opt isPrefix="true">--interrupt_threshold</opt>
    <opt isPrefix="true">-mi</opt>
    <opt isPrefix="true">--mem_model</opt>
    <opt>--relaxed_ansi</opt>
    <opt>-pr</opt>
    <opt>--rtti</opt>
    <opt>-rtti</opt>
    <opt>--strict_ansi</opt>
    <opt>-ps</opt>
    <opt>--extern_c_can_throw</opt>
    <opt isPrefix="true">--float_operations_allowed</opt>
    <opt>--fp_single_precision_constant</opt> <!-- cl2000 -->
    <opt>--static_template_instantiation</opt> <!-- cl2000 -->
    <opt>--plain_char</opt>
    <opt isPrefix="true">--pending_instantiations</opt>
    <opt isPrefix="true" isIgnored="true">--preproc_dependency</opt>
    <opt isPrefix="true" isIgnored="true">-ppd</opt>
    <opt isPrefix="true" isIgnored="true">--preproc_includes</opt>
    <opt isPrefix="true" isIgnored="true">-ppi</opt>
    <opt isPrefix="true" isIgnored="true">--preproc_macros</opt>
    <opt isPrefix="true" isIgnored="true">-ppm</opt>
    <opt isIgnored="true">--preproc_only</opt>
    <opt isIgnored="true">-ppo</opt>
    <opt isIgnored="true">--preproc_with_comment</opt>
    <opt isIgnored="true">-ppc</opt>
    <opt isIgnored="true">--preproc_with_compile</opt>
    <opt isIgnored="true">-ppa</opt>
    <opt isIgnored="true">--preproc_with_line</opt>
    <opt isIgnored="true">-ppl</opt>
    <opt isPrefix="true">--advice</opt>
    <opt isIgnored="true">--compiler_revision</opt>
    <opt isPrefix="true" isIgnored="true">--diag_error</opt>
    <opt isPrefix="true" isIgnored="true">-pdse</opt>
    <opt isPrefix="true" isIgnored="true">--diag_remark</opt>
    <opt isPrefix="true" isIgnored="true">-pdsr</opt>
    <opt isPrefix="true" isIgnored="true">--diag_suppress</opt>
    <opt isPrefix="true" isIgnored="true">-pds</opt>
    <opt isPrefix="true" isIgnored="true">--diag_warning</opt>
    <opt isPrefix="true" isIgnored="true">-pdsw</opt>
    <opt isPrefix="true" isIgnored="true">--diag_wrap</opt>
    <opt isIgnored="true">--display_error_number</opt>
    <opt isIgnored="true">-pden</opt>
    <opt isIgnored="true">--emit_warnings_as_errors</opt>
    <opt isIgnored="true">-pdew</opt>
    <opt isIgnored="true">--issue_remarks</opt>
    <opt isIgnored="true">-pdr</opt>
    <opt isIgnored="true">--no_warnings</opt>
    <opt isIgnored="true">-pdw</opt>
    <opt isIgnored="true">--quiet</opt>
    <opt isIgnored="true">-q</opt>
    <opt isPrefix="true" isIgnored="true">--set_error_limit</opt>
    <opt isPrefix="true" isIgnored="true">-pdel</opt>
    <opt isIgnored="true">--super_quiet</opt>
    <opt isIgnored="true">-qq</opt>
    <opt isIgnored="true">--tool_version</opt>
    <opt isIgnored="true">-version</opt>
    <opt isIgnored="true">--verbose</opt>
    <opt isIgnored="true">--verbose_diagnostics</opt>
    <opt isIgnored="true">-pdv</opt>
    <opt isIgnored="true">--write_diagnostics_file</opt>
    <opt isIgnored="true">-pdf</opt>
    <opt>--disable_dp_load_opt</opt>
    <opt>-md</opt>
    <opt isPrefix="true">--gen_data_subsections</opt>
    <opt isPrefix="true">--gen_func_subsections</opt>
    <opt isPrefix="true">--use_dead_funcs_list</opt>
    <opt isPrefix="true">--embedded_constants</opt>
    <opt isPrefix="true">--unaligned_access</opt>
    <opt isPrefix="true">--enum_type</opt>
    <opt isPrefix="true">--wchar_t</opt>
    <opt isPrefix="true">--common</opt>
    <opt isPrefix="true">--global_register</opt>
    <opt>-neon</opt>
    <opt>stack_overflow_check</opt>
    <opt>-mo</opt>
    <opt>--no_rpt</opt>
    <opt>-mi</opt>
    <opt isPrefix="true">--printf_support</opt>
    <opt>--protect_volatile</opt>
    <opt isPrefix="true">-mv</opt> <!-- ti_arm -->
    <opt isPrefix="true">-v</opt> <!-- same as -mv for the others -->
    <opt isPrefix="true">--ramfunc</opt>
    <opt isPrefix="true">--rpt_threshold</opt>
    <opt isPrefix="true">--silicon_errata_fpu1_workaround</opt> <!-- cl2000 -->
    <opt isPrefix="true" isIgnored="true">--entry_hook</opt>
    <opt isPrefix="true" isIgnored="true">--entry_parm</opt>
    <opt isPrefix="true" isIgnored="true">--exit_hook</opt>
    <opt isPrefix="true" isIgnored="true">--exit_parm</opt>
    <opt>--remove_hooks_when_inlining</opt>
    <opt>-disable_inlining</opt>
    <opt>-multithread</opt>
    <opt isPrefix="true">--analyze</opt>
    <opt isIgnored="true">--analyze_only</opt>
    <opt isIgnored="true">--gen_profile_info</opt>
    <opt isPrefix="true" isIgnored="true">--use_profile_info</opt>
    <opt>--keep_asm</opt>
    <opt>-k</opt>
    <opt>--asm_listing</opt>
    <opt>-al</opt>
    <opt>--c_src_interlist</opt>
    <opt>-ss</opt>
    <opt>--src_interlist</opt>
    <opt>-s</opt>
    <opt>--absolute_listing</opt>
    <opt isPrefix="true">--abi</opt> <!-- cl2000 -->
    <opt>-aa</opt>
    <opt isPrefix="true">--asm_define</opt>
    <opt isPrefix="true">-ad</opt>
    <opt>--asm_dependency</opt>
    <opt>-apd</opt>
    <opt>--asm_includes</opt>
    <opt>-api</opt>
    <opt>--issue_remarks</opt>
    <opt isPrefix="true">--asm_undefine</opt>
    <opt isPrefix="true">-au</opt>
    <opt>--asm_listing_cross_reference</opt>
    <opt>-ax</opt>
    <opt isPrefix="true">--include_file</opt>
    <opt numArgs="1">-ahi</opt>
    <opt>--preproc_asm</opt>
    <opt>-mx</opt>
    <opt numArgs="1" isIgnored="true">--asm_file</opt>
    <opt numArgs="1" isIgnored="true">-fa</opt>
    <opt numArgs="1" isIgnored="true">-f</opt>
    <opt numArgs="1" isIgnored="true">--abs_directory</opt>
    <opt numArgs="1" isIgnored="true">-fb</opt>
    <opt numArgs="1" isIgnored="true">--asm_directory</opt>
    <opt numArgs="1" isIgnored="true">-fs</opt>
    <opt numArgs="1" isIgnored="true">--list_directory</opt>
    <opt numArgs="1" isIgnored="true">-ff</opt>
    <opt numArgs="1" isIgnored="true">--pp_directory</opt>
    <opt numArgs="1" isIgnored="true">--temp_directory</opt>
    <opt numArgs="1" isIgnored="true">-ft</opt>
    <opt numArgs="1" isIgnored="true">--asm_extension</opt>
    <opt numArgs="1" isIgnored="true">-ea</opt>
    <opt numArgs="1" isIgnored="true">--c_extension</opt>
    <opt numArgs="1" isIgnored="true">-ec</opt>
    <opt numArgs="1" isIgnored="true">--cpp_extension</opt>
    <opt numArgs="1" isIgnored="true">-ep</opt>
    <opt numArgs="1" isIgnored="true">--listing_extension</opt>
    <opt numArgs="1" isIgnored="true">-es</opt>
    <opt numArgs="1" isIgnored="true">--obj_extension</opt>
    <opt numArgs="1" isIgnored="true">-eo</opt>
    <opt numArgs="1" isIgnored="true">--check_misra</opt>
    <opt numArgs="1" isIgnored="true">--misra_advisory</opt>
    <opt numArgs="1" isIgnored="true">--misra_required</opt>
    <opt>-ml</opt>
    <opt>--large_memory_model</opt>
    <opt>--embedded_cpp</opt>
    <opt>-pe</opt>
    <opt>--gcc</opt>
    <opt>--kr_compatible</opt>
    <opt>--multibyte_chars</opt>
    <opt>-pc</opt>
    <opt>-ps</opt>

    <!-- All linker options are omitted, as they are hidden behind \-\-run_linker -->
    <opt numArgs="9999" isIgnored="true">--run_linker</opt>
    <opt numArgs="9999" isIgnored="true">-z</opt>
  </semantic_options>
  <switch>
    <case>
      <condition>
        <or>
          <macro_defined name="_AEABI_PORTABILITY_LEVEL"/>
          <macro_defined name="__TI_ARM_V4__"/>
          <macro_defined name="__TI_ARM_V5__"/>
          <macro_defined name="__TI_ARM_V6M0__"/>
          <macro_defined name="__TI_ARM_V6__"/>
          <macro_defined name="__TI_ARM_V7A8__"/>
          <macro_defined name="__TI_ARM_V7M3__"/>
          <macro_defined name="__TI_ARM_V7M4__"/>
          <macro_defined name="__TI_ARM_V7R4__"/>
          <macro_defined name="__TI_ARM_V7R5__"/>
          <macro_defined name="__TI_ARM_V7__"/>
          <macro_defined name="__TI_ARM__"/>
          <macro_defined name="__TI_NEON_SUPPORT__"/>
          <macro_defined name="__TI_VFPLIB_SUPPORT__"/>
          <macro_defined name="__TI_VFPV3D16_SUPPORT__"/>
          <macro_defined name="__TI_VFPV3_SUPPORT__"/>
          <macro_defined name="__TI_VFP_SUPPORT__"/>
          <macro_defined name="__TMS470_V4__"/>
          <macro_defined name="__TMS470_V5__"/>
          <macro_defined name="__TMS470_V6M0__"/>
          <macro_defined name="__TMS470_V6__"/>
          <macro_defined name="__TMS470_V7A8__"/>
          <macro_defined name="__TMS470_V7M3__"/>
          <macro_defined name="__TMS470_V7M4__"/>
          <macro_defined name="__TMS470_V7R4__"/>
          <macro_defined name="__TMS470_V7R5__"/>
          <macro_defined name="__TMS470_V7__"/>
          <macro_defined name="__TMS470__"/>
        </or>
      </condition>
      <actions>
        <target_name>arm</target_name>
      </actions>
    </case>
    <case>
      <condition>
        <or>
          <macro_defined name="_TMS320C6400"/>
          <macro_defined name="_TMS320C6400_PLUS"/>
          <macro_defined name="_TMS320C64_PLUS"/>
          <macro_defined name="_TMS320C6X"/>
          <macro_defined name="__TMS320C6X__"/>
        </or>
      </condition>
      <actions>
        <target_name>c6000</target_name>
      </actions>
    </case>
    <case>
      <condition>
        <or>
          <macro_defined name="_TMS320C5XX"/>
          <macro_defined name="__TMS320C55X__"/>
          <macro_defined name="__TMS320C5XX__"/>
        </or>
      </condition>
      <actions>
        <target_name>c55x</target_name>
      </actions>
    </case>
    <case>
      <condition>
        <or>
          <macro_defined name="_TMS320C28X"/>
          <macro_defined name="_TMS320C28XX"/>
          <macro_defined name="__TMS320C2000__"/>
          <macro_defined name="__TMS320C28XX__"/>
          <macro_defined name="__TMS320C28X__"/>
          <!-- C27X compiler-->
          <macro_defined name="__TMS320C27XX__"/>
        </or>
      </condition>
      <actions>
        <target_name>c28x</target_name>
      </actions>
    </case>
    <case>
      <condition>
        <macro_defined name="__MSP430__"/>
      </condition>
      <actions>
        <target_name>msp430</target_name>
      </actions>
    </case>
  </switch>
  <src_extensions>
    <ext>c</ext>
    <ext>cc</ext>
    <ext>cp</ext>
    <ext>cxx</ext>
    <ext>cpp</ext>
    <ext>c++</ext>
  </src_extensions>
  <obj_extensions>
    <ext>obj</ext>
    <ext>o</ext>
  </obj_extensions>
  <precompiled_header_extensions/>
  <from_environment_include_strategy>
    <env>TI_ARM_C_DIR</env>
    <env>MSP430_C_DIR</env>
    <env>C6X_C_DIR</env>
    <env>C2000_C_DIR</env>
  </from_environment_include_strategy>
  <include_strategy>sniff</include_strategy>
  <default_macro_strategy>from-compiler</default_macro_strategy>
  <from_compiler_macro_strategy>
    <input>
      <opt>--preproc_macros</opt>
      <empty_source_file>true</empty_source_file>
    </input>
    <output>
      <regex>^#define\s+(\S+)\s*(\S+|".*?[^\\]")?\s*(\/\* Predefined \*\/)?$</regex>
      <file>$(SOURCE_FILE_NO_EXT).pp</file>
    </output>
  </from_compiler_macro_strategy>
</compiler_configuration>
