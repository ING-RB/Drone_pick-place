---------------------------------------------------------
INSTALLATION (just the first time, it takes about 1 hour)
---------------------------------------------------------
From Drone_pick-place folder:
cd docker_ws
sudo ./build.sh
cd ..
sudo ./run.sh

From the container terminal you just opened:
cd install
./setup.sh
exit


------------------
AFTER INSTALLATION
------------------
TERMINAL 1:
1) From Drone_pick-place folder:
   sudo ./run.sh

2) From the container terminal you just opened:
   Launch matlab (you need internet connection)
   /usr/local/MATLAB/R2025a/bin/matlab

3) Log in

4) From malab run the script /home/ros_workspace/MATLAB/Path_planning/Path_Planning_ss3dROS.m

5) !!!Important: Wait until the "Ready to receive path requests" message appears on the console


TERMINAL 2:
1) From Drone_pick-place folder:
   sudo ./exec.sh

2) From the container terminal you just opened:
   cd /home/ros_workspace/Micro-XRCE-DDS-Agent/build
   make install
   ldconfig /usr/local/lib/
   cd /home/ros_workspace
   source /opt/ros/humble/setup.bash  && source /home/ros_workspace/LI-SLAM/install/setup.bash  && source /home/ros_workspace/drone/install/setup.bash && export GZ_PLUGIN_PATH=${GZ_PLUGIN_PATH}:/home/ros_workspace/Attach_plugin/build

3) ros2 launch scanmatcher lio.launch.py
   NOTE 1: at the first launch the drone can have unexpected behaviour, it's raccomanded to wait until everything is initialized, stop (ctrl + c) and launch again ros2 launch scanmatcher lio.launch.py
   NOTE 2: if your computer doesn't slow down the simulation too much you can enable the last PointCloud2 in the left panel in rviz2 to show map built by the SLAM module

4) !!!Important: Wait until the "Ready for takeoff!" message appears on the terminal

TERMINAL 3:
1) From Drone_pick-place folder:
   sudo ./exec.sh
2) From the container terminal you just opened:
   source /opt/ros/humble/setup.bash  && source /home/ros_workspace/LI-SLAM/install/setup.bash  && source /home/ros_workspace/drone/install/setup.bash && export GZ_PLUGIN_PATH=${GZ_PLUGIN_PATH}:/home/ros_workspace/Attach_plugin/build

3) ros2 run px4_ros_com offboard_control.py


TROUBLESHOOTING:

- the drone doesn't appear in gazebo OR "Ready for takeoff!" message doesn't appear -> ctrl + c and launch again the command ros2 launch scanmatcher lio.launch.py

- after offboard_control.py seems stuck after "Path request sent" message   -> make sure matlab is running Path_Planning_ss3dROS.m
                                                                            -> ctrl + c, then click on matlab console window to wake up matlab and launch again the command ros2 run px4_ros_com offboard_control.py

